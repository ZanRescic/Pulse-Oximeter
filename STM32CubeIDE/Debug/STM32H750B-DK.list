
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002b63c  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000036cc  9002b8e0  9002b8e0  0002f8e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  9002efac  9002efac  00032fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002efd4  9002efd4  00060374  2**0
                  CONTENTS
  6 .ARM          00000008  9002efd4  9002efd4  00032fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002efdc  9002efdc  00060374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002efdc  9002efdc  00032fdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002eff4  9002eff4  00032ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002effc  00033000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9002f164  00033180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90031e64  00035e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90034b64  00038b80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90034c64  00038c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001cd24  24005d80  90034d64  00038d80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  24022aa4  90034d64  00039aa4  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  00060374  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00001554  90200000  90200000  00039000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 000000a8  90201554  90201554  0003a554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 00025d78  902015fc  902015fc  0003a5fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00061000  2**2
                  ALLOC
 22 .debug_line   00079f7a  00000000  00000000  000603a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000007b  00000000  00000000  000da31c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000e642f  00000000  00000000  000da397  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 00018a2d  00000000  00000000  001c07c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003888  00000000  00000000  001d91f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a829a  00000000  00000000  001dca80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 00006be5  00000000  00000000  00384d1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004b176  00000000  00000000  0038b8ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003d6a75  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000ae18  00000000  00000000  003d6b38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 000396e9  00000000  00000000  003e1950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002b8c4 	.word	0x9002b8c4

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002b8c4 	.word	0x9002b8c4

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f007 f927 	bl	90007d40 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f02a fa0d 	bl	9002af10 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f003 f803 	bl	90003b00 <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	9002effc 	.word	0x9002effc
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	24022aa4 	.word	0x24022aa4

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b1c:	4770      	bx	lr
90000b1e:	bf00      	nop

90000b20 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b20:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b22:	f002 f915 	bl	90002d50 <touchgfx_components_init>
    touchgfx_init();
}
90000b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b2a:	f002 b893 	b.w	90002c54 <touchgfx_init>
90000b2e:	bf00      	nop

90000b30 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b30:	f002 b910 	b.w	90002d54 <touchgfx_taskEntry>

90000b34 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b34:	6840      	ldr	r0, [r0, #4]
    }
90000b36:	4770      	bx	lr

90000b38 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b38:	6041      	str	r1, [r0, #4]
    }
90000b3a:	4770      	bx	lr

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b3c:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b40:	4b08      	ldr	r3, [pc, #32]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b42:	4a09      	ldr	r2, [pc, #36]	@ (90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b44:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b48:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b4c:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b50:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b54:	430a      	orrs	r2, r1
90000b56:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b5a:	681a      	ldr	r2, [r3, #0]
90000b5c:	f042 0201 	orr.w	r2, r2, #1
90000b60:	601a      	str	r2, [r3, #0]
}
90000b62:	4770      	bx	lr
90000b64:	e0001000 	.word	0xe0001000
90000b68:	c5acce55 	.word	0xc5acce55

90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b6c:	1a52      	subs	r2, r2, r1
90000b6e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b72:	fbb2 f0f3 	udiv	r0, r2, r3
90000b76:	4770      	bx	lr

90000b78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b78:	4b01      	ldr	r3, [pc, #4]	@ (90000b80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b7a:	6858      	ldr	r0, [r3, #4]
}
90000b7c:	4770      	bx	lr
90000b7e:	bf00      	nop
90000b80:	e0001000 	.word	0xe0001000

90000b84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b84:	4770      	bx	lr
90000b86:	bf00      	nop

90000b88 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b88:	b510      	push	{r4, lr}
90000b8a:	4604      	mov	r4, r0
90000b8c:	210c      	movs	r1, #12
90000b8e:	f029 fad9 	bl	9002a144 <_ZdlPvj>
90000b92:	4620      	mov	r0, r4
90000b94:	bd10      	pop	{r4, pc}
90000b96:	bf00      	nop

90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b98:	6803      	ldr	r3, [r0, #0]
90000b9a:	4a0c      	ldr	r2, [pc, #48]	@ (90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b9c:	691b      	ldr	r3, [r3, #16]
{
90000b9e:	b510      	push	{r4, lr}
90000ba0:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000ba2:	b149      	cbz	r1, 90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ba4:	4293      	cmp	r3, r2
90000ba6:	d10d      	bne.n	90000bc4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000ba8:	4b09      	ldr	r3, [pc, #36]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000baa:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bac:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bae:	6863      	ldr	r3, [r4, #4]
90000bb0:	1a9b      	subs	r3, r3, r2
90000bb2:	4403      	add	r3, r0
90000bb4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bb6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bb8:	4293      	cmp	r3, r2
90000bba:	d105      	bne.n	90000bc8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bbc:	4b04      	ldr	r3, [pc, #16]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bbe:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000bc0:	60a0      	str	r0, [r4, #8]
}
90000bc2:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc4:	4798      	blx	r3
90000bc6:	e7f1      	b.n	90000bac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bc8:	4798      	blx	r3
90000bca:	e7f9      	b.n	90000bc0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bcc:	90000b79 	.word	0x90000b79
90000bd0:	e0001000 	.word	0xe0001000

90000bd4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bd4:	4770      	bx	lr
90000bd6:	bf00      	nop

90000bd8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000bd8:	b500      	push	{lr}
90000bda:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000bdc:	2208      	movs	r2, #8
90000bde:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000be0:	2000      	movs	r0, #0
90000be2:	4669      	mov	r1, sp
    hTS.Width = 480;
90000be4:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c00 <_ZN20STM32TouchController4initEv+0x28>
90000be8:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000bec:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000bf0:	f006 ffb8 	bl	90007b64 <BSP_TS_Init>
}
90000bf4:	b005      	add	sp, #20
90000bf6:	f85d fb04 	ldr.w	pc, [sp], #4
90000bfa:	bf00      	nop
90000bfc:	f3af 8000 	nop.w
90000c00:	000001e0 	.word	0x000001e0
90000c04:	00000110 	.word	0x00000110

90000c08 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c08:	b530      	push	{r4, r5, lr}
90000c0a:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c0c:	2000      	movs	r0, #0
{
90000c0e:	460d      	mov	r5, r1
90000c10:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c12:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c14:	9001      	str	r0, [sp, #4]
90000c16:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c1a:	f007 f831 	bl	90007c80 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c1e:	9801      	ldr	r0, [sp, #4]
90000c20:	b120      	cbz	r0, 90000c2c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c22:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c28:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c2a:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c2c:	b005      	add	sp, #20
90000c2e:	bd30      	pop	{r4, r5, pc}

90000c30 <_ZN20STM32TouchControllerD0Ev>:
90000c30:	b510      	push	{r4, lr}
90000c32:	4604      	mov	r4, r0
90000c34:	2104      	movs	r1, #4
90000c36:	f029 fa85 	bl	9002a144 <_ZdlPvj>
90000c3a:	4620      	mov	r0, r4
90000c3c:	bd10      	pop	{r4, pc}
90000c3e:	bf00      	nop

90000c40 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c40:	2108      	movs	r1, #8
90000c42:	4810      	ldr	r0, [pc, #64]	@ (90000c84 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000c44:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c46:	f007 febd 	bl	900089c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c4a:	2801      	cmp	r0, #1
90000c4c:	d101      	bne.n	90000c52 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c4e:	4b0e      	ldr	r3, [pc, #56]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c50:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c52:	2180      	movs	r1, #128	@ 0x80
90000c54:	480d      	ldr	r0, [pc, #52]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c56:	f007 feb5 	bl	900089c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c5a:	2801      	cmp	r0, #1
90000c5c:	d101      	bne.n	90000c62 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c5e:	4b0a      	ldr	r3, [pc, #40]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c60:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c62:	2140      	movs	r1, #64	@ 0x40
90000c64:	4809      	ldr	r0, [pc, #36]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c66:	f007 fead 	bl	900089c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c6a:	2801      	cmp	r0, #1
90000c6c:	d101      	bne.n	90000c72 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000c6e:	4b06      	ldr	r3, [pc, #24]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c70:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c72:	2140      	movs	r1, #64	@ 0x40
90000c74:	4806      	ldr	r0, [pc, #24]	@ (90000c90 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000c76:	f007 fea5 	bl	900089c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c7a:	2801      	cmp	r0, #1
90000c7c:	d101      	bne.n	90000c82 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
90000c7e:	4b02      	ldr	r3, [pc, #8]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c80:	60d8      	str	r0, [r3, #12]
}
90000c82:	bd08      	pop	{r3, pc}
90000c84:	58021800 	.word	0x58021800
90000c88:	24005d9c 	.word	0x24005d9c
90000c8c:	58020400 	.word	0x58020400
90000c90:	58020000 	.word	0x58020000

90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c94:	2803      	cmp	r0, #3
90000c96:	d827      	bhi.n	90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c98:	e8df f000 	tbb	[pc, r0]
90000c9c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000ca0:	4b12      	ldr	r3, [pc, #72]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000ca2:	2140      	movs	r1, #64	@ 0x40
90000ca4:	4812      	ldr	r0, [pc, #72]	@ (90000cf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000ca6:	68da      	ldr	r2, [r3, #12]
90000ca8:	fab2 f282 	clz	r2, r2
90000cac:	0952      	lsrs	r2, r2, #5
90000cae:	f007 be8f 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000cb2:	4b0e      	ldr	r3, [pc, #56]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cb4:	2140      	movs	r1, #64	@ 0x40
90000cb6:	480f      	ldr	r0, [pc, #60]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cb8:	689a      	ldr	r2, [r3, #8]
90000cba:	fab2 f282 	clz	r2, r2
90000cbe:	0952      	lsrs	r2, r2, #5
90000cc0:	f007 be86 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000cc4:	4b09      	ldr	r3, [pc, #36]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cc6:	2180      	movs	r1, #128	@ 0x80
90000cc8:	480a      	ldr	r0, [pc, #40]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cca:	685a      	ldr	r2, [r3, #4]
90000ccc:	fab2 f282 	clz	r2, r2
90000cd0:	0952      	lsrs	r2, r2, #5
90000cd2:	f007 be7d 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cd6:	4b05      	ldr	r3, [pc, #20]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cd8:	2108      	movs	r1, #8
90000cda:	4807      	ldr	r0, [pc, #28]	@ (90000cf8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000cdc:	681a      	ldr	r2, [r3, #0]
90000cde:	fab2 f282 	clz	r2, r2
90000ce2:	0952      	lsrs	r2, r2, #5
90000ce4:	f007 be74 	b.w	900089d0 <HAL_GPIO_WritePin>
}
90000ce8:	4770      	bx	lr
90000cea:	bf00      	nop
90000cec:	24005d9c 	.word	0x24005d9c
90000cf0:	58020000 	.word	0x58020000
90000cf4:	58020400 	.word	0x58020400
90000cf8:	58021800 	.word	0x58021800

90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cfc:	2803      	cmp	r0, #3
90000cfe:	d827      	bhi.n	90000d50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000d00:	e8df f000 	tbb	[pc, r0]
90000d04:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000d08:	4b12      	ldr	r3, [pc, #72]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d0a:	2140      	movs	r1, #64	@ 0x40
90000d0c:	4812      	ldr	r0, [pc, #72]	@ (90000d58 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000d0e:	68da      	ldr	r2, [r3, #12]
90000d10:	3a00      	subs	r2, #0
90000d12:	bf18      	it	ne
90000d14:	2201      	movne	r2, #1
90000d16:	f007 be5b 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d1a:	4b0e      	ldr	r3, [pc, #56]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d1c:	2140      	movs	r1, #64	@ 0x40
90000d1e:	480f      	ldr	r0, [pc, #60]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d20:	689a      	ldr	r2, [r3, #8]
90000d22:	3a00      	subs	r2, #0
90000d24:	bf18      	it	ne
90000d26:	2201      	movne	r2, #1
90000d28:	f007 be52 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000d2c:	4b09      	ldr	r3, [pc, #36]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d2e:	2180      	movs	r1, #128	@ 0x80
90000d30:	480a      	ldr	r0, [pc, #40]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d32:	685a      	ldr	r2, [r3, #4]
90000d34:	3a00      	subs	r2, #0
90000d36:	bf18      	it	ne
90000d38:	2201      	movne	r2, #1
90000d3a:	f007 be49 	b.w	900089d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d3e:	4b05      	ldr	r3, [pc, #20]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d40:	2108      	movs	r1, #8
90000d42:	4807      	ldr	r0, [pc, #28]	@ (90000d60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d44:	681a      	ldr	r2, [r3, #0]
90000d46:	3a00      	subs	r2, #0
90000d48:	bf18      	it	ne
90000d4a:	2201      	movne	r2, #1
90000d4c:	f007 be40 	b.w	900089d0 <HAL_GPIO_WritePin>
}
90000d50:	4770      	bx	lr
90000d52:	bf00      	nop
90000d54:	24005d9c 	.word	0x24005d9c
90000d58:	58020000 	.word	0x58020000
90000d5c:	58020400 	.word	0x58020400
90000d60:	58021800 	.word	0x58021800

90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d64:	2803      	cmp	r0, #3
90000d66:	d813      	bhi.n	90000d90 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d68:	e8df f000 	tbb	[pc, r0]
90000d6c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d70:	2140      	movs	r1, #64	@ 0x40
90000d72:	4808      	ldr	r0, [pc, #32]	@ (90000d94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d74:	f007 be30 	b.w	900089d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d78:	2140      	movs	r1, #64	@ 0x40
90000d7a:	4807      	ldr	r0, [pc, #28]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d7c:	f007 be2c 	b.w	900089d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d80:	2180      	movs	r1, #128	@ 0x80
90000d82:	4805      	ldr	r0, [pc, #20]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d84:	f007 be28 	b.w	900089d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d88:	2108      	movs	r1, #8
90000d8a:	4804      	ldr	r0, [pc, #16]	@ (90000d9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d8c:	f007 be24 	b.w	900089d8 <HAL_GPIO_TogglePin>
}
90000d90:	4770      	bx	lr
90000d92:	bf00      	nop
90000d94:	58020000 	.word	0x58020000
90000d98:	58020400 	.word	0x58020400
90000d9c:	58021800 	.word	0x58021800

90000da0 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000da0:	2000      	movs	r0, #0
90000da2:	4770      	bx	lr

90000da4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000da4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000da6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000daa:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000dae:	4770      	bx	lr

90000db0 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000db0:	4770      	bx	lr
90000db2:	bf00      	nop

90000db4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000db4:	2000      	movs	r0, #0
90000db6:	4770      	bx	lr

90000db8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000db8:	1e0a      	subs	r2, r1, #0
90000dba:	4b03      	ldr	r3, [pc, #12]	@ (90000dc8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000dbc:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000dbe:	bf18      	it	ne
90000dc0:	2201      	movne	r2, #1
90000dc2:	701a      	strb	r2, [r3, #0]
    }
90000dc4:	4770      	bx	lr
90000dc6:	bf00      	nop
90000dc8:	24021d63 	.word	0x24021d63

90000dcc <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000dcc:	4770      	bx	lr
90000dce:	bf00      	nop

90000dd0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000dd0:	2000      	movs	r0, #0
90000dd2:	4770      	bx	lr

90000dd4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000dd4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000dd6:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000dd8:	b103      	cbz	r3, 90000ddc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000dda:	4718      	bx	r3
        }
    }
90000ddc:	4770      	bx	lr
90000dde:	bf00      	nop

90000de0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000de0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000de4:	4770      	bx	lr
90000de6:	bf00      	nop

90000de8 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000de8:	4770      	bx	lr
90000dea:	bf00      	nop

90000dec <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000dec:	4770      	bx	lr
90000dee:	bf00      	nop

90000df0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000df0:	4770      	bx	lr
90000df2:	bf00      	nop

90000df4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000df4:	b510      	push	{r4, lr}
90000df6:	4604      	mov	r4, r0
        swapFrameBuffers();
90000df8:	f011 fa2c 	bl	90012254 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000dfc:	6823      	ldr	r3, [r4, #0]
90000dfe:	4620      	mov	r0, r4
90000e00:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000e08:	4718      	bx	r3
90000e0a:	bf00      	nop

90000e0c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000e0c:	f002 b8c6 	b.w	90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000e10 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000e10:	f002 b8ca 	b.w	90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000e14 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000e14:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000e16:	f002 f961 	bl	900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000e1a:	4812      	ldr	r0, [pc, #72]	@ (90000e64 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000e1c:	2300      	movs	r3, #0
90000e1e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000e22:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000e26:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e2a:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e2e:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e32:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000e36:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e3a:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e3e:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e40:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e44:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e46:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e4a:	1c5a      	adds	r2, r3, #1
90000e4c:	d1f8      	bne.n	90000e40 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e4e:	f1ac 0c20 	sub.w	ip, ip, #32
90000e52:	f11c 0f20 	cmn.w	ip, #32
90000e56:	d1f0      	bne.n	90000e3a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e5c:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e60:	bd10      	pop	{r4, pc}
90000e62:	bf00      	nop
90000e64:	e000ed00 	.word	0xe000ed00

90000e68 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e68:	f002 b874 	b.w	90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e6c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e6c:	f002 b9ba 	b.w	900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e70 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e70:	f002 b9a4 	b.w	900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e74 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e74:	f002 b878 	b.w	90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e78:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e7a:	4b09      	ldr	r3, [pc, #36]	@ (90000ea0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e7c:	881b      	ldrh	r3, [r3, #0]
90000e7e:	428b      	cmp	r3, r1
90000e80:	d808      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e82:	4b08      	ldr	r3, [pc, #32]	@ (90000ea4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e84:	881b      	ldrh	r3, [r3, #0]
90000e86:	4293      	cmp	r3, r2
90000e88:	d804      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e8a:	4807      	ldr	r0, [pc, #28]	@ (90000ea8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e8c:	4b07      	ldr	r3, [pc, #28]	@ (90000eac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e8e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e90:	801a      	strh	r2, [r3, #0]
    }
90000e92:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e94:	4b06      	ldr	r3, [pc, #24]	@ (90000eb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e96:	21a3      	movs	r1, #163	@ 0xa3
90000e98:	4a06      	ldr	r2, [pc, #24]	@ (90000eb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e9a:	4807      	ldr	r0, [pc, #28]	@ (90000eb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e9c:	f029 fcc8 	bl	9002a830 <__assert_func>
90000ea0:	24021d58 	.word	0x24021d58
90000ea4:	24021d5a 	.word	0x24021d5a
90000ea8:	24021d5e 	.word	0x24021d5e
90000eac:	24021d60 	.word	0x24021d60
90000eb0:	9002b960 	.word	0x9002b960
90000eb4:	9002b9c4 	.word	0x9002b9c4
90000eb8:	9002ba08 	.word	0x9002ba08

90000ebc <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000ebc:	f010 bd16 	b.w	900118ec <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000ec0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000ec0:	f010 bbdc 	b.w	9001167c <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000ec4 <_ZN11TouchGFXHALD0Ev>:
90000ec4:	b510      	push	{r4, lr}
90000ec6:	4604      	mov	r4, r0
90000ec8:	2190      	movs	r1, #144	@ 0x90
90000eca:	f029 f93b 	bl	9002a144 <_ZdlPvj>
90000ece:	4620      	mov	r0, r4
90000ed0:	bd10      	pop	{r4, pc}
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000ed4:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000ed8:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000edc:	4b0b      	ldr	r3, [pc, #44]	@ (90000f0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000ede:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000ee0:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000ee2:	d00b      	beq.n	90000efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ee4:	b94a      	cbnz	r2, 90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ee6:	4a0a      	ldr	r2, [pc, #40]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000ee8:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eec:	4909      	ldr	r1, [pc, #36]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eee:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000ef0:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef4:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000ef6:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef8:	8013      	strh	r3, [r2, #0]
    }
90000efa:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000efc:	2a00      	cmp	r2, #0
90000efe:	d0fc      	beq.n	90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000f00:	4a03      	ldr	r2, [pc, #12]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000f02:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000f06:	4903      	ldr	r1, [pc, #12]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000f08:	e7f1      	b.n	90000eee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000f0a:	bf00      	nop
90000f0c:	24021d5c 	.word	0x24021d5c
90000f10:	24021d5a 	.word	0x24021d5a
90000f14:	24021d58 	.word	0x24021d58

90000f18 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000f18:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000f1a:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000f1e:	b118      	cbz	r0, 90000f28 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000f20:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000f22:	6803      	ldr	r3, [r0, #0]
90000f24:	681b      	ldr	r3, [r3, #0]
90000f26:	4718      	bx	r3
    }
90000f28:	4770      	bx	lr
90000f2a:	bf00      	nop

90000f2c <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000f2c:	6840      	ldr	r0, [r0, #4]
90000f2e:	4a04      	ldr	r2, [pc, #16]	@ (90000f40 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000f30:	6803      	ldr	r3, [r0, #0]
90000f32:	699b      	ldr	r3, [r3, #24]
90000f34:	4293      	cmp	r3, r2
90000f36:	d101      	bne.n	90000f3c <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000f38:	2000      	movs	r0, #0
90000f3a:	4770      	bx	lr
        return dma.getDMAType();
90000f3c:	4718      	bx	r3
90000f3e:	bf00      	nop
90000f40:	90000da1 	.word	0x90000da1

90000f44 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f44:	b538      	push	{r3, r4, r5, lr}
90000f46:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f48:	f002 face 	bl	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f4c:	4a0b      	ldr	r2, [pc, #44]	@ (90000f7c <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f4e:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	490b      	ldr	r1, [pc, #44]	@ (90000f80 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f52:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000f56:	4293      	cmp	r3, r2
90000f58:	d10d      	bne.n	90000f76 <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f5a:	4b0a      	ldr	r3, [pc, #40]	@ (90000f84 <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f5c:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f5e:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f60:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f62:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000f66:	4628      	mov	r0, r5
90000f68:	f7ff fde8 	bl	90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f6c:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f6e:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f70:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f74:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f76:	4620      	mov	r0, r4
90000f78:	4798      	blx	r3
90000f7a:	e7f2      	b.n	90000f62 <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f7c:	90000db9 	.word	0x90000db9
90000f80:	d0000000 	.word	0xd0000000
90000f84:	24021d63 	.word	0x24021d63

90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f88:	b1a9      	cbz	r1, 90000fb6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f8a:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f8c:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f8e:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f90:	bf18      	it	ne
90000f92:	2201      	movne	r2, #1
90000f94:	490c      	ldr	r1, [pc, #48]	@ (90000fc8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f96:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f98:	6802      	ldr	r2, [r0, #0]
90000f9a:	490c      	ldr	r1, [pc, #48]	@ (90000fcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f9c:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000fa0:	428a      	cmp	r2, r1
90000fa2:	d106      	bne.n	90000fb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000fa4:	1e19      	subs	r1, r3, #0
90000fa6:	4a0a      	ldr	r2, [pc, #40]	@ (90000fd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000fa8:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000faa:	bf18      	it	ne
90000fac:	2101      	movne	r1, #1
90000fae:	7011      	strb	r1, [r2, #0]
90000fb0:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000fb2:	4619      	mov	r1, r3
90000fb4:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fb6:	4b07      	ldr	r3, [pc, #28]	@ (90000fd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000fb8:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000fbc:	4a06      	ldr	r2, [pc, #24]	@ (90000fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000fbe:	4807      	ldr	r0, [pc, #28]	@ (90000fdc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000fc0:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fc2:	f029 fc35 	bl	9002a830 <__assert_func>
90000fc6:	bf00      	nop
90000fc8:	24021d62 	.word	0x24021d62
90000fcc:	90000db9 	.word	0x90000db9
90000fd0:	24021d63 	.word	0x24021d63
90000fd4:	9002ba50 	.word	0x9002ba50
90000fd8:	9002ba88 	.word	0x9002ba88
90000fdc:	9002ba08 	.word	0x9002ba08

90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000fe0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000fe2:	6803      	ldr	r3, [r0, #0]
{
90000fe4:	4604      	mov	r4, r0
90000fe6:	4d14      	ldr	r5, [pc, #80]	@ (90001038 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fe8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000fec:	4798      	blx	r3
    enableInterrupts();
90000fee:	6823      	ldr	r3, [r4, #0]
90000ff0:	4620      	mov	r0, r4
90000ff2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000ff4:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000ff6:	f001 f9f1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000ffa:	6823      	ldr	r3, [r4, #0]
90000ffc:	4620      	mov	r0, r4
90000ffe:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001000:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90001002:	2201      	movs	r2, #1
90001004:	2180      	movs	r1, #128	@ 0x80
90001006:	480d      	ldr	r0, [pc, #52]	@ (9000103c <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90001008:	f007 fce2 	bl	900089d0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
9000100c:	2201      	movs	r2, #1
9000100e:	480c      	ldr	r0, [pc, #48]	@ (90001040 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90001010:	4611      	mov	r1, r2
90001012:	f007 fcdd 	bl	900089d0 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90001016:	f001 f9e1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
9000101a:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
9000101c:	4620      	mov	r0, r4
9000101e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001020:	42ab      	cmp	r3, r5
90001022:	d107      	bne.n	90001034 <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90001024:	f011 f916 	bl	90012254 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001028:	6823      	ldr	r3, [r4, #0]
9000102a:	4620      	mov	r0, r4
9000102c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90001030:	4798      	blx	r3
    }
90001032:	e7f0      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001034:	4798      	blx	r3
90001036:	e7ee      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001038:	90000df5 	.word	0x90000df5
9000103c:	58020c00 	.word	0x58020c00
90001040:	58022800 	.word	0x58022800

90001044 <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90001044:	4601      	mov	r1, r0
    {
90001046:	b508      	push	{r3, lr}
        return instance;
90001048:	4b05      	ldr	r3, [pc, #20]	@ (90001060 <IdleTaskHook+0x1c>)
9000104a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
9000104c:	b121      	cbz	r1, 90001058 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000104e:	2101      	movs	r1, #1
90001050:	f011 f91a 	bl	90012288 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90001054:	2001      	movs	r0, #1
90001056:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001058:	f011 f916 	bl	90012288 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
9000105c:	2001      	movs	r0, #1
9000105e:	bd08      	pop	{r3, pc}
90001060:	24021d64 	.word	0x24021d64

90001064 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90001064:	6940      	ldr	r0, [r0, #20]
90001066:	4770      	bx	lr

90001068 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001068:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
9000106c:	4770      	bx	lr
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001070:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90001072:	b10b      	cbz	r3, 90001078 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001074:	2001      	movs	r0, #1
}
90001076:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001078:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9000107a:	3800      	subs	r0, #0
9000107c:	bf18      	it	ne
9000107e:	2001      	movne	r0, #1
90001080:	4770      	bx	lr
90001082:	bf00      	nop

90001084 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001084:	6880      	ldr	r0, [r0, #8]
90001086:	4770      	bx	lr

90001088 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001088:	4770      	bx	lr
9000108a:	bf00      	nop

9000108c <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
9000108c:	3004      	adds	r0, #4
{
9000108e:	468c      	mov	ip, r1
    *data = videoInfo;
90001090:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90001092:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001096:	4770      	bx	lr

90001098 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001098:	4770      	bx	lr
9000109a:	bf00      	nop

9000109c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
9000109c:	b508      	push	{r3, lr}
    assert(0);
9000109e:	4a03      	ldr	r2, [pc, #12]	@ (900010ac <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900010a0:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
900010a4:	4b02      	ldr	r3, [pc, #8]	@ (900010b0 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900010a6:	4803      	ldr	r0, [pc, #12]	@ (900010b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900010a8:	f029 fbc2 	bl	9002a830 <__assert_func>
900010ac:	9002badc 	.word	0x9002badc
900010b0:	9002bad8 	.word	0x9002bad8
900010b4:	9002bb38 	.word	0x9002bb38

900010b8 <_ZN20HardwareMJPEGDecoderD0Ev>:
900010b8:	b510      	push	{r4, lr}
900010ba:	4604      	mov	r4, r0
900010bc:	2148      	movs	r1, #72	@ 0x48
900010be:	f029 f841 	bl	9002a144 <_ZdlPvj>
900010c2:	4620      	mov	r0, r4
900010c4:	bd10      	pop	{r4, pc}
900010c6:	bf00      	nop

900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
900010c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
900010ca:	6803      	ldr	r3, [r0, #0]
900010cc:	2901      	cmp	r1, #1
900010ce:	4d30      	ldr	r5, [pc, #192]	@ (90001190 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
900010d0:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
900010d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010d4:	bf38      	it	cc
900010d6:	2101      	movcc	r1, #1
900010d8:	42ab      	cmp	r3, r5
900010da:	460e      	mov	r6, r1
900010dc:	d13f      	bne.n	9000115e <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
900010de:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
900010e0:	42a9      	cmp	r1, r5
900010e2:	d947      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010e4:	1e6b      	subs	r3, r5, #1
900010e6:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010e8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010ea:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010ee:	b338      	cbz	r0, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010f2:	2b0f      	cmp	r3, #15
900010f4:	d940      	bls.n	90001178 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010f6:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010f8:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010fc:	68db      	ldr	r3, [r3, #12]
900010fe:	4631      	mov	r1, r6
90001100:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001102:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001104:	2210      	movs	r2, #16
90001106:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001108:	6803      	ldr	r3, [r0, #0]
9000110a:	691b      	ldr	r3, [r3, #16]
9000110c:	4798      	blx	r3
9000110e:	b198      	cbz	r0, 90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
90001110:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001112:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
90001114:	b1a3      	cbz	r3, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001116:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90001118:	7a93      	ldrb	r3, [r2, #10]
9000111a:	7a51      	ldrb	r1, [r2, #9]
9000111c:	041b      	lsls	r3, r3, #16
9000111e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90001122:	7a11      	ldrb	r1, [r2, #8]
90001124:	7ad2      	ldrb	r2, [r2, #11]
90001126:	430b      	orrs	r3, r1
90001128:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000112c:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000112e:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001130:	3a04      	subs	r2, #4
90001132:	441a      	add	r2, r3
90001134:	61a2      	str	r2, [r4, #24]
}
90001136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001138:	230d      	movs	r3, #13
9000113a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000113e:	e7e7      	b.n	90001110 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001140:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001144:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001146:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001148:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
9000114a:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000114c:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000114e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001150:	041b      	lsls	r3, r3, #16
90001152:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001156:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001158:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
9000115c:	e7e6      	b.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
9000115e:	4798      	blx	r3
90001160:	4286      	cmp	r6, r0
90001162:	d907      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
90001164:	6823      	ldr	r3, [r4, #0]
90001166:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001168:	42ab      	cmp	r3, r5
9000116a:	d00e      	beq.n	9000118a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
9000116c:	4620      	mov	r0, r4
9000116e:	4798      	blx	r3
90001170:	4605      	mov	r5, r0
90001172:	e7b7      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
90001174:	4635      	mov	r5, r6
90001176:	e7b5      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001178:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000117a:	4b06      	ldr	r3, [pc, #24]	@ (90001194 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
9000117c:	4a06      	ldr	r2, [pc, #24]	@ (90001198 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
9000117e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001180:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001184:	4805      	ldr	r0, [pc, #20]	@ (9000119c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
90001186:	f029 fb53 	bl	9002a830 <__assert_func>
    return videoInfo.number_of_frames;
9000118a:	68a5      	ldr	r5, [r4, #8]
9000118c:	e7aa      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
9000118e:	bf00      	nop
90001190:	90001085 	.word	0x90001085
90001194:	9002bba4 	.word	0x9002bba4
90001198:	9002bbb8 	.word	0x9002bbb8
9000119c:	9002bb38 	.word	0x9002bb38

900011a0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a0:	6943      	ldr	r3, [r0, #20]
{
900011a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a6:	2b00      	cmp	r3, #0
900011a8:	f000 80c1 	beq.w	9000132e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
900011ac:	4605      	mov	r5, r0
    if (reader != 0)
900011ae:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
900011b0:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
900011b2:	2800      	cmp	r0, #0
900011b4:	f000 80a1 	beq.w	900012fa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
900011b8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011ba:	2b07      	cmp	r3, #7
900011bc:	f240 80ac 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011c0:	6803      	ldr	r3, [r0, #0]
900011c2:	4621      	mov	r1, r4
900011c4:	68db      	ldr	r3, [r3, #12]
900011c6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011ca:	2208      	movs	r2, #8
900011cc:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011ce:	6803      	ldr	r3, [r0, #0]
900011d0:	691b      	ldr	r3, [r3, #16]
900011d2:	4798      	blx	r3
900011d4:	2800      	cmp	r0, #0
900011d6:	f000 808c 	beq.w	900012f2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011da:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
900011dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011de:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
900011e0:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011e2:	2800      	cmp	r0, #0
900011e4:	f000 808b 	beq.w	900012fe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011e8:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011ea:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011ec:	18a1      	adds	r1, r4, r2
900011ee:	5ca2      	ldrb	r2, [r4, r2]
900011f0:	788c      	ldrb	r4, [r1, #2]
900011f2:	784e      	ldrb	r6, [r1, #1]
900011f4:	0424      	lsls	r4, r4, #16
900011f6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011fa:	4314      	orrs	r4, r2
900011fc:	78ca      	ldrb	r2, [r1, #3]
900011fe:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90001202:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001204:	f243 0630 	movw	r6, #12336	@ 0x3030
90001208:	e03a      	b.n	90001280 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
9000120a:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000120c:	2b07      	cmp	r3, #7
9000120e:	f240 8083 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001212:	6803      	ldr	r3, [r0, #0]
90001214:	4621      	mov	r1, r4
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000121c:	2208      	movs	r2, #8
9000121e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b908      	cbnz	r0, 9000122c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
9000122c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
9000122e:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90001230:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001232:	2800      	cmp	r0, #0
90001234:	d079      	beq.n	9000132a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
90001236:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001238:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000123a:	18ca      	adds	r2, r1, r3
9000123c:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000123e:	7994      	ldrb	r4, [r2, #6]
90001240:	f892 a005 	ldrb.w	sl, [r2, #5]
90001244:	0424      	lsls	r4, r4, #16
90001246:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000124a:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000124e:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90001252:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001254:	f892 8003 	ldrb.w	r8, [r2, #3]
90001258:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
9000125c:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001260:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001264:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001268:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
9000126c:	f246 3164 	movw	r1, #25444	@ 0x6364
90001270:	42b3      	cmp	r3, r6
90001272:	bf08      	it	eq
90001274:	428a      	cmpeq	r2, r1
90001276:	bf0c      	ite	eq
90001278:	2301      	moveq	r3, #1
9000127a:	2300      	movne	r3, #0
9000127c:	d036      	beq.n	900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000127e:	69ab      	ldr	r3, [r5, #24]
90001280:	441c      	add	r4, r3
90001282:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90001284:	f104 0208 	add.w	r2, r4, #8
90001288:	429a      	cmp	r2, r3
9000128a:	d22a      	bcs.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
9000128c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000128e:	3409      	adds	r4, #9
        frameNumber++;
90001290:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001292:	f024 0401 	bic.w	r4, r4, #1
90001296:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
9000129a:	2800      	cmp	r0, #0
9000129c:	d1b5      	bne.n	9000120a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
9000129e:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
900012a0:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
900012a2:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
900012aa:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
900012ac:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
900012b0:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
900012b4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
900012b8:	188c      	adds	r4, r1, r2
        val |= d[0];
900012ba:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
900012bc:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
900012be:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
900012c2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
900012c6:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900012ca:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
900012ce:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
900012d2:	0424      	lsls	r4, r4, #16
900012d4:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
900012d8:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
900012dc:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
900012e0:	e7c4      	b.n	9000126c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
900012e2:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012e4:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012e6:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012e8:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012ec:	4618      	mov	r0, r3
900012ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012f2:	230d      	movs	r3, #13
900012f4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012f8:	e76f      	b.n	900011da <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012fa:	1d22      	adds	r2, r4, #4
900012fc:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012fe:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
90001300:	18a1      	adds	r1, r4, r2
        val |= d[0];
90001302:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
90001304:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
90001306:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90001308:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
9000130a:	0424      	lsls	r4, r4, #16
9000130c:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
90001310:	4334      	orrs	r4, r6
        val |= d[3] << 24;
90001312:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
90001316:	e774      	b.n	90001202 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001318:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000131a:	4b08      	ldr	r3, [pc, #32]	@ (9000133c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
9000131c:	4a08      	ldr	r2, [pc, #32]	@ (90001340 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
9000131e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001320:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90001324:	4807      	ldr	r0, [pc, #28]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001326:	f029 fa83 	bl	9002a830 <__assert_func>
9000132a:	461c      	mov	r4, r3
9000132c:	e7b7      	b.n	9000129e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000132e:	4b06      	ldr	r3, [pc, #24]	@ (90001348 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90001330:	21f7      	movs	r1, #247	@ 0xf7
90001332:	4a06      	ldr	r2, [pc, #24]	@ (9000134c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
90001334:	4803      	ldr	r0, [pc, #12]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001336:	f029 fa7b 	bl	9002a830 <__assert_func>
9000133a:	bf00      	nop
9000133c:	9002bba4 	.word	0x9002bba4
90001340:	9002bbb8 	.word	0x9002bbb8
90001344:	9002bb38 	.word	0x9002bb38
90001348:	9002bbfc 	.word	0x9002bbfc
9000134c:	9002bc48 	.word	0x9002bc48

90001350 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001350:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001352:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001354:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001356:	4b0e      	ldr	r3, [pc, #56]	@ (90001390 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001358:	2001      	movs	r0, #1
9000135a:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000135c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9000135e:	6023      	str	r3, [r4, #0]
90001360:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001364:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001368:	e9c4 2207 	strd	r2, r2, [r4, #28]
9000136c:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001370:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001374:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001378:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
9000137c:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001380:	f00d f87a 	bl	9000e478 <osSemaphoreNew>
90001384:	4b03      	ldr	r3, [pc, #12]	@ (90001394 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
90001386:	4602      	mov	r2, r0
}
90001388:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000138a:	601a      	str	r2, [r3, #0]
}
9000138c:	bd10      	pop	{r4, pc}
9000138e:	bf00      	nop
90001390:	9002d69c 	.word	0x9002d69c
90001394:	24005df4 	.word	0x24005df4

90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001398:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
9000139c:	2100      	movs	r1, #0
    if (reader != 0)
9000139e:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
900013a0:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900013a2:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900013a4:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
900013a8:	2e00      	cmp	r6, #0
900013aa:	f000 81b3 	beq.w	90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
900013ae:	6b83      	ldr	r3, [r0, #56]	@ 0x38
900013b0:	2b47      	cmp	r3, #71	@ 0x47
900013b2:	f240 8270 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900013b6:	6833      	ldr	r3, [r6, #0]
900013b8:	4630      	mov	r0, r6
900013ba:	68db      	ldr	r3, [r3, #12]
900013bc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900013be:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900013c0:	2248      	movs	r2, #72	@ 0x48
900013c2:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900013c4:	6803      	ldr	r3, [r0, #0]
900013c6:	691b      	ldr	r3, [r3, #16]
900013c8:	4798      	blx	r3
900013ca:	2800      	cmp	r0, #0
900013cc:	f000 80b7 	beq.w	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
900013d0:	2300      	movs	r3, #0
    if (reader != 0)
900013d2:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900013d4:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900013d6:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
900013d8:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
900013da:	2e00      	cmp	r6, #0
900013dc:	f000 819b 	beq.w	90001716 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e0:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013e4:	2204      	movs	r2, #4
900013e6:	49c3      	ldr	r1, [pc, #780]	@ (900016f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e8:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013ec:	4620      	mov	r0, r4
900013ee:	f029 fcdd 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013f2:	2800      	cmp	r0, #0
900013f4:	f040 825f 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013f8:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013fc:	2204      	movs	r2, #4
900013fe:	49be      	ldr	r1, [pc, #760]	@ (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
90001400:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001402:	4448      	add	r0, r9
90001404:	f029 fcd2 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	f040 8268 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
9000140e:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001412:	2204      	movs	r2, #4
90001414:	49b9      	ldr	r1, [pc, #740]	@ (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001416:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000141a:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000141e:	f029 fcc5 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001422:	4680      	mov	r8, r0
90001424:	2800      	cmp	r0, #0
90001426:	f040 8250 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000142a:	7ca3      	ldrb	r3, [r4, #18]
9000142c:	7c62      	ldrb	r2, [r4, #17]
9000142e:	041b      	lsls	r3, r3, #16
90001430:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90001434:	7c22      	ldrb	r2, [r4, #16]
90001436:	4313      	orrs	r3, r2
90001438:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
9000143a:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
9000143e:	f000 8233 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001442:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001446:	2204      	movs	r2, #4
90001448:	49ad      	ldr	r1, [pc, #692]	@ (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000144a:	4448      	add	r0, r9
9000144c:	f029 fcae 	bl	9002adac <strncmp>
    if (compare(offset, "hdrl", 4))
90001450:	2800      	cmp	r0, #0
90001452:	d078      	beq.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001454:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001456:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000145a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000145e:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001460:	445c      	add	r4, fp
    return strncmp(src, str, num);
90001462:	2204      	movs	r2, #4
90001464:	49a7      	ldr	r1, [pc, #668]	@ (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001466:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001468:	f029 fca0 	bl	9002adac <strncmp>
    if (compare(offset, "avih", 4))
9000146c:	2800      	cmp	r0, #0
9000146e:	f000 80e6 	beq.w	9000163e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001472:	2307      	movs	r3, #7
90001474:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001478:	f1ba 0f00 	cmp.w	sl, #0
9000147c:	f000 8190 	beq.w	900017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001480:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001482:	2b0b      	cmp	r3, #11
90001484:	f240 8207 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001488:	f8da 3000 	ldr.w	r3, [sl]
9000148c:	4621      	mov	r1, r4
9000148e:	4650      	mov	r0, sl
90001490:	68db      	ldr	r3, [r3, #12]
90001492:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001494:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001496:	220c      	movs	r2, #12
90001498:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000149a:	6803      	ldr	r3, [r0, #0]
9000149c:	691b      	ldr	r3, [r3, #16]
9000149e:	4798      	blx	r3
900014a0:	2800      	cmp	r0, #0
900014a2:	f000 8121 	beq.w	900016e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014a6:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
900014aa:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
900014ac:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ae:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
900014b2:	f04f 090d 	mov.w	r9, #13
900014b6:	e003      	b.n	900014c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014b8:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
900014bc:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900014be:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014c0:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
900014c4:	2e00      	cmp	r6, #0
900014c6:	d052      	beq.n	9000156e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014c8:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ca:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014cc:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900014ce:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014d0:	1afb      	subs	r3, r7, r3
900014d2:	4418      	add	r0, r3
    return strncmp(src, str, num);
900014d4:	f029 fc6a 	bl	9002adac <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014d8:	2800      	cmp	r0, #0
900014da:	d051      	beq.n	90001580 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900014dc:	f1ba 0f00 	cmp.w	sl, #0
900014e0:	f040 80a8 	bne.w	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014e4:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014e6:	42a3      	cmp	r3, r4
900014e8:	d94d      	bls.n	90001586 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014ea:	3404      	adds	r4, #4
    if (reader != 0)
900014ec:	b386      	cbz	r6, 90001550 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014ee:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014f0:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014f4:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014f6:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014f8:	eb01 0204 	add.w	r2, r1, r4
900014fc:	5d09      	ldrb	r1, [r1, r4]
900014fe:	7894      	ldrb	r4, [r2, #2]
90001500:	7850      	ldrb	r0, [r2, #1]
90001502:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001506:	78d2      	ldrb	r2, [r2, #3]
90001508:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
9000150c:	ea44 0401 	orr.w	r4, r4, r1
90001510:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001514:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001516:	f240 81be 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000151a:	6833      	ldr	r3, [r6, #0]
9000151c:	4621      	mov	r1, r4
9000151e:	4630      	mov	r0, r6
90001520:	68db      	ldr	r3, [r3, #12]
90001522:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001524:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001526:	220c      	movs	r2, #12
90001528:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000152a:	6803      	ldr	r3, [r0, #0]
9000152c:	691b      	ldr	r3, [r3, #16]
9000152e:	4798      	blx	r3
90001530:	2800      	cmp	r0, #0
90001532:	d1c1      	bne.n	900014b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
90001534:	f04f 0a0d 	mov.w	sl, #13
90001538:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
9000153c:	e7be      	b.n	900014bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
9000153e:	230d      	movs	r3, #13
90001540:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001544:	e744      	b.n	900013d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
90001546:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000154a:	f04f 0801 	mov.w	r8, #1
9000154e:	e786      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001550:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
90001552:	1913      	adds	r3, r2, r4
        val |= d[0];
90001554:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
90001556:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001558:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000155a:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
9000155c:	0424      	lsls	r4, r4, #16
9000155e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001562:	4314      	orrs	r4, r2
        val |= d[3] << 24;
90001564:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001568:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000156a:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
9000156e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001570:	2204      	movs	r2, #4
90001572:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001574:	2600      	movs	r6, #0
90001576:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001578:	f029 fc18 	bl	9002adac <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000157c:	2800      	cmp	r0, #0
9000157e:	d1ad      	bne.n	900014dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001580:	f1ba 0f00 	cmp.w	sl, #0
90001584:	d156      	bne.n	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001586:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000158a:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000158c:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000158e:	2e00      	cmp	r6, #0
90001590:	f000 8118 	beq.w	900017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001594:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
90001596:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001598:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000159c:	f104 0e02 	add.w	lr, r4, #2
900015a0:	f104 0c01 	add.w	ip, r4, #1
900015a4:	f811 8004 	ldrb.w	r8, [r1, r4]
900015a8:	1ce0      	adds	r0, r4, #3
900015aa:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
900015ae:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015b0:	f811 900c 	ldrb.w	r9, [r1, ip]
900015b4:	ea4f 4303 	mov.w	r3, r3, lsl #16
900015b8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900015bc:	ea43 0308 	orr.w	r3, r3, r8
900015c0:	f811 8000 	ldrb.w	r8, [r1, r0]
900015c4:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015c8:	443b      	add	r3, r7
900015ca:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015cc:	f811 300e 	ldrb.w	r3, [r1, lr]
900015d0:	f811 e00c 	ldrb.w	lr, [r1, ip]
900015d4:	f811 c004 	ldrb.w	ip, [r1, r4]
900015d8:	ea4f 4403 	mov.w	r4, r3, lsl #16
900015dc:	5c09      	ldrb	r1, [r1, r0]
900015de:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
900015e2:	ea44 040c 	orr.w	r4, r4, ip
900015e6:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015ea:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015ec:	f240 8153 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015f0:	6833      	ldr	r3, [r6, #0]
900015f2:	4621      	mov	r1, r4
900015f4:	4630      	mov	r0, r6
900015f6:	68db      	ldr	r3, [r3, #12]
900015f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015fa:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015fc:	2204      	movs	r2, #4
900015fe:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001600:	6803      	ldr	r3, [r0, #0]
90001602:	691b      	ldr	r3, [r3, #16]
90001604:	4798      	blx	r3
90001606:	2800      	cmp	r0, #0
90001608:	f000 80cd 	beq.w	900017a6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
9000160c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000160e:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001610:	2b00      	cmp	r3, #0
90001612:	f000 816e 	beq.w	900018f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001616:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001618:	2204      	movs	r2, #4
9000161a:	493b      	ldr	r1, [pc, #236]	@ (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
9000161c:	f029 fbc6 	bl	9002adac <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001620:	2800      	cmp	r0, #0
90001622:	f040 80ca 	bne.w	900017ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
90001626:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001628:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000162a:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
9000162c:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
9000162e:	622b      	str	r3, [r5, #32]
}
90001630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001634:	230a      	movs	r3, #10
90001636:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000163a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
9000163e:	f1b8 0f00 	cmp.w	r8, #0
90001642:	f43f af19 	beq.w	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001646:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
9000164a:	f1ba 0f00 	cmp.w	sl, #0
9000164e:	f000 80d4 	beq.w	900017fa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
90001652:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001654:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001658:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000165a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000165c:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	f812 8001 	ldrb.w	r8, [r2, r1]
90001664:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001668:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
9000166c:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001670:	4438      	add	r0, r7
90001672:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001674:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001678:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000167a:	f89e 7001 	ldrb.w	r7, [lr, #1]
9000167e:	041b      	lsls	r3, r3, #16
90001680:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001684:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001688:	ea43 0308 	orr.w	r3, r3, r8
9000168c:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001690:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001692:	fbac c303 	umull	ip, r3, ip, r3
90001696:	099b      	lsrs	r3, r3, #6
90001698:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000169a:	78bb      	ldrb	r3, [r7, #2]
9000169c:	f897 e001 	ldrb.w	lr, [r7, #1]
900016a0:	041b      	lsls	r3, r3, #16
900016a2:	f812 c000 	ldrb.w	ip, [r2, r0]
900016a6:	78ff      	ldrb	r7, [r7, #3]
900016a8:	1850      	adds	r0, r2, r1
900016aa:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900016ae:	ea43 030c 	orr.w	r3, r3, ip
900016b2:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
900016b6:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016b8:	7883      	ldrb	r3, [r0, #2]
900016ba:	7847      	ldrb	r7, [r0, #1]
900016bc:	041b      	lsls	r3, r3, #16
900016be:	5c51      	ldrb	r1, [r2, r1]
900016c0:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
900016c4:	430b      	orrs	r3, r1
900016c6:	78c1      	ldrb	r1, [r0, #3]
900016c8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900016cc:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
900016ce:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016d0:	788b      	ldrb	r3, [r1, #2]
900016d2:	7848      	ldrb	r0, [r1, #1]
900016d4:	041b      	lsls	r3, r3, #16
900016d6:	5d92      	ldrb	r2, [r2, r6]
900016d8:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900016dc:	4313      	orrs	r3, r2
900016de:	78ca      	ldrb	r2, [r1, #3]
900016e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016e4:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016e6:	e6cb      	b.n	90001480 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016e8:	230d      	movs	r3, #13
900016ea:	469a      	mov	sl, r3
900016ec:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016f0:	e6db      	b.n	900014aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016f2:	bf00      	nop
900016f4:	9002bc7c 	.word	0x9002bc7c
900016f8:	9002bd34 	.word	0x9002bd34
900016fc:	9002bd2c 	.word	0x9002bd2c
90001700:	9002bd00 	.word	0x9002bd00
90001704:	9002bd14 	.word	0x9002bd14
90001708:	9002bd24 	.word	0x9002bd24
9000170c:	9002bd1c 	.word	0x9002bd1c
90001710:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90001714:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90001716:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
9000171a:	2204      	movs	r2, #4
9000171c:	4976      	ldr	r1, [pc, #472]	@ (900018f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000171e:	eb09 0007 	add.w	r0, r9, r7
90001722:	f029 fb43 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001726:	2800      	cmp	r0, #0
90001728:	f040 80c5 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
9000172c:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001730:	2204      	movs	r2, #4
90001732:	4972      	ldr	r1, [pc, #456]	@ (900018fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
90001734:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001736:	4448      	add	r0, r9
90001738:	f029 fb38 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000173c:	2800      	cmp	r0, #0
9000173e:	f040 80ce 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
90001742:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001746:	2204      	movs	r2, #4
90001748:	496d      	ldr	r1, [pc, #436]	@ (90001900 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
9000174a:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000174e:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
90001752:	f029 fb2b 	bl	9002adac <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001756:	4680      	mov	r8, r0
90001758:	2800      	cmp	r0, #0
9000175a:	f040 80b6 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
9000175e:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001762:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
90001766:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
9000176a:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
9000176c:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000176e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001770:	0424      	lsls	r4, r4, #16
90001772:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001776:	4314      	orrs	r4, r2
    assert(aviListSize);
90001778:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000177c:	f000 8094 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001780:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001784:	2204      	movs	r2, #4
90001786:	495f      	ldr	r1, [pc, #380]	@ (90001904 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001788:	4448      	add	r0, r9
9000178a:	f029 fb0f 	bl	9002adac <strncmp>
    if (compare(offset, "hdrl", 4))
9000178e:	b970      	cbnz	r0, 900017ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001790:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001794:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001798:	4448      	add	r0, r9
9000179a:	f04f 0a00 	mov.w	sl, #0
9000179e:	e65f      	b.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017a0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
900017a4:	e683      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
900017a6:	230d      	movs	r3, #13
900017a8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900017ac:	e72e      	b.n	9000160c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017ae:	2306      	movs	r3, #6
    offset += 4;
900017b0:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017b4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
900017b8:	e7ee      	b.n	90001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900017ba:	230b      	movs	r3, #11
900017bc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900017c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900017c4:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
900017c6:	1902      	adds	r2, r0, r4
        val |= d[0];
900017c8:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017ca:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017cc:	7893      	ldrb	r3, [r2, #2]
900017ce:	041b      	lsls	r3, r3, #16
900017d0:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900017d4:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900017d6:	78d1      	ldrb	r1, [r2, #3]
900017d8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900017dc:	443b      	add	r3, r7
900017de:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
900017e0:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017e2:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017e4:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017e6:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017e8:	0424      	lsls	r4, r4, #16
900017ea:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017ee:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017f0:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017f4:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017f6:	4420      	add	r0, r4
900017f8:	e70e      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017fa:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017fc:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001800:	f8df e124 	ldr.w	lr, [pc, #292]	@ 90001928 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
90001804:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
90001808:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
9000180c:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
90001810:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
90001814:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
90001816:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
9000181a:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
9000181e:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
90001822:	041b      	lsls	r3, r3, #16
90001824:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001828:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
9000182c:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
90001830:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001834:	fbae e303 	umull	lr, r3, lr, r3
90001838:	099b      	lsrs	r3, r3, #6
9000183a:	606b      	str	r3, [r5, #4]
        val |= d[0];
9000183c:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
90001840:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001844:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001846:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001848:	041b      	lsls	r3, r3, #16
9000184a:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000184e:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
90001852:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
90001856:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
9000185a:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
9000185c:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000185e:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
90001862:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001866:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
9000186a:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
9000186e:	041b      	lsls	r3, r3, #16
90001870:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001874:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001878:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
9000187c:	60eb      	str	r3, [r5, #12]
        val |= d[0];
9000187e:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001880:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001882:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001884:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001886:	041b      	lsls	r3, r3, #16
90001888:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000188c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000188e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
90001892:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90001894:	e60b      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001896:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001898:	4b1b      	ldr	r3, [pc, #108]	@ (90001908 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
9000189a:	4a1c      	ldr	r2, [pc, #112]	@ (9000190c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
9000189c:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000189e:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900018a2:	481b      	ldr	r0, [pc, #108]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a4:	f028 ffc4 	bl	9002a830 <__assert_func>
    assert(aviListSize);
900018a8:	4b1a      	ldr	r3, [pc, #104]	@ (90001914 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900018aa:	f44f 71aa 	mov.w	r1, #340	@ 0x154
900018ae:	4a1a      	ldr	r2, [pc, #104]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018b0:	4817      	ldr	r0, [pc, #92]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018b2:	f028 ffbd 	bl	9002a830 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900018b6:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900018b8:	4b18      	ldr	r3, [pc, #96]	@ (9000191c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
900018ba:	4a17      	ldr	r2, [pc, #92]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018bc:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
900018c0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
900018c4:	4812      	ldr	r0, [pc, #72]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018c6:	f028 ffb3 	bl	9002a830 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900018cc:	4b14      	ldr	r3, [pc, #80]	@ (90001920 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
900018ce:	4a12      	ldr	r2, [pc, #72]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018d0:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018d4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
900018d8:	480d      	ldr	r0, [pc, #52]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018da:	f028 ffa9 	bl	9002a830 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900018e0:	4b10      	ldr	r3, [pc, #64]	@ (90001924 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
900018e2:	4a0d      	ldr	r2, [pc, #52]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018e4:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018e8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018ec:	4808      	ldr	r0, [pc, #32]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018ee:	f028 ff9f 	bl	9002a830 <__assert_func>
        src = (const char*)movieData + offset;
900018f2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018f4:	4420      	add	r0, r4
900018f6:	e68f      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018f8:	9002bc7c 	.word	0x9002bc7c
900018fc:	9002bd34 	.word	0x9002bd34
90001900:	9002bd2c 	.word	0x9002bd2c
90001904:	9002bd00 	.word	0x9002bd00
90001908:	9002bba4 	.word	0x9002bba4
9000190c:	9002bbb8 	.word	0x9002bbb8
90001910:	9002bb38 	.word	0x9002bb38
90001914:	9002bd08 	.word	0x9002bd08
90001918:	9002bca0 	.word	0x9002bca0
9000191c:	9002bc84 	.word	0x9002bc84
90001920:	9002bce8 	.word	0x9002bce8
90001924:	9002bcd0 	.word	0x9002bcd0
90001928:	10624dd3 	.word	0x10624dd3

9000192c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000192c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000192e:	2400      	movs	r4, #0
    movieLength = length;
90001930:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
90001934:	6304      	str	r4, [r0, #48]	@ 0x30
}
90001936:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000193a:	f7ff bd2d 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000193e:	bf00      	nop

90001940 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001940:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001942:	680b      	ldr	r3, [r1, #0]
{
90001944:	4604      	mov	r4, r0
    movieData = 0;
90001946:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001948:	4608      	mov	r0, r1
9000194a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000194c:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001950:	4798      	blx	r3
90001952:	4603      	mov	r3, r0
    readVideoHeader();
90001954:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001956:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000195c:	f7ff bd1c 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001960 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001960:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
90001962:	4b1f      	ldr	r3, [pc, #124]	@ (900019e0 <JPEG_Decode_DMA+0x80>)
90001964:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
90001966:	4d1f      	ldr	r5, [pc, #124]	@ (900019e4 <JPEG_Decode_DMA+0x84>)
    {
90001968:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
9000196a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
9000196c:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
9000196e:	4b1e      	ldr	r3, [pc, #120]	@ (900019e8 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
90001970:	4d1e      	ldr	r5, [pc, #120]	@ (900019ec <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
90001972:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001974:	4e1e      	ldr	r6, [pc, #120]	@ (900019f0 <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
90001976:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001978:	4d1e      	ldr	r5, [pc, #120]	@ (900019f4 <JPEG_Decode_DMA+0x94>)
9000197a:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000197c:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000197e:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90001984:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001986:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
9000198a:	4e1b      	ldr	r6, [pc, #108]	@ (900019f8 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000198c:	ea4f 15c5 	mov.w	r5, r5, lsl #7
90001990:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001994:	bf18      	it	ne
90001996:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000199a:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
9000199c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000199e:	4e17      	ldr	r6, [pc, #92]	@ (900019fc <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019a0:	4d17      	ldr	r5, [pc, #92]	@ (90001a00 <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
900019a2:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019a4:	4e17      	ldr	r6, [pc, #92]	@ (90001a04 <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019a6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
900019aa:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019ae:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b0:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b2:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b4:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b6:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019ba:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
900019bc:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019be:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c0:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019c2:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
900019c4:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
900019ca:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
900019ce:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019d2:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019d6:	f008 fad9 	bl	90009f8c <HAL_JPEG_Decode_DMA>

        return 0;
    }
900019da:	4620      	mov	r0, r4
900019dc:	b002      	add	sp, #8
900019de:	bd70      	pop	{r4, r5, r6, pc}
900019e0:	24006010 	.word	0x24006010
900019e4:	24005df0 	.word	0x24005df0
900019e8:	24006004 	.word	0x24006004
900019ec:	24005df8 	.word	0x24005df8
900019f0:	24005dac 	.word	0x24005dac
900019f4:	24006000 	.word	0x24006000
900019f8:	24006020 	.word	0x24006020
900019fc:	24006018 	.word	0x24006018
90001a00:	24000004 	.word	0x24000004
90001a04:	2400601c 	.word	0x2400601c

90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001a08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001a0c:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001a0e:	2402      	movs	r4, #2
90001a10:	483e      	ldr	r0, [pc, #248]	@ (90001b0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
90001a12:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a14:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001a16:	0725      	lsls	r5, r4, #28
90001a18:	d002      	beq.n	90001a20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001a1a:	f024 040f 	bic.w	r4, r4, #15
90001a1e:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a20:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a22:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
90001a24:	4d3a      	ldr	r5, [pc, #232]	@ (90001b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a26:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001a28:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
90001a2c:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90001a30:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a32:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a34:	4f37      	ldr	r7, [pc, #220]	@ (90001b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a36:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3a:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
90001a3e:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a42:	bf18      	it	ne
90001a44:	f1c4 0410 	rsbne	r4, r4, #16
90001a48:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
90001a4a:	4833      	ldr	r0, [pc, #204]	@ (90001b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a4c:	4c33      	ldr	r4, [pc, #204]	@ (90001b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a4e:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a50:	4833      	ldr	r0, [pc, #204]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a52:	f7ff ff85 	bl	90001960 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a56:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a58:	4e32      	ldr	r6, [pc, #200]	@ (90001b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a5a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a5c:	f8da 3000 	ldr.w	r3, [sl]
90001a60:	b10b      	cbz	r3, 90001a66 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
90001a62:	6833      	ldr	r3, [r6, #0]
90001a64:	bb6b      	cbnz	r3, 90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a66:	6828      	ldr	r0, [r5, #0]
90001a68:	7a03      	ldrb	r3, [r0, #8]
90001a6a:	b93b      	cbnz	r3, 90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a6c:	4b2e      	ldr	r3, [pc, #184]	@ (90001b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a6e:	681b      	ldr	r3, [r3, #0]
90001a70:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a74:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a78:	2b01      	cmp	r3, #1
90001a7a:	d03b      	beq.n	90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a7c:	683b      	ldr	r3, [r7, #0]
90001a7e:	2b01      	cmp	r3, #1
90001a80:	d00d      	beq.n	90001a9e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a82:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a84:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a86:	6823      	ldr	r3, [r4, #0]
90001a88:	2b02      	cmp	r3, #2
90001a8a:	d024      	beq.n	90001ad6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a8c:	6823      	ldr	r3, [r4, #0]
90001a8e:	2b01      	cmp	r3, #1
90001a90:	d1e4      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a92:	2300      	movs	r3, #0
90001a94:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a98:	6033      	str	r3, [r6, #0]
}
90001a9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a9e:	f8d9 3000 	ldr.w	r3, [r9]
90001aa2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001aa6:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001aaa:	2b00      	cmp	r3, #0
90001aac:	d1e9      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001aae:	f8da 3000 	ldr.w	r3, [sl]
90001ab2:	2b00      	cmp	r3, #0
90001ab4:	d1e5      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001ab6:	2102      	movs	r1, #2
90001ab8:	4819      	ldr	r0, [pc, #100]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001aba:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001abc:	f008 fc16 	bl	9000a2ec <HAL_JPEG_Resume>
90001ac0:	e7df      	b.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ac2:	4817      	ldr	r0, [pc, #92]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001ac4:	f009 f9dc 	bl	9000ae80 <HAL_JPEG_GetState>
90001ac8:	2804      	cmp	r0, #4
90001aca:	d01a      	beq.n	90001b02 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001acc:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001ace:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001ad0:	6823      	ldr	r3, [r4, #0]
90001ad2:	2b02      	cmp	r3, #2
90001ad4:	d1da      	bne.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001ad6:	4b15      	ldr	r3, [pc, #84]	@ (90001b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001ad8:	f04f 31ff 	mov.w	r1, #4294967295
90001adc:	6818      	ldr	r0, [r3, #0]
90001ade:	f00c fd21 	bl	9000e524 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001ae2:	6823      	ldr	r3, [r4, #0]
90001ae4:	2b01      	cmp	r3, #1
90001ae6:	d1b9      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001ae8:	2300      	movs	r3, #0
90001aea:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aee:	6033      	str	r3, [r6, #0]
}
90001af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001af4:	6833      	ldr	r3, [r6, #0]
90001af6:	2b00      	cmp	r3, #0
90001af8:	d1c0      	bne.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001afa:	6803      	ldr	r3, [r0, #0]
90001afc:	691b      	ldr	r3, [r3, #16]
90001afe:	4798      	blx	r3
90001b00:	e7bc      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001b02:	4807      	ldr	r0, [pc, #28]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001b04:	f008 fac0 	bl	9000a088 <HAL_JPEG_Abort>
90001b08:	e7e0      	b.n	90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001b0a:	bf00      	nop
90001b0c:	24005dac 	.word	0x24005dac
90001b10:	24006008 	.word	0x24006008
90001b14:	24006010 	.word	0x24006010
90001b18:	24006024 	.word	0x24006024
90001b1c:	2400600c 	.word	0x2400600c
90001b20:	24007aac 	.word	0x24007aac
90001b24:	24005dec 	.word	0x24005dec
90001b28:	24005df0 	.word	0x24005df0
90001b2c:	24005df4 	.word	0x24005df4
90001b30:	24006014 	.word	0x24006014
90001b34:	24006004 	.word	0x24006004
90001b38:	24000004 	.word	0x24000004

90001b3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b3c:	6943      	ldr	r3, [r0, #20]
{
90001b3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b42:	2b00      	cmp	r3, #0
90001b44:	f000 80ad 	beq.w	90001ca2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b48:	4604      	mov	r4, r0
    if (reader != 0)
90001b4a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b4c:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b4e:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b50:	2800      	cmp	r0, #0
90001b52:	d05f      	beq.n	90001c14 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b54:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b56:	2b07      	cmp	r3, #7
90001b58:	f240 80a9 	bls.w	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b5c:	6803      	ldr	r3, [r0, #0]
90001b5e:	4629      	mov	r1, r5
90001b60:	68db      	ldr	r3, [r3, #12]
90001b62:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b64:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b66:	2208      	movs	r2, #8
90001b68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b6a:	6803      	ldr	r3, [r0, #0]
90001b6c:	691b      	ldr	r3, [r3, #16]
90001b6e:	4798      	blx	r3
90001b70:	2800      	cmp	r0, #0
90001b72:	d04a      	beq.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b74:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b76:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b78:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b7c:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b7e:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b80:	2800      	cmp	r0, #0
90001b82:	d046      	beq.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b86:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b8a:	1b52      	subs	r2, r2, r5
90001b8c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b8e:	eb03 070c 	add.w	r7, r3, ip
90001b92:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b96:	eb03 0805 	add.w	r8, r3, r5
90001b9a:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b9e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ba2:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001ba6:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001baa:	78bd      	ldrb	r5, [r7, #2]
90001bac:	78ff      	ldrb	r7, [r7, #3]
90001bae:	042d      	lsls	r5, r5, #16
90001bb0:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001bb4:	ea45 050e 	orr.w	r5, r5, lr
90001bb8:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001bbc:	189f      	adds	r7, r3, r2
90001bbe:	5c9b      	ldrb	r3, [r3, r2]
90001bc0:	787a      	ldrb	r2, [r7, #1]
90001bc2:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001bc6:	eb01 0e05 	add.w	lr, r1, r5
90001bca:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001bcc:	f10e 0208 	add.w	r2, lr, #8
90001bd0:	429a      	cmp	r2, r3
90001bd2:	d213      	bcs.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001bd4:	f243 0330 	movw	r3, #12336	@ 0x3030
90001bd8:	459c      	cmp	ip, r3
90001bda:	d138      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bdc:	f246 3364 	movw	r3, #25444	@ 0x6364
90001be0:	429f      	cmp	r7, r3
90001be2:	d134      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001be4:	2d00      	cmp	r5, #0
90001be6:	d136      	bne.n	90001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001be8:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bec:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bf0:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bf2:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bf4:	d002      	beq.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bf6:	2001      	movs	r0, #1
}
90001bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bfc:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bfe:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c00:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001c02:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001c0a:	230d      	movs	r3, #13
90001c0c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001c10:	e7b0      	b.n	90001b74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001c12:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001c14:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001c16:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001c18:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001c1a:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001c1c:	195a      	adds	r2, r3, r5
        val |= d[0];
90001c1e:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001c22:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001c24:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001c26:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001c28:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001c2c:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001c2e:	181a      	adds	r2, r3, r0
        val |= d[0];
90001c30:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001c32:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001c36:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001c3a:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001c3c:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001c3e:	042d      	lsls	r5, r5, #16
90001c40:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c44:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c46:	2000      	movs	r0, #0
90001c48:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c4c:	e7bb      	b.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c4e:	2d00      	cmp	r5, #0
90001c50:	bf18      	it	ne
90001c52:	4672      	movne	r2, lr
90001c54:	e7c8      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c56:	f101 0708 	add.w	r7, r1, #8
90001c5a:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c5c:	b1f0      	cbz	r0, 90001c9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c5e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c60:	429d      	cmp	r5, r3
90001c62:	d824      	bhi.n	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c64:	6803      	ldr	r3, [r0, #0]
90001c66:	4639      	mov	r1, r7
90001c68:	68db      	ldr	r3, [r3, #12]
90001c6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c6c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c6e:	462a      	mov	r2, r5
90001c70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c72:	6803      	ldr	r3, [r0, #0]
90001c74:	691b      	ldr	r3, [r3, #16]
90001c76:	4798      	blx	r3
90001c78:	b910      	cbnz	r0, 90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c7a:	230d      	movs	r3, #13
90001c7c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c82:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c84:	b126      	cbz	r6, 90001c90 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c86:	4633      	mov	r3, r6
90001c88:	462a      	mov	r2, r5
90001c8a:	4620      	mov	r0, r4
90001c8c:	f7ff febc 	bl	90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c90:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c94:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c96:	442a      	add	r2, r5
            frameNumber++;
90001c98:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c9a:	e7a5      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c9c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c9e:	4439      	add	r1, r7
90001ca0:	e7f0      	b.n	90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ca2:	4b07      	ldr	r3, [pc, #28]	@ (90001cc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001ca4:	21c3      	movs	r1, #195	@ 0xc3
90001ca6:	4a07      	ldr	r2, [pc, #28]	@ (90001cc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001ca8:	4807      	ldr	r0, [pc, #28]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001caa:	f028 fdc1 	bl	9002a830 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cae:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001cb0:	4b06      	ldr	r3, [pc, #24]	@ (90001ccc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001cb2:	4a07      	ldr	r2, [pc, #28]	@ (90001cd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001cb4:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cb6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001cba:	4803      	ldr	r0, [pc, #12]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001cbc:	f028 fdb8 	bl	9002a830 <__assert_func>
90001cc0:	9002bbfc 	.word	0x9002bbfc
90001cc4:	9002bd3c 	.word	0x9002bd3c
90001cc8:	9002bb38 	.word	0x9002bb38
90001ccc:	9002bba4 	.word	0x9002bba4
90001cd0:	9002bbb8 	.word	0x9002bbb8

90001cd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001cd8:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001cda:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001cde:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001ce0:	460e      	mov	r6, r1
90001ce2:	4690      	mov	r8, r2
90001ce4:	461f      	mov	r7, r3
    if (reader != 0)
90001ce6:	2800      	cmp	r0, #0
90001ce8:	f000 80f9 	beq.w	90001ede <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001cec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001cee:	2b07      	cmp	r3, #7
90001cf0:	f240 810a 	bls.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cf4:	6803      	ldr	r3, [r0, #0]
90001cf6:	4649      	mov	r1, r9
90001cf8:	68db      	ldr	r3, [r3, #12]
90001cfa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cfc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cfe:	2208      	movs	r2, #8
90001d00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d02:	6803      	ldr	r3, [r0, #0]
90001d04:	691b      	ldr	r3, [r3, #16]
90001d06:	4798      	blx	r3
90001d08:	2800      	cmp	r0, #0
90001d0a:	f000 80b3 	beq.w	90001e74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d0e:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001d10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d12:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001d14:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001d18:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001d1c:	2800      	cmp	r0, #0
90001d1e:	f000 80fc 	beq.w	90001f1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001d22:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d26:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001d28:	1899      	adds	r1, r3, r2
90001d2a:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001d2c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d2e:	f891 9002 	ldrb.w	r9, [r1, #2]
90001d32:	f891 c001 	ldrb.w	ip, [r1, #1]
90001d36:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001d3a:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001d3e:	ea49 0902 	orr.w	r9, r9, r2
90001d42:	78ca      	ldrb	r2, [r1, #3]
90001d44:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d48:	454b      	cmp	r3, r9
90001d4a:	f0c0 80dd 	bcc.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001d4e:	6803      	ldr	r3, [r0, #0]
90001d50:	4629      	mov	r1, r5
90001d52:	68db      	ldr	r3, [r3, #12]
90001d54:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d56:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d58:	464a      	mov	r2, r9
90001d5a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d5c:	6803      	ldr	r3, [r0, #0]
90001d5e:	691b      	ldr	r3, [r3, #16]
90001d60:	4798      	blx	r3
90001d62:	2800      	cmp	r0, #0
90001d64:	f000 8082 	beq.w	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d6a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d6c:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d70:	2302      	movs	r3, #2
90001d72:	486b      	ldr	r0, [pc, #428]	@ (90001f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d74:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d78:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d7a:	d172      	bne.n	90001e62 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d7c:	4662      	mov	r2, ip
90001d7e:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d80:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d82:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d84:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d86:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d8a:	60c3      	str	r3, [r0, #12]
90001d8c:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d8e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d92:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d94:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d96:	6143      	str	r3, [r0, #20]
90001d98:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d9a:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d9e:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001da0:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001da2:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da4:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001da6:	bf28      	it	cs
90001da8:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001daa:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dae:	f002 020f 	and.w	r2, r2, #15
90001db2:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001f54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001db6:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001dba:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dbc:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbe:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dc0:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001dc2:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dc6:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001f58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dca:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001dcc:	eba3 030c 	sub.w	r3, r3, ip
90001dd0:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dd2:	6923      	ldr	r3, [r4, #16]
90001dd4:	429e      	cmp	r6, r3
90001dd6:	bf28      	it	cs
90001dd8:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dda:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dde:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001de2:	bf18      	it	ne
90001de4:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001de8:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dea:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dec:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001df0:	4b4c      	ldr	r3, [pc, #304]	@ (90001f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001df2:	bf18      	it	ne
90001df4:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001df8:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001dfa:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001dfc:	4b4a      	ldr	r3, [pc, #296]	@ (90001f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dfe:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001e00:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001e04:	4643      	mov	r3, r8
90001e06:	4849      	ldr	r0, [pc, #292]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e08:	f7ff fdaa 	bl	90001960 <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001e0c:	4d48      	ldr	r5, [pc, #288]	@ (90001f30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001e0e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001e10:	4e48      	ldr	r6, [pc, #288]	@ (90001f34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001e12:	4c49      	ldr	r4, [pc, #292]	@ (90001f38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e14:	4f49      	ldr	r7, [pc, #292]	@ (90001f3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001e16:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001f5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001e1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001e1c:	f8da 3000 	ldr.w	r3, [sl]
90001e20:	b113      	cbz	r3, 90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001e22:	6833      	ldr	r3, [r6, #0]
90001e24:	2b00      	cmp	r3, #0
90001e26:	d13b      	bne.n	90001ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e28:	6828      	ldr	r0, [r5, #0]
90001e2a:	7a03      	ldrb	r3, [r0, #8]
90001e2c:	b93b      	cbnz	r3, 90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001e2e:	4b44      	ldr	r3, [pc, #272]	@ (90001f40 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001e30:	681b      	ldr	r3, [r3, #0]
90001e32:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e36:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3a:	2b01      	cmp	r3, #1
90001e3c:	d044      	beq.n	90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e3e:	683b      	ldr	r3, [r7, #0]
90001e40:	2b01      	cmp	r3, #1
90001e42:	d01b      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001e44:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e46:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e48:	6823      	ldr	r3, [r4, #0]
90001e4a:	2b02      	cmp	r3, #2
90001e4c:	d032      	beq.n	90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001e4e:	6823      	ldr	r3, [r4, #0]
90001e50:	2b01      	cmp	r3, #1
90001e52:	d1e3      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001e54:	2300      	movs	r3, #0
}
90001e56:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e58:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e5c:	6033      	str	r3, [r6, #0]
}
90001e5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e62:	f02c 030f 	bic.w	r3, ip, #15
90001e66:	3310      	adds	r3, #16
90001e68:	461a      	mov	r2, r3
90001e6a:	e789      	b.n	90001d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e6c:	230d      	movs	r3, #13
90001e6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e72:	e779      	b.n	90001d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e74:	230d      	movs	r3, #13
90001e76:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e7a:	e748      	b.n	90001d0e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e7c:	f8d9 3000 	ldr.w	r3, [r9]
90001e80:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e84:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e88:	2b00      	cmp	r3, #0
90001e8a:	d1db      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e8c:	f8da 3000 	ldr.w	r3, [sl]
90001e90:	2b00      	cmp	r3, #0
90001e92:	d1d7      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e94:	2102      	movs	r1, #2
90001e96:	4825      	ldr	r0, [pc, #148]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e98:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e9a:	f008 fa27 	bl	9000a2ec <HAL_JPEG_Resume>
90001e9e:	e7d1      	b.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ea0:	4822      	ldr	r0, [pc, #136]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ea2:	f008 ffed 	bl	9000ae80 <HAL_JPEG_GetState>
90001ea6:	2804      	cmp	r0, #4
90001ea8:	d015      	beq.n	90001ed6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001eaa:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001eac:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001eae:	6823      	ldr	r3, [r4, #0]
90001eb0:	2b02      	cmp	r3, #2
90001eb2:	d1cc      	bne.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001eb4:	4b23      	ldr	r3, [pc, #140]	@ (90001f44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eb6:	f04f 31ff 	mov.w	r1, #4294967295
90001eba:	6818      	ldr	r0, [r3, #0]
90001ebc:	f00c fb32 	bl	9000e524 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001ec0:	6823      	ldr	r3, [r4, #0]
90001ec2:	2b01      	cmp	r3, #1
90001ec4:	d1aa      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001ec6:	e7c5      	b.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ec8:	6833      	ldr	r3, [r6, #0]
90001eca:	2b00      	cmp	r3, #0
90001ecc:	d1b7      	bne.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001ece:	6803      	ldr	r3, [r0, #0]
90001ed0:	691b      	ldr	r3, [r3, #16]
90001ed2:	4798      	blx	r3
90001ed4:	e7b3      	b.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001ed6:	4815      	ldr	r0, [pc, #84]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ed8:	f008 f8d6 	bl	9000a088 <HAL_JPEG_Abort>
90001edc:	e7e5      	b.n	90001eaa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ede:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001ee2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001ee4:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ee8:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001eea:	4401      	add	r1, r0
        val |= d[0];
90001eec:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001eee:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ef0:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ef4:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001ef6:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001efa:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001efe:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001f02:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001f06:	e731      	b.n	90001d6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f08:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001f0a:	4b0f      	ldr	r3, [pc, #60]	@ (90001f48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001f0c:	4a0f      	ldr	r2, [pc, #60]	@ (90001f4c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001f0e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f10:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001f14:	480e      	ldr	r0, [pc, #56]	@ (90001f50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001f16:	f028 fc8b 	bl	9002a830 <__assert_func>
90001f1a:	4691      	mov	r9, r2
90001f1c:	e7e1      	b.n	90001ee2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001f1e:	bf00      	nop
90001f20:	24005dac 	.word	0x24005dac
90001f24:	24005ffc 	.word	0x24005ffc
90001f28:	24006024 	.word	0x24006024
90001f2c:	24007aac 	.word	0x24007aac
90001f30:	24006008 	.word	0x24006008
90001f34:	24005dec 	.word	0x24005dec
90001f38:	2400600c 	.word	0x2400600c
90001f3c:	24006010 	.word	0x24006010
90001f40:	24005df0 	.word	0x24005df0
90001f44:	24005df4 	.word	0x24005df4
90001f48:	9002bba4 	.word	0x9002bba4
90001f4c:	9002bbb8 	.word	0x9002bbb8
90001f50:	9002bb38 	.word	0x9002bb38
90001f54:	24006014 	.word	0x24006014
90001f58:	24006004 	.word	0x24006004
90001f5c:	24000004 	.word	0x24000004

90001f60 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f60:	684b      	ldr	r3, [r1, #4]
90001f62:	2b01      	cmp	r3, #1
90001f64:	d015      	beq.n	90001f92 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f66:	2b02      	cmp	r3, #2
90001f68:	d00b      	beq.n	90001f82 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f6a:	b94b      	cbnz	r3, 90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f6c:	68cb      	ldr	r3, [r1, #12]
90001f6e:	0758      	lsls	r0, r3, #29
90001f70:	d11e      	bne.n	90001fb0 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f72:	688b      	ldr	r3, [r1, #8]
90001f74:	075a      	lsls	r2, r3, #29
90001f76:	d003      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f78:	f023 0307 	bic.w	r3, r3, #7
90001f7c:	3308      	adds	r3, #8
90001f7e:	608b      	str	r3, [r1, #8]
    }
90001f80:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f82:	68cb      	ldr	r3, [r1, #12]
90001f84:	071a      	lsls	r2, r3, #28
90001f86:	d0f4      	beq.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f88:	f023 030f 	bic.w	r3, r3, #15
90001f8c:	3310      	adds	r3, #16
90001f8e:	60cb      	str	r3, [r1, #12]
90001f90:	e7ef      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f92:	68cb      	ldr	r3, [r1, #12]
90001f94:	071a      	lsls	r2, r3, #28
90001f96:	d003      	beq.n	90001fa0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f98:	f023 030f 	bic.w	r3, r3, #15
90001f9c:	3310      	adds	r3, #16
90001f9e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001fa0:	688b      	ldr	r3, [r1, #8]
90001fa2:	0718      	lsls	r0, r3, #28
90001fa4:	d0ec      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001fa6:	f023 030f 	bic.w	r3, r3, #15
90001faa:	3310      	adds	r3, #16
90001fac:	608b      	str	r3, [r1, #8]
90001fae:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001fb0:	f023 0307 	bic.w	r3, r3, #7
90001fb4:	3308      	adds	r3, #8
90001fb6:	60cb      	str	r3, [r1, #12]
90001fb8:	e7db      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
90001fba:	bf00      	nop

90001fbc <HAL_JPEG_GetDataCallback>:
    {
90001fbc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001fbe:	4c0c      	ldr	r4, [pc, #48]	@ (90001ff0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc0:	4a0c      	ldr	r2, [pc, #48]	@ (90001ff4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001fc2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001fc6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001fca:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fcc:	d302      	bcc.n	90001fd4 <HAL_JPEG_GetDataCallback+0x18>
    }
90001fce:	f85d 4b04 	ldr.w	r4, [sp], #4
90001fd2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001fd4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fd6:	4b08      	ldr	r3, [pc, #32]	@ (90001ff8 <HAL_JPEG_GetDataCallback+0x3c>)
90001fd8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fda:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fde:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fe0:	bf28      	it	cs
90001fe2:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fea:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fec:	f008 b844 	b.w	9000a078 <HAL_JPEG_ConfigInputBuffer>
90001ff0:	24006020 	.word	0x24006020
90001ff4:	2400601c 	.word	0x2400601c
90001ff8:	24006018 	.word	0x24006018

90001ffc <HAL_JPEG_DataReadyCallback>:
    {
90001ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90002000:	4e4a      	ldr	r6, [pc, #296]	@ (9000212c <HAL_JPEG_DataReadyCallback+0x130>)
    {
90002002:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002004:	4f4a      	ldr	r7, [pc, #296]	@ (90002130 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90002006:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002008:	4d4a      	ldr	r5, [pc, #296]	@ (90002134 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
9000200a:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000200c:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000200e:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90002012:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002014:	4b48      	ldr	r3, [pc, #288]	@ (90002138 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002016:	4c49      	ldr	r4, [pc, #292]	@ (9000213c <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002018:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000201a:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000201c:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002020:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002024:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90002028:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202a:	4d45      	ldr	r5, [pc, #276]	@ (90002140 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
9000202c:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002032:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90002036:	697b      	ldr	r3, [r7, #20]
90002038:	428b      	cmp	r3, r1
9000203a:	d260      	bcs.n	900020fe <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000203c:	6821      	ldr	r1, [r4, #0]
9000203e:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002040:	6823      	ldr	r3, [r4, #0]
90002042:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002044:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002048:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000204c:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002050:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002052:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002056:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000205a:	6823      	ldr	r3, [r4, #0]
9000205c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002060:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002064:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002066:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002068:	b12b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000206a:	6823      	ldr	r3, [r4, #0]
9000206c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002070:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002074:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002076:	6832      	ldr	r2, [r6, #0]
90002078:	69bb      	ldr	r3, [r7, #24]
9000207a:	4293      	cmp	r3, r2
9000207c:	d922      	bls.n	900020c4 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000207e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002080:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002082:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002086:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002088:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000208c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000208e:	2200      	movs	r2, #0
90002090:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2b01      	cmp	r3, #1
90002096:	d900      	bls.n	9000209a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002098:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000209a:	6823      	ldr	r3, [r4, #0]
9000209c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a0:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
900020a4:	2b00      	cmp	r3, #0
900020a6:	d138      	bne.n	9000211a <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020a8:	6823      	ldr	r3, [r4, #0]
900020aa:	4640      	mov	r0, r8
900020ac:	68fa      	ldr	r2, [r7, #12]
900020ae:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020b6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ba:	01d2      	lsls	r2, r2, #7
900020bc:	6859      	ldr	r1, [r3, #4]
900020be:	f007 ffdf 	bl	9000a080 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
900020c2:	69bb      	ldr	r3, [r7, #24]
900020c4:	6832      	ldr	r2, [r6, #0]
900020c6:	429a      	cmp	r2, r3
900020c8:	d20b      	bcs.n	900020e2 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
900020ca:	4b1e      	ldr	r3, [pc, #120]	@ (90002144 <HAL_JPEG_DataReadyCallback+0x148>)
900020cc:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
900020ce:	7a1b      	ldrb	r3, [r3, #8]
900020d0:	b10b      	cbz	r3, 900020d6 <HAL_JPEG_DataReadyCallback+0xda>
    }
900020d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
900020d6:	4b1c      	ldr	r3, [pc, #112]	@ (90002148 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
900020d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
900020dc:	6818      	ldr	r0, [r3, #0]
900020de:	f00c ba53 	b.w	9000e588 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020e2:	6823      	ldr	r3, [r4, #0]
900020e4:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020e6:	4919      	ldr	r1, [pc, #100]	@ (9000214c <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020e8:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ea:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020ee:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020f6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f8:	f007 ff86 	bl	9000a008 <HAL_JPEG_Pause>
900020fc:	e7e5      	b.n	900020ca <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020fe:	6823      	ldr	r3, [r4, #0]
90002100:	68fa      	ldr	r2, [r7, #12]
90002102:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002106:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000210a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000210e:	01d2      	lsls	r2, r2, #7
90002110:	6859      	ldr	r1, [r3, #4]
    }
90002112:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002116:	f007 bfb3 	b.w	9000a080 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
9000211a:	2102      	movs	r1, #2
9000211c:	4640      	mov	r0, r8
9000211e:	f007 ff73 	bl	9000a008 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
90002122:	4b0b      	ldr	r3, [pc, #44]	@ (90002150 <HAL_JPEG_DataReadyCallback+0x154>)
90002124:	2201      	movs	r2, #1
90002126:	601a      	str	r2, [r3, #0]
90002128:	e7be      	b.n	900020a8 <HAL_JPEG_DataReadyCallback+0xac>
9000212a:	bf00      	nop
9000212c:	24006000 	.word	0x24006000
90002130:	24005dac 	.word	0x24005dac
90002134:	24006024 	.word	0x24006024
90002138:	24005ffc 	.word	0x24005ffc
9000213c:	24006004 	.word	0x24006004
90002140:	24000004 	.word	0x24000004
90002144:	24006008 	.word	0x24006008
90002148:	24005df4 	.word	0x24005df4
9000214c:	24006014 	.word	0x24006014
90002150:	24006010 	.word	0x24006010

90002154 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002154:	b672      	cpsid	i
        while (1)
90002156:	e7fe      	b.n	90002156 <HAL_JPEG_ErrorCallback+0x2>

90002158 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002158:	4b01      	ldr	r3, [pc, #4]	@ (90002160 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000215a:	2201      	movs	r2, #1
9000215c:	601a      	str	r2, [r3, #0]
    }
9000215e:	4770      	bx	lr
90002160:	24006014 	.word	0x24006014

90002164 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002164:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002166:	4f1e      	ldr	r7, [pc, #120]	@ (900021e0 <DMA2D_CopyBuffer+0x7c>)
90002168:	6903      	ldr	r3, [r0, #16]
9000216a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000216c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000216e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002172:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002174:	4e1b      	ldr	r6, [pc, #108]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002176:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000217a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000217e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002182:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002186:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002188:	bf18      	it	ne
9000218a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000218e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002190:	6939      	ldr	r1, [r7, #16]
90002192:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002196:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000219a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000219e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021a0:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900021a2:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
900021a4:	7e81      	ldrb	r1, [r0, #26]
900021a6:	b1b9      	cbz	r1, 900021d8 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
900021a8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
900021aa:	f1c1 0110 	rsb	r1, r1, #16
900021ae:	4321      	orrs	r1, r4
900021b0:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b2:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
900021b4:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b8:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021bc:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
900021be:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021c2:	4809      	ldr	r0, [pc, #36]	@ (900021e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021c4:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021c6:	4b07      	ldr	r3, [pc, #28]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
900021c8:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
900021ca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021cc:	4a07      	ldr	r2, [pc, #28]	@ (900021ec <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
900021ce:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021d0:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021d2:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021d4:	6018      	str	r0, [r3, #0]
}
900021d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
900021d8:	f044 0410 	orr.w	r4, r4, #16
900021dc:	6474      	str	r4, [r6, #68]	@ 0x44
900021de:	e7e8      	b.n	900021b2 <DMA2D_CopyBuffer+0x4e>
900021e0:	24005dac 	.word	0x24005dac
900021e4:	52001000 	.word	0x52001000
900021e8:	00012301 	.word	0x00012301
900021ec:	ff09000b 	.word	0xff09000b

900021f0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021f0:	6902      	ldr	r2, [r0, #16]
{
900021f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021f6:	4605      	mov	r5, r0
900021f8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021fa:	2a00      	cmp	r2, #0
900021fc:	d165      	bne.n	900022ca <DMA2D_CropBuffer+0xda>
900021fe:	4b35      	ldr	r3, [pc, #212]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
90002200:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
90002204:	f1cc 0010 	rsb	r0, ip, #16
90002208:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
9000220a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
9000220c:	3901      	subs	r1, #1
9000220e:	428a      	cmp	r2, r1
90002210:	d102      	bne.n	90002218 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002212:	6b99      	ldr	r1, [r3, #56]	@ 0x38
90002214:	1a41      	subs	r1, r0, r1
90002216:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002218:	7e6e      	ldrb	r6, [r5, #25]
9000221a:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
9000221c:	2e00      	cmp	r6, #0
9000221e:	d051      	beq.n	900022c4 <DMA2D_CropBuffer+0xd4>
90002220:	f1c7 0110 	rsb	r1, r7, #16
90002224:	46b8      	mov	r8, r7
90002226:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
90002228:	f895 e01a 	ldrb.w	lr, [r5, #26]
9000222c:	f1be 0f00 	cmp.w	lr, #0
90002230:	d002      	beq.n	90002238 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002232:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90002234:	1b09      	subs	r1, r1, r4
90002236:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002238:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000223c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000223e:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002242:	4413      	add	r3, r2
    job.MCU_drawn++;
90002244:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002246:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
9000224a:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000224c:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002250:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002254:	0052      	lsls	r2, r2, #1
90002256:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000225a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000225e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002262:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002264:	b107      	cbz	r7, 90002268 <DMA2D_CropBuffer+0x78>
90002266:	b90e      	cbnz	r6, 9000226c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002268:	2300      	movs	r3, #0
9000226a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000226c:	4b1a      	ldr	r3, [pc, #104]	@ (900022d8 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000226e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002270:	4f1a      	ldr	r7, [pc, #104]	@ (900022dc <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002272:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002274:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002276:	4a1a      	ldr	r2, [pc, #104]	@ (900022e0 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002278:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000227a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000227e:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002280:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002282:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002286:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000228a:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
9000228c:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000228e:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002292:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002294:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002296:	6803      	ldr	r3, [r0, #0]
90002298:	9604      	str	r6, [sp, #16]
9000229a:	685b      	ldr	r3, [r3, #4]
9000229c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000229e:	4b11      	ldr	r3, [pc, #68]	@ (900022e4 <DMA2D_CropBuffer+0xf4>)
900022a0:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022a2:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022a4:	4810      	ldr	r0, [pc, #64]	@ (900022e8 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900022a6:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022a8:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ac:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022ae:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022b0:	490e      	ldr	r1, [pc, #56]	@ (900022ec <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
900022b2:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
900022b4:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
900022b6:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022b8:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ba:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022bc:	6019      	str	r1, [r3, #0]
}
900022be:	b00a      	add	sp, #40	@ 0x28
900022c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022c4:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900022c6:	46b0      	mov	r8, r6
900022c8:	e7ae      	b.n	90002228 <DMA2D_CropBuffer+0x38>
900022ca:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900022cc:	f04f 0c00 	mov.w	ip, #0
900022d0:	4b00      	ldr	r3, [pc, #0]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
900022d2:	e79a      	b.n	9000220a <DMA2D_CropBuffer+0x1a>
900022d4:	24005dac 	.word	0x24005dac
900022d8:	01e00010 	.word	0x01e00010
900022dc:	24005dfc 	.word	0x24005dfc
900022e0:	24006008 	.word	0x24006008
900022e4:	52001000 	.word	0x52001000
900022e8:	ff09000b 	.word	0xff09000b
900022ec:	00012301 	.word	0x00012301

900022f0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022f0:	4b0d      	ldr	r3, [pc, #52]	@ (90002328 <DMA2D_ExternalJobCompleted+0x38>)
900022f2:	6902      	ldr	r2, [r0, #16]
900022f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022f6:	429a      	cmp	r2, r3
900022f8:	d000      	beq.n	900022fc <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022fa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022fc:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000232c <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
90002300:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
90002302:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
90002304:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
90002306:	3101      	adds	r1, #1
        job.DoCropping = false;
90002308:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
9000230a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000230c:	6819      	ldr	r1, [r3, #0]
9000230e:	2901      	cmp	r1, #1
90002310:	d900      	bls.n	90002314 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
90002312:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
90002314:	7e83      	ldrb	r3, [r0, #26]
90002316:	b113      	cbz	r3, 9000231e <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
90002318:	4b05      	ldr	r3, [pc, #20]	@ (90002330 <DMA2D_ExternalJobCompleted+0x40>)
9000231a:	2201      	movs	r2, #1
9000231c:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
9000231e:	4b05      	ldr	r3, [pc, #20]	@ (90002334 <DMA2D_ExternalJobCompleted+0x44>)
90002320:	6818      	ldr	r0, [r3, #0]
90002322:	f00c b931 	b.w	9000e588 <osSemaphoreRelease>
90002326:	bf00      	nop
90002328:	24005dac 	.word	0x24005dac
9000232c:	24005df0 	.word	0x24005df0
90002330:	24005dec 	.word	0x24005dec
90002334:	24005df4 	.word	0x24005df4

90002338 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002338:	2101      	movs	r1, #1
9000233a:	2200      	movs	r2, #0
{
9000233c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000233e:	4608      	mov	r0, r1
90002340:	f00c f89a 	bl	9000e478 <osSemaphoreNew>
90002344:	4b0b      	ldr	r3, [pc, #44]	@ (90002374 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002346:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002348:	b140      	cbz	r0, 9000235c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
9000234a:	2200      	movs	r2, #0
9000234c:	2104      	movs	r1, #4
9000234e:	2001      	movs	r0, #1
90002350:	f00c f944 	bl	9000e5dc <osMessageQueueNew>
90002354:	4b08      	ldr	r3, [pc, #32]	@ (90002378 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002356:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002358:	b130      	cbz	r0, 90002368 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000235a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000235c:	4b07      	ldr	r3, [pc, #28]	@ (9000237c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000235e:	2128      	movs	r1, #40	@ 0x28
90002360:	4a07      	ldr	r2, [pc, #28]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002362:	4808      	ldr	r0, [pc, #32]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002364:	f028 fa64 	bl	9002a830 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002368:	4b07      	ldr	r3, [pc, #28]	@ (90002388 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000236a:	212c      	movs	r1, #44	@ 0x2c
9000236c:	4a04      	ldr	r2, [pc, #16]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000236e:	4805      	ldr	r0, [pc, #20]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002370:	f028 fa5e 	bl	9002a830 <__assert_func>
90002374:	2400602c 	.word	0x2400602c
90002378:	24006028 	.word	0x24006028
9000237c:	9002bd98 	.word	0x9002bd98
90002380:	9002bde4 	.word	0x9002bde4
90002384:	9002be14 	.word	0x9002be14
90002388:	9002be78 	.word	0x9002be78

9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000238c:	4b02      	ldr	r3, [pc, #8]	@ (90002398 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000238e:	f04f 31ff 	mov.w	r1, #4294967295
90002392:	6818      	ldr	r0, [r3, #0]
90002394:	f00c b8c6 	b.w	9000e524 <osSemaphoreAcquire>
90002398:	2400602c 	.word	0x2400602c

9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000239c:	4b01      	ldr	r3, [pc, #4]	@ (900023a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000239e:	6818      	ldr	r0, [r3, #0]
900023a0:	f00c b8f2 	b.w	9000e588 <osSemaphoreRelease>
900023a4:	2400602c 	.word	0x2400602c

900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900023a8:	4b02      	ldr	r3, [pc, #8]	@ (900023b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900023aa:	2100      	movs	r1, #0
900023ac:	6818      	ldr	r0, [r3, #0]
900023ae:	f00c b8b9 	b.w	9000e524 <osSemaphoreAcquire>
900023b2:	bf00      	nop
900023b4:	2400602c 	.word	0x2400602c

900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
900023b8:	4b01      	ldr	r3, [pc, #4]	@ (900023c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900023ba:	6818      	ldr	r0, [r3, #0]
900023bc:	f00c b8e4 	b.w	9000e588 <osSemaphoreRelease>
900023c0:	2400602c 	.word	0x2400602c

900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900023c4:	4803      	ldr	r0, [pc, #12]	@ (900023d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900023c6:	2300      	movs	r3, #0
900023c8:	4903      	ldr	r1, [pc, #12]	@ (900023d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900023ca:	461a      	mov	r2, r3
900023cc:	6800      	ldr	r0, [r0, #0]
900023ce:	f00c b941 	b.w	9000e654 <osMessageQueuePut>
900023d2:	bf00      	nop
900023d4:	24006028 	.word	0x24006028
900023d8:	2400003c 	.word	0x2400003c

900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900023dc:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023de:	2300      	movs	r3, #0
{
900023e0:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023e2:	4c07      	ldr	r4, [pc, #28]	@ (90002400 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023e4:	a901      	add	r1, sp, #4
900023e6:	461a      	mov	r2, r3
900023e8:	6820      	ldr	r0, [r4, #0]
900023ea:	f00c f96f 	bl	9000e6cc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023ee:	f04f 33ff 	mov.w	r3, #4294967295
900023f2:	2200      	movs	r2, #0
900023f4:	a901      	add	r1, sp, #4
900023f6:	6820      	ldr	r0, [r4, #0]
900023f8:	f00c f968 	bl	9000e6cc <osMessageQueueGet>
}
900023fc:	b002      	add	sp, #8
900023fe:	bd10      	pop	{r4, pc}
90002400:	24006028 	.word	0x24006028

90002404 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90002404:	6803      	ldr	r3, [r0, #0]
90002406:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002408:	4718      	bx	r3
9000240a:	bf00      	nop

9000240c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
9000240c:	2001      	movs	r0, #1
9000240e:	4770      	bx	lr

90002410 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
90002410:	e7fe      	b.n	90002410 <DMA2D_XferErrorCallback>
90002412:	bf00      	nop

90002414 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
90002414:	4905      	ldr	r1, [pc, #20]	@ (9000242c <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002416:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000241a:	4b05      	ldr	r3, [pc, #20]	@ (90002430 <_ZN8STM32DMAD1Ev+0x1c>)
9000241c:	6001      	str	r1, [r0, #0]
9000241e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002422:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002426:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
9000242a:	4770      	bx	lr
9000242c:	9002d6e0 	.word	0x9002d6e0
90002430:	e000e100 	.word	0xe000e100

90002434 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002434:	4b11      	ldr	r3, [pc, #68]	@ (9000247c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002436:	4912      	ldr	r1, [pc, #72]	@ (90002480 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002438:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
9000243c:	4811      	ldr	r0, [pc, #68]	@ (90002484 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000243e:	f042 0210 	orr.w	r2, r2, #16
{
90002442:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002444:	4c10      	ldr	r4, [pc, #64]	@ (90002488 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002446:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002448:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000244c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002450:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002454:	f002 0210 	and.w	r2, r2, #16
90002458:	9201      	str	r2, [sp, #4]
9000245a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000245c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000245e:	f042 0210 	orr.w	r2, r2, #16
90002462:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002464:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002466:	f022 0210 	bic.w	r2, r2, #16
9000246a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000246c:	4b07      	ldr	r3, [pc, #28]	@ (9000248c <_ZN8STM32DMA10initializeEv+0x58>)
9000246e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002472:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002474:	b003      	add	sp, #12
90002476:	f85d 4b04 	ldr.w	r4, [sp], #4
9000247a:	4770      	bx	lr
9000247c:	58024400 	.word	0x58024400
90002480:	24007b58 	.word	0x24007b58
90002484:	90002411 	.word	0x90002411
90002488:	90002859 	.word	0x90002859
9000248c:	e000e100 	.word	0xe000e100

90002490 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002490:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002498:	4909      	ldr	r1, [pc, #36]	@ (900024c0 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000249a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000249e:	4b09      	ldr	r3, [pc, #36]	@ (900024c4 <_ZN8STM32DMAD0Ev+0x2c>)
900024a0:	b510      	push	{r4, lr}
900024a2:	6001      	str	r1, [r0, #0]
900024a4:	4604      	mov	r4, r0
900024a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900024aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900024ae:	f3bf 8f6f 	isb	sy
}
900024b2:	f640 51a4 	movw	r1, #3492	@ 0xda4
900024b6:	f027 fe45 	bl	9002a144 <_ZdlPvj>
900024ba:	4620      	mov	r0, r4
900024bc:	bd10      	pop	{r4, pc}
900024be:	bf00      	nop
900024c0:	9002d6e0 	.word	0x9002d6e0
900024c4:	e000e100 	.word	0xe000e100

900024c8 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
900024c8:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
900024cc:	b510      	push	{r4, lr}
900024ce:	4604      	mov	r4, r0
        if (!started_by_external_job)
900024d0:	b963      	cbnz	r3, 900024ec <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
900024d2:	6803      	ldr	r3, [r0, #0]
900024d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900024d6:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024d8:	4924      	ldr	r1, [pc, #144]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
900024da:	4a25      	ldr	r2, [pc, #148]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024dc:	680b      	ldr	r3, [r1, #0]
900024de:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024e2:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024e6:	2b01      	cmp	r3, #1
900024e8:	d015      	beq.n	90002516 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024ea:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024ec:	7a03      	ldrb	r3, [r0, #8]
900024ee:	2b00      	cmp	r3, #0
900024f0:	d12b      	bne.n	9000254a <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024f2:	6860      	ldr	r0, [r4, #4]
900024f4:	6803      	ldr	r3, [r0, #0]
900024f6:	681b      	ldr	r3, [r3, #0]
900024f8:	4798      	blx	r3
900024fa:	4603      	mov	r3, r0
900024fc:	2800      	cmp	r0, #0
900024fe:	d1f4      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
90002500:	7a62      	ldrb	r2, [r4, #9]
90002502:	2a00      	cmp	r2, #0
90002504:	d0f1      	beq.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
90002506:	6822      	ldr	r2, [r4, #0]
90002508:	4620      	mov	r0, r4
                started_by_external_job = false;
9000250a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000250e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90002514:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002516:	4817      	ldr	r0, [pc, #92]	@ (90002574 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
90002518:	6800      	ldr	r0, [r0, #0]
9000251a:	2800      	cmp	r0, #0
9000251c:	d1e5      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
9000251e:	7a20      	ldrb	r0, [r4, #8]
90002520:	2800      	cmp	r0, #0
90002522:	d1e2      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002524:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002526:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000252a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
9000252e:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002530:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002534:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002536:	6808      	ldr	r0, [r1, #0]
90002538:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000253c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002540:	b17b      	cbz	r3, 90002562 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
90002542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002546:	f7ff be53 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254a:	4b08      	ldr	r3, [pc, #32]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
9000254c:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254e:	4808      	ldr	r0, [pc, #32]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002550:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002552:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002554:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002558:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000255c:	f7ff fec8 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002560:	e7c7      	b.n	900024f2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002566:	f7ff bdfd 	b.w	90002164 <DMA2D_CopyBuffer>
9000256a:	bf00      	nop
9000256c:	24005df0 	.word	0x24005df0
90002570:	24000004 	.word	0x24000004
90002574:	24005dec 	.word	0x24005dec

90002578 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002578:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000257a:	7f8b      	ldrb	r3, [r1, #30]
9000257c:	2b0a      	cmp	r3, #10
9000257e:	d83d      	bhi.n	900025fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002580:	e8df f003 	tbb	[pc, r3]
90002584:	3c2a063a 	.word	0x3c2a063a
90002588:	063c3c3c 	.word	0x063c3c3c
9000258c:	0606      	.short	0x0606
9000258e:	06          	.byte	0x06
9000258f:	00          	.byte	0x00
90002590:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002592:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002596:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002598:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000259a:	4b1b      	ldr	r3, [pc, #108]	@ (90002608 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000259c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a0:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025a2:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
900025a6:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900025a8:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025aa:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ac:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
900025ae:	680e      	ldr	r6, [r1, #0]
        return color;
900025b0:	68c8      	ldr	r0, [r1, #12]
900025b2:	2e08      	cmp	r6, #8
900025b4:	d012      	beq.n	900025dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025b6:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
900025b8:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025ba:	0941      	lsrs	r1, r0, #5
900025bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900025c0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900025c4:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
900025ca:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025cc:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025ce:	490f      	ldr	r1, [pc, #60]	@ (9000260c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025d0:	4302      	orrs	r2, r0
900025d2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025d4:	6019      	str	r1, [r3, #0]
    }
}
900025d6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025d8:	2400      	movs	r4, #0
900025da:	e7da      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025dc:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025de:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025e0:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025e2:	4a0b      	ldr	r2, [pc, #44]	@ (90002610 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025e4:	7f09      	ldrb	r1, [r1, #28]
900025e6:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025ea:	490a      	ldr	r1, [pc, #40]	@ (90002614 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025ec:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025ee:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025f4:	6019      	str	r1, [r3, #0]
}
900025f6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025f8:	2402      	movs	r4, #2
900025fa:	e7ca      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025fc:	4b06      	ldr	r3, [pc, #24]	@ (90002618 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025fe:	2191      	movs	r1, #145	@ 0x91
90002600:	4a06      	ldr	r2, [pc, #24]	@ (9000261c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90002602:	4807      	ldr	r0, [pc, #28]	@ (90002620 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90002604:	f028 f914 	bl	9002a830 <__assert_func>
90002608:	52001000 	.word	0x52001000
9000260c:	00032301 	.word	0x00032301
90002610:	00010009 	.word	0x00010009
90002614:	00022301 	.word	0x00022301
90002618:	9002bebc 	.word	0x9002bebc
9000261c:	9002bed8 	.word	0x9002bed8
90002620:	9002bf24 	.word	0x9002bf24

90002624 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90002624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90002626:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
9000262a:	f1be 0f0b 	cmp.w	lr, #11
9000262e:	f200 80aa 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002632:	e8df f00e 	tbb	[pc, lr]
90002636:	585d      	.short	0x585d
90002638:	a8a8a846 	.word	0xa8a8a846
9000263c:	060606a8 	.word	0x060606a8
90002640:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
90002642:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002644:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002648:	f1bc 0f0b 	cmp.w	ip, #11
9000264c:	f200 809b 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002650:	e8df f00c 	tbb	[pc, ip]
90002654:	990d4b50 	.word	0x990d4b50
90002658:	06999999 	.word	0x06999999
9000265c:	06060606 	.word	0x06060606
    switch (format)
90002660:	f1bc 0f0b 	cmp.w	ip, #11
90002664:	f000 8095 	beq.w	90002792 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002668:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000266a:	2701      	movs	r7, #1
9000266c:	e001      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000266e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002670:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002672:	8a8b      	ldrh	r3, [r1, #20]
90002674:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002676:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002678:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000267a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000267c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000267e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002682:	4b4a      	ldr	r3, [pc, #296]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002684:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002686:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002688:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000268a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000268c:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000268e:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002690:	6908      	ldr	r0, [r1, #16]
90002692:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002694:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002696:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002698:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000269a:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269c:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
900026a0:	d03c      	beq.n	9000271c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
900026a2:	d810      	bhi.n	900026c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
900026a4:	2d20      	cmp	r5, #32
900026a6:	d036      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026a8:	2d40      	cmp	r5, #64	@ 0x40
900026aa:	d034      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026ac:	2d04      	cmp	r5, #4
900026ae:	d124      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b0:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026b2:	493f      	ldr	r1, [pc, #252]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
900026b8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026ba:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026bc:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026be:	6019      	str	r1, [r3, #0]
}
900026c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
900026c2:	2600      	movs	r6, #0
900026c4:	e7be      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
900026c6:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900026ca:	d022      	beq.n	90002712 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
900026cc:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
900026d0:	d113      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d2:	4d38      	ldr	r5, [pc, #224]	@ (900027b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026d4:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026d6:	4a36      	ldr	r2, [pc, #216]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d8:	61dd      	str	r5, [r3, #28]
900026da:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900026dc:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026de:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026e0:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026e2:	601a      	str	r2, [r3, #0]
}
900026e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026e6:	2601      	movs	r6, #1
900026e8:	e7ac      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026ea:	2401      	movs	r4, #1
900026ec:	4627      	mov	r7, r4
900026ee:	e7c0      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900026f0:	2602      	movs	r6, #2
900026f2:	e7a7      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
900026f4:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026f6:	4627      	mov	r7, r4
900026f8:	e7bb      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fa:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
900026fc:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fe:	4b2b      	ldr	r3, [pc, #172]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002700:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002704:	bf14      	ite	ne
90002706:	4a2c      	ldrne	r2, [pc, #176]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002708:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000270c:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000270e:	601a      	str	r2, [r3, #0]
}
90002710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002712:	4d2a      	ldr	r5, [pc, #168]	@ (900027bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002714:	e7de      	b.n	900026d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002716:	4332      	orrs	r2, r6
90002718:	4b24      	ldr	r3, [pc, #144]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000271a:	e7ca      	b.n	900026b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
9000271c:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271e:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002720:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002722:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002726:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002728:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
9000272a:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000272c:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000272e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90002730:	b1e2      	cbz	r2, 9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
90002732:	2a01      	cmp	r2, #1
90002734:	d133      	bne.n	9000279e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002736:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
90002738:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000273a:	8849      	ldrh	r1, [r1, #2]
9000273c:	4a20      	ldr	r2, [pc, #128]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
9000273e:	bf18      	it	ne
90002740:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002742:	3901      	subs	r1, #1
90002744:	4002      	ands	r2, r0
90002746:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000274a:	f042 0210 	orr.w	r2, r2, #16
9000274e:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90002750:	4a16      	ldr	r2, [pc, #88]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002752:	69d3      	ldr	r3, [r2, #28]
90002754:	f043 0320 	orr.w	r3, r3, #32
90002758:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
9000275a:	69d3      	ldr	r3, [r2, #28]
9000275c:	069b      	lsls	r3, r3, #26
9000275e:	d4fc      	bmi.n	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90002760:	2310      	movs	r3, #16
90002762:	6093      	str	r3, [r2, #8]
            if (blend)
90002764:	b167      	cbz	r7, 90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002766:	4b12      	ldr	r3, [pc, #72]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002768:	6013      	str	r3, [r2, #0]
}
9000276a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000276c:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
9000276e:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002770:	8849      	ldrh	r1, [r1, #2]
90002772:	4a13      	ldr	r2, [pc, #76]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002774:	3901      	subs	r1, #1
90002776:	4002      	ands	r2, r0
90002778:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000277c:	61da      	str	r2, [r3, #28]
                break;
9000277e:	e7e7      	b.n	90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002780:	4b0d      	ldr	r3, [pc, #52]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002782:	6013      	str	r3, [r2, #0]
}
90002784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90002786:	4b0f      	ldr	r3, [pc, #60]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002788:	2170      	movs	r1, #112	@ 0x70
9000278a:	4a0f      	ldr	r2, [pc, #60]	@ (900027c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000278c:	480f      	ldr	r0, [pc, #60]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000278e:	f028 f84f 	bl	9002a830 <__assert_func>
        assert(0 && "Unsupported Format!");
90002792:	4b0c      	ldr	r3, [pc, #48]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002794:	2191      	movs	r1, #145	@ 0x91
90002796:	4a0e      	ldr	r2, [pc, #56]	@ (900027d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002798:	480c      	ldr	r0, [pc, #48]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000279a:	f028 f849 	bl	9002a830 <__assert_func>
                assert(0 && "Unsupported format");
9000279e:	4b0d      	ldr	r3, [pc, #52]	@ (900027d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
900027a0:	f240 111b 	movw	r1, #283	@ 0x11b
900027a4:	4a0c      	ldr	r2, [pc, #48]	@ (900027d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
900027a6:	4809      	ldr	r0, [pc, #36]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
900027a8:	f028 f842 	bl	9002a830 <__assert_func>
900027ac:	52001000 	.word	0x52001000
900027b0:	00022301 	.word	0x00022301
900027b4:	00020009 	.word	0x00020009
900027b8:	00012301 	.word	0x00012301
900027bc:	0002000a 	.word	0x0002000a
900027c0:	ffff00ef 	.word	0xffff00ef
900027c4:	9002bebc 	.word	0x9002bebc
900027c8:	9002bf84 	.word	0x9002bf84
900027cc:	9002bf24 	.word	0x9002bf24
900027d0:	9002bed8 	.word	0x9002bed8
900027d4:	9002bfd0 	.word	0x9002bfd0
900027d8:	9002bfec 	.word	0x9002bfec

900027dc <_ZN8STM32DMA5startEv>:
    virtual void start()
900027dc:	b510      	push	{r4, lr}
900027de:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
900027e0:	6840      	ldr	r0, [r0, #4]
900027e2:	6803      	ldr	r3, [r0, #0]
900027e4:	681b      	ldr	r3, [r3, #0]
900027e6:	4798      	blx	r3
900027e8:	b958      	cbnz	r0, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ea:	7a63      	ldrb	r3, [r4, #9]
900027ec:	b14b      	cbz	r3, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ee:	7a23      	ldrb	r3, [r4, #8]
900027f0:	bb3b      	cbnz	r3, 90002842 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027f2:	6822      	ldr	r2, [r4, #0]
900027f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900027f6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027fa:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
90002800:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002802:	4913      	ldr	r1, [pc, #76]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002804:	4a13      	ldr	r2, [pc, #76]	@ (90002854 <_ZN8STM32DMA5startEv+0x78>)
90002806:	680b      	ldr	r3, [r1, #0]
90002808:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000280c:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002810:	2b01      	cmp	r3, #1
90002812:	d000      	beq.n	90002816 <_ZN8STM32DMA5startEv+0x3a>
    }
90002814:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002816:	7a20      	ldrb	r0, [r4, #8]
90002818:	2800      	cmp	r0, #0
9000281a:	d1fb      	bne.n	90002814 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000281c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
9000281e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002822:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002826:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002828:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000282c:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000282e:	6808      	ldr	r0, [r1, #0]
90002830:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002834:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002838:	b133      	cbz	r3, 90002848 <_ZN8STM32DMA5startEv+0x6c>
    }
9000283a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000283e:	f7ff bcd7 	b.w	900021f0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002842:	4b03      	ldr	r3, [pc, #12]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002844:	681b      	ldr	r3, [r3, #0]
    }
90002846:	bd10      	pop	{r4, pc}
90002848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000284c:	f7ff bc8a 	b.w	90002164 <DMA2D_CopyBuffer>
90002850:	24005df0 	.word	0x24005df0
90002854:	24000004 	.word	0x24000004

90002858 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90002858:	4b2c      	ldr	r3, [pc, #176]	@ (9000290c <DMA2D_XferCpltCallback+0xb4>)
9000285a:	492d      	ldr	r1, [pc, #180]	@ (90002910 <DMA2D_XferCpltCallback+0xb8>)
9000285c:	681b      	ldr	r3, [r3, #0]
    {
9000285e:	b510      	push	{r4, lr}
90002860:	685c      	ldr	r4, [r3, #4]
90002862:	6823      	ldr	r3, [r4, #0]
90002864:	695a      	ldr	r2, [r3, #20]
90002866:	428a      	cmp	r2, r1
90002868:	d122      	bne.n	900028b0 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000286a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000286e:	b192      	cbz	r2, 90002896 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002870:	7a23      	ldrb	r3, [r4, #8]
90002872:	2b00      	cmp	r3, #0
90002874:	d13a      	bne.n	900028ec <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
90002876:	6860      	ldr	r0, [r4, #4]
90002878:	6803      	ldr	r3, [r0, #0]
9000287a:	681b      	ldr	r3, [r3, #0]
9000287c:	4798      	blx	r3
9000287e:	4603      	mov	r3, r0
90002880:	b9a8      	cbnz	r0, 900028ae <DMA2D_XferCpltCallback+0x56>
90002882:	7a62      	ldrb	r2, [r4, #9]
90002884:	b19a      	cbz	r2, 900028ae <DMA2D_XferCpltCallback+0x56>
                execute();
90002886:	6822      	ldr	r2, [r4, #0]
90002888:	4620      	mov	r0, r4
                started_by_external_job = false;
9000288a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000288e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002894:	4718      	bx	r3
            executeCompleted();
90002896:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002898:	4620      	mov	r0, r4
9000289a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
9000289c:	491d      	ldr	r1, [pc, #116]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
9000289e:	4a1e      	ldr	r2, [pc, #120]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028a0:	680b      	ldr	r3, [r1, #0]
900028a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028a6:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900028aa:	2b01      	cmp	r3, #1
900028ac:	d004      	beq.n	900028b8 <DMA2D_XferCpltCallback+0x60>
900028ae:	bd10      	pop	{r4, pc}
900028b0:	4620      	mov	r0, r4
900028b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900028b6:	4710      	bx	r2
900028b8:	4818      	ldr	r0, [pc, #96]	@ (9000291c <DMA2D_XferCpltCallback+0xc4>)
900028ba:	6800      	ldr	r0, [r0, #0]
900028bc:	2800      	cmp	r0, #0
900028be:	d1f6      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
900028c0:	7a20      	ldrb	r0, [r4, #8]
900028c2:	2800      	cmp	r0, #0
900028c4:	d1f3      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028c6:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900028c8:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028cc:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900028d0:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028d2:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900028d6:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028d8:	6808      	ldr	r0, [r1, #0]
900028da:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900028de:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028e2:	b17b      	cbz	r3, 90002904 <DMA2D_XferCpltCallback+0xac>
900028e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028e8:	f7ff bc82 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ec:	4b09      	ldr	r3, [pc, #36]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028ee:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f0:	4809      	ldr	r0, [pc, #36]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028f2:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028f4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028fa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028fe:	f7ff fcf7 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002902:	e7b8      	b.n	90002876 <DMA2D_XferCpltCallback+0x1e>
90002904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002908:	f7ff bc2c 	b.w	90002164 <DMA2D_CopyBuffer>
9000290c:	24021d64 	.word	0x24021d64
90002910:	900024c9 	.word	0x900024c9
90002914:	24005df0 	.word	0x24005df0
90002918:	24000004 	.word	0x24000004
9000291c:	24005dec 	.word	0x24005dec

90002920 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90002920:	b570      	push	{r4, r5, r6, lr}
90002922:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002924:	4b0b      	ldr	r3, [pc, #44]	@ (90002954 <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90002926:	2500      	movs	r5, #0
90002928:	300c      	adds	r0, #12
9000292a:	4634      	mov	r4, r6
9000292c:	2260      	movs	r2, #96	@ 0x60
9000292e:	7235      	strb	r5, [r6, #8]
90002930:	7275      	strb	r5, [r6, #9]
90002932:	6070      	str	r0, [r6, #4]
90002934:	f844 3b20 	str.w	r3, [r4], #32
90002938:	4621      	mov	r1, r4
9000293a:	f00f fde7 	bl	9001250c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000293e:	4621      	mov	r1, r4
90002940:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002944:	60cd      	str	r5, [r1, #12]
90002946:	3124      	adds	r1, #36	@ 0x24
90002948:	4299      	cmp	r1, r3
9000294a:	d1fb      	bne.n	90002944 <_ZN8STM32DMAC1Ev+0x24>
}
9000294c:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
9000294e:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002952:	bd70      	pop	{r4, r5, r6, pc}
90002954:	9002d6e0 	.word	0x9002d6e0

90002958 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002958:	4a03      	ldr	r2, [pc, #12]	@ (90002968 <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000295a:	6813      	ldr	r3, [r2, #0]
9000295c:	07db      	lsls	r3, r3, #31
9000295e:	d4fc      	bmi.n	9000295a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002960:	2323      	movs	r3, #35	@ 0x23
90002962:	6093      	str	r3, [r2, #8]
}
90002964:	4770      	bx	lr
90002966:	bf00      	nop
90002968:	52001000 	.word	0x52001000

9000296c <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000296c:	4a0b      	ldr	r2, [pc, #44]	@ (9000299c <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
9000296e:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002970:	03db      	lsls	r3, r3, #15
90002972:	d501      	bpl.n	90002978 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002974:	2900      	cmp	r1, #0
90002976:	dc00      	bgt.n	9000297a <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002978:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000297a:	f000 031f 	and.w	r3, r0, #31
9000297e:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002980:	f3bf 8f4f 	dsb	sy
90002984:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90002986:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000298a:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
9000298c:	1a0b      	subs	r3, r1, r0
9000298e:	2b00      	cmp	r3, #0
90002990:	dcf9      	bgt.n	90002986 <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002992:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002996:	f3bf 8f6f 	isb	sy
9000299a:	4770      	bx	lr
9000299c:	e000ed00 	.word	0xe000ed00

900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
900029a0:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029a2:	4c11      	ldr	r4, [pc, #68]	@ (900029e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
900029a4:	6825      	ldr	r5, [r4, #0]
900029a6:	07ed      	lsls	r5, r5, #31
900029a8:	d4fc      	bmi.n	900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029aa:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ac:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
900029ae:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029b0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b2:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b6:	f04f 0502 	mov.w	r5, #2
900029ba:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029bc:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029be:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
900029c0:	d00b      	beq.n	900029da <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c2:	490a      	ldr	r1, [pc, #40]	@ (900029ec <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029c4:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c6:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029ca:	4909      	ldr	r1, [pc, #36]	@ (900029f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029cc:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
900029ce:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
900029d0:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
900029d2:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029d4:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
900029d6:	bc30      	pop	{r4, r5}
900029d8:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900029da:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
900029dc:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029de:	4b05      	ldr	r3, [pc, #20]	@ (900029f4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
900029e0:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029e2:	6023      	str	r3, [r4, #0]
}
900029e4:	bc30      	pop	{r4, r5}
900029e6:	4770      	bx	lr
900029e8:	52001000 	.word	0x52001000
900029ec:	00010009 	.word	0x00010009
900029f0:	00020001 	.word	0x00020001
900029f4:	00030001 	.word	0x00030001

900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029f8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029fa:	4c10      	ldr	r4, [pc, #64]	@ (90002a3c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029fc:	6825      	ldr	r5, [r4, #0]
900029fe:	07ed      	lsls	r5, r5, #31
90002a00:	d4fc      	bmi.n	900029fc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a02:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a04:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
90002a06:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a08:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a0e:	f04f 0502 	mov.w	r5, #2
90002a12:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a14:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a18:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
90002a1a:	d009      	beq.n	90002a30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a1c:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a1e:	4a08      	ldr	r2, [pc, #32]	@ (90002a40 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a20:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
90002a24:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a26:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a28:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a2a:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
90002a2c:	bc30      	pop	{r4, r5}
90002a2e:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a30:	4a04      	ldr	r2, [pc, #16]	@ (90002a44 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a32:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a34:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a36:	6023      	str	r3, [r4, #0]
}
90002a38:	bc30      	pop	{r4, r5}
90002a3a:	4770      	bx	lr
90002a3c:	52001000 	.word	0x52001000
90002a40:	00020001 	.word	0x00020001
90002a44:	ff020002 	.word	0xff020002

90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a48:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a4a:	4c0c      	ldr	r4, [pc, #48]	@ (90002a7c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a4c:	6825      	ldr	r5, [r4, #0]
90002a4e:	07ed      	lsls	r5, r5, #31
90002a50:	d4fc      	bmi.n	90002a4c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a52:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a54:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a56:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a58:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a5a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a5e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a62:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a64:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a66:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a68:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a6a:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a6c:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a6e:	4b04      	ldr	r3, [pc, #16]	@ (90002a80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a70:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a72:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a74:	6023      	str	r3, [r4, #0]
}
90002a76:	bc70      	pop	{r4, r5, r6}
90002a78:	4770      	bx	lr
90002a7a:	bf00      	nop
90002a7c:	52001000 	.word	0x52001000
90002a80:	00020001 	.word	0x00020001

90002a84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a84:	2001      	movs	r0, #1
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a88:	200c      	movs	r0, #12
90002a8a:	4770      	bx	lr

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a8c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a90:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a98:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a9c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002aa0:	3008      	adds	r0, #8
90002aa2:	4770      	bx	lr

90002aa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002aa4:	2001      	movs	r0, #1
90002aa6:	4770      	bx	lr

90002aa8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002aa8:	f44f 7021 	mov.w	r0, #644	@ 0x284
90002aac:	4770      	bx	lr
90002aae:	bf00      	nop

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ab0:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ab4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ab8:	3008      	adds	r0, #8
90002aba:	4770      	bx	lr

90002abc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002abc:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ac0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ac4:	3008      	adds	r0, #8
90002ac6:	4770      	bx	lr

90002ac8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002ac8:	2001      	movs	r0, #1
90002aca:	4770      	bx	lr

90002acc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002acc:	2010      	movs	r0, #16
90002ace:	4770      	bx	lr

90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ad4:	3008      	adds	r0, #8
90002ad6:	4770      	bx	lr

90002ad8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002adc:	3008      	adds	r0, #8
90002ade:	4770      	bx	lr

90002ae0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
90002ae0:	4608      	mov	r0, r1
90002ae2:	f003 bacf 	b.w	90006084 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
90002ae6:	bf00      	nop

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ae8:	4b03      	ldr	r3, [pc, #12]	@ (90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00e fb1b 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	4620      	mov	r0, r4
90002af6:	bd10      	pop	{r4, pc}
90002af8:	9002d798 	.word	0x9002d798

90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002afc:	4b05      	ldr	r3, [pc, #20]	@ (90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afe:	b510      	push	{r4, lr}
90002b00:	4604      	mov	r4, r0
90002b02:	6003      	str	r3, [r0, #0]
90002b04:	f00e fb11 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	2114      	movs	r1, #20
90002b0a:	4620      	mov	r0, r4
90002b0c:	f027 fb1a 	bl	9002a144 <_ZdlPvj>
90002b10:	4620      	mov	r0, r4
90002b12:	bd10      	pop	{r4, pc}
90002b14:	9002d798 	.word	0x9002d798

90002b18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b18:	4b03      	ldr	r3, [pc, #12]	@ (90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b1a:	b510      	push	{r4, lr}
90002b1c:	4604      	mov	r4, r0
90002b1e:	6003      	str	r3, [r0, #0]
90002b20:	f00e fb03 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b24:	4620      	mov	r0, r4
90002b26:	bd10      	pop	{r4, pc}
90002b28:	9002d764 	.word	0x9002d764

90002b2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b2c:	4b06      	ldr	r3, [pc, #24]	@ (90002b48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002b2e:	b510      	push	{r4, lr}
90002b30:	4604      	mov	r4, r0
90002b32:	6003      	str	r3, [r0, #0]
90002b34:	f00e faf9 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b38:	f44f 7123 	mov.w	r1, #652	@ 0x28c
90002b3c:	4620      	mov	r0, r4
90002b3e:	f027 fb01 	bl	9002a144 <_ZdlPvj>
90002b42:	4620      	mov	r0, r4
90002b44:	bd10      	pop	{r4, pc}
90002b46:	bf00      	nop
90002b48:	9002d764 	.word	0x9002d764

90002b4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b4c:	4b03      	ldr	r3, [pc, #12]	@ (90002b5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b4e:	b510      	push	{r4, lr}
90002b50:	4604      	mov	r4, r0
90002b52:	6003      	str	r3, [r0, #0]
90002b54:	f00e fae9 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b58:	4620      	mov	r0, r4
90002b5a:	bd10      	pop	{r4, pc}
90002b5c:	9002d730 	.word	0x9002d730

90002b60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b60:	4b05      	ldr	r3, [pc, #20]	@ (90002b78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b62:	b510      	push	{r4, lr}
90002b64:	4604      	mov	r4, r0
90002b66:	6003      	str	r3, [r0, #0]
90002b68:	f00e fadf 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6c:	2118      	movs	r1, #24
90002b6e:	4620      	mov	r0, r4
90002b70:	f027 fae8 	bl	9002a144 <_ZdlPvj>
90002b74:	4620      	mov	r0, r4
90002b76:	bd10      	pop	{r4, pc}
90002b78:	9002d730 	.word	0x9002d730

90002b7c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b7c:	b510      	push	{r4, lr}
90002b7e:	4a0c      	ldr	r2, [pc, #48]	@ (90002bb0 <_ZN12FrontendHeapD1Ev+0x34>)
90002b80:	4604      	mov	r4, r0
90002b82:	4b0c      	ldr	r3, [pc, #48]	@ (90002bb4 <_ZN12FrontendHeapD1Ev+0x38>)
90002b84:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002b88:	6022      	str	r2, [r4, #0]
90002b8a:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002b8e:	f00e facc 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b92:	4b09      	ldr	r3, [pc, #36]	@ (90002bb8 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b94:	4620      	mov	r0, r4
90002b96:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b9a:	f00e fac6 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b9e:	4b07      	ldr	r3, [pc, #28]	@ (90002bbc <_ZN12FrontendHeapD1Ev+0x40>)
90002ba0:	4620      	mov	r0, r4
90002ba2:	f840 3f14 	str.w	r3, [r0, #20]!
90002ba6:	f00e fac0 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002baa:	4620      	mov	r0, r4
90002bac:	bd10      	pop	{r4, pc}
90002bae:	bf00      	nop
90002bb0:	9002d7cc 	.word	0x9002d7cc
90002bb4:	9002d798 	.word	0x9002d798
90002bb8:	9002d764 	.word	0x9002d764
90002bbc:	9002d730 	.word	0x9002d730

90002bc0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002bc0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002bc2:	4c0c      	ldr	r4, [pc, #48]	@ (90002bf4 <__tcf_0+0x34>)
90002bc4:	4a0c      	ldr	r2, [pc, #48]	@ (90002bf8 <__tcf_0+0x38>)
90002bc6:	4b0d      	ldr	r3, [pc, #52]	@ (90002bfc <__tcf_0+0x3c>)
90002bc8:	f504 702e 	add.w	r0, r4, #696	@ 0x2b8
90002bcc:	6022      	str	r2, [r4, #0]
90002bce:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002bd2:	f00e faaa 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd6:	4b0a      	ldr	r3, [pc, #40]	@ (90002c00 <__tcf_0+0x40>)
90002bd8:	4620      	mov	r0, r4
90002bda:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bde:	f00e faa4 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be2:	4620      	mov	r0, r4
90002be4:	4b07      	ldr	r3, [pc, #28]	@ (90002c04 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bea:	f840 3f14 	str.w	r3, [r0, #20]!
90002bee:	f00e ba9c 	b.w	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf2:	bf00      	nop
90002bf4:	24006f18 	.word	0x24006f18
90002bf8:	9002d7cc 	.word	0x9002d7cc
90002bfc:	9002d798 	.word	0x9002d798
90002c00:	9002d764 	.word	0x9002d764
90002c04:	9002d730 	.word	0x9002d730

90002c08 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002c08:	b510      	push	{r4, lr}
90002c0a:	4a0e      	ldr	r2, [pc, #56]	@ (90002c44 <_ZN12FrontendHeapD0Ev+0x3c>)
90002c0c:	4604      	mov	r4, r0
90002c0e:	4b0e      	ldr	r3, [pc, #56]	@ (90002c48 <_ZN12FrontendHeapD0Ev+0x40>)
90002c10:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002c14:	6022      	str	r2, [r4, #0]
90002c16:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002c1a:	f00e fa86 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c1e:	4b0b      	ldr	r3, [pc, #44]	@ (90002c4c <_ZN12FrontendHeapD0Ev+0x44>)
90002c20:	4620      	mov	r0, r4
90002c22:	f840 3f2c 	str.w	r3, [r0, #44]!
90002c26:	f00e fa80 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c2a:	4b09      	ldr	r3, [pc, #36]	@ (90002c50 <_ZN12FrontendHeapD0Ev+0x48>)
90002c2c:	4620      	mov	r0, r4
90002c2e:	f840 3f14 	str.w	r3, [r0, #20]!
90002c32:	f00e fa7a 	bl	9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c36:	4620      	mov	r0, r4
90002c38:	f240 4134 	movw	r1, #1076	@ 0x434
90002c3c:	f027 fa82 	bl	9002a144 <_ZdlPvj>
90002c40:	4620      	mov	r0, r4
90002c42:	bd10      	pop	{r4, pc}
90002c44:	9002d7cc 	.word	0x9002d7cc
90002c48:	9002d798 	.word	0x9002d798
90002c4c:	9002d764 	.word	0x9002d764
90002c50:	9002d730 	.word	0x9002d730

90002c54 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c58:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c5a:	2400      	movs	r4, #0
90002c5c:	f002 fbc8 	bl	900053f0 <_ZN14BitmapDatabase11getInstanceEv>
90002c60:	4605      	mov	r5, r0
90002c62:	f002 fbc9 	bl	900053f8 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c66:	4623      	mov	r3, r4
90002c68:	4601      	mov	r1, r0
90002c6a:	4622      	mov	r2, r4
90002c6c:	4628      	mov	r0, r5
90002c6e:	9400      	str	r4, [sp, #0]
90002c70:	f018 f9a6 	bl	9001afc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c74:	4b29      	ldr	r3, [pc, #164]	@ (90002d1c <touchgfx_init+0xc8>)
90002c76:	4a2a      	ldr	r2, [pc, #168]	@ (90002d20 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c78:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c7a:	4c2a      	ldr	r4, [pc, #168]	@ (90002d24 <touchgfx_init+0xd0>)
90002c7c:	601a      	str	r2, [r3, #0]
90002c7e:	f003 fdad 	bl	900067dc <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c82:	4b29      	ldr	r3, [pc, #164]	@ (90002d28 <touchgfx_init+0xd4>)
90002c84:	4a29      	ldr	r2, [pc, #164]	@ (90002d2c <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c86:	482a      	ldr	r0, [pc, #168]	@ (90002d30 <touchgfx_init+0xdc>)
90002c88:	609a      	str	r2, [r3, #8]
90002c8a:	f018 f901 	bl	9001ae90 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c8e:	6823      	ldr	r3, [r4, #0]
90002c90:	f3bf 8f5b 	dmb	ish
90002c94:	07db      	lsls	r3, r3, #31
90002c96:	d505      	bpl.n	90002ca4 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c98:	4826      	ldr	r0, [pc, #152]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002c9a:	b002      	add	sp, #8
90002c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002ca0:	f7fe b950 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002ca4:	4620      	mov	r0, r4
90002ca6:	f027 fa4f 	bl	9002a148 <__cxa_guard_acquire>
90002caa:	2800      	cmp	r0, #0
90002cac:	d0f4      	beq.n	90002c98 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002cae:	4d22      	ldr	r5, [pc, #136]	@ (90002d38 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002cb0:	4b22      	ldr	r3, [pc, #136]	@ (90002d3c <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002cb2:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
        : presenterStorage(pres),
90002cb6:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002cba:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002cbe:	f505 772e 	add.w	r7, r5, #696	@ 0x2b8
90002cc2:	602b      	str	r3, [r5, #0]
90002cc4:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002cc6:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002cc8:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002ccc:	f00e fa2e 	bl	9001112c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cd0:	4b1b      	ldr	r3, [pc, #108]	@ (90002d40 <touchgfx_init+0xec>)
90002cd2:	4640      	mov	r0, r8
90002cd4:	616b      	str	r3, [r5, #20]
90002cd6:	f00e fa29 	bl	9001112c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cda:	4b1a      	ldr	r3, [pc, #104]	@ (90002d44 <touchgfx_init+0xf0>)
90002cdc:	4638      	mov	r0, r7
90002cde:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002ce0:	f00e fa24 	bl	9001112c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ce4:	4b18      	ldr	r3, [pc, #96]	@ (90002d48 <touchgfx_init+0xf4>)
90002ce6:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
90002cea:	f8c5 32b8 	str.w	r3, [r5, #696]	@ 0x2b8
90002cee:	f003 feb5 	bl	90006a5c <_ZN5ModelC1Ev>
90002cf2:	462a      	mov	r2, r5
90002cf4:	f505 7133 	add.w	r1, r5, #716	@ 0x2cc
90002cf8:	4630      	mov	r0, r6
90002cfa:	f003 fea5 	bl	90006a48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cfe:	4630      	mov	r0, r6
90002d00:	f003 f9c0 	bl	90006084 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002d04:	4811      	ldr	r0, [pc, #68]	@ (90002d4c <touchgfx_init+0xf8>)
90002d06:	f027 fdb1 	bl	9002a86c <atexit>
90002d0a:	4620      	mov	r0, r4
90002d0c:	f027 fa28 	bl	9002a160 <__cxa_guard_release>
90002d10:	4808      	ldr	r0, [pc, #32]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002d12:	b002      	add	sp, #8
90002d14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002d18:	f7fe b914 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002d1c:	24021dc8 	.word	0x24021dc8
90002d20:	240060c0 	.word	0x240060c0
90002d24:	24006f14 	.word	0x24006f14
90002d28:	240060e0 	.word	0x240060e0
90002d2c:	240060c4 	.word	0x240060c4
90002d30:	24000040 	.word	0x24000040
90002d34:	24006030 	.word	0x24006030
90002d38:	24006f18 	.word	0x24006f18
90002d3c:	9002d7cc 	.word	0x9002d7cc
90002d40:	9002d730 	.word	0x9002d730
90002d44:	9002d764 	.word	0x9002d764
90002d48:	9002d798 	.word	0x9002d798
90002d4c:	90002bc1 	.word	0x90002bc1

90002d50 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d50:	4770      	bx	lr
90002d52:	bf00      	nop

90002d54 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d54:	4801      	ldr	r0, [pc, #4]	@ (90002d5c <touchgfx_taskEntry+0x8>)
90002d56:	f7fe b943 	b.w	90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>
90002d5a:	bf00      	nop
90002d5c:	24006030 	.word	0x24006030

90002d60 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d60:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d62:	4e2a      	ldr	r6, [pc, #168]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002d64:	4b2a      	ldr	r3, [pc, #168]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d66:	4c2b      	ldr	r4, [pc, #172]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d68:	4630      	mov	r0, r6
static LCD16bpp display;
90002d6a:	4d2b      	ldr	r5, [pc, #172]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d6c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d6e:	f7ff fdd7 	bl	90002920 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d72:	4628      	mov	r0, r5
90002d74:	f01d fa34 	bl	900201e0 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d78:	4828      	ldr	r0, [pc, #160]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d7a:	f015 fe2b 	bl	900189d4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d7e:	4b28      	ldr	r3, [pc, #160]	@ (90002e20 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d80:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d82:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d86:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d8a:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d8c:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d8e:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d90:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d94:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d96:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d98:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d9c:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002da0:	4c20      	ldr	r4, [pc, #128]	@ (90002e24 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002da2:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002da4:	4c20      	ldr	r4, [pc, #128]	@ (90002e28 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002da6:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002da8:	4c20      	ldr	r4, [pc, #128]	@ (90002e2c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002daa:	8020      	strh	r0, [r4, #0]
90002dac:	4c20      	ldr	r4, [pc, #128]	@ (90002e30 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002dae:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002db0:	4c20      	ldr	r4, [pc, #128]	@ (90002e34 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002db2:	4821      	ldr	r0, [pc, #132]	@ (90002e38 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002db4:	8021      	strh	r1, [r4, #0]
90002db6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002db8:	4820      	ldr	r0, [pc, #128]	@ (90002e3c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002dba:	4921      	ldr	r1, [pc, #132]	@ (90002e40 <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dbc:	4c21      	ldr	r4, [pc, #132]	@ (90002e44 <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002dbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dc2:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002dc6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dca:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002dcc:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002dd0:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002dd4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002dd8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002ddc:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002de0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002de4:	7002      	strb	r2, [r0, #0]
90002de6:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002de8:	4917      	ldr	r1, [pc, #92]	@ (90002e48 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002dea:	4818      	ldr	r0, [pc, #96]	@ (90002e4c <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002dec:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002dee:	4918      	ldr	r1, [pc, #96]	@ (90002e50 <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002df0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002df4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002df8:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002dfc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002e00:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002e04:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002e08:	bd70      	pop	{r4, r5, r6, pc}
90002e0a:	bf00      	nop
90002e0c:	2400616c 	.word	0x2400616c
90002e10:	9002b950 	.word	0x9002b950
90002e14:	24006f10 	.word	0x24006f10
90002e18:	240060e0 	.word	0x240060e0
90002e1c:	240060c4 	.word	0x240060c4
90002e20:	24006030 	.word	0x24006030
90002e24:	01000001 	.word	0x01000001
90002e28:	24021d64 	.word	0x24021d64
90002e2c:	24021d58 	.word	0x24021d58
90002e30:	24021d5e 	.word	0x24021d5e
90002e34:	24021d5a 	.word	0x24021d5a
90002e38:	24021d60 	.word	0x24021d60
90002e3c:	24021d5c 	.word	0x24021d5c
90002e40:	9002d5b0 	.word	0x9002d5b0
90002e44:	01010000 	.word	0x01010000
90002e48:	00440400 	.word	0x00440400
90002e4c:	00140016 	.word	0x00140016
90002e50:	9002b928 	.word	0x9002b928

90002e54 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e54:	4801      	ldr	r0, [pc, #4]	@ (90002e5c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e56:	f7ff badd 	b.w	90002414 <_ZN8STM32DMAD1Ev>
90002e5a:	bf00      	nop
90002e5c:	2400616c 	.word	0x2400616c

90002e60 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e60:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e64:	b112      	cbz	r2, 90002e6c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e66:	6803      	ldr	r3, [r0, #0]
90002e68:	695b      	ldr	r3, [r3, #20]
90002e6a:	4718      	bx	r3
        }
    }
90002e6c:	4770      	bx	lr
90002e6e:	bf00      	nop

90002e70 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e70:	2000      	movs	r0, #0
90002e72:	4770      	bx	lr

90002e74 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e74:	8081      	strh	r1, [r0, #4]
    }
90002e76:	4770      	bx	lr

90002e78 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e78:	80c1      	strh	r1, [r0, #6]
    }
90002e7a:	4770      	bx	lr

90002e7c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e7c:	8101      	strh	r1, [r0, #8]
    }
90002e7e:	4770      	bx	lr

90002e80 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e80:	8141      	strh	r1, [r0, #10]
    }
90002e82:	4770      	bx	lr

90002e84 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e8c:	4770      	bx	lr
90002e8e:	bf00      	nop

90002e90 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e90:	4770      	bx	lr
90002e92:	bf00      	nop

90002e94 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e98:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e9c:	6803      	ldr	r3, [r0, #0]
90002e9e:	eba2 020c 	sub.w	r2, r2, ip
90002ea2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002ea6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002ea8:	eba1 010c 	sub.w	r1, r1, ip
90002eac:	b212      	sxth	r2, r2
90002eae:	b209      	sxth	r1, r1
90002eb0:	4718      	bx	r3
90002eb2:	bf00      	nop

90002eb4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002eb4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002eb6:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002eba:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002ebe:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002ec2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002ec6:	6010      	str	r0, [r2, #0]
    }
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002ecc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002ed0:	b11a      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002ed2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002ed6:	b102      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002ed8:	6018      	str	r0, [r3, #0]
        }
    }
90002eda:	4770      	bx	lr

90002edc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002edc:	2000      	movs	r0, #0
90002ede:	4770      	bx	lr

90002ee0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002ee0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002ee2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ee4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ee6:	809a      	strh	r2, [r3, #4]
    }
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eec:	4770      	bx	lr
90002eee:	bf00      	nop

90002ef0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ef0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ef4:	4770      	bx	lr
90002ef6:	bf00      	nop

90002ef8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ef8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002efc:	4770      	bx	lr
90002efe:	bf00      	nop

90002f00 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002f00:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002f04:	688a      	ldr	r2, [r1, #8]
90002f06:	f8c0 c000 	str.w	ip, [r0]
90002f0a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002f0c:	4770      	bx	lr
90002f0e:	bf00      	nop

90002f10 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002f10:	2200      	movs	r2, #0
90002f12:	6002      	str	r2, [r0, #0]
90002f14:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002f16:	4770      	bx	lr

90002f18 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002f18:	2000      	movs	r0, #0
90002f1a:	4770      	bx	lr

90002f1c <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002f1c:	7701      	strb	r1, [r0, #28]
    }
90002f1e:	4770      	bx	lr

90002f20 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002f20:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop

90002f28 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002f28:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002f2c:	4770      	bx	lr
90002f2e:	bf00      	nop

90002f30 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002f30:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f34:	4770      	bx	lr
90002f36:	bf00      	nop

90002f38 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f38:	2001      	movs	r0, #1
90002f3a:	4770      	bx	lr

90002f3c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f3c:	3098      	adds	r0, #152	@ 0x98
90002f3e:	4770      	bx	lr

90002f40 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f40:	308c      	adds	r0, #140	@ 0x8c
90002f42:	4770      	bx	lr

90002f44 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f44:	3084      	adds	r0, #132	@ 0x84
90002f46:	4770      	bx	lr

90002f48 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f48:	4770      	bx	lr
90002f4a:	bf00      	nop

90002f4c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f50:	4770      	bx	lr
90002f52:	bf00      	nop

90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f54:	4b03      	ldr	r3, [pc, #12]	@ (90002f64 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f56:	2290      	movs	r2, #144	@ 0x90
90002f58:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f5c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f60:	4770      	bx	lr
90002f62:	bf00      	nop
90002f64:	e000e100 	.word	0xe000e100

90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f68:	4a09      	ldr	r2, [pc, #36]	@ (90002f90 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f6a:	490a      	ldr	r1, [pc, #40]	@ (90002f94 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f6c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f6e:	480a      	ldr	r0, [pc, #40]	@ (90002f98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f70:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f74:	3b01      	subs	r3, #1
90002f76:	b29b      	uxth	r3, r3
90002f78:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f7a:	6911      	ldr	r1, [r2, #16]
90002f7c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f80:	3901      	subs	r1, #1
90002f82:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f84:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f86:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f88:	f043 0301 	orr.w	r3, r3, #1
90002f8c:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f8e:	4770      	bx	lr
90002f90:	50001000 	.word	0x50001000
90002f94:	2400734e 	.word	0x2400734e
90002f98:	2400734c 	.word	0x2400734c

90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f9c:	4b01      	ldr	r3, [pc, #4]	@ (90002fa4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f9e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002fa2:	4770      	bx	lr
90002fa4:	50001000 	.word	0x50001000

90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fa8:	4b02      	ldr	r3, [pc, #8]	@ (90002fb4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002faa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fac:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002fb0:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002fb2:	4770      	bx	lr
90002fb4:	50001000 	.word	0x50001000

90002fb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fb8:	4770      	bx	lr
90002fba:	bf00      	nop

90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002fbc:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002fc0:	2300      	movs	r3, #0
90002fc2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002fc6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002fca:	4770      	bx	lr

90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002fcc:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002fd0:	4770      	bx	lr
90002fd2:	bf00      	nop

90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fd4:	b510      	push	{r4, lr}
90002fd6:	4604      	mov	r4, r0
90002fd8:	2130      	movs	r1, #48	@ 0x30
90002fda:	f027 f8b3 	bl	9002a144 <_ZdlPvj>
90002fde:	4620      	mov	r0, r4
90002fe0:	bd10      	pop	{r4, pc}
90002fe2:	bf00      	nop

90002fe4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002fe4:	b510      	push	{r4, lr}
90002fe6:	4604      	mov	r4, r0
90002fe8:	212c      	movs	r1, #44	@ 0x2c
90002fea:	f027 f8ab 	bl	9002a144 <_ZdlPvj>
90002fee:	4620      	mov	r0, r4
90002ff0:	bd10      	pop	{r4, pc}
90002ff2:	bf00      	nop

90002ff4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ff4:	b510      	push	{r4, lr}
90002ff6:	4604      	mov	r4, r0
90002ff8:	21bc      	movs	r1, #188	@ 0xbc
90002ffa:	f027 f8a3 	bl	9002a144 <_ZdlPvj>
90002ffe:	4620      	mov	r0, r4
90003000:	bd10      	pop	{r4, pc}
90003002:	bf00      	nop

90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90003004:	b911      	cbnz	r1, 9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90003006:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
9000300a:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
9000300c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000300e:	4a03      	ldr	r2, [pc, #12]	@ (9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90003010:	f44f 7192 	mov.w	r1, #292	@ 0x124
90003014:	4b02      	ldr	r3, [pc, #8]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90003016:	4803      	ldr	r0, [pc, #12]	@ (90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90003018:	f027 fc0a 	bl	9002a830 <__assert_func>
9000301c:	9002c040 	.word	0x9002c040
90003020:	9002c02c 	.word	0x9002c02c
90003024:	9002c15c 	.word	0x9002c15c

90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90003028:	b921      	cbnz	r1, 90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
9000302a:	6840      	ldr	r0, [r0, #4]
9000302c:	4611      	mov	r1, r2
9000302e:	6803      	ldr	r3, [r0, #0]
90003030:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003032:	4718      	bx	r3
        assert(handle < no_streams);
90003034:	4b03      	ldr	r3, [pc, #12]	@ (90003044 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003036:	f44f 718f 	mov.w	r1, #286	@ 0x11e
9000303a:	4a03      	ldr	r2, [pc, #12]	@ (90003048 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
9000303c:	4803      	ldr	r0, [pc, #12]	@ (9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000303e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003040:	f027 fbf6 	bl	9002a830 <__assert_func>
90003044:	9002c02c 	.word	0x9002c02c
90003048:	9002c1a4 	.word	0x9002c1a4
9000304c:	9002c15c 	.word	0x9002c15c

90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90003050:	b909      	cbnz	r1, 90003056 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90003052:	68c0      	ldr	r0, [r0, #12]
90003054:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003056:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003058:	4a03      	ldr	r2, [pc, #12]	@ (90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000305a:	f44f 718b 	mov.w	r1, #278	@ 0x116
9000305e:	4b03      	ldr	r3, [pc, #12]	@ (9000306c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003060:	4803      	ldr	r0, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90003062:	f027 fbe5 	bl	9002a830 <__assert_func>
90003066:	bf00      	nop
90003068:	9002c2e4 	.word	0x9002c2e4
9000306c:	9002c02c 	.word	0x9002c02c
90003070:	9002c15c 	.word	0x9002c15c

90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003074:	b921      	cbnz	r1, 90003080 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003076:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003078:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000307a:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000307e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003080:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003082:	4a03      	ldr	r2, [pc, #12]	@ (90003090 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003084:	2141      	movs	r1, #65	@ 0x41
90003086:	4b03      	ldr	r3, [pc, #12]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003088:	4803      	ldr	r0, [pc, #12]	@ (90003098 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000308a:	f027 fbd1 	bl	9002a830 <__assert_func>
9000308e:	bf00      	nop
90003090:	9002c42c 	.word	0x9002c42c
90003094:	9002c02c 	.word	0x9002c02c
90003098:	9002c15c 	.word	0x9002c15c

9000309c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000309c:	b508      	push	{r3, lr}
9000309e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900030a0:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
900030a4:	b940      	cbnz	r0, 900030b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
900030a6:	2201      	movs	r2, #1
900030a8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
900030ac:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
900030b0:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
900030b4:	6308      	str	r0, [r1, #48]	@ 0x30
    }
900030b6:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900030b8:	4b03      	ldr	r3, [pc, #12]	@ (900030c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
900030ba:	f240 116d 	movw	r1, #365	@ 0x16d
900030be:	4a03      	ldr	r2, [pc, #12]	@ (900030cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
900030c0:	4803      	ldr	r0, [pc, #12]	@ (900030d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
900030c2:	f027 fbb5 	bl	9002a830 <__assert_func>
900030c6:	bf00      	nop
900030c8:	9002c578 	.word	0x9002c578
900030cc:	9002c5a8 	.word	0x9002c5a8
900030d0:	9002c15c 	.word	0x9002c15c

900030d4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030d4:	f00e bb0e 	b.w	900116f4 <_ZN8touchgfx3HAL10beginFrameEv>

900030d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030d8:	f00e bb18 	b.w	9001170c <_ZN8touchgfx3HAL8endFrameEv>

900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030dc:	f00e bad4 	b.w	90011688 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030e0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030e0:	f00e bc43 	b.w	9001196a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030e4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030e4:	4814      	ldr	r0, [pc, #80]	@ (90003138 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030e6:	6943      	ldr	r3, [r0, #20]
900030e8:	03d9      	lsls	r1, r3, #15
900030ea:	d523      	bpl.n	90003134 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030ec:	2300      	movs	r3, #0
{
900030ee:	b510      	push	{r4, lr}
900030f0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030f4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030f8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030fc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003100:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003104:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003108:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000310c:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003110:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003112:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003116:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003118:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
9000311c:	1c5a      	adds	r2, r3, #1
9000311e:	d1f8      	bne.n	90003112 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90003120:	f1ac 0c20 	sub.w	ip, ip, #32
90003124:	f11c 0f20 	cmn.w	ip, #32
90003128:	d1f0      	bne.n	9000310c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000312a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000312e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003132:	bd10      	pop	{r4, pc}
90003134:	4770      	bx	lr
90003136:	bf00      	nop
90003138:	e000ed00 	.word	0xe000ed00

9000313c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
9000313c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000313e:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003140:	bb59      	cbnz	r1, 9000319a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
90003142:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003144:	6840      	ldr	r0, [r0, #4]
90003146:	461d      	mov	r5, r3
90003148:	4616      	mov	r6, r2
9000314a:	6803      	ldr	r3, [r0, #0]
9000314c:	691b      	ldr	r3, [r3, #16]
9000314e:	4798      	blx	r3
90003150:	b908      	cbnz	r0, 90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003152:	b003      	add	sp, #12
90003154:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003156:	4f14      	ldr	r7, [pc, #80]	@ (900031a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003158:	2101      	movs	r1, #1
9000315a:	6838      	ldr	r0, [r7, #0]
9000315c:	f00f f8da 	bl	90012314 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003160:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003162:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003164:	4668      	mov	r0, sp
90003166:	f015 fc1b 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
9000316a:	4668      	mov	r0, sp
9000316c:	f013 ffe0 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003170:	4b0e      	ldr	r3, [pc, #56]	@ (900031ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003172:	6860      	ldr	r0, [r4, #4]
90003174:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003176:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
9000317a:	881b      	ldrh	r3, [r3, #0]
9000317c:	f9bd 2000 	ldrsh.w	r2, [sp]
90003180:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003184:	6804      	ldr	r4, [r0, #0]
90003186:	eb05 0242 	add.w	r2, r5, r2, lsl #1
9000318a:	69e4      	ldr	r4, [r4, #28]
9000318c:	47a0      	blx	r4
9000318e:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003190:	6803      	ldr	r3, [r0, #0]
90003192:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003194:	4798      	blx	r3
    }
90003196:	b003      	add	sp, #12
90003198:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
9000319a:	4b05      	ldr	r3, [pc, #20]	@ (900031b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000319c:	21ea      	movs	r1, #234	@ 0xea
9000319e:	4a05      	ldr	r2, [pc, #20]	@ (900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
900031a0:	4805      	ldr	r0, [pc, #20]	@ (900031b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
900031a2:	f027 fb45 	bl	9002a830 <__assert_func>
900031a6:	bf00      	nop
900031a8:	24021d64 	.word	0x24021d64
900031ac:	24021d5e 	.word	0x24021d5e
900031b0:	9002c02c 	.word	0x9002c02c
900031b4:	9002c6c0 	.word	0x9002c6c0
900031b8:	9002c15c 	.word	0x9002c15c

900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031bc:	4b08      	ldr	r3, [pc, #32]	@ (900031e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900031be:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031ca:	f3bf 8f6f 	isb	sy
900031ce:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031d2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031da:	f3bf 8f6f 	isb	sy
}
900031de:	4770      	bx	lr
900031e0:	e000e100 	.word	0xe000e100

900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031e4:	4b03      	ldr	r3, [pc, #12]	@ (900031f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031ea:	609a      	str	r2, [r3, #8]
900031ec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031f0:	609a      	str	r2, [r3, #8]
}
900031f2:	4770      	bx	lr
900031f4:	e000e100 	.word	0xe000e100

900031f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031fc:	2900      	cmp	r1, #0
900031fe:	f040 8096 	bne.w	9000332e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
90003202:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90003206:	4604      	mov	r4, r0
90003208:	b933      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
9000320a:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
9000320e:	b91b      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
90003210:	2501      	movs	r5, #1
    }
90003212:	4628      	mov	r0, r5
90003214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
90003218:	4b48      	ldr	r3, [pc, #288]	@ (9000333c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
9000321a:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000321c:	6921      	ldr	r1, [r4, #16]
9000321e:	681b      	ldr	r3, [r3, #0]
90003220:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
90003224:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90003228:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
9000322a:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000322e:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
90003230:	b979      	cbnz	r1, 90003252 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003232:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003234:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003236:	6961      	ldr	r1, [r4, #20]
90003238:	fb01 f303 	mul.w	r3, r1, r3
9000323c:	69a1      	ldr	r1, [r4, #24]
9000323e:	fb01 f202 	mul.w	r2, r1, r2
90003242:	4293      	cmp	r3, r2
90003244:	d824      	bhi.n	90003290 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003246:	2300      	movs	r3, #0
    }
90003248:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
9000324a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000324e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
90003252:	6813      	ldr	r3, [r2, #0]
90003254:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003256:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003258:	695b      	ldr	r3, [r3, #20]
9000325a:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
9000325c:	69e1      	ldr	r1, [r4, #28]
9000325e:	bb21      	cbnz	r1, 900032aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003260:	6a23      	ldr	r3, [r4, #32]
90003262:	2b00      	cmp	r3, #0
90003264:	d142      	bne.n	900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003266:	4f36      	ldr	r7, [pc, #216]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003268:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
9000326c:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000326e:	2d00      	cmp	r5, #0
90003270:	d02c      	beq.n	900032cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
90003272:	699b      	ldr	r3, [r3, #24]
90003274:	4630      	mov	r0, r6
90003276:	4798      	blx	r3
90003278:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000327a:	6833      	ldr	r3, [r6, #0]
9000327c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000327e:	42bb      	cmp	r3, r7
90003280:	d145      	bne.n	9000330e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
90003282:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003284:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003286:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003288:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000328a:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
9000328c:	60a2      	str	r2, [r4, #8]
9000328e:	e7d2      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003290:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003294:	b138      	cbz	r0, 900032a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003296:	1a9b      	subs	r3, r3, r2
90003298:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000329c:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000329e:	bf98      	it	ls
900032a0:	f102 32ff 	addls.w	r2, r2, #4294967295
900032a4:	6222      	str	r2, [r4, #32]
            return true;
900032a6:	2301      	movs	r3, #1
900032a8:	e7ce      	b.n	90003248 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
900032aa:	6833      	ldr	r3, [r6, #0]
900032ac:	4630      	mov	r0, r6
900032ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900032b0:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032b2:	6833      	ldr	r3, [r6, #0]
900032b4:	69e5      	ldr	r5, [r4, #28]
900032b6:	4630      	mov	r0, r6
900032b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032ba:	4798      	blx	r3
900032bc:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
900032be:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032c0:	bf28      	it	cs
900032c2:	2500      	movcs	r5, #0
900032c4:	4f1e      	ldr	r7, [pc, #120]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
900032c6:	bf38      	it	cc
900032c8:	2501      	movcc	r5, #1
900032ca:	e7d6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032cc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900032ce:	42ba      	cmp	r2, r7
900032d0:	d124      	bne.n	9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
900032d2:	f8d6 8014 	ldr.w	r8, [r6, #20]
900032d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032d8:	4630      	mov	r0, r6
900032da:	4798      	blx	r3
900032dc:	4580      	cmp	r8, r0
900032de:	d219      	bcs.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032e0:	6833      	ldr	r3, [r6, #0]
900032e2:	4630      	mov	r0, r6
900032e4:	699b      	ldr	r3, [r3, #24]
900032e6:	4798      	blx	r3
900032e8:	4605      	mov	r5, r0
900032ea:	e7c6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032ec:	6832      	ldr	r2, [r6, #0]
900032ee:	4f14      	ldr	r7, [pc, #80]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032f0:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032f4:	42ba      	cmp	r2, r7
900032f6:	d116      	bne.n	90003326 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032f8:	6970      	ldr	r0, [r6, #20]
900032fa:	18c1      	adds	r1, r0, r3
900032fc:	4630      	mov	r0, r6
900032fe:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003300:	6a22      	ldr	r2, [r4, #32]
90003302:	68a3      	ldr	r3, [r4, #8]
90003304:	4413      	add	r3, r2
                        stream.skip_frames = 0;
90003306:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
90003308:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
9000330a:	6222      	str	r2, [r4, #32]
9000330c:	e7ac      	b.n	90003268 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000330e:	4630      	mov	r0, r6
90003310:	4798      	blx	r3
90003312:	e7b7      	b.n	90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
90003314:	2300      	movs	r3, #0
90003316:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
9000331a:	e7ae      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
9000331c:	4630      	mov	r0, r6
9000331e:	4790      	blx	r2
90003320:	6833      	ldr	r3, [r6, #0]
90003322:	4680      	mov	r8, r0
90003324:	e7d7      	b.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003326:	4630      	mov	r0, r6
90003328:	4790      	blx	r2
9000332a:	6a23      	ldr	r3, [r4, #32]
9000332c:	e7e5      	b.n	900032fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
9000332e:	4b05      	ldr	r3, [pc, #20]	@ (90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
90003330:	21aa      	movs	r1, #170	@ 0xaa
90003332:	4a05      	ldr	r2, [pc, #20]	@ (90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003334:	4805      	ldr	r0, [pc, #20]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003336:	f027 fa7b 	bl	9002a830 <__assert_func>
9000333a:	bf00      	nop
9000333c:	24021d64 	.word	0x24021d64
90003340:	90001065 	.word	0x90001065
90003344:	9002c02c 	.word	0x9002c02c
90003348:	9002c808 	.word	0x9002c808
9000334c:	9002c15c 	.word	0x9002c15c

90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003350:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003352:	bb11      	cbnz	r1, 9000339a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003354:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003356:	6840      	ldr	r0, [r0, #4]
90003358:	4611      	mov	r1, r2
9000335a:	461a      	mov	r2, r3
9000335c:	6803      	ldr	r3, [r0, #0]
9000335e:	689b      	ldr	r3, [r3, #8]
90003360:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003362:	6860      	ldr	r0, [r4, #4]
90003364:	4a10      	ldr	r2, [pc, #64]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003366:	6803      	ldr	r3, [r0, #0]
90003368:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000336a:	4293      	cmp	r3, r2
9000336c:	d10c      	bne.n	90003388 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000336e:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003370:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003372:	2300      	movs	r3, #0
90003374:	4a0d      	ldr	r2, [pc, #52]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003376:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003378:	60e0      	str	r0, [r4, #12]
9000337a:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000337c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003380:	d104      	bne.n	9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
90003382:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003386:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003388:	4798      	blx	r3
9000338a:	e7f1      	b.n	90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
9000338c:	4620      	mov	r0, r4
9000338e:	46ac      	mov	ip, r5
90003390:	2201      	movs	r2, #1
90003392:	4619      	mov	r1, r3
    }
90003394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003398:	4760      	bx	ip
        assert(handle < no_streams);
9000339a:	4b05      	ldr	r3, [pc, #20]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
9000339c:	214f      	movs	r1, #79	@ 0x4f
9000339e:	4a05      	ldr	r2, [pc, #20]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
900033a0:	4805      	ldr	r0, [pc, #20]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
900033a2:	f027 fa45 	bl	9002a830 <__assert_func>
900033a6:	bf00      	nop
900033a8:	90001065 	.word	0x90001065
900033ac:	90003425 	.word	0x90003425
900033b0:	9002c02c 	.word	0x9002c02c
900033b4:	9002c93c 	.word	0x9002c93c
900033b8:	9002c15c 	.word	0x9002c15c

900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
900033bc:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033be:	bb09      	cbnz	r1, 90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
900033c0:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
900033c2:	6840      	ldr	r0, [r0, #4]
900033c4:	4611      	mov	r1, r2
900033c6:	6803      	ldr	r3, [r0, #0]
900033c8:	68db      	ldr	r3, [r3, #12]
900033ca:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033cc:	6860      	ldr	r0, [r4, #4]
900033ce:	4a10      	ldr	r2, [pc, #64]	@ (90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
900033d0:	6803      	ldr	r3, [r0, #0]
900033d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900033d4:	4293      	cmp	r3, r2
900033d6:	d10c      	bne.n	900033f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033d8:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033da:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033dc:	2300      	movs	r3, #0
900033de:	4a0d      	ldr	r2, [pc, #52]	@ (90003414 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033e0:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033e2:	60e0      	str	r0, [r4, #12]
900033e4:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033e6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033ea:	d104      	bne.n	900033f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033ec:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033f0:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033f2:	4798      	blx	r3
900033f4:	e7f1      	b.n	900033da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033f6:	4620      	mov	r0, r4
900033f8:	46ac      	mov	ip, r5
900033fa:	2201      	movs	r2, #1
900033fc:	4619      	mov	r1, r3
    }
900033fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003402:	4760      	bx	ip
        assert(handle < no_streams);
90003404:	4b04      	ldr	r3, [pc, #16]	@ (90003418 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
90003406:	215f      	movs	r1, #95	@ 0x5f
90003408:	4a04      	ldr	r2, [pc, #16]	@ (9000341c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
9000340a:	4805      	ldr	r0, [pc, #20]	@ (90003420 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
9000340c:	f027 fa10 	bl	9002a830 <__assert_func>
90003410:	90001065 	.word	0x90001065
90003414:	90003425 	.word	0x90003425
90003418:	9002c02c 	.word	0x9002c02c
9000341c:	9002caa8 	.word	0x9002caa8
90003420:	9002c15c 	.word	0x9002c15c

90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003424:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003426:	2900      	cmp	r1, #0
90003428:	d14f      	bne.n	900034ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
9000342a:	4604      	mov	r4, r0
        switch (cmd)
9000342c:	2a05      	cmp	r2, #5
9000342e:	d80b      	bhi.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003430:	e8df f002 	tbb	[pc, r2]
90003434:	3c373311 	.word	0x3c373311
90003438:	0b03      	.short	0x0b03
            stream.isPlaying = false;
9000343a:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
9000343c:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000343e:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
90003442:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003444:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003446:	6103      	str	r3, [r0, #16]
    }
90003448:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
9000344a:	3b00      	subs	r3, #0
9000344c:	bf18      	it	ne
9000344e:	2301      	movne	r3, #1
90003450:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003454:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003456:	6840      	ldr	r0, [r0, #4]
90003458:	6803      	ldr	r3, [r0, #0]
9000345a:	691b      	ldr	r3, [r3, #16]
9000345c:	4798      	blx	r3
9000345e:	2800      	cmp	r0, #0
90003460:	d0f2      	beq.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
90003462:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003464:	2101      	movs	r1, #1
                if (!stream.repeat)
90003466:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
9000346a:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000346e:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003470:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
90003472:	2a00      	cmp	r2, #0
90003474:	d1e8      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003476:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003478:	4917      	ldr	r1, [pc, #92]	@ (900034d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000347a:	6823      	ldr	r3, [r4, #0]
9000347c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000347e:	428a      	cmp	r2, r1
90003480:	d11e      	bne.n	900034c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
90003482:	6965      	ldr	r5, [r4, #20]
90003484:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003486:	4620      	mov	r0, r4
90003488:	4798      	blx	r3
9000348a:	4285      	cmp	r5, r0
9000348c:	d1dc      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000348e:	6823      	ldr	r3, [r4, #0]
90003490:	4620      	mov	r0, r4
90003492:	699b      	ldr	r3, [r3, #24]
    }
90003494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003498:	4718      	bx	r3
            stream.isPlaying = false;
9000349a:	2300      	movs	r3, #0
9000349c:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
900034a0:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
900034a2:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034a4:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
900034a6:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034a8:	6102      	str	r2, [r0, #16]
    }
900034aa:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
900034ac:	2101      	movs	r1, #1
            stream.frameCount = 0;
900034ae:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034b0:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
900034b2:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
900034b6:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
900034ba:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034bc:	6102      	str	r2, [r0, #16]
    }
900034be:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
900034c0:	4620      	mov	r0, r4
900034c2:	4790      	blx	r2
900034c4:	6823      	ldr	r3, [r4, #0]
900034c6:	4605      	mov	r5, r0
900034c8:	e7dc      	b.n	90003484 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
900034ca:	4b04      	ldr	r3, [pc, #16]	@ (900034dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
900034cc:	216f      	movs	r1, #111	@ 0x6f
900034ce:	4a04      	ldr	r2, [pc, #16]	@ (900034e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
900034d0:	4804      	ldr	r0, [pc, #16]	@ (900034e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
900034d2:	f027 f9ad 	bl	9002a830 <__assert_func>
900034d6:	bf00      	nop
900034d8:	90001065 	.word	0x90001065
900034dc:	9002c02c 	.word	0x9002c02c
900034e0:	9002cbe0 	.word	0x9002cbe0
900034e4:	9002c15c 	.word	0x9002c15c

900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034e8:	b538      	push	{r3, r4, r5, lr}
900034ea:	4604      	mov	r4, r0
    HAL::initialize();
900034ec:	f00e f91b 	bl	90011726 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034f0:	6823      	ldr	r3, [r4, #0]
900034f2:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900034f4:	f013 ffb6 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
900034f8:	4601      	mov	r1, r0
900034fa:	4620      	mov	r0, r4
900034fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034fe:	6823      	ldr	r3, [r4, #0]
90003500:	4a13      	ldr	r2, [pc, #76]	@ (90003550 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
90003502:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
90003506:	4295      	cmp	r5, r2
90003508:	d116      	bne.n	90003538 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000350a:	4a12      	ldr	r2, [pc, #72]	@ (90003554 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000350c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000350e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90003512:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003516:	4810      	ldr	r0, [pc, #64]	@ (90003558 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003518:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
9000351c:	4a0f      	ldr	r2, [pc, #60]	@ (9000355c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000351e:	7005      	strb	r5, [r0, #0]
90003520:	4293      	cmp	r3, r2
90003522:	d110      	bne.n	90003546 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003524:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003526:	4a0e      	ldr	r2, [pc, #56]	@ (90003560 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003528:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000352a:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
9000352c:	4b0d      	ldr	r3, [pc, #52]	@ (90003564 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
9000352e:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
90003530:	4a0d      	ldr	r2, [pc, #52]	@ (90003568 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
90003532:	6459      	str	r1, [r3, #68]	@ 0x44
90003534:	6053      	str	r3, [r2, #4]
}
90003536:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003538:	4a0c      	ldr	r2, [pc, #48]	@ (9000356c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
9000353a:	2300      	movs	r3, #0
9000353c:	4620      	mov	r0, r4
9000353e:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
90003542:	47a8      	blx	r5
90003544:	e7f2      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003546:	2100      	movs	r1, #0
90003548:	4620      	mov	r0, r4
9000354a:	4798      	blx	r3
9000354c:	e7ee      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000354e:	bf00      	nop
90003550:	90000f89 	.word	0x90000f89
90003554:	d003fc00 	.word	0xd003fc00
90003558:	24021d62 	.word	0x24021d62
9000355c:	90000db9 	.word	0x90000db9
90003560:	24021d63 	.word	0x24021d63
90003564:	24007440 	.word	0x24007440
90003568:	24007410 	.word	0x24007410
9000356c:	d007f800 	.word	0xd007f800

90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003570:	4843      	ldr	r0, [pc, #268]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
90003572:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003574:	6804      	ldr	r4, [r0, #0]
90003576:	f3bf 8f5b 	dmb	ish
9000357a:	f014 0401 	ands.w	r4, r4, #1
9000357e:	d001      	beq.n	90003584 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003580:	4840      	ldr	r0, [pc, #256]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003582:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003584:	f026 fde0 	bl	9002a148 <__cxa_guard_acquire>
90003588:	2800      	cmp	r0, #0
9000358a:	d0f9      	beq.n	90003580 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
9000358c:	4d3d      	ldr	r5, [pc, #244]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000358e:	4b3e      	ldr	r3, [pc, #248]	@ (90003688 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003590:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003594:	612c      	str	r4, [r5, #16]
90003596:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
9000359a:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000359e:	4e3b      	ldr	r6, [pc, #236]	@ (9000368c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
900035a0:	e9c5 3400 	strd	r3, r4, [r5]
900035a4:	e9c5 4402 	strd	r4, r4, [r5, #8]
900035a8:	f015 fcf9 	bl	90018f9e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
900035ac:	f105 0058 	add.w	r0, r5, #88	@ 0x58
900035b0:	f010 fc66 	bl	90013e80 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
900035b4:	4b36      	ldr	r3, [pc, #216]	@ (90003690 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
900035b6:	4a37      	ldr	r2, [pc, #220]	@ (90003694 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
900035b8:	602b      	str	r3, [r5, #0]
900035ba:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
900035bc:	4936      	ldr	r1, [pc, #216]	@ (90003698 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900035be:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
900035c2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
900035c6:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
900035ca:	65a9      	str	r1, [r5, #88]	@ 0x58
900035cc:	b192      	cbz	r2, 900035f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
900035ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035d0:	2800      	cmp	r0, #0
900035d2:	d040      	beq.n	90003656 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900035d4:	6803      	ldr	r3, [r0, #0]
900035d6:	4c31      	ldr	r4, [pc, #196]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
900035d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035da:	42a2      	cmp	r2, r4
900035dc:	d017      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035de:	4790      	blx	r2
        return auxiliaryLCD;
900035e0:	6833      	ldr	r3, [r6, #0]
900035e2:	fab0 f680 	clz	r6, r0
900035e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035e8:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035ea:	2800      	cmp	r0, #0
900035ec:	d03f      	beq.n	9000366e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ee:	6803      	ldr	r3, [r0, #0]
900035f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035f2:	e00a      	b.n	9000360a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035f4:	6898      	ldr	r0, [r3, #8]
900035f6:	4c29      	ldr	r4, [pc, #164]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035f8:	6802      	ldr	r2, [r0, #0]
900035fa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035fc:	42a2      	cmp	r2, r4
900035fe:	d1ee      	bne.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003600:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90003602:	b120      	cbz	r0, 9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90003604:	6803      	ldr	r3, [r0, #0]
90003606:	2601      	movs	r6, #1
90003608:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000360a:	42a3      	cmp	r3, r4
9000360c:	d12a      	bne.n	90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000360e:	4924      	ldr	r1, [pc, #144]	@ (900036a0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90003610:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003612:	2300      	movs	r3, #0
90003614:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
90003618:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
9000361c:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
90003620:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003624:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
90003628:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
9000362c:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
90003630:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
90003634:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003638:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
9000363c:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90003640:	4a18      	ldr	r2, [pc, #96]	@ (900036a4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
90003642:	4819      	ldr	r0, [pc, #100]	@ (900036a8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003644:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003648:	f027 f910 	bl	9002a86c <atexit>
9000364c:	480c      	ldr	r0, [pc, #48]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000364e:	f026 fd87 	bl	9002a160 <__cxa_guard_release>
}
90003652:	480c      	ldr	r0, [pc, #48]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003654:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003656:	6898      	ldr	r0, [r3, #8]
90003658:	4c10      	ldr	r4, [pc, #64]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000365a:	6803      	ldr	r3, [r0, #0]
9000365c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000365e:	42a2      	cmp	r2, r4
90003660:	d0d5      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003662:	e7bc      	b.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003664:	4798      	blx	r3
90003666:	2800      	cmp	r0, #0
90003668:	bf08      	it	eq
9000366a:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000366e:	2e00      	cmp	r6, #0
90003670:	d1cd      	bne.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003672:	4b0e      	ldr	r3, [pc, #56]	@ (900036ac <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003674:	212c      	movs	r1, #44	@ 0x2c
90003676:	4a0e      	ldr	r2, [pc, #56]	@ (900036b0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003678:	480e      	ldr	r0, [pc, #56]	@ (900036b4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
9000367a:	f027 f8d9 	bl	9002a830 <__assert_func>
9000367e:	bf00      	nop
90003680:	24007350 	.word	0x24007350
90003684:	24007354 	.word	0x24007354
90003688:	9002e658 	.word	0x9002e658
9000368c:	24021d64 	.word	0x24021d64
90003690:	9002d878 	.word	0x9002d878
90003694:	9002d7e0 	.word	0x9002d7e0
90003698:	9002d800 	.word	0x9002d800
9000369c:	90002f19 	.word	0x90002f19
900036a0:	9002e60c 	.word	0x9002e60c
900036a4:	9002e5ec 	.word	0x9002e5ec
900036a8:	90002f51 	.word	0x90002f51
900036ac:	9002cd44 	.word	0x9002cd44
900036b0:	9002cda4 	.word	0x9002cda4
900036b4:	9002cde0 	.word	0x9002cde0

900036b8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
900036b8:	b538      	push	{r3, r4, r5, lr}
        return instance;
900036ba:	4c18      	ldr	r4, [pc, #96]	@ (9000371c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
900036bc:	6823      	ldr	r3, [r4, #0]
900036be:	b35b      	cbz	r3, 90003718 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
900036c0:	4b17      	ldr	r3, [pc, #92]	@ (90003720 <HAL_LTDC_LineEventCallback+0x68>)
900036c2:	4a18      	ldr	r2, [pc, #96]	@ (90003724 <HAL_LTDC_LineEventCallback+0x6c>)
900036c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900036c6:	8811      	ldrh	r1, [r2, #0]
900036c8:	428b      	cmp	r3, r1
900036ca:	d00e      	beq.n	900036ea <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900036cc:	f007 fd5c 	bl	9000b188 <HAL_LTDC_ProgramLineEvent>
900036d0:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
900036d2:	6823      	ldr	r3, [r4, #0]
900036d4:	4620      	mov	r0, r4
900036d6:	6a1b      	ldr	r3, [r3, #32]
900036d8:	4798      	blx	r3
        isFrontPorchEntered = true;
900036da:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900036dc:	2000      	movs	r0, #0
900036de:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
900036e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036e6:	f7fd bb09 	b.w	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036ea:	4b0f      	ldr	r3, [pc, #60]	@ (90003728 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
900036ec:	2500      	movs	r5, #0
900036ee:	8819      	ldrh	r1, [r3, #0]
900036f0:	f007 fd4a 	bl	9000b188 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036f4:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
900036f6:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
900036fa:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900036fe:	3201      	adds	r2, #1
90003700:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
90003704:	f7fe fe5e 	bl	900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003708:	6820      	ldr	r0, [r4, #0]
9000370a:	f00e fda3 	bl	90012254 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
9000370e:	4628      	mov	r0, r5
    }
90003710:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90003714:	f7fd babe 	b.w	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90003718:	bd38      	pop	{r3, r4, r5, pc}
9000371a:	bf00      	nop
9000371c:	24021d64 	.word	0x24021d64
90003720:	50001000 	.word	0x50001000
90003724:	2400734e 	.word	0x2400734e
90003728:	2400734c 	.word	0x2400734c

9000372c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000372c:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000372e:	480b      	ldr	r0, [pc, #44]	@ (9000375c <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
90003730:	f7fd fe0e 	bl	90001350 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
90003734:	4c0a      	ldr	r4, [pc, #40]	@ (90003760 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
90003736:	4b0b      	ldr	r3, [pc, #44]	@ (90003764 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
90003738:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
9000373a:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
9000373e:	2101      	movs	r1, #1
90003740:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
90003742:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
90003744:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003748:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
9000374c:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
9000374e:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
90003752:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
90003756:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
9000375a:	bd10      	pop	{r4, pc}
9000375c:	24007440 	.word	0x24007440
90003760:	9002d8c4 	.word	0x9002d8c4
90003764:	24007410 	.word	0x24007410

90003768 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003768:	4901      	ldr	r1, [pc, #4]	@ (90003770 <vApplicationIdleHook+0x8>)
9000376a:	2000      	movs	r0, #0
9000376c:	f00d b83e 	b.w	900107ec <vTaskSetApplicationTaskTag>
90003770:	90001045 	.word	0x90001045

90003774 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003774:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003778:	4b48      	ldr	r3, [pc, #288]	@ (9000389c <StartDefaultTask+0x128>)
9000377a:	f8df 8140 	ldr.w	r8, [pc, #320]	@ 900038bc <StartDefaultTask+0x148>
9000377e:	f8df 9140 	ldr.w	r9, [pc, #320]	@ 900038c0 <StartDefaultTask+0x14c>
90003782:	f503 7694 	add.w	r6, r3, #296	@ 0x128
90003786:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 900038c4 <StartDefaultTask+0x150>
9000378a:	4f45      	ldr	r7, [pc, #276]	@ (900038a0 <StartDefaultTask+0x12c>)
9000378c:	ed2d 8b02 	vpush	{d8}
		}
		else
		{
			f_temp = un_prev_data - aun_red_buffer[ n_cnt ];
			f_temp /= ( un_max - un_min );
			f_temp *= MAX_BRIGHTNESS;
90003790:	ed9f 8a44 	vldr	s16, [pc, #272]	@ 900038a4 <StartDefaultTask+0x130>
		aun_ir_buffer[ n_cnt - 25 ] = aun_ir_buffer[ n_cnt ];
90003794:	4944      	ldr	r1, [pc, #272]	@ (900038a8 <StartDefaultTask+0x134>)
90003796:	f44f 7296 	mov.w	r2, #300	@ 0x12c
9000379a:	f8d8 4000 	ldr.w	r4, [r8]
9000379e:	f1a1 0064 	sub.w	r0, r1, #100	@ 0x64
900037a2:	f8d9 5000 	ldr.w	r5, [r9]
900037a6:	f027 fadf 	bl	9002ad68 <memmove>
900037aa:	2100      	movs	r1, #0
900037ac:	4a3f      	ldr	r2, [pc, #252]	@ (900038ac <StartDefaultTask+0x138>)
900037ae:	4608      	mov	r0, r1
		aun_red_buffer[ n_cnt - 25 ] = aun_red_buffer[ n_cnt ];
900037b0:	6e93      	ldr	r3, [r2, #104]	@ 0x68
		if ( un_min > aun_red_buffer[ n_cnt ] )
900037b2:	42a3      	cmp	r3, r4
		aun_red_buffer[ n_cnt - 25 ] = aun_red_buffer[ n_cnt ];
900037b4:	f842 3f04 	str.w	r3, [r2, #4]!
		if ( un_min > aun_red_buffer[ n_cnt ] )
900037b8:	d201      	bcs.n	900037be <StartDefaultTask+0x4a>
			un_min = aun_red_buffer[ n_cnt ];
900037ba:	461c      	mov	r4, r3
		if ( un_min > aun_red_buffer[ n_cnt ] )
900037bc:	2101      	movs	r1, #1
		if ( un_max < aun_red_buffer[ n_cnt ] )
900037be:	42ab      	cmp	r3, r5
900037c0:	d901      	bls.n	900037c6 <StartDefaultTask+0x52>
			un_max=aun_red_buffer[n_cnt];
900037c2:	461d      	mov	r5, r3
		if ( un_max < aun_red_buffer[ n_cnt ] )
900037c4:	2001      	movs	r0, #1
	for ( uint8_t n_cnt = 25; n_cnt < 100; n_cnt++ ){
900037c6:	4296      	cmp	r6, r2
900037c8:	d1f2      	bne.n	900037b0 <StartDefaultTask+0x3c>
900037ca:	b109      	cbz	r1, 900037d0 <StartDefaultTask+0x5c>
900037cc:	f8c8 4000 	str.w	r4, [r8]
900037d0:	b108      	cbz	r0, 900037d6 <StartDefaultTask+0x62>
900037d2:	f8c9 5000 	str.w	r5, [r9]
900037d6:	4c36      	ldr	r4, [pc, #216]	@ (900038b0 <StartDefaultTask+0x13c>)
900037d8:	4d36      	ldr	r5, [pc, #216]	@ (900038b4 <StartDefaultTask+0x140>)
900037da:	f104 0b64 	add.w	fp, r4, #100	@ 0x64
		un_prev_data = aun_red_buffer[ n_cnt - 1 ];
900037de:	f854 3b04 	ldr.w	r3, [r4], #4
900037e2:	f8ca 3000 	str.w	r3, [sl]
		while ( oximeter5_check_interrupt() == OXIMETER5_INTERRUPT_ACTIVE );
900037e6:	f000 fe55 	bl	90004494 <oximeter5_check_interrupt>
900037ea:	2801      	cmp	r0, #1
900037ec:	d0fb      	beq.n	900037e6 <StartDefaultTask+0x72>
		oximeter5_read_sensor_data(&aun_ir_buffer[ n_cnt ], &aun_red_buffer[ n_cnt ]);
900037ee:	4621      	mov	r1, r4
900037f0:	4628      	mov	r0, r5
900037f2:	f000 fec3 	bl	9000457c <oximeter5_read_sensor_data>
		if ( aun_red_buffer[ n_cnt ] > un_prev_data )
900037f6:	6822      	ldr	r2, [r4, #0]
900037f8:	f8da 3000 	ldr.w	r3, [sl]
900037fc:	429a      	cmp	r2, r3
900037fe:	d92c      	bls.n	9000385a <StartDefaultTask+0xe6>
			f_temp = aun_red_buffer[ n_cnt ]-un_prev_data;
90003800:	1ad2      	subs	r2, r2, r3
			f_temp /= ( un_max - un_min );
90003802:	f8d9 3000 	ldr.w	r3, [r9]
			f_temp = aun_red_buffer[ n_cnt ]-un_prev_data;
90003806:	ee07 2a90 	vmov	s15, r2
			f_temp /= ( un_max - un_min );
9000380a:	f8d8 2000 	ldr.w	r2, [r8]
9000380e:	1a9b      	subs	r3, r3, r2
			f_temp = aun_red_buffer[ n_cnt ]-un_prev_data;
90003810:	eeb8 7a67 	vcvt.f32.u32	s14, s15
			f_temp /= ( un_max - un_min );
90003814:	ee07 3a90 	vmov	s15, r3
			f_temp = un_brightness - f_temp;
90003818:	4b27      	ldr	r3, [pc, #156]	@ (900038b8 <StartDefaultTask+0x144>)
			f_temp /= ( un_max - un_min );
9000381a:	eef8 6a67 	vcvt.f32.u32	s13, s15
			f_temp = un_brightness - f_temp;
9000381e:	edd7 7a00 	vldr	s15, [r7]
90003822:	eef8 7a67 	vcvt.f32.u32	s15, s15
			f_temp /= ( un_max - un_min );
90003826:	ee87 6a26 	vdiv.f32	s12, s14, s13
			f_temp = un_brightness - f_temp;
9000382a:	eee6 7a48 	vfms.f32	s15, s12, s16
			if ( f_temp < 0 )
9000382e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
			f_temp = un_brightness - f_temp;
90003832:	edc3 7a00 	vstr	s15, [r3]
			if ( f_temp < 0 )
90003836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000383a:	d42d      	bmi.n	90003898 <StartDefaultTask+0x124>
				un_brightness = ( uint32_t ) f_temp;
9000383c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
90003840:	ee17 3a90 	vmov	r3, s15
			if ( un_brightness > MAX_BRIGHTNESS )
			{
				un_brightness = MAX_BRIGHTNESS;
			}
		}
		oximeter5_read_temperature(&f_temp);
90003844:	481c      	ldr	r0, [pc, #112]	@ (900038b8 <StartDefaultTask+0x144>)
	for ( uint8_t n_cnt = 75; n_cnt < 100; n_cnt++ ){
90003846:	3504      	adds	r5, #4
				un_brightness = ( uint32_t ) f_temp;
90003848:	603b      	str	r3, [r7, #0]
		oximeter5_read_temperature(&f_temp);
9000384a:	f000 fe31 	bl	900044b0 <oximeter5_read_temperature>
	for ( uint8_t n_cnt = 75; n_cnt < 100; n_cnt++ ){
9000384e:	45a3      	cmp	fp, r4
90003850:	d1c5      	bne.n	900037de <StartDefaultTask+0x6a>
	}
	osDelay(40);
90003852:	2028      	movs	r0, #40	@ 0x28
90003854:	f00a fe02 	bl	9000e45c <osDelay>
	for ( uint8_t n_cnt = 25; n_cnt < 100; n_cnt++ ){
90003858:	e79c      	b.n	90003794 <StartDefaultTask+0x20>
			f_temp = un_prev_data - aun_red_buffer[ n_cnt ];
9000385a:	1a9b      	subs	r3, r3, r2
			f_temp /= ( un_max - un_min );
9000385c:	f8d8 2000 	ldr.w	r2, [r8]
			f_temp = un_prev_data - aun_red_buffer[ n_cnt ];
90003860:	ee07 3a90 	vmov	s15, r3
			f_temp /= ( un_max - un_min );
90003864:	f8d9 3000 	ldr.w	r3, [r9]
90003868:	1a9b      	subs	r3, r3, r2
			f_temp = un_prev_data - aun_red_buffer[ n_cnt ];
9000386a:	eef8 7a67 	vcvt.f32.u32	s15, s15
			f_temp *= MAX_BRIGHTNESS;
9000386e:	4a12      	ldr	r2, [pc, #72]	@ (900038b8 <StartDefaultTask+0x144>)
			f_temp /= ( un_max - un_min );
90003870:	ee07 3a10 	vmov	s14, r3
90003874:	eeb8 7a47 	vcvt.f32.u32	s14, s14
90003878:	eec7 6a87 	vdiv.f32	s13, s15, s14
			f_temp *= MAX_BRIGHTNESS;
9000387c:	ee66 7a88 	vmul.f32	s15, s13, s16
			un_brightness += ( uint32_t ) f_temp;
90003880:	eebc 7ae7 	vcvt.u32.f32	s14, s15
			f_temp *= MAX_BRIGHTNESS;
90003884:	edc2 7a00 	vstr	s15, [r2]
			un_brightness += ( uint32_t ) f_temp;
90003888:	683a      	ldr	r2, [r7, #0]
9000388a:	ee17 3a10 	vmov	r3, s14
9000388e:	4413      	add	r3, r2
			if ( un_brightness > MAX_BRIGHTNESS )
90003890:	2bff      	cmp	r3, #255	@ 0xff
90003892:	bf28      	it	cs
90003894:	23ff      	movcs	r3, #255	@ 0xff
90003896:	e7d5      	b.n	90003844 <StartDefaultTask+0xd0>
90003898:	2300      	movs	r3, #0
9000389a:	e7d3      	b.n	90003844 <StartDefaultTask+0xd0>
9000389c:	24007530 	.word	0x24007530
900038a0:	24007520 	.word	0x24007520
900038a4:	437f0000 	.word	0x437f0000
900038a8:	24007724 	.word	0x24007724
900038ac:	2400752c 	.word	0x2400752c
900038b0:	24007658 	.word	0x24007658
900038b4:	240077ec 	.word	0x240077ec
900038b8:	2400751c 	.word	0x2400751c
900038bc:	2400752c 	.word	0x2400752c
900038c0:	24007528 	.word	0x24007528
900038c4:	24007524 	.word	0x24007524

900038c8 <InitializeEquipment>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_InitializeEquipment */
void InitializeEquipment(void *argument)
{
900038c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* USER CODE BEGIN InitializeEquipment */
  /* Infinite loop */
	oximeter5_init();
900038cc:	f000 fce2 	bl	90004294 <oximeter5_init>
	osDelay(100);
900038d0:	4c18      	ldr	r4, [pc, #96]	@ (90003934 <InitializeEquipment+0x6c>)
900038d2:	2064      	movs	r0, #100	@ 0x64
	oximeter5_default_cfg();
	osDelay(100);
	un_brightness = 0;
	un_min = 0x3FFFF;
900038d4:	4f18      	ldr	r7, [pc, #96]	@ (90003938 <InitializeEquipment+0x70>)
	osDelay(100);
900038d6:	f00a fdc1 	bl	9000e45c <osDelay>
	un_max = 0;
900038da:	4e18      	ldr	r6, [pc, #96]	@ (9000393c <InitializeEquipment+0x74>)
	oximeter5_default_cfg();
900038dc:	f000 fcf4 	bl	900042c8 <oximeter5_default_cfg>
	osDelay(100);
900038e0:	2064      	movs	r0, #100	@ 0x64
900038e2:	f00a fdbb 	bl	9000e45c <osDelay>
	un_brightness = 0;
900038e6:	4d16      	ldr	r5, [pc, #88]	@ (90003940 <InitializeEquipment+0x78>)
900038e8:	2300      	movs	r3, #0
900038ea:	4916      	ldr	r1, [pc, #88]	@ (90003944 <InitializeEquipment+0x7c>)
	un_min = 0x3FFFF;
900038ec:	4a16      	ldr	r2, [pc, #88]	@ (90003948 <InitializeEquipment+0x80>)
900038ee:	f504 78c8 	add.w	r8, r4, #400	@ 0x190
	un_brightness = 0;
900038f2:	600b      	str	r3, [r1, #0]
	un_min = 0x3FFFF;
900038f4:	603a      	str	r2, [r7, #0]
	un_max = 0;
900038f6:	6033      	str	r3, [r6, #0]

	for ( uint8_t n_cnt = 0; n_cnt < 100; n_cnt++ )
	{
		while ( oximeter5_check_interrupt() == OXIMETER5_INTERRUPT_ACTIVE );
900038f8:	f000 fdcc 	bl	90004494 <oximeter5_check_interrupt>
900038fc:	2801      	cmp	r0, #1
900038fe:	d0fb      	beq.n	900038f8 <InitializeEquipment+0x30>

		oximeter5_read_sensor_data(&aun_ir_buffer[ n_cnt ], &aun_red_buffer[ n_cnt ] );
90003900:	4621      	mov	r1, r4
90003902:	4628      	mov	r0, r5
90003904:	f000 fe3a 	bl	9000457c <oximeter5_read_sensor_data>

		if ( un_min > aun_red_buffer[ n_cnt ] )
90003908:	f854 3b04 	ldr.w	r3, [r4], #4
9000390c:	6839      	ldr	r1, [r7, #0]
	for ( uint8_t n_cnt = 0; n_cnt < 100; n_cnt++ )
9000390e:	3504      	adds	r5, #4
		{
			un_min = aun_red_buffer[ n_cnt ];
		}

		if ( un_max < aun_red_buffer[ n_cnt ] )
90003910:	6832      	ldr	r2, [r6, #0]
		if ( un_min > aun_red_buffer[ n_cnt ] )
90003912:	428b      	cmp	r3, r1
			un_min = aun_red_buffer[ n_cnt ];
90003914:	bf38      	it	cc
90003916:	603b      	strcc	r3, [r7, #0]
		if ( un_max < aun_red_buffer[ n_cnt ] )
90003918:	4293      	cmp	r3, r2
		{
			un_max = aun_red_buffer[ n_cnt ];
9000391a:	bf88      	it	hi
9000391c:	6033      	strhi	r3, [r6, #0]
	for ( uint8_t n_cnt = 0; n_cnt < 100; n_cnt++ )
9000391e:	4544      	cmp	r4, r8
90003920:	d1ea      	bne.n	900038f8 <InitializeEquipment+0x30>
		}
	}
	osDelay(100);
90003922:	2064      	movs	r0, #100	@ 0x64
90003924:	f00a fd9a 	bl	9000e45c <osDelay>
	//Deleting the task because it's supposed to run once, to init the sensor
	vTaskDelete(NULL);
90003928:	2000      	movs	r0, #0
  /* USER CODE END InitializeEquipment */
}
9000392a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	vTaskDelete(NULL);
9000392e:	f00c bdbb 	b.w	900104a8 <vTaskDelete>
90003932:	bf00      	nop
90003934:	24007530 	.word	0x24007530
90003938:	2400752c 	.word	0x2400752c
9000393c:	24007528 	.word	0x24007528
90003940:	240076c0 	.word	0x240076c0
90003944:	24007520 	.word	0x24007520
90003948:	0003ffff 	.word	0x0003ffff

9000394c <CalculateData>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_CalculateData */
void CalculateData(void *argument)
{
9000394c:	4d36      	ldr	r5, [pc, #216]	@ (90003a28 <CalculateData+0xdc>)
9000394e:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 90003a44 <CalculateData+0xf8>
90003952:	f8df a0f4 	ldr.w	sl, [pc, #244]	@ 90003a48 <CalculateData+0xfc>
90003956:	f105 0618 	add.w	r6, r5, #24
9000395a:	4c34      	ldr	r4, [pc, #208]	@ (90003a2c <CalculateData+0xe0>)
  /* USER CODE BEGIN CalculateData */
  /* Infinite loop */
  for(;;)
  {
	oximeter5_get_oxygen_saturation(&aun_ir_buffer[ 0 ], 100, &aun_red_buffer[ 0 ], &n_spo2 );
9000395c:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 90003a4c <CalculateData+0x100>
{
90003960:	e92d 4888 	stmdb	sp!, {r3, r7, fp, lr}
90003964:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 90003a40 <CalculateData+0xf4>
	oximeter5_get_oxygen_saturation(&aun_ir_buffer[ 0 ], 100, &aun_red_buffer[ 0 ], &n_spo2 );
90003968:	4f31      	ldr	r7, [pc, #196]	@ (90003a30 <CalculateData+0xe4>)
9000396a:	464b      	mov	r3, r9
9000396c:	4642      	mov	r2, r8
9000396e:	2164      	movs	r1, #100	@ 0x64
90003970:	4638      	mov	r0, r7
90003972:	f000 fe33 	bl	900045dc <oximeter5_get_oxygen_saturation>
	oximeter5_get_heart_rate( &aun_ir_buffer[ 0 ], 100, &aun_red_buffer[ 0 ], &n_heart_rate );
90003976:	4642      	mov	r2, r8
90003978:	4b2e      	ldr	r3, [pc, #184]	@ (90003a34 <CalculateData+0xe8>)
9000397a:	2164      	movs	r1, #100	@ 0x64
9000397c:	4638      	mov	r0, r7
9000397e:	f000 ffdd 	bl	9000493c <oximeter5_get_heart_rate>

	if (n_spo2 <= 100 && n_heart_rate > 30 && n_heart_rate < 180) {
90003982:	f899 2000 	ldrb.w	r2, [r9]
90003986:	2a64      	cmp	r2, #100	@ 0x64
90003988:	d93f      	bls.n	90003a0a <CalculateData+0xbe>
		spo2_array[counter] = n_spo2;
9000398a:	f8da 3000 	ldr.w	r3, [sl]
		hr_array[counter] = n_heart_rate;
		counter++;
	}

	if (counter == 10) {
9000398e:	2b0a      	cmp	r3, #10
90003990:	d137      	bne.n	90003a02 <CalculateData+0xb6>
	uint8_t max = array[0];
90003992:	782a      	ldrb	r2, [r5, #0]
	for (uint8_t i = 1; i < size; i++) {
90003994:	4d24      	ldr	r5, [pc, #144]	@ (90003a28 <CalculateData+0xdc>)
90003996:	462b      	mov	r3, r5
		if (max < array[i])
90003998:	f813 1f01 	ldrb.w	r1, [r3, #1]!
9000399c:	428a      	cmp	r2, r1
9000399e:	bf38      	it	cc
900039a0:	460a      	movcc	r2, r1
	for (uint8_t i = 1; i < size; i++) {
900039a2:	42b3      	cmp	r3, r6
900039a4:	d1f8      	bne.n	90003998 <CalculateData+0x4c>
	memset(array, 0, size);
900039a6:	4824      	ldr	r0, [pc, #144]	@ (90003a38 <CalculateData+0xec>)
900039a8:	2300      	movs	r3, #0
900039aa:	4684      	mov	ip, r0
900039ac:	4610      	mov	r0, r2
900039ae:	762b      	strb	r3, [r5, #24]
900039b0:	e9c5 3300 	strd	r3, r3, [r5]
900039b4:	e9c5 3302 	strd	r3, r3, [r5, #8]
900039b8:	e9c5 3304 	strd	r3, r3, [r5, #16]
        swapped = 0;
900039bc:	2200      	movs	r2, #0
{
900039be:	4623      	mov	r3, r4
900039c0:	4696      	mov	lr, r2
            if (array[j] > array[j + 1]) {
900039c2:	6819      	ldr	r1, [r3, #0]
900039c4:	f853 2f04 	ldr.w	r2, [r3, #4]!
900039c8:	4291      	cmp	r1, r2
900039ca:	dd03      	ble.n	900039d4 <CalculateData+0x88>
                swapped = 1;
900039cc:	f04f 0e01 	mov.w	lr, #1
                array[j + 1] = temp;
900039d0:	e943 2101 	strd	r2, r1, [r3, #-4]
        for (size_t j = 0; j < size - i - 1; j++) {
900039d4:	4563      	cmp	r3, ip
900039d6:	d1f4      	bne.n	900039c2 <CalculateData+0x76>
        if (!swapped) {
900039d8:	4672      	mov	r2, lr
900039da:	b11a      	cbz	r2, 900039e4 <CalculateData+0x98>
    for (size_t i = 0; i < size - 1; i++) {
900039dc:	f1ac 0c04 	sub.w	ip, ip, #4
900039e0:	4564      	cmp	r4, ip
900039e2:	d1eb      	bne.n	900039bc <CalculateData+0x70>

		//snprintf(SendBuffer,BUFSIZE,"\tHR: %ld %\r\n", valid_heart_rate);
		//HAL_UART_Transmit(&huart3,SendBuffer,strlen(SendBuffer),100);
		healthData.hr = valid_heart_rate;
		healthData.sp02 = max_spo2;
		osMessageQueuePut(dataQueueHandle, &healthData, 0, 0);
900039e4:	2300      	movs	r3, #0
		healthData.hr = valid_heart_rate;
900039e6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
		healthData.sp02 = max_spo2;
900039e8:	f88b 0004 	strb.w	r0, [fp, #4]
		osMessageQueuePut(dataQueueHandle, &healthData, 0, 0);
900039ec:	4813      	ldr	r0, [pc, #76]	@ (90003a3c <CalculateData+0xf0>)
900039ee:	461a      	mov	r2, r3
		healthData.hr = valid_heart_rate;
900039f0:	f8cb 1000 	str.w	r1, [fp]
		osMessageQueuePut(dataQueueHandle, &healthData, 0, 0);
900039f4:	6800      	ldr	r0, [r0, #0]
900039f6:	4912      	ldr	r1, [pc, #72]	@ (90003a40 <CalculateData+0xf4>)
900039f8:	f00a fe2c 	bl	9000e654 <osMessageQueuePut>
		counter = 0;
900039fc:	2300      	movs	r3, #0
900039fe:	f8ca 3000 	str.w	r3, [sl]
	}
    osDelay(10);
90003a02:	200a      	movs	r0, #10
90003a04:	f00a fd2a 	bl	9000e45c <osDelay>
	oximeter5_get_oxygen_saturation(&aun_ir_buffer[ 0 ], 100, &aun_red_buffer[ 0 ], &n_spo2 );
90003a08:	e7af      	b.n	9000396a <CalculateData+0x1e>
	if (n_spo2 <= 100 && n_heart_rate > 30 && n_heart_rate < 180) {
90003a0a:	4b0a      	ldr	r3, [pc, #40]	@ (90003a34 <CalculateData+0xe8>)
90003a0c:	6819      	ldr	r1, [r3, #0]
		spo2_array[counter] = n_spo2;
90003a0e:	f8da 3000 	ldr.w	r3, [sl]
	if (n_spo2 <= 100 && n_heart_rate > 30 && n_heart_rate < 180) {
90003a12:	f1a1 001f 	sub.w	r0, r1, #31
90003a16:	2894      	cmp	r0, #148	@ 0x94
90003a18:	d8b9      	bhi.n	9000398e <CalculateData+0x42>
		spo2_array[counter] = n_spo2;
90003a1a:	54ea      	strb	r2, [r5, r3]
		hr_array[counter] = n_heart_rate;
90003a1c:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
		counter++;
90003a20:	3301      	adds	r3, #1
90003a22:	f8ca 3000 	str.w	r3, [sl]
90003a26:	e7b2      	b.n	9000398e <CalculateData+0x42>
90003a28:	240074f8 	.word	0x240074f8
90003a2c:	24007494 	.word	0x24007494
90003a30:	240076c0 	.word	0x240076c0
90003a34:	24007514 	.word	0x24007514
90003a38:	240074f4 	.word	0x240074f4
90003a3c:	24007850 	.word	0x24007850
90003a40:	24007488 	.word	0x24007488
90003a44:	24007518 	.word	0x24007518
90003a48:	24007490 	.word	0x24007490
90003a4c:	24007530 	.word	0x24007530

90003a50 <SystemClock_Config>:
{
90003a50:	b570      	push	{r4, r5, r6, lr}
90003a52:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003a54:	224c      	movs	r2, #76	@ 0x4c
90003a56:	2100      	movs	r1, #0
90003a58:	a80a      	add	r0, sp, #40	@ 0x28
90003a5a:	f027 f99f 	bl	9002ad9c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003a5e:	2220      	movs	r2, #32
90003a60:	2100      	movs	r1, #0
90003a62:	a802      	add	r0, sp, #8
90003a64:	f027 f99a 	bl	9002ad9c <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003a68:	2002      	movs	r0, #2
90003a6a:	f007 fdf1 	bl	9000b650 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003a6e:	4a22      	ldr	r2, [pc, #136]	@ (90003af8 <SystemClock_Config+0xa8>)
90003a70:	2100      	movs	r1, #0
90003a72:	4b22      	ldr	r3, [pc, #136]	@ (90003afc <SystemClock_Config+0xac>)
90003a74:	9101      	str	r1, [sp, #4]
90003a76:	6991      	ldr	r1, [r2, #24]
90003a78:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003a7c:	6191      	str	r1, [r2, #24]
90003a7e:	6991      	ldr	r1, [r2, #24]
90003a80:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003a84:	9101      	str	r1, [sp, #4]
90003a86:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003a88:	f041 0101 	orr.w	r1, r1, #1
90003a8c:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003a8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003a90:	f003 0301 	and.w	r3, r3, #1
90003a94:	9301      	str	r3, [sp, #4]
90003a96:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003a98:	6993      	ldr	r3, [r2, #24]
90003a9a:	049b      	lsls	r3, r3, #18
90003a9c:	d5fc      	bpl.n	90003a98 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003a9e:	2401      	movs	r4, #1
90003aa0:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003aa4:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
90003aa6:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
90003aa8:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003aaa:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003aac:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003aae:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ab2:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003ab4:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
90003ab6:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003aba:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003abe:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ac2:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003ac6:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003aca:	f007 fe57 	bl	9000b77c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003ace:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003ad0:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003ad2:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003ad4:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003ad6:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003ad8:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003ada:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003ade:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003ae2:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90003ae4:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003ae6:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003aea:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003aee:	f008 f9c1 	bl	9000be74 <HAL_RCC_ClockConfig>
}
90003af2:	b01e      	add	sp, #120	@ 0x78
90003af4:	bd70      	pop	{r4, r5, r6, pc}
90003af6:	bf00      	nop
90003af8:	58024800 	.word	0x58024800
90003afc:	58000400 	.word	0x58000400

90003b00 <main>:
{
90003b00:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b02:	2400      	movs	r4, #0
{
90003b04:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b06:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b08:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b0a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b0c:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003b10:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
90003b14:	f004 fa1c 	bl	90007f50 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003b18:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b1c:	4bd5      	ldr	r3, [pc, #852]	@ (90003e74 <main+0x374>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b1e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b20:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b24:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
90003b28:	4bd3      	ldr	r3, [pc, #844]	@ (90003e78 <main+0x378>)
90003b2a:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b2c:	f004 fa2e 	bl	90007f8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b30:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b34:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b36:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b3a:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b3c:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003b40:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b44:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b48:	f004 fa20 	bl	90007f8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b4c:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b4e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b50:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b54:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003b58:	231a      	movs	r3, #26
90003b5a:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003b5e:	f240 1301 	movw	r3, #257	@ 0x101
90003b62:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b66:	f004 fa11 	bl	90007f8c <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b6a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b6e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b70:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003b74:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b76:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003b7a:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b7e:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003b82:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003b84:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b88:	f004 fa00 	bl	90007f8c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003b8c:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b8e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b90:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003b94:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003b98:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003b9c:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ba0:	f004 f9f4 	bl	90007f8c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003ba4:	4620      	mov	r0, r4
90003ba6:	f004 f9e1 	bl	90007f6c <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003baa:	4ab4      	ldr	r2, [pc, #720]	@ (90003e7c <main+0x37c>)
90003bac:	6953      	ldr	r3, [r2, #20]
90003bae:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003bb2:	d111      	bne.n	90003bd8 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003bb4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bb8:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003bbc:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003bc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bc4:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003bc8:	6953      	ldr	r3, [r2, #20]
90003bca:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003bce:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003bd0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bd4:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003bd8:	48a8      	ldr	r0, [pc, #672]	@ (90003e7c <main+0x37c>)
90003bda:	6943      	ldr	r3, [r0, #20]
90003bdc:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003be0:	d124      	bne.n	90003c2c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003be2:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003be6:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003bea:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003bee:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003bf2:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003bf6:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003bfa:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003bfc:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003c00:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c02:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003c06:	3b01      	subs	r3, #1
90003c08:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c0a:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003c0e:	d1f8      	bne.n	90003c02 <main+0x102>
    } while(sets-- != 0U);
90003c10:	3c20      	subs	r4, #32
90003c12:	f114 0f20 	cmn.w	r4, #32
90003c16:	d1f1      	bne.n	90003bfc <main+0xfc>
90003c18:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003c1c:	6943      	ldr	r3, [r0, #20]
90003c1e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003c22:	6143      	str	r3, [r0, #20]
90003c24:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c28:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003c2c:	f004 f8c8 	bl	90007dc0 <HAL_Init>
  SystemClock_Config();
90003c30:	f7ff ff0e 	bl	90003a50 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003c34:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c36:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c38:	4d91      	ldr	r5, [pc, #580]	@ (90003e80 <main+0x380>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003c3a:	21c0      	movs	r1, #192	@ 0xc0
90003c3c:	4891      	ldr	r0, [pc, #580]	@ (90003e84 <main+0x384>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c3e:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003c40:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c42:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c44:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003c48:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003c4a:	f04f 0940 	mov.w	r9, #64	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c4e:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c52:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003c56:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c5a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c5e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003c62:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c6a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003c6e:	9302      	str	r3, [sp, #8]
90003c70:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003c72:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c76:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003c7a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c7e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c82:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003c86:	9303      	str	r3, [sp, #12]
90003c88:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
90003c8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c8e:	f043 0304 	orr.w	r3, r3, #4
90003c92:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c9a:	f003 0304 	and.w	r3, r3, #4
90003c9e:	9304      	str	r3, [sp, #16]
90003ca0:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003ca2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ca6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003caa:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cae:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cb2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003cb6:	9305      	str	r3, [sp, #20]
90003cb8:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003cba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cbe:	f043 0310 	orr.w	r3, r3, #16
90003cc2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cca:	f003 0310 	and.w	r3, r3, #16
90003cce:	9306      	str	r3, [sp, #24]
90003cd0:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003cd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cd6:	f043 0302 	orr.w	r3, r3, #2
90003cda:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ce2:	f003 0302 	and.w	r3, r3, #2
90003ce6:	9307      	str	r3, [sp, #28]
90003ce8:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003cea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cee:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003cf2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cfa:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003cfe:	9308      	str	r3, [sp, #32]
90003d00:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003d02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d06:	f043 0308 	orr.w	r3, r3, #8
90003d0a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d12:	f003 0308 	and.w	r3, r3, #8
90003d16:	9309      	str	r3, [sp, #36]	@ 0x24
90003d18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003d1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d1e:	f043 0320 	orr.w	r3, r3, #32
90003d22:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d2a:	f003 0320 	and.w	r3, r3, #32
90003d2e:	930a      	str	r3, [sp, #40]	@ 0x28
90003d30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003d32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d36:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003d3a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003d46:	930b      	str	r3, [sp, #44]	@ 0x2c
90003d48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003d4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d4e:	f043 0301 	orr.w	r3, r3, #1
90003d52:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d5a:	f003 0301 	and.w	r3, r3, #1
90003d5e:	930c      	str	r3, [sp, #48]	@ 0x30
90003d60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003d62:	f004 fe35 	bl	900089d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003d66:	4622      	mov	r2, r4
90003d68:	2180      	movs	r1, #128	@ 0x80
90003d6a:	4847      	ldr	r0, [pc, #284]	@ (90003e88 <main+0x388>)
90003d6c:	f004 fe30 	bl	900089d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003d70:	4622      	mov	r2, r4
90003d72:	2108      	movs	r1, #8
90003d74:	4845      	ldr	r0, [pc, #276]	@ (90003e8c <main+0x38c>)
90003d76:	f004 fe2b 	bl	900089d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003d7a:	2201      	movs	r2, #1
90003d7c:	4844      	ldr	r0, [pc, #272]	@ (90003e90 <main+0x390>)
90003d7e:	4611      	mov	r1, r2
90003d80:	f004 fe26 	bl	900089d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003d84:	4622      	mov	r2, r4
90003d86:	2140      	movs	r1, #64	@ 0x40
90003d88:	4842      	ldr	r0, [pc, #264]	@ (90003e94 <main+0x394>)
90003d8a:	f004 fe21 	bl	900089d0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003d8e:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003d90:	a90d      	add	r1, sp, #52	@ 0x34
90003d92:	483c      	ldr	r0, [pc, #240]	@ (90003e84 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003d94:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003d98:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003d9a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003d9e:	f004 fadb 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003da2:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003da4:	a90d      	add	r1, sp, #52	@ 0x34
90003da6:	4838      	ldr	r0, [pc, #224]	@ (90003e88 <main+0x388>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003da8:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003daa:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dac:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003db0:	f004 fad2 	bl	90008358 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003db4:	a90d      	add	r1, sp, #52	@ 0x34
90003db6:	4835      	ldr	r0, [pc, #212]	@ (90003e8c <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003db8:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003dbc:	970d      	str	r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dbe:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003dc2:	f004 fac9 	bl	90008358 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003dc6:	a90d      	add	r1, sp, #52	@ 0x34
90003dc8:	4831      	ldr	r0, [pc, #196]	@ (90003e90 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003dca:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dce:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003dd2:	f004 fac1 	bl	90008358 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003dd6:	a90d      	add	r1, sp, #52	@ 0x34
90003dd8:	482e      	ldr	r0, [pc, #184]	@ (90003e94 <main+0x394>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003dda:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90003dde:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003de2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003de6:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003dea:	f004 fab5 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
90003dee:	f44f 5240 	mov.w	r2, #12288	@ 0x3000
90003df2:	2312      	movs	r3, #18
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003df4:	a90d      	add	r1, sp, #52	@ 0x34
90003df6:	4824      	ldr	r0, [pc, #144]	@ (90003e88 <main+0x388>)
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90003df8:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
90003dfc:	e9cd 230d 	strd	r2, r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e00:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003e04:	f004 faa8 	bl	90008358 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e08:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e0c:	4622      	mov	r2, r4
90003e0e:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e10:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e12:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e14:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003e18:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003e1c:	4d1e      	ldr	r5, [pc, #120]	@ (90003e98 <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e1e:	4033      	ands	r3, r6
90003e20:	9301      	str	r3, [sp, #4]
90003e22:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e24:	f004 f838 	bl	90007e98 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003e28:	207a      	movs	r0, #122	@ 0x7a
90003e2a:	f004 f871 	bl	90007f10 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003e2e:	2234      	movs	r2, #52	@ 0x34
90003e30:	4621      	mov	r1, r4
90003e32:	eb0d 0002 	add.w	r0, sp, r2
90003e36:	f026 ffb1 	bl	9002ad9c <memset>
  hltdc.Instance = LTDC;
90003e3a:	4b18      	ldr	r3, [pc, #96]	@ (90003e9c <main+0x39c>)
  hltdc.Init.VerticalSync = 8;
90003e3c:	61af      	str	r7, [r5, #24]
  hltdc.Init.AccumulatedVBP = 11;
90003e3e:	272a      	movs	r7, #42	@ 0x2a
  hltdc.Instance = LTDC;
90003e40:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003e42:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003e44:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003e48:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003e4c:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003e4e:	230b      	movs	r3, #11
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003e50:	4628      	mov	r0, r5
  hltdc.Init.Backcolor.Blue = 0;
90003e52:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003e54:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003e58:	e9c5 7307 	strd	r7, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003e5c:	f240 131b 	movw	r3, #283	@ 0x11b
  pLayerCfg.Alpha = 255;
90003e60:	2702      	movs	r7, #2
  hltdc.Init.AccumulatedActiveH = 283;
90003e62:	e9c5 c309 	strd	ip, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003e66:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003e6a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.TotalHeigh = 285;
90003e6e:	e9c5 e30b 	strd	lr, r3, [r5, #44]	@ 0x2c
90003e72:	e015      	b.n	90003ea0 <main+0x3a0>
90003e74:	03000012 	.word	0x03000012
90003e78:	01010001 	.word	0x01010001
90003e7c:	e000ed00 	.word	0xe000ed00
90003e80:	58024400 	.word	0x58024400
90003e84:	58020400 	.word	0x58020400
90003e88:	58020c00 	.word	0x58020c00
90003e8c:	58021800 	.word	0x58021800
90003e90:	58022800 	.word	0x58022800
90003e94:	58020000 	.word	0x58020000
90003e98:	2400792c 	.word	0x2400792c
90003e9c:	50001000 	.word	0x50001000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003ea0:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003ea4:	f006 fff0 	bl	9000ae88 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003ea8:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003eac:	4622      	mov	r2, r4
90003eae:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90003eb0:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003eb2:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003eb4:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90003eb6:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003eba:	4d67      	ldr	r5, [pc, #412]	@ (90004058 <main+0x558>)
  pLayerCfg.WindowY1 = 272;
90003ebc:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90003ebe:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90003ec0:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003ec2:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.WindowY0 = 0;
90003ec4:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.Alpha0 = 0;
90003ec6:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
90003ec8:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90003eca:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
90003ece:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha = 255;
90003ed2:	e9cd 7311 	strd	r7, r3, [sp, #68]	@ 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003ed6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003eda:	e9cd 3a14 	strd	r3, sl, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ede:	f007 f891 	bl	9000b004 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003ee2:	4b5e      	ldr	r3, [pc, #376]	@ (9000405c <main+0x55c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003ee4:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003ee6:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003ee8:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003eea:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003eec:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003ef0:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003ef4:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003ef8:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003efc:	f004 f8ec 	bl	900080d8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f00:	4631      	mov	r1, r6
90003f02:	4628      	mov	r0, r5
  huart3.Instance = USART3;
90003f04:	4d56      	ldr	r5, [pc, #344]	@ (90004060 <main+0x560>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f06:	f004 f9bd 	bl	90008284 <HAL_DMA2D_ConfigLayer>
  SdramTiming.ExitSelfRefreshDelay = 7;
90003f0a:	2307      	movs	r3, #7
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f0c:	4855      	ldr	r0, [pc, #340]	@ (90004064 <main+0x564>)
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f0e:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
90003f10:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
90003f12:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f14:	4b54      	ldr	r3, [pc, #336]	@ (90004068 <main+0x568>)
  SdramTiming.WriteRecoveryTime = 5;
90003f16:	f8cd a044 	str.w	sl, [sp, #68]	@ 0x44
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003f1a:	f44f 6a00 	mov.w	sl, #2048	@ 0x800
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f1e:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f20:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  SdramTiming.SelfRefreshTime = 4;
90003f24:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003f28:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f2c:	f04f 0810 	mov.w	r8, #16
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f30:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003f32:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  SdramTiming.LoadToActiveDelay = 2;
90003f36:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003f38:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003f3c:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003f3e:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f40:	f8c0 8010 	str.w	r8, [r0, #16]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003f44:	e9c0 a308 	strd	sl, r3, [r0, #32]
  SdramTiming.RCDDelay = 2;
90003f48:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003f4c:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f50:	f009 fb20 	bl	9000d594 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f54:	4a45      	ldr	r2, [pc, #276]	@ (9000406c <main+0x56c>)
  BSP_SDRAM_DeInit(0);
90003f56:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f58:	6813      	ldr	r3, [r2, #0]
90003f5a:	f023 0301 	bic.w	r3, r3, #1
90003f5e:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003f60:	f003 fccc 	bl	900078fc <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003f64:	4620      	mov	r0, r4
90003f66:	f003 fd13 	bl	90007990 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003f6a:	f7fc fdd5 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003f6e:	4b40      	ldr	r3, [pc, #256]	@ (90004070 <main+0x570>)
90003f70:	4840      	ldr	r0, [pc, #256]	@ (90004074 <main+0x574>)
90003f72:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003f74:	f005 fed8 	bl	90009d28 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003f78:	483f      	ldr	r0, [pc, #252]	@ (90004078 <main+0x578>)
90003f7a:	4b40      	ldr	r3, [pc, #256]	@ (9000407c <main+0x57c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003f7c:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003f7e:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003f80:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003f82:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003f86:	f004 f831 	bl	90007fec <HAL_CRC_Init>
  huart3.Init.BaudRate = 115200;
90003f8a:	4a3d      	ldr	r2, [pc, #244]	@ (90004080 <main+0x580>)
90003f8c:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003f90:	4628      	mov	r0, r5
  huart3.Init.Parity = UART_PARITY_NONE;
90003f92:	612c      	str	r4, [r5, #16]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003f94:	62ac      	str	r4, [r5, #40]	@ 0x28
  huart3.Init.BaudRate = 115200;
90003f96:	e9c5 2300 	strd	r2, r3, [r5]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003f9a:	230c      	movs	r3, #12
  huart3.Init.StopBits = UART_STOPBITS_1;
90003f9c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003fa0:	616b      	str	r3, [r5, #20]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
90003fa2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
90003fa6:	e9c5 4408 	strd	r4, r4, [r5, #32]
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003faa:	f00a f857 	bl	9000e05c <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fae:	4621      	mov	r1, r4
90003fb0:	4628      	mov	r0, r5
90003fb2:	f00a f8a5 	bl	9000e100 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fb6:	4621      	mov	r1, r4
90003fb8:	4628      	mov	r0, r5
90003fba:	f00a f8e3 	bl	9000e184 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
90003fbe:	4628      	mov	r0, r5
90003fc0:	f00a f880 	bl	9000e0c4 <HAL_UARTEx_DisableFifoMode>
  hi2c4.Instance = I2C4;
90003fc4:	4d2f      	ldr	r5, [pc, #188]	@ (90004084 <main+0x584>)
90003fc6:	4b30      	ldr	r3, [pc, #192]	@ (90004088 <main+0x588>)
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003fc8:	4628      	mov	r0, r5
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
90003fca:	60ee      	str	r6, [r5, #12]
  hi2c4.Instance = I2C4;
90003fcc:	602b      	str	r3, [r5, #0]
  hi2c4.Init.Timing = 0x307075B1;
90003fce:	f1a3 531e 	sub.w	r3, r3, #662700032	@ 0x27800000
  hi2c4.Init.OwnAddress1 = 0;
90003fd2:	60ac      	str	r4, [r5, #8]
  hi2c4.Init.Timing = 0x307075B1;
90003fd4:	f5a3 237a 	sub.w	r3, r3, #1024000	@ 0xfa000
  hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
90003fd8:	622c      	str	r4, [r5, #32]
  hi2c4.Init.Timing = 0x307075B1;
90003fda:	f2a3 634f 	subw	r3, r3, #1615	@ 0x64f
  hi2c4.Init.OwnAddress2 = 0;
90003fde:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c4.Init.Timing = 0x307075B1;
90003fe2:	606b      	str	r3, [r5, #4]
  hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
90003fe4:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003fe8:	f004 ffd8 	bl	90008f9c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
90003fec:	4621      	mov	r1, r4
90003fee:	4628      	mov	r0, r5
90003ff0:	f005 fb34 	bl	9000965c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
90003ff4:	4621      	mov	r1, r4
90003ff6:	4628      	mov	r0, r5
90003ff8:	f005 fb5a 	bl	900096b0 <HAL_I2CEx_ConfigDigitalFilter>
  MX_TouchGFX_Init();
90003ffc:	f7fc fd90 	bl	90000b20 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90004000:	f7fc fd8c 	bl	90000b1c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90004004:	f00a f9ba 	bl	9000e37c <osKernelInitialize>
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90004008:	4a20      	ldr	r2, [pc, #128]	@ (9000408c <main+0x58c>)
9000400a:	4639      	mov	r1, r7
9000400c:	4640      	mov	r0, r8
9000400e:	f00a fae5 	bl	9000e5dc <osMessageQueueNew>
90004012:	4b1f      	ldr	r3, [pc, #124]	@ (90004090 <main+0x590>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004014:	4a1f      	ldr	r2, [pc, #124]	@ (90004094 <main+0x594>)
90004016:	4621      	mov	r1, r4
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90004018:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000401a:	481f      	ldr	r0, [pc, #124]	@ (90004098 <main+0x598>)
9000401c:	f00a f9da 	bl	9000e3d4 <osThreadNew>
90004020:	4b1e      	ldr	r3, [pc, #120]	@ (9000409c <main+0x59c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004022:	4a1f      	ldr	r2, [pc, #124]	@ (900040a0 <main+0x5a0>)
90004024:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004026:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004028:	481e      	ldr	r0, [pc, #120]	@ (900040a4 <main+0x5a4>)
9000402a:	f00a f9d3 	bl	9000e3d4 <osThreadNew>
9000402e:	4b1e      	ldr	r3, [pc, #120]	@ (900040a8 <main+0x5a8>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90004030:	4a1e      	ldr	r2, [pc, #120]	@ (900040ac <main+0x5ac>)
90004032:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004034:	6018      	str	r0, [r3, #0]
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90004036:	481e      	ldr	r0, [pc, #120]	@ (900040b0 <main+0x5b0>)
90004038:	f00a f9cc 	bl	9000e3d4 <osThreadNew>
9000403c:	4b1d      	ldr	r3, [pc, #116]	@ (900040b4 <main+0x5b4>)
9000403e:	4605      	mov	r5, r0
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90004040:	4a1d      	ldr	r2, [pc, #116]	@ (900040b8 <main+0x5b8>)
90004042:	4621      	mov	r1, r4
90004044:	481d      	ldr	r0, [pc, #116]	@ (900040bc <main+0x5bc>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90004046:	601d      	str	r5, [r3, #0]
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90004048:	f00a f9c4 	bl	9000e3d4 <osThreadNew>
9000404c:	4b1c      	ldr	r3, [pc, #112]	@ (900040c0 <main+0x5c0>)
9000404e:	6018      	str	r0, [r3, #0]
  osKernelStart();
90004050:	f00a f9a6 	bl	9000e3a0 <osKernelStart>
  while (1)
90004054:	e7fe      	b.n	90004054 <main+0x554>
90004056:	bf00      	nop
90004058:	24007b58 	.word	0x24007b58
9000405c:	52001000 	.word	0x52001000
90004060:	24007898 	.word	0x24007898
90004064:	24007864 	.word	0x24007864
90004068:	52004140 	.word	0x52004140
9000406c:	52004000 	.word	0x52004000
90004070:	52003000 	.word	0x52003000
90004074:	24007aac 	.word	0x24007aac
90004078:	24007bc0 	.word	0x24007bc0
9000407c:	58024c00 	.word	0x58024c00
90004080:	40004800 	.word	0x40004800
90004084:	24007b04 	.word	0x24007b04
90004088:	58001c00 	.word	0x58001c00
9000408c:	9002d8fc 	.word	0x9002d8fc
90004090:	24007850 	.word	0x24007850
90004094:	9002d980 	.word	0x9002d980
90004098:	90003775 	.word	0x90003775
9000409c:	24007860 	.word	0x24007860
900040a0:	9002d95c 	.word	0x9002d95c
900040a4:	90000b31 	.word	0x90000b31
900040a8:	2400785c 	.word	0x2400785c
900040ac:	9002d938 	.word	0x9002d938
900040b0:	900038c9 	.word	0x900038c9
900040b4:	24007858 	.word	0x24007858
900040b8:	9002d914 	.word	0x9002d914
900040bc:	9000394d 	.word	0x9000394d
900040c0:	24007854 	.word	0x24007854

900040c4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
900040c4:	4b03      	ldr	r3, [pc, #12]	@ (900040d4 <HAL_TIM_PeriodElapsedCallback+0x10>)
900040c6:	6802      	ldr	r2, [r0, #0]
900040c8:	429a      	cmp	r2, r3
900040ca:	d000      	beq.n	900040ce <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
900040cc:	4770      	bx	lr
    HAL_IncTick();
900040ce:	f003 bea7 	b.w	90007e20 <HAL_IncTick>
900040d2:	bf00      	nop
900040d4:	40001000 	.word	0x40001000

900040d8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
900040d8:	4770      	bx	lr
900040da:	bf00      	nop

900040dc <dev_find_peaks.constprop.0>:
    }

    dev_sort_ascend( pn_locs, *pn_npks );
}

static void dev_find_peaks ( int32_t *pn_locs, int32_t *n_npks,  int32_t  *pn_x, uint8_t n_size, int32_t n_min_height, int32_t n_min_distance, int32_t n_max_num )
900040dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    *n_npks = 0;
900040e0:	2500      	movs	r5, #0
    while ( n_cnt < ( n_size - 1 ) )
900040e2:	f04f 0901 	mov.w	r9, #1
static void dev_find_peaks ( int32_t *pn_locs, int32_t *n_npks,  int32_t  *pn_x, uint8_t n_size, int32_t n_min_height, int32_t n_min_distance, int32_t n_max_num )
900040e6:	4614      	mov	r4, r2
900040e8:	468e      	mov	lr, r1
900040ea:	4698      	mov	r8, r3
    uint8_t n_cnt = 1;
900040ec:	464a      	mov	r2, r9
    *n_npks = 0;
900040ee:	600d      	str	r5, [r1, #0]
    while ( n_cnt < ( n_size - 1 ) )
900040f0:	e004      	b.n	900040fc <dev_find_peaks.constprop.0+0x20>
            n_cnt++;
900040f2:	3201      	adds	r2, #1
900040f4:	b2d2      	uxtb	r2, r2
    while ( n_cnt < ( n_size - 1 ) )
900040f6:	2a62      	cmp	r2, #98	@ 0x62
900040f8:	4691      	mov	r9, r2
900040fa:	d82d      	bhi.n	90004158 <dev_find_peaks.constprop.0+0x7c>
        if ( pn_x[ n_cnt ] > n_min_height && pn_x[ n_cnt ] > pn_x[ n_cnt - 1 ] )
900040fc:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
90004100:	0096      	lsls	r6, r2, #2
90004102:	4588      	cmp	r8, r1
90004104:	daf5      	bge.n	900040f2 <dev_find_peaks.constprop.0+0x16>
90004106:	4426      	add	r6, r4
90004108:	f856 3c04 	ldr.w	r3, [r6, #-4]
9000410c:	4299      	cmp	r1, r3
9000410e:	ddf0      	ble.n	900040f2 <dev_find_peaks.constprop.0+0x16>
            while ( n_cnt + n_width < n_size && pn_x[ n_cnt ] == pn_x[ n_cnt + n_width ] )
90004110:	f109 0602 	add.w	r6, r9, #2
90004114:	eb04 0c89 	add.w	ip, r4, r9, lsl #2
            n_width = 1;
90004118:	2701      	movs	r7, #1
9000411a:	e004      	b.n	90004126 <dev_find_peaks.constprop.0+0x4a>
            while ( n_cnt + n_width < n_size && pn_x[ n_cnt ] == pn_x[ n_cnt + n_width ] )
9000411c:	2e65      	cmp	r6, #101	@ 0x65
                n_width++;
9000411e:	fa5f f78a 	uxtb.w	r7, sl
            while ( n_cnt + n_width < n_size && pn_x[ n_cnt ] == pn_x[ n_cnt + n_width ] )
90004122:	f000 80b4 	beq.w	9000428e <dev_find_peaks.constprop.0+0x1b2>
90004126:	f85c 3f04 	ldr.w	r3, [ip, #4]!
                n_width++;
9000412a:	f107 0a01 	add.w	sl, r7, #1
            while ( n_cnt + n_width < n_size && pn_x[ n_cnt ] == pn_x[ n_cnt + n_width ] )
9000412e:	3601      	adds	r6, #1
90004130:	4299      	cmp	r1, r3
90004132:	d0f3      	beq.n	9000411c <dev_find_peaks.constprop.0+0x40>
            if ( pn_x[ n_cnt ] > pn_x[ n_cnt + n_width ] && ( *n_npks ) < 15 )
90004134:	4299      	cmp	r1, r3
90004136:	dd72      	ble.n	9000421e <dev_find_peaks.constprop.0+0x142>
90004138:	2d0e      	cmp	r5, #14
9000413a:	dc70      	bgt.n	9000421e <dev_find_peaks.constprop.0+0x142>
                pn_locs[( *n_npks )++ ] = n_cnt;
9000413c:	3201      	adds	r2, #1
9000413e:	1c6b      	adds	r3, r5, #1
                n_cnt += n_width + 1;
90004140:	fa57 f282 	uxtab	r2, r7, r2
                pn_locs[( *n_npks )++ ] = n_cnt;
90004144:	f8ce 3000 	str.w	r3, [lr]
90004148:	f840 9025 	str.w	r9, [r0, r5, lsl #2]
                n_cnt += n_width + 1;
9000414c:	b2d2      	uxtb	r2, r2
    dev_sort_indices_descend( pn_x, pn_locs, *pn_npks );
9000414e:	f8de 5000 	ldr.w	r5, [lr]
    while ( n_cnt < ( n_size - 1 ) )
90004152:	2a62      	cmp	r2, #98	@ 0x62
90004154:	4691      	mov	r9, r2
90004156:	d9d1      	bls.n	900040fc <dev_find_peaks.constprop.0+0x20>
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004158:	2d01      	cmp	r5, #1
9000415a:	dd23      	ble.n	900041a4 <dev_find_peaks.constprop.0+0xc8>
9000415c:	f1a0 0904 	sub.w	r9, r0, #4
90004160:	4682      	mov	sl, r0
90004162:	f04f 0b01 	mov.w	fp, #1
90004166:	eb09 0985 	add.w	r9, r9, r5, lsl #2
        n_temp = pn_indx[ n_cnt_i ];
9000416a:	f85a 8f04 	ldr.w	r8, [sl, #4]!
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && pn_x[ n_temp ] > pn_x[ pn_indx[ n_cnt_j - 1 ] ]; n_cnt_j-- )
9000416e:	46dc      	mov	ip, fp
90004170:	eb04 0588 	add.w	r5, r4, r8, lsl #2
90004174:	4653      	mov	r3, sl
90004176:	e005      	b.n	90004184 <dev_find_peaks.constprop.0+0xa8>
90004178:	f1bc 0c01 	subs.w	ip, ip, #1
            pn_indx[ n_cnt_j ] = pn_indx[ n_cnt_j - 1 ];
9000417c:	601a      	str	r2, [r3, #0]
9000417e:	f1a1 0304 	sub.w	r3, r1, #4
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && pn_x[ n_temp ] > pn_x[ pn_indx[ n_cnt_j - 1 ] ]; n_cnt_j-- )
90004182:	d04f      	beq.n	90004224 <dev_find_peaks.constprop.0+0x148>
90004184:	f853 2c04 	ldr.w	r2, [r3, #-4]
90004188:	4619      	mov	r1, r3
9000418a:	682f      	ldr	r7, [r5, #0]
9000418c:	f854 6022 	ldr.w	r6, [r4, r2, lsl #2]
90004190:	42b7      	cmp	r7, r6
90004192:	dcf1      	bgt.n	90004178 <dev_find_peaks.constprop.0+0x9c>
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004194:	45d1      	cmp	r9, sl
90004196:	f10b 0b01 	add.w	fp, fp, #1
        pn_indx[ n_cnt_j ] = n_temp;
9000419a:	f8c1 8000 	str.w	r8, [r1]
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
9000419e:	d1e4      	bne.n	9000416a <dev_find_peaks.constprop.0+0x8e>
    for ( int32_t n_cnt_i = -1; n_cnt_i < *pn_npks; n_cnt_i++ )
900041a0:	f8de 5000 	ldr.w	r5, [lr]
900041a4:	2d00      	cmp	r5, #0
900041a6:	db68      	blt.n	9000427a <dev_find_peaks.constprop.0+0x19e>
900041a8:	f1a0 0604 	sub.w	r6, r0, #4
        *pn_npks = n_cnt_i + 1;
900041ac:	f04f 0200 	mov.w	r2, #0
900041b0:	4634      	mov	r4, r6
900041b2:	f8ce 2000 	str.w	r2, [lr]
        for ( int32_t n_cnt_j = n_cnt_i + 1; n_cnt_j < n_old_npks; n_cnt_j++ )
900041b6:	d03e      	beq.n	90004236 <dev_find_peaks.constprop.0+0x15a>
900041b8:	eb06 0585 	add.w	r5, r6, r5, lsl #2
900041bc:	4631      	mov	r1, r6
            if ( n_dist > n_min_distance || n_dist < -n_min_distance )
900041be:	f851 3f04 	ldr.w	r3, [r1, #4]!
                pn_locs[ (*pn_npks)++ ] = pn_locs[ n_cnt_j ];
900041c2:	1c57      	adds	r7, r2, #1
            if ( n_dist > n_min_distance || n_dist < -n_min_distance )
900041c4:	3305      	adds	r3, #5
900041c6:	2b08      	cmp	r3, #8
900041c8:	d906      	bls.n	900041d8 <dev_find_peaks.constprop.0+0xfc>
                pn_locs[ (*pn_npks)++ ] = pn_locs[ n_cnt_j ];
900041ca:	f8ce 7000 	str.w	r7, [lr]
900041ce:	680b      	ldr	r3, [r1, #0]
900041d0:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
    for ( int32_t n_cnt_i = -1; n_cnt_i < *pn_npks; n_cnt_i++ )
900041d4:	f8de 2000 	ldr.w	r2, [lr]
        for ( int32_t n_cnt_j = n_cnt_i + 1; n_cnt_j < n_old_npks; n_cnt_j++ )
900041d8:	428d      	cmp	r5, r1
900041da:	d1f0      	bne.n	900041be <dev_find_peaks.constprop.0+0xe2>
900041dc:	2500      	movs	r5, #0
    for ( int32_t n_cnt_i = -1; n_cnt_i < *pn_npks; n_cnt_i++ )
900041de:	4295      	cmp	r5, r2
900041e0:	f104 0404 	add.w	r4, r4, #4
900041e4:	da26      	bge.n	90004234 <dev_find_peaks.constprop.0+0x158>
        *pn_npks = n_cnt_i + 1;
900041e6:	3501      	adds	r5, #1
        for ( int32_t n_cnt_j = n_cnt_i + 1; n_cnt_j < n_old_npks; n_cnt_j++ )
900041e8:	42aa      	cmp	r2, r5
        *pn_npks = n_cnt_i + 1;
900041ea:	f8ce 5000 	str.w	r5, [lr]
        for ( int32_t n_cnt_j = n_cnt_i + 1; n_cnt_j < n_old_npks; n_cnt_j++ )
900041ee:	dd22      	ble.n	90004236 <dev_find_peaks.constprop.0+0x15a>
900041f0:	eb06 0882 	add.w	r8, r6, r2, lsl #2
900041f4:	46a4      	mov	ip, r4
900041f6:	462a      	mov	r2, r5
            n_dist =  pn_locs[ n_cnt_j ] - ( n_cnt_i == -1 ? -1 : pn_locs[ n_cnt_i ] );
900041f8:	f85c 3f04 	ldr.w	r3, [ip, #4]!
                pn_locs[ (*pn_npks)++ ] = pn_locs[ n_cnt_j ];
900041fc:	1c57      	adds	r7, r2, #1
            n_dist =  pn_locs[ n_cnt_j ] - ( n_cnt_i == -1 ? -1 : pn_locs[ n_cnt_i ] );
900041fe:	6821      	ldr	r1, [r4, #0]
90004200:	1a5b      	subs	r3, r3, r1
            if ( n_dist > n_min_distance || n_dist < -n_min_distance )
90004202:	3304      	adds	r3, #4
90004204:	2b08      	cmp	r3, #8
90004206:	d907      	bls.n	90004218 <dev_find_peaks.constprop.0+0x13c>
                pn_locs[ (*pn_npks)++ ] = pn_locs[ n_cnt_j ];
90004208:	f8ce 7000 	str.w	r7, [lr]
9000420c:	f8dc 3000 	ldr.w	r3, [ip]
90004210:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
    for ( int32_t n_cnt_i = -1; n_cnt_i < *pn_npks; n_cnt_i++ )
90004214:	f8de 2000 	ldr.w	r2, [lr]
        for ( int32_t n_cnt_j = n_cnt_i + 1; n_cnt_j < n_old_npks; n_cnt_j++ )
90004218:	45e0      	cmp	r8, ip
9000421a:	d1ed      	bne.n	900041f8 <dev_find_peaks.constprop.0+0x11c>
9000421c:	e7df      	b.n	900041de <dev_find_peaks.constprop.0+0x102>
                n_cnt += n_width;
9000421e:	4417      	add	r7, r2
90004220:	b2fa      	uxtb	r2, r7
90004222:	e768      	b.n	900040f6 <dev_find_peaks.constprop.0+0x1a>
90004224:	4601      	mov	r1, r0
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004226:	45d1      	cmp	r9, sl
90004228:	f10b 0b01 	add.w	fp, fp, #1
        pn_indx[ n_cnt_j ] = n_temp;
9000422c:	f8c1 8000 	str.w	r8, [r1]
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004230:	d19b      	bne.n	9000416a <dev_find_peaks.constprop.0+0x8e>
90004232:	e7b5      	b.n	900041a0 <dev_find_peaks.constprop.0+0xc4>
90004234:	4615      	mov	r5, r2
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004236:	2d01      	cmp	r5, #1
90004238:	dd1f      	ble.n	9000427a <dev_find_peaks.constprop.0+0x19e>
9000423a:	eb06 0685 	add.w	r6, r6, r5, lsl #2
9000423e:	4607      	mov	r7, r0
90004240:	2501      	movs	r5, #1
        n_temp = pn_x[ n_cnt_i ];
90004242:	f857 4f04 	ldr.w	r4, [r7, #4]!
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
90004246:	462a      	mov	r2, r5
        n_temp = pn_x[ n_cnt_i ];
90004248:	463b      	mov	r3, r7
9000424a:	e004      	b.n	90004256 <dev_find_peaks.constprop.0+0x17a>
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
9000424c:	3a01      	subs	r2, #1
            pn_x[ n_cnt_j ] = pn_x[ n_cnt_j - 1 ];
9000424e:	6019      	str	r1, [r3, #0]
90004250:	f1ac 0304 	sub.w	r3, ip, #4
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
90004254:	d013      	beq.n	9000427e <dev_find_peaks.constprop.0+0x1a2>
90004256:	f853 1c04 	ldr.w	r1, [r3, #-4]
9000425a:	469c      	mov	ip, r3
9000425c:	428c      	cmp	r4, r1
9000425e:	dbf5      	blt.n	9000424c <dev_find_peaks.constprop.0+0x170>
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004260:	42b7      	cmp	r7, r6
90004262:	f105 0501 	add.w	r5, r5, #1
        pn_x[ n_cnt_j ] = n_temp;
90004266:	f8cc 4000 	str.w	r4, [ip]
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
9000426a:	d1ea      	bne.n	90004242 <dev_find_peaks.constprop.0+0x166>
{
    dev_peaks_above_min_height( pn_locs, n_npks, pn_x, n_size, n_min_height );
    dev_remove_close_peaks( pn_locs, n_npks, pn_x, n_min_distance );
    if ( *n_npks > n_max_num )
9000426c:	f8de 3000 	ldr.w	r3, [lr]
90004270:	2b0f      	cmp	r3, #15
90004272:	dd02      	ble.n	9000427a <dev_find_peaks.constprop.0+0x19e>
    {
        *n_npks = n_max_num;
90004274:	230f      	movs	r3, #15
90004276:	f8ce 3000 	str.w	r3, [lr]
    }
}
9000427a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000427e:	4684      	mov	ip, r0
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004280:	42b7      	cmp	r7, r6
90004282:	f105 0501 	add.w	r5, r5, #1
        pn_x[ n_cnt_j ] = n_temp;
90004286:	f8cc 4000 	str.w	r4, [ip]
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
9000428a:	d1da      	bne.n	90004242 <dev_find_peaks.constprop.0+0x166>
9000428c:	e7ee      	b.n	9000426c <dev_find_peaks.constprop.0+0x190>
            if ( pn_x[ n_cnt ] > pn_x[ n_cnt + n_width ] && ( *n_npks ) < 15 )
9000428e:	f8d4 3190 	ldr.w	r3, [r4, #400]	@ 0x190
90004292:	e74f      	b.n	90004134 <dev_find_peaks.constprop.0+0x58>

90004294 <oximeter5_init>:
{
90004294:	b538      	push	{r3, r4, r5, lr}
	retval = !HAL_OK;
90004296:	4c0a      	ldr	r4, [pc, #40]	@ (900042c0 <oximeter5_init+0x2c>)
90004298:	2301      	movs	r3, #1
		retval = HAL_I2C_IsDeviceReady(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), 3, 100);
9000429a:	4d0a      	ldr	r5, [pc, #40]	@ (900042c4 <oximeter5_init+0x30>)
	retval = !HAL_OK;
9000429c:	7023      	strb	r3, [r4, #0]
		retval = HAL_I2C_IsDeviceReady(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), 3, 100);
9000429e:	2364      	movs	r3, #100	@ 0x64
900042a0:	2203      	movs	r2, #3
900042a2:	21ae      	movs	r1, #174	@ 0xae
900042a4:	4628      	mov	r0, r5
900042a6:	f005 f8eb 	bl	90009480 <HAL_I2C_IsDeviceReady>
900042aa:	4603      	mov	r3, r0
		HAL_Delay(1000);
900042ac:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
		retval = HAL_I2C_IsDeviceReady(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), 3, 100);
900042b0:	7023      	strb	r3, [r4, #0]
		HAL_Delay(1000);
900042b2:	f003 fdc7 	bl	90007e44 <HAL_Delay>
	while (retval != HAL_OK){
900042b6:	7820      	ldrb	r0, [r4, #0]
900042b8:	2800      	cmp	r0, #0
900042ba:	d1f0      	bne.n	9000429e <oximeter5_init+0xa>
}
900042bc:	bd38      	pop	{r3, r4, r5, pc}
900042be:	bf00      	nop
900042c0:	24007be4 	.word	0x24007be4
900042c4:	24007b04 	.word	0x24007b04

900042c8 <oximeter5_default_cfg>:
{
900042c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900042cc:	b088      	sub	sp, #32
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900042ce:	2401      	movs	r4, #1
900042d0:	f8df 81bc 	ldr.w	r8, [pc, #444]	@ 90004490 <oximeter5_default_cfg+0x1c8>
900042d4:	f04f 36ff 	mov.w	r6, #4294967295
900042d8:	af06      	add	r7, sp, #24
    tx_data = OXIMETER5_SW_RESET;
900042da:	2340      	movs	r3, #64	@ 0x40
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900042dc:	4d6b      	ldr	r5, [pc, #428]	@ (9000448c <oximeter5_default_cfg+0x1c4>)
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
900042de:	f10d 0917 	add.w	r9, sp, #23
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900042e2:	2212      	movs	r2, #18
900042e4:	21ae      	movs	r1, #174	@ 0xae
    tx_data = OXIMETER5_SW_RESET;
900042e6:	f88d 3018 	strb.w	r3, [sp, #24]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900042ea:	4640      	mov	r0, r8
900042ec:	4623      	mov	r3, r4
900042ee:	9700      	str	r7, [sp, #0]
    tmp = OXIMETER5_SET_INTR_EN_2_TEMP_DIS;
900042f0:	f04f 0a00 	mov.w	sl, #0
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900042f4:	e9cd 4601 	strd	r4, r6, [sp, #4]
900042f8:	f004 fec4 	bl	90009084 <HAL_I2C_Mem_Write>
900042fc:	7028      	strb	r0, [r5, #0]
    HAL_Delay(1000);
900042fe:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
90004302:	f003 fd9f 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004306:	4623      	mov	r3, r4
90004308:	2200      	movs	r2, #0
9000430a:	21ae      	movs	r1, #174	@ 0xae
9000430c:	4640      	mov	r0, r8
9000430e:	f8cd 9000 	str.w	r9, [sp]
90004312:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004316:	f004 ffb3 	bl	90009280 <HAL_I2C_Mem_Read>
9000431a:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
9000431c:	200a      	movs	r0, #10
9000431e:	f003 fd91 	bl	90007e44 <HAL_Delay>
    tmp |= OXIMETER5_SET_INTR_EN_1_PPG_RDY_EN;
90004322:	23c0      	movs	r3, #192	@ 0xc0
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004324:	2202      	movs	r2, #2
90004326:	21ae      	movs	r1, #174	@ 0xae
    tmp |= OXIMETER5_SET_INTR_EN_1_PPG_RDY_EN;
90004328:	f88d 3017 	strb.w	r3, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000432c:	4640      	mov	r0, r8
9000432e:	4623      	mov	r3, r4
90004330:	f8cd 9000 	str.w	r9, [sp]
90004334:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004338:	f004 fea4 	bl	90009084 <HAL_I2C_Mem_Write>
9000433c:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
9000433e:	200a      	movs	r0, #10
90004340:	f003 fd80 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004344:	4623      	mov	r3, r4
90004346:	2203      	movs	r2, #3
90004348:	21ae      	movs	r1, #174	@ 0xae
9000434a:	4640      	mov	r0, r8
9000434c:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_INTR_EN_2_TEMP_DIS;
90004350:	f88d a017 	strb.w	sl, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004354:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004358:	f004 fe94 	bl	90009084 <HAL_I2C_Mem_Write>
9000435c:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
9000435e:	200a      	movs	r0, #10
90004360:	f003 fd70 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004364:	4623      	mov	r3, r4
90004366:	2204      	movs	r2, #4
90004368:	21ae      	movs	r1, #174	@ 0xae
9000436a:	4640      	mov	r0, r8
9000436c:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_FIFO_PTR_RESET;
90004370:	f88d a017 	strb.w	sl, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004374:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004378:	f004 fe84 	bl	90009084 <HAL_I2C_Mem_Write>
9000437c:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
9000437e:	200a      	movs	r0, #10
90004380:	f003 fd60 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004384:	4623      	mov	r3, r4
90004386:	2205      	movs	r2, #5
90004388:	21ae      	movs	r1, #174	@ 0xae
9000438a:	4640      	mov	r0, r8
9000438c:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_FIFO_COUNTER_RESET;
90004390:	f88d a017 	strb.w	sl, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004394:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004398:	f004 fe74 	bl	90009084 <HAL_I2C_Mem_Write>
9000439c:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
9000439e:	200a      	movs	r0, #10
900043a0:	f003 fd50 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043a4:	4623      	mov	r3, r4
900043a6:	2206      	movs	r2, #6
900043a8:	21ae      	movs	r1, #174	@ 0xae
900043aa:	4640      	mov	r0, r8
900043ac:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_FIFO_PTR_RESET;
900043b0:	f88d a017 	strb.w	sl, [sp, #23]
    tmp = OXIMETER5_SET_LED_PULSE_AMPL_7_2_mA;
900043b4:	f04f 0a24 	mov.w	sl, #36	@ 0x24
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043b8:	e9cd 4601 	strd	r4, r6, [sp, #4]
900043bc:	f004 fe62 	bl	90009084 <HAL_I2C_Mem_Write>
900043c0:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
900043c2:	200a      	movs	r0, #10
900043c4:	f003 fd3e 	bl	90007e44 <HAL_Delay>
    tmp |= OXIMETER5_SET_FIFO_CFG_DATA_SAMP_15;
900043c8:	234f      	movs	r3, #79	@ 0x4f
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043ca:	2208      	movs	r2, #8
900043cc:	21ae      	movs	r1, #174	@ 0xae
    tmp |= OXIMETER5_SET_FIFO_CFG_DATA_SAMP_15;
900043ce:	f88d 3017 	strb.w	r3, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043d2:	4640      	mov	r0, r8
900043d4:	4623      	mov	r3, r4
900043d6:	f8cd 9000 	str.w	r9, [sp]
900043da:	e9cd 4601 	strd	r4, r6, [sp, #4]
900043de:	f004 fe51 	bl	90009084 <HAL_I2C_Mem_Write>
900043e2:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
900043e4:	200a      	movs	r0, #10
900043e6:	f003 fd2d 	bl	90007e44 <HAL_Delay>
    tmp = OXIMETER5_SET_CFG_MODE_SpO2;
900043ea:	2303      	movs	r3, #3
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043ec:	2209      	movs	r2, #9
900043ee:	21ae      	movs	r1, #174	@ 0xae
    tmp = OXIMETER5_SET_CFG_MODE_SpO2;
900043f0:	f88d 3017 	strb.w	r3, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900043f4:	4640      	mov	r0, r8
900043f6:	4623      	mov	r3, r4
900043f8:	f8cd 9000 	str.w	r9, [sp]
900043fc:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004400:	f004 fe40 	bl	90009084 <HAL_I2C_Mem_Write>
90004404:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
90004406:	200a      	movs	r0, #10
90004408:	f003 fd1c 	bl	90007e44 <HAL_Delay>
    tmp |= OXIMETER5_SET_SPO2_CFG_LED_PW_18_bit;
9000440c:	2327      	movs	r3, #39	@ 0x27
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000440e:	220a      	movs	r2, #10
90004410:	21ae      	movs	r1, #174	@ 0xae
    tmp |= OXIMETER5_SET_SPO2_CFG_LED_PW_18_bit;
90004412:	f88d 3017 	strb.w	r3, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
90004416:	4640      	mov	r0, r8
90004418:	4623      	mov	r3, r4
9000441a:	f8cd 9000 	str.w	r9, [sp]
9000441e:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004422:	f004 fe2f 	bl	90009084 <HAL_I2C_Mem_Write>
90004426:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
90004428:	200a      	movs	r0, #10
9000442a:	f003 fd0b 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000442e:	4623      	mov	r3, r4
90004430:	220c      	movs	r2, #12
90004432:	21ae      	movs	r1, #174	@ 0xae
90004434:	4640      	mov	r0, r8
90004436:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_LED_PULSE_AMPL_7_2_mA;
9000443a:	f88d a017 	strb.w	sl, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000443e:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004442:	f004 fe1f 	bl	90009084 <HAL_I2C_Mem_Write>
90004446:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
90004448:	200a      	movs	r0, #10
9000444a:	f003 fcfb 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000444e:	4623      	mov	r3, r4
90004450:	220d      	movs	r2, #13
90004452:	21ae      	movs	r1, #174	@ 0xae
90004454:	4640      	mov	r0, r8
90004456:	f8cd 9000 	str.w	r9, [sp]
    tmp = OXIMETER5_SET_LED_PULSE_AMPL_7_2_mA;
9000445a:	f88d a017 	strb.w	sl, [sp, #23]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
9000445e:	e9cd 4601 	strd	r4, r6, [sp, #4]
90004462:	f004 fe0f 	bl	90009084 <HAL_I2C_Mem_Write>
90004466:	7028      	strb	r0, [r5, #0]
    HAL_Delay(10);
90004468:	200a      	movs	r0, #10
9000446a:	f003 fceb 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
9000446e:	2106      	movs	r1, #6
90004470:	4623      	mov	r3, r4
90004472:	2207      	movs	r2, #7
90004474:	9101      	str	r1, [sp, #4]
90004476:	21ae      	movs	r1, #174	@ 0xae
90004478:	4640      	mov	r0, r8
9000447a:	9602      	str	r6, [sp, #8]
9000447c:	9700      	str	r7, [sp, #0]
9000447e:	f004 feff 	bl	90009280 <HAL_I2C_Mem_Read>
90004482:	7028      	strb	r0, [r5, #0]
}
90004484:	b008      	add	sp, #32
90004486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000448a:	bf00      	nop
9000448c:	24007be4 	.word	0x24007be4
90004490:	24007b04 	.word	0x24007b04

90004494 <oximeter5_check_interrupt>:
	return HAL_GPIO_ReadPin(GPIOH, GPIO_PIN_12) == GPIO_PIN_SET ? OXIMETER5_INTERRUPT_ACTIVE : OXIMETER5_INTERRUPT_INACTIVE;
90004494:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90004498:	4804      	ldr	r0, [pc, #16]	@ (900044ac <oximeter5_check_interrupt+0x18>)
{
9000449a:	b508      	push	{r3, lr}
	return HAL_GPIO_ReadPin(GPIOH, GPIO_PIN_12) == GPIO_PIN_SET ? OXIMETER5_INTERRUPT_ACTIVE : OXIMETER5_INTERRUPT_INACTIVE;
9000449c:	f004 fa92 	bl	900089c4 <HAL_GPIO_ReadPin>
}
900044a0:	f1a0 0001 	sub.w	r0, r0, #1
900044a4:	fab0 f080 	clz	r0, r0
900044a8:	0940      	lsrs	r0, r0, #5
900044aa:	bd08      	pop	{r3, pc}
900044ac:	58021c00 	.word	0x58021c00

900044b0 <oximeter5_read_temperature>:
{
900044b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900044b4:	b086      	sub	sp, #24
    tx_data = OXIMETER5_SET_CFG_TEMP_ENABLE;
900044b6:	2501      	movs	r5, #1
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900044b8:	f04f 37ff 	mov.w	r7, #4294967295
900044bc:	4e2c      	ldr	r6, [pc, #176]	@ (90004570 <oximeter5_read_temperature+0xc0>)
900044be:	f10d 0216 	add.w	r2, sp, #22
900044c2:	462b      	mov	r3, r5
900044c4:	21ae      	movs	r1, #174	@ 0xae
{
900044c6:	4604      	mov	r4, r0
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900044c8:	9200      	str	r2, [sp, #0]
900044ca:	2221      	movs	r2, #33	@ 0x21
900044cc:	4829      	ldr	r0, [pc, #164]	@ (90004574 <oximeter5_read_temperature+0xc4>)
    tx_data = OXIMETER5_SET_CFG_TEMP_ENABLE;
900044ce:	f88d 5016 	strb.w	r5, [sp, #22]
	retval = HAL_I2C_Mem_Write(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, tx_buf, tx_len, HAL_MAX_DELAY);
900044d2:	e9cd 5701 	strd	r5, r7, [sp, #4]
900044d6:	f004 fdd5 	bl	90009084 <HAL_I2C_Mem_Write>
900044da:	4680      	mov	r8, r0
900044dc:	7030      	strb	r0, [r6, #0]
    HAL_Delay(10);
900044de:	200a      	movs	r0, #10
900044e0:	f003 fcb0 	bl	90007e44 <HAL_Delay>
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
900044e4:	9702      	str	r7, [sp, #8]
900044e6:	f10d 0717 	add.w	r7, sp, #23
900044ea:	462b      	mov	r3, r5
900044ec:	221f      	movs	r2, #31
900044ee:	21ae      	movs	r1, #174	@ 0xae
900044f0:	4820      	ldr	r0, [pc, #128]	@ (90004574 <oximeter5_read_temperature+0xc4>)
900044f2:	9501      	str	r5, [sp, #4]
900044f4:	9700      	str	r7, [sp, #0]
900044f6:	f004 fec3 	bl	90009280 <HAL_I2C_Mem_Read>
    *temperature = ( float ) rx_data;
900044fa:	f89d 3017 	ldrb.w	r3, [sp, #23]
    error_flag |= oximeter5_generic_read(OXIMETER5_REG_TEMP_INTR, &rx_data, 1 );
900044fe:	ea40 0808 	orr.w	r8, r0, r8
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004502:	7030      	strb	r0, [r6, #0]
    *temperature = ( float ) rx_data;
90004504:	ee07 3a90 	vmov	s15, r3
    if ( rx_data > MAX_UNSIGNED_8_BIT_DATA )
90004508:	061b      	lsls	r3, r3, #24
    *temperature = ( float ) rx_data;
9000450a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    if ( rx_data > MAX_UNSIGNED_8_BIT_DATA )
9000450e:	d503      	bpl.n	90004518 <oximeter5_read_temperature+0x68>
        *temperature -= DATA_CONV_SIGN_8_BIT_DATA;
90004510:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90004578 <oximeter5_read_temperature+0xc8>
90004514:	ee77 7ac7 	vsub.f32	s15, s15, s14
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004518:	f04f 33ff 	mov.w	r3, #4294967295
    *temperature = ( float ) rx_data;
9000451c:	edc4 7a00 	vstr	s15, [r4]
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004520:	2220      	movs	r2, #32
90004522:	21ae      	movs	r1, #174	@ 0xae
90004524:	9302      	str	r3, [sp, #8]
90004526:	2301      	movs	r3, #1
90004528:	9700      	str	r7, [sp, #0]
9000452a:	9301      	str	r3, [sp, #4]
9000452c:	4811      	ldr	r0, [pc, #68]	@ (90004574 <oximeter5_read_temperature+0xc4>)
9000452e:	f004 fea7 	bl	90009280 <HAL_I2C_Mem_Read>
    rx_data &= BYTE_LOW_NIBBLE;
90004532:	f89d 3017 	ldrb.w	r3, [sp, #23]
    *temperature += ( float ) rx_data * TEMPERATURE_DATA_CALC_DATA;
90004536:	ed94 7a00 	vldr	s14, [r4]
9000453a:	f003 030f 	and.w	r3, r3, #15
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
9000453e:	7030      	strb	r0, [r6, #0]
    *temperature += ( float ) rx_data * TEMPERATURE_DATA_CALC_DATA;
90004540:	eeb7 7ac7 	vcvt.f64.f32	d7, s14
}
90004544:	ea48 0000 	orr.w	r0, r8, r0
    *temperature += ( float ) rx_data * TEMPERATURE_DATA_CALC_DATA;
90004548:	ee06 3a90 	vmov	s13, r3
9000454c:	ed9f 5b06 	vldr	d5, [pc, #24]	@ 90004568 <oximeter5_read_temperature+0xb8>
90004550:	eeb8 6b66 	vcvt.f64.u32	d6, s13
90004554:	eea6 7b05 	vfma.f64	d7, d6, d5
90004558:	eeb7 7bc7 	vcvt.f32.f64	s14, d7
9000455c:	ed84 7a00 	vstr	s14, [r4]
}
90004560:	b006      	add	sp, #24
90004562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90004566:	bf00      	nop
90004568:	00000000 	.word	0x00000000
9000456c:	3fb00000 	.word	0x3fb00000
90004570:	24007be4 	.word	0x24007be4
90004574:	24007b04 	.word	0x24007b04
90004578:	43800000 	.word	0x43800000

9000457c <oximeter5_read_sensor_data>:
{
9000457c:	b530      	push	{r4, r5, lr}
9000457e:	b087      	sub	sp, #28
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004580:	f04f 32ff 	mov.w	r2, #4294967295
90004584:	2306      	movs	r3, #6
{
90004586:	4605      	mov	r5, r0
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004588:	ac04      	add	r4, sp, #16
9000458a:	4812      	ldr	r0, [pc, #72]	@ (900045d4 <oximeter5_read_sensor_data+0x58>)
9000458c:	e9cd 3201 	strd	r3, r2, [sp, #4]
90004590:	9400      	str	r4, [sp, #0]
90004592:	2301      	movs	r3, #1
{
90004594:	460c      	mov	r4, r1
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
90004596:	2207      	movs	r2, #7
90004598:	21ae      	movs	r1, #174	@ 0xae
9000459a:	f004 fe71 	bl	90009280 <HAL_I2C_Mem_Read>
    *ir <<= 8;
9000459e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
900045a2:	4b0d      	ldr	r3, [pc, #52]	@ (900045d8 <oximeter5_read_sensor_data+0x5c>)
    *ir <<= 8;
900045a4:	ba52      	rev16	r2, r2
	retval = HAL_I2C_Mem_Read(&hi2c4, (OXIMETER5_SET_DEV_ADDR << 1), reg, I2C_MEMADD_SIZE_8BIT, rx_buf, rx_len, HAL_MAX_DELAY);
900045a6:	7018      	strb	r0, [r3, #0]
    *ir <<= 8;
900045a8:	b292      	uxth	r2, r2
    *ir |= rx_buf[ 2 ];
900045aa:	f89d 3012 	ldrb.w	r3, [sp, #18]
900045ae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    *red <<= 8;
900045b2:	f8bd 2013 	ldrh.w	r2, [sp, #19]
    *ir &= DATA_18_BIT;
900045b6:	f3c3 0311 	ubfx	r3, r3, #0, #18
    *red <<= 8;
900045ba:	ba52      	rev16	r2, r2
    *ir &= DATA_18_BIT;
900045bc:	602b      	str	r3, [r5, #0]
    *red <<= 8;
900045be:	b292      	uxth	r2, r2
    *red |= rx_buf[ 5 ];
900045c0:	f89d 3015 	ldrb.w	r3, [sp, #21]
900045c4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    *red &= DATA_18_BIT;
900045c8:	f3c3 0311 	ubfx	r3, r3, #0, #18
900045cc:	6023      	str	r3, [r4, #0]
}
900045ce:	b007      	add	sp, #28
900045d0:	bd30      	pop	{r4, r5, pc}
900045d2:	bf00      	nop
900045d4:	24007b04 	.word	0x24007b04
900045d8:	24007be4 	.word	0x24007be4

900045dc <oximeter5_get_oxygen_saturation>:
{
900045dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
900045e0:	1e0f      	subs	r7, r1, #0
{
900045e2:	f5ad 7d63 	sub.w	sp, sp, #908	@ 0x38c
900045e6:	4682      	mov	sl, r0
900045e8:	4691      	mov	r9, r2
900045ea:	469b      	mov	fp, r3
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
900045ec:	f340 817f 	ble.w	900048ee <oximeter5_get_oxygen_saturation+0x312>
900045f0:	1f01      	subs	r1, r0, #4
    un_ir_mean = 0;
900045f2:	2300      	movs	r3, #0
900045f4:	eb01 0087 	add.w	r0, r1, r7, lsl #2
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
900045f8:	460a      	mov	r2, r1
        un_ir_mean += pun_ir_buffer[ n_cnt_k ];
900045fa:	f852 6f04 	ldr.w	r6, [r2, #4]!
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
900045fe:	4282      	cmp	r2, r0
        un_ir_mean += pun_ir_buffer[ n_cnt_k ];
90004600:	4433      	add	r3, r6
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004602:	d1fa      	bne.n	900045fa <oximeter5_get_oxygen_saturation+0x1e>
    un_ir_mean =un_ir_mean/n_ir_buffer_length ;
90004604:	ae1a      	add	r6, sp, #104	@ 0x68
90004606:	fbb3 f2f7 	udiv	r2, r3, r7
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
9000460a:	46b4      	mov	ip, r6
        an_x[ n_cnt_k ] = -1*(pun_ir_buffer[ n_cnt_k ] - un_ir_mean );
9000460c:	f851 3f04 	ldr.w	r3, [r1, #4]!
90004610:	1ad3      	subs	r3, r2, r3
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004612:	4281      	cmp	r1, r0
        an_x[ n_cnt_k ] = -1*(pun_ir_buffer[ n_cnt_k ] - un_ir_mean );
90004614:	f84c 3b04 	str.w	r3, [ip], #4
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004618:	d1f8      	bne.n	9000460c <oximeter5_get_oxygen_saturation+0x30>
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE-MA4_SIZE; n_cnt_k++ )
9000461a:	68b2      	ldr	r2, [r6, #8]
9000461c:	46b0      	mov	r8, r6
    un_ir_mean = 0;
9000461e:	4630      	mov	r0, r6
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE-MA4_SIZE; n_cnt_k++ )
90004620:	f04f 0e00 	mov.w	lr, #0
90004624:	9401      	str	r4, [sp, #4]
90004626:	e9d6 c100 	ldrd	ip, r1, [r6]
        an_x[ n_cnt_k ] = ( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
9000462a:	eb01 030c 	add.w	r3, r1, ip
9000462e:	f8d0 c00c 	ldr.w	ip, [r0, #12]
90004632:	4411      	add	r1, r2
90004634:	f10e 0e03 	add.w	lr, lr, #3
90004638:	4413      	add	r3, r2
9000463a:	4462      	add	r2, ip
9000463c:	eb01 040c 	add.w	r4, r1, ip
90004640:	6901      	ldr	r1, [r0, #16]
90004642:	eb13 030c 	adds.w	r3, r3, ip
90004646:	f100 000c 	add.w	r0, r0, #12
9000464a:	bf48      	it	mi
9000464c:	3303      	addmi	r3, #3
9000464e:	109b      	asrs	r3, r3, #2
90004650:	f840 3c0c 	str.w	r3, [r0, #-12]
90004654:	1853      	adds	r3, r2, r1
90004656:	190a      	adds	r2, r1, r4
90004658:	bf48      	it	mi
9000465a:	3203      	addmi	r2, #3
9000465c:	1092      	asrs	r2, r2, #2
9000465e:	f840 2c08 	str.w	r2, [r0, #-8]
90004662:	6882      	ldr	r2, [r0, #8]
90004664:	18d3      	adds	r3, r2, r3
90004666:	bf48      	it	mi
90004668:	3303      	addmi	r3, #3
9000466a:	f1be 0f5d 	cmp.w	lr, #93	@ 0x5d
9000466e:	ea4f 03a3 	mov.w	r3, r3, asr #2
90004672:	f840 3c04 	str.w	r3, [r0, #-4]
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE-MA4_SIZE; n_cnt_k++ )
90004676:	d1d8      	bne.n	9000462a <oximeter5_get_oxygen_saturation+0x4e>
        an_x[ n_cnt_k ] = ( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
90004678:	e9d6 325d 	ldrd	r3, r2, [r6, #372]	@ 0x174
9000467c:	f8d6 1180 	ldr.w	r1, [r6, #384]	@ 0x180
90004680:	18d0      	adds	r0, r2, r3
90004682:	f8d6 317c 	ldr.w	r3, [r6, #380]	@ 0x17c
90004686:	9c01      	ldr	r4, [sp, #4]
90004688:	4418      	add	r0, r3
9000468a:	441a      	add	r2, r3
9000468c:	440b      	add	r3, r1
9000468e:	1840      	adds	r0, r0, r1
90004690:	440a      	add	r2, r1
90004692:	bf48      	it	mi
90004694:	3003      	addmi	r0, #3
90004696:	1080      	asrs	r0, r0, #2
90004698:	f8c6 0174 	str.w	r0, [r6, #372]	@ 0x174
9000469c:	f8d6 0184 	ldr.w	r0, [r6, #388]	@ 0x184
900046a0:	1812      	adds	r2, r2, r0
900046a2:	4403      	add	r3, r0
900046a4:	f506 70c6 	add.w	r0, r6, #396	@ 0x18c
900046a8:	bf48      	it	mi
900046aa:	3203      	addmi	r2, #3
900046ac:	1092      	asrs	r2, r2, #2
900046ae:	f8c6 2178 	str.w	r2, [r6, #376]	@ 0x178
900046b2:	f8d6 2188 	ldr.w	r2, [r6, #392]	@ 0x188
900046b6:	189b      	adds	r3, r3, r2
    n_th1 = 0;
900046b8:	f04f 0200 	mov.w	r2, #0
        an_x[ n_cnt_k ] = ( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
900046bc:	bf48      	it	mi
900046be:	3303      	addmi	r3, #3
900046c0:	109b      	asrs	r3, r3, #2
900046c2:	f8c6 317c 	str.w	r3, [r6, #380]	@ 0x17c
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE-MA4_SIZE; n_cnt_k++ )
900046c6:	ab19      	add	r3, sp, #100	@ 0x64
        n_th1 +=  an_x[ n_cnt_k ];
900046c8:	f853 1f04 	ldr.w	r1, [r3, #4]!
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE; n_cnt_k++ )
900046cc:	4283      	cmp	r3, r0
        n_th1 +=  an_x[ n_cnt_k ];
900046ce:	440a      	add	r2, r1
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE; n_cnt_k++ )
900046d0:	d1fa      	bne.n	900046c8 <oximeter5_get_oxygen_saturation+0xec>
    if ( n_th1 < 30 )
900046d2:	f640 33b7 	movw	r3, #2999	@ 0xbb7
900046d6:	429a      	cmp	r2, r3
900046d8:	f340 810d 	ble.w	900048f6 <oximeter5_get_oxygen_saturation+0x31a>
    if ( n_th1 > 60 )
900046dc:	f241 73d3 	movw	r3, #6099	@ 0x17d3
900046e0:	429a      	cmp	r2, r3
900046e2:	f300 8115 	bgt.w	90004910 <oximeter5_get_oxygen_saturation+0x334>
    n_th1=  n_th1 / BUFFER_SIZE;
900046e6:	4993      	ldr	r1, [pc, #588]	@ (90004934 <oximeter5_get_oxygen_saturation+0x358>)
900046e8:	fb81 3102 	smull	r3, r1, r1, r2
900046ec:	17d3      	asrs	r3, r2, #31
900046ee:	ebc3 1361 	rsb	r3, r3, r1, asr #5
        an_ir_valley_locs[ n_cnt_k ] = 0;
900046f2:	223c      	movs	r2, #60	@ 0x3c
900046f4:	2100      	movs	r1, #0
900046f6:	a80b      	add	r0, sp, #44	@ 0x2c
900046f8:	9301      	str	r3, [sp, #4]
900046fa:	f026 fb4f 	bl	9002ad9c <memset>
    dev_find_peaks( an_ir_valley_locs, &n_npks, an_x, BUFFER_SIZE, n_th1, 4, 15 );//peak_height, peak_distance, max_num_peaks
900046fe:	9b01      	ldr	r3, [sp, #4]
90004700:	4632      	mov	r2, r6
90004702:	a80b      	add	r0, sp, #44	@ 0x2c
90004704:	a905      	add	r1, sp, #20
90004706:	f7ff fce9 	bl	900040dc <dev_find_peaks.constprop.0>
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
9000470a:	2f00      	cmp	r7, #0
9000470c:	dd2d      	ble.n	9000476a <oximeter5_get_oxygen_saturation+0x18e>
9000470e:	2f01      	cmp	r7, #1
90004710:	f000 8106 	beq.w	90004920 <oximeter5_get_oxygen_saturation+0x344>
90004714:	ea4f 0e57 	mov.w	lr, r7, lsr #1
90004718:	f50d 7cfc 	add.w	ip, sp, #504	@ 0x1f8
9000471c:	464b      	mov	r3, r9
9000471e:	4651      	mov	r1, sl
90004720:	eb09 0ece 	add.w	lr, r9, lr, lsl #3
90004724:	4662      	mov	r2, ip
        an_x[ n_cnt_k ] = pun_ir_buffer[ n_cnt_k ];
90004726:	6848      	ldr	r0, [r1, #4]
90004728:	3308      	adds	r3, #8
9000472a:	3108      	adds	r1, #8
9000472c:	f108 0808 	add.w	r8, r8, #8
90004730:	f848 0c04 	str.w	r0, [r8, #-4]
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004734:	3208      	adds	r2, #8
        an_x[ n_cnt_k ] = pun_ir_buffer[ n_cnt_k ];
90004736:	f851 0c08 	ldr.w	r0, [r1, #-8]
9000473a:	f848 0c08 	str.w	r0, [r8, #-8]
        an_y[ n_cnt_k ] = pun_red_buffer[ n_cnt_k ];
9000473e:	f853 0c04 	ldr.w	r0, [r3, #-4]
90004742:	f842 0c04 	str.w	r0, [r2, #-4]
90004746:	f853 0c08 	ldr.w	r0, [r3, #-8]
9000474a:	4573      	cmp	r3, lr
9000474c:	f842 0c08 	str.w	r0, [r2, #-8]
90004750:	d1e9      	bne.n	90004726 <oximeter5_get_oxygen_saturation+0x14a>
90004752:	07fb      	lsls	r3, r7, #31
90004754:	d509      	bpl.n	9000476a <oximeter5_get_oxygen_saturation+0x18e>
90004756:	f027 0701 	bic.w	r7, r7, #1
        an_x[ n_cnt_k ] = pun_ir_buffer[ n_cnt_k ];
9000475a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
        an_y[ n_cnt_k ] = pun_red_buffer[ n_cnt_k ];
9000475e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
        an_x[ n_cnt_k ] = pun_ir_buffer[ n_cnt_k ];
90004762:	f846 2027 	str.w	r2, [r6, r7, lsl #2]
        an_y[ n_cnt_k ] = pun_red_buffer[ n_cnt_k ];
90004766:	f84c 3027 	str.w	r3, [ip, r7, lsl #2]
    n_exact_ir_valley_locs_count = n_npks;
9000476a:	9905      	ldr	r1, [sp, #20]
        an_ratio[ n_cnt_k ] = 0;
9000476c:	2200      	movs	r2, #0
9000476e:	2300      	movs	r3, #0
90004770:	2000      	movs	r0, #0
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_exact_ir_valley_locs_count - 1; n_cnt_k++ )
90004772:	2901      	cmp	r1, #1
        an_ratio[ n_cnt_k ] = 0;
90004774:	900a      	str	r0, [sp, #40]	@ 0x28
90004776:	e9cd 2306 	strd	r2, r3, [sp, #24]
9000477a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_exact_ir_valley_locs_count - 1; n_cnt_k++ )
9000477e:	f340 80bf 	ble.w	90004900 <oximeter5_get_oxygen_saturation+0x324>
90004782:	ab0a      	add	r3, sp, #40	@ 0x28
90004784:	9002      	str	r0, [sp, #8]
90004786:	f8cd b00c 	str.w	fp, [sp, #12]
9000478a:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
9000478e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90004792:	46ac      	mov	ip, r5
90004794:	46b3      	mov	fp, r6
90004796:	4618      	mov	r0, r3
90004798:	e001      	b.n	9000479e <oximeter5_get_oxygen_saturation+0x1c2>
9000479a:	4580      	cmp	r8, r0
9000479c:	d06d      	beq.n	9000487a <oximeter5_get_oxygen_saturation+0x29e>
        if ( an_ir_valley_locs[ n_cnt_k + 1 ] - an_ir_valley_locs[ n_cnt_k ] > 3 )
9000479e:	f8d8 5004 	ldr.w	r5, [r8, #4]
900047a2:	f858 6b04 	ldr.w	r6, [r8], #4
900047a6:	eba5 0906 	sub.w	r9, r5, r6
900047aa:	f1b9 0f03 	cmp.w	r9, #3
900047ae:	ddf4      	ble.n	9000479a <oximeter5_get_oxygen_saturation+0x1be>
            for ( int32_t n_cnt_i = an_ir_valley_locs[ n_cnt_k]; n_cnt_i < an_ir_valley_locs[ n_cnt_k + 1 ]; n_cnt_i++ )
900047b0:	42b5      	cmp	r5, r6
900047b2:	f340 80af 	ble.w	90004914 <oximeter5_get_oxygen_saturation+0x338>
900047b6:	f06f 4740 	mvn.w	r7, #3221225472	@ 0xc0000000
        n_x_dc_max= OXIMETER5_N_X_DC_MAX;
900047ba:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
900047be:	f50d 7afc 	add.w	sl, sp, #504	@ 0x1f8
            for ( int32_t n_cnt_i = an_ir_valley_locs[ n_cnt_k]; n_cnt_i < an_ir_valley_locs[ n_cnt_k + 1 ]; n_cnt_i++ )
900047c2:	4633      	mov	r3, r6
900047c4:	19f7      	adds	r7, r6, r7
        n_y_dc_max= OXIMETER5_N_X_DC_MAX;
900047c6:	4611      	mov	r1, r2
900047c8:	9601      	str	r6, [sp, #4]
900047ca:	eb0b 0e87 	add.w	lr, fp, r7, lsl #2
900047ce:	eb0a 0787 	add.w	r7, sl, r7, lsl #2
                if ( an_x[ n_cnt_i ] > n_x_dc_max )
900047d2:	f85e 6f04 	ldr.w	r6, [lr, #4]!
                    n_x_dc_max = an_x[ n_cnt_i ];
900047d6:	42b2      	cmp	r2, r6
900047d8:	bfb8      	it	lt
900047da:	4632      	movlt	r2, r6
                if ( an_y[ n_cnt_i ] > n_y_dc_max )
900047dc:	f857 6f04 	ldr.w	r6, [r7, #4]!
                    n_x_dc_max = an_x[ n_cnt_i ];
900047e0:	bfb8      	it	lt
900047e2:	469c      	movlt	ip, r3
                    n_y_dc_max = an_y[ n_cnt_i ];
900047e4:	42b1      	cmp	r1, r6
900047e6:	bfb8      	it	lt
900047e8:	461c      	movlt	r4, r3
            for ( int32_t n_cnt_i = an_ir_valley_locs[ n_cnt_k]; n_cnt_i < an_ir_valley_locs[ n_cnt_k + 1 ]; n_cnt_i++ )
900047ea:	f103 0301 	add.w	r3, r3, #1
                    n_y_dc_max = an_y[ n_cnt_i ];
900047ee:	bfb8      	it	lt
900047f0:	4631      	movlt	r1, r6
            for ( int32_t n_cnt_i = an_ir_valley_locs[ n_cnt_k]; n_cnt_i < an_ir_valley_locs[ n_cnt_k + 1 ]; n_cnt_i++ )
900047f2:	429d      	cmp	r5, r3
900047f4:	d1ed      	bne.n	900047d2 <oximeter5_get_oxygen_saturation+0x1f6>
900047f6:	9e01      	ldr	r6, [sp, #4]
            n_y_ac = ( an_y[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_y[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_y_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
900047f8:	f85a e026 	ldr.w	lr, [sl, r6, lsl #2]
900047fc:	f85a 7025 	ldr.w	r7, [sl, r5, lsl #2]
            n_y_ac =  an_y[ n_y_dc_max_idx ] - n_y_ac;
90004800:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
            n_y_ac = ( an_y[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_y[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_y_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
90004804:	eba4 0a06 	sub.w	sl, r4, r6
90004808:	eba7 070e 	sub.w	r7, r7, lr
            n_x_ac = ( an_x[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_x[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_x_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
9000480c:	f85b 5025 	ldr.w	r5, [fp, r5, lsl #2]
            n_y_ac = ( an_y[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_y[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_y_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
90004810:	fb0a f707 	mul.w	r7, sl, r7
            n_y_ac =  an_y[an_ir_valley_locs[ n_cnt_k ] ] + n_y_ac / ( an_ir_valley_locs[ n_cnt_k + 1 ] - an_ir_valley_locs[ n_cnt_k ] );
90004814:	fb97 f7f9 	sdiv	r7, r7, r9
90004818:	44be      	add	lr, r7
            n_y_ac =  an_y[ n_y_dc_max_idx ] - n_y_ac;
9000481a:	eba3 030e 	sub.w	r3, r3, lr
            n_nume =( n_y_ac * n_x_dc_max ) >> 7;
9000481e:	fb03 f202 	mul.w	r2, r3, r2
            n_x_ac = ( an_x[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_x[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_x_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
90004822:	f85b 3026 	ldr.w	r3, [fp, r6, lsl #2]
90004826:	ebac 0606 	sub.w	r6, ip, r6
9000482a:	1aed      	subs	r5, r5, r3
            if ( ( n_denom > 0 )  && ( n_i_ratio_count < 5 ) && ( n_nume != 0 ) )
9000482c:	11d2      	asrs	r2, r2, #7
            n_x_ac = ( an_x[ an_ir_valley_locs[ n_cnt_k + 1 ] ] - an_x[ an_ir_valley_locs[ n_cnt_k ] ] ) * ( n_x_dc_max_idx - an_ir_valley_locs[ n_cnt_k ] );
9000482e:	fb06 f505 	mul.w	r5, r6, r5
            n_x_ac =  an_x[ an_ir_valley_locs[ n_cnt_k ] ] + n_x_ac / ( an_ir_valley_locs[ n_cnt_k + 1 ] - an_ir_valley_locs[ n_cnt_k ] );
90004832:	fb95 f5f9 	sdiv	r5, r5, r9
90004836:	441d      	add	r5, r3
            n_x_ac =  an_x[ n_y_dc_max_idx ] - n_x_ac;
90004838:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
9000483c:	eba3 0305 	sub.w	r3, r3, r5
            n_denom = ( n_x_ac * n_y_dc_max ) >> 7;
90004840:	fb01 f303 	mul.w	r3, r1, r3
            if ( ( n_denom > 0 )  && ( n_i_ratio_count < 5 ) && ( n_nume != 0 ) )
90004844:	bf14      	ite	ne
90004846:	2101      	movne	r1, #1
90004848:	2100      	moveq	r1, #0
9000484a:	2b7f      	cmp	r3, #127	@ 0x7f
9000484c:	bfd4      	ite	le
9000484e:	2100      	movle	r1, #0
90004850:	f001 0101 	andgt.w	r1, r1, #1
            n_denom = ( n_x_ac * n_y_dc_max ) >> 7;
90004854:	11db      	asrs	r3, r3, #7
            if ( ( n_denom > 0 )  && ( n_i_ratio_count < 5 ) && ( n_nume != 0 ) )
90004856:	2900      	cmp	r1, #0
90004858:	d09f      	beq.n	9000479a <oximeter5_get_oxygen_saturation+0x1be>
9000485a:	9d02      	ldr	r5, [sp, #8]
9000485c:	2d04      	cmp	r5, #4
9000485e:	dc9c      	bgt.n	9000479a <oximeter5_get_oxygen_saturation+0x1be>
                an_ratio[ n_i_ratio_count ] = ( n_nume * 100 ) / n_denom;
90004860:	2164      	movs	r1, #100	@ 0x64
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_exact_ir_valley_locs_count - 1; n_cnt_k++ )
90004862:	4580      	cmp	r8, r0
                an_ratio[ n_i_ratio_count ] = ( n_nume * 100 ) / n_denom;
90004864:	fb01 f202 	mul.w	r2, r1, r2
90004868:	fb92 f3f3 	sdiv	r3, r2, r3
9000486c:	aa06      	add	r2, sp, #24
9000486e:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
                n_i_ratio_count++;
90004872:	f105 0301 	add.w	r3, r5, #1
90004876:	9302      	str	r3, [sp, #8]
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_exact_ir_valley_locs_count - 1; n_cnt_k++ )
90004878:	d191      	bne.n	9000479e <oximeter5_get_oxygen_saturation+0x1c2>
    n_middle_idx = n_i_ratio_count / 2;
9000487a:	e9dd 0b02 	ldrd	r0, fp, [sp, #8]
9000487e:	2800      	cmp	r0, #0
90004880:	4602      	mov	r2, r0
90004882:	bfb8      	it	lt
90004884:	1c42      	addlt	r2, r0, #1
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
90004886:	2801      	cmp	r0, #1
    n_middle_idx = n_i_ratio_count / 2;
90004888:	ea4f 0262 	mov.w	r2, r2, asr #1
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
9000488c:	dd4c      	ble.n	90004928 <oximeter5_get_oxygen_saturation+0x34c>
9000488e:	2601      	movs	r6, #1
90004890:	af06      	add	r7, sp, #24
90004892:	46b4      	mov	ip, r6
        n_temp = pn_x[ n_cnt_i ];
90004894:	f857 6f04 	ldr.w	r6, [r7, #4]!
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
90004898:	4661      	mov	r1, ip
        n_temp = pn_x[ n_cnt_i ];
9000489a:	463b      	mov	r3, r7
9000489c:	e004      	b.n	900048a8 <oximeter5_get_oxygen_saturation+0x2cc>
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
9000489e:	3901      	subs	r1, #1
            pn_x[ n_cnt_j ] = pn_x[ n_cnt_j - 1 ];
900048a0:	601c      	str	r4, [r3, #0]
900048a2:	f1a5 0304 	sub.w	r3, r5, #4
        for ( n_cnt_j = n_cnt_i; n_cnt_j > 0 && n_temp < pn_x[ n_cnt_j - 1 ]; n_cnt_j-- )
900048a6:	d024      	beq.n	900048f2 <oximeter5_get_oxygen_saturation+0x316>
900048a8:	f853 4c04 	ldr.w	r4, [r3, #-4]
900048ac:	461d      	mov	r5, r3
900048ae:	42a6      	cmp	r6, r4
900048b0:	dbf5      	blt.n	9000489e <oximeter5_get_oxygen_saturation+0x2c2>
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
900048b2:	f10c 0c01 	add.w	ip, ip, #1
        pn_x[ n_cnt_j ] = n_temp;
900048b6:	602e      	str	r6, [r5, #0]
    for ( int32_t n_cnt_i = 1; n_cnt_i < n_size; n_cnt_i++ )
900048b8:	4560      	cmp	r0, ip
900048ba:	d1eb      	bne.n	90004894 <oximeter5_get_oxygen_saturation+0x2b8>
        n_ratio_average = ( an_ratio[ n_middle_idx - 1 ] + an_ratio[ n_middle_idx ] ) / 2;
900048bc:	ab06      	add	r3, sp, #24
    if ( n_middle_idx > 1 )
900048be:	2803      	cmp	r0, #3
        n_ratio_average = ( an_ratio[ n_middle_idx - 1 ] + an_ratio[ n_middle_idx ] ) / 2;
900048c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    if ( n_middle_idx > 1 )
900048c4:	dd19      	ble.n	900048fa <oximeter5_get_oxygen_saturation+0x31e>
        n_ratio_average = ( an_ratio[ n_middle_idx - 1 ] + an_ratio[ n_middle_idx ] ) / 2;
900048c6:	3a01      	subs	r2, #1
900048c8:	a906      	add	r1, sp, #24
900048ca:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
900048ce:	189b      	adds	r3, r3, r2
900048d0:	bf48      	it	mi
900048d2:	3301      	addmi	r3, #1
900048d4:	105b      	asrs	r3, r3, #1
    if ( ( n_ratio_average > 2 ) && ( n_ratio_average < 184 ) )
900048d6:	1eda      	subs	r2, r3, #3
900048d8:	2ab4      	cmp	r2, #180	@ 0xb4
900048da:	d811      	bhi.n	90004900 <oximeter5_get_oxygen_saturation+0x324>
        n_spo2_calc = uch_spo2_table[ n_ratio_average ];
900048dc:	4a16      	ldr	r2, [pc, #88]	@ (90004938 <oximeter5_get_oxygen_saturation+0x35c>)
        error_flag = OXIMETER5_OK;
900048de:	2000      	movs	r0, #0
        n_spo2_calc = uch_spo2_table[ n_ratio_average ];
900048e0:	5cd3      	ldrb	r3, [r2, r3]
        error_flag = OXIMETER5_OK;
900048e2:	f88b 3000 	strb.w	r3, [fp]
}
900048e6:	f50d 7d63 	add.w	sp, sp, #908	@ 0x38c
900048ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900048ee:	ae1a      	add	r6, sp, #104	@ 0x68
900048f0:	e693      	b.n	9000461a <oximeter5_get_oxygen_saturation+0x3e>
900048f2:	ad06      	add	r5, sp, #24
900048f4:	e7dd      	b.n	900048b2 <oximeter5_get_oxygen_saturation+0x2d6>
        n_th1 = 30; // min allowed
900048f6:	231e      	movs	r3, #30
900048f8:	e6fb      	b.n	900046f2 <oximeter5_get_oxygen_saturation+0x116>
    if ( ( n_ratio_average > 2 ) && ( n_ratio_average < 184 ) )
900048fa:	1eda      	subs	r2, r3, #3
900048fc:	2ab4      	cmp	r2, #180	@ 0xb4
900048fe:	d9ed      	bls.n	900048dc <oximeter5_get_oxygen_saturation+0x300>
        *pn_spo2 = OXIMETER5_PN_SPO2_ERROR_DATA;
90004900:	23ff      	movs	r3, #255	@ 0xff
        error_flag  = OXIMETER5_ERROR;
90004902:	4618      	mov	r0, r3
90004904:	f88b 3000 	strb.w	r3, [fp]
}
90004908:	f50d 7d63 	add.w	sp, sp, #908	@ 0x38c
9000490c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        n_th1 = 60; // max allowed
90004910:	233c      	movs	r3, #60	@ 0x3c
90004912:	e6ee      	b.n	900046f2 <oximeter5_get_oxygen_saturation+0x116>
        n_x_dc_max= OXIMETER5_N_X_DC_MAX;
90004914:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
90004918:	f50d 7afc 	add.w	sl, sp, #504	@ 0x1f8
        n_y_dc_max= OXIMETER5_N_X_DC_MAX;
9000491c:	4611      	mov	r1, r2
9000491e:	e76b      	b.n	900047f8 <oximeter5_get_oxygen_saturation+0x21c>
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004920:	2700      	movs	r7, #0
90004922:	f50d 7cfc 	add.w	ip, sp, #504	@ 0x1f8
90004926:	e718      	b.n	9000475a <oximeter5_get_oxygen_saturation+0x17e>
        n_ratio_average = an_ratio[ n_middle_idx ];
90004928:	ab06      	add	r3, sp, #24
9000492a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    if ( ( n_ratio_average > 2 ) && ( n_ratio_average < 184 ) )
9000492e:	1eda      	subs	r2, r3, #3
    if ( n_middle_idx > 1 )
90004930:	e7d2      	b.n	900048d8 <oximeter5_get_oxygen_saturation+0x2fc>
90004932:	bf00      	nop
90004934:	51eb851f 	.word	0x51eb851f
90004938:	9002d9a4 	.word	0x9002d9a4

9000493c <oximeter5_get_heart_rate>:
{
9000493c:	b5f0      	push	{r4, r5, r6, r7, lr}
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
9000493e:	1e0c      	subs	r4, r1, #0
{
90004940:	b0f5      	sub	sp, #468	@ 0x1d4
90004942:	461d      	mov	r5, r3
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004944:	f340 812a 	ble.w	90004b9c <oximeter5_get_heart_rate+0x260>
90004948:	1f03      	subs	r3, r0, #4
    un_ir_mean = 0;
9000494a:	2200      	movs	r2, #0
9000494c:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004950:	4619      	mov	r1, r3
        un_ir_mean += pun_ir_buffer[ n_cnt_k ];
90004952:	f851 0f04 	ldr.w	r0, [r1, #4]!
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004956:	458c      	cmp	ip, r1
        un_ir_mean += pun_ir_buffer[ n_cnt_k ];
90004958:	4402      	add	r2, r0
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
9000495a:	d1fa      	bne.n	90004952 <oximeter5_get_heart_rate+0x16>
    un_ir_mean = un_ir_mean / n_ir_buffer_length;
9000495c:	fbb2 f1f4 	udiv	r1, r2, r4
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004960:	ac10      	add	r4, sp, #64	@ 0x40
90004962:	4620      	mov	r0, r4
        an_x[ n_cnt_k ] = -1 * ( pun_ir_buffer[ n_cnt_k ] - un_ir_mean );
90004964:	f853 2f04 	ldr.w	r2, [r3, #4]!
90004968:	1a8a      	subs	r2, r1, r2
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
9000496a:	459c      	cmp	ip, r3
        an_x[ n_cnt_k ] = -1 * ( pun_ir_buffer[ n_cnt_k ] - un_ir_mean );
9000496c:	f840 2b04 	str.w	r2, [r0], #4
    for ( int32_t n_cnt_k = 0; n_cnt_k < n_ir_buffer_length; n_cnt_k++ )
90004970:	d1f8      	bne.n	90004964 <oximeter5_get_heart_rate+0x28>
    for( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE - MA4_SIZE; n_cnt_k++ )
90004972:	f8d4 e008 	ldr.w	lr, [r4, #8]
    un_ir_mean = 0;
90004976:	4620      	mov	r0, r4
    for( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE - MA4_SIZE; n_cnt_k++ )
90004978:	f04f 0c00 	mov.w	ip, #0
9000497c:	e9d4 6700 	ldrd	r6, r7, [r4]
        an_x[ n_cnt_k ]=( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
90004980:	19b9      	adds	r1, r7, r6
90004982:	eb0e 0207 	add.w	r2, lr, r7
90004986:	68c6      	ldr	r6, [r0, #12]
90004988:	f10c 0c03 	add.w	ip, ip, #3
9000498c:	4471      	add	r1, lr
9000498e:	6907      	ldr	r7, [r0, #16]
90004990:	eb06 030e 	add.w	r3, r6, lr
90004994:	4432      	add	r2, r6
90004996:	1989      	adds	r1, r1, r6
90004998:	f8d0 e014 	ldr.w	lr, [r0, #20]
9000499c:	443b      	add	r3, r7
9000499e:	f100 000c 	add.w	r0, r0, #12
900049a2:	bf48      	it	mi
900049a4:	3103      	addmi	r1, #3
900049a6:	18ba      	adds	r2, r7, r2
900049a8:	bf48      	it	mi
900049aa:	3203      	addmi	r2, #3
900049ac:	eb1e 0303 	adds.w	r3, lr, r3
900049b0:	ea4f 01a1 	mov.w	r1, r1, asr #2
900049b4:	bf48      	it	mi
900049b6:	3303      	addmi	r3, #3
900049b8:	1092      	asrs	r2, r2, #2
900049ba:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
900049be:	f840 1c0c 	str.w	r1, [r0, #-12]
900049c2:	ea4f 03a3 	mov.w	r3, r3, asr #2
900049c6:	f840 2c08 	str.w	r2, [r0, #-8]
900049ca:	f840 3c04 	str.w	r3, [r0, #-4]
    for( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE - MA4_SIZE; n_cnt_k++ )
900049ce:	d1d7      	bne.n	90004980 <oximeter5_get_heart_rate+0x44>
        an_x[ n_cnt_k ]=( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
900049d0:	e9d4 235e 	ldrd	r2, r3, [r4, #376]	@ 0x178
900049d4:	f8d4 1174 	ldr.w	r1, [r4, #372]	@ 0x174
900049d8:	f504 7cc6 	add.w	ip, r4, #396	@ 0x18c
900049dc:	f8d4 0180 	ldr.w	r0, [r4, #384]	@ 0x180
900049e0:	4411      	add	r1, r2
900049e2:	441a      	add	r2, r3
900049e4:	4419      	add	r1, r3
900049e6:	4402      	add	r2, r0
900049e8:	4403      	add	r3, r0
900049ea:	1809      	adds	r1, r1, r0
900049ec:	bf48      	it	mi
900049ee:	3103      	addmi	r1, #3
900049f0:	1089      	asrs	r1, r1, #2
900049f2:	f8c4 1174 	str.w	r1, [r4, #372]	@ 0x174
900049f6:	f8d4 1184 	ldr.w	r1, [r4, #388]	@ 0x184
900049fa:	1852      	adds	r2, r2, r1
900049fc:	440b      	add	r3, r1
    n_th1 = 0;
900049fe:	f04f 0100 	mov.w	r1, #0
        an_x[ n_cnt_k ]=( an_x[ n_cnt_k ] + an_x[ n_cnt_k + 1 ] + an_x[ n_cnt_k + 2 ] + an_x[ n_cnt_k + 3 ] ) / 4;
90004a02:	bf48      	it	mi
90004a04:	3203      	addmi	r2, #3
90004a06:	1092      	asrs	r2, r2, #2
90004a08:	f8c4 2178 	str.w	r2, [r4, #376]	@ 0x178
90004a0c:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
90004a10:	189b      	adds	r3, r3, r2
90004a12:	aa0f      	add	r2, sp, #60	@ 0x3c
90004a14:	bf48      	it	mi
90004a16:	3303      	addmi	r3, #3
90004a18:	109b      	asrs	r3, r3, #2
90004a1a:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
        n_th1 +=  an_x[ n_cnt_k ];
90004a1e:	f852 0f04 	ldr.w	r0, [r2, #4]!
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE; n_cnt_k++ )
90004a22:	4594      	cmp	ip, r2
        n_th1 +=  an_x[ n_cnt_k ];
90004a24:	4401      	add	r1, r0
    for ( int32_t n_cnt_k = 0; n_cnt_k < BUFFER_SIZE; n_cnt_k++ )
90004a26:	d1fa      	bne.n	90004a1e <oximeter5_get_heart_rate+0xe2>
    if ( n_th1 < 30 )
90004a28:	f640 33b7 	movw	r3, #2999	@ 0xbb7
90004a2c:	4299      	cmp	r1, r3
90004a2e:	dd06      	ble.n	90004a3e <oximeter5_get_heart_rate+0x102>
    if( n_th1 > 60 )
90004a30:	f241 73d3 	movw	r3, #6099	@ 0x17d3
90004a34:	4299      	cmp	r1, r3
90004a36:	f340 80a1 	ble.w	90004b7c <oximeter5_get_heart_rate+0x240>
        n_th1 = 60; // max allowed
90004a3a:	263c      	movs	r6, #60	@ 0x3c
90004a3c:	e000      	b.n	90004a40 <oximeter5_get_heart_rate+0x104>
        n_th1 = 30; // min allowed
90004a3e:	261e      	movs	r6, #30
        an_ir_valley_locs[ n_cnt_k ] = 0;
90004a40:	223c      	movs	r2, #60	@ 0x3c
90004a42:	2100      	movs	r1, #0
90004a44:	a801      	add	r0, sp, #4
90004a46:	f026 f9a9 	bl	9002ad9c <memset>
    dev_find_peaks( an_ir_valley_locs, &n_npks, an_x, BUFFER_SIZE, n_th1, 4, 15 );//peak_height, peak_distance, max_num_peaks
90004a4a:	4622      	mov	r2, r4
90004a4c:	4633      	mov	r3, r6
90004a4e:	4669      	mov	r1, sp
90004a50:	a801      	add	r0, sp, #4
90004a52:	f7ff fb43 	bl	900040dc <dev_find_peaks.constprop.0>
    if ( n_npks >= 2 )
90004a56:	9a00      	ldr	r2, [sp, #0]
90004a58:	2a01      	cmp	r2, #1
90004a5a:	f340 8096 	ble.w	90004b8a <oximeter5_get_heart_rate+0x24e>
90004a5e:	2a03      	cmp	r2, #3
90004a60:	f102 31ff 	add.w	r1, r2, #4294967295
90004a64:	f340 80a4 	ble.w	90004bb0 <oximeter5_get_heart_rate+0x274>
90004a68:	2904      	cmp	r1, #4
90004a6a:	9b01      	ldr	r3, [sp, #4]
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004a6c:	f340 8098 	ble.w	90004ba0 <oximeter5_get_heart_rate+0x264>
90004a70:	2906      	cmp	r1, #6
90004a72:	f340 808f 	ble.w	90004b94 <oximeter5_get_heart_rate+0x258>
90004a76:	2908      	cmp	r1, #8
90004a78:	f340 8096 	ble.w	90004ba8 <oximeter5_get_heart_rate+0x26c>
90004a7c:	290a      	cmp	r1, #10
90004a7e:	f340 809a 	ble.w	90004bb6 <oximeter5_get_heart_rate+0x27a>
90004a82:	290c      	cmp	r1, #12
90004a84:	f340 809b 	ble.w	90004bbe <oximeter5_get_heart_rate+0x282>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004a88:	290e      	cmp	r1, #14
90004a8a:	980d      	ldr	r0, [sp, #52]	@ 0x34
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004a8c:	f340 809b 	ble.w	90004bc6 <oximeter5_get_heart_rate+0x28a>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004a90:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90004a92:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004a94:	200f      	movs	r0, #15
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004a96:	ae01      	add	r6, sp, #4
90004a98:	1e44      	subs	r4, r0, #1
90004a9a:	f856 4024 	ldr.w	r4, [r6, r4, lsl #2]
90004a9e:	f856 6020 	ldr.w	r6, [r6, r0, lsl #2]
90004aa2:	1b34      	subs	r4, r6, r4
90004aa4:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004aa6:	1c44      	adds	r4, r0, #1
90004aa8:	42a2      	cmp	r2, r4
90004aaa:	dd5d      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004aac:	af01      	add	r7, sp, #4
90004aae:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004ab2:	1ba6      	subs	r6, r4, r6
90004ab4:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004ab6:	1c86      	adds	r6, r0, #2
90004ab8:	42b2      	cmp	r2, r6
90004aba:	dd55      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004abc:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90004ac0:	1b34      	subs	r4, r6, r4
90004ac2:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004ac4:	1cc4      	adds	r4, r0, #3
90004ac6:	42a2      	cmp	r2, r4
90004ac8:	dd4e      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004aca:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004ace:	1ba6      	subs	r6, r4, r6
90004ad0:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004ad2:	1d06      	adds	r6, r0, #4
90004ad4:	42b2      	cmp	r2, r6
90004ad6:	dd47      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004ad8:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90004adc:	1b34      	subs	r4, r6, r4
90004ade:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004ae0:	1d44      	adds	r4, r0, #5
90004ae2:	42a2      	cmp	r2, r4
90004ae4:	dd40      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004ae6:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004aea:	1ba6      	subs	r6, r4, r6
90004aec:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004aee:	1d86      	adds	r6, r0, #6
90004af0:	42b2      	cmp	r2, r6
90004af2:	dd39      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004af4:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90004af8:	1b34      	subs	r4, r6, r4
90004afa:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004afc:	1dc4      	adds	r4, r0, #7
90004afe:	42a2      	cmp	r2, r4
90004b00:	dd32      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b02:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004b06:	1ba6      	subs	r6, r4, r6
90004b08:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b0a:	f100 0608 	add.w	r6, r0, #8
90004b0e:	42b2      	cmp	r2, r6
90004b10:	dd2a      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b12:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90004b16:	1b34      	subs	r4, r6, r4
90004b18:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b1a:	f100 0409 	add.w	r4, r0, #9
90004b1e:	42a2      	cmp	r2, r4
90004b20:	dd22      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b22:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004b26:	1ba6      	subs	r6, r4, r6
90004b28:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b2a:	f100 060a 	add.w	r6, r0, #10
90004b2e:	42b2      	cmp	r2, r6
90004b30:	dd1a      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b32:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90004b36:	1b34      	subs	r4, r6, r4
90004b38:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b3a:	f100 040b 	add.w	r4, r0, #11
90004b3e:	42a2      	cmp	r2, r4
90004b40:	dd12      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b42:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
90004b46:	1ba6      	subs	r6, r4, r6
90004b48:	4433      	add	r3, r6
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b4a:	f100 060c 	add.w	r6, r0, #12
90004b4e:	42b2      	cmp	r2, r6
90004b50:	dd0a      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b52:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b56:	300d      	adds	r0, #13
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b58:	1b34      	subs	r4, r6, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b5a:	4282      	cmp	r2, r0
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b5c:	4423      	add	r3, r4
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b5e:	dd03      	ble.n	90004b68 <oximeter5_get_heart_rate+0x22c>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b60:	f857 2020 	ldr.w	r2, [r7, r0, lsl #2]
90004b64:	1b92      	subs	r2, r2, r6
90004b66:	4413      	add	r3, r2
        *pn_heart_rate = ( int32_t ) ( ( SAMPLING_FREQUENCY * 60 ) / n_peak_interval_sum );
90004b68:	f240 52dc 	movw	r2, #1500	@ 0x5dc
        error_flag  = OXIMETER5_OK;
90004b6c:	2000      	movs	r0, #0
        n_peak_interval_sum = n_peak_interval_sum / ( n_npks - 1 );
90004b6e:	fb93 f3f1 	sdiv	r3, r3, r1
        *pn_heart_rate = ( int32_t ) ( ( SAMPLING_FREQUENCY * 60 ) / n_peak_interval_sum );
90004b72:	fb92 f3f3 	sdiv	r3, r2, r3
90004b76:	602b      	str	r3, [r5, #0]
}
90004b78:	b075      	add	sp, #468	@ 0x1d4
90004b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    n_th1 = n_th1 / BUFFER_SIZE;
90004b7c:	4b13      	ldr	r3, [pc, #76]	@ (90004bcc <oximeter5_get_heart_rate+0x290>)
90004b7e:	17ce      	asrs	r6, r1, #31
90004b80:	fb83 3101 	smull	r3, r1, r3, r1
90004b84:	ebc6 1661 	rsb	r6, r6, r1, asr #5
90004b88:	e75a      	b.n	90004a40 <oximeter5_get_heart_rate+0x104>
90004b8a:	4b11      	ldr	r3, [pc, #68]	@ (90004bd0 <oximeter5_get_heart_rate+0x294>)
        error_flag  = OXIMETER5_ERROR;
90004b8c:	20ff      	movs	r0, #255	@ 0xff
        *pn_heart_rate = ( int32_t ) ( ( SAMPLING_FREQUENCY * 60 ) / n_peak_interval_sum );
90004b8e:	602b      	str	r3, [r5, #0]
}
90004b90:	b075      	add	sp, #468	@ 0x1d4
90004b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004b94:	9805      	ldr	r0, [sp, #20]
90004b96:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004b98:	2005      	movs	r0, #5
90004b9a:	e77c      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
90004b9c:	ac10      	add	r4, sp, #64	@ 0x40
90004b9e:	e6e8      	b.n	90004972 <oximeter5_get_heart_rate+0x36>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004ba0:	9803      	ldr	r0, [sp, #12]
90004ba2:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004ba4:	2003      	movs	r0, #3
90004ba6:	e776      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004ba8:	9807      	ldr	r0, [sp, #28]
90004baa:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004bac:	2007      	movs	r0, #7
90004bae:	e772      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
    if ( n_npks >= 2 )
90004bb0:	2001      	movs	r0, #1
90004bb2:	2300      	movs	r3, #0
90004bb4:	e76f      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004bb6:	9809      	ldr	r0, [sp, #36]	@ 0x24
90004bb8:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004bba:	2009      	movs	r0, #9
90004bbc:	e76b      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004bbe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90004bc0:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004bc2:	200b      	movs	r0, #11
90004bc4:	e767      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
            n_peak_interval_sum += ( an_ir_valley_locs[ n_cnt_k ] -an_ir_valley_locs[ n_cnt_k - 1 ] );
90004bc6:	1ac3      	subs	r3, r0, r3
        for ( int32_t n_cnt_k = 1; n_cnt_k < n_npks; n_cnt_k++ )
90004bc8:	200d      	movs	r0, #13
90004bca:	e764      	b.n	90004a96 <oximeter5_get_heart_rate+0x15a>
90004bcc:	51eb851f 	.word	0x51eb851f
90004bd0:	fffffc19 	.word	0xfffffc19

90004bd4 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004bd4:	4b0b      	ldr	r3, [pc, #44]	@ (90004c04 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004bd6:	2200      	movs	r2, #0
90004bd8:	210f      	movs	r1, #15
90004bda:	f06f 0001 	mvn.w	r0, #1
{
90004bde:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004be0:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90004be4:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004be6:	f044 0402 	orr.w	r4, r4, #2
90004bea:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90004bee:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90004bf2:	f003 0302 	and.w	r3, r3, #2
90004bf6:	9301      	str	r3, [sp, #4]
90004bf8:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90004bfa:	b003      	add	sp, #12
90004bfc:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004c00:	f003 b94a 	b.w	90007e98 <HAL_NVIC_SetPriority>
90004c04:	58024400 	.word	0x58024400

90004c08 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90004c08:	4b0a      	ldr	r3, [pc, #40]	@ (90004c34 <HAL_CRC_MspInit+0x2c>)
90004c0a:	6802      	ldr	r2, [r0, #0]
90004c0c:	429a      	cmp	r2, r3
90004c0e:	d000      	beq.n	90004c12 <HAL_CRC_MspInit+0xa>
90004c10:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90004c12:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90004c16:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90004c18:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004c1c:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90004c20:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004c24:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90004c28:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90004c2c:	9301      	str	r3, [sp, #4]
90004c2e:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
90004c30:	b002      	add	sp, #8
90004c32:	4770      	bx	lr
90004c34:	58024c00 	.word	0x58024c00

90004c38 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90004c38:	4b0f      	ldr	r3, [pc, #60]	@ (90004c78 <HAL_DMA2D_MspInit+0x40>)
90004c3a:	6802      	ldr	r2, [r0, #0]
90004c3c:	429a      	cmp	r2, r3
90004c3e:	d000      	beq.n	90004c42 <HAL_DMA2D_MspInit+0xa>
90004c40:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004c42:	4b0e      	ldr	r3, [pc, #56]	@ (90004c7c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004c44:	2200      	movs	r2, #0
90004c46:	2105      	movs	r1, #5
90004c48:	205a      	movs	r0, #90	@ 0x5a
{
90004c4a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004c4c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90004c50:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004c52:	f044 0410 	orr.w	r4, r4, #16
90004c56:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90004c5a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90004c5e:	f003 0310 	and.w	r3, r3, #16
90004c62:	9301      	str	r3, [sp, #4]
90004c64:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004c66:	f003 f917 	bl	90007e98 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004c6a:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
90004c6c:	b002      	add	sp, #8
90004c6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004c72:	f003 b94d 	b.w	90007f10 <HAL_NVIC_EnableIRQ>
90004c76:	bf00      	nop
90004c78:	52001000 	.word	0x52001000
90004c7c:	58024400 	.word	0x58024400

90004c80 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
90004c80:	b510      	push	{r4, lr}
90004c82:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004c84:	2100      	movs	r1, #0
{
90004c86:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004c88:	22c0      	movs	r2, #192	@ 0xc0
90004c8a:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004c8c:	9106      	str	r1, [sp, #24]
90004c8e:	e9cd 1102 	strd	r1, r1, [sp, #8]
90004c92:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004c96:	f026 f881 	bl	9002ad9c <memset>
  if(hi2c->Instance==I2C4)
90004c9a:	4b1f      	ldr	r3, [pc, #124]	@ (90004d18 <HAL_I2C_MspInit+0x98>)
90004c9c:	6822      	ldr	r2, [r4, #0]
90004c9e:	429a      	cmp	r2, r3
90004ca0:	d001      	beq.n	90004ca6 <HAL_I2C_MspInit+0x26>

    /* USER CODE END I2C4_MspInit 1 */

  }

}
90004ca2:	b038      	add	sp, #224	@ 0xe0
90004ca4:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C4;
90004ca6:	2210      	movs	r2, #16
90004ca8:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004caa:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C4;
90004cac:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004cb0:	f007 fbe6 	bl	9000c480 <HAL_RCCEx_PeriphCLKConfig>
90004cb4:	bb40      	cbnz	r0, 90004d08 <HAL_I2C_MspInit+0x88>
    __HAL_RCC_GPIOD_CLK_ENABLE();
90004cb6:	4c19      	ldr	r4, [pc, #100]	@ (90004d1c <HAL_I2C_MspInit+0x9c>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90004cb8:	2204      	movs	r2, #4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004cba:	a902      	add	r1, sp, #8
90004cbc:	4818      	ldr	r0, [pc, #96]	@ (90004d20 <HAL_I2C_MspInit+0xa0>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
90004cbe:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90004cc2:	f043 0308 	orr.w	r3, r3, #8
90004cc6:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90004cca:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90004cce:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90004cd0:	2200      	movs	r2, #0
    __HAL_RCC_GPIOD_CLK_ENABLE();
90004cd2:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90004cd6:	ed9f 7b0e 	vldr	d7, [pc, #56]	@ 90004d10 <HAL_I2C_MspInit+0x90>
    __HAL_RCC_GPIOD_CLK_ENABLE();
90004cda:	9300      	str	r3, [sp, #0]
90004cdc:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90004cde:	2300      	movs	r3, #0
90004ce0:	ed8d 7b02 	vstr	d7, [sp, #8]
90004ce4:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004ce8:	f003 fb36 	bl	90008358 <HAL_GPIO_Init>
    __HAL_RCC_I2C4_CLK_ENABLE();
90004cec:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
90004cf0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90004cf4:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
90004cf8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
90004cfc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90004d00:	9301      	str	r3, [sp, #4]
90004d02:	9b01      	ldr	r3, [sp, #4]
}
90004d04:	b038      	add	sp, #224	@ 0xe0
90004d06:	bd10      	pop	{r4, pc}
      Error_Handler();
90004d08:	f7ff f9e6 	bl	900040d8 <Error_Handler>
90004d0c:	e7d3      	b.n	90004cb6 <HAL_I2C_MspInit+0x36>
90004d0e:	bf00      	nop
90004d10:	00003000 	.word	0x00003000
90004d14:	00000012 	.word	0x00000012
90004d18:	58001c00 	.word	0x58001c00
90004d1c:	58024400 	.word	0x58024400
90004d20:	58020c00 	.word	0x58020c00

90004d24 <HAL_I2C_MspDeInit>:
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C4)
90004d24:	6802      	ldr	r2, [r0, #0]
{
90004d26:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C4)
90004d28:	4b0b      	ldr	r3, [pc, #44]	@ (90004d58 <HAL_I2C_MspDeInit+0x34>)
90004d2a:	429a      	cmp	r2, r3
90004d2c:	d000      	beq.n	90004d30 <HAL_I2C_MspDeInit+0xc>
    /* USER CODE BEGIN I2C4_MspDeInit 1 */

    /* USER CODE END I2C4_MspDeInit 1 */
  }

}
90004d2e:	bd08      	pop	{r3, pc}
    __HAL_RCC_I2C4_CLK_DISABLE();
90004d30:	4a0a      	ldr	r2, [pc, #40]	@ (90004d5c <HAL_I2C_MspDeInit+0x38>)
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12);
90004d32:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90004d36:	480a      	ldr	r0, [pc, #40]	@ (90004d60 <HAL_I2C_MspDeInit+0x3c>)
    __HAL_RCC_I2C4_CLK_DISABLE();
90004d38:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90004d3c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90004d40:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12);
90004d44:	f003 fd0e 	bl	90008764 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_13);
90004d48:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90004d4c:	4804      	ldr	r0, [pc, #16]	@ (90004d60 <HAL_I2C_MspDeInit+0x3c>)
}
90004d4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_13);
90004d52:	f003 bd07 	b.w	90008764 <HAL_GPIO_DeInit>
90004d56:	bf00      	nop
90004d58:	58001c00 	.word	0x58001c00
90004d5c:	58024400 	.word	0x58024400
90004d60:	58020c00 	.word	0x58020c00

90004d64 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004d64:	4b3f      	ldr	r3, [pc, #252]	@ (90004e64 <HAL_JPEG_MspInit+0x100>)
90004d66:	6802      	ldr	r2, [r0, #0]
90004d68:	429a      	cmp	r2, r3
90004d6a:	d000      	beq.n	90004d6e <HAL_JPEG_MspInit+0xa>
90004d6c:	4770      	bx	lr
{
90004d6e:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d70:	4b3d      	ldr	r3, [pc, #244]	@ (90004e68 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004d72:	2211      	movs	r2, #17
90004d74:	4e3d      	ldr	r6, [pc, #244]	@ (90004e6c <HAL_JPEG_MspInit+0x108>)
{
90004d76:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004d78:	4d3d      	ldr	r5, [pc, #244]	@ (90004e70 <HAL_JPEG_MspInit+0x10c>)
90004d7a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004d7c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004d7e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d80:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004d84:	493b      	ldr	r1, [pc, #236]	@ (90004e74 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d86:	f042 0220 	orr.w	r2, r2, #32
90004d8a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004d8e:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d90:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004d94:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d96:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004d9a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004d9c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004d9e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004da0:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90004da2:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004da4:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004da8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004dac:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004dae:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004db0:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004db4:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004db8:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004dba:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90004dbe:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90004dc2:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004dc6:	2313      	movs	r3, #19
90004dc8:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90004dca:	2302      	movs	r3, #2
90004dcc:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004dce:	f006 f9fd 	bl	9000b1cc <HAL_MDMA_Init>
90004dd2:	2800      	cmp	r0, #0
90004dd4:	d13a      	bne.n	90004e4c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004dd6:	2200      	movs	r2, #0
90004dd8:	4824      	ldr	r0, [pc, #144]	@ (90004e6c <HAL_JPEG_MspInit+0x108>)
90004dda:	4611      	mov	r1, r2
90004ddc:	f006 fa94 	bl	9000b308 <HAL_MDMA_ConfigPostRequestMask>
90004de0:	2800      	cmp	r0, #0
90004de2:	d13c      	bne.n	90004e5e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004de4:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004de6:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004de8:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004dea:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004dec:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90004dee:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004df0:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004df4:	4920      	ldr	r1, [pc, #128]	@ (90004e78 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004df6:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90004df8:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90004dfa:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004dfc:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004dfe:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004e02:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004e06:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004e08:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004e0a:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004e0e:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004e10:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004e14:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004e18:	4815      	ldr	r0, [pc, #84]	@ (90004e70 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004e1a:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004e1c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004e1e:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004e20:	f006 f9d4 	bl	9000b1cc <HAL_MDMA_Init>
90004e24:	b9c0      	cbnz	r0, 90004e58 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004e26:	2200      	movs	r2, #0
90004e28:	4811      	ldr	r0, [pc, #68]	@ (90004e70 <HAL_JPEG_MspInit+0x10c>)
90004e2a:	4611      	mov	r1, r2
90004e2c:	f006 fa6c 	bl	9000b308 <HAL_MDMA_ConfigPostRequestMask>
90004e30:	b978      	cbnz	r0, 90004e52 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004e32:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004e34:	2200      	movs	r2, #0
90004e36:	2105      	movs	r1, #5
90004e38:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004e3a:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004e3c:	f003 f82c 	bl	90007e98 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004e40:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
90004e42:	b002      	add	sp, #8
90004e44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004e48:	f003 b862 	b.w	90007f10 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90004e4c:	f7ff f944 	bl	900040d8 <Error_Handler>
90004e50:	e7c1      	b.n	90004dd6 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90004e52:	f7ff f941 	bl	900040d8 <Error_Handler>
90004e56:	e7ec      	b.n	90004e32 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004e58:	f7ff f93e 	bl	900040d8 <Error_Handler>
90004e5c:	e7e3      	b.n	90004e26 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90004e5e:	f7ff f93b 	bl	900040d8 <Error_Handler>
90004e62:	e7bf      	b.n	90004de4 <HAL_JPEG_MspInit+0x80>
90004e64:	52003000 	.word	0x52003000
90004e68:	58024400 	.word	0x58024400
90004e6c:	24007a40 	.word	0x24007a40
90004e70:	240079d4 	.word	0x240079d4
90004e74:	52000200 	.word	0x52000200
90004e78:	520001c0 	.word	0x520001c0

90004e7c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90004e7c:	b570      	push	{r4, r5, r6, lr}
90004e7e:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004e80:	2100      	movs	r1, #0
{
90004e82:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004e84:	22c0      	movs	r2, #192	@ 0xc0
90004e86:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004e88:	9109      	str	r1, [sp, #36]	@ 0x24
90004e8a:	e9cd 1105 	strd	r1, r1, [sp, #20]
90004e8e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004e92:	f025 ff83 	bl	9002ad9c <memset>
  if(hltdc->Instance==LTDC)
90004e96:	4b4a      	ldr	r3, [pc, #296]	@ (90004fc0 <HAL_LTDC_MspInit+0x144>)
90004e98:	6822      	ldr	r2, [r4, #0]
90004e9a:	429a      	cmp	r2, r3
90004e9c:	d001      	beq.n	90004ea2 <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
90004e9e:	b03a      	add	sp, #232	@ 0xe8
90004ea0:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004ea2:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004ea4:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004ea6:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90004eaa:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004eac:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004eae:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004eb0:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004eb2:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004eb4:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004eb6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004eba:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004ebc:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004ebe:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004ec2:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004ec6:	f007 fadb 	bl	9000c480 <HAL_RCCEx_PeriphCLKConfig>
90004eca:	2800      	cmp	r0, #0
90004ecc:	d174      	bne.n	90004fb8 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90004ece:	4b3d      	ldr	r3, [pc, #244]	@ (90004fc4 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004ed0:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004ed2:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004ed4:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
90004ed6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004eda:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004edc:	483a      	ldr	r0, [pc, #232]	@ (90004fc8 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90004ede:	f042 0208 	orr.w	r2, r2, #8
90004ee2:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90004ee6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90004eea:	f002 0208 	and.w	r2, r2, #8
90004eee:	9200      	str	r2, [sp, #0]
90004ef0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90004ef2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004ef6:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90004efa:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004efe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f02:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90004f06:	9201      	str	r2, [sp, #4]
90004f08:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90004f0a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f0e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004f12:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004f16:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f1a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90004f1e:	9202      	str	r2, [sp, #8]
90004f20:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90004f22:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f26:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004f2a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004f2e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f32:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004f36:	9203      	str	r2, [sp, #12]
90004f38:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004f3a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004f3e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90004f42:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004f46:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004f4a:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004f4c:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004f4e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004f52:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004f54:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004f56:	9304      	str	r3, [sp, #16]
90004f58:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004f5a:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004f5e:	f003 f9fb 	bl	90008358 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004f62:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004f66:	a905      	add	r1, sp, #20
90004f68:	4818      	ldr	r0, [pc, #96]	@ (90004fcc <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004f6a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004f6c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004f70:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004f74:	f003 f9f0 	bl	90008358 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004f78:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004f7c:	a905      	add	r1, sp, #20
90004f7e:	4814      	ldr	r0, [pc, #80]	@ (90004fd0 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004f80:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004f82:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004f86:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004f8a:	f003 f9e5 	bl	90008358 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004f8e:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004f92:	a905      	add	r1, sp, #20
90004f94:	480f      	ldr	r0, [pc, #60]	@ (90004fd4 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004f96:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004f98:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004f9c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004fa0:	f003 f9da 	bl	90008358 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004fa4:	462a      	mov	r2, r5
90004fa6:	2105      	movs	r1, #5
90004fa8:	2058      	movs	r0, #88	@ 0x58
90004faa:	f002 ff75 	bl	90007e98 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90004fae:	2058      	movs	r0, #88	@ 0x58
90004fb0:	f002 ffae 	bl	90007f10 <HAL_NVIC_EnableIRQ>
}
90004fb4:	b03a      	add	sp, #232	@ 0xe8
90004fb6:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004fb8:	f7ff f88e 	bl	900040d8 <Error_Handler>
90004fbc:	e787      	b.n	90004ece <HAL_LTDC_MspInit+0x52>
90004fbe:	bf00      	nop
90004fc0:	50001000 	.word	0x50001000
90004fc4:	58024400 	.word	0x58024400
90004fc8:	58022800 	.word	0x58022800
90004fcc:	58022000 	.word	0x58022000
90004fd0:	58022400 	.word	0x58022400
90004fd4:	58021c00 	.word	0x58021c00

90004fd8 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004fd8:	b510      	push	{r4, lr}
90004fda:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004fdc:	2100      	movs	r1, #0
{
90004fde:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004fe0:	22c0      	movs	r2, #192	@ 0xc0
90004fe2:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004fe4:	9106      	str	r1, [sp, #24]
90004fe6:	e9cd 1102 	strd	r1, r1, [sp, #8]
90004fea:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004fee:	f025 fed5 	bl	9002ad9c <memset>
  if(huart->Instance==USART3)
90004ff2:	4b21      	ldr	r3, [pc, #132]	@ (90005078 <HAL_UART_MspInit+0xa0>)
90004ff4:	6822      	ldr	r2, [r4, #0]
90004ff6:	429a      	cmp	r2, r3
90004ff8:	d001      	beq.n	90004ffe <HAL_UART_MspInit+0x26>

    /* USER CODE END USART3_MspInit 1 */

  }

}
90004ffa:	b038      	add	sp, #224	@ 0xe0
90004ffc:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90004ffe:	2202      	movs	r2, #2
90005000:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005002:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90005004:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005008:	f007 fa3a 	bl	9000c480 <HAL_RCCEx_PeriphCLKConfig>
9000500c:	bb40      	cbnz	r0, 90005060 <HAL_UART_MspInit+0x88>
    __HAL_RCC_USART3_CLK_ENABLE();
9000500e:	4b1b      	ldr	r3, [pc, #108]	@ (9000507c <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
90005010:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90005012:	a902      	add	r1, sp, #8
90005014:	481a      	ldr	r0, [pc, #104]	@ (90005080 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART3_CLK_ENABLE();
90005016:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
9000501a:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000501e:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90005022:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90005026:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
9000502a:	9200      	str	r2, [sp, #0]
9000502c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
9000502e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90005032:	f042 0204 	orr.w	r2, r2, #4
90005036:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000503a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
9000503e:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
90005040:	f003 0304 	and.w	r3, r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
90005044:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 90005068 <HAL_UART_MspInit+0x90>
    __HAL_RCC_GPIOC_CLK_ENABLE();
90005048:	9301      	str	r3, [sp, #4]
9000504a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
9000504c:	ed8d 7b02 	vstr	d7, [sp, #8]
90005050:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 90005070 <HAL_UART_MspInit+0x98>
90005054:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90005058:	f003 f97e 	bl	90008358 <HAL_GPIO_Init>
}
9000505c:	b038      	add	sp, #224	@ 0xe0
9000505e:	bd10      	pop	{r4, pc}
      Error_Handler();
90005060:	f7ff f83a 	bl	900040d8 <Error_Handler>
90005064:	e7d3      	b.n	9000500e <HAL_UART_MspInit+0x36>
90005066:	bf00      	nop
90005068:	00000c00 	.word	0x00000c00
9000506c:	00000002 	.word	0x00000002
	...
90005078:	40004800 	.word	0x40004800
9000507c:	58024400 	.word	0x58024400
90005080:	58020800 	.word	0x58020800

90005084 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90005084:	4836      	ldr	r0, [pc, #216]	@ (90005160 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90005086:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90005088:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000508a:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000508c:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000508e:	e9cd 3302 	strd	r3, r3, [sp, #8]
90005092:	e9cd 3304 	strd	r3, r3, [sp, #16]
90005096:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90005098:	b109      	cbz	r1, 9000509e <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000509a:	b038      	add	sp, #224	@ 0xe0
9000509c:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000509e:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900050a0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900050a2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900050a4:	a80a      	add	r0, sp, #40	@ 0x28
900050a6:	f025 fe79 	bl	9002ad9c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900050aa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900050ae:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900050b0:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900050b2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900050b6:	f007 f9e3 	bl	9000c480 <HAL_RCCEx_PeriphCLKConfig>
900050ba:	2800      	cmp	r0, #0
900050bc:	d14c      	bne.n	90005158 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900050be:	4b29      	ldr	r3, [pc, #164]	@ (90005164 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900050c0:	f64f 7083 	movw	r0, #65411	@ 0xff83
900050c4:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900050c6:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900050c8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900050cc:	2600      	movs	r6, #0
900050ce:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900050d0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900050d4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900050d8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900050dc:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900050de:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900050e2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900050e6:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900050e8:	a902      	add	r1, sp, #8
900050ea:	481f      	ldr	r0, [pc, #124]	@ (90005168 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900050ec:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900050ee:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900050f2:	f003 f931 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900050f6:	f248 1233 	movw	r2, #33075	@ 0x8133
900050fa:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900050fc:	a902      	add	r1, sp, #8
900050fe:	481b      	ldr	r0, [pc, #108]	@ (9000516c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005100:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90005102:	e9cd 2302 	strd	r2, r3, [sp, #8]
90005106:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000510a:	f003 f925 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000510e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90005112:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005114:	a902      	add	r1, sp, #8
90005116:	4816      	ldr	r0, [pc, #88]	@ (90005170 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005118:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000511a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000511e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005122:	f003 f919 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90005126:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000512a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000512c:	a902      	add	r1, sp, #8
9000512e:	4811      	ldr	r0, [pc, #68]	@ (90005174 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005130:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90005132:	e9cd 2302 	strd	r2, r3, [sp, #8]
90005136:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000513a:	f003 f90d 	bl	90008358 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000513e:	22e0      	movs	r2, #224	@ 0xe0
90005140:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90005142:	a902      	add	r1, sp, #8
90005144:	480c      	ldr	r0, [pc, #48]	@ (90005178 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005146:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90005148:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000514c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90005150:	f003 f902 	bl	90008358 <HAL_GPIO_Init>
}
90005154:	b038      	add	sp, #224	@ 0xe0
90005156:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90005158:	f7fe ffbe 	bl	900040d8 <Error_Handler>
9000515c:	e7af      	b.n	900050be <HAL_SDRAM_MspInit+0x3a>
9000515e:	bf00      	nop
90005160:	24007bec 	.word	0x24007bec
90005164:	58024400 	.word	0x58024400
90005168:	58021000 	.word	0x58021000
9000516c:	58021800 	.word	0x58021800
90005170:	58020c00 	.word	0x58020c00
90005174:	58021400 	.word	0x58021400
90005178:	58021c00 	.word	0x58021c00

9000517c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
9000517c:	4b13      	ldr	r3, [pc, #76]	@ (900051cc <HAL_SDRAM_MspDeInit+0x50>)
9000517e:	681a      	ldr	r2, [r3, #0]
90005180:	b102      	cbz	r2, 90005184 <HAL_SDRAM_MspDeInit+0x8>
90005182:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90005184:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90005186:	4a12      	ldr	r2, [pc, #72]	@ (900051d0 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90005188:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000518a:	f64f 7183 	movw	r1, #65411	@ 0xff83
9000518e:	4811      	ldr	r0, [pc, #68]	@ (900051d4 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90005190:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90005192:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90005196:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000519a:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000519e:	f003 fae1 	bl	90008764 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900051a2:	f248 1133 	movw	r1, #33075	@ 0x8133
900051a6:	480c      	ldr	r0, [pc, #48]	@ (900051d8 <HAL_SDRAM_MspDeInit+0x5c>)
900051a8:	f003 fadc 	bl	90008764 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900051ac:	f24c 7103 	movw	r1, #50947	@ 0xc703
900051b0:	480a      	ldr	r0, [pc, #40]	@ (900051dc <HAL_SDRAM_MspDeInit+0x60>)
900051b2:	f003 fad7 	bl	90008764 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900051b6:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900051ba:	4809      	ldr	r0, [pc, #36]	@ (900051e0 <HAL_SDRAM_MspDeInit+0x64>)
900051bc:	f003 fad2 	bl	90008764 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900051c0:	21e0      	movs	r1, #224	@ 0xe0
900051c2:	4808      	ldr	r0, [pc, #32]	@ (900051e4 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900051c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900051c8:	f003 bacc 	b.w	90008764 <HAL_GPIO_DeInit>
900051cc:	24007be8 	.word	0x24007be8
900051d0:	58024400 	.word	0x58024400
900051d4:	58021000 	.word	0x58021000
900051d8:	58021800 	.word	0x58021800
900051dc:	58020c00 	.word	0x58020c00
900051e0:	58021400 	.word	0x58021400
900051e4:	58021c00 	.word	0x58021c00

900051e8 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900051e8:	280f      	cmp	r0, #15
900051ea:	d901      	bls.n	900051f0 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900051ec:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900051ee:	4770      	bx	lr
{
900051f0:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900051f2:	4601      	mov	r1, r0
{
900051f4:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900051f6:	2200      	movs	r2, #0
900051f8:	4604      	mov	r4, r0
900051fa:	2036      	movs	r0, #54	@ 0x36
900051fc:	f002 fe4c 	bl	90007e98 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90005200:	2036      	movs	r0, #54	@ 0x36
90005202:	f002 fe85 	bl	90007f10 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90005206:	4b1b      	ldr	r3, [pc, #108]	@ (90005274 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90005208:	4a1b      	ldr	r2, [pc, #108]	@ (90005278 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000520a:	4669      	mov	r1, sp
9000520c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000520e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90005210:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90005214:	f042 0210 	orr.w	r2, r2, #16
90005218:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000521c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90005220:	f003 0310 	and.w	r3, r3, #16
90005224:	9301      	str	r3, [sp, #4]
90005226:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90005228:	f007 f81e 	bl	9000c268 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000522c:	9b07      	ldr	r3, [sp, #28]
9000522e:	b9c3      	cbnz	r3, 90005262 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90005230:	f006 ff8a 	bl	9000c148 <HAL_RCC_GetPCLK1Freq>
90005234:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005236:	4911      	ldr	r1, [pc, #68]	@ (9000527c <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90005238:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000523a:	4c11      	ldr	r4, [pc, #68]	@ (90005280 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000523c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90005240:	4d10      	ldr	r5, [pc, #64]	@ (90005284 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005242:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90005246:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005248:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000524a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000524c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000524e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005250:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90005254:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90005256:	f008 fa0f 	bl	9000d678 <HAL_TIM_Base_Init>
9000525a:	b130      	cbz	r0, 9000526a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000525c:	2001      	movs	r0, #1
}
9000525e:	b00b      	add	sp, #44	@ 0x2c
90005260:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90005262:	f006 ff71 	bl	9000c148 <HAL_RCC_GetPCLK1Freq>
90005266:	0043      	lsls	r3, r0, #1
90005268:	e7e5      	b.n	90005236 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000526a:	4620      	mov	r0, r4
9000526c:	f008 faaa 	bl	9000d7c4 <HAL_TIM_Base_Start_IT>
90005270:	e7f5      	b.n	9000525e <HAL_InitTick+0x76>
90005272:	bf00      	nop
90005274:	58024400 	.word	0x58024400
90005278:	24000080 	.word	0x24000080
9000527c:	431bde83 	.word	0x431bde83
90005280:	24007bf0 	.word	0x24007bf0
90005284:	40001000 	.word	0x40001000

90005288 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90005288:	4770      	bx	lr
9000528a:	bf00      	nop

9000528c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000528c:	e7fe      	b.n	9000528c <HardFault_Handler>
9000528e:	bf00      	nop

90005290 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90005290:	e7fe      	b.n	90005290 <MemManage_Handler>
90005292:	bf00      	nop

90005294 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90005294:	e7fe      	b.n	90005294 <BusFault_Handler>
90005296:	bf00      	nop

90005298 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90005298:	e7fe      	b.n	90005298 <UsageFault_Handler>
9000529a:	bf00      	nop

9000529c <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
9000529c:	4770      	bx	lr
9000529e:	bf00      	nop

900052a0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900052a0:	4801      	ldr	r0, [pc, #4]	@ (900052a8 <TIM6_DAC_IRQHandler+0x8>)
900052a2:	f008 bae9 	b.w	9000d878 <HAL_TIM_IRQHandler>
900052a6:	bf00      	nop
900052a8:	24007bf0 	.word	0x24007bf0

900052ac <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900052ac:	4801      	ldr	r0, [pc, #4]	@ (900052b4 <LTDC_IRQHandler+0x8>)
900052ae:	f005 be47 	b.w	9000af40 <HAL_LTDC_IRQHandler>
900052b2:	bf00      	nop
900052b4:	2400792c 	.word	0x2400792c

900052b8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900052b8:	4801      	ldr	r0, [pc, #4]	@ (900052c0 <DMA2D_IRQHandler+0x8>)
900052ba:	f002 bf4f 	b.w	9000815c <HAL_DMA2D_IRQHandler>
900052be:	bf00      	nop
900052c0:	24007b58 	.word	0x24007b58

900052c4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900052c4:	4801      	ldr	r0, [pc, #4]	@ (900052cc <JPEG_IRQHandler+0x8>)
900052c6:	f005 bd3f 	b.w	9000ad48 <HAL_JPEG_IRQHandler>
900052ca:	bf00      	nop
900052cc:	24007aac 	.word	0x24007aac

900052d0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900052d0:	4804      	ldr	r0, [pc, #16]	@ (900052e4 <MDMA_IRQHandler+0x14>)
{
900052d2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900052d4:	f006 f8fe 	bl	9000b4d4 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900052d8:	4803      	ldr	r0, [pc, #12]	@ (900052e8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900052da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900052de:	f006 b8f9 	b.w	9000b4d4 <HAL_MDMA_IRQHandler>
900052e2:	bf00      	nop
900052e4:	240079d4 	.word	0x240079d4
900052e8:	24007a40 	.word	0x24007a40

900052ec <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900052ec:	2001      	movs	r0, #1
900052ee:	4770      	bx	lr

900052f0 <_kill>:

int _kill(int pid, int sig)
{
900052f0:	b508      	push	{r3, lr}
	errno = EINVAL;
900052f2:	f025 fe07 	bl	9002af04 <__errno>
900052f6:	2216      	movs	r2, #22
900052f8:	4603      	mov	r3, r0
	return -1;
}
900052fa:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900052fe:	601a      	str	r2, [r3, #0]
}
90005300:	bd08      	pop	{r3, pc}
90005302:	bf00      	nop

90005304 <_exit>:

void _exit (int status)
{
90005304:	b508      	push	{r3, lr}
	errno = EINVAL;
90005306:	f025 fdfd 	bl	9002af04 <__errno>
9000530a:	2316      	movs	r3, #22
9000530c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000530e:	e7fe      	b.n	9000530e <_exit+0xa>

90005310 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90005310:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005312:	1e16      	subs	r6, r2, #0
90005314:	dd07      	ble.n	90005326 <_read+0x16>
90005316:	460c      	mov	r4, r1
90005318:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000531a:	f3af 8000 	nop.w
9000531e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005322:	42a5      	cmp	r5, r4
90005324:	d1f9      	bne.n	9000531a <_read+0xa>
	}

return len;
}
90005326:	4630      	mov	r0, r6
90005328:	bd70      	pop	{r4, r5, r6, pc}
9000532a:	bf00      	nop

9000532c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000532c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000532e:	1e16      	subs	r6, r2, #0
90005330:	dd07      	ble.n	90005342 <_write+0x16>
90005332:	460c      	mov	r4, r1
90005334:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90005336:	f814 0b01 	ldrb.w	r0, [r4], #1
9000533a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000533e:	42a5      	cmp	r5, r4
90005340:	d1f9      	bne.n	90005336 <_write+0xa>
	}
	return len;
}
90005342:	4630      	mov	r0, r6
90005344:	bd70      	pop	{r4, r5, r6, pc}
90005346:	bf00      	nop

90005348 <_close>:

int _close(int file)
{
	return -1;
}
90005348:	f04f 30ff 	mov.w	r0, #4294967295
9000534c:	4770      	bx	lr
9000534e:	bf00      	nop

90005350 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90005350:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90005354:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90005356:	604b      	str	r3, [r1, #4]
}
90005358:	4770      	bx	lr
9000535a:	bf00      	nop

9000535c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000535c:	2001      	movs	r0, #1
9000535e:	4770      	bx	lr

90005360 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90005360:	2000      	movs	r0, #0
90005362:	4770      	bx	lr

90005364 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90005364:	4a0c      	ldr	r2, [pc, #48]	@ (90005398 <_sbrk+0x34>)
{
90005366:	b508      	push	{r3, lr}
90005368:	4603      	mov	r3, r0
	if (heap_end == 0)
9000536a:	6810      	ldr	r0, [r2, #0]
9000536c:	b128      	cbz	r0, 9000537a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000536e:	4403      	add	r3, r0
90005370:	4669      	mov	r1, sp
90005372:	428b      	cmp	r3, r1
90005374:	d808      	bhi.n	90005388 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90005376:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90005378:	bd08      	pop	{r3, pc}
		heap_end = &end;
9000537a:	4908      	ldr	r1, [pc, #32]	@ (9000539c <_sbrk+0x38>)
9000537c:	4608      	mov	r0, r1
9000537e:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
90005380:	4669      	mov	r1, sp
90005382:	4403      	add	r3, r0
90005384:	428b      	cmp	r3, r1
90005386:	d9f6      	bls.n	90005376 <_sbrk+0x12>
		errno = ENOMEM;
90005388:	f025 fdbc 	bl	9002af04 <__errno>
9000538c:	220c      	movs	r2, #12
9000538e:	4603      	mov	r3, r0
		return (caddr_t) -1;
90005390:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90005394:	601a      	str	r2, [r3, #0]
}
90005396:	bd08      	pop	{r3, pc}
90005398:	24007c3c 	.word	0x24007c3c
9000539c:	24022aa8 	.word	0x24022aa8

900053a0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdana_20_4bpp
    static const touchgfx::FontId TEXTAREAS = 4;     // Siemens_TIA_Portal_basic_bold_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900053a0:	4770      	bx	lr
900053a2:	bf00      	nop

900053a4 <_ZN23ApplicationFontProviderD0Ev>:
900053a4:	b510      	push	{r4, lr}
900053a6:	4604      	mov	r4, r0
900053a8:	2104      	movs	r1, #4
900053aa:	f024 fecb 	bl	9002a144 <_ZdlPvj>
900053ae:	4620      	mov	r0, r4
900053b0:	bd10      	pop	{r4, pc}
900053b2:	bf00      	nop

900053b4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
900053b4:	b508      	push	{r3, lr}
    switch (typography)
900053b6:	2904      	cmp	r1, #4
900053b8:	d818      	bhi.n	900053ec <_ZN23ApplicationFontProvider7getFontEt+0x38>
900053ba:	e8df f001 	tbb	[pc, r1]
900053be:	1307      	.short	0x1307
900053c0:	0f0b      	.short	0x0f0b
900053c2:	03          	.byte	0x03
900053c3:	00          	.byte	0x00
    case Typography::TYPOGRAPHY_00:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    case Typography::TEXTAREAS:
        // Siemens_TIA_Portal_basic_bold_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
900053c4:	f001 fa58 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
900053c8:	6900      	ldr	r0, [r0, #16]
    default:
        return 0;
    }
}
900053ca:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900053cc:	f001 fa54 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
900053d0:	6800      	ldr	r0, [r0, #0]
}
900053d2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900053d4:	f001 fa50 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
900053d8:	6880      	ldr	r0, [r0, #8]
}
900053da:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
900053dc:	f001 fa4c 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
900053e0:	68c0      	ldr	r0, [r0, #12]
}
900053e2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900053e4:	f001 fa48 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
900053e8:	6840      	ldr	r0, [r0, #4]
}
900053ea:	bd08      	pop	{r3, pc}
    switch (typography)
900053ec:	2000      	movs	r0, #0
}
900053ee:	bd08      	pop	{r3, pc}

900053f0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900053f0:	4800      	ldr	r0, [pc, #0]	@ (900053f4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900053f2:	4770      	bx	lr
900053f4:	9002da70 	.word	0x9002da70

900053f8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900053f8:	2004      	movs	r0, #4
900053fa:	4770      	bx	lr

900053fc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900053fc:	b169      	cbz	r1, 9000541a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900053fe:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90005400:	b530      	push	{r4, r5, lr}
90005402:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90005404:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90005406:	6895      	ldr	r5, [r2, #8]
90005408:	f10d 0303 	add.w	r3, sp, #3
9000540c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000540e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90005410:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90005414:	47a8      	blx	r5
        return glyph;
    }
90005416:	b003      	add	sp, #12
90005418:	bd30      	pop	{r4, r5, pc}
            return 0;
9000541a:	4608      	mov	r0, r1
    }
9000541c:	4770      	bx	lr
9000541e:	bf00      	nop

90005420 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90005420:	89c0      	ldrh	r0, [r0, #14]
90005422:	4770      	bx	lr

90005424 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90005424:	8a00      	ldrh	r0, [r0, #16]
90005426:	4770      	bx	lr

90005428 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90005428:	88c0      	ldrh	r0, [r0, #6]
9000542a:	4770      	bx	lr

9000542c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000542c:	8880      	ldrh	r0, [r0, #4]
9000542e:	4770      	bx	lr

90005430 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90005430:	7a80      	ldrb	r0, [r0, #10]
    }
90005432:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90005436:	4770      	bx	lr

90005438 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90005438:	7a80      	ldrb	r0, [r0, #10]
    }
9000543a:	09c0      	lsrs	r0, r0, #7
9000543c:	4770      	bx	lr
9000543e:	bf00      	nop

90005440 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90005440:	2000      	movs	r0, #0
90005442:	4770      	bx	lr

90005444 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90005444:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 9000544c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90005448:	4770      	bx	lr
9000544a:	bf00      	nop
9000544c:	00000000 	.word	0x00000000

90005450 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90005450:	4770      	bx	lr
90005452:	bf00      	nop

90005454 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90005454:	4770      	bx	lr
90005456:	bf00      	nop

90005458 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005458:	4770      	bx	lr
9000545a:	bf00      	nop

9000545c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000545c:	4770      	bx	lr
9000545e:	bf00      	nop

90005460 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90005460:	4770      	bx	lr
90005462:	bf00      	nop

90005464 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90005464:	b530      	push	{r4, r5, lr}
90005466:	b085      	sub	sp, #20
90005468:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000546a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
9000546c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000546e:	466d      	mov	r5, sp
90005470:	4601      	mov	r1, r0
        rect.width = width;
90005472:	8102      	strh	r2, [r0, #8]
90005474:	343c      	adds	r4, #60	@ 0x3c
90005476:	4628      	mov	r0, r5
90005478:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000547c:	4798      	blx	r3
9000547e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005482:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005486:	b005      	add	sp, #20
90005488:	bd30      	pop	{r4, r5, pc}
9000548a:	bf00      	nop

9000548c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
9000548c:	b530      	push	{r4, r5, lr}
9000548e:	b085      	sub	sp, #20
90005490:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90005492:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005494:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005496:	466d      	mov	r5, sp
90005498:	4601      	mov	r1, r0
        rect.height = height;
9000549a:	8142      	strh	r2, [r0, #10]
9000549c:	343c      	adds	r4, #60	@ 0x3c
9000549e:	4628      	mov	r0, r5
900054a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900054a4:	4798      	blx	r3
900054a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900054aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900054ae:	b005      	add	sp, #20
900054b0:	bd30      	pop	{r4, r5, pc}
900054b2:	bf00      	nop

900054b4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900054b4:	2200      	movs	r2, #0
900054b6:	6002      	str	r2, [r0, #0]
900054b8:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900054ba:	4770      	bx	lr

900054bc <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900054bc:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
900054c0:	4770      	bx	lr
900054c2:	bf00      	nop

900054c4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900054c4:	2000      	movs	r0, #0
900054c6:	4770      	bx	lr

900054c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900054c8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900054cc:	b112      	cbz	r2, 900054d4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900054ce:	6803      	ldr	r3, [r0, #0]
900054d0:	695b      	ldr	r3, [r3, #20]
900054d2:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900054d4:	4770      	bx	lr
900054d6:	bf00      	nop

900054d8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900054d8:	2200      	movs	r2, #0
900054da:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900054de:	6082      	str	r2, [r0, #8]
900054e0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900054e4:	4770      	bx	lr
900054e6:	bf00      	nop

900054e8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900054e8:	6c80      	ldr	r0, [r0, #72]	@ 0x48
900054ea:	4770      	bx	lr

900054ec <_ZN18DataScreenViewBase9Update_HREv>:
     * Custom Actions
     */
    virtual void Update_HR()
    {
        // Override and implement this function in Screen1
    }
900054ec:	4770      	bx	lr
900054ee:	bf00      	nop

900054f0 <_ZN18DataScreenViewBase11Update_SpO2Ev>:
    
    virtual void Update_SpO2()
    {
        // Override and implement this function in Screen1
    }
900054f0:	4770      	bx	lr
900054f2:	bf00      	nop

900054f4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900054f4:	4770      	bx	lr
900054f6:	bf00      	nop

900054f8 <_ZN18DataScreenViewBaseD1Ev>:
}

DataScreenViewBase::~DataScreenViewBase()
{

}
900054f8:	4770      	bx	lr
900054fa:	bf00      	nop

900054fc <_ZN18DataScreenViewBase11setupScreenEv>:

void DataScreenViewBase::setupScreen()
{

}
900054fc:	4770      	bx	lr
900054fe:	bf00      	nop

90005500 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90005500:	b510      	push	{r4, lr}
90005502:	4604      	mov	r4, r0
    }
90005504:	2108      	movs	r1, #8
90005506:	f024 fe1d 	bl	9002a144 <_ZdlPvj>
9000550a:	4620      	mov	r0, r4
9000550c:	bd10      	pop	{r4, pc}
9000550e:	bf00      	nop

90005510 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90005510:	b510      	push	{r4, lr}
90005512:	4604      	mov	r4, r0
90005514:	214c      	movs	r1, #76	@ 0x4c
90005516:	f024 fe15 	bl	9002a144 <_ZdlPvj>
9000551a:	4620      	mov	r0, r4
9000551c:	bd10      	pop	{r4, pc}
9000551e:	bf00      	nop

90005520 <_ZN18DataScreenViewBaseD0Ev>:
DataScreenViewBase::~DataScreenViewBase()
90005520:	b510      	push	{r4, lr}
90005522:	4604      	mov	r4, r0
}
90005524:	f44f 7121 	mov.w	r1, #644	@ 0x284
90005528:	f024 fe0c 	bl	9002a144 <_ZdlPvj>
9000552c:	4620      	mov	r0, r4
9000552e:	bd10      	pop	{r4, pc}

90005530 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005530:	4b1b      	ldr	r3, [pc, #108]	@ (900055a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005532:	6802      	ldr	r2, [r0, #0]
90005534:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90005536:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005538:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000553a:	b323      	cbz	r3, 90005586 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
9000553c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000553e:	4919      	ldr	r1, [pc, #100]	@ (900055a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90005540:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90005542:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005544:	8809      	ldrh	r1, [r1, #0]
90005546:	4291      	cmp	r1, r2
90005548:	d923      	bls.n	90005592 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000554a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000554e:	4b16      	ldr	r3, [pc, #88]	@ (900055a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90005550:	681b      	ldr	r3, [r3, #0]
90005552:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005556:	4a15      	ldr	r2, [pc, #84]	@ (900055ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90005558:	6803      	ldr	r3, [r0, #0]
9000555a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000555c:	4293      	cmp	r3, r2
9000555e:	d107      	bne.n	90005570 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90005560:	88c0      	ldrh	r0, [r0, #6]
90005562:	4b13      	ldr	r3, [pc, #76]	@ (900055b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005564:	1a31      	subs	r1, r6, r0
90005566:	429d      	cmp	r5, r3
90005568:	b209      	sxth	r1, r1
9000556a:	d107      	bne.n	9000557c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
9000556c:	80e1      	strh	r1, [r4, #6]
    }
9000556e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005570:	4798      	blx	r3
90005572:	4b0f      	ldr	r3, [pc, #60]	@ (900055b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005574:	1a31      	subs	r1, r6, r0
90005576:	429d      	cmp	r5, r3
90005578:	b209      	sxth	r1, r1
9000557a:	d0f7      	beq.n	9000556c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
9000557c:	4620      	mov	r0, r4
9000557e:	462b      	mov	r3, r5
    }
90005580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005584:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005586:	4b0b      	ldr	r3, [pc, #44]	@ (900055b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90005588:	216c      	movs	r1, #108	@ 0x6c
9000558a:	4a0b      	ldr	r2, [pc, #44]	@ (900055b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
9000558c:	480b      	ldr	r0, [pc, #44]	@ (900055bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000558e:	f025 f94f 	bl	9002a830 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005592:	4b0b      	ldr	r3, [pc, #44]	@ (900055c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90005594:	216d      	movs	r1, #109	@ 0x6d
90005596:	4a08      	ldr	r2, [pc, #32]	@ (900055b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005598:	4808      	ldr	r0, [pc, #32]	@ (900055bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000559a:	f025 f949 	bl	9002a830 <__assert_func>
9000559e:	bf00      	nop
900055a0:	24021dbc 	.word	0x24021dbc
900055a4:	24021dc0 	.word	0x24021dc0
900055a8:	24021dc4 	.word	0x24021dc4
900055ac:	90005429 	.word	0x90005429
900055b0:	90002e79 	.word	0x90002e79
900055b4:	9002ce7c 	.word	0x9002ce7c
900055b8:	9002cec0 	.word	0x9002cec0
900055bc:	9002cefc 	.word	0x9002cefc
900055c0:	9002cf44 	.word	0x9002cf44

900055c4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
900055c4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900055c6:	b570      	push	{r4, r5, r6, lr}
900055c8:	4614      	mov	r4, r2
900055ca:	4e23      	ldr	r6, [pc, #140]	@ (90005658 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
900055cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900055ce:	4605      	mov	r5, r0
900055d0:	42b2      	cmp	r2, r6
900055d2:	d122      	bne.n	9000561a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
900055d4:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
900055d6:	80a9      	strh	r1, [r5, #4]
900055d8:	4920      	ldr	r1, [pc, #128]	@ (9000565c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900055da:	428a      	cmp	r2, r1
900055dc:	d123      	bne.n	90005626 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900055de:	4a20      	ldr	r2, [pc, #128]	@ (90005660 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900055e0:	b2a4      	uxth	r4, r4
900055e2:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900055e4:	6813      	ldr	r3, [r2, #0]
900055e6:	2b00      	cmp	r3, #0
900055e8:	d02f      	beq.n	9000564a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
900055ea:	491e      	ldr	r1, [pc, #120]	@ (90005664 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900055ec:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900055ee:	8809      	ldrh	r1, [r1, #0]
900055f0:	4291      	cmp	r1, r2
900055f2:	d924      	bls.n	9000563e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
900055f4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900055f8:	4b1b      	ldr	r3, [pc, #108]	@ (90005668 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900055fa:	681b      	ldr	r3, [r3, #0]
900055fc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005600:	4a1a      	ldr	r2, [pc, #104]	@ (9000566c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90005602:	6803      	ldr	r3, [r0, #0]
90005604:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005606:	4293      	cmp	r3, r2
90005608:	d117      	bne.n	9000563a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
9000560a:	88c0      	ldrh	r0, [r0, #6]
9000560c:	4b18      	ldr	r3, [pc, #96]	@ (90005670 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
9000560e:	1a24      	subs	r4, r4, r0
90005610:	429e      	cmp	r6, r3
90005612:	b221      	sxth	r1, r4
90005614:	d10c      	bne.n	90005630 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90005616:	80e9      	strh	r1, [r5, #6]
    }
90005618:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
9000561a:	4790      	blx	r2
        setBaselineY(baselineY);
9000561c:	682b      	ldr	r3, [r5, #0]
9000561e:	490f      	ldr	r1, [pc, #60]	@ (9000565c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005620:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90005622:	428a      	cmp	r2, r1
90005624:	d0db      	beq.n	900055de <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90005626:	4621      	mov	r1, r4
90005628:	4628      	mov	r0, r5
    }
9000562a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
9000562e:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005630:	4628      	mov	r0, r5
90005632:	4633      	mov	r3, r6
    }
90005634:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005638:	4718      	bx	r3
9000563a:	4798      	blx	r3
9000563c:	e7e6      	b.n	9000560c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000563e:	4b0d      	ldr	r3, [pc, #52]	@ (90005674 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005640:	216d      	movs	r1, #109	@ 0x6d
90005642:	4a0d      	ldr	r2, [pc, #52]	@ (90005678 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005644:	480d      	ldr	r0, [pc, #52]	@ (9000567c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005646:	f025 f8f3 	bl	9002a830 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000564a:	4b0d      	ldr	r3, [pc, #52]	@ (90005680 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000564c:	216c      	movs	r1, #108	@ 0x6c
9000564e:	4a0a      	ldr	r2, [pc, #40]	@ (90005678 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005650:	480a      	ldr	r0, [pc, #40]	@ (9000567c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005652:	f025 f8ed 	bl	9002a830 <__assert_func>
90005656:	bf00      	nop
90005658:	90002e75 	.word	0x90002e75
9000565c:	90005531 	.word	0x90005531
90005660:	24021dbc 	.word	0x24021dbc
90005664:	24021dc0 	.word	0x24021dc0
90005668:	24021dc4 	.word	0x24021dc4
9000566c:	90005429 	.word	0x90005429
90005670:	90002e79 	.word	0x90002e79
90005674:	9002cf44 	.word	0x9002cf44
90005678:	9002cec0 	.word	0x9002cec0
9000567c:	9002cefc 	.word	0x9002cefc
90005680:	9002ce7c 	.word	0x9002ce7c

90005684 <_ZN18DataScreenViewBaseC1Ev>:
DataScreenViewBase::DataScreenViewBase()
90005684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005688:	b089      	sub	sp, #36	@ 0x24
9000568a:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
9000568c:	f013 ff40 	bl	90019510 <_ZN8touchgfx6ScreenC1Ev>
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90005690:	4be7      	ldr	r3, [pc, #924]	@ (90005a30 <_ZN18DataScreenViewBaseC1Ev+0x3ac>)
90005692:	4ae8      	ldr	r2, [pc, #928]	@ (90005a34 <_ZN18DataScreenViewBaseC1Ev+0x3b0>)
90005694:	2500      	movs	r5, #0
90005696:	f04f 37ff 	mov.w	r7, #4294967295
          touchable(false),
9000569a:	f44f 7980 	mov.w	r9, #256	@ 0x100
        : typedTextId(id)
9000569e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900056a2:	f04f 0bff 	mov.w	fp, #255	@ 0xff
900056a6:	f8df 83cc 	ldr.w	r8, [pc, #972]	@ 90005a74 <_ZN18DataScreenViewBaseC1Ev+0x3f0>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
900056aa:	f104 0ae0 	add.w	sl, r4, #224	@ 0xe0
900056ae:	6022      	str	r2, [r4, #0]
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
900056b0:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
900056b2:	4ae1      	ldr	r2, [pc, #900]	@ (90005a38 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
        Image::setBitmap(bmp);
900056b4:	4650      	mov	r0, sl
900056b6:	6423      	str	r3, [r4, #64]	@ 0x40
900056b8:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900056ba:	4be0      	ldr	r3, [pc, #896]	@ (90005a3c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
900056bc:	f8a4 9064 	strh.w	r9, [r4, #100]	@ 0x64
900056c0:	f884 b066 	strb.w	fp, [r4, #102]	@ 0x66
900056c4:	f8a4 9090 	strh.w	r9, [r4, #144]	@ 0x90
900056c8:	f884 b092 	strb.w	fp, [r4, #146]	@ 0x92
900056cc:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900056ce:	66a5      	str	r5, [r4, #104]	@ 0x68
900056d0:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        : x(0), y(0), width(0), height(0)
900056d4:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900056d8:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900056dc:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900056e0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900056e4:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900056e8:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900056ec:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
900056f0:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
900056f4:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900056f8:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900056fc:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
90005700:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
          touchable(false),
90005704:	f8a4 90bc 	strh.w	r9, [r4, #188]	@ 0xbc
90005708:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
9000570c:	f8c4 b0ce 	str.w	fp, [r4, #206]	@ 0xce
90005710:	f8a4 9104 	strh.w	r9, [r4, #260]	@ 0x104
90005714:	f8a4 60c4 	strh.w	r6, [r4, #196]	@ 0xc4
        : Widget(), bitmap(bmp), alpha(255)
90005718:	f8a4 6106 	strh.w	r6, [r4, #262]	@ 0x106
9000571c:	f884 6108 	strb.w	r6, [r4, #264]	@ 0x108
90005720:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : color(col)
90005724:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
90005728:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000572c:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
              text(0)
90005730:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
90005734:	f8c4 70d8 	str.w	r7, [r4, #216]	@ 0xd8
90005738:	f8c4 80c0 	str.w	r8, [r4, #192]	@ 0xc0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
9000573c:	f8ad 7018 	strh.w	r7, [sp, #24]
        : x(0), y(0), width(0), height(0)
90005740:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
90005744:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
90005748:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
9000574c:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
        Image::setBitmap(bmp);
90005750:	f00f f9b5 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), bitmap(bmp), alpha(255)
90005754:	4ab8      	ldr	r2, [pc, #736]	@ (90005a38 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
          updateTicksInterval(updateInterval),
90005756:	2301      	movs	r3, #1
        Image::setBitmap(bmp);
90005758:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
9000575a:	f8c4 211c 	str.w	r2, [r4, #284]	@ 0x11c
9000575e:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
90005762:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
          running(false)
90005766:	4ab6      	ldr	r2, [pc, #728]	@ (90005a40 <_ZN18DataScreenViewBaseC1Ev+0x3bc>)
        Image::setBitmap(bmp);
90005768:	4618      	mov	r0, r3
          touchable(false),
9000576a:	f8a4 9140 	strh.w	r9, [r4, #320]	@ 0x140
9000576e:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : Widget(), bitmap(bmp), alpha(255)
90005772:	f8a4 6142 	strh.w	r6, [r4, #322]	@ 0x142
90005776:	f884 5118 	strb.w	r5, [r4, #280]	@ 0x118
9000577a:	f884 7144 	strb.w	r7, [r4, #324]	@ 0x144
9000577e:	f8ad 6018 	strh.w	r6, [sp, #24]
        Image::setBitmap(bmp);
90005782:	9301      	str	r3, [sp, #4]
          startId(BITMAP_INVALID),
90005784:	e9c4 5743 	strd	r5, r7, [r4, #268]	@ 0x10c
90005788:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
9000578c:	e9c4 554a 	strd	r5, r5, [r4, #296]	@ 0x128
          nextSibling(0),
90005790:	e9c4 554c 	strd	r5, r5, [r4, #304]	@ 0x130
          cachedAbsX(0),
90005794:	e9c4 554e 	strd	r5, r5, [r4, #312]	@ 0x138
90005798:	f00f f991 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000579c:	4ba7      	ldr	r3, [pc, #668]	@ (90005a3c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
          touchable(false),
9000579e:	f8a4 916c 	strh.w	r9, [r4, #364]	@ 0x16c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900057a2:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900057a6:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900057aa:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
        : TextAreaWithWildcardBase(), wc1(0)
900057ae:	4ba5      	ldr	r3, [pc, #660]	@ (90005a44 <_ZN18DataScreenViewBaseC1Ev+0x3c0>)
900057b0:	f8a4 6174 	strh.w	r6, [r4, #372]	@ 0x174
900057b4:	f8c4 b17e 	str.w	fp, [r4, #382]	@ 0x17e
900057b8:	f8a4 91b4 	strh.w	r9, [r4, #436]	@ 0x1b4
900057bc:	f8a4 61bc 	strh.w	r6, [r4, #444]	@ 0x1bc
900057c0:	f8c4 8170 	str.w	r8, [r4, #368]	@ 0x170
        : color(col)
900057c4:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
900057c8:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
              text(0)
900057cc:	f8c4 518c 	str.w	r5, [r4, #396]	@ 0x18c
900057d0:	f8c4 81b8 	str.w	r8, [r4, #440]	@ 0x1b8
900057d4:	f8c4 51c0 	str.w	r5, [r4, #448]	@ 0x1c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900057d8:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        : x(0), y(0), width(0), height(0)
900057dc:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
900057e0:	e9c4 5555 	strd	r5, r5, [r4, #340]	@ 0x154
          nextSibling(0),
900057e4:	e9c4 5557 	strd	r5, r5, [r4, #348]	@ 0x15c
          cachedAbsX(0),
900057e8:	e9c4 5559 	strd	r5, r5, [r4, #356]	@ 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900057ec:	e9c4 5761 	strd	r5, r7, [r4, #388]	@ 0x184
        : x(0), y(0), width(0), height(0)
900057f0:	e9c4 5565 	strd	r5, r5, [r4, #404]	@ 0x194
900057f4:	e9c4 5567 	strd	r5, r5, [r4, #412]	@ 0x19c
          nextSibling(0),
900057f8:	e9c4 5569 	strd	r5, r5, [r4, #420]	@ 0x1a4
          cachedAbsX(0),
900057fc:	e9c4 556b 	strd	r5, r5, [r4, #428]	@ 0x1ac
90005800:	f8c4 b1c6 	str.w	fp, [r4, #454]	@ 0x1c6
          touchable(false),
90005804:	f8a4 91fc 	strh.w	r9, [r4, #508]	@ 0x1fc
90005808:	f8a4 9248 	strh.w	r9, [r4, #584]	@ 0x248
9000580c:	f104 0904 	add.w	r9, r4, #4
90005810:	f8a4 6204 	strh.w	r6, [r4, #516]	@ 0x204
90005814:	f8c4 b20e 	str.w	fp, [r4, #526]	@ 0x20e
90005818:	4648      	mov	r0, r9
9000581a:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
              text(0)
9000581e:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
90005822:	f8c4 8200 	str.w	r8, [r4, #512]	@ 0x200
        : color(col)
90005826:	f8c4 5208 	str.w	r5, [r4, #520]	@ 0x208
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000582a:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
9000582e:	f8c4 824c 	str.w	r8, [r4, #588]	@ 0x24c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005832:	e9c4 5773 	strd	r5, r7, [r4, #460]	@ 0x1cc
        : x(0), y(0), width(0), height(0)
90005836:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
9000583a:	e9c4 5579 	strd	r5, r5, [r4, #484]	@ 0x1e4
          nextSibling(0),
9000583e:	e9c4 557b 	strd	r5, r5, [r4, #492]	@ 0x1ec
          cachedAbsX(0),
90005842:	e9c4 557d 	strd	r5, r5, [r4, #500]	@ 0x1f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005846:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
9000584a:	e9c4 5587 	strd	r5, r5, [r4, #540]	@ 0x21c
        : x(0), y(0), width(0), height(0)
9000584e:	e9c4 558a 	strd	r5, r5, [r4, #552]	@ 0x228
90005852:	e9c4 558c 	strd	r5, r5, [r4, #560]	@ 0x230
          nextSibling(0),
90005856:	e9c4 558e 	strd	r5, r5, [r4, #568]	@ 0x238
          cachedAbsX(0),
9000585a:	e9c4 5590 	strd	r5, r5, [r4, #576]	@ 0x240
9000585e:	f8a4 6250 	strh.w	r6, [r4, #592]	@ 0x250
        rect.x = x;
90005862:	4e79      	ldr	r6, [pc, #484]	@ (90005a48 <_ZN18DataScreenViewBaseC1Ev+0x3c4>)
90005864:	f8c4 3224 	str.w	r3, [r4, #548]	@ 0x224
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90005868:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000586c:	f8c4 b25a 	str.w	fp, [r4, #602]	@ 0x25a
    textArea1.setXY(99, 27);
90005870:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
90005874:	64a6      	str	r6, [r4, #72]	@ 0x48
90005876:	66a3      	str	r3, [r4, #104]	@ 0x68
        : color(col)
90005878:	f8c4 5254 	str.w	r5, [r4, #596]	@ 0x254
9000587c:	f8a4 5258 	strh.w	r5, [r4, #600]	@ 0x258
90005880:	6465      	str	r5, [r4, #68]	@ 0x44
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005882:	e9c4 5798 	strd	r5, r7, [r4, #608]	@ 0x260
90005886:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
9000588a:	f00b fc63 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000588e:	4b6f      	ldr	r3, [pc, #444]	@ (90005a4c <_ZN18DataScreenViewBaseC1Ev+0x3c8>)
90005890:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
90005894:	4648      	mov	r0, r9
90005896:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
9000589a:	e9c4 561c 	strd	r5, r6, [r4, #112]	@ 0x70
9000589e:	f00b fc59 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
900058a2:	ae02      	add	r6, sp, #8
900058a4:	4b6a      	ldr	r3, [pc, #424]	@ (90005a50 <_ZN18DataScreenViewBaseC1Ev+0x3cc>)
900058a6:	4659      	mov	r1, fp
900058a8:	4630      	mov	r0, r6
        color = newColor;
900058aa:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
900058ae:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        linespace = space;
900058b2:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
900058b6:	f00e fccb 	bl	90014250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900058ba:	2206      	movs	r2, #6
900058bc:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
900058c0:	f8cd 8018 	str.w	r8, [sp, #24]
900058c4:	f8ad 201c 	strh.w	r2, [sp, #28]
900058c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900058cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NOMS));
900058d0:	4658      	mov	r0, fp
900058d2:	a906      	add	r1, sp, #24
900058d4:	f00e ff64 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900058d8:	4659      	mov	r1, fp
900058da:	4648      	mov	r0, r9
900058dc:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90005a78 <_ZN18DataScreenViewBaseC1Ev+0x3f4>
900058e0:	f00b fc38 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058e4:	f04f 1356 	mov.w	r3, #5636182	@ 0x560056
    animatedImage1.setBitmaps(BITMAP_HEARTLOGO100X100_ID, BITMAP_HEARTLOGO110X110_ID);
900058e8:	2202      	movs	r2, #2
900058ea:	4650      	mov	r0, sl
900058ec:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
900058f0:	2101      	movs	r1, #1
900058f2:	f00e fbb1 	bl	90014058 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(18);
900058f6:	4650      	mov	r0, sl
900058f8:	2112      	movs	r1, #18
900058fa:	f00e fbc0 	bl	9001407e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    animatedImage1.startAnimation(false, true, true);
900058fe:	2301      	movs	r3, #1
90005900:	4650      	mov	r0, sl
90005902:	4629      	mov	r1, r5
90005904:	461a      	mov	r2, r3
90005906:	f00e faff 	bl	90013f08 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
9000590a:	4651      	mov	r1, sl
9000590c:	4648      	mov	r0, r9
9000590e:	f00b fc21 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005912:	4b50      	ldr	r3, [pc, #320]	@ (90005a54 <_ZN18DataScreenViewBaseC1Ev+0x3d0>)
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SP02_ID));
90005914:	f8dd a004 	ldr.w	sl, [sp, #4]
90005918:	a906      	add	r1, sp, #24
9000591a:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
9000591e:	2303      	movs	r3, #3
90005920:	4650      	mov	r0, sl
90005922:	f8ad 3018 	strh.w	r3, [sp, #24]
90005926:	f00f f8ca 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000592a:	4651      	mov	r1, sl
9000592c:	4648      	mov	r0, r9
9000592e:	f00b fc11 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(79, 174);
90005932:	f504 7aa4 	add.w	sl, r4, #328	@ 0x148
90005936:	4b48      	ldr	r3, [pc, #288]	@ (90005a58 <_ZN18DataScreenViewBaseC1Ev+0x3d4>)
90005938:	4630      	mov	r0, r6
9000593a:	4651      	mov	r1, sl
        color = newColor;
9000593c:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
90005940:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        linespace = space;
90005944:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
90005948:	f00e fc82 	bl	90014250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000594c:	2205      	movs	r2, #5
9000594e:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
90005952:	f8cd 8018 	str.w	r8, [sp, #24]
90005956:	f8ad 201c 	strh.w	r2, [sp, #28]
9000595a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000595e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FE3G));
90005962:	4650      	mov	r0, sl
90005964:	a906      	add	r1, sp, #24
90005966:	f00e ff1b 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000596a:	4651      	mov	r1, sl
9000596c:	4648      	mov	r0, r9
    textArea3.setXY(260, 174);
9000596e:	f504 7ac8 	add.w	sl, r4, #400	@ 0x190
90005972:	f00b fbef 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005976:	4b39      	ldr	r3, [pc, #228]	@ (90005a5c <_ZN18DataScreenViewBaseC1Ev+0x3d8>)
90005978:	4651      	mov	r1, sl
9000597a:	4630      	mov	r0, r6
9000597c:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
        color = newColor;
90005980:	f8c4 71c0 	str.w	r7, [r4, #448]	@ 0x1c0
        linespace = space;
90005984:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
90005988:	f00e fc62 	bl	90014250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000598c:	2204      	movs	r2, #4
9000598e:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
90005992:	f8cd 8018 	str.w	r8, [sp, #24]
90005996:	f8ad 201c 	strh.w	r2, [sp, #28]
9000599a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000599e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4PEZ));
900059a2:	4650      	mov	r0, sl
900059a4:	a906      	add	r1, sp, #24
900059a6:	f00e fefb 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900059aa:	4651      	mov	r1, sl
900059ac:	4648      	mov	r0, r9
    textArea4.setXY(107, 204);
900059ae:	f504 7aec 	add.w	sl, r4, #472	@ 0x1d8
900059b2:	f00b fbcf 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
900059b6:	f8d4 31d8 	ldr.w	r3, [r4, #472]	@ 0x1d8
        rect.x = x;
900059ba:	4a29      	ldr	r2, [pc, #164]	@ (90005a60 <_ZN18DataScreenViewBaseC1Ev+0x3dc>)
900059bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
900059c0:	f8c4 7208 	str.w	r7, [r4, #520]	@ 0x208
900059c4:	455b      	cmp	r3, fp
        linespace = space;
900059c6:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
900059ca:	f8c4 21dc 	str.w	r2, [r4, #476]	@ 0x1dc
900059ce:	f040 8097 	bne.w	90005b00 <_ZN18DataScreenViewBaseC1Ev+0x47c>
        boundingArea = calculateBoundingArea();
900059d2:	f8c4 521c 	str.w	r5, [r4, #540]	@ 0x21c
900059d6:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
    Unicode::snprintf(textArea4Buffer, TEXTAREA4_SIZE, "%s", touchgfx::TypedText(T_HR_DATA).getText());
900059da:	f504 731c 	add.w	r3, r4, #624	@ 0x270
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900059de:	4d21      	ldr	r5, [pc, #132]	@ (90005a64 <_ZN18DataScreenViewBaseC1Ev+0x3e0>)
900059e0:	9301      	str	r3, [sp, #4]
900059e2:	682b      	ldr	r3, [r5, #0]
900059e4:	2b00      	cmp	r3, #0
900059e6:	f000 809f 	beq.w	90005b28 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        return typedTextId < numberOfTypedTexts;
900059ea:	4f1f      	ldr	r7, [pc, #124]	@ (90005a68 <_ZN18DataScreenViewBaseC1Ev+0x3e4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900059ec:	883b      	ldrh	r3, [r7, #0]
900059ee:	2b02      	cmp	r3, #2
900059f0:	f240 80a0 	bls.w	90005b34 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
900059f4:	4b1d      	ldr	r3, [pc, #116]	@ (90005a6c <_ZN18DataScreenViewBaseC1Ev+0x3e8>)
900059f6:	2102      	movs	r1, #2
900059f8:	6818      	ldr	r0, [r3, #0]
900059fa:	f000 ff2d 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
900059fe:	4a1c      	ldr	r2, [pc, #112]	@ (90005a70 <_ZN18DataScreenViewBaseC1Ev+0x3ec>)
90005a00:	4603      	mov	r3, r0
90005a02:	2105      	movs	r1, #5
90005a04:	9801      	ldr	r0, [sp, #4]
90005a06:	f015 fa35 	bl	9001ae74 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
90005a0a:	9b01      	ldr	r3, [sp, #4]
    textArea4.resizeToCurrentText();
90005a0c:	4650      	mov	r0, sl
90005a0e:	f8c4 3220 	str.w	r3, [r4, #544]	@ 0x220
90005a12:	f00e fea5 	bl	90014760 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90005a16:	2303      	movs	r3, #3
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MADA));
90005a18:	4650      	mov	r0, sl
90005a1a:	a906      	add	r1, sp, #24
90005a1c:	f8ad 301c 	strh.w	r3, [sp, #28]
90005a20:	f8cd 8018 	str.w	r8, [sp, #24]
90005a24:	f00e febc 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005a28:	4651      	mov	r1, sl
90005a2a:	4648      	mov	r0, r9
90005a2c:	e026      	b.n	90005a7c <_ZN18DataScreenViewBaseC1Ev+0x3f8>
90005a2e:	bf00      	nop
90005a30:	9002e828 	.word	0x9002e828
90005a34:	9002db68 	.word	0x9002db68
90005a38:	9002e890 	.word	0x9002e890
90005a3c:	9002e798 	.word	0x9002e798
90005a40:	9002e71c 	.word	0x9002e71c
90005a44:	9002dad8 	.word	0x9002dad8
90005a48:	011001e0 	.word	0x011001e0
90005a4c:	ff7fa6eb 	.word	0xff7fa6eb
90005a50:	001b0063 	.word	0x001b0063
90005a54:	0056011a 	.word	0x0056011a
90005a58:	00ae004f 	.word	0x00ae004f
90005a5c:	00ae0104 	.word	0x00ae0104
90005a60:	00cc006b 	.word	0x00cc006b
90005a64:	24021dbc 	.word	0x24021dbc
90005a68:	24021dc0 	.word	0x24021dc0
90005a6c:	24021dc8 	.word	0x24021dc8
90005a70:	9002cfd0 	.word	0x9002cfd0
90005a74:	9002dac8 	.word	0x9002dac8
90005a78:	900054d9 	.word	0x900054d9
90005a7c:	f00b fb6a 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90005a80:	f8d4 3224 	ldr.w	r3, [r4, #548]	@ 0x224
        color = newColor;
90005a84:	f04f 31ff 	mov.w	r1, #4294967295
    textArea5.setXY(320, 204);
90005a88:	f504 7a09 	add.w	sl, r4, #548	@ 0x224
        boundingArea = calculateBoundingArea();
90005a8c:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
90005a90:	4b2b      	ldr	r3, [pc, #172]	@ (90005b40 <_ZN18DataScreenViewBaseC1Ev+0x4bc>)
90005a92:	455a      	cmp	r2, fp
        color = newColor;
90005a94:	f8c4 1254 	str.w	r1, [r4, #596]	@ 0x254
90005a98:	f8c4 3228 	str.w	r3, [r4, #552]	@ 0x228
        linespace = space;
90005a9c:	f04f 0300 	mov.w	r3, #0
90005aa0:	f8a4 3258 	strh.w	r3, [r4, #600]	@ 0x258
90005aa4:	d136      	bne.n	90005b14 <_ZN18DataScreenViewBaseC1Ev+0x490>
        boundingArea = calculateBoundingArea();
90005aa6:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90005aaa:	e9c4 3198 	strd	r3, r1, [r4, #608]	@ 0x260
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005aae:	682b      	ldr	r3, [r5, #0]
    Unicode::snprintf(textArea5Buffer, TEXTAREA5_SIZE, "%s", touchgfx::TypedText(T_SPO2_DATA).getText());
90005ab0:	f204 257a 	addw	r5, r4, #634	@ 0x27a
90005ab4:	2b00      	cmp	r3, #0
90005ab6:	d037      	beq.n	90005b28 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005ab8:	883b      	ldrh	r3, [r7, #0]
90005aba:	2b00      	cmp	r3, #0
90005abc:	d03a      	beq.n	90005b34 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
90005abe:	4b21      	ldr	r3, [pc, #132]	@ (90005b44 <_ZN18DataScreenViewBaseC1Ev+0x4c0>)
90005ac0:	2100      	movs	r1, #0
90005ac2:	6818      	ldr	r0, [r3, #0]
90005ac4:	f000 fec8 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
90005ac8:	4a1f      	ldr	r2, [pc, #124]	@ (90005b48 <_ZN18DataScreenViewBaseC1Ev+0x4c4>)
90005aca:	4603      	mov	r3, r0
90005acc:	2105      	movs	r1, #5
90005ace:	4628      	mov	r0, r5
90005ad0:	f015 f9d0 	bl	9001ae74 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea5.resizeToCurrentText();
90005ad4:	4650      	mov	r0, sl
90005ad6:	f8c4 526c 	str.w	r5, [r4, #620]	@ 0x26c
90005ada:	f00e fe41 	bl	90014760 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90005ade:	2301      	movs	r3, #1
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ED91));
90005ae0:	a906      	add	r1, sp, #24
90005ae2:	4650      	mov	r0, sl
90005ae4:	f8ad 301c 	strh.w	r3, [sp, #28]
90005ae8:	f8cd 8018 	str.w	r8, [sp, #24]
90005aec:	f00e fe58 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005af0:	4648      	mov	r0, r9
90005af2:	4651      	mov	r1, sl
90005af4:	f00b fb2e 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005af8:	4620      	mov	r0, r4
90005afa:	b009      	add	sp, #36	@ 0x24
90005afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005b00:	4651      	mov	r1, sl
90005b02:	4630      	mov	r0, r6
90005b04:	4798      	blx	r3
90005b06:	f504 7305 	add.w	r3, r4, #532	@ 0x214
90005b0a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005b0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005b12:	e762      	b.n	900059da <_ZN18DataScreenViewBaseC1Ev+0x356>
90005b14:	4651      	mov	r1, sl
90005b16:	4630      	mov	r0, r6
90005b18:	4790      	blx	r2
90005b1a:	f504 7318 	add.w	r3, r4, #608	@ 0x260
90005b1e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005b22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005b26:	e7c2      	b.n	90005aae <_ZN18DataScreenViewBaseC1Ev+0x42a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b28:	4b08      	ldr	r3, [pc, #32]	@ (90005b4c <_ZN18DataScreenViewBaseC1Ev+0x4c8>)
90005b2a:	2160      	movs	r1, #96	@ 0x60
90005b2c:	4a08      	ldr	r2, [pc, #32]	@ (90005b50 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90005b2e:	4809      	ldr	r0, [pc, #36]	@ (90005b54 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90005b30:	f024 fe7e 	bl	9002a830 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005b34:	4b08      	ldr	r3, [pc, #32]	@ (90005b58 <_ZN18DataScreenViewBaseC1Ev+0x4d4>)
90005b36:	2161      	movs	r1, #97	@ 0x61
90005b38:	4a05      	ldr	r2, [pc, #20]	@ (90005b50 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90005b3a:	4806      	ldr	r0, [pc, #24]	@ (90005b54 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90005b3c:	f024 fe78 	bl	9002a830 <__assert_func>
90005b40:	00cc0140 	.word	0x00cc0140
90005b44:	24021dc8 	.word	0x24021dc8
90005b48:	9002cfd0 	.word	0x9002cfd0
90005b4c:	9002ce7c 	.word	0x9002ce7c
90005b50:	9002cf84 	.word	0x9002cf84
90005b54:	9002cefc 	.word	0x9002cefc
90005b58:	9002cf44 	.word	0x9002cf44

90005b5c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90005b5c:	4770      	bx	lr
90005b5e:	bf00      	nop

90005b60 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90005b60:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90005b64:	6808      	ldr	r0, [r1, #0]
90005b66:	6849      	ldr	r1, [r1, #4]
90005b68:	c303      	stmia	r3!, {r0, r1}
    }
90005b6a:	4770      	bx	lr

90005b6c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90005b6c:	4770      	bx	lr
90005b6e:	bf00      	nop

90005b70 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90005b70:	4770      	bx	lr
90005b72:	bf00      	nop

90005b74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90005b74:	6041      	str	r1, [r0, #4]
    }
90005b76:	4770      	bx	lr

90005b78 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005b78:	4770      	bx	lr
90005b7a:	bf00      	nop

90005b7c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90005b7c:	4770      	bx	lr
90005b7e:	bf00      	nop

90005b80 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90005b80:	4905      	ldr	r1, [pc, #20]	@ (90005b98 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90005b82:	2200      	movs	r2, #0
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90005b84:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005b88:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005b8c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005b90:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
90005b94:	4770      	bx	lr
90005b96:	bf00      	nop
90005b98:	90005dc1 	.word	0x90005dc1

90005b9c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90005b9c:	2301      	movs	r3, #1
90005b9e:	7203      	strb	r3, [r0, #8]
    }
90005ba0:	4770      	bx	lr
90005ba2:	bf00      	nop

90005ba4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90005ba4:	4770      	bx	lr
90005ba6:	bf00      	nop

90005ba8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90005ba8:	1d01      	adds	r1, r0, #4
90005baa:	c90e      	ldmia	r1, {r1, r2, r3}
90005bac:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005bb0:	eb01 0063 	add.w	r0, r1, r3, asr #1
90005bb4:	07db      	lsls	r3, r3, #31
90005bb6:	d502      	bpl.n	90005bbe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90005bb8:	f851 300c 	ldr.w	r3, [r1, ip]
90005bbc:	589a      	ldr	r2, [r3, r2]
90005bbe:	4710      	bx	r2

90005bc0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90005bc0:	6843      	ldr	r3, [r0, #4]
90005bc2:	b13b      	cbz	r3, 90005bd4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90005bc4:	6883      	ldr	r3, [r0, #8]
90005bc6:	b10b      	cbz	r3, 90005bcc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90005bc8:	2001      	movs	r0, #1
    }
90005bca:	4770      	bx	lr
90005bcc:	68c0      	ldr	r0, [r0, #12]
90005bce:	f000 0001 	and.w	r0, r0, #1
90005bd2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005bd4:	4618      	mov	r0, r3
90005bd6:	4770      	bx	lr

90005bd8 <_ZN8touchgfx12NoTransitionD0Ev>:
90005bd8:	b510      	push	{r4, lr}
90005bda:	4604      	mov	r4, r0
90005bdc:	210c      	movs	r1, #12
90005bde:	f024 fab1 	bl	9002a144 <_ZdlPvj>
90005be2:	4620      	mov	r0, r4
90005be4:	bd10      	pop	{r4, pc}
90005be6:	bf00      	nop

90005be8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005be8:	b510      	push	{r4, lr}
90005bea:	4604      	mov	r4, r0
90005bec:	2110      	movs	r1, #16
90005bee:	f024 faa9 	bl	9002a144 <_ZdlPvj>
90005bf2:	4620      	mov	r0, r4
90005bf4:	bd10      	pop	{r4, pc}
90005bf6:	bf00      	nop

90005bf8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90005bf8:	b510      	push	{r4, lr}
90005bfa:	4604      	mov	r4, r0
90005bfc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90005c00:	f024 faa0 	bl	9002a144 <_ZdlPvj>
90005c04:	4620      	mov	r0, r4
90005c06:	bd10      	pop	{r4, pc}

90005c08 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90005c08:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90005c0a:	f011 fc2b 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90005c0e:	6803      	ldr	r3, [r0, #0]
    }
90005c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90005c14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90005c16:	4718      	bx	r3

90005c18 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl()
{
90005c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataScreenView, DataScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005c1c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90005c20:	4607      	mov	r7, r0
90005c22:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005c24:	68b0      	ldr	r0, [r6, #8]
90005c26:	6803      	ldr	r3, [r0, #0]
90005c28:	6a1b      	ldr	r3, [r3, #32]
90005c2a:	4798      	blx	r3
90005c2c:	f5b0 7f21 	cmp.w	r0, #644	@ 0x284
90005c30:	f0c0 809d 	bcc.w	90005d6e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005c34:	6870      	ldr	r0, [r6, #4]
90005c36:	6803      	ldr	r3, [r0, #0]
90005c38:	6a1b      	ldr	r3, [r3, #32]
90005c3a:	4798      	blx	r3
90005c3c:	280f      	cmp	r0, #15
90005c3e:	f240 80a2 	bls.w	90005d86 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005c42:	68f0      	ldr	r0, [r6, #12]
90005c44:	6803      	ldr	r3, [r0, #0]
90005c46:	6a1b      	ldr	r3, [r3, #32]
90005c48:	4798      	blx	r3
90005c4a:	280b      	cmp	r0, #11
90005c4c:	f240 8095 	bls.w	90005d7a <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90005c50:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90005db8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90005c54:	f011 fc06 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90005c58:	3004      	adds	r0, #4
90005c5a:	f011 fc41 	bl	900174e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005c5e:	f8d9 0000 	ldr.w	r0, [r9]
90005c62:	b130      	cbz	r0, 90005c72 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90005c64:	6803      	ldr	r3, [r0, #0]
90005c66:	494b      	ldr	r1, [pc, #300]	@ (90005d94 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x17c>)
90005c68:	68da      	ldr	r2, [r3, #12]
90005c6a:	428a      	cmp	r2, r1
90005c6c:	d178      	bne.n	90005d60 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90005c6e:	681b      	ldr	r3, [r3, #0]
90005c70:	4798      	blx	r3
    if (*currentScreen)
90005c72:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90005dbc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a4>
90005c76:	f8d8 0000 	ldr.w	r0, [r8]
90005c7a:	2800      	cmp	r0, #0
90005c7c:	d062      	beq.n	90005d44 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90005c7e:	6803      	ldr	r3, [r0, #0]
90005c80:	695b      	ldr	r3, [r3, #20]
90005c82:	4798      	blx	r3
    if (*currentPresenter)
90005c84:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005c88:	2800      	cmp	r0, #0
90005c8a:	d056      	beq.n	90005d3a <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90005c8c:	6803      	ldr	r3, [r0, #0]
90005c8e:	685b      	ldr	r3, [r3, #4]
90005c90:	4798      	blx	r3
    if (*currentScreen)
90005c92:	f8d8 0000 	ldr.w	r0, [r8]
90005c96:	b110      	cbz	r0, 90005c9e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90005c98:	6803      	ldr	r3, [r0, #0]
90005c9a:	681b      	ldr	r3, [r3, #0]
90005c9c:	4798      	blx	r3
    if (*currentPresenter)
90005c9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005ca2:	b110      	cbz	r0, 90005caa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90005ca4:	6803      	ldr	r3, [r0, #0]
90005ca6:	689b      	ldr	r3, [r3, #8]
90005ca8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005caa:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90005cac:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90005cae:	f04f 0b00 	mov.w	fp, #0
90005cb2:	6803      	ldr	r3, [r0, #0]
90005cb4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005cb6:	4798      	blx	r3
90005cb8:	4b37      	ldr	r3, [pc, #220]	@ (90005d98 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x180>)
90005cba:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005cbc:	68b0      	ldr	r0, [r6, #8]
90005cbe:	4659      	mov	r1, fp
90005cc0:	6023      	str	r3, [r4, #0]
90005cc2:	6803      	ldr	r3, [r0, #0]
90005cc4:	f8c4 b004 	str.w	fp, [r4, #4]
90005cc8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005cca:	f884 b008 	strb.w	fp, [r4, #8]
90005cce:	4798      	blx	r3
90005cd0:	4605      	mov	r5, r0
90005cd2:	f000 fe43 	bl	9000695c <_ZN14DataScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005cd6:	6870      	ldr	r0, [r6, #4]
90005cd8:	4659      	mov	r1, fp
90005cda:	6803      	ldr	r3, [r0, #0]
90005cdc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005cde:	4798      	blx	r3
90005ce0:	4606      	mov	r6, r0
90005ce2:	4629      	mov	r1, r5
90005ce4:	f000 fe10 	bl	90006908 <_ZN19DataScreenPresenterC1ER14DataScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90005ce8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90005cea:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90005cee:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90005cf0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90005cf4:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90005cf8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90005cfc:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90005cfe:	f8c6 a008 	str.w	sl, [r6, #8]
90005d02:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90005d04:	63ee      	str	r6, [r5, #60]	@ 0x3c
90005d06:	4798      	blx	r3
    newPresenter->activate();
90005d08:	6833      	ldr	r3, [r6, #0]
90005d0a:	4630      	mov	r0, r6
90005d0c:	681b      	ldr	r3, [r3, #0]
90005d0e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005d10:	4621      	mov	r1, r4
90005d12:	4628      	mov	r0, r5
90005d14:	f013 fda8 	bl	90019868 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005d18:	6823      	ldr	r3, [r4, #0]
90005d1a:	4920      	ldr	r1, [pc, #128]	@ (90005d9c <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x184>)
90005d1c:	691a      	ldr	r2, [r3, #16]
90005d1e:	428a      	cmp	r2, r1
90005d20:	d11a      	bne.n	90005d58 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90005d22:	695b      	ldr	r3, [r3, #20]
90005d24:	4a1e      	ldr	r2, [pc, #120]	@ (90005da0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x188>)
90005d26:	4293      	cmp	r3, r2
90005d28:	d111      	bne.n	90005d4e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90005d2a:	f011 fb9b 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90005d2e:	6803      	ldr	r3, [r0, #0]
90005d30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90005d32:	b001      	add	sp, #4
90005d34:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005d38:	4718      	bx	r3
    if (*currentScreen)
90005d3a:	f8d8 0000 	ldr.w	r0, [r8]
90005d3e:	2800      	cmp	r0, #0
90005d40:	d1aa      	bne.n	90005c98 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x80>
90005d42:	e7b2      	b.n	90005caa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90005d44:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005d48:	2800      	cmp	r0, #0
90005d4a:	d19f      	bne.n	90005c8c <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x74>
90005d4c:	e7ad      	b.n	90005caa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90005d4e:	4620      	mov	r0, r4
90005d50:	b001      	add	sp, #4
90005d52:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005d56:	4718      	bx	r3
    newTransition->init();
90005d58:	4620      	mov	r0, r4
90005d5a:	4790      	blx	r2
    newTransition->invalidate();
90005d5c:	6823      	ldr	r3, [r4, #0]
90005d5e:	e7e0      	b.n	90005d22 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005d60:	4790      	blx	r2
    if (*currentTrans)
90005d62:	f8d9 0000 	ldr.w	r0, [r9]
90005d66:	2800      	cmp	r0, #0
90005d68:	d083      	beq.n	90005c72 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90005d6a:	6803      	ldr	r3, [r0, #0]
90005d6c:	e77f      	b.n	90005c6e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005d6e:	4b0d      	ldr	r3, [pc, #52]	@ (90005da4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x18c>)
90005d70:	21a3      	movs	r1, #163	@ 0xa3
90005d72:	4a0d      	ldr	r2, [pc, #52]	@ (90005da8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90005d74:	480d      	ldr	r0, [pc, #52]	@ (90005dac <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90005d76:	f024 fd5b 	bl	9002a830 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005d7a:	4b0d      	ldr	r3, [pc, #52]	@ (90005db0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x198>)
90005d7c:	21a5      	movs	r1, #165	@ 0xa5
90005d7e:	4a0a      	ldr	r2, [pc, #40]	@ (90005da8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90005d80:	480a      	ldr	r0, [pc, #40]	@ (90005dac <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90005d82:	f024 fd55 	bl	9002a830 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005d86:	4b0b      	ldr	r3, [pc, #44]	@ (90005db4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x19c>)
90005d88:	21a4      	movs	r1, #164	@ 0xa4
90005d8a:	4a07      	ldr	r2, [pc, #28]	@ (90005da8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90005d8c:	4807      	ldr	r0, [pc, #28]	@ (90005dac <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90005d8e:	f024 fd4f 	bl	9002a830 <__assert_func>
90005d92:	bf00      	nop
90005d94:	90005b6d 	.word	0x90005b6d
90005d98:	9002dc10 	.word	0x9002dc10
90005d9c:	90005b71 	.word	0x90005b71
90005da0:	90005c09 	.word	0x90005c09
90005da4:	9002cfd4 	.word	0x9002cfd4
90005da8:	9002d064 	.word	0x9002d064
90005dac:	9002d13c 	.word	0x9002d13c
90005db0:	9002d228 	.word	0x9002d228
90005db4:	9002d184 	.word	0x9002d184
90005db8:	24021dac 	.word	0x24021dac
90005dbc:	24021da8 	.word	0x24021da8

90005dc0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
90005dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005dc4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90005dc8:	4607      	mov	r7, r0
90005dca:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005dcc:	68b0      	ldr	r0, [r6, #8]
90005dce:	6803      	ldr	r3, [r0, #0]
90005dd0:	6a1b      	ldr	r3, [r3, #32]
90005dd2:	4798      	blx	r3
90005dd4:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
90005dd8:	f0c0 809d 	bcc.w	90005f16 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005ddc:	6870      	ldr	r0, [r6, #4]
90005dde:	6803      	ldr	r3, [r0, #0]
90005de0:	6a1b      	ldr	r3, [r3, #32]
90005de2:	4798      	blx	r3
90005de4:	280f      	cmp	r0, #15
90005de6:	f240 80a2 	bls.w	90005f2e <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005dea:	68f0      	ldr	r0, [r6, #12]
90005dec:	6803      	ldr	r3, [r0, #0]
90005dee:	6a1b      	ldr	r3, [r3, #32]
90005df0:	4798      	blx	r3
90005df2:	280b      	cmp	r0, #11
90005df4:	f240 8095 	bls.w	90005f22 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90005df8:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90005f60 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90005dfc:	f011 fb32 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90005e00:	3004      	adds	r0, #4
90005e02:	f011 fb6d 	bl	900174e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005e06:	f8d9 0000 	ldr.w	r0, [r9]
90005e0a:	b130      	cbz	r0, 90005e1a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90005e0c:	6803      	ldr	r3, [r0, #0]
90005e0e:	494b      	ldr	r1, [pc, #300]	@ (90005f3c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x17c>)
90005e10:	68da      	ldr	r2, [r3, #12]
90005e12:	428a      	cmp	r2, r1
90005e14:	d178      	bne.n	90005f08 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90005e16:	681b      	ldr	r3, [r3, #0]
90005e18:	4798      	blx	r3
    if (*currentScreen)
90005e1a:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90005f64 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a4>
90005e1e:	f8d8 0000 	ldr.w	r0, [r8]
90005e22:	2800      	cmp	r0, #0
90005e24:	d062      	beq.n	90005eec <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90005e26:	6803      	ldr	r3, [r0, #0]
90005e28:	695b      	ldr	r3, [r3, #20]
90005e2a:	4798      	blx	r3
    if (*currentPresenter)
90005e2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005e30:	2800      	cmp	r0, #0
90005e32:	d056      	beq.n	90005ee2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90005e34:	6803      	ldr	r3, [r0, #0]
90005e36:	685b      	ldr	r3, [r3, #4]
90005e38:	4798      	blx	r3
    if (*currentScreen)
90005e3a:	f8d8 0000 	ldr.w	r0, [r8]
90005e3e:	b110      	cbz	r0, 90005e46 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90005e40:	6803      	ldr	r3, [r0, #0]
90005e42:	681b      	ldr	r3, [r3, #0]
90005e44:	4798      	blx	r3
    if (*currentPresenter)
90005e46:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005e4a:	b110      	cbz	r0, 90005e52 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90005e4c:	6803      	ldr	r3, [r0, #0]
90005e4e:	689b      	ldr	r3, [r3, #8]
90005e50:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005e52:	68f0      	ldr	r0, [r6, #12]
90005e54:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90005e56:	f04f 0b00 	mov.w	fp, #0
90005e5a:	6803      	ldr	r3, [r0, #0]
90005e5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005e5e:	4798      	blx	r3
90005e60:	4b37      	ldr	r3, [pc, #220]	@ (90005f40 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x180>)
90005e62:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005e64:	68b0      	ldr	r0, [r6, #8]
90005e66:	4659      	mov	r1, fp
90005e68:	6023      	str	r3, [r4, #0]
90005e6a:	6803      	ldr	r3, [r0, #0]
90005e6c:	f8c4 b004 	str.w	fp, [r4, #4]
90005e70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005e72:	f884 b008 	strb.w	fp, [r4, #8]
90005e76:	4798      	blx	r3
90005e78:	4605      	mov	r5, r0
90005e7a:	f000 fe61 	bl	90006b40 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005e7e:	6870      	ldr	r0, [r6, #4]
90005e80:	4659      	mov	r1, fp
90005e82:	6803      	ldr	r3, [r0, #0]
90005e84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005e86:	4798      	blx	r3
90005e88:	4606      	mov	r6, r0
90005e8a:	4629      	mov	r1, r5
90005e8c:	f000 fe2a 	bl	90006ae4 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
90005e90:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90005e92:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90005e96:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90005e98:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90005e9c:	f8c8 5000 	str.w	r5, [r8]
90005ea0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90005ea4:	682b      	ldr	r3, [r5, #0]
90005ea6:	f8c6 a008 	str.w	sl, [r6, #8]
90005eaa:	68db      	ldr	r3, [r3, #12]
90005eac:	63ee      	str	r6, [r5, #60]	@ 0x3c
90005eae:	4798      	blx	r3
    newPresenter->activate();
90005eb0:	6833      	ldr	r3, [r6, #0]
90005eb2:	4630      	mov	r0, r6
90005eb4:	681b      	ldr	r3, [r3, #0]
90005eb6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005eb8:	4621      	mov	r1, r4
90005eba:	4628      	mov	r0, r5
90005ebc:	f013 fcd4 	bl	90019868 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005ec0:	6823      	ldr	r3, [r4, #0]
90005ec2:	4920      	ldr	r1, [pc, #128]	@ (90005f44 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x184>)
90005ec4:	691a      	ldr	r2, [r3, #16]
90005ec6:	428a      	cmp	r2, r1
90005ec8:	d11a      	bne.n	90005f00 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90005eca:	695b      	ldr	r3, [r3, #20]
90005ecc:	4a1e      	ldr	r2, [pc, #120]	@ (90005f48 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x188>)
90005ece:	4293      	cmp	r3, r2
90005ed0:	d111      	bne.n	90005ef6 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90005ed2:	f011 fac7 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90005ed6:	6803      	ldr	r3, [r0, #0]
90005ed8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90005eda:	b001      	add	sp, #4
90005edc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ee0:	4718      	bx	r3
    if (*currentScreen)
90005ee2:	f8d8 0000 	ldr.w	r0, [r8]
90005ee6:	2800      	cmp	r0, #0
90005ee8:	d1aa      	bne.n	90005e40 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x80>
90005eea:	e7b2      	b.n	90005e52 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90005eec:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005ef0:	2800      	cmp	r0, #0
90005ef2:	d19f      	bne.n	90005e34 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
90005ef4:	e7ad      	b.n	90005e52 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90005ef6:	4620      	mov	r0, r4
90005ef8:	b001      	add	sp, #4
90005efa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005efe:	4718      	bx	r3
    newTransition->init();
90005f00:	4620      	mov	r0, r4
90005f02:	4790      	blx	r2
    newTransition->invalidate();
90005f04:	6823      	ldr	r3, [r4, #0]
90005f06:	e7e0      	b.n	90005eca <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005f08:	4790      	blx	r2
    if (*currentTrans)
90005f0a:	f8d9 0000 	ldr.w	r0, [r9]
90005f0e:	2800      	cmp	r0, #0
90005f10:	d083      	beq.n	90005e1a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90005f12:	6803      	ldr	r3, [r0, #0]
90005f14:	e77f      	b.n	90005e16 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005f16:	4b0d      	ldr	r3, [pc, #52]	@ (90005f4c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x18c>)
90005f18:	21a3      	movs	r1, #163	@ 0xa3
90005f1a:	4a0d      	ldr	r2, [pc, #52]	@ (90005f50 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005f1c:	480d      	ldr	r0, [pc, #52]	@ (90005f54 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
90005f1e:	f024 fc87 	bl	9002a830 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005f22:	4b0d      	ldr	r3, [pc, #52]	@ (90005f58 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x198>)
90005f24:	21a5      	movs	r1, #165	@ 0xa5
90005f26:	4a0a      	ldr	r2, [pc, #40]	@ (90005f50 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005f28:	480a      	ldr	r0, [pc, #40]	@ (90005f54 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
90005f2a:	f024 fc81 	bl	9002a830 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005f2e:	4b0b      	ldr	r3, [pc, #44]	@ (90005f5c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x19c>)
90005f30:	21a4      	movs	r1, #164	@ 0xa4
90005f32:	4a07      	ldr	r2, [pc, #28]	@ (90005f50 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005f34:	4807      	ldr	r0, [pc, #28]	@ (90005f54 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
90005f36:	f024 fc7b 	bl	9002a830 <__assert_func>
90005f3a:	bf00      	nop
90005f3c:	90005b6d 	.word	0x90005b6d
90005f40:	9002dc10 	.word	0x9002dc10
90005f44:	90005b71 	.word	0x90005b71
90005f48:	90005c09 	.word	0x90005c09
90005f4c:	9002cfd4 	.word	0x9002cfd4
90005f50:	9002d2cc 	.word	0x9002d2cc
90005f54:	9002d13c 	.word	0x9002d13c
90005f58:	9002d228 	.word	0x9002d228
90005f5c:	9002d184 	.word	0x9002d184
90005f60:	24021dac 	.word	0x24021dac
90005f64:	24021da8 	.word	0x24021da8

90005f68 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90005f68:	b570      	push	{r4, r5, r6, lr}
90005f6a:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005f6c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90005f70:	b1b8      	cbz	r0, 90005fa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005f72:	6802      	ldr	r2, [r0, #0]
90005f74:	4916      	ldr	r1, [pc, #88]	@ (90005fd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90005f76:	68d3      	ldr	r3, [r2, #12]
90005f78:	428b      	cmp	r3, r1
90005f7a:	d11f      	bne.n	90005fbc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90005f7c:	6843      	ldr	r3, [r0, #4]
90005f7e:	b183      	cbz	r3, 90005fa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005f80:	6881      	ldr	r1, [r0, #8]
90005f82:	b179      	cbz	r1, 90005fa4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90005f84:	6892      	ldr	r2, [r2, #8]
90005f86:	4b13      	ldr	r3, [pc, #76]	@ (90005fd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005f88:	429a      	cmp	r2, r3
90005f8a:	d11e      	bne.n	90005fca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005f8c:	68c2      	ldr	r2, [r0, #12]
90005f8e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90005f92:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005f96:	07d3      	lsls	r3, r2, #31
90005f98:	d40d      	bmi.n	90005fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90005f9a:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90005f9c:	2300      	movs	r3, #0
90005f9e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90005fa2:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90005fa4:	68c5      	ldr	r5, [r0, #12]
90005fa6:	07ee      	lsls	r6, r5, #31
90005fa8:	d5fb      	bpl.n	90005fa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005faa:	6892      	ldr	r2, [r2, #8]
90005fac:	4e09      	ldr	r6, [pc, #36]	@ (90005fd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005fae:	42b2      	cmp	r2, r6
90005fb0:	d10b      	bne.n	90005fca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005fb2:	eb03 0065 	add.w	r0, r3, r5, asr #1
90005fb6:	6803      	ldr	r3, [r0, #0]
90005fb8:	5859      	ldr	r1, [r3, r1]
90005fba:	e7ee      	b.n	90005f9a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005fbc:	4798      	blx	r3
90005fbe:	2800      	cmp	r0, #0
90005fc0:	d0ef      	beq.n	90005fa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005fc2:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90005fc6:	6802      	ldr	r2, [r0, #0]
90005fc8:	e7dc      	b.n	90005f84 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90005fca:	4790      	blx	r2
90005fcc:	e7e6      	b.n	90005f9c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90005fce:	bf00      	nop
90005fd0:	90005bc1 	.word	0x90005bc1
90005fd4:	90005ba9 	.word	0x90005ba9

90005fd8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005fd8:	b570      	push	{r4, r5, r6, lr}
90005fda:	4604      	mov	r4, r0
90005fdc:	4615      	mov	r5, r2
90005fde:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005fe0:	f011 fb50 	bl	90017684 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005fe4:	4a22      	ldr	r2, [pc, #136]	@ (90006070 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90005fe6:	2300      	movs	r3, #0
      frontendHeap(heap),
90005fe8:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90005fec:	6014      	str	r4, [r2, #0]
        return instance;
90005fee:	4d21      	ldr	r5, [pc, #132]	@ (90006074 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005ff0:	4a21      	ldr	r2, [pc, #132]	@ (90006078 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005ff2:	6828      	ldr	r0, [r5, #0]
90005ff4:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005ff6:	4a21      	ldr	r2, [pc, #132]	@ (9000607c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90005ff8:	4921      	ldr	r1, [pc, #132]	@ (90006080 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90005ffa:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90005ffe:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90006002:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90006006:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
9000600a:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000600e:	6802      	ldr	r2, [r0, #0]
90006010:	6892      	ldr	r2, [r2, #8]
90006012:	428a      	cmp	r2, r1
90006014:	d129      	bne.n	9000606a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90006016:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000601a:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
9000601e:	2000      	movs	r0, #0
90006020:	f000 fbdc 	bl	900067dc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006024:	682b      	ldr	r3, [r5, #0]
90006026:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000602a:	b1e2      	cbz	r2, 90006066 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
9000602c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000602e:	b1d0      	cbz	r0, 90006066 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90006030:	f01b ff81 	bl	90021f36 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90006034:	682b      	ldr	r3, [r5, #0]
90006036:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000603a:	b192      	cbz	r2, 90006062 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
9000603c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000603e:	b180      	cbz	r0, 90006062 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90006040:	f01b fff4 	bl	9002202c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90006044:	682b      	ldr	r3, [r5, #0]
90006046:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000604a:	b12a      	cbz	r2, 90006058 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
9000604c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000604e:	b118      	cbz	r0, 90006058 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90006050:	f01b fff8 	bl	90022044 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90006054:	4620      	mov	r0, r4
90006056:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90006058:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
9000605a:	f01b fff3 	bl	90022044 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
9000605e:	4620      	mov	r0, r4
90006060:	bd70      	pop	{r4, r5, r6, pc}
90006062:	6898      	ldr	r0, [r3, #8]
90006064:	e7ec      	b.n	90006040 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90006066:	6898      	ldr	r0, [r3, #8]
90006068:	e7e2      	b.n	90006030 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000606a:	4619      	mov	r1, r3
9000606c:	4790      	blx	r2
9000606e:	e7d6      	b.n	9000601e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90006070:	24021db8 	.word	0x24021db8
90006074:	24021d64 	.word	0x24021d64
90006078:	9002dbbc 	.word	0x9002dbbc
9000607c:	9002dba4 	.word	0x9002dba4
90006080:	90000da5 	.word	0x90000da5

90006084 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90006084:	4905      	ldr	r1, [pc, #20]	@ (9000609c <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x18>)
90006086:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90006088:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
9000608c:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90006090:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90006094:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90006098:	4770      	bx	lr
9000609a:	bf00      	nop
9000609c:	90005dc1 	.word	0x90005dc1

900060a0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>:
900060a0:	4905      	ldr	r1, [pc, #20]	@ (900060b8 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv+0x18>)
900060a2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900060a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900060a8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900060ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900060b0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900060b4:	4770      	bx	lr
900060b6:	bf00      	nop
900060b8:	90005c19 	.word	0x90005c19

900060bc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900060bc:	6a40      	ldr	r0, [r0, #36]	@ 0x24
900060be:	4770      	bx	lr

900060c0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900060c0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900060c2:	4770      	bx	lr

900060c4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900060c4:	4770      	bx	lr
900060c6:	bf00      	nop

900060c8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
900060c8:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
900060ca:	888a      	ldrh	r2, [r1, #4]
900060cc:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
900060ce:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
900060d0:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
900060d2:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
900060d4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
900060d8:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
900060dc:	4418      	add	r0, r3
900060de:	4770      	bx	lr

900060e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
900060e0:	b1fa      	cbz	r2, 90006122 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
900060e2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
900060e4:	7b14      	ldrb	r4, [r2, #12]
900060e6:	b1d4      	cbz	r4, 9000611e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
900060e8:	f892 c00d 	ldrb.w	ip, [r2, #13]
900060ec:	f892 e00b 	ldrb.w	lr, [r2, #11]
900060f0:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
900060f4:	6a03      	ldr	r3, [r0, #32]
900060f6:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
900060fa:	ea4e 0202 	orr.w	r2, lr, r2
900060fe:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006102:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90006106:	e004      	b.n	90006112 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90006108:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
9000610c:	d807      	bhi.n	9000611e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000610e:	4283      	cmp	r3, r0
90006110:	d005      	beq.n	9000611e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90006112:	881a      	ldrh	r2, [r3, #0]
90006114:	428a      	cmp	r2, r1
90006116:	d1f7      	bne.n	90006108 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90006118:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
9000611c:	bd10      	pop	{r4, pc}
        return 0;
9000611e:	2000      	movs	r0, #0
}
90006120:	bd10      	pop	{r4, pc}
        return 0;
90006122:	4610      	mov	r0, r2
}
90006124:	4770      	bx	lr
90006126:	bf00      	nop

90006128 <_ZN8touchgfx13GeneratedFontD0Ev>:
90006128:	b510      	push	{r4, lr}
9000612a:	4604      	mov	r4, r0
9000612c:	212c      	movs	r1, #44	@ 0x2c
9000612e:	f024 f809 	bl	9002a144 <_ZdlPvj>
90006132:	4620      	mov	r0, r4
90006134:	bd10      	pop	{r4, pc}
90006136:	bf00      	nop

90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006138:	b530      	push	{r4, r5, lr}
9000613a:	b08b      	sub	sp, #44	@ 0x2c
9000613c:	4604      	mov	r4, r0
9000613e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90006142:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006144:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90006148:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000614a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
9000614e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006150:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90006154:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006156:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
9000615a:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000615c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90006160:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006162:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90006166:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006168:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
9000616c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000616e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90006172:	9508      	str	r5, [sp, #32]
90006174:	f012 ffd0 	bl	90019118 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90006178:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
9000617a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
9000617c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000617e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90006180:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90006182:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90006184:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90006186:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90006188:	62a3      	str	r3, [r4, #40]	@ 0x28
9000618a:	4b02      	ldr	r3, [pc, #8]	@ (90006194 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
9000618c:	6023      	str	r3, [r4, #0]
}
9000618e:	b00b      	add	sp, #44	@ 0x2c
90006190:	bd30      	pop	{r4, r5, pc}
90006192:	bf00      	nop
90006194:	9002dc34 	.word	0x9002dc34

90006198 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006198:	4770      	bx	lr
9000619a:	bf00      	nop

9000619c <_ZN19StartScreenViewBaseD1Ev>:
}

StartScreenViewBase::~StartScreenViewBase()
{

}
9000619c:	4770      	bx	lr
9000619e:	bf00      	nop

900061a0 <_ZN19StartScreenViewBase11setupScreenEv>:

void StartScreenViewBase::setupScreen()
{

}
900061a0:	4770      	bx	lr
900061a2:	bf00      	nop

900061a4 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900061a4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900061a6:	68c3      	ldr	r3, [r0, #12]
900061a8:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900061ac:	f013 0f01 	tst.w	r3, #1
900061b0:	eb04 0063 	add.w	r0, r4, r3, asr #1
900061b4:	d004      	beq.n	900061c0 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
900061b6:	ea4f 0c63 	mov.w	ip, r3, asr #1
900061ba:	f854 300c 	ldr.w	r3, [r4, ip]
900061be:	589a      	ldr	r2, [r3, r2]
    }
900061c0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900061c4:	4710      	bx	r2
900061c6:	bf00      	nop

900061c8 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900061c8:	6843      	ldr	r3, [r0, #4]
900061ca:	b13b      	cbz	r3, 900061dc <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900061cc:	6883      	ldr	r3, [r0, #8]
900061ce:	b10b      	cbz	r3, 900061d4 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900061d0:	2001      	movs	r0, #1
    }
900061d2:	4770      	bx	lr
900061d4:	68c0      	ldr	r0, [r0, #12]
900061d6:	f000 0001 	and.w	r0, r0, #1
900061da:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900061dc:	4618      	mov	r0, r3
900061de:	4770      	bx	lr

900061e0 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900061e0:	b510      	push	{r4, lr}
900061e2:	4604      	mov	r4, r0
900061e4:	2110      	movs	r1, #16
900061e6:	f023 ffad 	bl	9002a144 <_ZdlPvj>
900061ea:	4620      	mov	r0, r4
900061ec:	bd10      	pop	{r4, pc}
900061ee:	bf00      	nop

900061f0 <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
900061f0:	b510      	push	{r4, lr}
900061f2:	4604      	mov	r4, r0
}
900061f4:	f44f 719c 	mov.w	r1, #312	@ 0x138
900061f8:	f023 ffa4 	bl	9002a144 <_ZdlPvj>
900061fc:	4620      	mov	r0, r4
900061fe:	bd10      	pop	{r4, pc}

90006200 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
90006200:	30e0      	adds	r0, #224	@ 0xe0
90006202:	4288      	cmp	r0, r1
90006204:	d000      	beq.n	90006208 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90006206:	4770      	bx	lr
{
90006208:	b508      	push	{r3, lr}
    virtual ~StartScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000620a:	f011 f92b 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to DataScreen
        //Go to DataScreen with no screen transition
        application().gotoDataScreenScreenNoTransition();
    }
}
9000620e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataScreenScreenNoTransition();
90006212:	f7ff bf45 	b.w	900060a0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>
90006216:	bf00      	nop

90006218 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
90006218:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000621c:	b088      	sub	sp, #32
9000621e:	4604      	mov	r4, r0
        : presenter(0)
90006220:	2500      	movs	r5, #0
90006222:	f013 f975 	bl	90019510 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90006226:	22ff      	movs	r2, #255	@ 0xff
          touchable(false),
90006228:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000622c:	4970      	ldr	r1, [pc, #448]	@ (900063f0 <_ZN19StartScreenViewBaseC1Ev+0x1d8>)
9000622e:	f04f 38ff 	mov.w	r8, #4294967295
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
90006232:	4870      	ldr	r0, [pc, #448]	@ (900063f4 <_ZN19StartScreenViewBaseC1Ev+0x1dc>)
90006234:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
90006238:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
9000623c:	1d26      	adds	r6, r4, #4
9000623e:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
        : typedTextId(id)
90006242:	f8df a1ec 	ldr.w	sl, [pc, #492]	@ 90006430 <_ZN19StartScreenViewBaseC1Ev+0x218>
90006246:	6020      	str	r0, [r4, #0]
90006248:	4638      	mov	r0, r7
9000624a:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
9000624e:	6421      	str	r1, [r4, #64]	@ 0x40
90006250:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
90006254:	66e1      	str	r1, [r4, #108]	@ 0x6c
90006256:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006258:	4967      	ldr	r1, [pc, #412]	@ (900063f8 <_ZN19StartScreenViewBaseC1Ev+0x1e0>)
        : color(col)
9000625a:	66a5      	str	r5, [r4, #104]	@ 0x68
9000625c:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        rect.x = x;
90006260:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90006434 <_ZN19StartScreenViewBaseC1Ev+0x21c>
        : x(0), y(0), width(0), height(0)
90006264:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90006268:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000626c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90006270:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90006274:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90006278:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000627c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90006280:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90006284:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
90006288:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
9000628c:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          nextDrawChainElement(0),
90006290:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
          touchable(false),
90006294:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
90006298:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9000629c:	f8c4 20ce 	str.w	r2, [r4, #206]	@ 0xce
900062a0:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
900062a4:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
          cachedAbsX(0),
900062a8:	f8c4 50b8 	str.w	r5, [r4, #184]	@ 0xb8
        : color(col)
900062ac:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
900062b0:	f8c4 a0c0 	str.w	sl, [r4, #192]	@ 0xc0
900062b4:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
              text(0)
900062b8:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900062bc:	e9c4 5835 	strd	r5, r8, [r4, #212]	@ 0xd4
900062c0:	f00e fd34 	bl	90014d2c <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
900062c4:	4b4d      	ldr	r3, [pc, #308]	@ (900063fc <_ZN19StartScreenViewBaseC1Ev+0x1e4>)
900062c6:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900062ca:	4630      	mov	r0, r6
900062cc:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
900062d0:	4b4b      	ldr	r3, [pc, #300]	@ (90006400 <_ZN19StartScreenViewBaseC1Ev+0x1e8>)
        rect.x = x;
900062d2:	f8c4 9048 	str.w	r9, [r4, #72]	@ 0x48
900062d6:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        color = newColor;
900062da:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900062de:	f8c4 412c 	str.w	r4, [r4, #300]	@ 0x12c
900062e2:	66a3      	str	r3, [r4, #104]	@ 0x68
900062e4:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
900062e8:	6465      	str	r5, [r4, #68]	@ 0x44
900062ea:	f00a ff33 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900062ee:	4b45      	ldr	r3, [pc, #276]	@ (90006404 <_ZN19StartScreenViewBaseC1Ev+0x1ec>)
900062f0:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
900062f4:	4630      	mov	r0, r6
900062f6:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
900062fa:	e9c4 591c 	strd	r5, r9, [r4, #112]	@ 0x70
900062fe:	f00a ff29 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(99, 27);
90006302:	f104 0998 	add.w	r9, r4, #152	@ 0x98
90006306:	4b40      	ldr	r3, [pc, #256]	@ (90006408 <_ZN19StartScreenViewBaseC1Ev+0x1f0>)
        color = newColor;
90006308:	f8c4 80c8 	str.w	r8, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
9000630c:	46e8      	mov	r8, sp
9000630e:	4649      	mov	r1, r9
90006310:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90006314:	4640      	mov	r0, r8
        linespace = space;
90006316:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
9000631a:	f00d ff99 	bl	90014250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000631e:	2208      	movs	r2, #8
90006320:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
90006324:	f8cd a018 	str.w	sl, [sp, #24]
90006328:	f8ad 201c 	strh.w	r2, [sp, #28]
9000632c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90006330:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9XXE));
90006334:	a906      	add	r1, sp, #24
90006336:	4648      	mov	r0, r9
90006338:	f00e fa32 	bl	900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000633c:	4649      	mov	r1, r9
9000633e:	4630      	mov	r0, r6
90006340:	f00a ff08 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006344:	4b31      	ldr	r3, [pc, #196]	@ (9000640c <_ZN19StartScreenViewBaseC1Ev+0x1f4>)
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID));
90006346:	a905      	add	r1, sp, #20
90006348:	aa06      	add	r2, sp, #24
9000634a:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
9000634e:	4638      	mov	r0, r7
90006350:	f8ad 5014 	strh.w	r5, [sp, #20]
90006354:	f8ad 5018 	strh.w	r5, [sp, #24]
90006358:	f00e fa7f 	bl	9001485a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
9000635c:	4b2c      	ldr	r3, [pc, #176]	@ (90006410 <_ZN19StartScreenViewBaseC1Ev+0x1f8>)
class TypedText
9000635e:	2107      	movs	r1, #7
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90006360:	881b      	ldrh	r3, [r3, #0]
90006362:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
90006366:	428b      	cmp	r3, r1
90006368:	d924      	bls.n	900063b4 <_ZN19StartScreenViewBaseC1Ev+0x19c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000636a:	4b2a      	ldr	r3, [pc, #168]	@ (90006414 <_ZN19StartScreenViewBaseC1Ev+0x1fc>)
9000636c:	681b      	ldr	r3, [r3, #0]
9000636e:	2b00      	cmp	r3, #0
90006370:	d038      	beq.n	900063e4 <_ZN19StartScreenViewBaseC1Ev+0x1cc>
        return fonts[typedTexts[typedTextId].fontIdx];
90006372:	7b9a      	ldrb	r2, [r3, #14]
90006374:	4b28      	ldr	r3, [pc, #160]	@ (90006418 <_ZN19StartScreenViewBaseC1Ev+0x200>)
90006376:	681b      	ldr	r3, [r3, #0]
90006378:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
9000637c:	4b27      	ldr	r3, [pc, #156]	@ (9000641c <_ZN19StartScreenViewBaseC1Ev+0x204>)
9000637e:	6818      	ldr	r0, [r3, #0]
90006380:	f000 fa6a 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90006384:	f8d8 3000 	ldr.w	r3, [r8]
90006388:	4925      	ldr	r1, [pc, #148]	@ (90006420 <_ZN19StartScreenViewBaseC1Ev+0x208>)
9000638a:	4681      	mov	r9, r0
9000638c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000638e:	428a      	cmp	r2, r1
90006390:	d122      	bne.n	900063d8 <_ZN19StartScreenViewBaseC1Ev+0x1c0>
        return fontHeight;
90006392:	f8b8 5004 	ldrh.w	r5, [r8, #4]
90006396:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90006398:	4649      	mov	r1, r9
9000639a:	4640      	mov	r0, r8
9000639c:	4798      	blx	r3
9000639e:	fb15 f500 	smulbb	r5, r5, r0
900063a2:	f8d8 3000 	ldr.w	r3, [r8]
900063a6:	4649      	mov	r1, r9
900063a8:	b2ad      	uxth	r5, r5
900063aa:	4640      	mov	r0, r8
900063ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900063ae:	4798      	blx	r3
900063b0:	4405      	add	r5, r0
900063b2:	b22d      	sxth	r5, r5
        color = col;
900063b4:	f04f 33ff 	mov.w	r3, #4294967295
900063b8:	4630      	mov	r0, r6
900063ba:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900063bc:	f8a4 5126 	strh.w	r5, [r4, #294]	@ 0x126
        colorPressed = col;
900063c0:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
    buttonWithLabel1.setAction(buttonCallback);
900063c4:	f504 7394 	add.w	r3, r4, #296	@ 0x128
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900063c8:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
900063cc:	f00a fec2 	bl	90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900063d0:	4620      	mov	r0, r4
900063d2:	b008      	add	sp, #32
900063d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900063d8:	4640      	mov	r0, r8
900063da:	4790      	blx	r2
900063dc:	f8d8 3000 	ldr.w	r3, [r8]
900063e0:	4605      	mov	r5, r0
900063e2:	e7d8      	b.n	90006396 <_ZN19StartScreenViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900063e4:	4b0f      	ldr	r3, [pc, #60]	@ (90006424 <_ZN19StartScreenViewBaseC1Ev+0x20c>)
900063e6:	216c      	movs	r1, #108	@ 0x6c
900063e8:	4a0f      	ldr	r2, [pc, #60]	@ (90006428 <_ZN19StartScreenViewBaseC1Ev+0x210>)
900063ea:	4810      	ldr	r0, [pc, #64]	@ (9000642c <_ZN19StartScreenViewBaseC1Ev+0x214>)
900063ec:	f024 fa20 	bl	9002a830 <__assert_func>
900063f0:	9002e828 	.word	0x9002e828
900063f4:	9002dcb4 	.word	0x9002dcb4
900063f8:	9002e798 	.word	0x9002e798
900063fc:	9002dc9c 	.word	0x9002dc9c
90006400:	90006201 	.word	0x90006201
90006404:	ff7fa6eb 	.word	0xff7fa6eb
90006408:	001b0063 	.word	0x001b0063
9000640c:	00790099 	.word	0x00790099
90006410:	24021dc0 	.word	0x24021dc0
90006414:	24021dbc 	.word	0x24021dbc
90006418:	24021dc4 	.word	0x24021dc4
9000641c:	24021dc8 	.word	0x24021dc8
90006420:	9000542d 	.word	0x9000542d
90006424:	9002ce7c 	.word	0x9002ce7c
90006428:	9002cec0 	.word	0x9002cec0
9000642c:	9002cefc 	.word	0x9002cefc
90006430:	9002dac8 	.word	0x9002dac8
90006434:	011001e0 	.word	0x011001e0

90006438 <__tcf_0>:

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006438:	4770      	bx	lr
9000643a:	bf00      	nop

9000643c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>:
{
9000643c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000643e:	4d19      	ldr	r5, [pc, #100]	@ (900064a4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x68>)
{
90006440:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006442:	682c      	ldr	r4, [r5, #0]
90006444:	f3bf 8f5b 	dmb	ish
90006448:	f014 0401 	ands.w	r4, r4, #1
9000644c:	d002      	beq.n	90006454 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_25_4bpp;
}
9000644e:	4816      	ldr	r0, [pc, #88]	@ (900064a8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
90006450:	b00f      	add	sp, #60	@ 0x3c
90006452:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006454:	4628      	mov	r0, r5
90006456:	f023 fe77 	bl	9002a148 <__cxa_guard_acquire>
9000645a:	2800      	cmp	r0, #0
9000645c:	d0f7      	beq.n	9000644e <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x12>
9000645e:	233f      	movs	r3, #63	@ 0x3f
90006460:	4a12      	ldr	r2, [pc, #72]	@ (900064ac <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x70>)
90006462:	4913      	ldr	r1, [pc, #76]	@ (900064b0 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x74>)
90006464:	4810      	ldr	r0, [pc, #64]	@ (900064a8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
90006466:	e9cd 3409 	strd	r3, r4, [sp, #36]	@ 0x24
9000646a:	4b12      	ldr	r3, [pc, #72]	@ (900064b4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x78>)
9000646c:	e9cd 420b 	strd	r4, r2, [sp, #44]	@ 0x2c
90006470:	e9cd 3107 	strd	r3, r1, [sp, #28]
90006474:	2201      	movs	r2, #1
90006476:	2304      	movs	r3, #4
90006478:	2119      	movs	r1, #25
9000647a:	e9cd 3203 	strd	r3, r2, [sp, #12]
9000647e:	9100      	str	r1, [sp, #0]
90006480:	231e      	movs	r3, #30
90006482:	2211      	movs	r2, #17
90006484:	490c      	ldr	r1, [pc, #48]	@ (900064b8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x7c>)
90006486:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000648a:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000648e:	f7ff fe53 	bl	90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006492:	480a      	ldr	r0, [pc, #40]	@ (900064bc <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x80>)
90006494:	f024 f9ea 	bl	9002a86c <atexit>
90006498:	4628      	mov	r0, r5
9000649a:	f023 fe61 	bl	9002a160 <__cxa_guard_release>
}
9000649e:	4802      	ldr	r0, [pc, #8]	@ (900064a8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
900064a0:	b00f      	add	sp, #60	@ 0x3c
900064a2:	bd30      	pop	{r4, r5, pc}
900064a4:	24007c40 	.word	0x24007c40
900064a8:	24007c44 	.word	0x24007c44
900064ac:	9002dce0 	.word	0x9002dce0
900064b0:	9002efac 	.word	0x9002efac
900064b4:	9002efc0 	.word	0x9002efc0
900064b8:	90201344 	.word	0x90201344
900064bc:	90006439 	.word	0x90006439

900064c0 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900064c0:	4770      	bx	lr
900064c2:	bf00      	nop

900064c4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>:
{
900064c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900064c6:	4d19      	ldr	r5, [pc, #100]	@ (9000652c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x68>)
{
900064c8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900064ca:	682c      	ldr	r4, [r5, #0]
900064cc:	f3bf 8f5b 	dmb	ish
900064d0:	f014 0401 	ands.w	r4, r4, #1
900064d4:	d002      	beq.n	900064dc <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_30_4bpp;
}
900064d6:	4816      	ldr	r0, [pc, #88]	@ (90006530 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
900064d8:	b00f      	add	sp, #60	@ 0x3c
900064da:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900064dc:	4628      	mov	r0, r5
900064de:	f023 fe33 	bl	9002a148 <__cxa_guard_acquire>
900064e2:	2800      	cmp	r0, #0
900064e4:	d0f7      	beq.n	900064d6 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x12>
900064e6:	2201      	movs	r2, #1
900064e8:	4912      	ldr	r1, [pc, #72]	@ (90006534 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x70>)
900064ea:	203f      	movs	r0, #63	@ 0x3f
900064ec:	231e      	movs	r3, #30
900064ee:	9206      	str	r2, [sp, #24]
900064f0:	910c      	str	r1, [sp, #48]	@ 0x30
900064f2:	2104      	movs	r1, #4
900064f4:	9009      	str	r0, [sp, #36]	@ 0x24
900064f6:	4810      	ldr	r0, [pc, #64]	@ (90006538 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x74>)
900064f8:	e9cd 2404 	strd	r2, r4, [sp, #16]
900064fc:	4a0f      	ldr	r2, [pc, #60]	@ (9000653c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x78>)
900064fe:	9007      	str	r0, [sp, #28]
90006500:	9208      	str	r2, [sp, #32]
90006502:	2205      	movs	r2, #5
90006504:	480a      	ldr	r0, [pc, #40]	@ (90006530 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90006506:	e9cd 3400 	strd	r3, r4, [sp]
9000650a:	e9cd 4102 	strd	r4, r1, [sp, #8]
9000650e:	e9cd 440a 	strd	r4, r4, [sp, #40]	@ 0x28
90006512:	490b      	ldr	r1, [pc, #44]	@ (90006540 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x7c>)
90006514:	f7ff fe10 	bl	90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006518:	480a      	ldr	r0, [pc, #40]	@ (90006544 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x80>)
9000651a:	f024 f9a7 	bl	9002a86c <atexit>
9000651e:	4628      	mov	r0, r5
90006520:	f023 fe1e 	bl	9002a160 <__cxa_guard_release>
}
90006524:	4802      	ldr	r0, [pc, #8]	@ (90006530 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90006526:	b00f      	add	sp, #60	@ 0x3c
90006528:	bd30      	pop	{r4, r5, pc}
9000652a:	bf00      	nop
9000652c:	24007c70 	.word	0x24007c70
90006530:	24007c74 	.word	0x24007c74
90006534:	9002dce0 	.word	0x9002dce0
90006538:	9002efc4 	.word	0x9002efc4
9000653c:	9002efb0 	.word	0x9002efb0
90006540:	90201434 	.word	0x90201434
90006544:	900064c1 	.word	0x900064c1

90006548 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006548:	4770      	bx	lr
9000654a:	bf00      	nop

9000654c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>:
{
9000654c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000654e:	4d19      	ldr	r5, [pc, #100]	@ (900065b4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x68>)
{
90006550:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006552:	682c      	ldr	r4, [r5, #0]
90006554:	f3bf 8f5b 	dmb	ish
90006558:	f014 0401 	ands.w	r4, r4, #1
9000655c:	d002      	beq.n	90006564 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_40_4bpp;
}
9000655e:	4816      	ldr	r0, [pc, #88]	@ (900065b8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
90006560:	b00f      	add	sp, #60	@ 0x3c
90006562:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90006564:	4628      	mov	r0, r5
90006566:	f023 fdef 	bl	9002a148 <__cxa_guard_acquire>
9000656a:	2800      	cmp	r0, #0
9000656c:	d0f7      	beq.n	9000655e <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x12>
9000656e:	4913      	ldr	r1, [pc, #76]	@ (900065bc <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x70>)
90006570:	223f      	movs	r2, #63	@ 0x3f
90006572:	2328      	movs	r3, #40	@ 0x28
90006574:	9406      	str	r4, [sp, #24]
90006576:	9405      	str	r4, [sp, #20]
90006578:	9300      	str	r3, [sp, #0]
9000657a:	9402      	str	r4, [sp, #8]
9000657c:	9401      	str	r4, [sp, #4]
9000657e:	480e      	ldr	r0, [pc, #56]	@ (900065b8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
90006580:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
90006584:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
90006588:	490d      	ldr	r1, [pc, #52]	@ (900065c0 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x74>)
9000658a:	4a0e      	ldr	r2, [pc, #56]	@ (900065c4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x78>)
9000658c:	9108      	str	r1, [sp, #32]
9000658e:	2104      	movs	r1, #4
90006590:	9207      	str	r2, [sp, #28]
90006592:	2201      	movs	r2, #1
90006594:	9103      	str	r1, [sp, #12]
90006596:	9204      	str	r2, [sp, #16]
90006598:	220d      	movs	r2, #13
9000659a:	490b      	ldr	r1, [pc, #44]	@ (900065c8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x7c>)
9000659c:	f7ff fdcc 	bl	90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900065a0:	480a      	ldr	r0, [pc, #40]	@ (900065cc <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x80>)
900065a2:	f024 f963 	bl	9002a86c <atexit>
900065a6:	4628      	mov	r0, r5
900065a8:	f023 fdda 	bl	9002a160 <__cxa_guard_release>
}
900065ac:	4802      	ldr	r0, [pc, #8]	@ (900065b8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900065ae:	b00f      	add	sp, #60	@ 0x3c
900065b0:	bd30      	pop	{r4, r5, pc}
900065b2:	bf00      	nop
900065b4:	24007ca0 	.word	0x24007ca0
900065b8:	24007ca4 	.word	0x24007ca4
900065bc:	9002dce0 	.word	0x9002dce0
900065c0:	9002efb4 	.word	0x9002efb4
900065c4:	9002efc8 	.word	0x9002efc8
900065c8:	9020147c 	.word	0x9020147c
900065cc:	90006549 	.word	0x90006549

900065d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900065d0:	4770      	bx	lr
900065d2:	bf00      	nop

900065d4 <_Z23getFont_verdana_10_4bppv>:
{
900065d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900065d6:	4d18      	ldr	r5, [pc, #96]	@ (90006638 <_Z23getFont_verdana_10_4bppv+0x64>)
{
900065d8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900065da:	682c      	ldr	r4, [r5, #0]
900065dc:	f3bf 8f5b 	dmb	ish
900065e0:	f014 0401 	ands.w	r4, r4, #1
900065e4:	d002      	beq.n	900065ec <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
900065e6:	4815      	ldr	r0, [pc, #84]	@ (9000663c <_Z23getFont_verdana_10_4bppv+0x68>)
900065e8:	b00f      	add	sp, #60	@ 0x3c
900065ea:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900065ec:	4628      	mov	r0, r5
900065ee:	f023 fdab 	bl	9002a148 <__cxa_guard_acquire>
900065f2:	2800      	cmp	r0, #0
900065f4:	d0f7      	beq.n	900065e6 <_Z23getFont_verdana_10_4bppv+0x12>
900065f6:	213f      	movs	r1, #63	@ 0x3f
900065f8:	2201      	movs	r2, #1
900065fa:	230a      	movs	r3, #10
900065fc:	2004      	movs	r0, #4
900065fe:	9204      	str	r2, [sp, #16]
90006600:	9300      	str	r3, [sp, #0]
90006602:	9003      	str	r0, [sp, #12]
90006604:	480d      	ldr	r0, [pc, #52]	@ (9000663c <_Z23getFont_verdana_10_4bppv+0x68>)
90006606:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000660a:	490d      	ldr	r1, [pc, #52]	@ (90006640 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000660c:	9108      	str	r1, [sp, #32]
9000660e:	490d      	ldr	r1, [pc, #52]	@ (90006644 <_Z23getFont_verdana_10_4bppv+0x70>)
90006610:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006614:	9107      	str	r1, [sp, #28]
90006616:	490c      	ldr	r1, [pc, #48]	@ (90006648 <_Z23getFont_verdana_10_4bppv+0x74>)
90006618:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000661c:	e9cd 4401 	strd	r4, r4, [sp, #4]
90006620:	f7ff fd8a 	bl	90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006624:	4809      	ldr	r0, [pc, #36]	@ (9000664c <_Z23getFont_verdana_10_4bppv+0x78>)
90006626:	f024 f921 	bl	9002a86c <atexit>
9000662a:	4628      	mov	r0, r5
9000662c:	f023 fd98 	bl	9002a160 <__cxa_guard_release>
}
90006630:	4802      	ldr	r0, [pc, #8]	@ (9000663c <_Z23getFont_verdana_10_4bppv+0x68>)
90006632:	b00f      	add	sp, #60	@ 0x3c
90006634:	bd30      	pop	{r4, r5, pc}
90006636:	bf00      	nop
90006638:	24007cd0 	.word	0x24007cd0
9000663c:	24007cd4 	.word	0x24007cd4
90006640:	9002efb8 	.word	0x9002efb8
90006644:	9002efcc 	.word	0x9002efcc
90006648:	90201534 	.word	0x90201534
9000664c:	900065d1 	.word	0x900065d1

90006650 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006650:	4770      	bx	lr
90006652:	bf00      	nop

90006654 <_Z23getFont_verdana_20_4bppv>:
{
90006654:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006656:	4d18      	ldr	r5, [pc, #96]	@ (900066b8 <_Z23getFont_verdana_20_4bppv+0x64>)
{
90006658:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000665a:	682c      	ldr	r4, [r5, #0]
9000665c:	f3bf 8f5b 	dmb	ish
90006660:	f014 0401 	ands.w	r4, r4, #1
90006664:	d002      	beq.n	9000666c <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90006666:	4815      	ldr	r0, [pc, #84]	@ (900066bc <_Z23getFont_verdana_20_4bppv+0x68>)
90006668:	b00f      	add	sp, #60	@ 0x3c
9000666a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000666c:	4628      	mov	r0, r5
9000666e:	f023 fd6b 	bl	9002a148 <__cxa_guard_acquire>
90006672:	2800      	cmp	r0, #0
90006674:	d0f7      	beq.n	90006666 <_Z23getFont_verdana_20_4bppv+0x12>
90006676:	213f      	movs	r1, #63	@ 0x3f
90006678:	2201      	movs	r2, #1
9000667a:	2314      	movs	r3, #20
9000667c:	2004      	movs	r0, #4
9000667e:	9204      	str	r2, [sp, #16]
90006680:	9300      	str	r3, [sp, #0]
90006682:	9003      	str	r0, [sp, #12]
90006684:	480d      	ldr	r0, [pc, #52]	@ (900066bc <_Z23getFont_verdana_20_4bppv+0x68>)
90006686:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000668a:	490d      	ldr	r1, [pc, #52]	@ (900066c0 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000668c:	9108      	str	r1, [sp, #32]
9000668e:	490d      	ldr	r1, [pc, #52]	@ (900066c4 <_Z23getFont_verdana_20_4bppv+0x70>)
90006690:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006694:	9107      	str	r1, [sp, #28]
90006696:	490c      	ldr	r1, [pc, #48]	@ (900066c8 <_Z23getFont_verdana_20_4bppv+0x74>)
90006698:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000669c:	e9cd 4401 	strd	r4, r4, [sp, #4]
900066a0:	f7ff fd4a 	bl	90006138 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900066a4:	4809      	ldr	r0, [pc, #36]	@ (900066cc <_Z23getFont_verdana_20_4bppv+0x78>)
900066a6:	f024 f8e1 	bl	9002a86c <atexit>
900066aa:	4628      	mov	r0, r5
900066ac:	f023 fd58 	bl	9002a160 <__cxa_guard_release>
}
900066b0:	4802      	ldr	r0, [pc, #8]	@ (900066bc <_Z23getFont_verdana_20_4bppv+0x68>)
900066b2:	b00f      	add	sp, #60	@ 0x3c
900066b4:	bd30      	pop	{r4, r5, pc}
900066b6:	bf00      	nop
900066b8:	24007d00 	.word	0x24007d00
900066bc:	24007d04 	.word	0x24007d04
900066c0:	9002efbc 	.word	0x9002efbc
900066c4:	9002efd0 	.word	0x9002efd0
900066c8:	90201544 	.word	0x90201544
900066cc:	90006651 	.word	0x90006651

900066d0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900066d0:	2000      	movs	r0, #0
900066d2:	4770      	bx	lr

900066d4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900066d4:	2000      	movs	r0, #0
900066d6:	4770      	bx	lr

900066d8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900066d8:	b40e      	push	{r1, r2, r3}
900066da:	b500      	push	{lr}
900066dc:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900066de:	2100      	movs	r1, #0
{
900066e0:	ab03      	add	r3, sp, #12
900066e2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900066e6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900066e8:	f011 ff94 	bl	90018614 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900066ec:	b002      	add	sp, #8
900066ee:	f85d eb04 	ldr.w	lr, [sp], #4
900066f2:	b003      	add	sp, #12
900066f4:	4770      	bx	lr
900066f6:	bf00      	nop

900066f8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900066f8:	b40c      	push	{r2, r3}
900066fa:	b500      	push	{lr}
900066fc:	b083      	sub	sp, #12
900066fe:	ab04      	add	r3, sp, #16
90006700:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90006704:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90006706:	f011 ff85 	bl	90018614 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000670a:	b003      	add	sp, #12
9000670c:	f85d eb04 	ldr.w	lr, [sp], #4
90006710:	b002      	add	sp, #8
90006712:	4770      	bx	lr

90006714 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90006714:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90006716:	b510      	push	{r4, lr}
90006718:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000671a:	b133      	cbz	r3, 9000672a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000671c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000671e:	b39b      	cbz	r3, 90006788 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90006720:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90006722:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90006726:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90006728:	b923      	cbnz	r3, 90006734 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000672a:	4620      	mov	r0, r4
}
9000672c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90006730:	f013 bcfa 	b.w	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90006734:	f013 fdf6 	bl	9001a324 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90006738:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000673a:	2b01      	cmp	r3, #1
9000673c:	d92a      	bls.n	90006794 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000673e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90006740:	1c53      	adds	r3, r2, #1
90006742:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90006744:	2b09      	cmp	r3, #9
90006746:	d812      	bhi.n	9000676e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90006748:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000674c:	f640 103f 	movw	r0, #2367	@ 0x93f
90006750:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90006752:	4281      	cmp	r1, r0
90006754:	d1e9      	bne.n	9000672a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006756:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000675a:	0052      	lsls	r2, r2, #1
9000675c:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000675e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90006762:	4422      	add	r2, r4
90006764:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90006768:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
9000676a:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
9000676c:	e7dd      	b.n	9000672a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000676e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90006772:	f640 113f 	movw	r1, #2367	@ 0x93f
90006776:	89db      	ldrh	r3, [r3, #14]
90006778:	428b      	cmp	r3, r1
9000677a:	d1d6      	bne.n	9000672a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000677c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006780:	2300      	movs	r3, #0
90006782:	0052      	lsls	r2, r2, #1
90006784:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90006786:	e7ea      	b.n	9000675e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90006788:	4b05      	ldr	r3, [pc, #20]	@ (900067a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000678a:	21c5      	movs	r1, #197	@ 0xc5
9000678c:	4a05      	ldr	r2, [pc, #20]	@ (900067a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000678e:	4806      	ldr	r0, [pc, #24]	@ (900067a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006790:	f024 f84e 	bl	9002a830 <__assert_func>
            assert(offset < used);
90006794:	4b05      	ldr	r3, [pc, #20]	@ (900067ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90006796:	21cb      	movs	r1, #203	@ 0xcb
90006798:	4a05      	ldr	r2, [pc, #20]	@ (900067b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000679a:	4803      	ldr	r0, [pc, #12]	@ (900067a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000679c:	f024 f848 	bl	9002a830 <__assert_func>
900067a0:	9002d3a8 	.word	0x9002d3a8
900067a4:	9002d3b4 	.word	0x9002d3b4
900067a8:	9002d460 	.word	0x9002d460
900067ac:	9002d4ac 	.word	0x9002d4ac
900067b0:	9002d4bc 	.word	0x9002d4bc

900067b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900067b4:	f013 bc81 	b.w	9001a0ba <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900067b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900067b8:	b510      	push	{r4, lr}
900067ba:	b086      	sub	sp, #24
900067bc:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900067c0:	ac0a      	add	r4, sp, #40	@ 0x28
{
900067c2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900067c6:	461a      	mov	r2, r3
900067c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900067ca:	4661      	mov	r1, ip
900067cc:	9401      	str	r4, [sp, #4]
900067ce:	9300      	str	r3, [sp, #0]
900067d0:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900067d2:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900067d4:	f010 f9e2 	bl	90016b9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900067d8:	b006      	add	sp, #24
900067da:	bd10      	pop	{r4, pc}

900067dc <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900067dc:	b9e0      	cbnz	r0, 90006818 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900067de:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900067e0:	4b13      	ldr	r3, [pc, #76]	@ (90006830 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900067e2:	681b      	ldr	r3, [r3, #0]
900067e4:	b1cb      	cbz	r3, 9000681a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900067e6:	4c13      	ldr	r4, [pc, #76]	@ (90006834 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900067e8:	4813      	ldr	r0, [pc, #76]	@ (90006838 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900067ea:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900067ee:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900067f0:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900067f2:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900067f4:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900067f6:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900067f8:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900067fa:	4b10      	ldr	r3, [pc, #64]	@ (9000683c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900067fc:	2200      	movs	r2, #0
900067fe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90006800:	f000 f83a 	bl	90006878 <_ZN17TypedTextDatabase8getFontsEv>
90006804:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90006806:	f000 f835 	bl	90006874 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000680a:	4b0d      	ldr	r3, [pc, #52]	@ (90006840 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
9000680c:	4a0d      	ldr	r2, [pc, #52]	@ (90006844 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000680e:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90006810:	4b0d      	ldr	r3, [pc, #52]	@ (90006848 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90006812:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90006814:	8018      	strh	r0, [r3, #0]
    }
}
90006816:	bd38      	pop	{r3, r4, r5, pc}
90006818:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000681a:	4c0c      	ldr	r4, [pc, #48]	@ (9000684c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000681c:	4905      	ldr	r1, [pc, #20]	@ (90006834 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000681e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90006820:	480b      	ldr	r0, [pc, #44]	@ (90006850 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90006822:	4b05      	ldr	r3, [pc, #20]	@ (90006838 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006824:	4a0b      	ldr	r2, [pc, #44]	@ (90006854 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90006826:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90006828:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000682a:	2c00      	cmp	r4, #0
9000682c:	d1e5      	bne.n	900067fa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000682e:	bd38      	pop	{r3, r4, r5, pc}
90006830:	24007d3c 	.word	0x24007d3c
90006834:	24007d34 	.word	0x24007d34
90006838:	24007d30 	.word	0x24007d30
9000683c:	24007d38 	.word	0x24007d38
90006840:	24021dbc 	.word	0x24021dbc
90006844:	24021dc4 	.word	0x24021dc4
90006848:	24021dc0 	.word	0x24021dc0
9000684c:	902015e4 	.word	0x902015e4
90006850:	90201578 	.word	0x90201578
90006854:	90201554 	.word	0x90201554

90006858 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90006858:	4a04      	ldr	r2, [pc, #16]	@ (9000686c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000685a:	4b05      	ldr	r3, [pc, #20]	@ (90006870 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
9000685c:	6812      	ldr	r2, [r2, #0]
9000685e:	681b      	ldr	r3, [r3, #0]
90006860:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90006864:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90006868:	4770      	bx	lr
9000686a:	bf00      	nop
9000686c:	24007d30 	.word	0x24007d30
90006870:	24007d34 	.word	0x24007d34

90006874 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90006874:	2009      	movs	r0, #9
90006876:	4770      	bx	lr

90006878 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90006878:	4800      	ldr	r0, [pc, #0]	@ (9000687c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000687a:	4770      	bx	lr
9000687c:	24007d40 	.word	0x24007d40

90006880 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90006880:	b510      	push	{r4, lr}
};
90006882:	4c08      	ldr	r4, [pc, #32]	@ (900068a4 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
    &(getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()),
90006884:	f7ff fe1e 	bl	900064c4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>
};
90006888:	6020      	str	r0, [r4, #0]
    &(getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()),
9000688a:	f7ff fe5f 	bl	9000654c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>
};
9000688e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90006890:	f7ff fea0 	bl	900065d4 <_Z23getFont_verdana_10_4bppv>
};
90006894:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_20_4bpp()),
90006896:	f7ff fedd 	bl	90006654 <_Z23getFont_verdana_20_4bppv>
};
9000689a:	60e0      	str	r0, [r4, #12]
    &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp())
9000689c:	f7ff fdce 	bl	9000643c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>
};
900068a0:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
900068a2:	bd10      	pop	{r4, pc}
900068a4:	24007d40 	.word	0x24007d40

900068a8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900068a8:	b410      	push	{r4}
    pointArray = 0;
900068aa:	2400      	movs	r4, #0
900068ac:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900068ae:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900068b0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900068b2:	601c      	str	r4, [r3, #0]
}
900068b4:	f85d 4b04 	ldr.w	r4, [sp], #4
900068b8:	4770      	bx	lr
900068ba:	bf00      	nop

900068bc <_ZN19DataScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataScreenPresenter() {}
900068bc:	4770      	bx	lr
900068be:	bf00      	nop

900068c0 <_ZThn4_N19DataScreenPresenterD1Ev>:
900068c0:	3804      	subs	r0, #4
900068c2:	4770      	bx	lr

900068c4 <_ZN19DataScreenPresenter10deactivateEv>:
}

void DataScreenPresenter::activate()
{

}
900068c4:	4770      	bx	lr
900068c6:	bf00      	nop

900068c8 <_ZN19DataScreenPresenter9Update_HREl>:

}

void DataScreenPresenter::Update_HR(int32_t hr)
{
	view.Update_HR(hr);
900068c8:	68c0      	ldr	r0, [r0, #12]
900068ca:	6803      	ldr	r3, [r0, #0]
900068cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900068ce:	4718      	bx	r3

900068d0 <_ZN19DataScreenPresenter11Update_SpO2Eh>:
}

void DataScreenPresenter::Update_SpO2(uint8_t sp02)
{
	view.Update_SpO2(sp02);
900068d0:	68c0      	ldr	r0, [r0, #12]
900068d2:	6803      	ldr	r3, [r0, #0]
900068d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900068d6:	4718      	bx	r3

900068d8 <_ZN19DataScreenPresenterD0Ev>:
900068d8:	b510      	push	{r4, lr}
900068da:	4604      	mov	r4, r0
900068dc:	2110      	movs	r1, #16
900068de:	f023 fc31 	bl	9002a144 <_ZdlPvj>
900068e2:	4620      	mov	r0, r4
900068e4:	bd10      	pop	{r4, pc}
900068e6:	bf00      	nop

900068e8 <_ZThn4_N19DataScreenPresenterD0Ev>:
900068e8:	b510      	push	{r4, lr}
900068ea:	1f04      	subs	r4, r0, #4
900068ec:	2110      	movs	r1, #16
900068ee:	4620      	mov	r0, r4
900068f0:	f023 fc28 	bl	9002a144 <_ZdlPvj>
900068f4:	4620      	mov	r0, r4
900068f6:	bd10      	pop	{r4, pc}

900068f8 <_ZThn4_N19DataScreenPresenter9Update_HREl>:

    virtual void Update_HR(int32_t hr);
900068f8:	6880      	ldr	r0, [r0, #8]
900068fa:	6803      	ldr	r3, [r0, #0]
900068fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900068fe:	4718      	bx	r3

90006900 <_ZThn4_N19DataScreenPresenter11Update_SpO2Eh>:
	virtual void Update_SpO2(uint8_t sp02);
90006900:	6880      	ldr	r0, [r0, #8]
90006902:	6803      	ldr	r3, [r0, #0]
90006904:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90006906:	4718      	bx	r3

90006908 <_ZN19DataScreenPresenterC1ER14DataScreenView>:
DataScreenPresenter::DataScreenPresenter(DataScreenView& v)
90006908:	b410      	push	{r4}
    : view(v)
9000690a:	4a05      	ldr	r2, [pc, #20]	@ (90006920 <_ZN19DataScreenPresenterC1ER14DataScreenView+0x18>)
    ModelListener() : model(0) {}
9000690c:	2400      	movs	r4, #0
9000690e:	60c1      	str	r1, [r0, #12]
90006910:	6084      	str	r4, [r0, #8]
90006912:	f102 0420 	add.w	r4, r2, #32
90006916:	6002      	str	r2, [r0, #0]
90006918:	6044      	str	r4, [r0, #4]
}
9000691a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000691e:	4770      	bx	lr
90006920:	9002e0fc 	.word	0x9002e0fc

90006924 <_ZN14DataScreenView14tearDownScreenEv>:
}

void DataScreenView::tearDownScreen()
{
    DataScreenViewBase::tearDownScreen();
}
90006924:	4770      	bx	lr
90006926:	bf00      	nop

90006928 <_ZN14DataScreenViewD1Ev>:

class DataScreenView : public DataScreenViewBase
{
public:
    DataScreenView();
    virtual ~DataScreenView() {}
90006928:	4b03      	ldr	r3, [pc, #12]	@ (90006938 <_ZN14DataScreenViewD1Ev+0x10>)
9000692a:	b510      	push	{r4, lr}
9000692c:	4604      	mov	r4, r0
9000692e:	6003      	str	r3, [r0, #0]
90006930:	f7fe fde2 	bl	900054f8 <_ZN18DataScreenViewBaseD1Ev>
90006934:	4620      	mov	r0, r4
90006936:	bd10      	pop	{r4, pc}
90006938:	9002e134 	.word	0x9002e134

9000693c <_ZN14DataScreenViewD0Ev>:
9000693c:	4b06      	ldr	r3, [pc, #24]	@ (90006958 <_ZN14DataScreenViewD0Ev+0x1c>)
9000693e:	b510      	push	{r4, lr}
90006940:	4604      	mov	r4, r0
90006942:	6003      	str	r3, [r0, #0]
90006944:	f7fe fdd8 	bl	900054f8 <_ZN18DataScreenViewBaseD1Ev>
90006948:	f44f 7121 	mov.w	r1, #644	@ 0x284
9000694c:	4620      	mov	r0, r4
9000694e:	f023 fbf9 	bl	9002a144 <_ZdlPvj>
90006952:	4620      	mov	r0, r4
90006954:	bd10      	pop	{r4, pc}
90006956:	bf00      	nop
90006958:	9002e134 	.word	0x9002e134

9000695c <_ZN14DataScreenViewC1Ev>:
DataScreenView::DataScreenView()
9000695c:	b510      	push	{r4, lr}
9000695e:	4604      	mov	r4, r0
90006960:	f7fe fe90 	bl	90005684 <_ZN18DataScreenViewBaseC1Ev>
90006964:	4b01      	ldr	r3, [pc, #4]	@ (9000696c <_ZN14DataScreenViewC1Ev+0x10>)
}
90006966:	4620      	mov	r0, r4
DataScreenView::DataScreenView()
90006968:	6023      	str	r3, [r4, #0]
}
9000696a:	bd10      	pop	{r4, pc}
9000696c:	9002e134 	.word	0x9002e134

90006970 <_ZN14DataScreenView11setupScreenEv>:
    DataScreenViewBase::setupScreen();
90006970:	f7fe bdc4 	b.w	900054fc <_ZN18DataScreenViewBase11setupScreenEv>

90006974 <_ZN14DataScreenView9Update_HREl>:

void DataScreenView::Update_HR(int32_t hr)
{
90006974:	b530      	push	{r4, r5, lr}
90006976:	460c      	mov	r4, r1
90006978:	b083      	sub	sp, #12
9000697a:	4605      	mov	r5, r0
	Unicode::snprintf(textArea4Buffer, TEXTAREA4_SIZE, "%ld", hr);
9000697c:	4a19      	ldr	r2, [pc, #100]	@ (900069e4 <_ZN14DataScreenView9Update_HREl+0x70>)
9000697e:	4623      	mov	r3, r4
90006980:	2105      	movs	r1, #5
90006982:	f500 701c 	add.w	r0, r0, #624	@ 0x270
90006986:	f014 fa75 	bl	9001ae74 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	int32_t framesPerBeat = 30;
	uint32_t tickInterval = 60000u / ((hr > 0 ? hr : 1) * framesPerBeat);
9000698a:	2c01      	cmp	r4, #1
9000698c:	f64e 2360 	movw	r3, #60000	@ 0xea60
	smoothedInterval = smoothedInterval*0.9f + tickInterval*0.1f;
90006990:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 900069e8 <_ZN14DataScreenView9Update_HREl+0x74>
	uint32_t tickInterval = 60000u / ((hr > 0 ? hr : 1) * framesPerBeat);
90006994:	bfb8      	it	lt
90006996:	2401      	movlt	r4, #1
	smoothedInterval = smoothedInterval*0.9f + tickInterval*0.1f;
90006998:	4a14      	ldr	r2, [pc, #80]	@ (900069ec <_ZN14DataScreenView9Update_HREl+0x78>)
9000699a:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 900069f0 <_ZN14DataScreenView9Update_HREl+0x7c>
	animatedImage1.setUpdateTicksInterval(smoothedInterval);
9000699e:	f105 00e0 	add.w	r0, r5, #224	@ 0xe0
	uint32_t tickInterval = 60000u / ((hr > 0 ? hr : 1) * framesPerBeat);
900069a2:	ebc4 1404 	rsb	r4, r4, r4, lsl #4
	smoothedInterval = smoothedInterval*0.9f + tickInterval*0.1f;
900069a6:	edd2 6a00 	vldr	s13, [r2]
	uint32_t tickInterval = 60000u / ((hr > 0 ? hr : 1) * framesPerBeat);
900069aa:	0064      	lsls	r4, r4, #1
900069ac:	fbb3 f3f4 	udiv	r3, r3, r4
900069b0:	ee07 3a90 	vmov	s15, r3
	smoothedInterval = smoothedInterval*0.9f + tickInterval*0.1f;
900069b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900069b8:	ee67 7a86 	vmul.f32	s15, s15, s12
900069bc:	eee6 7a87 	vfma.f32	s15, s13, s14
	animatedImage1.setUpdateTicksInterval(smoothedInterval);
900069c0:	eebc 7ae7 	vcvt.u32.f32	s14, s15
	smoothedInterval = smoothedInterval*0.9f + tickInterval*0.1f;
900069c4:	edc2 7a00 	vstr	s15, [r2]
	animatedImage1.setUpdateTicksInterval(smoothedInterval);
900069c8:	ed8d 7a01 	vstr	s14, [sp, #4]
900069cc:	f89d 1004 	ldrb.w	r1, [sp, #4]
900069d0:	f00d fb55 	bl	9001407e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
	textArea4.invalidate();
900069d4:	f505 70ec 	add.w	r0, r5, #472	@ 0x1d8
}
900069d8:	b003      	add	sp, #12
900069da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	textArea4.invalidate();
900069de:	f011 bf44 	b.w	9001886a <_ZNK8touchgfx8Drawable10invalidateEv>
900069e2:	bf00      	nop
900069e4:	9002d590 	.word	0x9002d590
900069e8:	3dcccccd 	.word	0x3dcccccd
900069ec:	24007d54 	.word	0x24007d54
900069f0:	3f666666 	.word	0x3f666666

900069f4 <_ZN14DataScreenView11Update_SpO2Eh>:

void DataScreenView::Update_SpO2(uint8_t sp02)
{
900069f4:	b538      	push	{r3, r4, r5, lr}

	Unicode::snprintf(textArea5Buffer, TEXTAREA4_SIZE, "%u", sp02);
900069f6:	f200 257a 	addw	r5, r0, #634	@ 0x27a
{
900069fa:	4604      	mov	r4, r0
900069fc:	460b      	mov	r3, r1
	Unicode::snprintf(textArea5Buffer, TEXTAREA4_SIZE, "%u", sp02);
900069fe:	4a06      	ldr	r2, [pc, #24]	@ (90006a18 <_ZN14DataScreenView11Update_SpO2Eh+0x24>)
90006a00:	4628      	mov	r0, r5
90006a02:	2105      	movs	r1, #5
90006a04:	f014 fa36 	bl	9001ae74 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea5.setWildcard(textArea5Buffer);
	textArea5.invalidate();
90006a08:	f504 7009 	add.w	r0, r4, #548	@ 0x224
90006a0c:	f8c4 526c 	str.w	r5, [r4, #620]	@ 0x26c
}
90006a10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textArea5.invalidate();
90006a14:	f011 bf29 	b.w	9001886a <_ZNK8touchgfx8Drawable10invalidateEv>
90006a18:	9002d594 	.word	0x9002d594

90006a1c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006a1c:	4770      	bx	lr
90006a1e:	bf00      	nop

90006a20 <_ZN19FrontendApplicationD0Ev>:
90006a20:	b510      	push	{r4, lr}
90006a22:	4604      	mov	r4, r0
90006a24:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006a28:	f023 fb8c 	bl	9002a144 <_ZdlPvj>
90006a2c:	4620      	mov	r0, r4
90006a2e:	bd10      	pop	{r4, pc}

90006a30 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006a30:	b510      	push	{r4, lr}
90006a32:	4604      	mov	r4, r0
    {
        model.tick();
90006a34:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006a38:	f000 f816 	bl	90006a68 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006a3c:	4620      	mov	r0, r4
    }
90006a3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006a42:	f010 bdab 	b.w	9001759c <_ZN8touchgfx11Application15handleTickEventEv>
90006a46:	bf00      	nop

90006a48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006a48:	b510      	push	{r4, lr}
90006a4a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006a4c:	f7ff fac4 	bl	90005fd8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006a50:	4b01      	ldr	r3, [pc, #4]	@ (90006a58 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006a52:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006a54:	6023      	str	r3, [r4, #0]
}
90006a56:	bd10      	pop	{r4, pc}
90006a58:	9002e178 	.word	0x9002e178

90006a5c <_ZN5ModelC1Ev>:
		int32_t hr;
		uint8_t sp02;
	};
}

Model::Model() : modelListener(0)
90006a5c:	2200      	movs	r2, #0
90006a5e:	e9c0 2200 	strd	r2, r2, [r0]
90006a62:	7202      	strb	r2, [r0, #8]
{

}
90006a64:	4770      	bx	lr
90006a66:	bf00      	nop

90006a68 <_ZN5Model4tickEv>:

void Model::tick()
{
90006a68:	b510      	push	{r4, lr}
	HealthData healthData = {0};
90006a6a:	2300      	movs	r3, #0
{
90006a6c:	b082      	sub	sp, #8
	osStatus status = osMessageQueueGet(dataQueueHandle, &healthData, 0, 0);
90006a6e:	4a0d      	ldr	r2, [pc, #52]	@ (90006aa4 <_ZN5Model4tickEv+0x3c>)
{
90006a70:	4604      	mov	r4, r0
	osStatus status = osMessageQueueGet(dataQueueHandle, &healthData, 0, 0);
90006a72:	4669      	mov	r1, sp
	HealthData healthData = {0};
90006a74:	9300      	str	r3, [sp, #0]
	osStatus status = osMessageQueueGet(dataQueueHandle, &healthData, 0, 0);
90006a76:	6810      	ldr	r0, [r2, #0]
90006a78:	461a      	mov	r2, r3
	HealthData healthData = {0};
90006a7a:	9301      	str	r3, [sp, #4]
	osStatus status = osMessageQueueGet(dataQueueHandle, &healthData, 0, 0);
90006a7c:	f007 fe26 	bl	9000e6cc <osMessageQueueGet>
	if (status == osOK){
90006a80:	b968      	cbnz	r0, 90006a9e <_ZN5Model4tickEv+0x36>
		hr = healthData.hr;
		sp02 = healthData.sp02;
		modelListener->Update_HR(hr);
90006a82:	6820      	ldr	r0, [r4, #0]
		sp02 = healthData.sp02;
90006a84:	f89d 3004 	ldrb.w	r3, [sp, #4]
		hr = healthData.hr;
90006a88:	9900      	ldr	r1, [sp, #0]
		sp02 = healthData.sp02;
90006a8a:	7223      	strb	r3, [r4, #8]
		modelListener->Update_HR(hr);
90006a8c:	6803      	ldr	r3, [r0, #0]
90006a8e:	689b      	ldr	r3, [r3, #8]
		hr = healthData.hr;
90006a90:	6061      	str	r1, [r4, #4]
		modelListener->Update_HR(hr);
90006a92:	4798      	blx	r3
		modelListener->Update_SpO2(sp02);
90006a94:	6820      	ldr	r0, [r4, #0]
90006a96:	7a21      	ldrb	r1, [r4, #8]
90006a98:	6803      	ldr	r3, [r0, #0]
90006a9a:	68db      	ldr	r3, [r3, #12]
90006a9c:	4798      	blx	r3
	}
}
90006a9e:	b002      	add	sp, #8
90006aa0:	bd10      	pop	{r4, pc}
90006aa2:	bf00      	nop
90006aa4:	24007850 	.word	0x24007850

90006aa8 <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
90006aa8:	4770      	bx	lr
90006aaa:	bf00      	nop

90006aac <_ZThn4_N20StartScreenPresenterD1Ev>:
90006aac:	3804      	subs	r0, #4
90006aae:	4770      	bx	lr

90006ab0 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
90006ab0:	4770      	bx	lr
90006ab2:	bf00      	nop

90006ab4 <_ZN20StartScreenPresenter9Update_HREl>:
}

void StartScreenPresenter::Update_HR(int32_t hr)
{

}
90006ab4:	4770      	bx	lr
90006ab6:	bf00      	nop

90006ab8 <_ZN20StartScreenPresenter11Update_SpO2Eh>:

void StartScreenPresenter::Update_SpO2(uint8_t sp02)
{

}
90006ab8:	4770      	bx	lr
90006aba:	bf00      	nop

90006abc <_ZN20StartScreenPresenterD0Ev>:
90006abc:	b510      	push	{r4, lr}
90006abe:	4604      	mov	r4, r0
90006ac0:	2110      	movs	r1, #16
90006ac2:	f023 fb3f 	bl	9002a144 <_ZdlPvj>
90006ac6:	4620      	mov	r0, r4
90006ac8:	bd10      	pop	{r4, pc}
90006aca:	bf00      	nop

90006acc <_ZThn4_N20StartScreenPresenterD0Ev>:
90006acc:	b510      	push	{r4, lr}
90006ace:	1f04      	subs	r4, r0, #4
90006ad0:	2110      	movs	r1, #16
90006ad2:	4620      	mov	r0, r4
90006ad4:	f023 fb36 	bl	9002a144 <_ZdlPvj>
90006ad8:	4620      	mov	r0, r4
90006ada:	bd10      	pop	{r4, pc}

90006adc <_ZThn4_N20StartScreenPresenter9Update_HREl>:

    virtual void Update_HR(int32_t hr);
90006adc:	4770      	bx	lr
90006ade:	bf00      	nop

90006ae0 <_ZThn4_N20StartScreenPresenter11Update_SpO2Eh>:
	virtual void Update_SpO2(uint8_t sp02);
90006ae0:	4770      	bx	lr
90006ae2:	bf00      	nop

90006ae4 <_ZN20StartScreenPresenterC1ER15StartScreenView>:
StartScreenPresenter::StartScreenPresenter(StartScreenView& v)
90006ae4:	b410      	push	{r4}
    : view(v)
90006ae6:	4a05      	ldr	r2, [pc, #20]	@ (90006afc <_ZN20StartScreenPresenterC1ER15StartScreenView+0x18>)
90006ae8:	2400      	movs	r4, #0
90006aea:	60c1      	str	r1, [r0, #12]
90006aec:	6084      	str	r4, [r0, #8]
90006aee:	f102 0420 	add.w	r4, r2, #32
90006af2:	6002      	str	r2, [r0, #0]
90006af4:	6044      	str	r4, [r0, #4]
}
90006af6:	f85d 4b04 	ldr.w	r4, [sp], #4
90006afa:	4770      	bx	lr
90006afc:	9002e1cc 	.word	0x9002e1cc

90006b00 <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
90006b00:	4770      	bx	lr
90006b02:	bf00      	nop

90006b04 <_ZN15StartScreenView9Update_HREl>:

void StartScreenView::Update_HR(int32_t hr)
{

}
90006b04:	4770      	bx	lr
90006b06:	bf00      	nop

90006b08 <_ZN15StartScreenView11Update_SpO2Eh>:

void StartScreenView::Update_SpO2(uint8_t sp02)
{

}
90006b08:	4770      	bx	lr
90006b0a:	bf00      	nop

90006b0c <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
90006b0c:	4b03      	ldr	r3, [pc, #12]	@ (90006b1c <_ZN15StartScreenViewD1Ev+0x10>)
90006b0e:	b510      	push	{r4, lr}
90006b10:	4604      	mov	r4, r0
90006b12:	6003      	str	r3, [r0, #0]
90006b14:	f7ff fb42 	bl	9000619c <_ZN19StartScreenViewBaseD1Ev>
90006b18:	4620      	mov	r0, r4
90006b1a:	bd10      	pop	{r4, pc}
90006b1c:	9002e204 	.word	0x9002e204

90006b20 <_ZN15StartScreenViewD0Ev>:
90006b20:	4b06      	ldr	r3, [pc, #24]	@ (90006b3c <_ZN15StartScreenViewD0Ev+0x1c>)
90006b22:	b510      	push	{r4, lr}
90006b24:	4604      	mov	r4, r0
90006b26:	6003      	str	r3, [r0, #0]
90006b28:	f7ff fb38 	bl	9000619c <_ZN19StartScreenViewBaseD1Ev>
90006b2c:	f44f 719c 	mov.w	r1, #312	@ 0x138
90006b30:	4620      	mov	r0, r4
90006b32:	f023 fb07 	bl	9002a144 <_ZdlPvj>
90006b36:	4620      	mov	r0, r4
90006b38:	bd10      	pop	{r4, pc}
90006b3a:	bf00      	nop
90006b3c:	9002e204 	.word	0x9002e204

90006b40 <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
90006b40:	b510      	push	{r4, lr}
90006b42:	4604      	mov	r4, r0
90006b44:	f7ff fb68 	bl	90006218 <_ZN19StartScreenViewBaseC1Ev>
90006b48:	4b01      	ldr	r3, [pc, #4]	@ (90006b50 <_ZN15StartScreenViewC1Ev+0x10>)
}
90006b4a:	4620      	mov	r0, r4
StartScreenView::StartScreenView()
90006b4c:	6023      	str	r3, [r4, #0]
}
90006b4e:	bd10      	pop	{r4, pc}
90006b50:	9002e204 	.word	0x9002e204

90006b54 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
90006b54:	f7ff bb24 	b.w	900061a0 <_ZN19StartScreenViewBase11setupScreenEv>

90006b58 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006b58:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006b5c:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006b5e:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006b62:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006b66:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006b68:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006b6a:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006b6e:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006b72:	4770      	bx	lr

90006b74 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006b74:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006b78:	2b01      	cmp	r3, #1
90006b7a:	d102      	bne.n	90006b82 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006b7c:	2300      	movs	r3, #0
90006b7e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006b82:	2000      	movs	r0, #0
90006b84:	4770      	bx	lr
90006b86:	bf00      	nop

90006b88 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006b88:	2000      	movs	r0, #0
90006b8a:	4770      	bx	lr

90006b8c <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006b8c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006b8e:	6904      	ldr	r4, [r0, #16]
90006b90:	8900      	ldrh	r0, [r0, #8]
90006b92:	46a4      	mov	ip, r4
}
90006b94:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006b98:	4760      	bx	ip
90006b9a:	bf00      	nop

90006b9c <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006b9c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006b9e:	68c4      	ldr	r4, [r0, #12]
90006ba0:	8900      	ldrh	r0, [r0, #8]
90006ba2:	46a4      	mov	ip, r4
}
90006ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006ba8:	4760      	bx	ip
90006baa:	bf00      	nop

90006bac <FT5336_GestureConfig>:
{
90006bac:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006bae:	f100 0518 	add.w	r5, r0, #24
{
90006bb2:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006bb4:	7809      	ldrb	r1, [r1, #0]
90006bb6:	4628      	mov	r0, r5
90006bb8:	f000 f96c 	bl	90006e94 <ft5336_radian_value>
90006bbc:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006bbe:	7931      	ldrb	r1, [r6, #4]
90006bc0:	4628      	mov	r0, r5
90006bc2:	f000 f975 	bl	90006eb0 <ft5336_offset_left_right>
90006bc6:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006bc8:	7a31      	ldrb	r1, [r6, #8]
90006bca:	4628      	mov	r0, r5
90006bcc:	f000 f97e 	bl	90006ecc <ft5336_offset_up_down>
90006bd0:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006bd2:	7b31      	ldrb	r1, [r6, #12]
90006bd4:	4628      	mov	r0, r5
90006bd6:	f000 f987 	bl	90006ee8 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006bda:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006bdc:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006bde:	4628      	mov	r0, r5
90006be0:	f000 f990 	bl	90006f04 <ft5336_distance_up_down>
90006be4:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006be6:	7d31      	ldrb	r1, [r6, #20]
90006be8:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006bea:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006bec:	f000 f998 	bl	90006f20 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006bf0:	42c4      	cmn	r4, r0
}
90006bf2:	bf14      	ite	ne
90006bf4:	f04f 30ff 	movne.w	r0, #4294967295
90006bf8:	2000      	moveq	r0, #0
90006bfa:	bd70      	pop	{r4, r5, r6, pc}

90006bfc <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006bfc:	3018      	adds	r0, #24
90006bfe:	f000 b9ab 	b.w	90006f58 <ft5336_chip_id>
90006c02:	bf00      	nop

90006c04 <FT5336_GetState>:
{
90006c04:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006c06:	f100 0518 	add.w	r5, r0, #24
{
90006c0a:	b083      	sub	sp, #12
90006c0c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006c0e:	4628      	mov	r0, r5
90006c10:	a901      	add	r1, sp, #4
90006c12:	f000 f931 	bl	90006e78 <ft5336_td_status>
90006c16:	bb10      	cbnz	r0, 90006c5e <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006c18:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006c1c:	2b05      	cmp	r3, #5
90006c1e:	bf94      	ite	ls
90006c20:	4619      	movls	r1, r3
90006c22:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006c24:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006c26:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006c28:	4628      	mov	r0, r5
90006c2a:	2103      	movs	r1, #3
90006c2c:	eb0d 0203 	add.w	r2, sp, r3
90006c30:	f000 f910 	bl	90006e54 <ft5336_read_reg>
90006c34:	b9b0      	cbnz	r0, 90006c64 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006c36:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006c3a:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006c3e:	0212      	lsls	r2, r2, #8
90006c40:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006c44:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006c46:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006c4a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006c4e:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006c50:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006c54:	430b      	orrs	r3, r1
90006c56:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006c5a:	b003      	add	sp, #12
90006c5c:	bd30      	pop	{r4, r5, pc}
90006c5e:	f04f 31ff 	mov.w	r1, #4294967295
90006c62:	e7df      	b.n	90006c24 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006c64:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006c68:	e7f7      	b.n	90006c5a <FT5336_GetState+0x56>
90006c6a:	bf00      	nop

90006c6c <FT5336_GetMultiTouchState>:
{
90006c6c:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006c6e:	f100 0518 	add.w	r5, r0, #24
{
90006c72:	b088      	sub	sp, #32
90006c74:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006c76:	4628      	mov	r0, r5
90006c78:	4669      	mov	r1, sp
90006c7a:	f000 f8fd 	bl	90006e78 <ft5336_td_status>
90006c7e:	2800      	cmp	r0, #0
90006c80:	f040 809a 	bne.w	90006db8 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006c84:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006c88:	2b05      	cmp	r3, #5
90006c8a:	bf94      	ite	ls
90006c8c:	4619      	movls	r1, r3
90006c8e:	2100      	movhi	r1, #0
90006c90:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006c92:	231e      	movs	r3, #30
90006c94:	466a      	mov	r2, sp
90006c96:	4628      	mov	r0, r5
90006c98:	2103      	movs	r1, #3
90006c9a:	f000 f8db 	bl	90006e54 <ft5336_read_reg>
90006c9e:	2800      	cmp	r0, #0
90006ca0:	f040 808d 	bne.w	90006dbe <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ca4:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ca8:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cac:	020a      	lsls	r2, r1, #8
90006cae:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cb2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cb4:	f89d c007 	ldrb.w	ip, [sp, #7]
90006cb8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006cbc:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cbe:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cc2:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cc6:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cc8:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006ccc:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cce:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cd0:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cd2:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006cd4:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cd8:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cda:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cde:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ce2:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ce4:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ce6:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cea:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cec:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006cee:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cf0:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cf4:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006cf6:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cf8:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006cfc:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d00:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d02:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d04:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d06:	ea45 050c 	orr.w	r5, r5, ip
90006d0a:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d0e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d12:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d14:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d16:	0212      	lsls	r2, r2, #8
90006d18:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d1c:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d1e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d22:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d26:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d28:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d2a:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006d2e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d30:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d34:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d36:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d38:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d3c:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d3e:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006d42:	4313      	orrs	r3, r2
90006d44:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d46:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d48:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d4c:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d50:	020a      	lsls	r2, r1, #8
90006d52:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d56:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d58:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d5c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d5e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d62:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d64:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d68:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d6a:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d6c:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006d70:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d72:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d74:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d76:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d7a:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d7c:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d80:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d82:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d86:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006d8a:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d8c:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d8e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d90:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d94:	6625      	str	r5, [r4, #96]	@ 0x60
90006d96:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d98:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006d9c:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d9e:	021b      	lsls	r3, r3, #8
90006da0:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006da4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006da8:	430b      	orrs	r3, r1
90006daa:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dac:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006db0:	4313      	orrs	r3, r2
90006db2:	6163      	str	r3, [r4, #20]
}
90006db4:	b008      	add	sp, #32
90006db6:	bd70      	pop	{r4, r5, r6, pc}
90006db8:	f04f 31ff 	mov.w	r1, #4294967295
90006dbc:	e768      	b.n	90006c90 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006dbe:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006dc2:	e7f7      	b.n	90006db4 <FT5336_GetMultiTouchState+0x148>

90006dc4 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006dc4:	3018      	adds	r0, #24
90006dc6:	f000 b84d 	b.w	90006e64 <ft5336_gest_id>
90006dca:	bf00      	nop

90006dcc <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006dcc:	2101      	movs	r1, #1
90006dce:	3018      	adds	r0, #24
90006dd0:	f000 b8b4 	b.w	90006f3c <ft5336_g_mode>

90006dd4 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006dd4:	2100      	movs	r1, #0
90006dd6:	3018      	adds	r0, #24
90006dd8:	f000 b8b0 	b.w	90006f3c <ft5336_g_mode>

90006ddc <FT5336_Init>:
{
90006ddc:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006dde:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006de2:	b98d      	cbnz	r5, 90006e08 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006de4:	4606      	mov	r6, r0
90006de6:	4604      	mov	r4, r0
90006de8:	f856 3b18 	ldr.w	r3, [r6], #24
90006dec:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006dee:	4629      	mov	r1, r5
90006df0:	4630      	mov	r0, r6
90006df2:	f000 f8a3 	bl	90006f3c <ft5336_g_mode>
  if(ret != FT5336_OK)
90006df6:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006df8:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006dfc:	bf18      	it	ne
90006dfe:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006e00:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006e04:	4240      	negs	r0, r0
}
90006e06:	bd70      	pop	{r4, r5, r6, pc}
90006e08:	2000      	movs	r0, #0
90006e0a:	bd70      	pop	{r4, r5, r6, pc}

90006e0c <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006e0c:	2000      	movs	r0, #0
90006e0e:	4770      	bx	lr

90006e10 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006e10:	b1c0      	cbz	r0, 90006e44 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006e12:	890a      	ldrh	r2, [r1, #8]
{
90006e14:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006e16:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006e1a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006e1c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006e20:	694a      	ldr	r2, [r1, #20]
90006e22:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006e26:	4909      	ldr	r1, [pc, #36]	@ (90006e4c <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006e28:	60c5      	str	r5, [r0, #12]
90006e2a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006e2e:	4a08      	ldr	r2, [pc, #32]	@ (90006e50 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006e30:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006e34:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006e36:	b10b      	cbz	r3, 90006e3c <FT5336_RegisterBusIO+0x2c>
}
90006e38:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006e3a:	4718      	bx	r3
}
90006e3c:	f04f 30ff 	mov.w	r0, #4294967295
90006e40:	bc30      	pop	{r4, r5}
90006e42:	4770      	bx	lr
90006e44:	f04f 30ff 	mov.w	r0, #4294967295
90006e48:	4770      	bx	lr
90006e4a:	bf00      	nop
90006e4c:	90006b8d 	.word	0x90006b8d
90006e50:	90006b9d 	.word	0x90006b9d

90006e54 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006e54:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e56:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006e5a:	46a4      	mov	ip, r4
}
90006e5c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e60:	4760      	bx	ip
90006e62:	bf00      	nop

90006e64 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006e64:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e66:	2301      	movs	r3, #1
{
90006e68:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e6a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006e6e:	4619      	mov	r1, r3
90006e70:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006e72:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e76:	4760      	bx	ip

90006e78 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006e78:	b538      	push	{r3, r4, r5, lr}
90006e7a:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e7c:	2301      	movs	r3, #1
90006e7e:	2102      	movs	r1, #2
90006e80:	4622      	mov	r2, r4
90006e82:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006e86:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006e88:	b918      	cbnz	r0, 90006e92 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006e8a:	7823      	ldrb	r3, [r4, #0]
90006e8c:	f003 030f 	and.w	r3, r3, #15
90006e90:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006e92:	bd38      	pop	{r3, r4, r5, pc}

90006e94 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006e94:	b510      	push	{r4, lr}
90006e96:	460c      	mov	r4, r1
90006e98:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e9a:	2301      	movs	r3, #1
90006e9c:	2191      	movs	r1, #145	@ 0x91
{
90006e9e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ea2:	f10d 0207 	add.w	r2, sp, #7
90006ea6:	6804      	ldr	r4, [r0, #0]
90006ea8:	6880      	ldr	r0, [r0, #8]
90006eaa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006eac:	b002      	add	sp, #8
90006eae:	bd10      	pop	{r4, pc}

90006eb0 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006eb0:	b510      	push	{r4, lr}
90006eb2:	460c      	mov	r4, r1
90006eb4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006eb6:	2301      	movs	r3, #1
90006eb8:	2192      	movs	r1, #146	@ 0x92
{
90006eba:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ebe:	f10d 0207 	add.w	r2, sp, #7
90006ec2:	6804      	ldr	r4, [r0, #0]
90006ec4:	6880      	ldr	r0, [r0, #8]
90006ec6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006ec8:	b002      	add	sp, #8
90006eca:	bd10      	pop	{r4, pc}

90006ecc <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006ecc:	b510      	push	{r4, lr}
90006ece:	460c      	mov	r4, r1
90006ed0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ed2:	2301      	movs	r3, #1
90006ed4:	2193      	movs	r1, #147	@ 0x93
{
90006ed6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006eda:	f10d 0207 	add.w	r2, sp, #7
90006ede:	6804      	ldr	r4, [r0, #0]
90006ee0:	6880      	ldr	r0, [r0, #8]
90006ee2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006ee4:	b002      	add	sp, #8
90006ee6:	bd10      	pop	{r4, pc}

90006ee8 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006ee8:	b510      	push	{r4, lr}
90006eea:	460c      	mov	r4, r1
90006eec:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006eee:	2301      	movs	r3, #1
90006ef0:	2194      	movs	r1, #148	@ 0x94
{
90006ef2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ef6:	f10d 0207 	add.w	r2, sp, #7
90006efa:	6804      	ldr	r4, [r0, #0]
90006efc:	6880      	ldr	r0, [r0, #8]
90006efe:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006f00:	b002      	add	sp, #8
90006f02:	bd10      	pop	{r4, pc}

90006f04 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006f04:	b510      	push	{r4, lr}
90006f06:	460c      	mov	r4, r1
90006f08:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f0a:	2301      	movs	r3, #1
90006f0c:	2195      	movs	r1, #149	@ 0x95
{
90006f0e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f12:	f10d 0207 	add.w	r2, sp, #7
90006f16:	6804      	ldr	r4, [r0, #0]
90006f18:	6880      	ldr	r0, [r0, #8]
90006f1a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006f1c:	b002      	add	sp, #8
90006f1e:	bd10      	pop	{r4, pc}

90006f20 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006f20:	b510      	push	{r4, lr}
90006f22:	460c      	mov	r4, r1
90006f24:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f26:	2301      	movs	r3, #1
90006f28:	2196      	movs	r1, #150	@ 0x96
{
90006f2a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f2e:	f10d 0207 	add.w	r2, sp, #7
90006f32:	6804      	ldr	r4, [r0, #0]
90006f34:	6880      	ldr	r0, [r0, #8]
90006f36:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006f38:	b002      	add	sp, #8
90006f3a:	bd10      	pop	{r4, pc}

90006f3c <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006f3c:	b510      	push	{r4, lr}
90006f3e:	460c      	mov	r4, r1
90006f40:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f42:	2301      	movs	r3, #1
90006f44:	21a4      	movs	r1, #164	@ 0xa4
{
90006f46:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f4a:	f10d 0207 	add.w	r2, sp, #7
90006f4e:	6804      	ldr	r4, [r0, #0]
90006f50:	6880      	ldr	r0, [r0, #8]
90006f52:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006f54:	b002      	add	sp, #8
90006f56:	bd10      	pop	{r4, pc}

90006f58 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006f58:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f5a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006f5e:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f60:	2301      	movs	r3, #1
90006f62:	46a4      	mov	ip, r4
90006f64:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006f66:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f6a:	4760      	bx	ip

90006f6c <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90006f6e:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006f70:	4c2a      	ldr	r4, [pc, #168]	@ (9000701c <MT48LC4M32B2_Init+0xb0>)
90006f72:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
90006f74:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006f76:	682a      	ldr	r2, [r5, #0]
{
90006f78:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
90006f7a:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006f7c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
90006f7e:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006f80:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006f84:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90006f88:	f006 fb3c 	bl	9000d604 <HAL_SDRAM_SendCommand>
90006f8c:	2800      	cmp	r0, #0
90006f8e:	d142      	bne.n	90007016 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006f90:	f000 ff52 	bl	90007e38 <HAL_GetTick>
90006f94:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006f96:	f000 ff4f 	bl	90007e38 <HAL_GetTick>
90006f9a:	4286      	cmp	r6, r0
90006f9c:	d0fb      	beq.n	90006f96 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006f9e:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006fa0:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006fa2:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fa4:	491d      	ldr	r1, [pc, #116]	@ (9000701c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006fa6:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006fa8:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006faa:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fac:	4638      	mov	r0, r7
90006fae:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90006fb2:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006fb4:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fb6:	f006 fb25 	bl	9000d604 <HAL_SDRAM_SendCommand>
90006fba:	bb60      	cbnz	r0, 90007016 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fbc:	4917      	ldr	r1, [pc, #92]	@ (9000701c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006fbe:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006fc2:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fc4:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006fc6:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006fca:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fcc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90006fd0:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fd2:	f006 fb17 	bl	9000d604 <HAL_SDRAM_SendCommand>
90006fd6:	b9f0      	cbnz	r0, 90007016 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006fd8:	4910      	ldr	r1, [pc, #64]	@ (9000701c <MT48LC4M32B2_Init+0xb0>)
90006fda:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006fdc:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006fe0:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006fe2:	696a      	ldr	r2, [r5, #20]
90006fe4:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006fe6:	69aa      	ldr	r2, [r5, #24]
90006fe8:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006fea:	69ea      	ldr	r2, [r5, #28]
90006fec:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006fee:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006ff0:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006ff2:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006ff4:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ff8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006ffc:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ffe:	f006 fb01 	bl	9000d604 <HAL_SDRAM_SendCommand>
90007002:	b940      	cbnz	r0, 90007016 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007004:	68a9      	ldr	r1, [r5, #8]
90007006:	4638      	mov	r0, r7
90007008:	f006 fb1c 	bl	9000d644 <HAL_SDRAM_ProgramRefreshRate>
9000700c:	3800      	subs	r0, #0
9000700e:	bf18      	it	ne
90007010:	2001      	movne	r0, #1
90007012:	4240      	negs	r0, r0
}
90007014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007016:	f04f 30ff 	mov.w	r0, #4294967295
}
9000701a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000701c:	24007d58 	.word	0x24007d58

90007020 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90007020:	4a10      	ldr	r2, [pc, #64]	@ (90007064 <BSP_I2C4_DeInit+0x44>)
{
90007022:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007024:	6813      	ldr	r3, [r2, #0]
90007026:	3b01      	subs	r3, #1
90007028:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000702a:	b10b      	cbz	r3, 90007030 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000702c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000702e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90007030:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90007034:	480c      	ldr	r0, [pc, #48]	@ (90007068 <BSP_I2C4_DeInit+0x48>)
90007036:	f001 fb95 	bl	90008764 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000703a:	480b      	ldr	r0, [pc, #44]	@ (90007068 <BSP_I2C4_DeInit+0x48>)
9000703c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90007040:	f001 fb90 	bl	90008764 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007044:	4a09      	ldr	r2, [pc, #36]	@ (9000706c <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007046:	480a      	ldr	r0, [pc, #40]	@ (90007070 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007048:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
9000704c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90007050:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007054:	f001 fffc 	bl	90009050 <HAL_I2C_DeInit>
90007058:	2800      	cmp	r0, #0
9000705a:	d0e7      	beq.n	9000702c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
9000705c:	f06f 0007 	mvn.w	r0, #7
}
90007060:	bd08      	pop	{r3, pc}
90007062:	bf00      	nop
90007064:	240087c0 	.word	0x240087c0
90007068:	58020c00 	.word	0x58020c00
9000706c:	58024400 	.word	0x58024400
90007070:	24007d68 	.word	0x24007d68

90007074 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90007074:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90007076:	2201      	movs	r2, #1
{
90007078:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
9000707a:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
9000707e:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90007082:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90007086:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
9000708a:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
9000708c:	f001 ff86 	bl	90008f9c <HAL_I2C_Init>
90007090:	b108      	cbz	r0, 90007096 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90007092:	2001      	movs	r0, #1
}
90007094:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90007096:	4601      	mov	r1, r0
90007098:	4620      	mov	r0, r4
9000709a:	f002 fadf 	bl	9000965c <HAL_I2CEx_ConfigAnalogFilter>
9000709e:	2800      	cmp	r0, #0
900070a0:	d1f7      	bne.n	90007092 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900070a2:	4601      	mov	r1, r0
900070a4:	4620      	mov	r0, r4
900070a6:	f002 fb03 	bl	900096b0 <HAL_I2CEx_ConfigDigitalFilter>
900070aa:	3800      	subs	r0, #0
900070ac:	bf18      	it	ne
900070ae:	2001      	movne	r0, #1
}
900070b0:	bd10      	pop	{r4, pc}
900070b2:	bf00      	nop

900070b4 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
900070b4:	4b9b      	ldr	r3, [pc, #620]	@ (90007324 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
900070b6:	489c      	ldr	r0, [pc, #624]	@ (90007328 <BSP_I2C4_Init+0x274>)
900070b8:	4a9c      	ldr	r2, [pc, #624]	@ (9000732c <BSP_I2C4_Init+0x278>)
{
900070ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
900070be:	681c      	ldr	r4, [r3, #0]
{
900070c0:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
900070c2:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
900070c4:	b11c      	cbz	r4, 900070ce <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
900070c6:	2000      	movs	r0, #0
}
900070c8:	b01f      	add	sp, #124	@ 0x7c
900070ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900070ce:	2201      	movs	r2, #1
900070d0:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900070d2:	f002 fabd 	bl	90009650 <HAL_I2C_GetState>
900070d6:	2800      	cmp	r0, #0
900070d8:	d1f5      	bne.n	900070c6 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900070da:	4d95      	ldr	r5, [pc, #596]	@ (90007330 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900070dc:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900070e0:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900070e2:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900070e4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900070e8:	f04f 0800 	mov.w	r8, #0
900070ec:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900070f0:	f043 0308 	orr.w	r3, r3, #8
900070f4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900070f8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900070fc:	f003 0308 	and.w	r3, r3, #8
90007100:	9315      	str	r3, [sp, #84]	@ 0x54
90007102:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007104:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007108:	f043 0308 	orr.w	r3, r3, #8
9000710c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007110:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007114:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007116:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000711a:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000711e:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007120:	a918      	add	r1, sp, #96	@ 0x60
90007122:	4884      	ldr	r0, [pc, #528]	@ (90007334 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007124:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007126:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000712a:	f001 f915 	bl	90008358 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000712e:	2312      	movs	r3, #18
90007130:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007134:	a918      	add	r1, sp, #96	@ 0x60
90007136:	487f      	ldr	r0, [pc, #508]	@ (90007334 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007138:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000713a:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
9000713e:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007142:	f001 f909 	bl	90008358 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007146:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000714a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000714e:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90007152:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007156:	f003 0380 	and.w	r3, r3, #128	@ 0x80
9000715a:	9317      	str	r3, [sp, #92]	@ 0x5c
9000715c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
9000715e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90007162:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007166:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
9000716a:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000716e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90007172:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007176:	f005 f82f 	bl	9000c1d8 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
9000717a:	2800      	cmp	r0, #0
9000717c:	f000 8196 	beq.w	900074ac <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007180:	4b6d      	ldr	r3, [pc, #436]	@ (90007338 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
90007182:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90007184:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007188:	4e6c      	ldr	r6, [pc, #432]	@ (9000733c <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000718a:	eb03 0350 	add.w	r3, r3, r0, lsr #1
9000718e:	9402      	str	r4, [sp, #8]
90007190:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90007194:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
90007196:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007198:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000719c:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000719e:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
900071a2:	4b67      	ldr	r3, [pc, #412]	@ (90007340 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900071a4:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900071a8:	0041      	lsls	r1, r0, #1
900071aa:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
900071ac:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
900071b0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900071b4:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
900071b6:	46a9      	mov	r9, r5
900071b8:	9513      	str	r5, [sp, #76]	@ 0x4c
900071ba:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900071bc:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
900071c0:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
900071c4:	bf2c      	ite	cs
900071c6:	2001      	movcs	r0, #1
900071c8:	2000      	movcc	r0, #0
900071ca:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
900071ce:	f000 0001 	and.w	r0, r0, #1
900071d2:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
900071d6:	bf88      	it	hi
900071d8:	2000      	movhi	r0, #0
900071da:	4590      	cmp	r8, r2
900071dc:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
900071e0:	9004      	str	r0, [sp, #16]
900071e2:	bf8c      	ite	hi
900071e4:	2000      	movhi	r0, #0
900071e6:	2001      	movls	r0, #1
900071e8:	4596      	cmp	lr, r2
900071ea:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
900071ee:	bf38      	it	cc
900071f0:	2000      	movcc	r0, #0
900071f2:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
900071f6:	9411      	str	r4, [sp, #68]	@ 0x44
900071f8:	465c      	mov	r4, fp
900071fa:	9006      	str	r0, [sp, #24]
900071fc:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
90007200:	9007      	str	r0, [sp, #28]
90007202:	bf94      	ite	ls
90007204:	2001      	movls	r0, #1
90007206:	2000      	movhi	r0, #0
90007208:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
9000720c:	f000 0501 	and.w	r5, r0, #1
90007210:	bf38      	it	cc
90007212:	2500      	movcc	r5, #0
90007214:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007216:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000721a:	9508      	str	r5, [sp, #32]
9000721c:	bf8c      	ite	hi
9000721e:	2500      	movhi	r5, #0
90007220:	2501      	movls	r5, #1
90007222:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007224:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007226:	bf38      	it	cc
90007228:	2500      	movcc	r5, #0
9000722a:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
9000722e:	bf98      	it	ls
90007230:	2001      	movls	r0, #1
90007232:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90007236:	9509      	str	r5, [sp, #36]	@ 0x24
90007238:	4665      	mov	r5, ip
9000723a:	f000 0001 	and.w	r0, r0, #1
9000723e:	bf38      	it	cc
90007240:	2000      	movcc	r0, #0
90007242:	45d8      	cmp	r8, fp
90007244:	900a      	str	r0, [sp, #40]	@ 0x28
90007246:	4658      	mov	r0, fp
90007248:	bf8c      	ite	hi
9000724a:	2000      	movhi	r0, #0
9000724c:	2001      	movls	r0, #1
9000724e:	45de      	cmp	lr, fp
90007250:	bf38      	it	cc
90007252:	2000      	movcc	r0, #0
90007254:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
90007258:	4683      	mov	fp, r0
9000725a:	bf94      	ite	ls
9000725c:	f04f 0b01 	movls.w	fp, #1
90007260:	f04f 0b00 	movhi.w	fp, #0
90007264:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
90007268:	900b      	str	r0, [sp, #44]	@ 0x2c
9000726a:	f00b 0b01 	and.w	fp, fp, #1
9000726e:	bf38      	it	cc
90007270:	f04f 0b00 	movcc.w	fp, #0
90007274:	4658      	mov	r0, fp
90007276:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
9000727a:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
9000727e:	45d8      	cmp	r8, fp
90007280:	bf8c      	ite	hi
90007282:	2000      	movhi	r0, #0
90007284:	2001      	movls	r0, #1
90007286:	45de      	cmp	lr, fp
90007288:	bf38      	it	cc
9000728a:	2000      	movcc	r0, #0
9000728c:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
90007290:	900d      	str	r0, [sp, #52]	@ 0x34
90007292:	bf98      	it	ls
90007294:	f04f 0b01 	movls.w	fp, #1
90007298:	9807      	ldr	r0, [sp, #28]
9000729a:	bf88      	it	hi
9000729c:	f04f 0b00 	movhi.w	fp, #0
900072a0:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900072a4:	f00b 0101 	and.w	r1, fp, #1
900072a8:	bf38      	it	cc
900072aa:	2100      	movcc	r1, #0
900072ac:	4580      	cmp	r8, r0
900072ae:	910e      	str	r1, [sp, #56]	@ 0x38
900072b0:	4601      	mov	r1, r0
900072b2:	bf8c      	ite	hi
900072b4:	2100      	movhi	r1, #0
900072b6:	2101      	movls	r1, #1
900072b8:	4586      	cmp	lr, r0
900072ba:	4620      	mov	r0, r4
900072bc:	bf38      	it	cc
900072be:	2100      	movcc	r1, #0
900072c0:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
900072c4:	910f      	str	r1, [sp, #60]	@ 0x3c
900072c6:	bf94      	ite	ls
900072c8:	2101      	movls	r1, #1
900072ca:	2100      	movhi	r1, #0
900072cc:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
900072d0:	f001 0101 	and.w	r1, r1, #1
900072d4:	bf38      	it	cc
900072d6:	2100      	movcc	r1, #0
900072d8:	9110      	str	r1, [sp, #64]	@ 0x40
900072da:	9911      	ldr	r1, [sp, #68]	@ 0x44
900072dc:	4588      	cmp	r8, r1
900072de:	460a      	mov	r2, r1
900072e0:	bf8c      	ite	hi
900072e2:	2200      	movhi	r2, #0
900072e4:	2201      	movls	r2, #1
900072e6:	458e      	cmp	lr, r1
900072e8:	bf38      	it	cc
900072ea:	2200      	movcc	r2, #0
900072ec:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
900072f0:	9211      	str	r2, [sp, #68]	@ 0x44
900072f2:	bf94      	ite	ls
900072f4:	2201      	movls	r2, #1
900072f6:	2200      	movhi	r2, #0
900072f8:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
900072fc:	f04f 0400 	mov.w	r4, #0
90007300:	f002 0201 	and.w	r2, r2, #1
90007304:	bf38      	it	cc
90007306:	2200      	movcc	r2, #0
90007308:	9212      	str	r2, [sp, #72]	@ 0x48
9000730a:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
9000730e:	4590      	cmp	r8, r2
90007310:	bf8c      	ite	hi
90007312:	2100      	movhi	r1, #0
90007314:	2101      	movls	r1, #1
90007316:	4596      	cmp	lr, r2
90007318:	bf38      	it	cc
9000731a:	2100      	movcc	r1, #0
9000731c:	460a      	mov	r2, r1
9000731e:	9107      	str	r1, [sp, #28]
90007320:	e014      	b.n	9000734c <BSP_I2C4_Init+0x298>
90007322:	bf00      	nop
90007324:	240087c0 	.word	0x240087c0
90007328:	24007d68 	.word	0x24007d68
9000732c:	58001c00 	.word	0x58001c00
90007330:	58024400 	.word	0x58024400
90007334:	58020c00 	.word	0x58020c00
90007338:	3b9aca00 	.word	0x3b9aca00
9000733c:	24007dc0 	.word	0x24007dc0
90007340:	24007dbc 	.word	0x24007dbc
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007344:	2c10      	cmp	r4, #16
90007346:	4465      	add	r5, ip
90007348:	f000 827d 	beq.w	90007846 <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
9000734c:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90007350:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007352:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90007356:	d3f5      	bcc.n	90007344 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90007358:	fab8 fb88 	clz	fp, r8
9000735c:	4557      	cmp	r7, sl
9000735e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90007362:	bf08      	it	eq
90007364:	f04f 0b00 	moveq.w	fp, #0
90007368:	f1bb 0f00 	cmp.w	fp, #0
9000736c:	f040 8200 	bne.w	90007770 <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007370:	45f4      	cmp	ip, lr
90007372:	bf8c      	ite	hi
90007374:	2200      	movhi	r2, #0
90007376:	2201      	movls	r2, #1
90007378:	45c4      	cmp	ip, r8
9000737a:	bf38      	it	cc
9000737c:	2200      	movcc	r2, #0
            if(presc != prev_presc)
9000737e:	4557      	cmp	r7, sl
90007380:	bf0c      	ite	eq
90007382:	2200      	moveq	r2, #0
90007384:	f002 0201 	andne.w	r2, r2, #1
90007388:	2a00      	cmp	r2, #0
9000738a:	f000 8099 	beq.w	900074c0 <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000738e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007392:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007396:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007398:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000739c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073a0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073a4:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073a6:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073a8:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073aa:	f200 80f2 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900073ae:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900073b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900073b2:	4557      	cmp	r7, sl
900073b4:	bf0c      	ite	eq
900073b6:	2300      	moveq	r3, #0
900073b8:	f003 0301 	andne.w	r3, r3, #1
900073bc:	469b      	mov	fp, r3
900073be:	2b00      	cmp	r3, #0
900073c0:	f000 8097 	beq.w	900074f2 <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073c4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900073c8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073cc:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073ce:	4630      	mov	r0, r6
900073d0:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073d4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073d8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073dc:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073de:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073e0:	f200 80d7 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
900073e4:	465a      	mov	r2, fp
              prev_presc = presc;
900073e6:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900073e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900073ea:	4557      	cmp	r7, sl
900073ec:	bf0c      	ite	eq
900073ee:	2300      	moveq	r3, #0
900073f0:	f003 0301 	andne.w	r3, r3, #1
900073f4:	469b      	mov	fp, r3
900073f6:	2b00      	cmp	r3, #0
900073f8:	f000 8096 	beq.w	90007528 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073fc:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007400:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007404:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007406:	4630      	mov	r0, r6
90007408:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000740c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007410:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007414:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007416:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007418:	f200 80bb 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
9000741c:	465a      	mov	r2, fp
              prev_presc = presc;
9000741e:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007420:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90007422:	4557      	cmp	r7, sl
90007424:	bf0c      	ite	eq
90007426:	2300      	moveq	r3, #0
90007428:	f003 0301 	andne.w	r3, r3, #1
9000742c:	2b00      	cmp	r3, #0
9000742e:	f000 8096 	beq.w	9000755e <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007432:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007436:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000743a:	4630      	mov	r0, r6
9000743c:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90007440:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007444:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007448:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000744a:	f04f 010d 	mov.w	r1, #13
9000744e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007450:	f200 809f 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007454:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007456:	e775      	b.n	90007344 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007458:	9a06      	ldr	r2, [sp, #24]
9000745a:	4661      	mov	r1, ip
9000745c:	f109 0914 	add.w	r9, r9, #20
90007460:	3201      	adds	r2, #1
90007462:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90007466:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
9000746a:	4572      	cmp	r2, lr
9000746c:	9206      	str	r2, [sp, #24]
9000746e:	f040 80b4 	bne.w	900075da <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
90007472:	9b01      	ldr	r3, [sp, #4]
90007474:	2b7f      	cmp	r3, #127	@ 0x7f
90007476:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
9000747a:	d817      	bhi.n	900074ac <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000747c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90007480:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90007484:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007488:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000748a:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000748c:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000748e:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007492:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007496:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000749a:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000749c:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000749e:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900074a0:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900074a4:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900074a6:	430b      	orrs	r3, r1
900074a8:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900074ac:	4621      	mov	r1, r4
900074ae:	48ad      	ldr	r0, [pc, #692]	@ (90007764 <BSP_I2C4_Init+0x6b0>)
900074b0:	f7ff fde0 	bl	90007074 <MX_I2C4_Init>
900074b4:	2800      	cmp	r0, #0
900074b6:	f43f ae06 	beq.w	900070c6 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
900074ba:	f06f 0007 	mvn.w	r0, #7
  return ret;
900074be:	e603      	b.n	900070c8 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
900074c0:	9a04      	ldr	r2, [sp, #16]
900074c2:	4557      	cmp	r7, sl
900074c4:	bf0c      	ite	eq
900074c6:	2200      	moveq	r2, #0
900074c8:	f002 0201 	andne.w	r2, r2, #1
900074cc:	2a00      	cmp	r2, #0
900074ce:	f000 81cf 	beq.w	90007870 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d2:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074d6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074da:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074dc:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074e0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074e4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074e8:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074ea:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074ec:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074ee:	d850      	bhi.n	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900074f0:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900074f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900074f4:	4557      	cmp	r7, sl
900074f6:	bf0c      	ite	eq
900074f8:	2300      	moveq	r3, #0
900074fa:	f003 0301 	andne.w	r3, r3, #1
900074fe:	469b      	mov	fp, r3
90007500:	2b00      	cmp	r3, #0
90007502:	f000 80da 	beq.w	900076ba <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007506:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000750a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000750e:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007510:	4630      	mov	r0, r6
90007512:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007516:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000751a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000751e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007520:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007522:	d836      	bhi.n	90007592 <BSP_I2C4_Init+0x4de>
90007524:	465a      	mov	r2, fp
              prev_presc = presc;
90007526:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007528:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9000752a:	4557      	cmp	r7, sl
9000752c:	bf0c      	ite	eq
9000752e:	2300      	moveq	r3, #0
90007530:	f003 0301 	andne.w	r3, r3, #1
90007534:	469b      	mov	fp, r3
90007536:	2b00      	cmp	r3, #0
90007538:	f000 80db 	beq.w	900076f2 <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000753c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007540:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007544:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007546:	4630      	mov	r0, r6
90007548:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000754c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007550:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007554:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007556:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007558:	d81b      	bhi.n	90007592 <BSP_I2C4_Init+0x4de>
9000755a:	465a      	mov	r2, fp
              prev_presc = presc;
9000755c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000755e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90007560:	4557      	cmp	r7, sl
90007562:	bf0c      	ite	eq
90007564:	2300      	moveq	r3, #0
90007566:	f003 0301 	andne.w	r3, r3, #1
9000756a:	2b00      	cmp	r3, #0
9000756c:	f000 80dd 	beq.w	9000772a <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007570:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007574:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007578:	4630      	mov	r0, r6
9000757a:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000757e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007582:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007586:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007588:	f04f 010e 	mov.w	r1, #14
9000758c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000758e:	f67f af61 	bls.w	90007454 <BSP_I2C4_Init+0x3a0>
90007592:	4b75      	ldr	r3, [pc, #468]	@ (90007768 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90007594:	464d      	mov	r5, r9
90007596:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
9000759a:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000759e:	f640 0234 	movw	r2, #2100	@ 0x834
900075a2:	f101 0332 	add.w	r3, r1, #50	@ 0x32
900075a6:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075aa:	2700      	movs	r7, #0
900075ac:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900075ae:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075b0:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900075b2:	461c      	mov	r4, r3
900075b4:	eba2 0c03 	sub.w	ip, r2, r3
900075b8:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075ba:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900075be:	460b      	mov	r3, r1
900075c0:	4296      	cmp	r6, r2
900075c2:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 9000776c <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075c6:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900075ca:	f240 4a12 	movw	sl, #1042	@ 0x412
900075ce:	bf38      	it	cc
900075d0:	4616      	movcc	r6, r2
900075d2:	46ae      	mov	lr, r5
900075d4:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075d6:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900075d8:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900075da:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900075de:	2500      	movs	r5, #0
900075e0:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900075e4:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900075e8:	930d      	str	r3, [sp, #52]	@ 0x34
900075ea:	18c2      	adds	r2, r0, r3
900075ec:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
900075f0:	1907      	adds	r7, r0, r4
900075f2:	468c      	mov	ip, r1
900075f4:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
900075f8:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
900075fc:	9207      	str	r2, [sp, #28]
900075fe:	e006      	b.n	9000760e <BSP_I2C4_Init+0x55a>
90007600:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90007604:	4407      	add	r7, r0
90007606:	eba8 0800 	sub.w	r8, r8, r0
9000760a:	f43f af25 	beq.w	90007458 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000760e:	f240 5314 	movw	r3, #1300	@ 0x514
90007612:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007614:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007616:	429f      	cmp	r7, r3
90007618:	d9f2      	bls.n	90007600 <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000761a:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000761e:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90007622:	d2ed      	bcs.n	90007600 <BSP_I2C4_Init+0x54c>
90007624:	f640 0e34 	movw	lr, #2100	@ 0x834
90007628:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000762a:	f8cd 8010 	str.w	r8, [sp, #16]
9000762e:	2200      	movs	r2, #0
90007630:	ebae 0e03 	sub.w	lr, lr, r3
90007634:	9b07      	ldr	r3, [sp, #28]
90007636:	9705      	str	r7, [sp, #20]
90007638:	443b      	add	r3, r7
9000763a:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000763e:	460f      	mov	r7, r1
90007640:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007644:	46b4      	mov	ip, r6
90007646:	e005      	b.n	90007654 <BSP_I2C4_Init+0x5a0>
90007648:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000764c:	4403      	add	r3, r0
9000764e:	eba4 0400 	sub.w	r4, r4, r0
90007652:	d01a      	beq.n	9000768a <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007654:	eb0e 0103 	add.w	r1, lr, r3
90007658:	4616      	mov	r6, r2
9000765a:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000765e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007660:	4561      	cmp	r1, ip
90007662:	d9f1      	bls.n	90007648 <BSP_I2C4_Init+0x594>
90007664:	4555      	cmp	r5, sl
90007666:	d8ef      	bhi.n	90007648 <BSP_I2C4_Init+0x594>
            if (error < 0)
90007668:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000766c:	bf28      	it	cs
9000766e:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90007670:	458b      	cmp	fp, r1
90007672:	d9e9      	bls.n	90007648 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007674:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
90007678:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000767a:	4403      	add	r3, r0
9000767c:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
90007680:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90007684:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007688:	d1e4      	bne.n	90007654 <BSP_I2C4_Init+0x5a0>
9000768a:	4666      	mov	r6, ip
9000768c:	9d02      	ldr	r5, [sp, #8]
9000768e:	f8dd c00c 	ldr.w	ip, [sp, #12]
90007692:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
90007696:	e7b3      	b.n	90007600 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007698:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000769c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076a0:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076a2:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076a6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076aa:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076ae:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076b0:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076b2:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076b4:	f63f af6d 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900076b8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900076ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900076bc:	4557      	cmp	r7, sl
900076be:	bf0c      	ite	eq
900076c0:	2300      	moveq	r3, #0
900076c2:	f003 0301 	andne.w	r3, r3, #1
900076c6:	469b      	mov	fp, r3
900076c8:	2b00      	cmp	r3, #0
900076ca:	f000 8084 	beq.w	900077d6 <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076ce:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076d2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076d6:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076d8:	4630      	mov	r0, r6
900076da:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076de:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076e2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076e6:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076e8:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076ea:	f63f af52 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
900076ee:	465a      	mov	r2, fp
              prev_presc = presc;
900076f0:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900076f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900076f4:	4557      	cmp	r7, sl
900076f6:	bf0c      	ite	eq
900076f8:	2300      	moveq	r3, #0
900076fa:	f003 0301 	andne.w	r3, r3, #1
900076fe:	469b      	mov	fp, r3
90007700:	2b00      	cmp	r3, #0
90007702:	f000 8084 	beq.w	9000780e <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007706:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000770a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000770e:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007710:	4630      	mov	r0, r6
90007712:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007716:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000771a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000771e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007720:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007722:	f63f af36 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
90007726:	465a      	mov	r2, fp
              prev_presc = presc;
90007728:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000772a:	9b07      	ldr	r3, [sp, #28]
9000772c:	4557      	cmp	r7, sl
9000772e:	bf0c      	ite	eq
90007730:	2300      	moveq	r3, #0
90007732:	f003 0301 	andne.w	r3, r3, #1
90007736:	2b00      	cmp	r3, #0
90007738:	f000 8098 	beq.w	9000786c <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000773c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90007740:	480a      	ldr	r0, [pc, #40]	@ (9000776c <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90007742:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007746:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
9000774a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000774e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007752:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007754:	f04f 010f 	mov.w	r1, #15
90007758:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000775a:	f63f af1a 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000775e:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007760:	e5f0      	b.n	90007344 <BSP_I2C4_Init+0x290>
90007762:	bf00      	nop
90007764:	24007d68 	.word	0x24007d68
90007768:	24007dbc 	.word	0x24007dbc
9000776c:	24007dc0 	.word	0x24007dc0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007770:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007774:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007778:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000777a:	4630      	mov	r0, r6
9000777c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007780:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007784:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007788:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000778a:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000778c:	f63f af01 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007790:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007792:	9a06      	ldr	r2, [sp, #24]
90007794:	45ba      	cmp	sl, r7
90007796:	bf0c      	ite	eq
90007798:	2200      	moveq	r2, #0
9000779a:	f002 0201 	andne.w	r2, r2, #1
9000779e:	2a00      	cmp	r2, #0
900077a0:	f47f af7a 	bne.w	90007698 <BSP_I2C4_Init+0x5e4>
900077a4:	9a08      	ldr	r2, [sp, #32]
900077a6:	45ba      	cmp	sl, r7
900077a8:	bf0c      	ite	eq
900077aa:	2200      	moveq	r2, #0
900077ac:	f002 0201 	andne.w	r2, r2, #1
900077b0:	2a00      	cmp	r2, #0
900077b2:	d05f      	beq.n	90007874 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077b4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900077b8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077bc:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077be:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077c2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077c6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077ca:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077cc:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900077ce:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077d0:	f63f aedf 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900077d4:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900077d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900077d8:	4557      	cmp	r7, sl
900077da:	bf0c      	ite	eq
900077dc:	2300      	moveq	r3, #0
900077de:	f003 0301 	andne.w	r3, r3, #1
900077e2:	469b      	mov	fp, r3
900077e4:	2b00      	cmp	r3, #0
900077e6:	f43f adff 	beq.w	900073e8 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077ea:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900077ee:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077f2:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077f4:	4630      	mov	r0, r6
900077f6:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077fa:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077fe:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007802:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007804:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007806:	f63f aec4 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
9000780a:	465a      	mov	r2, fp
              prev_presc = presc;
9000780c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000780e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90007810:	4557      	cmp	r7, sl
90007812:	bf0c      	ite	eq
90007814:	2300      	moveq	r3, #0
90007816:	f003 0301 	andne.w	r3, r3, #1
9000781a:	2b00      	cmp	r3, #0
9000781c:	f43f ae00 	beq.w	90007420 <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007820:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007824:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007828:	4630      	mov	r0, r6
9000782a:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000782e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007832:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007836:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007838:	f04f 010c 	mov.w	r1, #12
9000783c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000783e:	f63f aea8 	bhi.w	90007592 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007842:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007844:	e57e      	b.n	90007344 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007846:	3701      	adds	r7, #1
90007848:	9a01      	ldr	r2, [sp, #4]
9000784a:	2f10      	cmp	r7, #16
9000784c:	4494      	add	ip, r2
9000784e:	f47f acb5 	bne.w	900071bc <BSP_I2C4_Init+0x108>
90007852:	9c02      	ldr	r4, [sp, #8]
90007854:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90007856:	9903      	ldr	r1, [sp, #12]
90007858:	b11b      	cbz	r3, 90007862 <BSP_I2C4_Init+0x7ae>
9000785a:	4b07      	ldr	r3, [pc, #28]	@ (90007878 <BSP_I2C4_Init+0x7c4>)
9000785c:	464d      	mov	r5, r9
9000785e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007862:	2d00      	cmp	r5, #0
90007864:	f43f ae22 	beq.w	900074ac <BSP_I2C4_Init+0x3f8>
90007868:	4804      	ldr	r0, [pc, #16]	@ (9000787c <BSP_I2C4_Init+0x7c8>)
9000786a:	e698      	b.n	9000759e <BSP_I2C4_Init+0x4ea>
9000786c:	4613      	mov	r3, r2
9000786e:	e569      	b.n	90007344 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90007870:	469b      	mov	fp, r3
90007872:	e78e      	b.n	90007792 <BSP_I2C4_Init+0x6de>
90007874:	465a      	mov	r2, fp
90007876:	e59b      	b.n	900073b0 <BSP_I2C4_Init+0x2fc>
90007878:	24007dbc 	.word	0x24007dbc
9000787c:	24007dc0 	.word	0x24007dc0

90007880 <BSP_I2C4_WriteReg>:
{
90007880:	b530      	push	{r4, r5, lr}
90007882:	4614      	mov	r4, r2
90007884:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007886:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000788a:	460a      	mov	r2, r1
9000788c:	9301      	str	r3, [sp, #4]
9000788e:	4601      	mov	r1, r0
90007890:	2301      	movs	r3, #1
90007892:	4809      	ldr	r0, [pc, #36]	@ (900078b8 <BSP_I2C4_WriteReg+0x38>)
90007894:	9502      	str	r5, [sp, #8]
90007896:	9400      	str	r4, [sp, #0]
90007898:	f001 fbf4 	bl	90009084 <HAL_I2C_Mem_Write>
9000789c:	b908      	cbnz	r0, 900078a2 <BSP_I2C4_WriteReg+0x22>
}
9000789e:	b005      	add	sp, #20
900078a0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900078a2:	4805      	ldr	r0, [pc, #20]	@ (900078b8 <BSP_I2C4_WriteReg+0x38>)
900078a4:	f001 fed8 	bl	90009658 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900078a8:	2804      	cmp	r0, #4
900078aa:	bf14      	ite	ne
900078ac:	f06f 0003 	mvnne.w	r0, #3
900078b0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900078b4:	e7f3      	b.n	9000789e <BSP_I2C4_WriteReg+0x1e>
900078b6:	bf00      	nop
900078b8:	24007d68 	.word	0x24007d68

900078bc <BSP_I2C4_ReadReg>:
{
900078bc:	b530      	push	{r4, r5, lr}
900078be:	4614      	mov	r4, r2
900078c0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900078c2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900078c6:	460a      	mov	r2, r1
900078c8:	9301      	str	r3, [sp, #4]
900078ca:	4601      	mov	r1, r0
900078cc:	2301      	movs	r3, #1
900078ce:	4809      	ldr	r0, [pc, #36]	@ (900078f4 <BSP_I2C4_ReadReg+0x38>)
900078d0:	9502      	str	r5, [sp, #8]
900078d2:	9400      	str	r4, [sp, #0]
900078d4:	f001 fcd4 	bl	90009280 <HAL_I2C_Mem_Read>
900078d8:	b908      	cbnz	r0, 900078de <BSP_I2C4_ReadReg+0x22>
}
900078da:	b005      	add	sp, #20
900078dc:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900078de:	4805      	ldr	r0, [pc, #20]	@ (900078f4 <BSP_I2C4_ReadReg+0x38>)
900078e0:	f001 feba 	bl	90009658 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900078e4:	2804      	cmp	r0, #4
900078e6:	bf14      	ite	ne
900078e8:	f06f 0003 	mvnne.w	r0, #3
900078ec:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900078f0:	e7f3      	b.n	900078da <BSP_I2C4_ReadReg+0x1e>
900078f2:	bf00      	nop
900078f4:	24007d68 	.word	0x24007d68

900078f8 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900078f8:	f000 ba9e 	b.w	90007e38 <HAL_GetTick>

900078fc <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900078fc:	b970      	cbnz	r0, 9000791c <BSP_SDRAM_DeInit+0x20>
{
900078fe:	b510      	push	{r4, lr}
90007900:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90007902:	4808      	ldr	r0, [pc, #32]	@ (90007924 <BSP_SDRAM_DeInit+0x28>)
90007904:	f005 fe70 	bl	9000d5e8 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007908:	207a      	movs	r0, #122	@ 0x7a
9000790a:	f000 fb0f 	bl	90007f2c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000790e:	4b06      	ldr	r3, [pc, #24]	@ (90007928 <BSP_SDRAM_DeInit+0x2c>)
90007910:	4806      	ldr	r0, [pc, #24]	@ (9000792c <BSP_SDRAM_DeInit+0x30>)
90007912:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007914:	f003 fcd4 	bl	9000b2c0 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007918:	4620      	mov	r0, r4
}
9000791a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000791c:	f06f 0001 	mvn.w	r0, #1
}
90007920:	4770      	bx	lr
90007922:	bf00      	nop
90007924:	240088bc 	.word	0x240088bc
90007928:	52000040 	.word	0x52000040
9000792c:	240087c4 	.word	0x240087c4

90007930 <MX_SDRAM_BANK2_Init>:
{
90007930:	b530      	push	{r4, r5, lr}
90007932:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007934:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007936:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007938:	4c13      	ldr	r4, [pc, #76]	@ (90007988 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000793a:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000793c:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000793e:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007940:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90007942:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007944:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007948:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000794a:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
9000794c:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
9000794e:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90007950:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007952:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007954:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007956:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007958:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000795a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000795e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007960:	f44f 6500 	mov.w	r5, #2048	@ 0x800
90007964:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007968:	2204      	movs	r2, #4
9000796a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000796e:	2202      	movs	r2, #2
90007970:	2302      	movs	r3, #2
90007972:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007976:	4b05      	ldr	r3, [pc, #20]	@ (9000798c <MX_SDRAM_BANK2_Init+0x5c>)
90007978:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000797a:	f005 fe0b 	bl	9000d594 <HAL_SDRAM_Init>
}
9000797e:	3800      	subs	r0, #0
90007980:	bf18      	it	ne
90007982:	2001      	movne	r0, #1
90007984:	b009      	add	sp, #36	@ 0x24
90007986:	bd30      	pop	{r4, r5, pc}
90007988:	240088bc 	.word	0x240088bc
9000798c:	52004140 	.word	0x52004140

90007990 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007990:	2800      	cmp	r0, #0
90007992:	f040 80cd 	bne.w	90007b30 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007996:	4b69      	ldr	r3, [pc, #420]	@ (90007b3c <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007998:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
9000799a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000799e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
900079a2:	b5f0      	push	{r4, r5, r6, r7, lr}
900079a4:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
900079a6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900079aa:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900079ae:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900079b0:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
900079b2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900079b4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900079b8:	4c61      	ldr	r4, [pc, #388]	@ (90007b40 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900079ba:	4e62      	ldr	r6, [pc, #392]	@ (90007b44 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900079bc:	9200      	str	r2, [sp, #0]
900079be:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
900079c0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900079c4:	430a      	orrs	r2, r1
900079c6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900079ca:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900079ce:	400a      	ands	r2, r1
900079d0:	9201      	str	r2, [sp, #4]
900079d2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900079d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900079d8:	f042 0208 	orr.w	r2, r2, #8
900079dc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900079e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900079e4:	f002 0208 	and.w	r2, r2, #8
900079e8:	9202      	str	r2, [sp, #8]
900079ea:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900079ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900079f0:	f042 0210 	orr.w	r2, r2, #16
900079f4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900079f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900079fc:	f002 0210 	and.w	r2, r2, #16
90007a00:	9203      	str	r2, [sp, #12]
90007a02:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007a04:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a08:	f042 0220 	orr.w	r2, r2, #32
90007a0c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007a10:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a14:	f002 0220 	and.w	r2, r2, #32
90007a18:	9204      	str	r2, [sp, #16]
90007a1a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007a1c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a20:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007a24:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007a28:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a2c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007a30:	9205      	str	r2, [sp, #20]
90007a32:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007a34:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a38:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007a3c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007a40:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007a42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007a46:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007a48:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007a4c:	483e      	ldr	r0, [pc, #248]	@ (90007b48 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007a4e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007a50:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007a52:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007a56:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007a58:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007a5a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007a5c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007a60:	f000 fc7a 	bl	90008358 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007a64:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007a68:	a907      	add	r1, sp, #28
90007a6a:	4838      	ldr	r0, [pc, #224]	@ (90007b4c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007a6c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007a6e:	f000 fc73 	bl	90008358 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007a72:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007a76:	a907      	add	r1, sp, #28
90007a78:	4835      	ldr	r0, [pc, #212]	@ (90007b50 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007a7a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007a7c:	f000 fc6c 	bl	90008358 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007a80:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007a84:	a907      	add	r1, sp, #28
90007a86:	4833      	ldr	r0, [pc, #204]	@ (90007b54 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007a88:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007a8a:	f000 fc65 	bl	90008358 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007a8e:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007a90:	a907      	add	r1, sp, #28
90007a92:	4831      	ldr	r0, [pc, #196]	@ (90007b58 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007a94:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007a96:	f000 fc5f 	bl	90008358 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007a9a:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007a9c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007aa0:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007aa4:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007aa6:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007aa8:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007aaa:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007aac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007ab0:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007ab2:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007ab4:	4a29      	ldr	r2, [pc, #164]	@ (90007b5c <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
90007ab6:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007ab8:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007aba:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007abc:	6334      	str	r4, [r6, #48]	@ 0x30
90007abe:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90007ac0:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007ac4:	f640 0308 	movw	r3, #2056	@ 0x808
90007ac8:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007aca:	2320      	movs	r3, #32
90007acc:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007ace:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007ad2:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007ad6:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90007ad8:	f003 fbf2 	bl	9000b2c0 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007adc:	4620      	mov	r0, r4
90007ade:	f003 fb75 	bl	9000b1cc <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007ae2:	462a      	mov	r2, r5
90007ae4:	210f      	movs	r1, #15
90007ae6:	207a      	movs	r0, #122	@ 0x7a
90007ae8:	f000 f9d6 	bl	90007e98 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007aec:	207a      	movs	r0, #122	@ 0x7a
90007aee:	f000 fa0f 	bl	90007f10 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007af2:	2210      	movs	r2, #16
90007af4:	2104      	movs	r1, #4
90007af6:	4630      	mov	r0, r6
90007af8:	f7ff ff1a 	bl	90007930 <MX_SDRAM_BANK2_Init>
90007afc:	4603      	mov	r3, r0
90007afe:	b9d0      	cbnz	r0, 90007b36 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007b00:	4917      	ldr	r1, [pc, #92]	@ (90007b60 <BSP_SDRAM_Init+0x1d0>)
90007b02:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007b04:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007b06:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007b08:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007b0a:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007b0e:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007b10:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007b14:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007b18:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007b1c:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007b20:	f7ff fa24 	bl	90006f6c <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007b24:	2800      	cmp	r0, #0
90007b26:	bf18      	it	ne
90007b28:	f06f 0004 	mvnne.w	r0, #4
}
90007b2c:	b00d      	add	sp, #52	@ 0x34
90007b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007b30:	f06f 0001 	mvn.w	r0, #1
}
90007b34:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007b36:	f04f 30ff 	mov.w	r0, #4294967295
90007b3a:	e7f7      	b.n	90007b2c <BSP_SDRAM_Init+0x19c>
90007b3c:	58024400 	.word	0x58024400
90007b40:	24008830 	.word	0x24008830
90007b44:	240088bc 	.word	0x240088bc
90007b48:	58020c00 	.word	0x58020c00
90007b4c:	58021000 	.word	0x58021000
90007b50:	58021400 	.word	0x58021400
90007b54:	58021800 	.word	0x58021800
90007b58:	58021c00 	.word	0x58021c00
90007b5c:	52000040 	.word	0x52000040
90007b60:	2400889c 	.word	0x2400889c

90007b64 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007b68:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007b6a:	2800      	cmp	r0, #0
90007b6c:	d16b      	bne.n	90007c46 <BSP_TS_Init+0xe2>
90007b6e:	680b      	ldr	r3, [r1, #0]
90007b70:	460d      	mov	r5, r1
90007b72:	1e5a      	subs	r2, r3, #1
90007b74:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007b78:	d265      	bcs.n	90007c46 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007b7a:	684a      	ldr	r2, [r1, #4]
90007b7c:	1e51      	subs	r1, r2, #1
90007b7e:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007b82:	d260      	bcs.n	90007c46 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007b84:	4293      	cmp	r3, r2
90007b86:	bf28      	it	cs
90007b88:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007b8a:	68ea      	ldr	r2, [r5, #12]
90007b8c:	429a      	cmp	r2, r3
90007b8e:	d85a      	bhi.n	90007c46 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007b90:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007b92:	4b31      	ldr	r3, [pc, #196]	@ (90007c58 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007b94:	4c31      	ldr	r4, [pc, #196]	@ (90007c5c <BSP_TS_Init+0xf8>)
90007b96:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007b98:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007b9c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007b9e:	4a30      	ldr	r2, [pc, #192]	@ (90007c60 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007ba0:	4b30      	ldr	r3, [pc, #192]	@ (90007c64 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007ba2:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007ba4:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007ba6:	4a30      	ldr	r2, [pc, #192]	@ (90007c68 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007ba8:	4b30      	ldr	r3, [pc, #192]	@ (90007c6c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007baa:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007bac:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007bae:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007bb0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007bb2:	f7ff f92d 	bl	90006e10 <FT5336_RegisterBusIO>
90007bb6:	2800      	cmp	r0, #0
90007bb8:	d14b      	bne.n	90007c52 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007bba:	a901      	add	r1, sp, #4
90007bbc:	4620      	mov	r0, r4
90007bbe:	f7ff f81d 	bl	90006bfc <FT5336_ReadID>
90007bc2:	2800      	cmp	r0, #0
90007bc4:	d145      	bne.n	90007c52 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007bc6:	9b01      	ldr	r3, [sp, #4]
90007bc8:	2b51      	cmp	r3, #81	@ 0x51
90007bca:	d142      	bne.n	90007c52 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007bcc:	4b28      	ldr	r3, [pc, #160]	@ (90007c70 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007bce:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007bd0:	4f28      	ldr	r7, [pc, #160]	@ (90007c74 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007bd2:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007c7c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007bd6:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007bd8:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007bdc:	681b      	ldr	r3, [r3, #0]
90007bde:	4798      	blx	r3
90007be0:	4606      	mov	r6, r0
90007be2:	2800      	cmp	r0, #0
90007be4:	d135      	bne.n	90007c52 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007be6:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007be8:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007bea:	4c23      	ldr	r4, [pc, #140]	@ (90007c78 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007bec:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007bf0:	6022      	str	r2, [r4, #0]
90007bf2:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007bf4:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007bf6:	6062      	str	r2, [r4, #4]
90007bf8:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007bfa:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007bfc:	60a2      	str	r2, [r4, #8]
90007bfe:	68ea      	ldr	r2, [r5, #12]
90007c00:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007c02:	4798      	blx	r3
90007c04:	2800      	cmp	r0, #0
90007c06:	db18      	blt.n	90007c3a <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007c08:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007c0c:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c10:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c12:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c16:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c18:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c1a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c1c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c1e:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c22:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c26:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c2a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007c2e:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007c30:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007c32:	4630      	mov	r0, r6
90007c34:	b008      	add	sp, #32
90007c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007c3a:	f06f 0604 	mvn.w	r6, #4
}
90007c3e:	4630      	mov	r0, r6
90007c40:	b008      	add	sp, #32
90007c42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007c46:	f06f 0601 	mvn.w	r6, #1
}
90007c4a:	4630      	mov	r0, r6
90007c4c:	b008      	add	sp, #32
90007c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007c52:	f04f 36ff 	mov.w	r6, #4294967295
90007c56:	e7ec      	b.n	90007c32 <BSP_TS_Init+0xce>
90007c58:	900070b5 	.word	0x900070b5
90007c5c:	240088f0 	.word	0x240088f0
90007c60:	90007021 	.word	0x90007021
90007c64:	900078bd 	.word	0x900078bd
90007c68:	90007881 	.word	0x90007881
90007c6c:	900078f9 	.word	0x900078f9
90007c70:	24000044 	.word	0x24000044
90007c74:	24008958 	.word	0x24008958
90007c78:	24008918 	.word	0x24008918
90007c7c:	2400895c 	.word	0x2400895c

90007c80 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007c80:	2800      	cmp	r0, #0
90007c82:	d154      	bne.n	90007d2e <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007c84:	4b2b      	ldr	r3, [pc, #172]	@ (90007d34 <BSP_TS_GetState+0xb4>)
90007c86:	4a2c      	ldr	r2, [pc, #176]	@ (90007d38 <BSP_TS_GetState+0xb8>)
90007c88:	681b      	ldr	r3, [r3, #0]
90007c8a:	6810      	ldr	r0, [r2, #0]
90007c8c:	691b      	ldr	r3, [r3, #16]
{
90007c8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007c92:	b084      	sub	sp, #16
90007c94:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007c96:	a901      	add	r1, sp, #4
90007c98:	4798      	blx	r3
90007c9a:	2800      	cmp	r0, #0
90007c9c:	db3f      	blt.n	90007d1e <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007c9e:	4b27      	ldr	r3, [pc, #156]	@ (90007d3c <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007ca0:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007ca2:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007ca4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007ca6:	b930      	cbnz	r0, 90007cb6 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007ca8:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007caa:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007cae:	2000      	movs	r0, #0
}
90007cb0:	b004      	add	sp, #16
90007cb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007cb6:	689f      	ldr	r7, [r3, #8]
90007cb8:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007cba:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007cbe:	d433      	bmi.n	90007d28 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007cc0:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90007cc2:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007cc4:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007cc8:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007ccc:	d003      	beq.n	90007cd6 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007cce:	f10e 32ff 	add.w	r2, lr, #4294967295
90007cd2:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007cd6:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007cda:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007cdc:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007cde:	bf48      	it	mi
90007ce0:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007ce4:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007ce8:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007cea:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007cec:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007cf0:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007cf4:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007cf8:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007cfa:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007cfc:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007cfe:	bf8c      	ite	hi
90007d00:	1b90      	subhi	r0, r2, r6
90007d02:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007d04:	42a9      	cmp	r1, r5
90007d06:	bf8c      	ite	hi
90007d08:	1b4f      	subhi	r7, r1, r5
90007d0a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007d0c:	42b8      	cmp	r0, r7
90007d0e:	bf38      	it	cc
90007d10:	4638      	movcc	r0, r7
90007d12:	68df      	ldr	r7, [r3, #12]
90007d14:	4287      	cmp	r7, r0
90007d16:	d2c8      	bcs.n	90007caa <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007d18:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007d1a:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007d1c:	e7c7      	b.n	90007cae <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007d1e:	f06f 0004 	mvn.w	r0, #4
}
90007d22:	b004      	add	sp, #16
90007d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007d28:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007d2a:	4642      	mov	r2, r8
90007d2c:	e7ca      	b.n	90007cc4 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90007d2e:	f06f 0001 	mvn.w	r0, #1
}
90007d32:	4770      	bx	lr
90007d34:	2400895c 	.word	0x2400895c
90007d38:	24008958 	.word	0x24008958
90007d3c:	24008918 	.word	0x24008918

90007d40 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007d40:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007d42:	4c19      	ldr	r4, [pc, #100]	@ (90007da8 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007d44:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007d46:	4b19      	ldr	r3, [pc, #100]	@ (90007dac <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007d48:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007d4c:	4918      	ldr	r1, [pc, #96]	@ (90007db0 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007d4e:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
90007d52:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007d56:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007d58:	4c16      	ldr	r4, [pc, #88]	@ (90007db4 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007d5a:	f040 0001 	orr.w	r0, r0, #1
90007d5e:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
90007d60:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007d62:	6818      	ldr	r0, [r3, #0]
90007d64:	4001      	ands	r1, r0
90007d66:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007d68:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007d6a:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007d6c:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007d6e:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007d70:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007d72:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007d74:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007d76:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007d78:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007d7a:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90007d7c:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007d7e:	6819      	ldr	r1, [r3, #0]
90007d80:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
90007d84:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
90007d86:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007d88:	6823      	ldr	r3, [r4, #0]
90007d8a:	f36f 030f 	bfc	r3, #0, #16
90007d8e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
90007d92:	d203      	bcs.n	90007d9c <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007d94:	4b08      	ldr	r3, [pc, #32]	@ (90007db8 <SystemInit+0x78>)
90007d96:	2201      	movs	r2, #1
90007d98:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007d9c:	4a07      	ldr	r2, [pc, #28]	@ (90007dbc <SystemInit+0x7c>)
90007d9e:	4b02      	ldr	r3, [pc, #8]	@ (90007da8 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007da0:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007da4:	609a      	str	r2, [r3, #8]
}
90007da6:	4770      	bx	lr
90007da8:	e000ed00 	.word	0xe000ed00
90007dac:	58024400 	.word	0x58024400
90007db0:	eaf6ed7f 	.word	0xeaf6ed7f
90007db4:	5c001000 	.word	0x5c001000
90007db8:	51008000 	.word	0x51008000
90007dbc:	90000000 	.word	0x90000000

90007dc0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007dc0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007dc2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007dc4:	4c12      	ldr	r4, [pc, #72]	@ (90007e10 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007dc6:	f000 f855 	bl	90007e74 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007dca:	f003 ffc5 	bl	9000bd58 <HAL_RCC_GetSysClockFreq>
90007dce:	4b11      	ldr	r3, [pc, #68]	@ (90007e14 <HAL_Init+0x54>)
90007dd0:	4911      	ldr	r1, [pc, #68]	@ (90007e18 <HAL_Init+0x58>)
90007dd2:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007dd4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007dd6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007dda:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007dde:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007de0:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007de2:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007de6:	490d      	ldr	r1, [pc, #52]	@ (90007e1c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007de8:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007dec:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007dee:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007df2:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007df4:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007df6:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007df8:	f7fd f9f6 	bl	900051e8 <HAL_InitTick>
90007dfc:	b110      	cbz	r0, 90007e04 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007dfe:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007e00:	4620      	mov	r0, r4
90007e02:	bd10      	pop	{r4, pc}
90007e04:	4604      	mov	r4, r0
  HAL_MspInit();
90007e06:	f7fc fee5 	bl	90004bd4 <HAL_MspInit>
}
90007e0a:	4620      	mov	r0, r4
90007e0c:	bd10      	pop	{r4, pc}
90007e0e:	bf00      	nop
90007e10:	24000074 	.word	0x24000074
90007e14:	58024400 	.word	0x58024400
90007e18:	9002e238 	.word	0x9002e238
90007e1c:	24000078 	.word	0x24000078

90007e20 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007e20:	4a03      	ldr	r2, [pc, #12]	@ (90007e30 <HAL_IncTick+0x10>)
90007e22:	4b04      	ldr	r3, [pc, #16]	@ (90007e34 <HAL_IncTick+0x14>)
90007e24:	6811      	ldr	r1, [r2, #0]
90007e26:	781b      	ldrb	r3, [r3, #0]
90007e28:	440b      	add	r3, r1
90007e2a:	6013      	str	r3, [r2, #0]
}
90007e2c:	4770      	bx	lr
90007e2e:	bf00      	nop
90007e30:	24008960 	.word	0x24008960
90007e34:	2400007c 	.word	0x2400007c

90007e38 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007e38:	4b01      	ldr	r3, [pc, #4]	@ (90007e40 <HAL_GetTick+0x8>)
90007e3a:	6818      	ldr	r0, [r3, #0]
}
90007e3c:	4770      	bx	lr
90007e3e:	bf00      	nop
90007e40:	24008960 	.word	0x24008960

90007e44 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90007e44:	b538      	push	{r3, r4, r5, lr}
90007e46:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90007e48:	f7ff fff6 	bl	90007e38 <HAL_GetTick>
90007e4c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90007e4e:	1c63      	adds	r3, r4, #1
90007e50:	d002      	beq.n	90007e58 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
90007e52:	4b04      	ldr	r3, [pc, #16]	@ (90007e64 <HAL_Delay+0x20>)
90007e54:	781b      	ldrb	r3, [r3, #0]
90007e56:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90007e58:	f7ff ffee 	bl	90007e38 <HAL_GetTick>
90007e5c:	1b40      	subs	r0, r0, r5
90007e5e:	42a0      	cmp	r0, r4
90007e60:	d3fa      	bcc.n	90007e58 <HAL_Delay+0x14>
  {
  }
}
90007e62:	bd38      	pop	{r3, r4, r5, pc}
90007e64:	2400007c 	.word	0x2400007c

90007e68 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007e68:	4b01      	ldr	r3, [pc, #4]	@ (90007e70 <HAL_GetREVID+0x8>)
90007e6a:	6818      	ldr	r0, [r3, #0]
}
90007e6c:	0c00      	lsrs	r0, r0, #16
90007e6e:	4770      	bx	lr
90007e70:	5c001000 	.word	0x5c001000

90007e74 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007e74:	4906      	ldr	r1, [pc, #24]	@ (90007e90 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007e76:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007e7a:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007e7c:	4b05      	ldr	r3, [pc, #20]	@ (90007e94 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007e7e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007e80:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007e84:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007e88:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007e8a:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007e8c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007e8e:	4770      	bx	lr
90007e90:	e000ed00 	.word	0xe000ed00
90007e94:	05fa0000 	.word	0x05fa0000

90007e98 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007e98:	4b1a      	ldr	r3, [pc, #104]	@ (90007f04 <HAL_NVIC_SetPriority+0x6c>)
90007e9a:	68db      	ldr	r3, [r3, #12]
90007e9c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007ea0:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007ea2:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007ea6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007eaa:	f1be 0f04 	cmp.w	lr, #4
90007eae:	bf28      	it	cs
90007eb0:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007eb4:	f1bc 0f06 	cmp.w	ip, #6
90007eb8:	d91a      	bls.n	90007ef0 <HAL_NVIC_SetPriority+0x58>
90007eba:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007ebe:	f04f 33ff 	mov.w	r3, #4294967295
90007ec2:	fa03 f30c 	lsl.w	r3, r3, ip
90007ec6:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007eca:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007ece:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007ed0:	fa03 f30e 	lsl.w	r3, r3, lr
90007ed4:	ea21 0303 	bic.w	r3, r1, r3
90007ed8:	fa03 f30c 	lsl.w	r3, r3, ip
90007edc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007ee0:	ea4f 1303 	mov.w	r3, r3, lsl #4
90007ee4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90007ee6:	db06      	blt.n	90007ef6 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007ee8:	4a07      	ldr	r2, [pc, #28]	@ (90007f08 <HAL_NVIC_SetPriority+0x70>)
90007eea:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007eec:	f85d fb04 	ldr.w	pc, [sp], #4
90007ef0:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007ef2:	4694      	mov	ip, r2
90007ef4:	e7e9      	b.n	90007eca <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007ef6:	f000 000f 	and.w	r0, r0, #15
90007efa:	4a04      	ldr	r2, [pc, #16]	@ (90007f0c <HAL_NVIC_SetPriority+0x74>)
90007efc:	5413      	strb	r3, [r2, r0]
90007efe:	f85d fb04 	ldr.w	pc, [sp], #4
90007f02:	bf00      	nop
90007f04:	e000ed00 	.word	0xe000ed00
90007f08:	e000e400 	.word	0xe000e400
90007f0c:	e000ed14 	.word	0xe000ed14

90007f10 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007f10:	2800      	cmp	r0, #0
90007f12:	db07      	blt.n	90007f24 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007f14:	2301      	movs	r3, #1
90007f16:	f000 011f 	and.w	r1, r0, #31
90007f1a:	4a03      	ldr	r2, [pc, #12]	@ (90007f28 <HAL_NVIC_EnableIRQ+0x18>)
90007f1c:	0940      	lsrs	r0, r0, #5
90007f1e:	408b      	lsls	r3, r1
90007f20:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007f24:	4770      	bx	lr
90007f26:	bf00      	nop
90007f28:	e000e100 	.word	0xe000e100

90007f2c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007f2c:	2800      	cmp	r0, #0
90007f2e:	db0c      	blt.n	90007f4a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007f30:	0943      	lsrs	r3, r0, #5
90007f32:	2201      	movs	r2, #1
90007f34:	f000 001f 	and.w	r0, r0, #31
90007f38:	4904      	ldr	r1, [pc, #16]	@ (90007f4c <HAL_NVIC_DisableIRQ+0x20>)
90007f3a:	3320      	adds	r3, #32
90007f3c:	4082      	lsls	r2, r0
90007f3e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90007f42:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007f46:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007f4a:	4770      	bx	lr
90007f4c:	e000e100 	.word	0xe000e100

90007f50 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007f50:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007f54:	4b04      	ldr	r3, [pc, #16]	@ (90007f68 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007f56:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007f58:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007f5a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90007f5e:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90007f60:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90007f64:	4770      	bx	lr
90007f66:	bf00      	nop
90007f68:	e000ed00 	.word	0xe000ed00

90007f6c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007f6c:	4b06      	ldr	r3, [pc, #24]	@ (90007f88 <HAL_MPU_Enable+0x1c>)
90007f6e:	f040 0001 	orr.w	r0, r0, #1
90007f72:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007f76:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007f78:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90007f7c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007f7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007f82:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007f86:	4770      	bx	lr
90007f88:	e000ed00 	.word	0xe000ed00

90007f8c <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007f8c:	4a16      	ldr	r2, [pc, #88]	@ (90007fe8 <HAL_MPU_ConfigRegion+0x5c>)
90007f8e:	7843      	ldrb	r3, [r0, #1]
90007f90:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90007f94:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90007f98:	f023 0301 	bic.w	r3, r3, #1
90007f9c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90007fa0:	6843      	ldr	r3, [r0, #4]
90007fa2:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007fa6:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007fa8:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007fac:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90007fae:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007fb0:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007fb4:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007fb8:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007fba:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007fbc:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007fc0:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007fc4:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007fc8:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007fca:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007fce:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007fd2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90007fd6:	7a01      	ldrb	r1, [r0, #8]
90007fd8:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007fdc:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007fe0:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90007fe4:	4770      	bx	lr
90007fe6:	bf00      	nop
90007fe8:	e000ed00 	.word	0xe000ed00

90007fec <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007fec:	2800      	cmp	r0, #0
90007fee:	d036      	beq.n	9000805e <HAL_CRC_Init+0x72>
{
90007ff0:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007ff2:	7f43      	ldrb	r3, [r0, #29]
90007ff4:	4604      	mov	r4, r0
90007ff6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007ffa:	b363      	cbz	r3, 90008056 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007ffc:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007ffe:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008000:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008002:	b9f3      	cbnz	r3, 90008042 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008004:	6823      	ldr	r3, [r4, #0]
90008006:	4a17      	ldr	r2, [pc, #92]	@ (90008064 <HAL_CRC_Init+0x78>)
90008008:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000800a:	689a      	ldr	r2, [r3, #8]
9000800c:	f022 0218 	bic.w	r2, r2, #24
90008010:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90008012:	7962      	ldrb	r2, [r4, #5]
90008014:	b18a      	cbz	r2, 9000803a <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90008016:	6922      	ldr	r2, [r4, #16]
90008018:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000801a:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000801c:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008020:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90008024:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90008026:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008028:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000802a:	689a      	ldr	r2, [r3, #8]
9000802c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008030:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90008032:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008034:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90008036:	7761      	strb	r1, [r4, #29]
}
90008038:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000803a:	f04f 32ff 	mov.w	r2, #4294967295
9000803e:	611a      	str	r2, [r3, #16]
90008040:	e7eb      	b.n	9000801a <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90008042:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90008046:	4620      	mov	r0, r4
90008048:	f000 f80e 	bl	90008068 <HAL_CRCEx_Polynomial_Set>
9000804c:	b908      	cbnz	r0, 90008052 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000804e:	6823      	ldr	r3, [r4, #0]
90008050:	e7df      	b.n	90008012 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90008052:	2001      	movs	r0, #1
}
90008054:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90008056:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008058:	f7fc fdd6 	bl	90004c08 <HAL_CRC_MspInit>
9000805c:	e7ce      	b.n	90007ffc <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000805e:	2001      	movs	r0, #1
}
90008060:	4770      	bx	lr
90008062:	bf00      	nop
90008064:	04c11db7 	.word	0x04c11db7

90008068 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008068:	07cb      	lsls	r3, r1, #31
9000806a:	d51a      	bpl.n	900080a2 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
9000806c:	231f      	movs	r3, #31
{
9000806e:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008070:	3b01      	subs	r3, #1
90008072:	1c5c      	adds	r4, r3, #1
90008074:	fa21 fc03 	lsr.w	ip, r1, r3
90008078:	d015      	beq.n	900080a6 <HAL_CRCEx_Polynomial_Set+0x3e>
9000807a:	f01c 0f01 	tst.w	ip, #1
9000807e:	d0f7      	beq.n	90008070 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90008080:	2a18      	cmp	r2, #24
90008082:	d811      	bhi.n	900080a8 <HAL_CRCEx_Polynomial_Set+0x40>
90008084:	e8df f002 	tbb	[pc, r2]
90008088:	10101016 	.word	0x10101016
9000808c:	10101010 	.word	0x10101010
90008090:	10101024 	.word	0x10101024
90008094:	10101010 	.word	0x10101010
90008098:	10101021 	.word	0x10101021
9000809c:	10101010 	.word	0x10101010
900080a0:	14          	.byte	0x14
900080a1:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
900080a2:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900080a4:	4770      	bx	lr
    switch (PolyLength)
900080a6:	b12a      	cbz	r2, 900080b4 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
900080a8:	2001      	movs	r0, #1
}
900080aa:	f85d 4b04 	ldr.w	r4, [sp], #4
900080ae:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900080b0:	2b06      	cmp	r3, #6
900080b2:	d8f9      	bhi.n	900080a8 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900080b4:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900080b6:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900080b8:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900080ba:	68a3      	ldr	r3, [r4, #8]
900080bc:	f023 0318 	bic.w	r3, r3, #24
900080c0:	4313      	orrs	r3, r2
900080c2:	60a3      	str	r3, [r4, #8]
}
900080c4:	f85d 4b04 	ldr.w	r4, [sp], #4
900080c8:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900080ca:	2b07      	cmp	r3, #7
900080cc:	d9f2      	bls.n	900080b4 <HAL_CRCEx_Polynomial_Set+0x4c>
900080ce:	e7eb      	b.n	900080a8 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900080d0:	2b0f      	cmp	r3, #15
900080d2:	d9ef      	bls.n	900080b4 <HAL_CRCEx_Polynomial_Set+0x4c>
900080d4:	e7e8      	b.n	900080a8 <HAL_CRCEx_Polynomial_Set+0x40>
900080d6:	bf00      	nop

900080d8 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900080d8:	2800      	cmp	r0, #0
900080da:	d035      	beq.n	90008148 <HAL_DMA2D_Init+0x70>
{
900080dc:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900080de:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900080e2:	4604      	mov	r4, r0
900080e4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900080e8:	b34b      	cbz	r3, 9000813e <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900080ea:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900080ec:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900080ee:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900080f0:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900080f4:	69e1      	ldr	r1, [r4, #28]
900080f6:	681d      	ldr	r5, [r3, #0]
900080f8:	4814      	ldr	r0, [pc, #80]	@ (9000814c <HAL_DMA2D_Init+0x74>)
900080fa:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900080fc:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900080fe:	4028      	ands	r0, r5
90008100:	4301      	orrs	r1, r0
90008102:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008104:	69a1      	ldr	r1, [r4, #24]
90008106:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90008108:	430a      	orrs	r2, r1
9000810a:	4911      	ldr	r1, [pc, #68]	@ (90008150 <HAL_DMA2D_Init+0x78>)
9000810c:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000810e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008110:	430a      	orrs	r2, r1
90008112:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008114:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90008116:	f36f 010f 	bfc	r1, #0, #16
9000811a:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000811c:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008120:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008122:	0552      	lsls	r2, r2, #21
90008124:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008126:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
9000812a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000812e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008130:	430a      	orrs	r2, r1
90008132:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008134:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008136:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008138:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
9000813c:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000813e:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90008142:	f7fc fd79 	bl	90004c38 <HAL_DMA2D_MspInit>
90008146:	e7d0      	b.n	900080ea <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008148:	2001      	movs	r0, #1
}
9000814a:	4770      	bx	lr
9000814c:	fff8ffbf 	.word	0xfff8ffbf
90008150:	fffffef8 	.word	0xfffffef8

90008154 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90008154:	4770      	bx	lr
90008156:	bf00      	nop

90008158 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90008158:	4770      	bx	lr
9000815a:	bf00      	nop

9000815c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000815c:	6803      	ldr	r3, [r0, #0]
{
9000815e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008160:	685d      	ldr	r5, [r3, #4]
{
90008162:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008164:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008166:	07ea      	lsls	r2, r5, #31
90008168:	d501      	bpl.n	9000816e <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
9000816a:	05f1      	lsls	r1, r6, #23
9000816c:	d456      	bmi.n	9000821c <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000816e:	06aa      	lsls	r2, r5, #26
90008170:	d501      	bpl.n	90008176 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90008172:	04b3      	lsls	r3, r6, #18
90008174:	d43b      	bmi.n	900081ee <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90008176:	0728      	lsls	r0, r5, #28
90008178:	d501      	bpl.n	9000817e <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000817a:	0531      	lsls	r1, r6, #20
9000817c:	d421      	bmi.n	900081c2 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000817e:	076a      	lsls	r2, r5, #29
90008180:	d501      	bpl.n	90008186 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90008182:	0573      	lsls	r3, r6, #21
90008184:	d472      	bmi.n	9000826c <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90008186:	07a8      	lsls	r0, r5, #30
90008188:	d501      	bpl.n	9000818e <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
9000818a:	05b1      	lsls	r1, r6, #22
9000818c:	d404      	bmi.n	90008198 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000818e:	06ea      	lsls	r2, r5, #27
90008190:	d501      	bpl.n	90008196 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90008192:	04f3      	lsls	r3, r6, #19
90008194:	d457      	bmi.n	90008246 <HAL_DMA2D_IRQHandler+0xea>
}
90008196:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008198:	6823      	ldr	r3, [r4, #0]
9000819a:	681a      	ldr	r2, [r3, #0]
9000819c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
900081a0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900081a2:	2202      	movs	r2, #2
900081a4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900081a6:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900081a8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900081aa:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900081ac:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900081ae:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900081b2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900081b6:	6a23      	ldr	r3, [r4, #32]
900081b8:	2b00      	cmp	r3, #0
900081ba:	d0e8      	beq.n	9000818e <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900081bc:	4620      	mov	r0, r4
900081be:	4798      	blx	r3
900081c0:	e7e5      	b.n	9000818e <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900081c2:	6823      	ldr	r3, [r4, #0]
900081c4:	681a      	ldr	r2, [r3, #0]
900081c6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900081ca:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900081cc:	2208      	movs	r2, #8
900081ce:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900081d0:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900081d2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900081d4:	4313      	orrs	r3, r2
900081d6:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900081d8:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900081dc:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900081de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900081e0:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900081e4:	2b00      	cmp	r3, #0
900081e6:	d0ca      	beq.n	9000817e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900081e8:	4620      	mov	r0, r4
900081ea:	4798      	blx	r3
900081ec:	e7c7      	b.n	9000817e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900081ee:	6823      	ldr	r3, [r4, #0]
900081f0:	681a      	ldr	r2, [r3, #0]
900081f2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900081f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900081f8:	2220      	movs	r2, #32
900081fa:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900081fc:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900081fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008200:	f043 0302 	orr.w	r3, r3, #2
90008204:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008206:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000820a:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000820c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000820e:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008212:	2b00      	cmp	r3, #0
90008214:	d0af      	beq.n	90008176 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008216:	4620      	mov	r0, r4
90008218:	4798      	blx	r3
9000821a:	e7ac      	b.n	90008176 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000821c:	681a      	ldr	r2, [r3, #0]
9000821e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90008222:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008224:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90008226:	f042 0201 	orr.w	r2, r2, #1
9000822a:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000822c:	2201      	movs	r2, #1
9000822e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008230:	2304      	movs	r3, #4
90008232:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008236:	2300      	movs	r3, #0
90008238:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000823c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000823e:	2b00      	cmp	r3, #0
90008240:	d095      	beq.n	9000816e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90008242:	4798      	blx	r3
90008244:	e793      	b.n	9000816e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008246:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008248:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000824a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000824c:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000824e:	681a      	ldr	r2, [r3, #0]
90008250:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90008254:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008256:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008258:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000825a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000825c:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008260:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008262:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008266:	f7ff ff77 	bl	90008158 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000826a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000826c:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000826e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008270:	681a      	ldr	r2, [r3, #0]
90008272:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90008276:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008278:	2204      	movs	r2, #4
9000827a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000827c:	f7ff ff6a 	bl	90008154 <HAL_DMA2D_LineEventCallback>
90008280:	e781      	b.n	90008186 <HAL_DMA2D_IRQHandler+0x2a>
90008282:	bf00      	nop

90008284 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008284:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008288:	2a01      	cmp	r2, #1
9000828a:	d05f      	beq.n	9000834c <HAL_DMA2D_ConfigLayer+0xc8>
9000828c:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000828e:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008292:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008294:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008298:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000829c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000829e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900082a0:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
900082a4:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900082a8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900082aa:	6b04      	ldr	r4, [r0, #48]	@ 0x30
900082ac:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900082ae:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900082b0:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900082b2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900082b6:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900082ba:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900082bc:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900082be:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900082c2:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900082c6:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900082c8:	d923      	bls.n	90008312 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900082ca:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900082ce:	b971      	cbnz	r1, 900082ee <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900082d0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900082d2:	491f      	ldr	r1, [pc, #124]	@ (90008350 <HAL_DMA2D_ConfigLayer+0xcc>)
900082d4:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900082d6:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900082d8:	4311      	orrs	r1, r2
900082da:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900082dc:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900082de:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900082e0:	2101      	movs	r1, #1

  return HAL_OK;
900082e2:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900082e4:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900082e8:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900082ec:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900082ee:	2d0b      	cmp	r5, #11
900082f0:	d12a      	bne.n	90008348 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900082f2:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900082f4:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
900082f8:	4816      	ldr	r0, [pc, #88]	@ (90008354 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900082fa:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900082fe:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008300:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008304:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008306:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000830a:	430a      	orrs	r2, r1
9000830c:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000830e:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008310:	e7e5      	b.n	900082de <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008312:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008316:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008318:	b959      	cbnz	r1, 90008332 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000831a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000831c:	490c      	ldr	r1, [pc, #48]	@ (90008350 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000831e:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008320:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008322:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008324:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008326:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000832a:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000832c:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000832e:	62a0      	str	r0, [r4, #40]	@ 0x28
90008330:	e7d5      	b.n	900082de <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008332:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008334:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008338:	4905      	ldr	r1, [pc, #20]	@ (90008350 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000833a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000833c:	4029      	ands	r1, r5
9000833e:	4311      	orrs	r1, r2
90008340:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008342:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008344:	6226      	str	r6, [r4, #32]
90008346:	e7ca      	b.n	900082de <HAL_DMA2D_ConfigLayer+0x5a>
90008348:	4801      	ldr	r0, [pc, #4]	@ (90008350 <HAL_DMA2D_ConfigLayer+0xcc>)
9000834a:	e7d6      	b.n	900082fa <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
9000834c:	2002      	movs	r0, #2
}
9000834e:	4770      	bx	lr
90008350:	00ccfff0 	.word	0x00ccfff0
90008354:	00c0fff0 	.word	0x00c0fff0

90008358 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008358:	680b      	ldr	r3, [r1, #0]
9000835a:	2b00      	cmp	r3, #0
9000835c:	f000 81dc 	beq.w	90008718 <HAL_GPIO_Init+0x3c0>
90008360:	4ab4      	ldr	r2, [pc, #720]	@ (90008634 <HAL_GPIO_Init+0x2dc>)
90008362:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
90008364:	f04f 0200 	mov.w	r2, #0
{
90008368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000836c:	f04f 0b01 	mov.w	fp, #1
{
90008370:	b085      	sub	sp, #20
90008372:	f000 8105 	beq.w	90008580 <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008376:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000837a:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000837c:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
90008380:	9b00      	ldr	r3, [sp, #0]
90008382:	ea1c 0a03 	ands.w	sl, ip, r3
90008386:	f000 814b 	beq.w	90008620 <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000838a:	684d      	ldr	r5, [r1, #4]
9000838c:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000838e:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008390:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008394:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008398:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000839c:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000839e:	f1b8 0f01 	cmp.w	r8, #1
900083a2:	f240 815d 	bls.w	90008660 <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900083a6:	2f03      	cmp	r7, #3
900083a8:	f040 81cf 	bne.w	9000874a <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900083ac:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
900083b0:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900083b2:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900083b6:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900083ba:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
900083be:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900083c0:	f000 812e 	beq.w	90008620 <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900083c4:	4e9c      	ldr	r6, [pc, #624]	@ (90008638 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900083c6:	f002 0703 	and.w	r7, r2, #3
900083ca:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900083cc:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900083d0:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900083d2:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900083d6:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900083da:	4b98      	ldr	r3, [pc, #608]	@ (9000863c <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900083dc:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
900083e0:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
900083e4:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900083e8:	4298      	cmp	r0, r3
900083ea:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900083ee:	f004 0402 	and.w	r4, r4, #2
900083f2:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
900083f6:	9403      	str	r4, [sp, #12]
900083f8:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
900083fa:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900083fc:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008400:	f000 8178 	beq.w	900086f4 <HAL_GPIO_Init+0x39c>
90008404:	4b8e      	ldr	r3, [pc, #568]	@ (90008640 <HAL_GPIO_Init+0x2e8>)
90008406:	4298      	cmp	r0, r3
90008408:	f000 80de 	beq.w	900085c8 <HAL_GPIO_Init+0x270>
9000840c:	f8df c234 	ldr.w	ip, [pc, #564]	@ 90008644 <HAL_GPIO_Init+0x2ec>
90008410:	4560      	cmp	r0, ip
90008412:	f000 817b 	beq.w	9000870c <HAL_GPIO_Init+0x3b4>
90008416:	f8df c230 	ldr.w	ip, [pc, #560]	@ 90008648 <HAL_GPIO_Init+0x2f0>
9000841a:	4560      	cmp	r0, ip
9000841c:	f000 817d 	beq.w	9000871a <HAL_GPIO_Init+0x3c2>
90008420:	f8df c228 	ldr.w	ip, [pc, #552]	@ 9000864c <HAL_GPIO_Init+0x2f4>
90008424:	4560      	cmp	r0, ip
90008426:	f000 816b 	beq.w	90008700 <HAL_GPIO_Init+0x3a8>
9000842a:	f8df c224 	ldr.w	ip, [pc, #548]	@ 90008650 <HAL_GPIO_Init+0x2f8>
9000842e:	4560      	cmp	r0, ip
90008430:	f000 8179 	beq.w	90008726 <HAL_GPIO_Init+0x3ce>
90008434:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 90008654 <HAL_GPIO_Init+0x2fc>
90008438:	4560      	cmp	r0, ip
9000843a:	f000 817a 	beq.w	90008732 <HAL_GPIO_Init+0x3da>
9000843e:	f8df c218 	ldr.w	ip, [pc, #536]	@ 90008658 <HAL_GPIO_Init+0x300>
90008442:	4560      	cmp	r0, ip
90008444:	f000 817b 	beq.w	9000873e <HAL_GPIO_Init+0x3e6>
90008448:	f8df c210 	ldr.w	ip, [pc, #528]	@ 9000865c <HAL_GPIO_Init+0x304>
9000844c:	4560      	cmp	r0, ip
9000844e:	bf0c      	ite	eq
90008450:	f04f 0c09 	moveq.w	ip, #9
90008454:	f04f 0c0a 	movne.w	ip, #10
90008458:	fa0c f707 	lsl.w	r7, ip, r7
9000845c:	433c      	orrs	r4, r7
9000845e:	e0b8      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
90008460:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008464:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90008466:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008468:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
9000846c:	fa06 f807 	lsl.w	r8, r6, r7
90008470:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90008474:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008478:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000847c:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008480:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008484:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008488:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
9000848c:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
90008490:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008494:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008496:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000849a:	fa06 fe07 	lsl.w	lr, r6, r7
9000849e:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
900084a2:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900084a6:	d117      	bne.n	900084d8 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900084a8:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900084ac:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900084ae:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900084b2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
900084b6:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900084ba:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
900084be:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900084c2:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900084c4:	260f      	movs	r6, #15
900084c6:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900084ca:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900084cc:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900084d0:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
900084d4:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900084d8:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
900084da:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900084dc:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900084e0:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900084e4:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
900084e8:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900084ea:	d045      	beq.n	90008578 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084ec:	4f52      	ldr	r7, [pc, #328]	@ (90008638 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084ee:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084f0:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
900084f4:	f044 0402 	orr.w	r4, r4, #2
900084f8:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
900084fc:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90008500:	f022 0703 	bic.w	r7, r2, #3
90008504:	f004 0402 	and.w	r4, r4, #2
90008508:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
9000850c:	9403      	str	r4, [sp, #12]
9000850e:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008512:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008514:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
90008518:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000851c:	00a4      	lsls	r4, r4, #2
9000851e:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008522:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008524:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
90008528:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
9000852a:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
9000852e:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
90008532:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008534:	f100 80d2 	bmi.w	900086dc <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
90008538:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000853a:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000853e:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
90008540:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008542:	02ae      	lsls	r6, r5, #10
90008544:	f100 80d3 	bmi.w	900086ee <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
90008548:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000854a:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000854e:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
90008550:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008554:	03ae      	lsls	r6, r5, #14
90008556:	f100 80c7 	bmi.w	900086e8 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
9000855a:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000855c:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008560:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90008562:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008566:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000856a:	f100 80ba 	bmi.w	900086e2 <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
9000856e:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
90008570:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
90008574:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
90008578:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000857a:	fa33 f402 	lsrs.w	r4, r3, r2
9000857e:	d055      	beq.n	9000862c <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008580:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
90008584:	ea13 0c0e 	ands.w	ip, r3, lr
90008588:	d0f6      	beq.n	90008578 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000858a:	684d      	ldr	r5, [r1, #4]
9000858c:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000858e:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008590:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008594:	fa06 f807 	lsl.w	r8, r6, r7
90008598:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000859c:	f104 38ff 	add.w	r8, r4, #4294967295
900085a0:	f1b8 0f01 	cmp.w	r8, #1
900085a4:	f67f af5c 	bls.w	90008460 <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900085a8:	2c03      	cmp	r4, #3
900085aa:	d095      	beq.n	900084d8 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
900085ac:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90008634 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085b0:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
900085b2:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085b6:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900085ba:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085be:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
900085c2:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900085c6:	e787      	b.n	900084d8 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900085c8:	f04f 0c02 	mov.w	ip, #2
900085cc:	fa0c f707 	lsl.w	r7, ip, r7
900085d0:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
900085d2:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900085d4:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
900085d6:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
900085da:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
900085de:	bf4c      	ite	mi
900085e0:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
900085e4:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900085e6:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
900085e8:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
900085ec:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
900085f0:	bf54      	ite	pl
900085f2:	4034      	andpl	r4, r6
          temp |= iocurrent;
900085f4:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900085f8:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
900085fa:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
900085fe:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90008602:	bf54      	ite	pl
90008604:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008606:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000860a:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000860c:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008610:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90008614:	bf54      	ite	pl
90008616:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008618:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
9000861c:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
90008620:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008622:	9b00      	ldr	r3, [sp, #0]
90008624:	fa33 f402 	lsrs.w	r4, r3, r2
90008628:	f47f aea8 	bne.w	9000837c <HAL_GPIO_Init+0x24>
  }
}
9000862c:	b005      	add	sp, #20
9000862e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008632:	bf00      	nop
90008634:	58020000 	.word	0x58020000
90008638:	58024400 	.word	0x58024400
9000863c:	58020400 	.word	0x58020400
90008640:	58020800 	.word	0x58020800
90008644:	58020c00 	.word	0x58020c00
90008648:	58021000 	.word	0x58021000
9000864c:	58021400 	.word	0x58021400
90008650:	58021800 	.word	0x58021800
90008654:	58021c00 	.word	0x58021c00
90008658:	58022000 	.word	0x58022000
9000865c:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
90008660:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008664:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90008666:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008668:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
9000866c:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008670:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008672:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90008676:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000867a:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000867e:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008682:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008686:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000868a:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000868e:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008692:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
90008696:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000869a:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000869e:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900086a2:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900086a6:	f47f ae81 	bne.w	900083ac <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900086aa:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900086ae:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900086b0:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900086b4:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
900086b8:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900086bc:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
900086c0:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900086c4:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900086c6:	230f      	movs	r3, #15
900086c8:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900086cc:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900086ce:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900086d2:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
900086d6:	f8c8 c020 	str.w	ip, [r8, #32]
900086da:	e667      	b.n	900083ac <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
900086dc:	ea44 040c 	orr.w	r4, r4, ip
900086e0:	e72b      	b.n	9000853a <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
900086e2:	ea44 040c 	orr.w	r4, r4, ip
900086e6:	e743      	b.n	90008570 <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
900086e8:	ea4c 0404 	orr.w	r4, ip, r4
900086ec:	e736      	b.n	9000855c <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
900086ee:	ea44 040c 	orr.w	r4, r4, ip
900086f2:	e72a      	b.n	9000854a <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900086f4:	f04f 0c01 	mov.w	ip, #1
900086f8:	fa0c f707 	lsl.w	r7, ip, r7
900086fc:	433c      	orrs	r4, r7
900086fe:	e768      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
90008700:	f04f 0c05 	mov.w	ip, #5
90008704:	fa0c f707 	lsl.w	r7, ip, r7
90008708:	433c      	orrs	r4, r7
9000870a:	e762      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
9000870c:	f04f 0c03 	mov.w	ip, #3
90008710:	fa0c f707 	lsl.w	r7, ip, r7
90008714:	433c      	orrs	r4, r7
90008716:	e75c      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
90008718:	4770      	bx	lr
9000871a:	f04f 0c04 	mov.w	ip, #4
9000871e:	fa0c f707 	lsl.w	r7, ip, r7
90008722:	433c      	orrs	r4, r7
90008724:	e755      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
90008726:	f04f 0c06 	mov.w	ip, #6
9000872a:	fa0c f707 	lsl.w	r7, ip, r7
9000872e:	433c      	orrs	r4, r7
90008730:	e74f      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
90008732:	f04f 0c07 	mov.w	ip, #7
90008736:	fa0c f707 	lsl.w	r7, ip, r7
9000873a:	433c      	orrs	r4, r7
9000873c:	e749      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
9000873e:	f04f 0c08 	mov.w	ip, #8
90008742:	fa0c f707 	lsl.w	r7, ip, r7
90008746:	433c      	orrs	r4, r7
90008748:	e743      	b.n	900085d2 <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
9000874a:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000874e:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008750:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008754:	fa03 fc04 	lsl.w	ip, r3, r4
90008758:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
9000875c:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008760:	e624      	b.n	900083ac <HAL_GPIO_Init+0x54>
90008762:	bf00      	nop

90008764 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008764:	2900      	cmp	r1, #0
90008766:	f000 810c 	beq.w	90008982 <HAL_GPIO_DeInit+0x21e>
9000876a:	4b8b      	ldr	r3, [pc, #556]	@ (90008998 <HAL_GPIO_DeInit+0x234>)
9000876c:	4298      	cmp	r0, r3
{
9000876e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008772:	f000 809a 	beq.w	900088aa <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
90008776:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008778:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000877c:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008780:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
90008784:	2201      	movs	r2, #1
90008786:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90008788:	ea12 0e01 	ands.w	lr, r2, r1
9000878c:	d077      	beq.n	9000887e <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000878e:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008792:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008796:	4f81      	ldr	r7, [pc, #516]	@ (9000899c <HAL_GPIO_DeInit+0x238>)
90008798:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000879c:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000879e:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900087a0:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
900087a4:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900087a8:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
900087ac:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900087b0:	d027      	beq.n	90008802 <HAL_GPIO_DeInit+0x9e>
900087b2:	4f7b      	ldr	r7, [pc, #492]	@ (900089a0 <HAL_GPIO_DeInit+0x23c>)
900087b4:	42b8      	cmp	r0, r7
900087b6:	d06e      	beq.n	90008896 <HAL_GPIO_DeInit+0x132>
900087b8:	4f7a      	ldr	r7, [pc, #488]	@ (900089a4 <HAL_GPIO_DeInit+0x240>)
900087ba:	42b8      	cmp	r0, r7
900087bc:	d070      	beq.n	900088a0 <HAL_GPIO_DeInit+0x13c>
900087be:	4f7a      	ldr	r7, [pc, #488]	@ (900089a8 <HAL_GPIO_DeInit+0x244>)
900087c0:	42b8      	cmp	r0, r7
900087c2:	d063      	beq.n	9000888c <HAL_GPIO_DeInit+0x128>
900087c4:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 900089b0 <HAL_GPIO_DeInit+0x24c>
900087c8:	4558      	cmp	r0, fp
900087ca:	f000 80d5 	beq.w	90008978 <HAL_GPIO_DeInit+0x214>
900087ce:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 900089b4 <HAL_GPIO_DeInit+0x250>
900087d2:	4558      	cmp	r0, fp
900087d4:	f000 80d6 	beq.w	90008984 <HAL_GPIO_DeInit+0x220>
900087d8:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 900089b8 <HAL_GPIO_DeInit+0x254>
900087dc:	4558      	cmp	r0, fp
900087de:	f000 80c6 	beq.w	9000896e <HAL_GPIO_DeInit+0x20a>
900087e2:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 900089bc <HAL_GPIO_DeInit+0x258>
900087e6:	4558      	cmp	r0, fp
900087e8:	f000 80d1 	beq.w	9000898e <HAL_GPIO_DeInit+0x22a>
900087ec:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 900089c0 <HAL_GPIO_DeInit+0x25c>
900087f0:	4558      	cmp	r0, fp
900087f2:	bf0c      	ite	eq
900087f4:	f04f 0b09 	moveq.w	fp, #9
900087f8:	f04f 0b0a 	movne.w	fp, #10
900087fc:	fa0b f404 	lsl.w	r4, fp, r4
90008800:	e002      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
90008802:	2701      	movs	r7, #1
90008804:	fa07 f404 	lsl.w	r4, r7, r4
90008808:	45a4      	cmp	ip, r4
9000880a:	d117      	bne.n	9000883c <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000880c:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
90008810:	ea24 040e 	bic.w	r4, r4, lr
90008814:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008818:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
9000881c:	ea24 040e 	bic.w	r4, r4, lr
90008820:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90008824:	6874      	ldr	r4, [r6, #4]
90008826:	ea24 040e 	bic.w	r4, r4, lr
9000882a:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000882c:	6834      	ldr	r4, [r6, #0]
9000882e:	ea24 040e 	bic.w	r4, r4, lr
90008832:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90008834:	68ac      	ldr	r4, [r5, #8]
90008836:	ea24 0408 	bic.w	r4, r4, r8
9000883a:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000883c:	005d      	lsls	r5, r3, #1
9000883e:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008840:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008844:	fa0a f505 	lsl.w	r5, sl, r5
90008848:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
9000884c:	432c      	orrs	r4, r5
9000884e:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008850:	f003 0407 	and.w	r4, r3, #7
90008854:	f8dc e020 	ldr.w	lr, [ip, #32]
90008858:	00a4      	lsls	r4, r4, #2
9000885a:	fa09 f404 	lsl.w	r4, r9, r4
9000885e:	ea2e 0404 	bic.w	r4, lr, r4
90008862:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008866:	68c4      	ldr	r4, [r0, #12]
90008868:	ea24 0405 	bic.w	r4, r4, r5
9000886c:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000886e:	6844      	ldr	r4, [r0, #4]
90008870:	ea24 0202 	bic.w	r2, r4, r2
90008874:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008876:	6882      	ldr	r2, [r0, #8]
90008878:	ea22 0205 	bic.w	r2, r2, r5
9000887c:	6082      	str	r2, [r0, #8]
    }

    position++;
9000887e:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008880:	fa31 f203 	lsrs.w	r2, r1, r3
90008884:	f47f af7e 	bne.w	90008784 <HAL_GPIO_DeInit+0x20>
  }
}
90008888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000888c:	f04f 0b04 	mov.w	fp, #4
90008890:	fa0b f404 	lsl.w	r4, fp, r4
90008894:	e7b8      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
90008896:	f04f 0b02 	mov.w	fp, #2
9000889a:	fa0b f404 	lsl.w	r4, fp, r4
9000889e:	e7b3      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
900088a0:	f04f 0b03 	mov.w	fp, #3
900088a4:	fa0b f404 	lsl.w	r4, fp, r4
900088a8:	e7ae      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
900088aa:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
900088ac:	f04f 0c01 	mov.w	ip, #1
900088b0:	4f3e      	ldr	r7, [pc, #248]	@ (900089ac <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900088b2:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900088b4:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900088b8:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900088bc:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900088c0:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
900088c4:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900088c8:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
900088ca:	ea11 0904 	ands.w	r9, r1, r4
900088ce:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900088d0:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
900088d4:	d045      	beq.n	90008962 <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
900088d6:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900088da:	ea13 0f0a 	tst.w	r3, sl
900088de:	d11d      	bne.n	9000891c <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900088e0:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
900088e4:	ea2a 0a09 	bic.w	sl, sl, r9
900088e8:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900088ec:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
900088f0:	ea2a 0a09 	bic.w	sl, sl, r9
900088f4:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
900088f8:	f8d6 a004 	ldr.w	sl, [r6, #4]
900088fc:	ea2a 0a09 	bic.w	sl, sl, r9
90008900:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008904:	f8d6 a000 	ldr.w	sl, [r6]
90008908:	ea2a 0909 	bic.w	r9, sl, r9
9000890c:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90008910:	f8d8 9008 	ldr.w	r9, [r8, #8]
90008914:	ea29 0303 	bic.w	r3, r9, r3
90008918:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000891c:	ea4f 0842 	mov.w	r8, r2, lsl #1
90008920:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008922:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008926:	fa0e f808 	lsl.w	r8, lr, r8
9000892a:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000892e:	ea43 0308 	orr.w	r3, r3, r8
90008932:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008934:	f002 0307 	and.w	r3, r2, #7
90008938:	f8d9 a020 	ldr.w	sl, [r9, #32]
9000893c:	009b      	lsls	r3, r3, #2
9000893e:	fa05 f303 	lsl.w	r3, r5, r3
90008942:	ea2a 0303 	bic.w	r3, sl, r3
90008946:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000894a:	68c3      	ldr	r3, [r0, #12]
9000894c:	ea23 0308 	bic.w	r3, r3, r8
90008950:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90008952:	6843      	ldr	r3, [r0, #4]
90008954:	ea23 0304 	bic.w	r3, r3, r4
90008958:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000895a:	6883      	ldr	r3, [r0, #8]
9000895c:	ea23 0308 	bic.w	r3, r3, r8
90008960:	6083      	str	r3, [r0, #8]
    position++;
90008962:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008964:	fa31 f302 	lsrs.w	r3, r1, r2
90008968:	d1a8      	bne.n	900088bc <HAL_GPIO_DeInit+0x158>
}
9000896a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000896e:	f04f 0b07 	mov.w	fp, #7
90008972:	fa0b f404 	lsl.w	r4, fp, r4
90008976:	e747      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
90008978:	f04f 0b05 	mov.w	fp, #5
9000897c:	fa0b f404 	lsl.w	r4, fp, r4
90008980:	e742      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
90008982:	4770      	bx	lr
90008984:	f04f 0b06 	mov.w	fp, #6
90008988:	fa0b f404 	lsl.w	r4, fp, r4
9000898c:	e73c      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
9000898e:	f04f 0b08 	mov.w	fp, #8
90008992:	fa0b f404 	lsl.w	r4, fp, r4
90008996:	e737      	b.n	90008808 <HAL_GPIO_DeInit+0xa4>
90008998:	58020000 	.word	0x58020000
9000899c:	58020400 	.word	0x58020400
900089a0:	58020800 	.word	0x58020800
900089a4:	58020c00 	.word	0x58020c00
900089a8:	58021000 	.word	0x58021000
900089ac:	58000400 	.word	0x58000400
900089b0:	58021400 	.word	0x58021400
900089b4:	58021800 	.word	0x58021800
900089b8:	58021c00 	.word	0x58021c00
900089bc:	58022000 	.word	0x58022000
900089c0:	58022400 	.word	0x58022400

900089c4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900089c4:	6903      	ldr	r3, [r0, #16]
900089c6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900089c8:	bf14      	ite	ne
900089ca:	2001      	movne	r0, #1
900089cc:	2000      	moveq	r0, #0
900089ce:	4770      	bx	lr

900089d0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900089d0:	b902      	cbnz	r2, 900089d4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900089d2:	0409      	lsls	r1, r1, #16
900089d4:	6181      	str	r1, [r0, #24]
  }
}
900089d6:	4770      	bx	lr

900089d8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900089d8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900089da:	ea01 0203 	and.w	r2, r1, r3
900089de:	ea21 0103 	bic.w	r1, r1, r3
900089e2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900089e6:	6181      	str	r1, [r0, #24]
}
900089e8:	4770      	bx	lr
900089ea:	bf00      	nop

900089ec <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089ec:	6803      	ldr	r3, [r0, #0]
900089ee:	699a      	ldr	r2, [r3, #24]
900089f0:	0412      	lsls	r2, r2, #16
900089f2:	f140 8097 	bpl.w	90008b24 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
900089f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900089fa:	4604      	mov	r4, r0
900089fc:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089fe:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008a00:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008a02:	f012 0810 	ands.w	r8, r2, #16
90008a06:	d07f      	beq.n	90008b08 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90008a08:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008a0a:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a0c:	699a      	ldr	r2, [r3, #24]
90008a0e:	f012 0820 	ands.w	r8, r2, #32
90008a12:	d17b      	bne.n	90008b0c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a14:	f7ff fa10 	bl	90007e38 <HAL_GetTick>
90008a18:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a1a:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a1c:	2819      	cmp	r0, #25
90008a1e:	d83d      	bhi.n	90008a9c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a20:	699a      	ldr	r2, [r3, #24]
90008a22:	0690      	lsls	r0, r2, #26
90008a24:	d5f6      	bpl.n	90008a14 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008a26:	2220      	movs	r2, #32
90008a28:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008a2a:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90008a2e:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008a30:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008a32:	05d1      	lsls	r1, r2, #23
90008a34:	d552      	bpl.n	90008adc <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a36:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a3a:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008a3c:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a40:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a42:	d504      	bpl.n	90008a4e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a44:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008a48:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a4c:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008a4e:	0591      	lsls	r1, r2, #22
90008a50:	d504      	bpl.n	90008a5c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a52:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008a56:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a5a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008a5c:	699a      	ldr	r2, [r3, #24]
90008a5e:	0795      	lsls	r5, r2, #30
90008a60:	d501      	bpl.n	90008a66 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
90008a62:	2200      	movs	r2, #0
90008a64:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008a66:	699a      	ldr	r2, [r3, #24]
90008a68:	07d0      	lsls	r0, r2, #31
90008a6a:	d403      	bmi.n	90008a74 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008a6c:	699a      	ldr	r2, [r3, #24]
90008a6e:	f042 0201 	orr.w	r2, r2, #1
90008a72:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008a74:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90008a76:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008a78:	4d2b      	ldr	r5, [pc, #172]	@ (90008b28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a7a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008a7c:	402a      	ands	r2, r5
90008a7e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008a80:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90008a82:	ea43 0308 	orr.w	r3, r3, r8
90008a86:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008a88:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a8c:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008a90:	2300      	movs	r3, #0
      return HAL_ERROR;
90008a92:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008a94:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90008a98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a9c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008a9e:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008aa2:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008aa4:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008aa6:	0409      	lsls	r1, r1, #16
90008aa8:	d50b      	bpl.n	90008ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
90008aaa:	0441      	lsls	r1, r0, #17
90008aac:	d409      	bmi.n	90008ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
90008aae:	2a20      	cmp	r2, #32
90008ab0:	d007      	beq.n	90008ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008ab2:	685a      	ldr	r2, [r3, #4]
90008ab4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008ab8:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008aba:	f7ff f9bd 	bl	90007e38 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008abe:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90008ac0:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008ac2:	699a      	ldr	r2, [r3, #24]
90008ac4:	0690      	lsls	r0, r2, #26
90008ac6:	d4a1      	bmi.n	90008a0c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008ac8:	f7ff f9b6 	bl	90007e38 <HAL_GetTick>
90008acc:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008ace:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008ad0:	2819      	cmp	r0, #25
90008ad2:	d9f6      	bls.n	90008ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008ad4:	f04f 0820 	mov.w	r8, #32
90008ad8:	699a      	ldr	r2, [r3, #24]
90008ada:	e7a6      	b.n	90008a2a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008adc:	0550      	lsls	r0, r2, #21
90008ade:	d4b1      	bmi.n	90008a44 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008ae0:	0592      	lsls	r2, r2, #22
90008ae2:	d4b6      	bmi.n	90008a52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90008ae4:	2d00      	cmp	r5, #0
90008ae6:	d1b9      	bne.n	90008a5c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ae8:	f7ff f9a6 	bl	90007e38 <HAL_GetTick>
90008aec:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008aee:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008af0:	2819      	cmp	r0, #25
90008af2:	d902      	bls.n	90008afa <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008af4:	699a      	ldr	r2, [r3, #24]
90008af6:	0411      	lsls	r1, r2, #16
90008af8:	d40b      	bmi.n	90008b12 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008afa:	699a      	ldr	r2, [r3, #24]
90008afc:	0412      	lsls	r2, r2, #16
90008afe:	f53f af7f 	bmi.w	90008a00 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
90008b02:	2000      	movs	r0, #0
}
90008b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008b08:	4645      	mov	r5, r8
90008b0a:	e791      	b.n	90008a30 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90008b0c:	f04f 0800 	mov.w	r8, #0
90008b10:	e789      	b.n	90008a26 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b12:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b14:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b16:	4313      	orrs	r3, r2
90008b18:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b1a:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b1e:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008b22:	e7b5      	b.n	90008a90 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90008b24:	2000      	movs	r0, #0
}
90008b26:	4770      	bx	lr
90008b28:	fe00e800 	.word	0xfe00e800

90008b2c <I2C_WaitOnTXISFlagUntilTimeout>:
{
90008b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008b30:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b32:	2710      	movs	r7, #16
{
90008b34:	4605      	mov	r5, r0
90008b36:	460e      	mov	r6, r1
90008b38:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008b3a:	699a      	ldr	r2, [r3, #24]
90008b3c:	f012 0202 	ands.w	r2, r2, #2
90008b40:	d168      	bne.n	90008c14 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
90008b42:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008b44:	f011 0c10 	ands.w	ip, r1, #16
90008b48:	d062      	beq.n	90008c10 <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b4a:	1c74      	adds	r4, r6, #1
90008b4c:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b4e:	d166      	bne.n	90008c1e <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90008b50:	699c      	ldr	r4, [r3, #24]
90008b52:	f014 0420 	ands.w	r4, r4, #32
90008b56:	d160      	bne.n	90008c1a <I2C_WaitOnTXISFlagUntilTimeout+0xee>
90008b58:	699a      	ldr	r2, [r3, #24]
90008b5a:	0691      	lsls	r1, r2, #26
90008b5c:	d5fc      	bpl.n	90008b58 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b5e:	2220      	movs	r2, #32
90008b60:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008b62:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008b66:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008b68:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008b6a:	05d0      	lsls	r0, r2, #23
90008b6c:	d532      	bpl.n	90008bd4 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b6e:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b72:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008b74:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b78:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b7a:	d504      	bpl.n	90008b86 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b7c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008b80:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b84:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008b86:	0596      	lsls	r6, r2, #22
90008b88:	d504      	bpl.n	90008b94 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b8a:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008b8e:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b92:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008b94:	699a      	ldr	r2, [r3, #24]
90008b96:	0790      	lsls	r0, r2, #30
90008b98:	d501      	bpl.n	90008b9e <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
90008b9a:	2200      	movs	r2, #0
90008b9c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008b9e:	699a      	ldr	r2, [r3, #24]
90008ba0:	07d1      	lsls	r1, r2, #31
90008ba2:	d403      	bmi.n	90008bac <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008ba4:	699a      	ldr	r2, [r3, #24]
90008ba6:	f042 0201 	orr.w	r2, r2, #1
90008baa:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008bac:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008bae:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008bb0:	4c38      	ldr	r4, [pc, #224]	@ (90008c94 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008bb2:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008bb4:	4022      	ands	r2, r4
90008bb6:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008bb8:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008bba:	ea43 030c 	orr.w	r3, r3, ip
90008bbe:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008bc0:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008bc4:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008bc8:	2300      	movs	r3, #0
      return HAL_ERROR;
90008bca:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008bcc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008bd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008bd4:	0550      	lsls	r0, r2, #21
90008bd6:	d4d1      	bmi.n	90008b7c <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008bd8:	0594      	lsls	r4, r2, #22
90008bda:	d4d6      	bmi.n	90008b8a <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90008bdc:	2900      	cmp	r1, #0
90008bde:	d1d9      	bne.n	90008b94 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90008be0:	1c72      	adds	r2, r6, #1
90008be2:	d0aa      	beq.n	90008b3a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008be4:	f7ff f928 	bl	90007e38 <HAL_GetTick>
90008be8:	eba0 0308 	sub.w	r3, r0, r8
90008bec:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008bee:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008bf0:	d801      	bhi.n	90008bf6 <I2C_WaitOnTXISFlagUntilTimeout+0xca>
90008bf2:	2e00      	cmp	r6, #0
90008bf4:	d1a1      	bne.n	90008b3a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008bf6:	699a      	ldr	r2, [r3, #24]
90008bf8:	f012 0202 	ands.w	r2, r2, #2
90008bfc:	d19d      	bne.n	90008b3a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bfe:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c00:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c02:	430b      	orrs	r3, r1
90008c04:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c06:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c0a:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90008c0e:	e7db      	b.n	90008bc8 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90008c10:	4661      	mov	r1, ip
90008c12:	e7a9      	b.n	90008b68 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90008c14:	2000      	movs	r0, #0
}
90008c16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c1a:	4614      	mov	r4, r2
90008c1c:	e79f      	b.n	90008b5e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008c1e:	4614      	mov	r4, r2
90008c20:	46c1      	mov	r9, r8
90008c22:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c24:	699a      	ldr	r2, [r3, #24]
90008c26:	0692      	lsls	r2, r2, #26
90008c28:	d40e      	bmi.n	90008c48 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90008c2a:	f1ba 0f00 	cmp.w	sl, #0
90008c2e:	d198      	bne.n	90008b62 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008c30:	f7ff f902 	bl	90007e38 <HAL_GetTick>
90008c34:	eba0 0309 	sub.w	r3, r0, r9
90008c38:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008c3a:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008c3c:	d308      	bcc.n	90008c50 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90008c3e:	b13e      	cbz	r6, 90008c50 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c40:	699a      	ldr	r2, [r3, #24]
90008c42:	0690      	lsls	r0, r2, #26
90008c44:	d5f4      	bpl.n	90008c30 <I2C_WaitOnTXISFlagUntilTimeout+0x104>
90008c46:	e78a      	b.n	90008b5e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008c48:	f1ba 0f00 	cmp.w	sl, #0
90008c4c:	d189      	bne.n	90008b62 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90008c4e:	e786      	b.n	90008b5e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008c50:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008c52:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008c56:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008c58:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008c5a:	0409      	lsls	r1, r1, #16
90008c5c:	d50b      	bpl.n	90008c76 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
90008c5e:	0441      	lsls	r1, r0, #17
90008c60:	d409      	bmi.n	90008c76 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
90008c62:	2a20      	cmp	r2, #32
90008c64:	d007      	beq.n	90008c76 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008c66:	685a      	ldr	r2, [r3, #4]
90008c68:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c6c:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008c6e:	f7ff f8e3 	bl	90007e38 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c72:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008c74:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c76:	699a      	ldr	r2, [r3, #24]
90008c78:	0690      	lsls	r0, r2, #26
90008c7a:	d4d3      	bmi.n	90008c24 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c7c:	f7ff f8dc 	bl	90007e38 <HAL_GetTick>
90008c80:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c84:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c86:	2819      	cmp	r0, #25
90008c88:	d9f5      	bls.n	90008c76 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008c8a:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008c8c:	f04f 0a01 	mov.w	sl, #1
90008c90:	e7c8      	b.n	90008c24 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90008c92:	bf00      	nop
90008c94:	fe00e800 	.word	0xfe00e800

90008c98 <I2C_WaitOnFlagUntilTimeout>:
{
90008c98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008c9c:	461d      	mov	r5, r3
90008c9e:	4683      	mov	fp, r0
90008ca0:	460f      	mov	r7, r1
90008ca2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008ca4:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008ca6:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008caa:	699a      	ldr	r2, [r3, #24]
90008cac:	ea37 0202 	bics.w	r2, r7, r2
90008cb0:	bf0c      	ite	eq
90008cb2:	2201      	moveq	r2, #1
90008cb4:	2200      	movne	r2, #0
90008cb6:	42b2      	cmp	r2, r6
90008cb8:	d173      	bne.n	90008da2 <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90008cba:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008cbc:	f012 0c10 	ands.w	ip, r2, #16
90008cc0:	d06d      	beq.n	90008d9e <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008cc2:	1c6c      	adds	r4, r5, #1
90008cc4:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008cc8:	d170      	bne.n	90008dac <I2C_WaitOnFlagUntilTimeout+0x114>
90008cca:	699c      	ldr	r4, [r3, #24]
90008ccc:	f014 0420 	ands.w	r4, r4, #32
90008cd0:	d16a      	bne.n	90008da8 <I2C_WaitOnFlagUntilTimeout+0x110>
90008cd2:	699a      	ldr	r2, [r3, #24]
90008cd4:	0691      	lsls	r1, r2, #26
90008cd6:	d5fc      	bpl.n	90008cd2 <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008cd8:	2220      	movs	r2, #32
90008cda:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008cdc:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008ce0:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008ce2:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008ce4:	05d0      	lsls	r0, r2, #23
90008ce6:	d534      	bpl.n	90008d52 <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008ce8:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cec:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008cee:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008cf2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cf4:	d504      	bpl.n	90008d00 <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008cf6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008cfa:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008cfe:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008d00:	0595      	lsls	r5, r2, #22
90008d02:	d504      	bpl.n	90008d0e <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d04:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008d08:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d0c:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008d0e:	699a      	ldr	r2, [r3, #24]
90008d10:	0790      	lsls	r0, r2, #30
90008d12:	d501      	bpl.n	90008d18 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90008d14:	2200      	movs	r2, #0
90008d16:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008d18:	699a      	ldr	r2, [r3, #24]
90008d1a:	07d1      	lsls	r1, r2, #31
90008d1c:	d403      	bmi.n	90008d26 <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008d1e:	699a      	ldr	r2, [r3, #24]
90008d20:	f042 0201 	orr.w	r2, r2, #1
90008d24:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008d26:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008d28:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008d2a:	4c40      	ldr	r4, [pc, #256]	@ (90008e2c <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d2c:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008d2e:	4022      	ands	r2, r4
90008d30:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008d32:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90008d36:	ea43 030c 	orr.w	r3, r3, ip
90008d3a:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008d3e:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d42:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008d46:	2300      	movs	r3, #0
      return HAL_ERROR;
90008d48:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008d4a:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90008d4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008d52:	0550      	lsls	r0, r2, #21
90008d54:	d4cf      	bmi.n	90008cf6 <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008d56:	0594      	lsls	r4, r2, #22
90008d58:	d4d4      	bmi.n	90008d04 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
90008d5a:	2900      	cmp	r1, #0
90008d5c:	d1d7      	bne.n	90008d0e <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
90008d5e:	1c6a      	adds	r2, r5, #1
90008d60:	d0a3      	beq.n	90008caa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d62:	f7ff f869 	bl	90007e38 <HAL_GetTick>
90008d66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008d68:	1ac3      	subs	r3, r0, r3
90008d6a:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d6c:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d70:	d801      	bhi.n	90008d76 <I2C_WaitOnFlagUntilTimeout+0xde>
90008d72:	2d00      	cmp	r5, #0
90008d74:	d199      	bne.n	90008caa <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d76:	699a      	ldr	r2, [r3, #24]
90008d78:	ea37 0202 	bics.w	r2, r7, r2
90008d7c:	bf0c      	ite	eq
90008d7e:	2201      	moveq	r2, #1
90008d80:	2200      	movne	r2, #0
90008d82:	42b2      	cmp	r2, r6
90008d84:	d191      	bne.n	90008caa <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008d86:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d8a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008d8c:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008d8e:	430b      	orrs	r3, r1
90008d90:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d94:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008d98:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90008d9c:	e7d3      	b.n	90008d46 <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
90008d9e:	4661      	mov	r1, ip
90008da0:	e79f      	b.n	90008ce2 <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
90008da2:	2000      	movs	r0, #0
}
90008da4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008da8:	2400      	movs	r4, #0
90008daa:	e795      	b.n	90008cd8 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008dac:	2400      	movs	r4, #0
90008dae:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90008db2:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008db4:	699a      	ldr	r2, [r3, #24]
90008db6:	0692      	lsls	r2, r2, #26
90008db8:	d40f      	bmi.n	90008dda <I2C_WaitOnFlagUntilTimeout+0x142>
90008dba:	f1ba 0f00 	cmp.w	sl, #0
90008dbe:	d18d      	bne.n	90008cdc <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008dc0:	f7ff f83a 	bl	90007e38 <HAL_GetTick>
90008dc4:	eba0 0309 	sub.w	r3, r0, r9
90008dc8:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008dca:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008dce:	d309      	bcc.n	90008de4 <I2C_WaitOnFlagUntilTimeout+0x14c>
90008dd0:	b145      	cbz	r5, 90008de4 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008dd2:	699a      	ldr	r2, [r3, #24]
90008dd4:	0690      	lsls	r0, r2, #26
90008dd6:	d5f3      	bpl.n	90008dc0 <I2C_WaitOnFlagUntilTimeout+0x128>
90008dd8:	e77e      	b.n	90008cd8 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90008dda:	f1ba 0f00 	cmp.w	sl, #0
90008dde:	f47f af7d 	bne.w	90008cdc <I2C_WaitOnFlagUntilTimeout+0x44>
90008de2:	e779      	b.n	90008cd8 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008de4:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008de6:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008dea:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008dec:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008dee:	0409      	lsls	r1, r1, #16
90008df0:	d50c      	bpl.n	90008e0c <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90008df2:	0441      	lsls	r1, r0, #17
90008df4:	d40a      	bmi.n	90008e0c <I2C_WaitOnFlagUntilTimeout+0x174>
90008df6:	2a20      	cmp	r2, #32
90008df8:	d008      	beq.n	90008e0c <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008dfa:	685a      	ldr	r2, [r3, #4]
90008dfc:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008e00:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008e02:	f7ff f819 	bl	90007e38 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e06:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90008e0a:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e0c:	699a      	ldr	r2, [r3, #24]
90008e0e:	0690      	lsls	r0, r2, #26
90008e10:	d4d0      	bmi.n	90008db4 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008e12:	f7ff f811 	bl	90007e38 <HAL_GetTick>
90008e16:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008e1a:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008e1e:	2819      	cmp	r0, #25
90008e20:	d9f4      	bls.n	90008e0c <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008e22:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008e24:	f04f 0a01 	mov.w	sl, #1
90008e28:	e7c4      	b.n	90008db4 <I2C_WaitOnFlagUntilTimeout+0x11c>
90008e2a:	bf00      	nop
90008e2c:	fe00e800 	.word	0xfe00e800

90008e30 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e30:	6803      	ldr	r3, [r0, #0]
{
90008e32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008e36:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e38:	699a      	ldr	r2, [r3, #24]
90008e3a:	0695      	lsls	r5, r2, #26
90008e3c:	d461      	bmi.n	90008f02 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90008e3e:	4605      	mov	r5, r0
90008e40:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008e42:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008e46:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008e48:	f012 0c10 	ands.w	ip, r2, #16
90008e4c:	d05c      	beq.n	90008f08 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008e4e:	1c74      	adds	r4, r6, #1
90008e50:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008e54:	d165      	bne.n	90008f22 <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90008e56:	699c      	ldr	r4, [r3, #24]
90008e58:	f014 0420 	ands.w	r4, r4, #32
90008e5c:	d15f      	bne.n	90008f1e <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008e5e:	699a      	ldr	r2, [r3, #24]
90008e60:	0691      	lsls	r1, r2, #26
90008e62:	d5fc      	bpl.n	90008e5e <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008e64:	2220      	movs	r2, #32
90008e66:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008e68:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008e6c:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008e6e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008e70:	05d0      	lsls	r0, r2, #23
90008e72:	d532      	bpl.n	90008eda <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008e74:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008e78:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008e7a:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008e7e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008e80:	d504      	bpl.n	90008e8c <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008e82:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008e86:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008e8a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008e8c:	0596      	lsls	r6, r2, #22
90008e8e:	d504      	bpl.n	90008e9a <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008e90:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008e94:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008e98:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008e9a:	699a      	ldr	r2, [r3, #24]
90008e9c:	0790      	lsls	r0, r2, #30
90008e9e:	d501      	bpl.n	90008ea4 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90008ea0:	2200      	movs	r2, #0
90008ea2:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008ea4:	699a      	ldr	r2, [r3, #24]
90008ea6:	07d1      	lsls	r1, r2, #31
90008ea8:	d403      	bmi.n	90008eb2 <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008eaa:	699a      	ldr	r2, [r3, #24]
90008eac:	f042 0201 	orr.w	r2, r2, #1
90008eb0:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008eb2:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008eb4:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008eb6:	4c38      	ldr	r4, [pc, #224]	@ (90008f98 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008eb8:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008eba:	4022      	ands	r2, r4
90008ebc:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008ebe:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008ec0:	ea43 030c 	orr.w	r3, r3, ip
90008ec4:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008ec6:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008eca:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008ece:	2300      	movs	r3, #0
      return HAL_ERROR;
90008ed0:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008ed2:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008ed6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008eda:	0550      	lsls	r0, r2, #21
90008edc:	d4d1      	bmi.n	90008e82 <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008ede:	0594      	lsls	r4, r2, #22
90008ee0:	d4d6      	bmi.n	90008e90 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90008ee2:	2900      	cmp	r1, #0
90008ee4:	d1d9      	bne.n	90008e9a <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ee6:	f7fe ffa7 	bl	90007e38 <HAL_GetTick>
90008eea:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008eec:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008eee:	42b0      	cmp	r0, r6
90008ef0:	d800      	bhi.n	90008ef4 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90008ef2:	b91e      	cbnz	r6, 90008efc <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008ef4:	699a      	ldr	r2, [r3, #24]
90008ef6:	f012 0220 	ands.w	r2, r2, #32
90008efa:	d007      	beq.n	90008f0c <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008efc:	699a      	ldr	r2, [r3, #24]
90008efe:	0692      	lsls	r2, r2, #26
90008f00:	d5a1      	bpl.n	90008e46 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90008f02:	2000      	movs	r0, #0
}
90008f04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008f08:	4661      	mov	r1, ip
90008f0a:	e7b0      	b.n	90008e6e <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008f0c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008f0e:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008f10:	430b      	orrs	r3, r1
90008f12:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008f14:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008f18:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008f1c:	e7d7      	b.n	90008ece <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008f1e:	2400      	movs	r4, #0
90008f20:	e7a0      	b.n	90008e64 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008f22:	2400      	movs	r4, #0
90008f24:	46b9      	mov	r9, r7
90008f26:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008f28:	699a      	ldr	r2, [r3, #24]
90008f2a:	0692      	lsls	r2, r2, #26
90008f2c:	d42f      	bmi.n	90008f8e <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
90008f2e:	f1ba 0f00 	cmp.w	sl, #0
90008f32:	d199      	bne.n	90008e68 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008f34:	f7fe ff80 	bl	90007e38 <HAL_GetTick>
90008f38:	eba0 0309 	sub.w	r3, r0, r9
90008f3c:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008f3e:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008f40:	d304      	bcc.n	90008f4c <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
90008f42:	b11e      	cbz	r6, 90008f4c <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008f44:	699a      	ldr	r2, [r3, #24]
90008f46:	0690      	lsls	r0, r2, #26
90008f48:	d5f4      	bpl.n	90008f34 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90008f4a:	e78b      	b.n	90008e64 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008f4c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008f4e:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008f52:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008f54:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008f56:	0409      	lsls	r1, r1, #16
90008f58:	d50b      	bpl.n	90008f72 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90008f5a:	0441      	lsls	r1, r0, #17
90008f5c:	d409      	bmi.n	90008f72 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
90008f5e:	2a20      	cmp	r2, #32
90008f60:	d007      	beq.n	90008f72 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008f62:	685a      	ldr	r2, [r3, #4]
90008f64:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008f68:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008f6a:	f7fe ff65 	bl	90007e38 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f6e:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008f70:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f72:	699a      	ldr	r2, [r3, #24]
90008f74:	0690      	lsls	r0, r2, #26
90008f76:	d4d7      	bmi.n	90008f28 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008f78:	f7fe ff5e 	bl	90007e38 <HAL_GetTick>
90008f7c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008f80:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008f82:	2819      	cmp	r0, #25
90008f84:	d9f5      	bls.n	90008f72 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008f86:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008f88:	f04f 0a01 	mov.w	sl, #1
90008f8c:	e7cc      	b.n	90008f28 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
90008f8e:	f1ba 0f00 	cmp.w	sl, #0
90008f92:	f47f af69 	bne.w	90008e68 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008f96:	e765      	b.n	90008e64 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90008f98:	fe00e800 	.word	0xfe00e800

90008f9c <HAL_I2C_Init>:
  if (hi2c == NULL)
90008f9c:	2800      	cmp	r0, #0
90008f9e:	d053      	beq.n	90009048 <HAL_I2C_Init+0xac>
{
90008fa0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008fa2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008fa6:	4604      	mov	r4, r0
90008fa8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008fac:	2b00      	cmp	r3, #0
90008fae:	d046      	beq.n	9000903e <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008fb0:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008fb2:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008fb4:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008fb6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90008fba:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008fbc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008fc0:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008fc2:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008fc6:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008fc8:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008fca:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008fcc:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008fce:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008fd0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008fd4:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008fd6:	d009      	beq.n	90008fec <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008fd8:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008fdc:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008fde:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008fe0:	d107      	bne.n	90008ff2 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008fe2:	685a      	ldr	r2, [r3, #4]
90008fe4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008fe8:	605a      	str	r2, [r3, #4]
90008fea:	e006      	b.n	90008ffa <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008fec:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008ff0:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008ff2:	685a      	ldr	r2, [r3, #4]
90008ff4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008ff8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008ffa:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008ffc:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009000:	4912      	ldr	r1, [pc, #72]	@ (9000904c <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009002:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009004:	4301      	orrs	r1, r0
90009006:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90009008:	68d9      	ldr	r1, [r3, #12]
9000900a:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
9000900e:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90009010:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009014:	4302      	orrs	r2, r0
90009016:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000901a:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000901e:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009020:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009022:	4301      	orrs	r1, r0
  return HAL_OK;
90009024:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009026:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90009028:	6819      	ldr	r1, [r3, #0]
9000902a:	f041 0101 	orr.w	r1, r1, #1
9000902e:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009030:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90009032:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90009036:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009038:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
9000903c:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
9000903e:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90009042:	f7fb fe1d 	bl	90004c80 <HAL_I2C_MspInit>
90009046:	e7b3      	b.n	90008fb0 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90009048:	2001      	movs	r0, #1
}
9000904a:	4770      	bx	lr
9000904c:	02008000 	.word	0x02008000

90009050 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90009050:	b1b0      	cbz	r0, 90009080 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90009052:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009054:	2324      	movs	r3, #36	@ 0x24
{
90009056:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009058:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
9000905c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000905e:	6813      	ldr	r3, [r2, #0]
90009060:	f023 0301 	bic.w	r3, r3, #1
90009064:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90009066:	f7fb fe5d 	bl	90004d24 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000906a:	2300      	movs	r3, #0
9000906c:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
9000906e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90009070:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90009074:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90009078:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000907a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
9000907e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90009080:	2001      	movs	r0, #1
}
90009082:	4770      	bx	lr

90009084 <HAL_I2C_Mem_Write>:
{
90009084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009088:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000908a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000908e:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90009090:	2820      	cmp	r0, #32
{
90009092:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90009096:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90009098:	d11e      	bne.n	900090d8 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
9000909a:	4698      	mov	r8, r3
9000909c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9000909e:	b1bb      	cbz	r3, 900090d0 <HAL_I2C_Mem_Write+0x4c>
900090a0:	f1ba 0f00 	cmp.w	sl, #0
900090a4:	d014      	beq.n	900090d0 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
900090a6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900090aa:	2b01      	cmp	r3, #1
900090ac:	d014      	beq.n	900090d8 <HAL_I2C_Mem_Write+0x54>
900090ae:	2301      	movs	r3, #1
900090b0:	460d      	mov	r5, r1
900090b2:	4691      	mov	r9, r2
900090b4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900090b8:	f7fe febe 	bl	90007e38 <HAL_GetTick>
900090bc:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900090be:	4620      	mov	r0, r4
900090c0:	4631      	mov	r1, r6
900090c2:	f7ff fc93 	bl	900089ec <I2C_WaitOnFlagUntilTimeout.constprop.0>
900090c6:	b158      	cbz	r0, 900090e0 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
900090c8:	2001      	movs	r0, #1
}
900090ca:	b003      	add	sp, #12
900090cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900090d0:	f44f 7300 	mov.w	r3, #512	@ 0x200
900090d4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900090d6:	e7f7      	b.n	900090c8 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
900090d8:	2002      	movs	r0, #2
}
900090da:	b003      	add	sp, #12
900090dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900090e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900090e2:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900090e6:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
900090e8:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900090ea:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
900090ec:	4a5f      	ldr	r2, [pc, #380]	@ (9000926c <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900090ee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900090f2:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900090f4:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900090f6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900090fa:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900090fc:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900090fe:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009102:	684b      	ldr	r3, [r1, #4]
90009104:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009106:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000910a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000910e:	4a58      	ldr	r2, [pc, #352]	@ (90009270 <HAL_I2C_Mem_Write+0x1ec>)
90009110:	ea43 030b 	orr.w	r3, r3, fp
90009114:	431a      	orrs	r2, r3
90009116:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009118:	4632      	mov	r2, r6
9000911a:	4639      	mov	r1, r7
9000911c:	f7ff fd06 	bl	90008b2c <I2C_WaitOnTXISFlagUntilTimeout>
90009120:	2800      	cmp	r0, #0
90009122:	d176      	bne.n	90009212 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009124:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009128:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000912a:	d169      	bne.n	90009200 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000912c:	fa5f f289 	uxtb.w	r2, r9
90009130:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90009132:	463b      	mov	r3, r7
90009134:	2200      	movs	r2, #0
90009136:	2180      	movs	r1, #128	@ 0x80
90009138:	4620      	mov	r0, r4
9000913a:	9600      	str	r6, [sp, #0]
9000913c:	f7ff fdac 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
90009140:	2800      	cmp	r0, #0
90009142:	d166      	bne.n	90009212 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009144:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009146:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009148:	b29b      	uxth	r3, r3
9000914a:	2bff      	cmp	r3, #255	@ 0xff
9000914c:	d965      	bls.n	9000921a <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
9000914e:	6853      	ldr	r3, [r2, #4]
90009150:	4948      	ldr	r1, [pc, #288]	@ (90009274 <HAL_I2C_Mem_Write+0x1f0>)
90009152:	400b      	ands	r3, r1
90009154:	4948      	ldr	r1, [pc, #288]	@ (90009278 <HAL_I2C_Mem_Write+0x1f4>)
90009156:	ea43 030b 	orr.w	r3, r3, fp
9000915a:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000915c:	23ff      	movs	r3, #255	@ 0xff
9000915e:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009160:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90009162:	e003      	b.n	9000916c <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90009164:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009166:	b29b      	uxth	r3, r3
90009168:	2b00      	cmp	r3, #0
9000916a:	d069      	beq.n	90009240 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000916c:	4632      	mov	r2, r6
9000916e:	4639      	mov	r1, r7
90009170:	4620      	mov	r0, r4
90009172:	f7ff fcdb 	bl	90008b2c <I2C_WaitOnTXISFlagUntilTimeout>
90009176:	4602      	mov	r2, r0
90009178:	2800      	cmp	r0, #0
9000917a:	d1a5      	bne.n	900090c8 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000917c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000917e:	6825      	ldr	r5, [r4, #0]
90009180:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90009184:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009186:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90009188:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000918c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000918e:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009190:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009194:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009196:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
9000919a:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
9000919c:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900091a0:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
900091a2:	b289      	uxth	r1, r1
900091a4:	2900      	cmp	r1, #0
900091a6:	d0dd      	beq.n	90009164 <HAL_I2C_Mem_Write+0xe0>
900091a8:	2b00      	cmp	r3, #0
900091aa:	d1db      	bne.n	90009164 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900091ac:	463b      	mov	r3, r7
900091ae:	2180      	movs	r1, #128	@ 0x80
900091b0:	4620      	mov	r0, r4
900091b2:	9600      	str	r6, [sp, #0]
900091b4:	f7ff fd70 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900091b8:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900091bc:	2800      	cmp	r0, #0
900091be:	d183      	bne.n	900090c8 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091c0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091c2:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90009274 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091c6:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091c8:	492b      	ldr	r1, [pc, #172]	@ (90009278 <HAL_I2C_Mem_Write+0x1f4>)
900091ca:	4670      	mov	r0, lr
900091cc:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091ce:	4563      	cmp	r3, ip
900091d0:	d909      	bls.n	900091e6 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900091d2:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900091d4:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900091d8:	ea03 030e 	and.w	r3, r3, lr
900091dc:	ea43 030b 	orr.w	r3, r3, fp
900091e0:	4319      	orrs	r1, r3
900091e2:	6051      	str	r1, [r2, #4]
}
900091e4:	e7be      	b.n	90009164 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
900091e6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091e8:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900091ea:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091ec:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900091ee:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900091f0:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091f2:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900091f6:	430b      	orrs	r3, r1
900091f8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900091fc:	6053      	str	r3, [r2, #4]
}
900091fe:	e7b1      	b.n	90009164 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009200:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009204:	4639      	mov	r1, r7
90009206:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009208:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000920a:	4632      	mov	r2, r6
9000920c:	f7ff fc8e 	bl	90008b2c <I2C_WaitOnTXISFlagUntilTimeout>
90009210:	b188      	cbz	r0, 90009236 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
90009212:	2300      	movs	r3, #0
90009214:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009218:	e756      	b.n	900090c8 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
9000921a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000921c:	4815      	ldr	r0, [pc, #84]	@ (90009274 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
9000921e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009220:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90009222:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009224:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009226:	4001      	ands	r1, r0
90009228:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
9000922c:	430b      	orrs	r3, r1
9000922e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009232:	6053      	str	r3, [r2, #4]
}
90009234:	e79a      	b.n	9000916c <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009236:	fa5f f289 	uxtb.w	r2, r9
9000923a:	6823      	ldr	r3, [r4, #0]
9000923c:	629a      	str	r2, [r3, #40]	@ 0x28
9000923e:	e778      	b.n	90009132 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009240:	4632      	mov	r2, r6
90009242:	4639      	mov	r1, r7
90009244:	4620      	mov	r0, r4
90009246:	f7ff fdf3 	bl	90008e30 <I2C_WaitOnSTOPFlagUntilTimeout>
9000924a:	2800      	cmp	r0, #0
9000924c:	f47f af3c 	bne.w	900090c8 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009250:	6823      	ldr	r3, [r4, #0]
90009252:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009254:	4d09      	ldr	r5, [pc, #36]	@ (9000927c <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009256:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009258:	685a      	ldr	r2, [r3, #4]
9000925a:	402a      	ands	r2, r5
9000925c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000925e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009262:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009266:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000926a:	e72e      	b.n	900090ca <HAL_I2C_Mem_Write+0x46>
9000926c:	fc009800 	.word	0xfc009800
90009270:	01002000 	.word	0x01002000
90009274:	fc009c00 	.word	0xfc009c00
90009278:	01ff0000 	.word	0x01ff0000
9000927c:	fe00e800 	.word	0xfe00e800

90009280 <HAL_I2C_Mem_Read>:
{
90009280:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009284:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90009286:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000928a:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
9000928c:	2820      	cmp	r0, #32
{
9000928e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90009292:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009294:	d11e      	bne.n	900092d4 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90009296:	4698      	mov	r8, r3
90009298:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000929a:	b1bb      	cbz	r3, 900092cc <HAL_I2C_Mem_Read+0x4c>
9000929c:	f1ba 0f00 	cmp.w	sl, #0
900092a0:	d014      	beq.n	900092cc <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
900092a2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900092a6:	2b01      	cmp	r3, #1
900092a8:	d014      	beq.n	900092d4 <HAL_I2C_Mem_Read+0x54>
900092aa:	2301      	movs	r3, #1
900092ac:	460d      	mov	r5, r1
900092ae:	4691      	mov	r9, r2
900092b0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900092b4:	f7fe fdc0 	bl	90007e38 <HAL_GetTick>
900092b8:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900092ba:	4620      	mov	r0, r4
900092bc:	4631      	mov	r1, r6
900092be:	f7ff fb95 	bl	900089ec <I2C_WaitOnFlagUntilTimeout.constprop.0>
900092c2:	b158      	cbz	r0, 900092dc <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
900092c4:	2001      	movs	r0, #1
}
900092c6:	b002      	add	sp, #8
900092c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900092cc:	f44f 7300 	mov.w	r3, #512	@ 0x200
900092d0:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900092d2:	e7f7      	b.n	900092c4 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
900092d4:	2002      	movs	r0, #2
}
900092d6:	b002      	add	sp, #8
900092d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900092dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900092de:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
900092e2:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
900092e4:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900092e6:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
900092e8:	495f      	ldr	r1, [pc, #380]	@ (90009468 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900092ea:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900092ee:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900092f0:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900092f2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900092f6:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092f8:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900092fa:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900092fe:	6853      	ldr	r3, [r2, #4]
90009300:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009302:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009306:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000930a:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
9000930c:	432b      	orrs	r3, r5
9000930e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009312:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009314:	4632      	mov	r2, r6
90009316:	f7ff fc09 	bl	90008b2c <I2C_WaitOnTXISFlagUntilTimeout>
9000931a:	2800      	cmp	r0, #0
9000931c:	d177      	bne.n	9000940e <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000931e:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009322:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009324:	d16a      	bne.n	900093fc <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009326:	fa5f f289 	uxtb.w	r2, r9
9000932a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
9000932c:	463b      	mov	r3, r7
9000932e:	2200      	movs	r2, #0
90009330:	2140      	movs	r1, #64	@ 0x40
90009332:	4620      	mov	r0, r4
90009334:	9600      	str	r6, [sp, #0]
90009336:	f7ff fcaf 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
9000933a:	2800      	cmp	r0, #0
9000933c:	d167      	bne.n	9000940e <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000933e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009340:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009342:	b29b      	uxth	r3, r3
90009344:	2bff      	cmp	r3, #255	@ 0xff
90009346:	d966      	bls.n	90009416 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90009348:	6853      	ldr	r3, [r2, #4]
9000934a:	4947      	ldr	r1, [pc, #284]	@ (90009468 <HAL_I2C_Mem_Read+0x1e8>)
9000934c:	400b      	ands	r3, r1
9000934e:	4947      	ldr	r1, [pc, #284]	@ (9000946c <HAL_I2C_Mem_Read+0x1ec>)
90009350:	432b      	orrs	r3, r5
90009352:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009354:	23ff      	movs	r3, #255	@ 0xff
90009356:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009358:	6051      	str	r1, [r2, #4]
}
9000935a:	e003      	b.n	90009364 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
9000935c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000935e:	b29b      	uxth	r3, r3
90009360:	2b00      	cmp	r3, #0
90009362:	d06b      	beq.n	9000943c <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90009364:	463b      	mov	r3, r7
90009366:	2200      	movs	r2, #0
90009368:	2104      	movs	r1, #4
9000936a:	4620      	mov	r0, r4
9000936c:	9600      	str	r6, [sp, #0]
9000936e:	f7ff fc93 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
90009372:	2800      	cmp	r0, #0
90009374:	d1a6      	bne.n	900092c4 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009376:	6821      	ldr	r1, [r4, #0]
90009378:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000937a:	6a49      	ldr	r1, [r1, #36]	@ 0x24
9000937c:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
9000937e:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90009382:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009384:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009388:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
9000938a:	3101      	adds	r1, #1
      hi2c->XferCount--;
9000938c:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90009390:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90009392:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009394:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009398:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000939a:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000939c:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000939e:	b289      	uxth	r1, r1
900093a0:	2900      	cmp	r1, #0
900093a2:	d0db      	beq.n	9000935c <HAL_I2C_Mem_Read+0xdc>
900093a4:	2b00      	cmp	r3, #0
900093a6:	d1d9      	bne.n	9000935c <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900093a8:	4602      	mov	r2, r0
900093aa:	463b      	mov	r3, r7
900093ac:	2180      	movs	r1, #128	@ 0x80
900093ae:	4620      	mov	r0, r4
900093b0:	9600      	str	r6, [sp, #0]
900093b2:	f7ff fc71 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900093b6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900093ba:	2800      	cmp	r0, #0
900093bc:	d182      	bne.n	900092c4 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900093be:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900093c0:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 9000947c <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900093c4:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093c6:	492a      	ldr	r1, [pc, #168]	@ (90009470 <HAL_I2C_Mem_Read+0x1f0>)
900093c8:	4670      	mov	r0, lr
900093ca:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900093cc:	4563      	cmp	r3, ip
900093ce:	d908      	bls.n	900093e2 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900093d0:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900093d2:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900093d6:	ea03 030e 	and.w	r3, r3, lr
900093da:	432b      	orrs	r3, r5
900093dc:	4319      	orrs	r1, r3
900093de:	6051      	str	r1, [r2, #4]
}
900093e0:	e7bc      	b.n	9000935c <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
900093e2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900093e4:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900093e6:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093e8:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900093ea:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900093ec:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093ee:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900093f2:	430b      	orrs	r3, r1
900093f4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900093f8:	6053      	str	r3, [r2, #4]
}
900093fa:	e7af      	b.n	9000935c <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900093fc:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009400:	4639      	mov	r1, r7
90009402:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009404:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009406:	4632      	mov	r2, r6
90009408:	f7ff fb90 	bl	90008b2c <I2C_WaitOnTXISFlagUntilTimeout>
9000940c:	b188      	cbz	r0, 90009432 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
9000940e:	2300      	movs	r3, #0
90009410:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009414:	e756      	b.n	900092c4 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009416:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009418:	4813      	ldr	r0, [pc, #76]	@ (90009468 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
9000941a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000941c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000941e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009420:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009422:	4001      	ands	r1, r0
90009424:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009428:	430b      	orrs	r3, r1
9000942a:	4912      	ldr	r1, [pc, #72]	@ (90009474 <HAL_I2C_Mem_Read+0x1f4>)
9000942c:	4319      	orrs	r1, r3
9000942e:	6051      	str	r1, [r2, #4]
}
90009430:	e798      	b.n	90009364 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009432:	fa5f f289 	uxtb.w	r2, r9
90009436:	6823      	ldr	r3, [r4, #0]
90009438:	629a      	str	r2, [r3, #40]	@ 0x28
9000943a:	e777      	b.n	9000932c <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000943c:	4632      	mov	r2, r6
9000943e:	4639      	mov	r1, r7
90009440:	4620      	mov	r0, r4
90009442:	f7ff fcf5 	bl	90008e30 <I2C_WaitOnSTOPFlagUntilTimeout>
90009446:	2800      	cmp	r0, #0
90009448:	f47f af3c 	bne.w	900092c4 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000944c:	6823      	ldr	r3, [r4, #0]
9000944e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009450:	4d09      	ldr	r5, [pc, #36]	@ (90009478 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009452:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009454:	685a      	ldr	r2, [r3, #4]
90009456:	402a      	ands	r2, r5
90009458:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000945a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000945e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009462:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009466:	e72e      	b.n	900092c6 <HAL_I2C_Mem_Read+0x46>
90009468:	fc009800 	.word	0xfc009800
9000946c:	01ff2400 	.word	0x01ff2400
90009470:	01ff0000 	.word	0x01ff0000
90009474:	02002400 	.word	0x02002400
90009478:	fe00e800 	.word	0xfe00e800
9000947c:	fc009c00 	.word	0xfc009c00

90009480 <HAL_I2C_IsDeviceReady>:
{
90009480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  __IO uint32_t I2C_Trials = 0UL;
90009484:	2500      	movs	r5, #0
{
90009486:	b084      	sub	sp, #16
90009488:	4604      	mov	r4, r0
  __IO uint32_t I2C_Trials = 0UL;
9000948a:	9503      	str	r5, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
9000948c:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
90009490:	2820      	cmp	r0, #32
90009492:	d149      	bne.n	90009528 <HAL_I2C_IsDeviceReady+0xa8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
90009494:	4615      	mov	r5, r2
90009496:	6822      	ldr	r2, [r4, #0]
90009498:	461e      	mov	r6, r3
9000949a:	6993      	ldr	r3, [r2, #24]
9000949c:	f413 4300 	ands.w	r3, r3, #32768	@ 0x8000
900094a0:	d142      	bne.n	90009528 <HAL_I2C_IsDeviceReady+0xa8>
    __HAL_LOCK(hi2c);
900094a2:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
900094a6:	2801      	cmp	r0, #1
900094a8:	d03e      	beq.n	90009528 <HAL_I2C_IsDeviceReady+0xa8>
900094aa:	2001      	movs	r0, #1
900094ac:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->State = HAL_I2C_STATE_BUSY;
900094b0:	2024      	movs	r0, #36	@ 0x24
900094b2:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900094b6:	6463      	str	r3, [r4, #68]	@ 0x44
900094b8:	1c73      	adds	r3, r6, #1
900094ba:	d039      	beq.n	90009530 <HAL_I2C_IsDeviceReady+0xb0>
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
900094bc:	68e3      	ldr	r3, [r4, #12]
900094be:	f3c1 0909 	ubfx	r9, r1, #0, #10
900094c2:	f8df 8184 	ldr.w	r8, [pc, #388]	@ 90009648 <HAL_I2C_IsDeviceReady+0x1c8>
900094c6:	2b01      	cmp	r3, #1
900094c8:	ea49 0808 	orr.w	r8, r9, r8
900094cc:	f000 808a 	beq.w	900095e4 <HAL_I2C_IsDeviceReady+0x164>
900094d0:	4643      	mov	r3, r8
900094d2:	6053      	str	r3, [r2, #4]
      tickstart = HAL_GetTick();
900094d4:	f7fe fcb0 	bl	90007e38 <HAL_GetTick>
900094d8:	4607      	mov	r7, r0
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
900094da:	6820      	ldr	r0, [r4, #0]
900094dc:	6983      	ldr	r3, [r0, #24]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
900094de:	6982      	ldr	r2, [r0, #24]
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
900094e0:	f003 0320 	and.w	r3, r3, #32
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
900094e4:	f002 0210 	and.w	r2, r2, #16
      while ((tmp1 == RESET) && (tmp2 == RESET))
900094e8:	4313      	orrs	r3, r2
900094ea:	d00a      	beq.n	90009502 <HAL_I2C_IsDeviceReady+0x82>
900094ec:	e05d      	b.n	900095aa <HAL_I2C_IsDeviceReady+0x12a>
          if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900094ee:	b16e      	cbz	r6, 9000950c <HAL_I2C_IsDeviceReady+0x8c>
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
900094f0:	6820      	ldr	r0, [r4, #0]
900094f2:	6981      	ldr	r1, [r0, #24]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
900094f4:	6983      	ldr	r3, [r0, #24]
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
900094f6:	f001 0120 	and.w	r1, r1, #32
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
900094fa:	f003 0310 	and.w	r3, r3, #16
      while ((tmp1 == RESET) && (tmp2 == RESET))
900094fe:	4319      	orrs	r1, r3
90009500:	d153      	bne.n	900095aa <HAL_I2C_IsDeviceReady+0x12a>
          if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009502:	f7fe fc99 	bl	90007e38 <HAL_GetTick>
90009506:	1bc0      	subs	r0, r0, r7
90009508:	42b0      	cmp	r0, r6
9000950a:	d9f0      	bls.n	900094ee <HAL_I2C_IsDeviceReady+0x6e>
    hi2c->State = HAL_I2C_STATE_READY;
9000950c:	2320      	movs	r3, #32
            return HAL_ERROR;
9000950e:	2001      	movs	r0, #1
    hi2c->State = HAL_I2C_STATE_READY;
90009510:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009514:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90009516:	f043 0320 	orr.w	r3, r3, #32
9000951a:	6463      	str	r3, [r4, #68]	@ 0x44
    __HAL_UNLOCK(hi2c);
9000951c:	2300      	movs	r3, #0
9000951e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90009522:	b004      	add	sp, #16
90009524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_BUSY;
90009528:	2002      	movs	r0, #2
}
9000952a:	b004      	add	sp, #16
9000952c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
90009530:	68e3      	ldr	r3, [r4, #12]
90009532:	f3c1 0609 	ubfx	r6, r1, #0, #10
90009536:	4f44      	ldr	r7, [pc, #272]	@ (90009648 <HAL_I2C_IsDeviceReady+0x1c8>)
90009538:	2b01      	cmp	r3, #1
9000953a:	ea47 0706 	orr.w	r7, r7, r6
9000953e:	d031      	beq.n	900095a4 <HAL_I2C_IsDeviceReady+0x124>
90009540:	463b      	mov	r3, r7
90009542:	6053      	str	r3, [r2, #4]
      tickstart = HAL_GetTick();
90009544:	f7fe fc78 	bl	90007e38 <HAL_GetTick>
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
90009548:	6821      	ldr	r1, [r4, #0]
9000954a:	698b      	ldr	r3, [r1, #24]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
9000954c:	698a      	ldr	r2, [r1, #24]
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
9000954e:	f003 0320 	and.w	r3, r3, #32
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
90009552:	f002 0210 	and.w	r2, r2, #16
      while ((tmp1 == RESET) && (tmp2 == RESET))
90009556:	4313      	orrs	r3, r2
90009558:	d107      	bne.n	9000956a <HAL_I2C_IsDeviceReady+0xea>
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
9000955a:	698b      	ldr	r3, [r1, #24]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
9000955c:	698a      	ldr	r2, [r1, #24]
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
9000955e:	f003 0320 	and.w	r3, r3, #32
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
90009562:	f002 0210 	and.w	r2, r2, #16
      while ((tmp1 == RESET) && (tmp2 == RESET))
90009566:	4313      	orrs	r3, r2
90009568:	d0f7      	beq.n	9000955a <HAL_I2C_IsDeviceReady+0xda>
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
9000956a:	698b      	ldr	r3, [r1, #24]
9000956c:	f013 0810 	ands.w	r8, r3, #16
90009570:	d03c      	beq.n	900095ec <HAL_I2C_IsDeviceReady+0x16c>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009572:	2310      	movs	r3, #16
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
90009574:	2200      	movs	r2, #0
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009576:	61cb      	str	r3, [r1, #28]
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
90009578:	f04f 33ff 	mov.w	r3, #4294967295
9000957c:	9000      	str	r0, [sp, #0]
9000957e:	2120      	movs	r1, #32
90009580:	4620      	mov	r0, r4
90009582:	f7ff fb89 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
90009586:	b910      	cbnz	r0, 9000958e <HAL_I2C_IsDeviceReady+0x10e>
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009588:	6823      	ldr	r3, [r4, #0]
9000958a:	2220      	movs	r2, #32
9000958c:	61da      	str	r2, [r3, #28]
      I2C_Trials++;
9000958e:	9b03      	ldr	r3, [sp, #12]
90009590:	3301      	adds	r3, #1
90009592:	9303      	str	r3, [sp, #12]
      if ((I2C_Trials < Trials) && (status == HAL_ERROR))
90009594:	9b03      	ldr	r3, [sp, #12]
    } while (I2C_Trials < Trials);
90009596:	9b03      	ldr	r3, [sp, #12]
90009598:	429d      	cmp	r5, r3
9000959a:	d9b7      	bls.n	9000950c <HAL_I2C_IsDeviceReady+0x8c>
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
9000959c:	68e3      	ldr	r3, [r4, #12]
9000959e:	6822      	ldr	r2, [r4, #0]
900095a0:	2b01      	cmp	r3, #1
900095a2:	d1cd      	bne.n	90009540 <HAL_I2C_IsDeviceReady+0xc0>
900095a4:	4b29      	ldr	r3, [pc, #164]	@ (9000964c <HAL_I2C_IsDeviceReady+0x1cc>)
900095a6:	4333      	orrs	r3, r6
900095a8:	e7cb      	b.n	90009542 <HAL_I2C_IsDeviceReady+0xc2>
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
900095aa:	6983      	ldr	r3, [r0, #24]
900095ac:	f013 0a10 	ands.w	sl, r3, #16
900095b0:	d02e      	beq.n	90009610 <HAL_I2C_IsDeviceReady+0x190>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900095b2:	2310      	movs	r3, #16
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
900095b4:	2200      	movs	r2, #0
900095b6:	2120      	movs	r1, #32
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900095b8:	61c3      	str	r3, [r0, #28]
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
900095ba:	4633      	mov	r3, r6
900095bc:	4620      	mov	r0, r4
900095be:	9700      	str	r7, [sp, #0]
900095c0:	f7ff fb6a 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
900095c4:	b910      	cbnz	r0, 900095cc <HAL_I2C_IsDeviceReady+0x14c>
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900095c6:	6823      	ldr	r3, [r4, #0]
900095c8:	2220      	movs	r2, #32
900095ca:	61da      	str	r2, [r3, #28]
      I2C_Trials++;
900095cc:	9b03      	ldr	r3, [sp, #12]
900095ce:	3301      	adds	r3, #1
900095d0:	9303      	str	r3, [sp, #12]
      if ((I2C_Trials < Trials) && (status == HAL_ERROR))
900095d2:	9b03      	ldr	r3, [sp, #12]
    } while (I2C_Trials < Trials);
900095d4:	9b03      	ldr	r3, [sp, #12]
900095d6:	42ab      	cmp	r3, r5
900095d8:	d298      	bcs.n	9000950c <HAL_I2C_IsDeviceReady+0x8c>
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
900095da:	68e3      	ldr	r3, [r4, #12]
900095dc:	6822      	ldr	r2, [r4, #0]
900095de:	2b01      	cmp	r3, #1
900095e0:	f47f af76 	bne.w	900094d0 <HAL_I2C_IsDeviceReady+0x50>
900095e4:	4b19      	ldr	r3, [pc, #100]	@ (9000964c <HAL_I2C_IsDeviceReady+0x1cc>)
900095e6:	ea49 0303 	orr.w	r3, r9, r3
900095ea:	e772      	b.n	900094d2 <HAL_I2C_IsDeviceReady+0x52>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
900095ec:	9000      	str	r0, [sp, #0]
900095ee:	f04f 33ff 	mov.w	r3, #4294967295
900095f2:	4642      	mov	r2, r8
900095f4:	2120      	movs	r1, #32
900095f6:	4620      	mov	r0, r4
900095f8:	f7ff fb4e 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
900095fc:	b1c8      	cbz	r0, 90009632 <HAL_I2C_IsDeviceReady+0x1b2>
          if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
900095fe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90009600:	2b04      	cmp	r3, #4
90009602:	d1c4      	bne.n	9000958e <HAL_I2C_IsDeviceReady+0x10e>
            __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009604:	6823      	ldr	r3, [r4, #0]
90009606:	2220      	movs	r2, #32
90009608:	61da      	str	r2, [r3, #28]
            hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000960a:	f8c4 8044 	str.w	r8, [r4, #68]	@ 0x44
9000960e:	e7be      	b.n	9000958e <HAL_I2C_IsDeviceReady+0x10e>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
90009610:	4633      	mov	r3, r6
90009612:	4652      	mov	r2, sl
90009614:	2120      	movs	r1, #32
90009616:	4620      	mov	r0, r4
90009618:	9700      	str	r7, [sp, #0]
9000961a:	f7ff fb3d 	bl	90008c98 <I2C_WaitOnFlagUntilTimeout>
9000961e:	b140      	cbz	r0, 90009632 <HAL_I2C_IsDeviceReady+0x1b2>
          if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
90009620:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90009622:	2b04      	cmp	r3, #4
90009624:	d1d2      	bne.n	900095cc <HAL_I2C_IsDeviceReady+0x14c>
            __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009626:	6823      	ldr	r3, [r4, #0]
90009628:	2220      	movs	r2, #32
9000962a:	61da      	str	r2, [r3, #28]
            hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000962c:	f8c4 a044 	str.w	sl, [r4, #68]	@ 0x44
90009630:	e7cc      	b.n	900095cc <HAL_I2C_IsDeviceReady+0x14c>
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009632:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90009634:	2300      	movs	r3, #0
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009636:	6821      	ldr	r1, [r4, #0]
          return HAL_OK;
90009638:	4618      	mov	r0, r3
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000963a:	61ca      	str	r2, [r1, #28]
          hi2c->State = HAL_I2C_STATE_READY;
9000963c:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          __HAL_UNLOCK(hi2c);
90009640:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          return HAL_OK;
90009644:	e771      	b.n	9000952a <HAL_I2C_IsDeviceReady+0xaa>
90009646:	bf00      	nop
90009648:	02002800 	.word	0x02002800
9000964c:	02002000 	.word	0x02002000

90009650 <HAL_I2C_GetState>:
  return hi2c->State;
90009650:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90009654:	4770      	bx	lr
90009656:	bf00      	nop

90009658 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009658:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000965a:	4770      	bx	lr

9000965c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000965c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009660:	2a20      	cmp	r2, #32
90009662:	d123      	bne.n	900096ac <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009664:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009668:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000966c:	4603      	mov	r3, r0
9000966e:	2a01      	cmp	r2, #1
90009670:	d01c      	beq.n	900096ac <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009672:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009674:	2024      	movs	r0, #36	@ 0x24
{
90009676:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009678:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000967c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009680:	6810      	ldr	r0, [r2, #0]
90009682:	f020 0001 	bic.w	r0, r0, #1
90009686:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009688:	6810      	ldr	r0, [r2, #0]
9000968a:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000968e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009690:	6810      	ldr	r0, [r2, #0]
90009692:	4301      	orrs	r1, r0

    return HAL_OK;
90009694:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009696:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009698:	6811      	ldr	r1, [r2, #0]
9000969a:	f041 0101 	orr.w	r1, r1, #1
9000969e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900096a0:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900096a4:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900096a8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900096ac:	2002      	movs	r0, #2
}
900096ae:	4770      	bx	lr

900096b0 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900096b0:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900096b4:	2a20      	cmp	r2, #32
900096b6:	d122      	bne.n	900096fe <HAL_I2CEx_ConfigDigitalFilter+0x4e>
900096b8:	4603      	mov	r3, r0
{
900096ba:	b500      	push	{lr}
900096bc:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900096c0:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900096c4:	2a01      	cmp	r2, #1
900096c6:	d01c      	beq.n	90009702 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900096c8:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900096ca:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900096cc:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
900096d0:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
900096d4:	6810      	ldr	r0, [r2, #0]
900096d6:	f020 0001 	bic.w	r0, r0, #1
900096da:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900096dc:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900096de:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900096e2:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
900096e6:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
900096e8:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900096ea:	6811      	ldr	r1, [r2, #0]
900096ec:	f041 0101 	orr.w	r1, r1, #1
900096f0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900096f2:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900096f6:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900096fa:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900096fe:	2002      	movs	r0, #2
}
90009700:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009702:	2002      	movs	r0, #2
}
90009704:	f85d fb04 	ldr.w	pc, [sp], #4

90009708 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000970c:	4681      	mov	r9, r0
9000970e:	460d      	mov	r5, r1
90009710:	4614      	mov	r4, r2
90009712:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009714:	7806      	ldrb	r6, [r0, #0]
90009716:	2701      	movs	r7, #1
  p = 0;
90009718:	f04f 0800 	mov.w	r8, #0
9000971c:	e006      	b.n	9000972c <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000971e:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90009722:	eb06 0308 	add.w	r3, r6, r8
90009726:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000972a:	d83c      	bhi.n	900097a6 <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000972c:	4632      	mov	r2, r6
9000972e:	4639      	mov	r1, r7
90009730:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
90009734:	b116      	cbz	r6, 9000973c <JPEG_Bits_To_SizeCodes+0x34>
90009736:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90009738:	f021 fb30 	bl	9002ad9c <memset>
  for (l = 0; l < 16UL; l++)
9000973c:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000973e:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90009742:	d1ec      	bne.n	9000971e <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
90009744:	f04f 0900 	mov.w	r9, #0
90009748:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
9000974c:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009750:	7829      	ldrb	r1, [r5, #0]
90009752:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90009754:	b321      	cbz	r1, 900097a0 <JPEG_Bits_To_SizeCodes+0x98>
90009756:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000975a:	2701      	movs	r7, #1
  p = 0;
9000975c:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
9000975e:	4291      	cmp	r1, r2
90009760:	d124      	bne.n	900097ac <JPEG_Bits_To_SizeCodes+0xa4>
90009762:	eb06 0008 	add.w	r0, r6, r8
90009766:	eb05 0c06 	add.w	ip, r5, r6
9000976a:	464b      	mov	r3, r9
9000976c:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009770:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90009774:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90009776:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000977a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000977c:	4596      	cmp	lr, r2
9000977e:	d0f7      	beq.n	90009770 <JPEG_Bits_To_SizeCodes+0x68>
90009780:	3601      	adds	r6, #1
90009782:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90009786:	440e      	add	r6, r1
    if(si > 31UL)
90009788:	2a1f      	cmp	r2, #31
9000978a:	d80c      	bhi.n	900097a6 <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000978c:	fa07 f102 	lsl.w	r1, r7, r2
90009790:	4299      	cmp	r1, r3
90009792:	d908      	bls.n	900097a6 <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
90009794:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009796:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
9000979a:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
9000979c:	2900      	cmp	r1, #0
9000979e:	d1de      	bne.n	9000975e <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
900097a0:	2000      	movs	r0, #0
}
900097a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
900097a6:	2001      	movs	r0, #1
}
900097a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
900097ac:	464b      	mov	r3, r9
900097ae:	e7eb      	b.n	90009788 <JPEG_Bits_To_SizeCodes+0x80>

900097b0 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
900097b0:	b5f0      	push	{r4, r5, r6, r7, lr}
900097b2:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
900097b6:	460d      	mov	r5, r1
900097b8:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900097ba:	ab01      	add	r3, sp, #4
900097bc:	aa43      	add	r2, sp, #268	@ 0x10c
900097be:	a902      	add	r1, sp, #8
900097c0:	f7ff ffa2 	bl	90009708 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
900097c4:	b9d0      	cbnz	r0, 900097fc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
900097c6:	9f01      	ldr	r7, [sp, #4]
900097c8:	b1c7      	cbz	r7, 900097fc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
900097ca:	370f      	adds	r7, #15
900097cc:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
900097d0:	a902      	add	r1, sp, #8
900097d2:	f104 0c0f 	add.w	ip, r4, #15
900097d6:	4427      	add	r7, r4
900097d8:	e009      	b.n	900097ee <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097da:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
900097de:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097e0:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097e4:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097e8:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097ea:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
900097ec:	d006      	beq.n	900097fc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
900097ee:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900097f2:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097f4:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900097f8:	d9ef      	bls.n	900097da <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
900097fa:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900097fc:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009800:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009802:	bf00      	nop

90009804 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009808:	6804      	ldr	r4, [r0, #0]
{
9000980a:	b093      	sub	sp, #76	@ 0x4c
9000980c:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000980e:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90009812:	429a      	cmp	r2, r3
90009814:	f000 809d 	beq.w	90009952 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009818:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
9000981c:	429a      	cmp	r2, r3
9000981e:	d003      	beq.n	90009828 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009820:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009822:	b013      	add	sp, #76	@ 0x4c
90009824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009828:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000982c:	a903      	add	r1, sp, #12
9000982e:	f7ff ffbf 	bl	900097b0 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009832:	2800      	cmp	r0, #0
90009834:	d1f5      	bne.n	90009822 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009836:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000983a:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000983e:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009842:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009844:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009848:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000984a:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000984e:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009852:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90009856:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000985a:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
9000985e:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009860:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009864:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009868:	f89d c014 	ldrb.w	ip, [sp, #20]
9000986c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009870:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009874:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009878:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000987c:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000987e:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009882:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90009886:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
9000988a:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000988e:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009892:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009896:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000989a:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000989e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
900098a0:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098a4:	f89d 2010 	ldrb.w	r2, [sp, #16]
900098a8:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098ac:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
900098ae:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098b2:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098b4:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
900098b8:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098bc:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098c0:	f89d 600f 	ldrb.w	r6, [sp, #15]
900098c4:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098c8:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098cc:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098ce:	9b01      	ldr	r3, [sp, #4]
900098d0:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098d4:	f89d 500d 	ldrb.w	r5, [sp, #13]
900098d8:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098dc:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900098e0:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098e4:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
900098e6:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098ea:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098ee:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900098f2:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098f6:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098fa:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900098fe:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009902:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009906:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000990a:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000990e:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90009912:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009914:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009918:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000991a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000991e:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009922:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90009926:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009928:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000992c:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000992e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009932:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009936:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000993a:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000993c:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009940:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009944:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009948:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000994c:	b013      	add	sp, #76	@ 0x4c
9000994e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009952:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90009956:	e769      	b.n	9000982c <JPEG_Set_HuffDC_Mem+0x28>

90009958 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009958:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000995c:	6804      	ldr	r4, [r0, #0]
{
9000995e:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90009962:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009964:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009968:	429a      	cmp	r2, r3
9000996a:	d041      	beq.n	900099f0 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000996c:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009970:	429a      	cmp	r2, r3
90009972:	d004      	beq.n	9000997e <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009974:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009976:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000997a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000997e:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009982:	4628      	mov	r0, r5
90009984:	466b      	mov	r3, sp
90009986:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
9000998a:	a901      	add	r1, sp, #4
9000998c:	f7ff febc 	bl	90009708 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009990:	2800      	cmp	r0, #0
90009992:	d1f0      	bne.n	90009976 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009994:	9b00      	ldr	r3, [sp, #0]
90009996:	b373      	cbz	r3, 900099f6 <JPEG_Set_HuffAC_Mem+0x9e>
90009998:	330f      	adds	r3, #15
9000999a:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000999e:	af01      	add	r7, sp, #4
900099a0:	f105 020f 	add.w	r2, r5, #15
900099a4:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900099a8:	ae42      	add	r6, sp, #264	@ 0x108
900099aa:	e011      	b.n	900099d0 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
900099ac:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
900099b0:	2ba1      	cmp	r3, #161	@ 0xa1
900099b2:	d8df      	bhi.n	90009974 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900099b4:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900099b8:	eb06 0883 	add.w	r8, r6, r3, lsl #2
900099bc:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
900099c0:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900099c2:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900099c6:	46b1      	mov	r9, r6
900099c8:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900099cc:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
900099ce:	d014      	beq.n	900099fa <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
900099d0:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
900099d4:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
900099d6:	2900      	cmp	r1, #0
900099d8:	d0ec      	beq.n	900099b4 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
900099da:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900099dc:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900099e0:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900099e2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
900099e6:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900099ea:	d1df      	bne.n	900099ac <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
900099ec:	23a1      	movs	r3, #161	@ 0xa1
900099ee:	e7e1      	b.n	900099b4 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900099f0:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
900099f4:	e7c5      	b.n	90009982 <JPEG_Set_HuffAC_Mem+0x2a>
900099f6:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
900099fa:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
900099fe:	4a1a      	ldr	r2, [pc, #104]	@ (90009a68 <JPEG_Set_HuffAC_Mem+0x110>)
90009a00:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009a04:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90009a06:	6023      	str	r3, [r4, #0]
90009a08:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90009a0c:	6063      	str	r3, [r4, #4]
90009a0e:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90009a12:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009a14:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009a18:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009a1a:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90009a1e:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90009a22:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90009a24:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009a28:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009a2a:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009a2e:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a30:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a34:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a38:	0212      	lsls	r2, r2, #8
90009a3a:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a3e:	021b      	lsls	r3, r3, #8
90009a40:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a44:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90009a48:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a4a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a4e:	433a      	orrs	r2, r7
    while (i > 1UL)
90009a50:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009a52:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90009a56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009a5a:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90009a5e:	d1e7      	bne.n	90009a30 <JPEG_Set_HuffAC_Mem+0xd8>
}
90009a60:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009a64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009a68:	0fd10fd0 	.word	0x0fd10fd0

90009a6c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009a6c:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009a6e:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009a70:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90009a74:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a76:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009a78:	f002 0203 	and.w	r2, r2, #3
90009a7c:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009a7e:	685a      	ldr	r2, [r3, #4]
90009a80:	bf0c      	ite	eq
90009a82:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90009a86:	f022 0208 	bicne.w	r2, r2, #8
90009a8a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a8c:	681a      	ldr	r2, [r3, #0]
90009a8e:	f022 0201 	bic.w	r2, r2, #1
90009a92:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009a94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009a96:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009a9a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009a9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009a9e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009aa2:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009aa4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009aa6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009aaa:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009aac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009aae:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009ab2:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90009ab4:	681a      	ldr	r2, [r3, #0]
90009ab6:	f042 0201 	orr.w	r2, r2, #1
90009aba:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009abc:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009abe:	f002 020c 	and.w	r2, r2, #12
90009ac2:	2a08      	cmp	r2, #8
90009ac4:	d00a      	beq.n	90009adc <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009ac6:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009ac8:	f002 020c 	and.w	r2, r2, #12
90009acc:	2a0c      	cmp	r2, #12
90009ace:	d000      	beq.n	90009ad2 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009ad0:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009ad2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009ad4:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009ad8:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009ada:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009adc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009ade:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90009ae2:	631a      	str	r2, [r3, #48]	@ 0x30
90009ae4:	4770      	bx	lr
90009ae6:	bf00      	nop

90009ae8 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009ae8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009aea:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90009aec:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009aee:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90009af0:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009af2:	42aa      	cmp	r2, r5
90009af4:	d32a      	bcc.n	90009b4c <JPEG_DMA_StartProcess+0x64>
90009af6:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009af8:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009afa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009afc:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009afe:	42b3      	cmp	r3, r6
90009b00:	d324      	bcc.n	90009b4c <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009b02:	4f19      	ldr	r7, [pc, #100]	@ (90009b68 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009b04:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90009b74 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009b08:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009b0a:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009b0e:	4917      	ldr	r1, [pc, #92]	@ (90009b6c <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009b10:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009b12:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90009b14:	4916      	ldr	r1, [pc, #88]	@ (90009b70 <JPEG_DMA_StartProcess+0x88>)
90009b16:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009b18:	b1a5      	cbz	r5, 90009b44 <JPEG_DMA_StartProcess+0x5c>
90009b1a:	b19e      	cbz	r6, 90009b44 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009b1c:	fbb2 f1f5 	udiv	r1, r2, r5
90009b20:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b24:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009b26:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b28:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009b2a:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b2c:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90009b2e:	fbb3 f2f6 	udiv	r2, r3, r6
90009b32:	fb06 3212 	mls	r2, r6, r2, r3
90009b36:	1a9b      	subs	r3, r3, r2
90009b38:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b3a:	9500      	str	r5, [sp, #0]
90009b3c:	69e2      	ldr	r2, [r4, #28]
90009b3e:	f001 fc0f 	bl	9000b360 <HAL_MDMA_Start_IT>
90009b42:	b130      	cbz	r0, 90009b52 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009b44:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009b46:	f043 0304 	orr.w	r3, r3, #4
90009b4a:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90009b4c:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90009b4e:	b003      	add	sp, #12
90009b50:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009b52:	6822      	ldr	r2, [r4, #0]
90009b54:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009b56:	69a1      	ldr	r1, [r4, #24]
90009b58:	3240      	adds	r2, #64	@ 0x40
90009b5a:	9500      	str	r5, [sp, #0]
90009b5c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009b5e:	f001 fbff 	bl	9000b360 <HAL_MDMA_Start_IT>
90009b62:	2800      	cmp	r0, #0
90009b64:	d0f3      	beq.n	90009b4e <JPEG_DMA_StartProcess+0x66>
90009b66:	e7ed      	b.n	90009b44 <JPEG_DMA_StartProcess+0x5c>
90009b68:	9000a165 	.word	0x9000a165
90009b6c:	9000a3d9 	.word	0x9000a3d9
90009b70:	9000a459 	.word	0x9000a459
90009b74:	9000a191 	.word	0x9000a191

90009b78 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009b78:	6803      	ldr	r3, [r0, #0]
90009b7a:	685a      	ldr	r2, [r3, #4]
90009b7c:	f002 0203 	and.w	r2, r2, #3
90009b80:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009b82:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90009b84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90009b88:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009b8a:	f000 80a0 	beq.w	90009cce <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009b8e:	f012 0203 	ands.w	r2, r2, #3
90009b92:	d177      	bne.n	90009c84 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009b94:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009b96:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009b9a:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009b9c:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009b9e:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009ba0:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009ba4:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009ba8:	2100      	movs	r1, #0
90009baa:	4a5e      	ldr	r2, [pc, #376]	@ (90009d24 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009bac:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009bb0:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90009bb4:	2600      	movs	r6, #0
90009bb6:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009bba:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90009bbe:	f241 3188 	movw	r1, #5000	@ 0x1388
90009bc2:	e033      	b.n	90009c2c <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009bc4:	f892 8001 	ldrb.w	r8, [r2, #1]
90009bc8:	fb0e f707 	mul.w	r7, lr, r7
90009bcc:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009bce:	f815 8008 	ldrb.w	r8, [r5, r8]
90009bd2:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009bd6:	2f64      	cmp	r7, #100	@ 0x64
90009bd8:	d96a      	bls.n	90009cb0 <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
90009bda:	fbb1 f7f7 	udiv	r7, r1, r7
90009bde:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009be0:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90009be4:	2f01      	cmp	r7, #1
90009be6:	d03d      	beq.n	90009c64 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009be8:	f892 8002 	ldrb.w	r8, [r2, #2]
90009bec:	fb0e f707 	mul.w	r7, lr, r7
90009bf0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009bf2:	f815 8008 	ldrb.w	r8, [r5, r8]
90009bf6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009bfa:	2f64      	cmp	r7, #100	@ 0x64
90009bfc:	d953      	bls.n	90009ca6 <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
90009bfe:	fbb1 f7f7 	udiv	r7, r1, r7
90009c02:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009c04:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90009c06:	2b01      	cmp	r3, #1
90009c08:	d030      	beq.n	90009c6c <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009c0a:	78d7      	ldrb	r7, [r2, #3]
90009c0c:	fb0e f303 	mul.w	r3, lr, r3
90009c10:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009c12:	5def      	ldrb	r7, [r5, r7]
90009c14:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009c18:	2b64      	cmp	r3, #100	@ 0x64
90009c1a:	d953      	bls.n	90009cc4 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
90009c1c:	fbb1 f3f3 	udiv	r3, r1, r3
90009c20:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009c22:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90009c24:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009c28:	42a2      	cmp	r2, r4
90009c2a:	d025      	beq.n	90009c78 <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
90009c2c:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009c30:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90009c32:	2f01      	cmp	r7, #1
90009c34:	d035      	beq.n	90009ca2 <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009c36:	f892 8000 	ldrb.w	r8, [r2]
90009c3a:	fb0e f707 	mul.w	r7, lr, r7
90009c3e:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009c40:	f815 8008 	ldrb.w	r8, [r5, r8]
90009c44:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009c48:	2f64      	cmp	r7, #100	@ 0x64
90009c4a:	d936      	bls.n	90009cba <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
90009c4c:	fbb1 f7f7 	udiv	r7, r1, r7
90009c50:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009c52:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90009c56:	2f01      	cmp	r7, #1
90009c58:	d1b4      	bne.n	90009bc4 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009c5a:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90009c5e:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009c60:	2f01      	cmp	r7, #1
90009c62:	d1c1      	bne.n	90009be8 <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009c64:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90009c66:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009c68:	2b01      	cmp	r3, #1
90009c6a:	d1ce      	bne.n	90009c0a <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009c6c:	3204      	adds	r2, #4
        quality += 100UL;
90009c6e:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90009c70:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009c74:	42a2      	cmp	r2, r4
90009c76:	d1d9      	bne.n	90009c2c <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
90009c78:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90009c7a:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90009c7c:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009c80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90009c84:	685a      	ldr	r2, [r3, #4]
90009c86:	f002 0203 	and.w	r2, r2, #3
90009c8a:	2a03      	cmp	r2, #3
90009c8c:	d147      	bne.n	90009d1e <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009c8e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009c90:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009c92:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009c94:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009c98:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009c9c:	68da      	ldr	r2, [r3, #12]
90009c9e:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009ca0:	e01d      	b.n	90009cde <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
90009ca2:	3664      	adds	r6, #100	@ 0x64
90009ca4:	e7d5      	b.n	90009c52 <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90009ca6:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009caa:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009cae:	e7a9      	b.n	90009c04 <HAL_JPEG_GetInfo.part.0+0x8c>
90009cb0:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009cb4:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009cb8:	e792      	b.n	90009be0 <HAL_JPEG_GetInfo.part.0+0x68>
90009cba:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009cbe:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009cc2:	e7c6      	b.n	90009c52 <HAL_JPEG_GetInfo.part.0+0xda>
90009cc4:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90009cc8:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009ccc:	e7a9      	b.n	90009c22 <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009cce:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009cd0:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009cd2:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009cd6:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009cda:	68da      	ldr	r2, [r3, #12]
90009cdc:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009cde:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009ce0:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009ce2:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009ce6:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009cea:	699a      	ldr	r2, [r3, #24]
90009cec:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009cf0:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009cf2:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009cf6:	d105      	bne.n	90009d04 <HAL_JPEG_GetInfo.part.0+0x18c>
90009cf8:	b927      	cbnz	r7, 90009d04 <HAL_JPEG_GetInfo.part.0+0x18c>
90009cfa:	2a00      	cmp	r2, #0
90009cfc:	f47f af54 	bne.w	90009ba8 <HAL_JPEG_GetInfo.part.0+0x30>
90009d00:	2102      	movs	r1, #2
90009d02:	e752      	b.n	90009baa <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009d04:	4321      	orrs	r1, r4
90009d06:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
90009d0a:	f43f af4d 	beq.w	90009ba8 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009d0e:	433a      	orrs	r2, r7
90009d10:	f47f af4a 	bne.w	90009ba8 <HAL_JPEG_GetInfo.part.0+0x30>
90009d14:	2e03      	cmp	r6, #3
90009d16:	f47f af47 	bne.w	90009ba8 <HAL_JPEG_GetInfo.part.0+0x30>
90009d1a:	2101      	movs	r1, #1
90009d1c:	e745      	b.n	90009baa <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
90009d1e:	2001      	movs	r0, #1
}
90009d20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009d24:	9002e2c8 	.word	0x9002e2c8

90009d28 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90009d28:	2800      	cmp	r0, #0
90009d2a:	f000 8108 	beq.w	90009f3e <HAL_JPEG_Init+0x216>
{
90009d2e:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90009d30:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009d34:	4605      	mov	r5, r0
90009d36:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009d3a:	2b00      	cmp	r3, #0
90009d3c:	f000 80fa 	beq.w	90009f34 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
90009d40:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009d42:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90009d44:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009d46:	497f      	ldr	r1, [pc, #508]	@ (90009f44 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009d48:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90009d4c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009d4e:	f042 0201 	orr.w	r2, r2, #1
90009d52:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d54:	6822      	ldr	r2, [r4, #0]
90009d56:	f022 0201 	bic.w	r2, r2, #1
90009d5a:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d5c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009d5e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009d62:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009d64:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009d66:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009d6a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009d6c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009d6e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009d72:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009d74:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009d76:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009d7a:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009d7c:	4a72      	ldr	r2, [pc, #456]	@ (90009f48 <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009d7e:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009d80:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90009d82:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009d84:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009d88:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90009d8c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90009d90:	4b6e      	ldr	r3, [pc, #440]	@ (90009f4c <HAL_JPEG_Init+0x224>)
90009d92:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009d96:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009d9a:	496d      	ldr	r1, [pc, #436]	@ (90009f50 <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009d9c:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009da0:	4b6c      	ldr	r3, [pc, #432]	@ (90009f54 <HAL_JPEG_Init+0x22c>)
90009da2:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009da6:	4a6c      	ldr	r2, [pc, #432]	@ (90009f58 <HAL_JPEG_Init+0x230>)
90009da8:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009dac:	4b6b      	ldr	r3, [pc, #428]	@ (90009f5c <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009dae:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009db2:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90009db6:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90009dba:	4969      	ldr	r1, [pc, #420]	@ (90009f60 <HAL_JPEG_Init+0x238>)
90009dbc:	4b69      	ldr	r3, [pc, #420]	@ (90009f64 <HAL_JPEG_Init+0x23c>)
90009dbe:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009dc2:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009dc6:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009dca:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009dce:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
90009dd2:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90009dd6:	4a64      	ldr	r2, [pc, #400]	@ (90009f68 <HAL_JPEG_Init+0x240>)
90009dd8:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009ddc:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90009de0:	4303      	orrs	r3, r0
  *address = value;
90009de2:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009de6:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009dea:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009dec:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009df0:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009df2:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009df6:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90009dfa:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009dfc:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009e00:	ea43 030c 	orr.w	r3, r3, ip
90009e04:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009e08:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009e0c:	d1eb      	bne.n	90009de6 <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
90009e0e:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e12:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009e16:	4955      	ldr	r1, [pc, #340]	@ (90009f6c <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e18:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90009e1a:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009e1c:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90009e20:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90009e24:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009e28:	400b      	ands	r3, r1
  *address = value;
90009e2a:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e2e:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90009e32:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90009e36:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009e3a:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90009e3e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009e42:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009e44:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009e48:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90009e4c:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009e50:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009e52:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009e54:	4b46      	ldr	r3, [pc, #280]	@ (90009f70 <HAL_JPEG_Init+0x248>)
  *address = value;
90009e56:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009e5a:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009e5e:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90009e62:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009e66:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009e6a:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009e6e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90009e70:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90009e74:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009e78:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009e7c:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e7e:	493d      	ldr	r1, [pc, #244]	@ (90009f74 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009e80:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e82:	4b3d      	ldr	r3, [pc, #244]	@ (90009f78 <HAL_JPEG_Init+0x250>)
  *address = value;
90009e84:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e88:	4a3c      	ldr	r2, [pc, #240]	@ (90009f7c <HAL_JPEG_Init+0x254>)
90009e8a:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009e8e:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009e92:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009e96:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90009e9a:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009e9e:	4a38      	ldr	r2, [pc, #224]	@ (90009f80 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90009ea0:	b29b      	uxth	r3, r3
90009ea2:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009ea6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009eaa:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009eae:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90009eb2:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009eb4:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009eb8:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009eba:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009ebe:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90009ec2:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009ec4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009ec8:	ea43 030c 	orr.w	r3, r3, ip
90009ecc:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009ed0:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009ed4:	d1eb      	bne.n	90009eae <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009ed6:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90009eda:	4923      	ldr	r1, [pc, #140]	@ (90009f68 <HAL_JPEG_Init+0x240>)
90009edc:	4628      	mov	r0, r5
90009ede:	f7ff fd3b 	bl	90009958 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009ee2:	b118      	cbz	r0, 90009eec <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009ee4:	2301      	movs	r3, #1
    return HAL_ERROR;
90009ee6:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009ee8:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009eea:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009eec:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90009ef0:	4923      	ldr	r1, [pc, #140]	@ (90009f80 <HAL_JPEG_Init+0x258>)
90009ef2:	4628      	mov	r0, r5
90009ef4:	f7ff fd30 	bl	90009958 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009ef8:	2800      	cmp	r0, #0
90009efa:	d1f3      	bne.n	90009ee4 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90009efc:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90009f00:	4920      	ldr	r1, [pc, #128]	@ (90009f84 <HAL_JPEG_Init+0x25c>)
90009f02:	4628      	mov	r0, r5
90009f04:	f7ff fc7e 	bl	90009804 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009f08:	2800      	cmp	r0, #0
90009f0a:	d1eb      	bne.n	90009ee4 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009f0c:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90009f10:	491d      	ldr	r1, [pc, #116]	@ (90009f88 <HAL_JPEG_Init+0x260>)
90009f12:	4628      	mov	r0, r5
90009f14:	f7ff fc76 	bl	90009804 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009f18:	2800      	cmp	r0, #0
90009f1a:	d1e3      	bne.n	90009ee4 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009f1c:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009f1e:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009f20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90009f24:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90009f26:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90009f28:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009f2a:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009f2e:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90009f30:	6568      	str	r0, [r5, #84]	@ 0x54
}
90009f32:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90009f34:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009f38:	f7fa ff14 	bl	90004d64 <HAL_JPEG_MspInit>
90009f3c:	e700      	b.n	90009d40 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009f3e:	2001      	movs	r0, #1
}
90009f40:	4770      	bx	lr
90009f42:	bf00      	nop
90009f44:	9002e288 	.word	0x9002e288
90009f48:	9002e248 	.word	0x9002e248
90009f4c:	01050100 	.word	0x01050100
90009f50:	0b0a0908 	.word	0x0b0a0908
90009f54:	07060504 	.word	0x07060504
90009f58:	03020100 	.word	0x03020100
90009f5c:	7d010000 	.word	0x7d010000
90009f60:	04040505 	.word	0x04040505
90009f64:	03040203 	.word	0x03040203
90009f68:	9002e3bc 	.word	0x9002e3bc
90009f6c:	ffff0000 	.word	0xffff0000
90009f70:	09080706 	.word	0x09080706
90009f74:	01000404 	.word	0x01000404
90009f78:	04040201 	.word	0x04040201
90009f7c:	05070403 	.word	0x05070403
90009f80:	9002e308 	.word	0x9002e308
90009f84:	9002e48c 	.word	0x9002e48c
90009f88:	9002e470 	.word	0x9002e470

90009f8c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009f8c:	2b00      	cmp	r3, #0
90009f8e:	bf18      	it	ne
90009f90:	2900      	cmpne	r1, #0
90009f92:	d036      	beq.n	9000a002 <HAL_JPEG_Decode_DMA+0x76>
{
90009f94:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009f96:	fab0 f580 	clz	r5, r0
90009f9a:	4604      	mov	r4, r0
90009f9c:	096d      	lsrs	r5, r5, #5
90009f9e:	b370      	cbz	r0, 90009ffe <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90009fa0:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009fa4:	f1bc 0f01 	cmp.w	ip, #1
90009fa8:	d022      	beq.n	90009ff0 <HAL_JPEG_Decode_DMA+0x64>
90009faa:	f04f 0c01 	mov.w	ip, #1
90009fae:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009fb2:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009fb6:	f1bc 0f01 	cmp.w	ip, #1
90009fba:	d117      	bne.n	90009fec <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009fbc:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009fbe:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009fc2:	9b04      	ldr	r3, [sp, #16]
90009fc4:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009fc6:	2304      	movs	r3, #4
90009fc8:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009fcc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fce:	f023 030f 	bic.w	r3, r3, #15
90009fd2:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009fd4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fd6:	f043 030e 	orr.w	r3, r3, #14
90009fda:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009fdc:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009fde:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90009fe0:	f7ff fd44 	bl	90009a6c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009fe4:	f7ff fd80 	bl	90009ae8 <JPEG_DMA_StartProcess>
90009fe8:	b920      	cbnz	r0, 90009ff4 <HAL_JPEG_Decode_DMA+0x68>
}
90009fea:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009fec:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90009ff0:	2002      	movs	r0, #2
}
90009ff2:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ff4:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009ff6:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ffa:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009ffe:	2001      	movs	r0, #1
}
9000a000:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a002:	2001      	movs	r0, #1
}
9000a004:	4770      	bx	lr
9000a006:	bf00      	nop

9000a008 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a008:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a00a:	f003 030c 	and.w	r3, r3, #12
9000a00e:	2b0c      	cmp	r3, #12
9000a010:	d01a      	beq.n	9000a048 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a012:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a014:	f003 030c 	and.w	r3, r3, #12
9000a018:	2b08      	cmp	r3, #8
9000a01a:	d001      	beq.n	9000a020 <HAL_JPEG_Pause+0x18>
}
9000a01c:	2000      	movs	r0, #0
9000a01e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a020:	07ca      	lsls	r2, r1, #31
9000a022:	d41f      	bmi.n	9000a064 <HAL_JPEG_Pause+0x5c>
9000a024:	f04f 3cff 	mov.w	ip, #4294967295
9000a028:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a02c:	078b      	lsls	r3, r1, #30
9000a02e:	d504      	bpl.n	9000a03a <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a030:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a032:	4694      	mov	ip, r2
9000a034:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a038:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a03a:	6802      	ldr	r2, [r0, #0]
}
9000a03c:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a03e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a040:	ea03 030c 	and.w	r3, r3, ip
9000a044:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a046:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a048:	07cb      	lsls	r3, r1, #31
9000a04a:	d503      	bpl.n	9000a054 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a04c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a04e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a052:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a054:	0789      	lsls	r1, r1, #30
9000a056:	d5e1      	bpl.n	9000a01c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a058:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a05a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a05e:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000a060:	2000      	movs	r0, #0
9000a062:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a064:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a066:	f06f 0c06 	mvn.w	ip, #6
9000a06a:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000a06e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a072:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a074:	e7da      	b.n	9000a02c <HAL_JPEG_Pause+0x24>
9000a076:	bf00      	nop

9000a078 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a078:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a07a:	6282      	str	r2, [r0, #40]	@ 0x28
}
9000a07c:	4770      	bx	lr
9000a07e:	bf00      	nop

9000a080 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a080:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a082:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
9000a084:	4770      	bx	lr
9000a086:	bf00      	nop

9000a088 <HAL_JPEG_Abort>:
{
9000a088:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
9000a08a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
9000a08c:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a08e:	6d41      	ldr	r1, [r0, #84]	@ 0x54
9000a090:	4a32      	ldr	r2, [pc, #200]	@ (9000a15c <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a092:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a096:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a098:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a09a:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a09c:	d043      	beq.n	9000a126 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a09e:	6822      	ldr	r2, [r4, #0]
9000a0a0:	6813      	ldr	r3, [r2, #0]
9000a0a2:	f023 0301 	bic.w	r3, r3, #1
9000a0a6:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
9000a0a8:	f7fd fec6 	bl	90007e38 <HAL_GetTick>
9000a0ac:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a0ae:	e005      	b.n	9000a0bc <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
9000a0b0:	f7fd fec2 	bl	90007e38 <HAL_GetTick>
9000a0b4:	1b40      	subs	r0, r0, r5
9000a0b6:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a0ba:	d82b      	bhi.n	9000a114 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a0bc:	6823      	ldr	r3, [r4, #0]
9000a0be:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a0c0:	0612      	lsls	r2, r2, #24
9000a0c2:	d4f5      	bmi.n	9000a0b0 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a0c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
9000a0c6:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a0c8:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a0cc:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a0ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a0d0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a0d4:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a0d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a0d8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a0dc:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a0de:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a0e0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a0e4:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
9000a0e6:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a0e8:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
9000a0ea:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a0ec:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000a0f0:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000a0f2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000a0f4:	b138      	cbz	r0, 9000a106 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a0f6:	2306      	movs	r3, #6
    return HAL_ERROR;
9000a0f8:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a0fa:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a0fe:	2300      	movs	r3, #0
9000a100:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a104:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a106:	2301      	movs	r3, #1
9000a108:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
9000a10c:	2300      	movs	r3, #0
9000a10e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a112:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a114:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a116:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a118:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a11a:	f042 0208 	orr.w	r2, r2, #8
9000a11e:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a120:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
9000a124:	e7ce      	b.n	9000a0c4 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
9000a126:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9000a128:	f001 f986 	bl	9000b438 <HAL_MDMA_Abort>
9000a12c:	b118      	cbz	r0, 9000a136 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a12e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a130:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a132:	2b40      	cmp	r3, #64	@ 0x40
9000a134:	d00d      	beq.n	9000a152 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
9000a136:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a138:	f001 f97e 	bl	9000b438 <HAL_MDMA_Abort>
9000a13c:	2800      	cmp	r0, #0
9000a13e:	d0ae      	beq.n	9000a09e <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a140:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000a142:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a144:	2b40      	cmp	r3, #64	@ 0x40
9000a146:	d1aa      	bne.n	9000a09e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a148:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a14a:	f043 0304 	orr.w	r3, r3, #4
9000a14e:	6523      	str	r3, [r4, #80]	@ 0x50
9000a150:	e7a5      	b.n	9000a09e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a152:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a154:	f043 0304 	orr.w	r3, r3, #4
9000a158:	6523      	str	r3, [r4, #80]	@ 0x50
9000a15a:	e7ec      	b.n	9000a136 <HAL_JPEG_Abort+0xae>
9000a15c:	ffff7ff0 	.word	0xffff7ff0

9000a160 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000a160:	4770      	bx	lr
9000a162:	bf00      	nop

9000a164 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a164:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a166:	2101      	movs	r1, #1
{
9000a168:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a16a:	6803      	ldr	r3, [r0, #0]
9000a16c:	681a      	ldr	r2, [r3, #0]
9000a16e:	f022 0201 	bic.w	r2, r2, #1
9000a172:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a174:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a176:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a17a:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a17c:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a180:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a182:	f043 0304 	orr.w	r3, r3, #4
9000a186:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a188:	f7f7 ffe4 	bl	90002154 <HAL_JPEG_ErrorCallback>
}
9000a18c:	bd08      	pop	{r3, pc}
9000a18e:	bf00      	nop

9000a190 <JPEG_MDMAInCpltCallback>:
{
9000a190:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a192:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
9000a194:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a196:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a19a:	6822      	ldr	r2, [r4, #0]
9000a19c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a19e:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000a1a2:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a1a4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a1a6:	400b      	ands	r3, r1
9000a1a8:	2b0c      	cmp	r3, #12
9000a1aa:	d001      	beq.n	9000a1b0 <JPEG_MDMAInCpltCallback+0x20>
}
9000a1ac:	b003      	add	sp, #12
9000a1ae:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1b0:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a1b2:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1b4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a1b6:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a1b8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1ba:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a1be:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1c0:	1a9b      	subs	r3, r3, r2
9000a1c2:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a1c4:	6a21      	ldr	r1, [r4, #32]
9000a1c6:	f7f7 fef9 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a1ca:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a1cc:	42ab      	cmp	r3, r5
9000a1ce:	d311      	bcc.n	9000a1f4 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a1d0:	b305      	cbz	r5, 9000a214 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a1d2:	fbb3 f2f5 	udiv	r2, r3, r5
9000a1d6:	fb05 3212 	mls	r2, r5, r2, r3
9000a1da:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a1dc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a1de:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a1e0:	04d1      	lsls	r1, r2, #19
9000a1e2:	d400      	bmi.n	9000a1e6 <JPEG_MDMAInCpltCallback+0x56>
9000a1e4:	b963      	cbnz	r3, 9000a200 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a1e6:	6822      	ldr	r2, [r4, #0]
9000a1e8:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a1ea:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000a1ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a1f0:	b003      	add	sp, #12
9000a1f2:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a1f4:	b1cb      	cbz	r3, 9000a22a <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a1f6:	0798      	lsls	r0, r3, #30
9000a1f8:	d119      	bne.n	9000a22e <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a1fa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a1fc:	04d2      	lsls	r2, r2, #19
9000a1fe:	d4f2      	bmi.n	9000a1e6 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a200:	6822      	ldr	r2, [r4, #0]
9000a202:	2501      	movs	r5, #1
9000a204:	69a1      	ldr	r1, [r4, #24]
9000a206:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a208:	3240      	adds	r2, #64	@ 0x40
9000a20a:	9500      	str	r5, [sp, #0]
9000a20c:	f001 f8a8 	bl	9000b360 <HAL_MDMA_Start_IT>
9000a210:	2800      	cmp	r0, #0
9000a212:	d0e8      	beq.n	9000a1e6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a214:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a216:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a218:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a21a:	f043 0304 	orr.w	r3, r3, #4
9000a21e:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a220:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a224:	f7f7 ff96 	bl	90002154 <HAL_JPEG_ErrorCallback>
        return;
9000a228:	e7c0      	b.n	9000a1ac <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a22a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a22c:	e7db      	b.n	9000a1e6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a22e:	f023 0303 	bic.w	r3, r3, #3
9000a232:	3304      	adds	r3, #4
9000a234:	e7d2      	b.n	9000a1dc <JPEG_MDMAInCpltCallback+0x4c>
9000a236:	bf00      	nop

9000a238 <JPEG_DMA_PollResidualData>:
{
9000a238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a23a:	6802      	ldr	r2, [r0, #0]
9000a23c:	2610      	movs	r6, #16
{
9000a23e:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a240:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a242:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a246:	d11d      	bne.n	9000a284 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a248:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a24a:	06df      	lsls	r7, r3, #27
9000a24c:	d51a      	bpl.n	9000a284 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a24e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a250:	69e7      	ldr	r7, [r4, #28]
9000a252:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a254:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a256:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a258:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a25a:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a25c:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000a25e:	69e2      	ldr	r2, [r4, #28]
9000a260:	443a      	add	r2, r7
9000a262:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a264:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a266:	69e2      	ldr	r2, [r4, #28]
9000a268:	4402      	add	r2, r0
9000a26a:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a26c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a26e:	69e2      	ldr	r2, [r4, #28]
9000a270:	440a      	add	r2, r1
9000a272:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a274:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a276:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a278:	3304      	adds	r3, #4
9000a27a:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a27c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a27e:	4293      	cmp	r3, r2
9000a280:	d021      	beq.n	9000a2c6 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a282:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a284:	3e01      	subs	r6, #1
9000a286:	d1db      	bne.n	9000a240 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a288:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a28a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a28c:	06d8      	lsls	r0, r3, #27
9000a28e:	d501      	bpl.n	9000a294 <JPEG_DMA_PollResidualData+0x5c>
9000a290:	048b      	lsls	r3, r1, #18
9000a292:	d417      	bmi.n	9000a2c4 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a294:	6813      	ldr	r3, [r2, #0]
9000a296:	f023 0301 	bic.w	r3, r3, #1
9000a29a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a29c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a29e:	b9eb      	cbnz	r3, 9000a2dc <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a2a0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a2a2:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a2a4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a2a6:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2a8:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a2ac:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a2b0:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a2b4:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2b6:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a2b8:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a2ba:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2be:	d00a      	beq.n	9000a2d6 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a2c0:	f7ff ff4e 	bl	9000a160 <HAL_JPEG_EncodeCpltCallback>
}
9000a2c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a2c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2c8:	4620      	mov	r0, r4
9000a2ca:	69e1      	ldr	r1, [r4, #28]
9000a2cc:	f7f7 fe96 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a2d0:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a2d2:	6265      	str	r5, [r4, #36]	@ 0x24
9000a2d4:	e7d6      	b.n	9000a284 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a2d6:	f7f7 ff3f 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
9000a2da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a2dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2de:	4620      	mov	r0, r4
9000a2e0:	69e1      	ldr	r1, [r4, #28]
9000a2e2:	f7f7 fe8b 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a2e6:	2300      	movs	r3, #0
9000a2e8:	6263      	str	r3, [r4, #36]	@ 0x24
9000a2ea:	e7d9      	b.n	9000a2a0 <JPEG_DMA_PollResidualData+0x68>

9000a2ec <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a2ec:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a2ee:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000a2f2:	d06f      	beq.n	9000a3d4 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a2f4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a2f6:	f003 030c 	and.w	r3, r3, #12
9000a2fa:	2b0c      	cmp	r3, #12
{
9000a2fc:	b530      	push	{r4, r5, lr}
9000a2fe:	4604      	mov	r4, r0
9000a300:	b083      	sub	sp, #12
9000a302:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a304:	d007      	beq.n	9000a316 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a306:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a308:	f003 030c 	and.w	r3, r3, #12
9000a30c:	2b08      	cmp	r3, #8
9000a30e:	d035      	beq.n	9000a37c <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000a310:	2000      	movs	r0, #0
}
9000a312:	b003      	add	sp, #12
9000a314:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a316:	07c8      	lsls	r0, r1, #31
9000a318:	d415      	bmi.n	9000a346 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a31a:	07a9      	lsls	r1, r5, #30
9000a31c:	d5f8      	bpl.n	9000a310 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a31e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a320:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a324:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a326:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a328:	041a      	lsls	r2, r3, #16
9000a32a:	d44f      	bmi.n	9000a3cc <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a32c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a32e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000a330:	2a00      	cmp	r2, #0
9000a332:	d13a      	bne.n	9000a3aa <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a334:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a336:	2206      	movs	r2, #6
    return HAL_ERROR;
9000a338:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a33a:	f043 0304 	orr.w	r3, r3, #4
9000a33e:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a340:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000a344:	e7e5      	b.n	9000a312 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a346:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a348:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a34a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a34e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a350:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a352:	2a00      	cmp	r2, #0
9000a354:	d0ee      	beq.n	9000a334 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a356:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a358:	fbb3 f1f2 	udiv	r1, r3, r2
9000a35c:	fb02 3211 	mls	r2, r2, r1, r3
9000a360:	1a9b      	subs	r3, r3, r2
9000a362:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a364:	2b00      	cmp	r3, #0
9000a366:	d0d8      	beq.n	9000a31a <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a368:	6822      	ldr	r2, [r4, #0]
9000a36a:	2101      	movs	r1, #1
9000a36c:	3240      	adds	r2, #64	@ 0x40
9000a36e:	9100      	str	r1, [sp, #0]
9000a370:	69a1      	ldr	r1, [r4, #24]
9000a372:	f000 fff5 	bl	9000b360 <HAL_MDMA_Start_IT>
9000a376:	2800      	cmp	r0, #0
9000a378:	d0cf      	beq.n	9000a31a <HAL_JPEG_Resume+0x2e>
9000a37a:	e7db      	b.n	9000a334 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a37c:	f011 0101 	ands.w	r1, r1, #1
9000a380:	d011      	beq.n	9000a3a6 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a382:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a384:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a386:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a388:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a38c:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a38e:	07ab      	lsls	r3, r5, #30
9000a390:	d504      	bpl.n	9000a39c <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a392:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a394:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a396:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a39a:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a39c:	6822      	ldr	r2, [r4, #0]
9000a39e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a3a0:	430b      	orrs	r3, r1
9000a3a2:	6313      	str	r3, [r2, #48]	@ 0x30
9000a3a4:	e7b4      	b.n	9000a310 <HAL_JPEG_Resume+0x24>
9000a3a6:	2228      	movs	r2, #40	@ 0x28
9000a3a8:	e7f1      	b.n	9000a38e <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a3aa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a3ac:	fbb3 f1f2 	udiv	r1, r3, r2
9000a3b0:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a3b4:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a3b6:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a3b8:	2201      	movs	r2, #1
9000a3ba:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a3bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a3be:	9200      	str	r2, [sp, #0]
9000a3c0:	69e2      	ldr	r2, [r4, #28]
9000a3c2:	f000 ffcd 	bl	9000b360 <HAL_MDMA_Start_IT>
9000a3c6:	2800      	cmp	r0, #0
9000a3c8:	d0a2      	beq.n	9000a310 <HAL_JPEG_Resume+0x24>
9000a3ca:	e7b3      	b.n	9000a334 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a3cc:	4620      	mov	r0, r4
9000a3ce:	f7ff ff33 	bl	9000a238 <JPEG_DMA_PollResidualData>
9000a3d2:	e79d      	b.n	9000a310 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a3d4:	2001      	movs	r0, #1
}
9000a3d6:	4770      	bx	lr

9000a3d8 <JPEG_MDMAOutCpltCallback>:
{
9000a3d8:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a3da:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
9000a3dc:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a3de:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a3e2:	6823      	ldr	r3, [r4, #0]
9000a3e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a3e6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a3ea:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a3ec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a3ee:	400a      	ands	r2, r1
9000a3f0:	2a0c      	cmp	r2, #12
9000a3f2:	d001      	beq.n	9000a3f8 <JPEG_MDMAOutCpltCallback+0x20>
}
9000a3f4:	b003      	add	sp, #12
9000a3f6:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a3f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a3fa:	0692      	lsls	r2, r2, #26
9000a3fc:	d505      	bpl.n	9000a40a <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a3fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a400:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a404:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a406:	b003      	add	sp, #12
9000a408:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a40a:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a40c:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a40e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a410:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a412:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a414:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a418:	1a9b      	subs	r3, r3, r2
9000a41a:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a41c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a41e:	f7f7 fded 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a422:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a424:	049b      	lsls	r3, r3, #18
9000a426:	d501      	bpl.n	9000a42c <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a428:	6823      	ldr	r3, [r4, #0]
9000a42a:	e7e8      	b.n	9000a3fe <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a42c:	6821      	ldr	r1, [r4, #0]
9000a42e:	2501      	movs	r5, #1
9000a430:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a432:	69e2      	ldr	r2, [r4, #28]
9000a434:	3144      	adds	r1, #68	@ 0x44
9000a436:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a438:	9500      	str	r5, [sp, #0]
9000a43a:	f000 ff91 	bl	9000b360 <HAL_MDMA_Start_IT>
9000a43e:	2800      	cmp	r0, #0
9000a440:	d0f2      	beq.n	9000a428 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a442:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a444:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a446:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a448:	f043 0304 	orr.w	r3, r3, #4
9000a44c:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a44e:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a452:	f7f7 fe7f 	bl	90002154 <HAL_JPEG_ErrorCallback>
          return;
9000a456:	e7cd      	b.n	9000a3f4 <JPEG_MDMAOutCpltCallback+0x1c>

9000a458 <JPEG_MDMAOutAbortCallback>:
{
9000a458:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a45a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a45c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a45e:	041a      	lsls	r2, r3, #16
9000a460:	d400      	bmi.n	9000a464 <JPEG_MDMAOutAbortCallback+0xc>
}
9000a462:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a464:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a466:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a468:	681b      	ldr	r3, [r3, #0]
9000a46a:	695b      	ldr	r3, [r3, #20]
9000a46c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a470:	1ad3      	subs	r3, r2, r3
9000a472:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a474:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a476:	429a      	cmp	r2, r3
9000a478:	d025      	beq.n	9000a4c6 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a47a:	6822      	ldr	r2, [r4, #0]
9000a47c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a47e:	f015 0510 	ands.w	r5, r5, #16
9000a482:	d118      	bne.n	9000a4b6 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a484:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a486:	bb4b      	cbnz	r3, 9000a4dc <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a488:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a48a:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a48c:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a48e:	f023 0301 	bic.w	r3, r3, #1
9000a492:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a494:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a496:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a498:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a49c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a4a0:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a4a4:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4a6:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a4a8:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a4aa:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4ae:	d012      	beq.n	9000a4d6 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a4b0:	f7ff fe56 	bl	9000a160 <HAL_JPEG_EncodeCpltCallback>
}
9000a4b4:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a4b6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a4b8:	049b      	lsls	r3, r3, #18
9000a4ba:	d4d2      	bmi.n	9000a462 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a4bc:	4620      	mov	r0, r4
}
9000a4be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a4c2:	f7ff beb9 	b.w	9000a238 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a4c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a4c8:	4620      	mov	r0, r4
9000a4ca:	69e1      	ldr	r1, [r4, #28]
9000a4cc:	f7f7 fd96 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a4d0:	2300      	movs	r3, #0
9000a4d2:	6263      	str	r3, [r4, #36]	@ 0x24
9000a4d4:	e7d1      	b.n	9000a47a <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a4d6:	f7f7 fe3f 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
9000a4da:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a4dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a4de:	4620      	mov	r0, r4
9000a4e0:	69e1      	ldr	r1, [r4, #28]
9000a4e2:	f7f7 fd8b 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a4e6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a4e8:	6265      	str	r5, [r4, #36]	@ 0x24
9000a4ea:	e7cd      	b.n	9000a488 <JPEG_MDMAOutAbortCallback+0x30>

9000a4ec <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4ec:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a4ee:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4f0:	f002 0203 	and.w	r2, r2, #3
9000a4f4:	2a02      	cmp	r2, #2
{
9000a4f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a4fa:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4fc:	d01e      	beq.n	9000a53c <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a4fe:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a500:	04d7      	lsls	r7, r2, #19
9000a502:	d407      	bmi.n	9000a514 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a504:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a506:	0796      	lsls	r6, r2, #30
9000a508:	f100 811b 	bmi.w	9000a742 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a50c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a50e:	0750      	lsls	r0, r2, #29
9000a510:	f100 81cc 	bmi.w	9000a8ac <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a514:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a516:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a51a:	d107      	bne.n	9000a52c <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a51c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000a51e:	f016 0608 	ands.w	r6, r6, #8
9000a522:	d14a      	bne.n	9000a5ba <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a524:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a526:	06d2      	lsls	r2, r2, #27
9000a528:	f100 81fe 	bmi.w	9000a928 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a52c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a52e:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a532:	2a20      	cmp	r2, #32
9000a534:	d019      	beq.n	9000a56a <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000a536:	2000      	movs	r0, #0
}
9000a538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a53c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a53e:	0652      	lsls	r2, r2, #25
9000a540:	d5dd      	bpl.n	9000a4fe <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a542:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a544:	4629      	mov	r1, r5
9000a546:	f7ff fb17 	bl	90009b78 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a54a:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a54c:	4629      	mov	r1, r5
9000a54e:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a550:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a552:	f7f7 fd05 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a556:	6823      	ldr	r3, [r4, #0]
9000a558:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a55a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a55e:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a560:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a562:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a566:	639a      	str	r2, [r3, #56]	@ 0x38
9000a568:	e7c9      	b.n	9000a4fe <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a56a:	681a      	ldr	r2, [r3, #0]
9000a56c:	f022 0201 	bic.w	r2, r2, #1
9000a570:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a572:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a574:	f002 020c 	and.w	r2, r2, #12
9000a578:	2a08      	cmp	r2, #8
9000a57a:	f000 8201 	beq.w	9000a980 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a57e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a580:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a584:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a586:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a588:	2b00      	cmp	r3, #0
9000a58a:	f040 81fe 	bne.w	9000a98a <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a58e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a590:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a592:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a594:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a596:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a59a:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a59e:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a5a2:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a5a4:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a5a6:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a5a8:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a5ac:	f000 81e5 	beq.w	9000a97a <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a5b0:	f7ff fdd6 	bl	9000a160 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a5b4:	2001      	movs	r0, #1
}
9000a5b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a5ba:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5bc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a5be:	3220      	adds	r2, #32
9000a5c0:	4296      	cmp	r6, r2
9000a5c2:	f0c0 8200 	bcc.w	9000a9c6 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a5c6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a5c8:	69e1      	ldr	r1, [r4, #28]
9000a5ca:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5cc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a5ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5d0:	69e2      	ldr	r2, [r4, #28]
9000a5d2:	440a      	add	r2, r1
9000a5d4:	0a19      	lsrs	r1, r3, #8
9000a5d6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a5d8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5da:	69e2      	ldr	r2, [r4, #28]
9000a5dc:	440a      	add	r2, r1
9000a5de:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a5e0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a5e2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a5e4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5e6:	69e2      	ldr	r2, [r4, #28]
9000a5e8:	440a      	add	r2, r1
9000a5ea:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a5ec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a5ee:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a5f0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a5f2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a5f4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a5f6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a5f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5fa:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a5fc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5fe:	69e2      	ldr	r2, [r4, #28]
9000a600:	440a      	add	r2, r1
9000a602:	0a19      	lsrs	r1, r3, #8
9000a604:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a606:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a608:	69e2      	ldr	r2, [r4, #28]
9000a60a:	440a      	add	r2, r1
9000a60c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a60e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a610:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a612:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a614:	69e2      	ldr	r2, [r4, #28]
9000a616:	440a      	add	r2, r1
9000a618:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a61a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a61c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a61e:	3304      	adds	r3, #4
9000a620:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a622:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a624:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a626:	69e1      	ldr	r1, [r4, #28]
9000a628:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a62a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a62c:	69e2      	ldr	r2, [r4, #28]
9000a62e:	440a      	add	r2, r1
9000a630:	0a19      	lsrs	r1, r3, #8
9000a632:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a634:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a636:	69e2      	ldr	r2, [r4, #28]
9000a638:	440a      	add	r2, r1
9000a63a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a63c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a63e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a640:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a642:	69e2      	ldr	r2, [r4, #28]
9000a644:	440a      	add	r2, r1
9000a646:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a648:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a64a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a64c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a64e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a650:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a652:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a654:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a656:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a658:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a65a:	69e2      	ldr	r2, [r4, #28]
9000a65c:	440a      	add	r2, r1
9000a65e:	0a19      	lsrs	r1, r3, #8
9000a660:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a662:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a664:	69e2      	ldr	r2, [r4, #28]
9000a666:	440a      	add	r2, r1
9000a668:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a66a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a66c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a66e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a670:	69e2      	ldr	r2, [r4, #28]
9000a672:	440a      	add	r2, r1
9000a674:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a676:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a678:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a67a:	3304      	adds	r3, #4
9000a67c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a67e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a680:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a682:	69e1      	ldr	r1, [r4, #28]
9000a684:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a686:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a688:	69e2      	ldr	r2, [r4, #28]
9000a68a:	440a      	add	r2, r1
9000a68c:	0a19      	lsrs	r1, r3, #8
9000a68e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a690:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a692:	69e2      	ldr	r2, [r4, #28]
9000a694:	440a      	add	r2, r1
9000a696:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a698:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a69a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a69c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a69e:	69e2      	ldr	r2, [r4, #28]
9000a6a0:	440a      	add	r2, r1
9000a6a2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a6a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a6a6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a6a8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a6aa:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a6ac:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a6ae:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a6b0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a6b2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a6b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6b6:	69e2      	ldr	r2, [r4, #28]
9000a6b8:	440a      	add	r2, r1
9000a6ba:	0a19      	lsrs	r1, r3, #8
9000a6bc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6c0:	69e2      	ldr	r2, [r4, #28]
9000a6c2:	440a      	add	r2, r1
9000a6c4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6c6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6c8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6cc:	69e2      	ldr	r2, [r4, #28]
9000a6ce:	440a      	add	r2, r1
9000a6d0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a6d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a6d4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a6d6:	3304      	adds	r3, #4
9000a6d8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a6da:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a6dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a6de:	69e1      	ldr	r1, [r4, #28]
9000a6e0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a6e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6e4:	69e2      	ldr	r2, [r4, #28]
9000a6e6:	440a      	add	r2, r1
9000a6e8:	0a19      	lsrs	r1, r3, #8
9000a6ea:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6ee:	69e2      	ldr	r2, [r4, #28]
9000a6f0:	440a      	add	r2, r1
9000a6f2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6f4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6f6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6fa:	69e2      	ldr	r2, [r4, #28]
9000a6fc:	440a      	add	r2, r1
9000a6fe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a700:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a702:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a704:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a706:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a708:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a70a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a70c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a70e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a710:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a712:	69e2      	ldr	r2, [r4, #28]
9000a714:	440a      	add	r2, r1
9000a716:	0a19      	lsrs	r1, r3, #8
9000a718:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a71a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a71c:	69e2      	ldr	r2, [r4, #28]
9000a71e:	440a      	add	r2, r1
9000a720:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a722:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a724:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a726:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a728:	69e2      	ldr	r2, [r4, #28]
9000a72a:	440a      	add	r2, r1
9000a72c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a72e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a730:	3304      	adds	r3, #4
9000a732:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a734:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a736:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a738:	429a      	cmp	r2, r3
9000a73a:	f000 82d8 	beq.w	9000acee <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a73e:	6823      	ldr	r3, [r4, #0]
9000a740:	e6f4      	b.n	9000a52c <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a742:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a744:	2a00      	cmp	r2, #0
9000a746:	f000 8128 	beq.w	9000a99a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a74a:	6a21      	ldr	r1, [r4, #32]
9000a74c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a74e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a750:	f240 81b9 	bls.w	9000aac6 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a754:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a756:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a758:	04cd      	lsls	r5, r1, #19
9000a75a:	f53f aedb 	bmi.w	9000a514 <JPEG_Process+0x28>
9000a75e:	2a00      	cmp	r2, #0
9000a760:	f43f aed8 	beq.w	9000a514 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a764:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000a766:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a76a:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a76c:	f200 824e 	bhi.w	9000ac0c <JPEG_Process+0x720>
      if (nb_words > 0UL)
9000a770:	2a03      	cmp	r2, #3
9000a772:	f240 82cc 	bls.w	9000ad0e <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
9000a776:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a778:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a77a:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a77e:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a780:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a782:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a784:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a788:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a78a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a78e:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a792:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a796:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a798:	6a22      	ldr	r2, [r4, #32]
9000a79a:	f102 0204 	add.w	r2, r2, #4
9000a79e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a7a0:	f43f aeb8 	beq.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a7a4:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a7a6:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7a8:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a7ac:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7ae:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7b0:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7b2:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a7b6:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7b8:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a7bc:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7c0:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a7c4:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a7c6:	6a22      	ldr	r2, [r4, #32]
9000a7c8:	f102 0204 	add.w	r2, r2, #4
9000a7cc:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a7ce:	f43f aea1 	beq.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a7d2:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a7d4:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7d6:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a7da:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7dc:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7de:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7e0:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a7e4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a7e6:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a7ea:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a7ee:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a7f2:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a7f4:	6a22      	ldr	r2, [r4, #32]
9000a7f6:	f102 0204 	add.w	r2, r2, #4
9000a7fa:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a7fc:	f43f ae8a 	beq.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a800:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a802:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a804:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a808:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a80a:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a80c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a80e:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a812:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a814:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a818:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a81c:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a820:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a822:	6a22      	ldr	r2, [r4, #32]
9000a824:	f102 0204 	add.w	r2, r2, #4
9000a828:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a82a:	f43f ae73 	beq.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a82e:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a830:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a832:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a836:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a838:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a83a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a83c:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a840:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a842:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a846:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a84a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a84e:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a850:	6a22      	ldr	r2, [r4, #32]
9000a852:	f102 0204 	add.w	r2, r2, #4
9000a856:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a858:	f43f ae5c 	beq.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a85c:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a85e:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a860:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a864:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a866:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a868:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a86a:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a86e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a870:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a874:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a878:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a87c:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a87e:	6a22      	ldr	r2, [r4, #32]
9000a880:	f102 0204 	add.w	r2, r2, #4
9000a884:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a886:	f47f ae45 	bne.w	9000a514 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a88a:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a88c:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a88e:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a890:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a892:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a894:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a896:	7840      	ldrb	r0, [r0, #1]
9000a898:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
9000a89c:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a89e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8a2:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a8a4:	6a22      	ldr	r2, [r4, #32]
9000a8a6:	3204      	adds	r2, #4
9000a8a8:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a8aa:	e633      	b.n	9000a514 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a8ac:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a8ae:	2a00      	cmp	r2, #0
9000a8b0:	d073      	beq.n	9000a99a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a8b2:	6a21      	ldr	r1, [r4, #32]
9000a8b4:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a8b6:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a8b8:	f200 8182 	bhi.w	9000abc0 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a8bc:	428a      	cmp	r2, r1
9000a8be:	f040 8104 	bne.w	9000aaca <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a8c2:	6a21      	ldr	r1, [r4, #32]
9000a8c4:	4620      	mov	r0, r4
9000a8c6:	f7f7 fb79 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a8ca:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a8cc:	2a04      	cmp	r2, #4
9000a8ce:	d902      	bls.n	9000a8d6 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a8d0:	f022 0203 	bic.w	r2, r2, #3
9000a8d4:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a8d6:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8d8:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a8da:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a8dc:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a8de:	04c9      	lsls	r1, r1, #19
9000a8e0:	f53f ae18 	bmi.w	9000a514 <JPEG_Process+0x28>
9000a8e4:	2a00      	cmp	r2, #0
9000a8e6:	f43f ae15 	beq.w	9000a514 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a8ea:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8ec:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a8ee:	f040 8177 	bne.w	9000abe0 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a8f2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a8f4:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a8f6:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a8f8:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000a8fa:	f105 0501 	add.w	r5, r5, #1
9000a8fe:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a900:	d010      	beq.n	9000a924 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a902:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a904:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a906:	5d45      	ldrb	r5, [r0, r5]
9000a908:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000a90c:	6a25      	ldr	r5, [r4, #32]
9000a90e:	f105 0501 	add.w	r5, r5, #1
9000a912:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a914:	d106      	bne.n	9000a924 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a916:	6a22      	ldr	r2, [r4, #32]
9000a918:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000a91a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a91c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a920:	3201      	adds	r2, #1
9000a922:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a924:	6419      	str	r1, [r3, #64]	@ 0x40
9000a926:	e5f5      	b.n	9000a514 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a928:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a92a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a92c:	3204      	adds	r2, #4
9000a92e:	4295      	cmp	r5, r2
9000a930:	f0c0 80cd 	bcc.w	9000aace <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000a934:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a936:	69e1      	ldr	r1, [r4, #28]
9000a938:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a93a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a93c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a93e:	69e2      	ldr	r2, [r4, #28]
9000a940:	440a      	add	r2, r1
9000a942:	0a19      	lsrs	r1, r3, #8
9000a944:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a946:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a948:	69e2      	ldr	r2, [r4, #28]
9000a94a:	440a      	add	r2, r1
9000a94c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a94e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a950:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a952:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a954:	69e2      	ldr	r2, [r4, #28]
9000a956:	440a      	add	r2, r1
9000a958:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a95a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a95c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a95e:	3304      	adds	r3, #4
9000a960:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a962:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a964:	429a      	cmp	r2, r3
9000a966:	f47f aeea 	bne.w	9000a73e <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a96a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a96c:	4620      	mov	r0, r4
9000a96e:	69e1      	ldr	r1, [r4, #28]
9000a970:	f7f7 fb44 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a974:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a976:	6266      	str	r6, [r4, #36]	@ 0x24
9000a978:	e5d8      	b.n	9000a52c <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a97a:	f7f7 fbed 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
9000a97e:	e619      	b.n	9000a5b4 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a980:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a982:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a986:	631a      	str	r2, [r3, #48]	@ 0x30
9000a988:	e5f9      	b.n	9000a57e <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a98a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a98c:	4620      	mov	r0, r4
9000a98e:	69e1      	ldr	r1, [r4, #28]
9000a990:	f7f7 fb34 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a994:	2300      	movs	r3, #0
9000a996:	6263      	str	r3, [r4, #36]	@ 0x24
9000a998:	e5f9      	b.n	9000a58e <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a99a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a99c:	f002 020c 	and.w	r2, r2, #12
9000a9a0:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a9a2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a9a4:	f000 812d 	beq.w	9000ac02 <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a9a8:	f002 020c 	and.w	r2, r2, #12
9000a9ac:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a9ae:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a9b0:	f47f adb0 	bne.w	9000a514 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a9b4:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a9b8:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a9ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a9bc:	f022 0206 	bic.w	r2, r2, #6
9000a9c0:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a9c2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a9c4:	e5a6      	b.n	9000a514 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a9c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9c8:	4296      	cmp	r6, r2
9000a9ca:	f67f adaf 	bls.w	9000a52c <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a9ce:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a9d0:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a9d2:	0880      	lsrs	r0, r0, #2
9000a9d4:	d020      	beq.n	9000aa18 <JPEG_Process+0x52c>
9000a9d6:	4629      	mov	r1, r5
9000a9d8:	e000      	b.n	9000a9dc <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000a9da:	6823      	ldr	r3, [r4, #0]
9000a9dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a9de:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9e0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9e2:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a9e4:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a9e6:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a9e8:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a9ea:	69e2      	ldr	r2, [r4, #28]
9000a9ec:	4432      	add	r2, r6
9000a9ee:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a9f2:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a9f4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a9f6:	69e2      	ldr	r2, [r4, #28]
9000a9f8:	4432      	add	r2, r6
9000a9fa:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a9fe:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aa02:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aa04:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000aa06:	69e2      	ldr	r2, [r4, #28]
9000aa08:	4432      	add	r2, r6
9000aa0a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aa0c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa0e:	f103 0304 	add.w	r3, r3, #4
9000aa12:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000aa14:	d1e1      	bne.n	9000a9da <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000aa16:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000aa18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa1a:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000aa1c:	429e      	cmp	r6, r3
9000aa1e:	f000 816e 	beq.w	9000acfe <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000aa22:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aa26:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000aa28:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000aa2c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000aa2e:	d00e      	beq.n	9000aa4e <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aa30:	f005 0303 	and.w	r3, r5, #3
9000aa34:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000aa36:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aa38:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000aa3a:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aa3c:	fa27 f303 	lsr.w	r3, r7, r3
9000aa40:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000aa42:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa44:	69e1      	ldr	r1, [r4, #28]
9000aa46:	f103 0301 	add.w	r3, r3, #1
9000aa4a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000aa4c:	d1f0      	bne.n	9000aa30 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000aa4e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa52:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa54:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000aa56:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa5a:	f7f7 facf 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000aa5e:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000aa60:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000aa62:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aa64:	f63f ae6b 	bhi.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aa68:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000aa6c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa6e:	69e0      	ldr	r0, [r4, #28]
9000aa70:	fa27 f502 	lsr.w	r5, r7, r2
9000aa74:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000aa76:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa78:	f101 0101 	add.w	r1, r1, #1
9000aa7c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aa7e:	f43f ae5e 	beq.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aa82:	f102 0108 	add.w	r1, r2, #8
9000aa86:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000aa88:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000aa8a:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aa8c:	fa27 f101 	lsr.w	r1, r7, r1
9000aa90:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000aa92:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aa94:	f101 0101 	add.w	r1, r1, #1
9000aa98:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aa9a:	f43f ae50 	beq.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aa9e:	3210      	adds	r2, #16
9000aaa0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aaa2:	69e0      	ldr	r0, [r4, #28]
9000aaa4:	fa27 f202 	lsr.w	r2, r7, r2
9000aaa8:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000aaaa:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aaac:	3201      	adds	r2, #1
9000aaae:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aab0:	2e00      	cmp	r6, #0
9000aab2:	f47f ae44 	bne.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aab6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aab8:	0e3f      	lsrs	r7, r7, #24
9000aaba:	69e2      	ldr	r2, [r4, #28]
9000aabc:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000aabe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aac0:	3301      	adds	r3, #1
9000aac2:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aac4:	e63b      	b.n	9000a73e <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000aac6:	428a      	cmp	r2, r1
9000aac8:	d07c      	beq.n	9000abc4 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000aaca:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000aacc:	e522      	b.n	9000a514 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000aace:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aad0:	4295      	cmp	r5, r2
9000aad2:	f67f ad2b 	bls.w	9000a52c <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000aad6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000aad8:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000aada:	0880      	lsrs	r0, r0, #2
9000aadc:	d020      	beq.n	9000ab20 <JPEG_Process+0x634>
9000aade:	4631      	mov	r1, r6
9000aae0:	e000      	b.n	9000aae4 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000aae2:	6823      	ldr	r3, [r4, #0]
9000aae4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000aae6:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aae8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aaea:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000aaec:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aaee:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aaf0:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000aaf2:	69e2      	ldr	r2, [r4, #28]
9000aaf4:	442a      	add	r2, r5
9000aaf6:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000aafa:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aafc:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000aafe:	69e2      	ldr	r2, [r4, #28]
9000ab00:	442a      	add	r2, r5
9000ab02:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab06:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab0a:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab0c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ab0e:	69e2      	ldr	r2, [r4, #28]
9000ab10:	442a      	add	r2, r5
9000ab12:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab14:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ab16:	f103 0304 	add.w	r3, r3, #4
9000ab1a:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000ab1c:	d1e1      	bne.n	9000aae2 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ab1e:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000ab20:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab22:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ab24:	429d      	cmp	r5, r3
9000ab26:	f000 80ea 	beq.w	9000acfe <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ab2a:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ab2e:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ab30:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000ab34:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000ab36:	d00e      	beq.n	9000ab56 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ab38:	f006 0303 	and.w	r3, r6, #3
9000ab3c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000ab3e:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ab40:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000ab42:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ab44:	fa27 f303 	lsr.w	r3, r7, r3
9000ab48:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ab4a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ab4c:	69e1      	ldr	r1, [r4, #28]
9000ab4e:	f103 0301 	add.w	r3, r3, #1
9000ab52:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000ab54:	d1f0      	bne.n	9000ab38 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000ab56:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab5a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab5c:	4620      	mov	r0, r4
9000ab5e:	f7f7 fa4d 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000ab62:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000ab66:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000ab68:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000ab6a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ab6c:	f63f ade7 	bhi.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ab70:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000ab74:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab76:	69e0      	ldr	r0, [r4, #28]
9000ab78:	fa27 f502 	lsr.w	r5, r7, r2
9000ab7c:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000ab7e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab80:	f101 0101 	add.w	r1, r1, #1
9000ab84:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ab86:	f43f adda 	beq.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ab8a:	f102 0108 	add.w	r1, r2, #8
9000ab8e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000ab90:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000ab92:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000ab94:	fa27 f101 	lsr.w	r1, r7, r1
9000ab98:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000ab9a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab9c:	f101 0101 	add.w	r1, r1, #1
9000aba0:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000aba2:	f43f adcc 	beq.w	9000a73e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000aba6:	3210      	adds	r2, #16
9000aba8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abaa:	69e0      	ldr	r0, [r4, #28]
9000abac:	fa27 f202 	lsr.w	r2, r7, r2
9000abb0:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000abb2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000abb4:	3201      	adds	r2, #1
9000abb6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000abb8:	2b00      	cmp	r3, #0
9000abba:	f43f af7c 	beq.w	9000aab6 <JPEG_Process+0x5ca>
9000abbe:	e5be      	b.n	9000a73e <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000abc0:	1a52      	subs	r2, r2, r1
9000abc2:	e68b      	b.n	9000a8dc <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000abc4:	6a21      	ldr	r1, [r4, #32]
9000abc6:	4620      	mov	r0, r4
9000abc8:	f7f7 f9f8 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000abcc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000abce:	2a04      	cmp	r2, #4
9000abd0:	d902      	bls.n	9000abd8 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000abd2:	f022 0203 	bic.w	r2, r2, #3
9000abd6:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000abd8:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abda:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000abdc:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000abde:	e5ba      	b.n	9000a756 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000abe0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abe2:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abe4:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abe6:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000abe8:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abea:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000abec:	7849      	ldrb	r1, [r1, #1]
9000abee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000abf2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000abf4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000abf8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000abfa:	6a22      	ldr	r2, [r4, #32]
9000abfc:	3204      	adds	r2, #4
9000abfe:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ac00:	e488      	b.n	9000a514 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ac02:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000ac06:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ac08:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000ac0a:	e483      	b.n	9000a514 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
9000ac0c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac0e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac10:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac12:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac14:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac16:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac18:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac1a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000ac1e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac20:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac24:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ac26:	6a22      	ldr	r2, [r4, #32]
9000ac28:	3204      	adds	r2, #4
9000ac2a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac2c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac2e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac30:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac32:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac34:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac36:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac38:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac3a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000ac3e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac40:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac44:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ac46:	6a22      	ldr	r2, [r4, #32]
9000ac48:	3204      	adds	r2, #4
9000ac4a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac4c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac4e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac50:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac52:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac54:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac56:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac58:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac5a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000ac5e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac60:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac64:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ac66:	6a22      	ldr	r2, [r4, #32]
9000ac68:	3204      	adds	r2, #4
9000ac6a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac6c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac6e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac70:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac72:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac74:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac76:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac78:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac7a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000ac7e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac80:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac84:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ac86:	6a22      	ldr	r2, [r4, #32]
9000ac88:	3204      	adds	r2, #4
9000ac8a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac8c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac8e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac90:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac92:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac94:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac96:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac98:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac9a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000ac9e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aca0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aca4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aca6:	6a22      	ldr	r2, [r4, #32]
9000aca8:	3204      	adds	r2, #4
9000acaa:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000acac:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acae:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acb0:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acb2:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acb4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acb6:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000acb8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acba:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000acbe:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acc0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acc4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000acc6:	6a22      	ldr	r2, [r4, #32]
9000acc8:	3204      	adds	r2, #4
9000acca:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000accc:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acce:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acd0:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acd2:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acd4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acd6:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000acd8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acda:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000acde:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ace0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ace4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ace6:	6a22      	ldr	r2, [r4, #32]
9000ace8:	3204      	adds	r2, #4
9000acea:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000acec:	e5cd      	b.n	9000a88a <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000acee:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000acf0:	4620      	mov	r0, r4
9000acf2:	69e1      	ldr	r1, [r4, #28]
9000acf4:	f7f7 f982 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acf8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000acfa:	6265      	str	r5, [r4, #36]	@ 0x24
9000acfc:	e416      	b.n	9000a52c <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000acfe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad00:	4620      	mov	r0, r4
9000ad02:	f7f7 f97b 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ad06:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad08:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ad0a:	6262      	str	r2, [r4, #36]	@ 0x24
9000ad0c:	e40e      	b.n	9000a52c <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad0e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ad10:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000ad12:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad14:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
9000ad16:	f105 0501 	add.w	r5, r5, #1
9000ad1a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ad1c:	d010      	beq.n	9000ad40 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad1e:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ad20:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad22:	5d4d      	ldrb	r5, [r1, r5]
9000ad24:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
9000ad28:	6a25      	ldr	r5, [r4, #32]
9000ad2a:	f105 0501 	add.w	r5, r5, #1
9000ad2e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ad30:	d106      	bne.n	9000ad40 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad32:	6a22      	ldr	r2, [r4, #32]
9000ad34:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
9000ad36:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad38:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000ad3c:	3201      	adds	r2, #1
9000ad3e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000ad40:	6418      	str	r0, [r3, #64]	@ 0x40
9000ad42:	f7ff bbe7 	b.w	9000a514 <JPEG_Process+0x28>
9000ad46:	bf00      	nop

9000ad48 <HAL_JPEG_IRQHandler>:
{
9000ad48:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000ad4a:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000ad4e:	3b03      	subs	r3, #3
9000ad50:	2b01      	cmp	r3, #1
9000ad52:	d900      	bls.n	9000ad56 <HAL_JPEG_IRQHandler+0xe>
}
9000ad54:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ad56:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000ad58:	4604      	mov	r4, r0
9000ad5a:	f003 030c 	and.w	r3, r3, #12
9000ad5e:	2b08      	cmp	r3, #8
9000ad60:	d050      	beq.n	9000ae04 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ad62:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000ad64:	f003 030c 	and.w	r3, r3, #12
9000ad68:	2b0c      	cmp	r3, #12
9000ad6a:	d1f3      	bne.n	9000ad54 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ad6c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000ad6e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ad70:	f002 0203 	and.w	r2, r2, #3
9000ad74:	2a02      	cmp	r2, #2
9000ad76:	d049      	beq.n	9000ae0c <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000ad78:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ad7a:	0692      	lsls	r2, r2, #26
9000ad7c:	d5ea      	bpl.n	9000ad54 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000ad7e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000ad80:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000ad82:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000ad86:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ad88:	681a      	ldr	r2, [r3, #0]
9000ad8a:	f022 0201 	bic.w	r2, r2, #1
9000ad8e:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ad90:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ad92:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000ad96:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ad98:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ad9a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ad9e:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000ada0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000ada4:	2b02      	cmp	r3, #2
9000ada6:	d054      	beq.n	9000ae52 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000ada8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000adaa:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000adae:	2b02      	cmp	r3, #2
9000adb0:	d043      	beq.n	9000ae3a <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000adb2:	6803      	ldr	r3, [r0, #0]
9000adb4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000adb6:	695b      	ldr	r3, [r3, #20]
9000adb8:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000adbc:	1ad3      	subs	r3, r2, r3
9000adbe:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000adc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000adc2:	429a      	cmp	r2, r3
9000adc4:	d048      	beq.n	9000ae58 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000adc6:	6822      	ldr	r2, [r4, #0]
9000adc8:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000adca:	f015 0510 	ands.w	r5, r5, #16
9000adce:	d138      	bne.n	9000ae42 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000add0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000add2:	2b00      	cmp	r3, #0
9000add4:	d14b      	bne.n	9000ae6e <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000add6:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000add8:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000adda:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000addc:	f023 0301 	bic.w	r3, r3, #1
9000ade0:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000ade2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ade4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ade6:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000adea:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000adee:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000adf2:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000adf4:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000adf6:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000adf8:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000adfc:	d034      	beq.n	9000ae68 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000adfe:	f7ff f9af 	bl	9000a160 <HAL_JPEG_EncodeCpltCallback>
}
9000ae02:	bd38      	pop	{r3, r4, r5, pc}
9000ae04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000ae08:	f7ff bb70 	b.w	9000a4ec <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000ae0c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ae0e:	0651      	lsls	r1, r2, #25
9000ae10:	d5b2      	bpl.n	9000ad78 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000ae12:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000ae14:	4629      	mov	r1, r5
9000ae16:	f7fe feaf 	bl	90009b78 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000ae1a:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000ae1c:	4629      	mov	r1, r5
9000ae1e:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000ae20:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000ae22:	f7f7 f89d 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000ae26:	6823      	ldr	r3, [r4, #0]
9000ae28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ae2a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000ae2e:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000ae30:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ae32:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000ae36:	639a      	str	r2, [r3, #56]	@ 0x38
9000ae38:	e79e      	b.n	9000ad78 <HAL_JPEG_IRQHandler+0x30>
}
9000ae3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000ae3e:	f000 bb35 	b.w	9000b4ac <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ae42:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000ae44:	049b      	lsls	r3, r3, #18
9000ae46:	d485      	bmi.n	9000ad54 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000ae48:	4620      	mov	r0, r4
}
9000ae4a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000ae4e:	f7ff b9f3 	b.w	9000a238 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000ae52:	f000 fb2b 	bl	9000b4ac <HAL_MDMA_Abort_IT>
9000ae56:	e7a7      	b.n	9000ada8 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ae58:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ae5a:	4620      	mov	r0, r4
9000ae5c:	69e1      	ldr	r1, [r4, #28]
9000ae5e:	f7f7 f8cd 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000ae62:	2300      	movs	r3, #0
9000ae64:	6263      	str	r3, [r4, #36]	@ 0x24
9000ae66:	e7ae      	b.n	9000adc6 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ae68:	f7f7 f976 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
9000ae6c:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ae6e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ae70:	4620      	mov	r0, r4
9000ae72:	69e1      	ldr	r1, [r4, #28]
9000ae74:	f7f7 f8c2 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ae78:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ae7a:	6265      	str	r5, [r4, #36]	@ 0x24
9000ae7c:	e7ab      	b.n	9000add6 <HAL_JPEG_IRQHandler+0x8e>
9000ae7e:	bf00      	nop

9000ae80 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000ae80:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000ae84:	4770      	bx	lr
9000ae86:	bf00      	nop

9000ae88 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000ae88:	2800      	cmp	r0, #0
9000ae8a:	d052      	beq.n	9000af32 <HAL_LTDC_Init+0xaa>
{
9000ae8c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000ae8e:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000ae92:	4604      	mov	r4, r0
9000ae94:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ae98:	2b00      	cmp	r3, #0
9000ae9a:	d045      	beq.n	9000af28 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ae9c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae9e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000aea0:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000aea4:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000aea8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000aeaa:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000aeac:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000aeae:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000aeb2:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000aeb4:	6920      	ldr	r0, [r4, #16]
9000aeb6:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000aeb8:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000aeba:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000aebc:	6999      	ldr	r1, [r3, #24]
9000aebe:	430a      	orrs	r2, r1
9000aec0:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000aec2:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
9000aec6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000aeca:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000aecc:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
9000aed0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000aed4:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
9000aed6:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
9000aeda:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000aede:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
9000aee0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000aee2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000aee6:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000aee8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000aeea:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000aeee:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000aef2:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000aef6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000aef8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000aefa:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000aefe:	432a      	orrs	r2, r5
9000af00:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000af04:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000af06:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000af0a:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000af0c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000af0e:	f042 0206 	orr.w	r2, r2, #6
9000af12:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000af14:	699a      	ldr	r2, [r3, #24]
9000af16:	f042 0201 	orr.w	r2, r2, #1
9000af1a:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000af1c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000af1e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000af22:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000af26:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000af28:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000af2c:	f7f9 ffa6 	bl	90004e7c <HAL_LTDC_MspInit>
9000af30:	e7b4      	b.n	9000ae9c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000af32:	2001      	movs	r0, #1
}
9000af34:	4770      	bx	lr
9000af36:	bf00      	nop

9000af38 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000af38:	4770      	bx	lr
9000af3a:	bf00      	nop

9000af3c <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000af3c:	4770      	bx	lr
9000af3e:	bf00      	nop

9000af40 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000af40:	6803      	ldr	r3, [r0, #0]
{
9000af42:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000af44:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000af46:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000af48:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000af4a:	076a      	lsls	r2, r5, #29
9000af4c:	d501      	bpl.n	9000af52 <HAL_LTDC_IRQHandler+0x12>
9000af4e:	0771      	lsls	r1, r6, #29
9000af50:	d41d      	bmi.n	9000af8e <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000af52:	07aa      	lsls	r2, r5, #30
9000af54:	d501      	bpl.n	9000af5a <HAL_LTDC_IRQHandler+0x1a>
9000af56:	07b3      	lsls	r3, r6, #30
9000af58:	d42d      	bmi.n	9000afb6 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000af5a:	07e8      	lsls	r0, r5, #31
9000af5c:	d501      	bpl.n	9000af62 <HAL_LTDC_IRQHandler+0x22>
9000af5e:	07f1      	lsls	r1, r6, #31
9000af60:	d440      	bmi.n	9000afe4 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000af62:	072a      	lsls	r2, r5, #28
9000af64:	d501      	bpl.n	9000af6a <HAL_LTDC_IRQHandler+0x2a>
9000af66:	0733      	lsls	r3, r6, #28
9000af68:	d400      	bmi.n	9000af6c <HAL_LTDC_IRQHandler+0x2c>
}
9000af6a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000af6c:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000af6e:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000af70:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000af72:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000af74:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000af76:	f022 0208 	bic.w	r2, r2, #8
9000af7a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000af7c:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000af7e:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000af80:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000af84:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000af88:	f7ff ffd8 	bl	9000af3c <HAL_LTDC_ReloadEventCallback>
}
9000af8c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000af8e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000af90:	f022 0204 	bic.w	r2, r2, #4
9000af94:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000af96:	2204      	movs	r2, #4
9000af98:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000af9a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000af9e:	f043 0301 	orr.w	r3, r3, #1
9000afa2:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000afa6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000afa8:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000afac:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000afb0:	f7ff ffc2 	bl	9000af38 <HAL_LTDC_ErrorCallback>
9000afb4:	e7cd      	b.n	9000af52 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000afb6:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000afb8:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000afba:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000afbc:	f022 0202 	bic.w	r2, r2, #2
9000afc0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000afc2:	2202      	movs	r2, #2
9000afc4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000afc6:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000afc8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000afcc:	f043 0302 	orr.w	r3, r3, #2
9000afd0:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000afd4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000afd6:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000afda:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000afde:	f7ff ffab 	bl	9000af38 <HAL_LTDC_ErrorCallback>
9000afe2:	e7ba      	b.n	9000af5a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000afe4:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000afe6:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000afe8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000afea:	f022 0201 	bic.w	r2, r2, #1
9000afee:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000aff0:	2201      	movs	r2, #1
9000aff2:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000aff4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000aff6:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000affa:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000affe:	f7f8 fb5b 	bl	900036b8 <HAL_LTDC_LineEventCallback>
9000b002:	e7ae      	b.n	9000af62 <HAL_LTDC_IRQHandler+0x22>

9000b004 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b004:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000b008:	2b01      	cmp	r3, #1
9000b00a:	f000 80b6 	beq.w	9000b17a <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b00e:	2302      	movs	r3, #2
{
9000b010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b014:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b018:	f8d0 9000 	ldr.w	r9, [r0]
{
9000b01c:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b01e:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b022:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b026:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b028:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b02c:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b02e:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000b032:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b034:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b038:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b03a:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b03e:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b042:	f8df a140 	ldr.w	sl, [pc, #320]	@ 9000b184 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b046:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b04a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000b04e:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b050:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b052:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b056:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b058:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b05a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b05e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b060:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b064:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b066:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b068:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b06a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b06e:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b070:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b072:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b074:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b078:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b07c:	f3c3 430b 	ubfx	r3, r3, #16, #12
9000b080:	440b      	add	r3, r1
9000b082:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b086:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b08a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b08e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b092:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b096:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b09a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b09c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b0a0:	68ab      	ldr	r3, [r5, #8]
9000b0a2:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b0a6:	3301      	adds	r3, #1
9000b0a8:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b0ac:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b0ae:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b0b0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b0b4:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b0b6:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b0ba:	2907      	cmp	r1, #7
9000b0bc:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b0c0:	f023 0307 	bic.w	r3, r3, #7
9000b0c4:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b0c8:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b0cc:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000b0d0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b0d4:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b0d8:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b0dc:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b0e0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b0e4:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b0e8:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b0ec:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000b0f0:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b0f4:	696b      	ldr	r3, [r5, #20]
9000b0f6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b0fa:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b0fe:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b100:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b104:	6a28      	ldr	r0, [r5, #32]
9000b106:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b10a:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b10e:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000b112:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000b114:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b118:	d82d      	bhi.n	9000b176 <HAL_LTDC_ConfigLayer+0x172>
9000b11a:	4b19      	ldr	r3, [pc, #100]	@ (9000b180 <HAL_LTDC_ConfigLayer+0x17c>)
9000b11c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b120:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b122:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b124:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b128:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b12c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b12e:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b130:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b134:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000b138:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000b13c:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b140:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b144:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
9000b148:	f36f 030a 	bfc	r3, #0, #11
9000b14c:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b150:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b154:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b156:	f859 3006 	ldr.w	r3, [r9, r6]
9000b15a:	4313      	orrs	r3, r2
9000b15c:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b160:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b162:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000b166:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b168:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000b16c:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000b170:	b003      	add	sp, #12
9000b172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000b176:	2301      	movs	r3, #1
9000b178:	e7d2      	b.n	9000b120 <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
9000b17a:	2002      	movs	r0, #2
}
9000b17c:	4770      	bx	lr
9000b17e:	bf00      	nop
9000b180:	9002e4a8 	.word	0x9002e4a8
9000b184:	fffff8f8 	.word	0xfffff8f8

9000b188 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b188:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000b18c:	2a01      	cmp	r2, #1
9000b18e:	d019      	beq.n	9000b1c4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b190:	6802      	ldr	r2, [r0, #0]
9000b192:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b194:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b196:	f04f 0c00 	mov.w	ip, #0
{
9000b19a:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b19c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b1a0:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b1a2:	4c09      	ldr	r4, [pc, #36]	@ (9000b1c8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b1a4:	f020 0001 	bic.w	r0, r0, #1
9000b1a8:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b1aa:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b1ac:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b1ae:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000b1b0:	4301      	orrs	r1, r0
9000b1b2:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b1b4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000b1b8:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b1ba:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000b1be:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b1c2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b1c4:	2002      	movs	r0, #2
}
9000b1c6:	4770      	bx	lr
9000b1c8:	50001000 	.word	0x50001000

9000b1cc <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b1cc:	b538      	push	{r3, r4, r5, lr}
9000b1ce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b1d0:	f7fc fe32 	bl	90007e38 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b1d4:	2c00      	cmp	r4, #0
9000b1d6:	d058      	beq.n	9000b28a <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b1d8:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b1da:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b1dc:	2100      	movs	r1, #0
9000b1de:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b1e0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000b1e4:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b1e8:	68da      	ldr	r2, [r3, #12]
9000b1ea:	f022 0201 	bic.w	r2, r2, #1
9000b1ee:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b1f0:	e005      	b.n	9000b1fe <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b1f2:	f7fc fe21 	bl	90007e38 <HAL_GetTick>
9000b1f6:	1b43      	subs	r3, r0, r5
9000b1f8:	2b05      	cmp	r3, #5
9000b1fa:	d841      	bhi.n	9000b280 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b1fc:	6823      	ldr	r3, [r4, #0]
9000b1fe:	68da      	ldr	r2, [r3, #12]
9000b200:	07d2      	lsls	r2, r2, #31
9000b202:	d4f6      	bmi.n	9000b1f2 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b204:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b208:	69e0      	ldr	r0, [r4, #28]
9000b20a:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b20c:	68e1      	ldr	r1, [r4, #12]
9000b20e:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b210:	4302      	orrs	r2, r0
9000b212:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b214:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b216:	4302      	orrs	r2, r0
9000b218:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b21a:	4302      	orrs	r2, r0
9000b21c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000b21e:	4302      	orrs	r2, r0
9000b220:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000b222:	4302      	orrs	r2, r0
9000b224:	68a0      	ldr	r0, [r4, #8]
9000b226:	4302      	orrs	r2, r0
9000b228:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b22a:	3801      	subs	r0, #1
9000b22c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b230:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b232:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b234:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b238:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b23a:	d103      	bne.n	9000b244 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b23c:	691a      	ldr	r2, [r3, #16]
9000b23e:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000b242:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b244:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b246:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000b248:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b24a:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b24c:	db1f      	blt.n	9000b28e <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b24e:	b292      	uxth	r2, r2
9000b250:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b252:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b254:	2a00      	cmp	r2, #0
9000b256:	db24      	blt.n	9000b2a2 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b258:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b25a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b25e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b262:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b264:	d029      	beq.n	9000b2ba <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b266:	b2c0      	uxtb	r0, r0
9000b268:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b26a:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b26c:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b26e:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000b270:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b272:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b274:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b276:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b27a:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000b27e:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b280:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b282:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b284:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b286:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000b28a:	2001      	movs	r0, #1
}
9000b28c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b28e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b290:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b292:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b296:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b298:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b29a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b29c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b29e:	2a00      	cmp	r2, #0
9000b2a0:	dada      	bge.n	9000b258 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b2a2:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b2a4:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b2a6:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b2aa:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000b2ae:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b2b0:	6a19      	ldr	r1, [r3, #32]
9000b2b2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b2b6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b2b8:	d1d5      	bne.n	9000b266 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b2ba:	2200      	movs	r2, #0
9000b2bc:	629a      	str	r2, [r3, #40]	@ 0x28
9000b2be:	e7d4      	b.n	9000b26a <HAL_MDMA_Init+0x9e>

9000b2c0 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b2c0:	b1f8      	cbz	r0, 9000b302 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b2c2:	6802      	ldr	r2, [r0, #0]
9000b2c4:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b2c6:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b2c8:	68d0      	ldr	r0, [r2, #12]
{
9000b2ca:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b2cc:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b2d0:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b2d2:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b2d4:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b2d6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b2d8:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b2da:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b2dc:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b2de:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b2e0:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b2e2:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000b2e4:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000b2e6:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000b2e8:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b2ea:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b2ec:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000b2ee:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b2f2:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000b2f6:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b2fa:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b2fc:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000b300:	4770      	bx	lr
    return HAL_ERROR;
9000b302:	2001      	movs	r0, #1
}
9000b304:	4770      	bx	lr
9000b306:	bf00      	nop

9000b308 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b308:	b308      	cbz	r0, 9000b34e <HAL_MDMA_ConfigPostRequestMask+0x46>
9000b30a:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b30c:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b310:	2801      	cmp	r0, #1
9000b312:	d01e      	beq.n	9000b352 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b314:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b316:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b31a:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b31e:	45f4      	cmp	ip, lr
9000b320:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b324:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b328:	d004      	beq.n	9000b334 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b32a:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b32c:	2200      	movs	r2, #0
9000b32e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b332:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b334:	681c      	ldr	r4, [r3, #0]
9000b336:	6925      	ldr	r5, [r4, #16]
9000b338:	006d      	lsls	r5, r5, #1
9000b33a:	d4f7      	bmi.n	9000b32c <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b33c:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b33e:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b340:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b342:	b941      	cbnz	r1, 9000b356 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b344:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b348:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b34a:	2000      	movs	r0, #0
9000b34c:	e7ee      	b.n	9000b32c <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b34e:	2001      	movs	r0, #1
9000b350:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b352:	2002      	movs	r0, #2
}
9000b354:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b356:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b35a:	6122      	str	r2, [r4, #16]
9000b35c:	e7f5      	b.n	9000b34a <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b35e:	bf00      	nop

9000b360 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b360:	2800      	cmp	r0, #0
9000b362:	d066      	beq.n	9000b432 <HAL_MDMA_Start_IT+0xd2>
{
9000b364:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b366:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b36a:	2c01      	cmp	r4, #1
9000b36c:	d009      	beq.n	9000b382 <HAL_MDMA_Start_IT+0x22>
9000b36e:	2401      	movs	r4, #1
9000b370:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b374:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b378:	2c01      	cmp	r4, #1
9000b37a:	d005      	beq.n	9000b388 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b37c:	2300      	movs	r3, #0
9000b37e:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b382:	2002      	movs	r0, #2
}
9000b384:	bc70      	pop	{r4, r5, r6}
9000b386:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b388:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b38a:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b38c:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b38e:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b392:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b396:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b39a:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b39e:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b3a0:	6804      	ldr	r4, [r0, #0]
9000b3a2:	68e5      	ldr	r5, [r4, #12]
9000b3a4:	f025 0501 	bic.w	r5, r5, #1
9000b3a8:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b3aa:	6965      	ldr	r5, [r4, #20]
9000b3ac:	f363 0510 	bfi	r5, r3, #0, #17
9000b3b0:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b3b2:	6963      	ldr	r3, [r4, #20]
9000b3b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b3b8:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b3bc:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b3be:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b3c0:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b3c2:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b3c4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b3c6:	bf0c      	ite	eq
9000b3c8:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b3cc:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b3d0:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b3d4:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b3d6:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b3d8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b3da:	bf0c      	ite	eq
9000b3dc:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b3e0:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b3e4:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b3e6:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b3e8:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b3ea:	68e3      	ldr	r3, [r4, #12]
9000b3ec:	f043 0306 	orr.w	r3, r3, #6
9000b3f0:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b3f2:	b11a      	cbz	r2, 9000b3fc <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b3f4:	68e3      	ldr	r3, [r4, #12]
9000b3f6:	f043 0310 	orr.w	r3, r3, #16
9000b3fa:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b3fc:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b3fe:	b11b      	cbz	r3, 9000b408 <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b400:	68e3      	ldr	r3, [r4, #12]
9000b402:	f043 0308 	orr.w	r3, r3, #8
9000b406:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b408:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b40a:	b11b      	cbz	r3, 9000b414 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b40c:	68e3      	ldr	r3, [r4, #12]
9000b40e:	f043 0320 	orr.w	r3, r3, #32
9000b412:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b414:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b416:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b418:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b41c:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b420:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b422:	d103      	bne.n	9000b42c <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b424:	68e3      	ldr	r3, [r4, #12]
9000b426:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b42a:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000b42c:	2000      	movs	r0, #0
}
9000b42e:	bc70      	pop	{r4, r5, r6}
9000b430:	4770      	bx	lr
    return HAL_ERROR;
9000b432:	2001      	movs	r0, #1
}
9000b434:	4770      	bx	lr
9000b436:	bf00      	nop

9000b438 <HAL_MDMA_Abort>:
{
9000b438:	b538      	push	{r3, r4, r5, lr}
9000b43a:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000b43c:	f7fc fcfc 	bl	90007e38 <HAL_GetTick>
  if(hmdma == NULL)
9000b440:	b334      	cbz	r4, 9000b490 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b442:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000b446:	2b02      	cmp	r3, #2
9000b448:	d11d      	bne.n	9000b486 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b44a:	6822      	ldr	r2, [r4, #0]
9000b44c:	4605      	mov	r5, r0
9000b44e:	68d3      	ldr	r3, [r2, #12]
9000b450:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000b454:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000b456:	68d3      	ldr	r3, [r2, #12]
9000b458:	f023 0301 	bic.w	r3, r3, #1
9000b45c:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b45e:	e005      	b.n	9000b46c <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b460:	f7fc fcea 	bl	90007e38 <HAL_GetTick>
9000b464:	1b43      	subs	r3, r0, r5
9000b466:	2b05      	cmp	r3, #5
9000b468:	d814      	bhi.n	9000b494 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b46a:	6822      	ldr	r2, [r4, #0]
9000b46c:	68d3      	ldr	r3, [r2, #12]
9000b46e:	f013 0301 	ands.w	r3, r3, #1
9000b472:	d1f5      	bne.n	9000b460 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b474:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000b476:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b478:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000b47a:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000b47c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000b480:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000b484:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b486:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000b488:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b48a:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000b48c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000b490:	2001      	movs	r0, #1
}
9000b492:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b494:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000b496:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b498:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b49a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000b49e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b4a2:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b4a4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000b4a8:	e7f2      	b.n	9000b490 <HAL_MDMA_Abort+0x58>
9000b4aa:	bf00      	nop

9000b4ac <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b4ac:	4603      	mov	r3, r0
9000b4ae:	b128      	cbz	r0, 9000b4bc <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b4b0:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000b4b4:	2a02      	cmp	r2, #2
9000b4b6:	d003      	beq.n	9000b4c0 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b4b8:	2280      	movs	r2, #128	@ 0x80
9000b4ba:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000b4bc:	2001      	movs	r0, #1
9000b4be:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b4c0:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b4c2:	2104      	movs	r1, #4
  return HAL_OK;
9000b4c4:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b4c6:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b4ca:	68d3      	ldr	r3, [r2, #12]
9000b4cc:	f023 0301 	bic.w	r3, r3, #1
9000b4d0:	60d3      	str	r3, [r2, #12]
}
9000b4d2:	4770      	bx	lr

9000b4d4 <HAL_MDMA_IRQHandler>:
{
9000b4d4:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b4d6:	2300      	movs	r3, #0
{
9000b4d8:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b4da:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000b4de:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b4e0:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b4e2:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b4e4:	4b57      	ldr	r3, [pc, #348]	@ (9000b644 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b4e6:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b4e8:	4a57      	ldr	r2, [pc, #348]	@ (9000b648 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b4ea:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b4ec:	6823      	ldr	r3, [r4, #0]
9000b4ee:	441a      	add	r2, r3
9000b4f0:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b4f4:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b4f8:	4202      	tst	r2, r0
9000b4fa:	f000 80a0 	beq.w	9000b63e <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b4fe:	681a      	ldr	r2, [r3, #0]
9000b500:	07d1      	lsls	r1, r2, #31
9000b502:	d529      	bpl.n	9000b558 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b504:	68da      	ldr	r2, [r3, #12]
9000b506:	0792      	lsls	r2, r2, #30
9000b508:	d526      	bpl.n	9000b558 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b50a:	68da      	ldr	r2, [r3, #12]
9000b50c:	f022 0202 	bic.w	r2, r2, #2
9000b510:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b512:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b514:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b516:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b518:	bf54      	ite	pl
9000b51a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b51e:	f041 0102 	orrmi.w	r1, r1, #2
9000b522:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b524:	0591      	lsls	r1, r2, #22
9000b526:	d503      	bpl.n	9000b530 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b528:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b52a:	f041 0104 	orr.w	r1, r1, #4
9000b52e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b530:	05d0      	lsls	r0, r2, #23
9000b532:	d503      	bpl.n	9000b53c <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b534:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b536:	f041 0108 	orr.w	r1, r1, #8
9000b53a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b53c:	0551      	lsls	r1, r2, #21
9000b53e:	d503      	bpl.n	9000b548 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b540:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b542:	f041 0110 	orr.w	r1, r1, #16
9000b546:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b548:	0510      	lsls	r0, r2, #20
9000b54a:	d503      	bpl.n	9000b554 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b54c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000b54e:	f042 0220 	orr.w	r2, r2, #32
9000b552:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b554:	2201      	movs	r2, #1
9000b556:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b558:	681a      	ldr	r2, [r3, #0]
9000b55a:	06d1      	lsls	r1, r2, #27
9000b55c:	d509      	bpl.n	9000b572 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b55e:	68da      	ldr	r2, [r3, #12]
9000b560:	0692      	lsls	r2, r2, #26
9000b562:	d506      	bpl.n	9000b572 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b564:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000b566:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b568:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000b56a:	b112      	cbz	r2, 9000b572 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000b56c:	4620      	mov	r0, r4
9000b56e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000b570:	6823      	ldr	r3, [r4, #0]
9000b572:	681a      	ldr	r2, [r3, #0]
9000b574:	0710      	lsls	r0, r2, #28
9000b576:	d509      	bpl.n	9000b58c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000b578:	68da      	ldr	r2, [r3, #12]
9000b57a:	06d1      	lsls	r1, r2, #27
9000b57c:	d506      	bpl.n	9000b58c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b57e:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b580:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b582:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b584:	b112      	cbz	r2, 9000b58c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b586:	4620      	mov	r0, r4
9000b588:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b58a:	6823      	ldr	r3, [r4, #0]
9000b58c:	681a      	ldr	r2, [r3, #0]
9000b58e:	0752      	lsls	r2, r2, #29
9000b590:	d509      	bpl.n	9000b5a6 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b592:	68da      	ldr	r2, [r3, #12]
9000b594:	0710      	lsls	r0, r2, #28
9000b596:	d506      	bpl.n	9000b5a6 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b598:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b59a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b59c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b59e:	b112      	cbz	r2, 9000b5a6 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b5a0:	4620      	mov	r0, r4
9000b5a2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b5a4:	6823      	ldr	r3, [r4, #0]
9000b5a6:	681a      	ldr	r2, [r3, #0]
9000b5a8:	0791      	lsls	r1, r2, #30
9000b5aa:	d516      	bpl.n	9000b5da <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b5ac:	68da      	ldr	r2, [r3, #12]
9000b5ae:	0752      	lsls	r2, r2, #29
9000b5b0:	d513      	bpl.n	9000b5da <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b5b2:	68da      	ldr	r2, [r3, #12]
9000b5b4:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b5b8:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b5ba:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b5be:	2a04      	cmp	r2, #4
9000b5c0:	d034      	beq.n	9000b62c <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b5c2:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b5c4:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b5c6:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b5c8:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b5ca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b5cc:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b5d0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b5d4:	b10b      	cbz	r3, 9000b5da <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b5d6:	4620      	mov	r0, r4
9000b5d8:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b5da:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b5dc:	2b00      	cmp	r3, #0
9000b5de:	d02e      	beq.n	9000b63e <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b5e0:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b5e2:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b5e4:	4b19      	ldr	r3, [pc, #100]	@ (9000b64c <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b5e6:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b5ea:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b5ee:	68cb      	ldr	r3, [r1, #12]
9000b5f0:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b5f4:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b5f6:	60cb      	str	r3, [r1, #12]
9000b5f8:	e002      	b.n	9000b600 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b5fa:	68cb      	ldr	r3, [r1, #12]
9000b5fc:	07d8      	lsls	r0, r3, #31
9000b5fe:	d504      	bpl.n	9000b60a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b600:	9b01      	ldr	r3, [sp, #4]
9000b602:	3301      	adds	r3, #1
9000b604:	4293      	cmp	r3, r2
9000b606:	9301      	str	r3, [sp, #4]
9000b608:	d9f7      	bls.n	9000b5fa <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b60a:	2300      	movs	r3, #0
9000b60c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b610:	68cb      	ldr	r3, [r1, #12]
9000b612:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b614:	bf4c      	ite	mi
9000b616:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b618:	2301      	movpl	r3, #1
9000b61a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b61e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b620:	b16b      	cbz	r3, 9000b63e <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b622:	4620      	mov	r0, r4
}
9000b624:	b003      	add	sp, #12
9000b626:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b62a:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b62c:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b62e:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b630:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b632:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b636:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b63a:	2b00      	cmp	r3, #0
9000b63c:	d1f1      	bne.n	9000b622 <HAL_MDMA_IRQHandler+0x14e>
}
9000b63e:	b003      	add	sp, #12
9000b640:	bd30      	pop	{r4, r5, pc}
9000b642:	bf00      	nop
9000b644:	24000078 	.word	0x24000078
9000b648:	adffffc0 	.word	0xadffffc0
9000b64c:	1b4e81b5 	.word	0x1b4e81b5

9000b650 <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000b650:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b652:	4c10      	ldr	r4, [pc, #64]	@ (9000b694 <HAL_PWREx_ConfigSupply+0x44>)
9000b654:	68e3      	ldr	r3, [r4, #12]
9000b656:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b65a:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b65c:	d105      	bne.n	9000b66a <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b65e:	f003 0307 	and.w	r3, r3, #7
9000b662:	1a18      	subs	r0, r3, r0
9000b664:	bf18      	it	ne
9000b666:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000b668:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000b66a:	f023 0307 	bic.w	r3, r3, #7
9000b66e:	4303      	orrs	r3, r0
9000b670:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000b672:	f7fc fbe1 	bl	90007e38 <HAL_GetTick>
9000b676:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b678:	e005      	b.n	9000b686 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000b67a:	f7fc fbdd 	bl	90007e38 <HAL_GetTick>
9000b67e:	1b40      	subs	r0, r0, r5
9000b680:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000b684:	d804      	bhi.n	9000b690 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b686:	6863      	ldr	r3, [r4, #4]
9000b688:	049b      	lsls	r3, r3, #18
9000b68a:	d5f6      	bpl.n	9000b67a <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000b68c:	2000      	movs	r0, #0
}
9000b68e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000b690:	2001      	movs	r0, #1
}
9000b692:	bd38      	pop	{r3, r4, r5, pc}
9000b694:	58024800 	.word	0x58024800

9000b698 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b698:	4b33      	ldr	r3, [pc, #204]	@ (9000b768 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000b69a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b69c:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b69e:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b6a0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000b6a2:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b6a6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b6a8:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b6ac:	d036      	beq.n	9000b71c <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b6ae:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b6b2:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b6b6:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b6ba:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b6be:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000b6c2:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b6c4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b6c8:	ee06 2a90 	vmov	s13, r2
9000b6cc:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000b6d0:	d002      	beq.n	9000b6d8 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000b6d2:	2902      	cmp	r1, #2
9000b6d4:	d042      	beq.n	9000b75c <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000b6d6:	b319      	cbz	r1, 9000b720 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b6d8:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000b76c <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000b6dc:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000b6e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b6e2:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b6e6:	ee07 3a90 	vmov	s15, r3
9000b6ea:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b6ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b6f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000b6f6:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000b6fa:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b6fe:	4b1a      	ldr	r3, [pc, #104]	@ (9000b768 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000b700:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b702:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b706:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b708:	ee07 3a10 	vmov	s14, r3
9000b70c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000b710:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000b714:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000b718:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000b71c:	bc30      	pop	{r4, r5}
9000b71e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b720:	681a      	ldr	r2, [r3, #0]
9000b722:	0692      	lsls	r2, r2, #26
9000b724:	d51d      	bpl.n	9000b762 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b726:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b728:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b72c:	4a10      	ldr	r2, [pc, #64]	@ (9000b770 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b72e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b730:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b734:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b738:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b73a:	ee07 3a90 	vmov	s15, r3
9000b73e:	ee06 2a10 	vmov	s12, r2
9000b742:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b746:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b74a:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000b74e:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000b752:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000b756:	ee67 7a87 	vmul.f32	s15, s15, s14
9000b75a:	e7d0      	b.n	9000b6fe <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b75c:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b774 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000b760:	e7bc      	b.n	9000b6dc <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b762:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b778 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000b766:	e7b9      	b.n	9000b6dc <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000b768:	58024400 	.word	0x58024400
9000b76c:	4a742400 	.word	0x4a742400
9000b770:	03d09000 	.word	0x03d09000
9000b774:	4bbebc20 	.word	0x4bbebc20
9000b778:	4c742400 	.word	0x4c742400

9000b77c <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000b77c:	2800      	cmp	r0, #0
9000b77e:	f000 82e7 	beq.w	9000bd50 <HAL_RCC_OscConfig+0x5d4>
{
9000b782:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000b784:	6803      	ldr	r3, [r0, #0]
9000b786:	4604      	mov	r4, r0
9000b788:	07d9      	lsls	r1, r3, #31
9000b78a:	d52e      	bpl.n	9000b7ea <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b78c:	4997      	ldr	r1, [pc, #604]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b78e:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b790:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b792:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b796:	2a10      	cmp	r2, #16
9000b798:	f000 80ee 	beq.w	9000b978 <HAL_RCC_OscConfig+0x1fc>
9000b79c:	2a18      	cmp	r2, #24
9000b79e:	f000 80e6 	beq.w	9000b96e <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b7a2:	6863      	ldr	r3, [r4, #4]
9000b7a4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000b7a8:	f000 8111 	beq.w	9000b9ce <HAL_RCC_OscConfig+0x252>
9000b7ac:	2b00      	cmp	r3, #0
9000b7ae:	f000 8167 	beq.w	9000ba80 <HAL_RCC_OscConfig+0x304>
9000b7b2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000b7b6:	4b8d      	ldr	r3, [pc, #564]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b7b8:	681a      	ldr	r2, [r3, #0]
9000b7ba:	f000 8288 	beq.w	9000bcce <HAL_RCC_OscConfig+0x552>
9000b7be:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000b7c2:	601a      	str	r2, [r3, #0]
9000b7c4:	681a      	ldr	r2, [r3, #0]
9000b7c6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000b7ca:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000b7cc:	f7fc fb34 	bl	90007e38 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b7d0:	4e86      	ldr	r6, [pc, #536]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000b7d2:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b7d4:	e005      	b.n	9000b7e2 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b7d6:	f7fc fb2f 	bl	90007e38 <HAL_GetTick>
9000b7da:	1b40      	subs	r0, r0, r5
9000b7dc:	2864      	cmp	r0, #100	@ 0x64
9000b7de:	f200 814d 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b7e2:	6833      	ldr	r3, [r6, #0]
9000b7e4:	039b      	lsls	r3, r3, #14
9000b7e6:	d5f6      	bpl.n	9000b7d6 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000b7e8:	6823      	ldr	r3, [r4, #0]
9000b7ea:	079d      	lsls	r5, r3, #30
9000b7ec:	d470      	bmi.n	9000b8d0 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b7ee:	06d9      	lsls	r1, r3, #27
9000b7f0:	d533      	bpl.n	9000b85a <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b7f2:	4a7e      	ldr	r2, [pc, #504]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b7f4:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b7f6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b7f8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b7fc:	2b08      	cmp	r3, #8
9000b7fe:	f000 80cb 	beq.w	9000b998 <HAL_RCC_OscConfig+0x21c>
9000b802:	2b18      	cmp	r3, #24
9000b804:	f000 80c3 	beq.w	9000b98e <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b808:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000b80a:	4d78      	ldr	r5, [pc, #480]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b80c:	2b00      	cmp	r3, #0
9000b80e:	f000 816f 	beq.w	9000baf0 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000b812:	682b      	ldr	r3, [r5, #0]
9000b814:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000b818:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b81a:	f7fc fb0d 	bl	90007e38 <HAL_GetTick>
9000b81e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b820:	e005      	b.n	9000b82e <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b822:	f7fc fb09 	bl	90007e38 <HAL_GetTick>
9000b826:	1b80      	subs	r0, r0, r6
9000b828:	2802      	cmp	r0, #2
9000b82a:	f200 8127 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b82e:	682b      	ldr	r3, [r5, #0]
9000b830:	05db      	lsls	r3, r3, #23
9000b832:	d5f6      	bpl.n	9000b822 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b834:	f7fc fb18 	bl	90007e68 <HAL_GetREVID>
9000b838:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b83c:	4298      	cmp	r0, r3
9000b83e:	f200 8267 	bhi.w	9000bd10 <HAL_RCC_OscConfig+0x594>
9000b842:	6a22      	ldr	r2, [r4, #32]
9000b844:	686b      	ldr	r3, [r5, #4]
9000b846:	2a20      	cmp	r2, #32
9000b848:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b84c:	bf0c      	ite	eq
9000b84e:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000b852:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000b856:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b858:	6823      	ldr	r3, [r4, #0]
9000b85a:	071d      	lsls	r5, r3, #28
9000b85c:	d516      	bpl.n	9000b88c <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b85e:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000b860:	4d62      	ldr	r5, [pc, #392]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b862:	2b00      	cmp	r3, #0
9000b864:	f000 8122 	beq.w	9000baac <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000b868:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b86a:	f043 0301 	orr.w	r3, r3, #1
9000b86e:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b870:	f7fc fae2 	bl	90007e38 <HAL_GetTick>
9000b874:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b876:	e005      	b.n	9000b884 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b878:	f7fc fade 	bl	90007e38 <HAL_GetTick>
9000b87c:	1b80      	subs	r0, r0, r6
9000b87e:	2802      	cmp	r0, #2
9000b880:	f200 80fc 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b884:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b886:	0798      	lsls	r0, r3, #30
9000b888:	d5f6      	bpl.n	9000b878 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000b88a:	6823      	ldr	r3, [r4, #0]
9000b88c:	069a      	lsls	r2, r3, #26
9000b88e:	d516      	bpl.n	9000b8be <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b890:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000b892:	4d56      	ldr	r5, [pc, #344]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b894:	2b00      	cmp	r3, #0
9000b896:	f000 811a 	beq.w	9000bace <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000b89a:	682b      	ldr	r3, [r5, #0]
9000b89c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000b8a0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b8a2:	f7fc fac9 	bl	90007e38 <HAL_GetTick>
9000b8a6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b8a8:	e005      	b.n	9000b8b6 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b8aa:	f7fc fac5 	bl	90007e38 <HAL_GetTick>
9000b8ae:	1b80      	subs	r0, r0, r6
9000b8b0:	2802      	cmp	r0, #2
9000b8b2:	f200 80e3 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b8b6:	682b      	ldr	r3, [r5, #0]
9000b8b8:	049f      	lsls	r7, r3, #18
9000b8ba:	d5f6      	bpl.n	9000b8aa <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000b8bc:	6823      	ldr	r3, [r4, #0]
9000b8be:	0759      	lsls	r1, r3, #29
9000b8c0:	f100 808b 	bmi.w	9000b9da <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000b8c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b8c6:	2b00      	cmp	r3, #0
9000b8c8:	f040 80bf 	bne.w	9000ba4a <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000b8cc:	2000      	movs	r0, #0
}
9000b8ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b8d0:	4a46      	ldr	r2, [pc, #280]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b8d2:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b8d4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b8d6:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000b8da:	d12d      	bne.n	9000b938 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b8dc:	4b43      	ldr	r3, [pc, #268]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b8de:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b8e0:	681b      	ldr	r3, [r3, #0]
9000b8e2:	0759      	lsls	r1, r3, #29
9000b8e4:	d501      	bpl.n	9000b8ea <HAL_RCC_OscConfig+0x16e>
9000b8e6:	2a00      	cmp	r2, #0
9000b8e8:	d04f      	beq.n	9000b98a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b8ea:	4d40      	ldr	r5, [pc, #256]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b8ec:	682b      	ldr	r3, [r5, #0]
9000b8ee:	f023 0319 	bic.w	r3, r3, #25
9000b8f2:	4313      	orrs	r3, r2
9000b8f4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b8f6:	f7fc fa9f 	bl	90007e38 <HAL_GetTick>
9000b8fa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b8fc:	e005      	b.n	9000b90a <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b8fe:	f7fc fa9b 	bl	90007e38 <HAL_GetTick>
9000b902:	1b80      	subs	r0, r0, r6
9000b904:	2802      	cmp	r0, #2
9000b906:	f200 80b9 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b90a:	682b      	ldr	r3, [r5, #0]
9000b90c:	075b      	lsls	r3, r3, #29
9000b90e:	d5f6      	bpl.n	9000b8fe <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b910:	f7fc faaa 	bl	90007e68 <HAL_GetREVID>
9000b914:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b918:	4298      	cmp	r0, r3
9000b91a:	f200 8110 	bhi.w	9000bb3e <HAL_RCC_OscConfig+0x3c2>
9000b91e:	6922      	ldr	r2, [r4, #16]
9000b920:	686b      	ldr	r3, [r5, #4]
9000b922:	2a40      	cmp	r2, #64	@ 0x40
9000b924:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b928:	bf0c      	ite	eq
9000b92a:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000b92e:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000b932:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b934:	6823      	ldr	r3, [r4, #0]
9000b936:	e75a      	b.n	9000b7ee <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b938:	2b18      	cmp	r3, #24
9000b93a:	f000 80fc 	beq.w	9000bb36 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b93e:	4d2b      	ldr	r5, [pc, #172]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b940:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b942:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b944:	2a00      	cmp	r2, #0
9000b946:	f000 80e5 	beq.w	9000bb14 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b94a:	f023 0319 	bic.w	r3, r3, #25
9000b94e:	4313      	orrs	r3, r2
9000b950:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b952:	f7fc fa71 	bl	90007e38 <HAL_GetTick>
9000b956:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b958:	e005      	b.n	9000b966 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b95a:	f7fc fa6d 	bl	90007e38 <HAL_GetTick>
9000b95e:	1b80      	subs	r0, r0, r6
9000b960:	2802      	cmp	r0, #2
9000b962:	f200 808b 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b966:	682b      	ldr	r3, [r5, #0]
9000b968:	075f      	lsls	r7, r3, #29
9000b96a:	d5f6      	bpl.n	9000b95a <HAL_RCC_OscConfig+0x1de>
9000b96c:	e7d0      	b.n	9000b910 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b96e:	f001 0103 	and.w	r1, r1, #3
9000b972:	2902      	cmp	r1, #2
9000b974:	f47f af15 	bne.w	9000b7a2 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000b978:	4a1c      	ldr	r2, [pc, #112]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b97a:	6812      	ldr	r2, [r2, #0]
9000b97c:	0392      	lsls	r2, r2, #14
9000b97e:	f57f af34 	bpl.w	9000b7ea <HAL_RCC_OscConfig+0x6e>
9000b982:	6862      	ldr	r2, [r4, #4]
9000b984:	2a00      	cmp	r2, #0
9000b986:	f47f af30 	bne.w	9000b7ea <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000b98a:	2001      	movs	r0, #1
}
9000b98c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b98e:	f002 0203 	and.w	r2, r2, #3
9000b992:	2a01      	cmp	r2, #1
9000b994:	f47f af38 	bne.w	9000b808 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000b998:	4b14      	ldr	r3, [pc, #80]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b99a:	681b      	ldr	r3, [r3, #0]
9000b99c:	05da      	lsls	r2, r3, #23
9000b99e:	d502      	bpl.n	9000b9a6 <HAL_RCC_OscConfig+0x22a>
9000b9a0:	69e3      	ldr	r3, [r4, #28]
9000b9a2:	2b80      	cmp	r3, #128	@ 0x80
9000b9a4:	d1f1      	bne.n	9000b98a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b9a6:	f7fc fa5f 	bl	90007e68 <HAL_GetREVID>
9000b9aa:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b9ae:	4298      	cmp	r0, r3
9000b9b0:	f200 80ce 	bhi.w	9000bb50 <HAL_RCC_OscConfig+0x3d4>
9000b9b4:	6a22      	ldr	r2, [r4, #32]
9000b9b6:	2a20      	cmp	r2, #32
9000b9b8:	f000 81b9 	beq.w	9000bd2e <HAL_RCC_OscConfig+0x5b2>
9000b9bc:	490b      	ldr	r1, [pc, #44]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b9be:	684b      	ldr	r3, [r1, #4]
9000b9c0:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b9c4:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b9c8:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b9ca:	6823      	ldr	r3, [r4, #0]
9000b9cc:	e745      	b.n	9000b85a <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b9ce:	4a07      	ldr	r2, [pc, #28]	@ (9000b9ec <HAL_RCC_OscConfig+0x270>)
9000b9d0:	6813      	ldr	r3, [r2, #0]
9000b9d2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b9d6:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b9d8:	e6f8      	b.n	9000b7cc <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b9da:	4d05      	ldr	r5, [pc, #20]	@ (9000b9f0 <HAL_RCC_OscConfig+0x274>)
9000b9dc:	682b      	ldr	r3, [r5, #0]
9000b9de:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b9e2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b9e4:	f7fc fa28 	bl	90007e38 <HAL_GetTick>
9000b9e8:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b9ea:	e008      	b.n	9000b9fe <HAL_RCC_OscConfig+0x282>
9000b9ec:	58024400 	.word	0x58024400
9000b9f0:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b9f4:	f7fc fa20 	bl	90007e38 <HAL_GetTick>
9000b9f8:	1b80      	subs	r0, r0, r6
9000b9fa:	2864      	cmp	r0, #100	@ 0x64
9000b9fc:	d83e      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b9fe:	682b      	ldr	r3, [r5, #0]
9000ba00:	05da      	lsls	r2, r3, #23
9000ba02:	d5f7      	bpl.n	9000b9f4 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ba04:	68a3      	ldr	r3, [r4, #8]
9000ba06:	2b01      	cmp	r3, #1
9000ba08:	f000 818b 	beq.w	9000bd22 <HAL_RCC_OscConfig+0x5a6>
9000ba0c:	2b00      	cmp	r3, #0
9000ba0e:	f000 8166 	beq.w	9000bcde <HAL_RCC_OscConfig+0x562>
9000ba12:	2b05      	cmp	r3, #5
9000ba14:	4b85      	ldr	r3, [pc, #532]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
9000ba16:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ba18:	f000 8192 	beq.w	9000bd40 <HAL_RCC_OscConfig+0x5c4>
9000ba1c:	f022 0201 	bic.w	r2, r2, #1
9000ba20:	671a      	str	r2, [r3, #112]	@ 0x70
9000ba22:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ba24:	f022 0204 	bic.w	r2, r2, #4
9000ba28:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ba2a:	f7fc fa05 	bl	90007e38 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ba2e:	4e7f      	ldr	r6, [pc, #508]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ba30:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000ba34:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ba36:	e004      	b.n	9000ba42 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ba38:	f7fc f9fe 	bl	90007e38 <HAL_GetTick>
9000ba3c:	1b40      	subs	r0, r0, r5
9000ba3e:	42b8      	cmp	r0, r7
9000ba40:	d81c      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ba42:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000ba44:	079b      	lsls	r3, r3, #30
9000ba46:	d5f7      	bpl.n	9000ba38 <HAL_RCC_OscConfig+0x2bc>
9000ba48:	e73c      	b.n	9000b8c4 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000ba4a:	4d78      	ldr	r5, [pc, #480]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
9000ba4c:	692a      	ldr	r2, [r5, #16]
9000ba4e:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000ba52:	2a18      	cmp	r2, #24
9000ba54:	f000 80ee 	beq.w	9000bc34 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ba58:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000ba5a:	682b      	ldr	r3, [r5, #0]
9000ba5c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000ba60:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ba62:	d07f      	beq.n	9000bb64 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000ba64:	f7fc f9e8 	bl	90007e38 <HAL_GetTick>
9000ba68:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ba6a:	682b      	ldr	r3, [r5, #0]
9000ba6c:	019b      	lsls	r3, r3, #6
9000ba6e:	f57f af2d 	bpl.w	9000b8cc <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ba72:	f7fc f9e1 	bl	90007e38 <HAL_GetTick>
9000ba76:	1b00      	subs	r0, r0, r4
9000ba78:	2802      	cmp	r0, #2
9000ba7a:	d9f6      	bls.n	9000ba6a <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000ba7c:	2003      	movs	r0, #3
}
9000ba7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ba80:	4d6a      	ldr	r5, [pc, #424]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
9000ba82:	682b      	ldr	r3, [r5, #0]
9000ba84:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000ba88:	602b      	str	r3, [r5, #0]
9000ba8a:	682b      	ldr	r3, [r5, #0]
9000ba8c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000ba90:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ba92:	f7fc f9d1 	bl	90007e38 <HAL_GetTick>
9000ba96:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000ba98:	e004      	b.n	9000baa4 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ba9a:	f7fc f9cd 	bl	90007e38 <HAL_GetTick>
9000ba9e:	1b80      	subs	r0, r0, r6
9000baa0:	2864      	cmp	r0, #100	@ 0x64
9000baa2:	d8eb      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000baa4:	682b      	ldr	r3, [r5, #0]
9000baa6:	039f      	lsls	r7, r3, #14
9000baa8:	d4f7      	bmi.n	9000ba9a <HAL_RCC_OscConfig+0x31e>
9000baaa:	e69d      	b.n	9000b7e8 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000baac:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000baae:	f023 0301 	bic.w	r3, r3, #1
9000bab2:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000bab4:	f7fc f9c0 	bl	90007e38 <HAL_GetTick>
9000bab8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000baba:	e004      	b.n	9000bac6 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000babc:	f7fc f9bc 	bl	90007e38 <HAL_GetTick>
9000bac0:	1b80      	subs	r0, r0, r6
9000bac2:	2802      	cmp	r0, #2
9000bac4:	d8da      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000bac6:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000bac8:	0799      	lsls	r1, r3, #30
9000baca:	d4f7      	bmi.n	9000babc <HAL_RCC_OscConfig+0x340>
9000bacc:	e6dd      	b.n	9000b88a <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000bace:	682b      	ldr	r3, [r5, #0]
9000bad0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000bad4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bad6:	f7fc f9af 	bl	90007e38 <HAL_GetTick>
9000bada:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000badc:	e004      	b.n	9000bae8 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000bade:	f7fc f9ab 	bl	90007e38 <HAL_GetTick>
9000bae2:	1b80      	subs	r0, r0, r6
9000bae4:	2802      	cmp	r0, #2
9000bae6:	d8c9      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000bae8:	682b      	ldr	r3, [r5, #0]
9000baea:	0498      	lsls	r0, r3, #18
9000baec:	d4f7      	bmi.n	9000bade <HAL_RCC_OscConfig+0x362>
9000baee:	e6e5      	b.n	9000b8bc <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000baf0:	682b      	ldr	r3, [r5, #0]
9000baf2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000baf6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000baf8:	f7fc f99e 	bl	90007e38 <HAL_GetTick>
9000bafc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000bafe:	e004      	b.n	9000bb0a <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000bb00:	f7fc f99a 	bl	90007e38 <HAL_GetTick>
9000bb04:	1b80      	subs	r0, r0, r6
9000bb06:	2802      	cmp	r0, #2
9000bb08:	d8b8      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000bb0a:	682b      	ldr	r3, [r5, #0]
9000bb0c:	05df      	lsls	r7, r3, #23
9000bb0e:	d4f7      	bmi.n	9000bb00 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bb10:	6823      	ldr	r3, [r4, #0]
9000bb12:	e6a2      	b.n	9000b85a <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000bb14:	f023 0301 	bic.w	r3, r3, #1
9000bb18:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bb1a:	f7fc f98d 	bl	90007e38 <HAL_GetTick>
9000bb1e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000bb20:	e004      	b.n	9000bb2c <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bb22:	f7fc f989 	bl	90007e38 <HAL_GetTick>
9000bb26:	1b80      	subs	r0, r0, r6
9000bb28:	2802      	cmp	r0, #2
9000bb2a:	d8a7      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000bb2c:	682b      	ldr	r3, [r5, #0]
9000bb2e:	0758      	lsls	r0, r3, #29
9000bb30:	d4f7      	bmi.n	9000bb22 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bb32:	6823      	ldr	r3, [r4, #0]
9000bb34:	e65b      	b.n	9000b7ee <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bb36:	0790      	lsls	r0, r2, #30
9000bb38:	f47f af01 	bne.w	9000b93e <HAL_RCC_OscConfig+0x1c2>
9000bb3c:	e6ce      	b.n	9000b8dc <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000bb3e:	686b      	ldr	r3, [r5, #4]
9000bb40:	6922      	ldr	r2, [r4, #16]
9000bb42:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000bb46:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000bb4a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bb4c:	6823      	ldr	r3, [r4, #0]
9000bb4e:	e64e      	b.n	9000b7ee <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bb50:	4a36      	ldr	r2, [pc, #216]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
9000bb52:	6a21      	ldr	r1, [r4, #32]
9000bb54:	68d3      	ldr	r3, [r2, #12]
9000bb56:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000bb5a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000bb5e:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bb60:	6823      	ldr	r3, [r4, #0]
9000bb62:	e67a      	b.n	9000b85a <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000bb64:	f7fc f968 	bl	90007e38 <HAL_GetTick>
9000bb68:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bb6a:	e004      	b.n	9000bb76 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bb6c:	f7fc f964 	bl	90007e38 <HAL_GetTick>
9000bb70:	1b80      	subs	r0, r0, r6
9000bb72:	2802      	cmp	r0, #2
9000bb74:	d882      	bhi.n	9000ba7c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bb76:	682b      	ldr	r3, [r5, #0]
9000bb78:	0199      	lsls	r1, r3, #6
9000bb7a:	d4f7      	bmi.n	9000bb6c <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000bb7c:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000bb7e:	4b2c      	ldr	r3, [pc, #176]	@ (9000bc30 <HAL_RCC_OscConfig+0x4b4>)
9000bb80:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000bb82:	400b      	ands	r3, r1
9000bb84:	4313      	orrs	r3, r2
9000bb86:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000bb88:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000bb8c:	62ab      	str	r3, [r5, #40]	@ 0x28
9000bb8e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000bb90:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000bb94:	3901      	subs	r1, #1
9000bb96:	3b01      	subs	r3, #1
9000bb98:	3a01      	subs	r2, #1
9000bb9a:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000bb9e:	025b      	lsls	r3, r3, #9
9000bba0:	0412      	lsls	r2, r2, #16
9000bba2:	b29b      	uxth	r3, r3
9000bba4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000bba8:	4313      	orrs	r3, r2
9000bbaa:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000bbac:	3a01      	subs	r2, #1
9000bbae:	430b      	orrs	r3, r1
9000bbb0:	0612      	lsls	r2, r2, #24
9000bbb2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000bbb6:	4313      	orrs	r3, r2
9000bbb8:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000bbba:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbbc:	f023 0301 	bic.w	r3, r3, #1
9000bbc0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000bbc2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000bbc4:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000bbc6:	f36f 03cf 	bfc	r3, #3, #13
9000bbca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000bbce:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000bbd0:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbd2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000bbd4:	f023 030c 	bic.w	r3, r3, #12
9000bbd8:	4313      	orrs	r3, r2
9000bbda:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000bbdc:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbde:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000bbe0:	f023 0302 	bic.w	r3, r3, #2
9000bbe4:	4313      	orrs	r3, r2
9000bbe6:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000bbe8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbea:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000bbee:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bbf0:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbf2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000bbf6:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000bbf8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bbfa:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000bbfe:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000bc00:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000bc02:	f043 0301 	orr.w	r3, r3, #1
9000bc06:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000bc08:	682b      	ldr	r3, [r5, #0]
9000bc0a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000bc0e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bc10:	f7fc f912 	bl	90007e38 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000bc14:	4d05      	ldr	r5, [pc, #20]	@ (9000bc2c <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000bc16:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000bc18:	682b      	ldr	r3, [r5, #0]
9000bc1a:	019a      	lsls	r2, r3, #6
9000bc1c:	f53f ae56 	bmi.w	9000b8cc <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bc20:	f7fc f90a 	bl	90007e38 <HAL_GetTick>
9000bc24:	1b00      	subs	r0, r0, r4
9000bc26:	2802      	cmp	r0, #2
9000bc28:	d9f6      	bls.n	9000bc18 <HAL_RCC_OscConfig+0x49c>
9000bc2a:	e727      	b.n	9000ba7c <HAL_RCC_OscConfig+0x300>
9000bc2c:	58024400 	.word	0x58024400
9000bc30:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bc34:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000bc36:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000bc38:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bc3a:	f43f aea6 	beq.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000bc3e:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000bc42:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000bc44:	428b      	cmp	r3, r1
9000bc46:	f47f aea0 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000bc4a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000bc4e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bc50:	429a      	cmp	r2, r3
9000bc52:	f47f ae9a 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000bc56:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000bc58:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000bc5c:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000bc5e:	429a      	cmp	r2, r3
9000bc60:	f47f ae93 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000bc64:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000bc66:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000bc6a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000bc6c:	429a      	cmp	r2, r3
9000bc6e:	f47f ae8c 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000bc72:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000bc74:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000bc78:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000bc7a:	429a      	cmp	r2, r3
9000bc7c:	f47f ae85 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000bc80:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000bc82:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000bc86:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000bc88:	4298      	cmp	r0, r3
9000bc8a:	f47f ae7e 	bne.w	9000b98a <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000bc8e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bc90:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000bc92:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bc96:	429a      	cmp	r2, r3
9000bc98:	f43f ae18 	beq.w	9000b8cc <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000bc9c:	4a2d      	ldr	r2, [pc, #180]	@ (9000bd54 <HAL_RCC_OscConfig+0x5d8>)
9000bc9e:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000bca0:	f023 0301 	bic.w	r3, r3, #1
9000bca4:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000bca6:	f7fc f8c7 	bl	90007e38 <HAL_GetTick>
9000bcaa:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000bcac:	f7fc f8c4 	bl	90007e38 <HAL_GetTick>
9000bcb0:	42a8      	cmp	r0, r5
9000bcb2:	d0fb      	beq.n	9000bcac <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000bcb4:	4a27      	ldr	r2, [pc, #156]	@ (9000bd54 <HAL_RCC_OscConfig+0x5d8>)
9000bcb6:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000bcb8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000bcba:	f36f 03cf 	bfc	r3, #3, #13
9000bcbe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000bcc2:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000bcc4:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000bcc6:	f043 0301 	orr.w	r3, r3, #1
9000bcca:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000bccc:	e5fe      	b.n	9000b8cc <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bcce:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000bcd2:	601a      	str	r2, [r3, #0]
9000bcd4:	681a      	ldr	r2, [r3, #0]
9000bcd6:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000bcda:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000bcdc:	e576      	b.n	9000b7cc <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bcde:	4d1d      	ldr	r5, [pc, #116]	@ (9000bd54 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bce0:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bce4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bce6:	f023 0301 	bic.w	r3, r3, #1
9000bcea:	672b      	str	r3, [r5, #112]	@ 0x70
9000bcec:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bcee:	f023 0304 	bic.w	r3, r3, #4
9000bcf2:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000bcf4:	f7fc f8a0 	bl	90007e38 <HAL_GetTick>
9000bcf8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000bcfa:	e005      	b.n	9000bd08 <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bcfc:	f7fc f89c 	bl	90007e38 <HAL_GetTick>
9000bd00:	1b80      	subs	r0, r0, r6
9000bd02:	42b8      	cmp	r0, r7
9000bd04:	f63f aeba 	bhi.w	9000ba7c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000bd08:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bd0a:	0798      	lsls	r0, r3, #30
9000bd0c:	d4f6      	bmi.n	9000bcfc <HAL_RCC_OscConfig+0x580>
9000bd0e:	e5d9      	b.n	9000b8c4 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bd10:	68eb      	ldr	r3, [r5, #12]
9000bd12:	6a22      	ldr	r2, [r4, #32]
9000bd14:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000bd18:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000bd1c:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bd1e:	6823      	ldr	r3, [r4, #0]
9000bd20:	e59b      	b.n	9000b85a <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bd22:	4a0c      	ldr	r2, [pc, #48]	@ (9000bd54 <HAL_RCC_OscConfig+0x5d8>)
9000bd24:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000bd26:	f043 0301 	orr.w	r3, r3, #1
9000bd2a:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000bd2c:	e67d      	b.n	9000ba2a <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bd2e:	4a09      	ldr	r2, [pc, #36]	@ (9000bd54 <HAL_RCC_OscConfig+0x5d8>)
9000bd30:	6853      	ldr	r3, [r2, #4]
9000bd32:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bd36:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000bd3a:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bd3c:	6823      	ldr	r3, [r4, #0]
9000bd3e:	e58c      	b.n	9000b85a <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bd40:	f042 0204 	orr.w	r2, r2, #4
9000bd44:	671a      	str	r2, [r3, #112]	@ 0x70
9000bd46:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000bd48:	f042 0201 	orr.w	r2, r2, #1
9000bd4c:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000bd4e:	e66c      	b.n	9000ba2a <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000bd50:	2001      	movs	r0, #1
}
9000bd52:	4770      	bx	lr
9000bd54:	58024400 	.word	0x58024400

9000bd58 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bd58:	4a3f      	ldr	r2, [pc, #252]	@ (9000be58 <HAL_RCC_GetSysClockFreq+0x100>)
9000bd5a:	6913      	ldr	r3, [r2, #16]
9000bd5c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bd60:	2b10      	cmp	r3, #16
9000bd62:	d04f      	beq.n	9000be04 <HAL_RCC_GetSysClockFreq+0xac>
9000bd64:	2b18      	cmp	r3, #24
9000bd66:	d00a      	beq.n	9000bd7e <HAL_RCC_GetSysClockFreq+0x26>
9000bd68:	2b00      	cmp	r3, #0
9000bd6a:	d14d      	bne.n	9000be08 <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bd6c:	6813      	ldr	r3, [r2, #0]
9000bd6e:	0699      	lsls	r1, r3, #26
9000bd70:	d54c      	bpl.n	9000be0c <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd72:	6813      	ldr	r3, [r2, #0]
9000bd74:	4839      	ldr	r0, [pc, #228]	@ (9000be5c <HAL_RCC_GetSysClockFreq+0x104>)
9000bd76:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000bd7a:	40d8      	lsrs	r0, r3
9000bd7c:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bd7e:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000bd80:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bd82:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bd84:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000bd86:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bd8a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bd8c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bd90:	d036      	beq.n	9000be00 <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bd92:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bd96:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bd9a:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd9e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bda2:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000bda6:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bda8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bdac:	ee06 3a90 	vmov	s13, r3
9000bdb0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000bdb4:	d002      	beq.n	9000bdbc <HAL_RCC_GetSysClockFreq+0x64>
9000bdb6:	2902      	cmp	r1, #2
9000bdb8:	d048      	beq.n	9000be4c <HAL_RCC_GetSysClockFreq+0xf4>
9000bdba:	b349      	cbz	r1, 9000be10 <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bdbc:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000be60 <HAL_RCC_GetSysClockFreq+0x108>
9000bdc0:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000bdc4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000bdc6:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bdca:	ee07 3a10 	vmov	s14, r3
9000bdce:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bdd2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000bdd6:	ee37 7a26 	vadd.f32	s14, s14, s13
9000bdda:	ee37 7a25 	vadd.f32	s14, s14, s11
9000bdde:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bde2:	4b1d      	ldr	r3, [pc, #116]	@ (9000be58 <HAL_RCC_GetSysClockFreq+0x100>)
9000bde4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bde6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bdea:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bdec:	ee07 3a90 	vmov	s15, r3
9000bdf0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000bdf4:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000bdf8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000bdfc:	ee17 0a90 	vmov	r0, s15
}
9000be00:	bc30      	pop	{r4, r5}
9000be02:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000be04:	4817      	ldr	r0, [pc, #92]	@ (9000be64 <HAL_RCC_GetSysClockFreq+0x10c>)
9000be06:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000be08:	4817      	ldr	r0, [pc, #92]	@ (9000be68 <HAL_RCC_GetSysClockFreq+0x110>)
9000be0a:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000be0c:	4813      	ldr	r0, [pc, #76]	@ (9000be5c <HAL_RCC_GetSysClockFreq+0x104>)
}
9000be0e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000be10:	6813      	ldr	r3, [r2, #0]
9000be12:	069b      	lsls	r3, r3, #26
9000be14:	d51d      	bpl.n	9000be52 <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000be16:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000be18:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000be1c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000be1e:	490f      	ldr	r1, [pc, #60]	@ (9000be5c <HAL_RCC_GetSysClockFreq+0x104>)
9000be20:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000be24:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000be28:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000be2a:	ee07 3a10 	vmov	s14, r3
9000be2e:	ee06 1a10 	vmov	s12, r1
9000be32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000be36:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000be3a:	ee77 6a26 	vadd.f32	s13, s14, s13
9000be3e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000be42:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000be46:	ee27 7a27 	vmul.f32	s14, s14, s15
9000be4a:	e7ca      	b.n	9000bde2 <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000be4c:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000be6c <HAL_RCC_GetSysClockFreq+0x114>
9000be50:	e7b6      	b.n	9000bdc0 <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000be52:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000be70 <HAL_RCC_GetSysClockFreq+0x118>
9000be56:	e7b3      	b.n	9000bdc0 <HAL_RCC_GetSysClockFreq+0x68>
9000be58:	58024400 	.word	0x58024400
9000be5c:	03d09000 	.word	0x03d09000
9000be60:	4a742400 	.word	0x4a742400
9000be64:	017d7840 	.word	0x017d7840
9000be68:	003d0900 	.word	0x003d0900
9000be6c:	4bbebc20 	.word	0x4bbebc20
9000be70:	4c742400 	.word	0x4c742400

9000be74 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000be74:	2800      	cmp	r0, #0
9000be76:	f000 810e 	beq.w	9000c096 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000be7a:	4a8d      	ldr	r2, [pc, #564]	@ (9000c0b0 <HAL_RCC_ClockConfig+0x23c>)
9000be7c:	6813      	ldr	r3, [r2, #0]
9000be7e:	f003 030f 	and.w	r3, r3, #15
9000be82:	428b      	cmp	r3, r1
{
9000be84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000be88:	4604      	mov	r4, r0
9000be8a:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000be8c:	d20c      	bcs.n	9000bea8 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000be8e:	6813      	ldr	r3, [r2, #0]
9000be90:	f023 030f 	bic.w	r3, r3, #15
9000be94:	430b      	orrs	r3, r1
9000be96:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000be98:	6813      	ldr	r3, [r2, #0]
9000be9a:	f003 030f 	and.w	r3, r3, #15
9000be9e:	428b      	cmp	r3, r1
9000bea0:	d002      	beq.n	9000bea8 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000bea2:	2001      	movs	r0, #1
}
9000bea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000bea8:	6823      	ldr	r3, [r4, #0]
9000beaa:	0758      	lsls	r0, r3, #29
9000beac:	d50b      	bpl.n	9000bec6 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000beae:	4981      	ldr	r1, [pc, #516]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000beb0:	6920      	ldr	r0, [r4, #16]
9000beb2:	698a      	ldr	r2, [r1, #24]
9000beb4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000beb8:	4290      	cmp	r0, r2
9000beba:	d904      	bls.n	9000bec6 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000bebc:	698a      	ldr	r2, [r1, #24]
9000bebe:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bec2:	4302      	orrs	r2, r0
9000bec4:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000bec6:	0719      	lsls	r1, r3, #28
9000bec8:	d50b      	bpl.n	9000bee2 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000beca:	497a      	ldr	r1, [pc, #488]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000becc:	6960      	ldr	r0, [r4, #20]
9000bece:	69ca      	ldr	r2, [r1, #28]
9000bed0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bed4:	4290      	cmp	r0, r2
9000bed6:	d904      	bls.n	9000bee2 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000bed8:	69ca      	ldr	r2, [r1, #28]
9000beda:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bede:	4302      	orrs	r2, r0
9000bee0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000bee2:	06da      	lsls	r2, r3, #27
9000bee4:	d50b      	bpl.n	9000befe <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000bee6:	4973      	ldr	r1, [pc, #460]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bee8:	69a0      	ldr	r0, [r4, #24]
9000beea:	69ca      	ldr	r2, [r1, #28]
9000beec:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000bef0:	4290      	cmp	r0, r2
9000bef2:	d904      	bls.n	9000befe <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000bef4:	69ca      	ldr	r2, [r1, #28]
9000bef6:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000befa:	4302      	orrs	r2, r0
9000befc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000befe:	069f      	lsls	r7, r3, #26
9000bf00:	d50b      	bpl.n	9000bf1a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000bf02:	496c      	ldr	r1, [pc, #432]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bf04:	69e0      	ldr	r0, [r4, #28]
9000bf06:	6a0a      	ldr	r2, [r1, #32]
9000bf08:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bf0c:	4290      	cmp	r0, r2
9000bf0e:	d904      	bls.n	9000bf1a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000bf10:	6a0a      	ldr	r2, [r1, #32]
9000bf12:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bf16:	4302      	orrs	r2, r0
9000bf18:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bf1a:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000bf1c:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bf20:	f140 80ab 	bpl.w	9000c07a <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000bf24:	4e63      	ldr	r6, [pc, #396]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bf26:	68e0      	ldr	r0, [r4, #12]
9000bf28:	69b1      	ldr	r1, [r6, #24]
9000bf2a:	f001 010f 	and.w	r1, r1, #15
9000bf2e:	4288      	cmp	r0, r1
9000bf30:	d904      	bls.n	9000bf3c <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000bf32:	69b1      	ldr	r1, [r6, #24]
9000bf34:	f021 010f 	bic.w	r1, r1, #15
9000bf38:	4301      	orrs	r1, r0
9000bf3a:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000bf3c:	2a00      	cmp	r2, #0
9000bf3e:	d030      	beq.n	9000bfa2 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000bf40:	4a5c      	ldr	r2, [pc, #368]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bf42:	68a1      	ldr	r1, [r4, #8]
9000bf44:	6993      	ldr	r3, [r2, #24]
9000bf46:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000bf4a:	430b      	orrs	r3, r1
9000bf4c:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000bf4e:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bf50:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000bf52:	2902      	cmp	r1, #2
9000bf54:	f000 80a1 	beq.w	9000c09a <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000bf58:	2903      	cmp	r1, #3
9000bf5a:	f000 8098 	beq.w	9000c08e <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000bf5e:	2901      	cmp	r1, #1
9000bf60:	f000 80a1 	beq.w	9000c0a6 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf64:	075f      	lsls	r7, r3, #29
9000bf66:	d59c      	bpl.n	9000bea2 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000bf68:	4e52      	ldr	r6, [pc, #328]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000bf6a:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000bf6e:	6933      	ldr	r3, [r6, #16]
9000bf70:	f023 0307 	bic.w	r3, r3, #7
9000bf74:	430b      	orrs	r3, r1
9000bf76:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000bf78:	f7fb ff5e 	bl	90007e38 <HAL_GetTick>
9000bf7c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000bf7e:	e005      	b.n	9000bf8c <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000bf80:	f7fb ff5a 	bl	90007e38 <HAL_GetTick>
9000bf84:	1bc0      	subs	r0, r0, r7
9000bf86:	4540      	cmp	r0, r8
9000bf88:	f200 808b 	bhi.w	9000c0a2 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000bf8c:	6933      	ldr	r3, [r6, #16]
9000bf8e:	6862      	ldr	r2, [r4, #4]
9000bf90:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bf94:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000bf98:	d1f2      	bne.n	9000bf80 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bf9a:	6823      	ldr	r3, [r4, #0]
9000bf9c:	079e      	lsls	r6, r3, #30
9000bf9e:	d506      	bpl.n	9000bfae <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000bfa0:	68e0      	ldr	r0, [r4, #12]
9000bfa2:	4944      	ldr	r1, [pc, #272]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bfa4:	698a      	ldr	r2, [r1, #24]
9000bfa6:	f002 020f 	and.w	r2, r2, #15
9000bfaa:	4290      	cmp	r0, r2
9000bfac:	d369      	bcc.n	9000c082 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000bfae:	4940      	ldr	r1, [pc, #256]	@ (9000c0b0 <HAL_RCC_ClockConfig+0x23c>)
9000bfb0:	680a      	ldr	r2, [r1, #0]
9000bfb2:	f002 020f 	and.w	r2, r2, #15
9000bfb6:	42aa      	cmp	r2, r5
9000bfb8:	d90a      	bls.n	9000bfd0 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000bfba:	680a      	ldr	r2, [r1, #0]
9000bfbc:	f022 020f 	bic.w	r2, r2, #15
9000bfc0:	432a      	orrs	r2, r5
9000bfc2:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000bfc4:	680a      	ldr	r2, [r1, #0]
9000bfc6:	f002 020f 	and.w	r2, r2, #15
9000bfca:	42aa      	cmp	r2, r5
9000bfcc:	f47f af69 	bne.w	9000bea2 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000bfd0:	0758      	lsls	r0, r3, #29
9000bfd2:	d50b      	bpl.n	9000bfec <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000bfd4:	4937      	ldr	r1, [pc, #220]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bfd6:	6920      	ldr	r0, [r4, #16]
9000bfd8:	698a      	ldr	r2, [r1, #24]
9000bfda:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bfde:	4290      	cmp	r0, r2
9000bfe0:	d204      	bcs.n	9000bfec <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000bfe2:	698a      	ldr	r2, [r1, #24]
9000bfe4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bfe8:	4302      	orrs	r2, r0
9000bfea:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000bfec:	0719      	lsls	r1, r3, #28
9000bfee:	d50b      	bpl.n	9000c008 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000bff0:	4930      	ldr	r1, [pc, #192]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000bff2:	6960      	ldr	r0, [r4, #20]
9000bff4:	69ca      	ldr	r2, [r1, #28]
9000bff6:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bffa:	4290      	cmp	r0, r2
9000bffc:	d204      	bcs.n	9000c008 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000bffe:	69ca      	ldr	r2, [r1, #28]
9000c000:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c004:	4302      	orrs	r2, r0
9000c006:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c008:	06da      	lsls	r2, r3, #27
9000c00a:	d50b      	bpl.n	9000c024 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c00c:	4929      	ldr	r1, [pc, #164]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000c00e:	69a0      	ldr	r0, [r4, #24]
9000c010:	69ca      	ldr	r2, [r1, #28]
9000c012:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c016:	4290      	cmp	r0, r2
9000c018:	d204      	bcs.n	9000c024 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c01a:	69ca      	ldr	r2, [r1, #28]
9000c01c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c020:	4302      	orrs	r2, r0
9000c022:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c024:	069b      	lsls	r3, r3, #26
9000c026:	d50b      	bpl.n	9000c040 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c028:	4a22      	ldr	r2, [pc, #136]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000c02a:	69e1      	ldr	r1, [r4, #28]
9000c02c:	6a13      	ldr	r3, [r2, #32]
9000c02e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c032:	4299      	cmp	r1, r3
9000c034:	d204      	bcs.n	9000c040 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c036:	6a13      	ldr	r3, [r2, #32]
9000c038:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000c03c:	430b      	orrs	r3, r1
9000c03e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c040:	f7ff fe8a 	bl	9000bd58 <HAL_RCC_GetSysClockFreq>
9000c044:	4a1b      	ldr	r2, [pc, #108]	@ (9000c0b4 <HAL_RCC_ClockConfig+0x240>)
9000c046:	4603      	mov	r3, r0
9000c048:	481b      	ldr	r0, [pc, #108]	@ (9000c0b8 <HAL_RCC_ClockConfig+0x244>)
9000c04a:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c04c:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c04e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c052:	4d1a      	ldr	r5, [pc, #104]	@ (9000c0bc <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c054:	f002 020f 	and.w	r2, r2, #15
9000c058:	4c19      	ldr	r4, [pc, #100]	@ (9000c0c0 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c05a:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c05c:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c05e:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c062:	4818      	ldr	r0, [pc, #96]	@ (9000c0c4 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c064:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c068:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c06a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c06c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c06e:	40d3      	lsrs	r3, r2
9000c070:	6023      	str	r3, [r4, #0]
}
9000c072:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c076:	f7f9 b8b7 	b.w	900051e8 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c07a:	2a00      	cmp	r2, #0
9000c07c:	f47f af60 	bne.w	9000bf40 <HAL_RCC_ClockConfig+0xcc>
9000c080:	e795      	b.n	9000bfae <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c082:	698a      	ldr	r2, [r1, #24]
9000c084:	f022 020f 	bic.w	r2, r2, #15
9000c088:	4302      	orrs	r2, r0
9000c08a:	618a      	str	r2, [r1, #24]
9000c08c:	e78f      	b.n	9000bfae <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c08e:	019a      	lsls	r2, r3, #6
9000c090:	f53f af6a 	bmi.w	9000bf68 <HAL_RCC_ClockConfig+0xf4>
9000c094:	e705      	b.n	9000bea2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c096:	2001      	movs	r0, #1
}
9000c098:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c09a:	0398      	lsls	r0, r3, #14
9000c09c:	f53f af64 	bmi.w	9000bf68 <HAL_RCC_ClockConfig+0xf4>
9000c0a0:	e6ff      	b.n	9000bea2 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c0a2:	2003      	movs	r0, #3
9000c0a4:	e6fe      	b.n	9000bea4 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c0a6:	05db      	lsls	r3, r3, #23
9000c0a8:	f53f af5e 	bmi.w	9000bf68 <HAL_RCC_ClockConfig+0xf4>
9000c0ac:	e6f9      	b.n	9000bea2 <HAL_RCC_ClockConfig+0x2e>
9000c0ae:	bf00      	nop
9000c0b0:	52002000 	.word	0x52002000
9000c0b4:	58024400 	.word	0x58024400
9000c0b8:	9002e238 	.word	0x9002e238
9000c0bc:	24000078 	.word	0x24000078
9000c0c0:	24000074 	.word	0x24000074
9000c0c4:	24000080 	.word	0x24000080

9000c0c8 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c0c8:	4a18      	ldr	r2, [pc, #96]	@ (9000c12c <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000c0ca:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c0cc:	6913      	ldr	r3, [r2, #16]
9000c0ce:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c0d2:	2b10      	cmp	r3, #16
9000c0d4:	d024      	beq.n	9000c120 <HAL_RCC_GetHCLKFreq+0x58>
9000c0d6:	2b18      	cmp	r3, #24
9000c0d8:	d009      	beq.n	9000c0ee <HAL_RCC_GetHCLKFreq+0x26>
9000c0da:	bb1b      	cbnz	r3, 9000c124 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c0dc:	6813      	ldr	r3, [r2, #0]
9000c0de:	069b      	lsls	r3, r3, #26
9000c0e0:	d522      	bpl.n	9000c128 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c0e2:	6812      	ldr	r2, [r2, #0]
9000c0e4:	4b12      	ldr	r3, [pc, #72]	@ (9000c130 <HAL_RCC_GetHCLKFreq+0x68>)
9000c0e6:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c0ea:	40d3      	lsrs	r3, r2
9000c0ec:	e002      	b.n	9000c0f4 <HAL_RCC_GetHCLKFreq+0x2c>
9000c0ee:	f7ff fad3 	bl	9000b698 <HAL_RCC_GetSysClockFreq.part.0>
9000c0f2:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c0f4:	490d      	ldr	r1, [pc, #52]	@ (9000c12c <HAL_RCC_GetHCLKFreq+0x64>)
9000c0f6:	480f      	ldr	r0, [pc, #60]	@ (9000c134 <HAL_RCC_GetHCLKFreq+0x6c>)
9000c0f8:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c0fa:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c0fc:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c100:	4c0d      	ldr	r4, [pc, #52]	@ (9000c138 <HAL_RCC_GetHCLKFreq+0x70>)
9000c102:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000c106:	4d0d      	ldr	r5, [pc, #52]	@ (9000c13c <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c108:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c10a:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c10c:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c110:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c114:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c116:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000c11a:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c11c:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000c11e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c120:	4b07      	ldr	r3, [pc, #28]	@ (9000c140 <HAL_RCC_GetHCLKFreq+0x78>)
9000c122:	e7e7      	b.n	9000c0f4 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c124:	4b07      	ldr	r3, [pc, #28]	@ (9000c144 <HAL_RCC_GetHCLKFreq+0x7c>)
9000c126:	e7e5      	b.n	9000c0f4 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c128:	4b01      	ldr	r3, [pc, #4]	@ (9000c130 <HAL_RCC_GetHCLKFreq+0x68>)
9000c12a:	e7e3      	b.n	9000c0f4 <HAL_RCC_GetHCLKFreq+0x2c>
9000c12c:	58024400 	.word	0x58024400
9000c130:	03d09000 	.word	0x03d09000
9000c134:	9002e238 	.word	0x9002e238
9000c138:	24000074 	.word	0x24000074
9000c13c:	24000078 	.word	0x24000078
9000c140:	017d7840 	.word	0x017d7840
9000c144:	003d0900 	.word	0x003d0900

9000c148 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c148:	4a1c      	ldr	r2, [pc, #112]	@ (9000c1bc <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c14a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c14c:	6913      	ldr	r3, [r2, #16]
9000c14e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c152:	2b10      	cmp	r3, #16
9000c154:	d02b      	beq.n	9000c1ae <HAL_RCC_GetPCLK1Freq+0x66>
9000c156:	2b18      	cmp	r3, #24
9000c158:	d009      	beq.n	9000c16e <HAL_RCC_GetPCLK1Freq+0x26>
9000c15a:	bb53      	cbnz	r3, 9000c1b2 <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c15c:	6813      	ldr	r3, [r2, #0]
9000c15e:	069b      	lsls	r3, r3, #26
9000c160:	d529      	bpl.n	9000c1b6 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c162:	6812      	ldr	r2, [r2, #0]
9000c164:	4b16      	ldr	r3, [pc, #88]	@ (9000c1c0 <HAL_RCC_GetPCLK1Freq+0x78>)
9000c166:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c16a:	40d3      	lsrs	r3, r2
9000c16c:	e002      	b.n	9000c174 <HAL_RCC_GetPCLK1Freq+0x2c>
9000c16e:	f7ff fa93 	bl	9000b698 <HAL_RCC_GetSysClockFreq.part.0>
9000c172:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c174:	4a11      	ldr	r2, [pc, #68]	@ (9000c1bc <HAL_RCC_GetPCLK1Freq+0x74>)
9000c176:	4913      	ldr	r1, [pc, #76]	@ (9000c1c4 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c178:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c17a:	4d13      	ldr	r5, [pc, #76]	@ (9000c1c8 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c17c:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c180:	4c12      	ldr	r4, [pc, #72]	@ (9000c1cc <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c182:	5c08      	ldrb	r0, [r1, r0]
9000c184:	f000 001f 	and.w	r0, r0, #31
9000c188:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c18a:	6990      	ldr	r0, [r2, #24]
9000c18c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c190:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c192:	5c08      	ldrb	r0, [r1, r0]
9000c194:	f000 001f 	and.w	r0, r0, #31
9000c198:	40c3      	lsrs	r3, r0
9000c19a:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c19c:	69d2      	ldr	r2, [r2, #28]
9000c19e:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c1a2:	5c88      	ldrb	r0, [r1, r2]
9000c1a4:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c1a8:	fa23 f000 	lsr.w	r0, r3, r0
9000c1ac:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c1ae:	4b08      	ldr	r3, [pc, #32]	@ (9000c1d0 <HAL_RCC_GetPCLK1Freq+0x88>)
9000c1b0:	e7e0      	b.n	9000c174 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c1b2:	4b08      	ldr	r3, [pc, #32]	@ (9000c1d4 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c1b4:	e7de      	b.n	9000c174 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c1b6:	4b02      	ldr	r3, [pc, #8]	@ (9000c1c0 <HAL_RCC_GetPCLK1Freq+0x78>)
9000c1b8:	e7dc      	b.n	9000c174 <HAL_RCC_GetPCLK1Freq+0x2c>
9000c1ba:	bf00      	nop
9000c1bc:	58024400 	.word	0x58024400
9000c1c0:	03d09000 	.word	0x03d09000
9000c1c4:	9002e238 	.word	0x9002e238
9000c1c8:	24000078 	.word	0x24000078
9000c1cc:	24000074 	.word	0x24000074
9000c1d0:	017d7840 	.word	0x017d7840
9000c1d4:	003d0900 	.word	0x003d0900

9000c1d8 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c1d8:	4a1c      	ldr	r2, [pc, #112]	@ (9000c24c <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c1da:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c1dc:	6913      	ldr	r3, [r2, #16]
9000c1de:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c1e2:	2b10      	cmp	r3, #16
9000c1e4:	d02b      	beq.n	9000c23e <HAL_RCC_GetPCLK2Freq+0x66>
9000c1e6:	2b18      	cmp	r3, #24
9000c1e8:	d009      	beq.n	9000c1fe <HAL_RCC_GetPCLK2Freq+0x26>
9000c1ea:	bb53      	cbnz	r3, 9000c242 <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c1ec:	6813      	ldr	r3, [r2, #0]
9000c1ee:	069b      	lsls	r3, r3, #26
9000c1f0:	d529      	bpl.n	9000c246 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c1f2:	6812      	ldr	r2, [r2, #0]
9000c1f4:	4b16      	ldr	r3, [pc, #88]	@ (9000c250 <HAL_RCC_GetPCLK2Freq+0x78>)
9000c1f6:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c1fa:	40d3      	lsrs	r3, r2
9000c1fc:	e002      	b.n	9000c204 <HAL_RCC_GetPCLK2Freq+0x2c>
9000c1fe:	f7ff fa4b 	bl	9000b698 <HAL_RCC_GetSysClockFreq.part.0>
9000c202:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c204:	4a11      	ldr	r2, [pc, #68]	@ (9000c24c <HAL_RCC_GetPCLK2Freq+0x74>)
9000c206:	4913      	ldr	r1, [pc, #76]	@ (9000c254 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c208:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c20a:	4d13      	ldr	r5, [pc, #76]	@ (9000c258 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c20c:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c210:	4c12      	ldr	r4, [pc, #72]	@ (9000c25c <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c212:	5c08      	ldrb	r0, [r1, r0]
9000c214:	f000 001f 	and.w	r0, r0, #31
9000c218:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c21a:	6990      	ldr	r0, [r2, #24]
9000c21c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c220:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c222:	5c08      	ldrb	r0, [r1, r0]
9000c224:	f000 001f 	and.w	r0, r0, #31
9000c228:	40c3      	lsrs	r3, r0
9000c22a:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c22c:	69d2      	ldr	r2, [r2, #28]
9000c22e:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c232:	5c88      	ldrb	r0, [r1, r2]
9000c234:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c238:	fa23 f000 	lsr.w	r0, r3, r0
9000c23c:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c23e:	4b08      	ldr	r3, [pc, #32]	@ (9000c260 <HAL_RCC_GetPCLK2Freq+0x88>)
9000c240:	e7e0      	b.n	9000c204 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c242:	4b08      	ldr	r3, [pc, #32]	@ (9000c264 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c244:	e7de      	b.n	9000c204 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c246:	4b02      	ldr	r3, [pc, #8]	@ (9000c250 <HAL_RCC_GetPCLK2Freq+0x78>)
9000c248:	e7dc      	b.n	9000c204 <HAL_RCC_GetPCLK2Freq+0x2c>
9000c24a:	bf00      	nop
9000c24c:	58024400 	.word	0x58024400
9000c250:	03d09000 	.word	0x03d09000
9000c254:	9002e238 	.word	0x9002e238
9000c258:	24000078 	.word	0x24000078
9000c25c:	24000074 	.word	0x24000074
9000c260:	017d7840 	.word	0x017d7840
9000c264:	003d0900 	.word	0x003d0900

9000c268 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c268:	4b13      	ldr	r3, [pc, #76]	@ (9000c2b8 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c26a:	223f      	movs	r2, #63	@ 0x3f
{
9000c26c:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c26e:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c270:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c272:	4c12      	ldr	r4, [pc, #72]	@ (9000c2bc <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c274:	f002 0207 	and.w	r2, r2, #7
9000c278:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c27a:	699a      	ldr	r2, [r3, #24]
9000c27c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000c280:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c282:	699a      	ldr	r2, [r3, #24]
9000c284:	f002 020f 	and.w	r2, r2, #15
9000c288:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c28a:	699a      	ldr	r2, [r3, #24]
9000c28c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c290:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c292:	69da      	ldr	r2, [r3, #28]
9000c294:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c298:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c29a:	69da      	ldr	r2, [r3, #28]
9000c29c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c2a0:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c2a2:	6a1b      	ldr	r3, [r3, #32]
9000c2a4:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c2a8:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c2aa:	6823      	ldr	r3, [r4, #0]
}
9000c2ac:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c2b0:	f003 030f 	and.w	r3, r3, #15
9000c2b4:	600b      	str	r3, [r1, #0]
}
9000c2b6:	4770      	bx	lr
9000c2b8:	58024400 	.word	0x58024400
9000c2bc:	52002000 	.word	0x52002000

9000c2c0 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c2c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c2c2:	4c36      	ldr	r4, [pc, #216]	@ (9000c39c <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c2c4:	4606      	mov	r6, r0
9000c2c6:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000c2c8:	6823      	ldr	r3, [r4, #0]
9000c2ca:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000c2ce:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c2d0:	f7fb fdb2 	bl	90007e38 <HAL_GetTick>
9000c2d4:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c2d6:	e004      	b.n	9000c2e2 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c2d8:	f7fb fdae 	bl	90007e38 <HAL_GetTick>
9000c2dc:	1b40      	subs	r0, r0, r5
9000c2de:	2802      	cmp	r0, #2
9000c2e0:	d856      	bhi.n	9000c390 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c2e2:	6823      	ldr	r3, [r4, #0]
9000c2e4:	011a      	lsls	r2, r3, #4
9000c2e6:	d4f7      	bmi.n	9000c2d8 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c2e8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c2ea:	6832      	ldr	r2, [r6, #0]
9000c2ec:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000c2f0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c2f4:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c2f6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c2fa:	3b01      	subs	r3, #1
9000c2fc:	3a01      	subs	r2, #1
9000c2fe:	025b      	lsls	r3, r3, #9
9000c300:	0412      	lsls	r2, r2, #16
9000c302:	b29b      	uxth	r3, r3
9000c304:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c308:	4313      	orrs	r3, r2
9000c30a:	6872      	ldr	r2, [r6, #4]
9000c30c:	3a01      	subs	r2, #1
9000c30e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c312:	4313      	orrs	r3, r2
9000c314:	6932      	ldr	r2, [r6, #16]
9000c316:	3a01      	subs	r2, #1
9000c318:	0612      	lsls	r2, r2, #24
9000c31a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c31e:	4313      	orrs	r3, r2
9000c320:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c322:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c324:	6972      	ldr	r2, [r6, #20]
9000c326:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000c32a:	4313      	orrs	r3, r2
9000c32c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c32e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c330:	69b2      	ldr	r2, [r6, #24]
9000c332:	f023 0320 	bic.w	r3, r3, #32
9000c336:	4313      	orrs	r3, r2
9000c338:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c33a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c33c:	f023 0310 	bic.w	r3, r3, #16
9000c340:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c342:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000c344:	69f2      	ldr	r2, [r6, #28]
9000c346:	f36f 03cf 	bfc	r3, #3, #13
9000c34a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c34e:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c350:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c352:	f043 0310 	orr.w	r3, r3, #16
9000c356:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c358:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c35a:	b1df      	cbz	r7, 9000c394 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c35c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c35e:	bf0c      	ite	eq
9000c360:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c364:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000c368:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c36a:	4c0c      	ldr	r4, [pc, #48]	@ (9000c39c <RCCEx_PLL2_Config.part.0+0xdc>)
9000c36c:	6823      	ldr	r3, [r4, #0]
9000c36e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000c372:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c374:	f7fb fd60 	bl	90007e38 <HAL_GetTick>
9000c378:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c37a:	e004      	b.n	9000c386 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c37c:	f7fb fd5c 	bl	90007e38 <HAL_GetTick>
9000c380:	1b40      	subs	r0, r0, r5
9000c382:	2802      	cmp	r0, #2
9000c384:	d804      	bhi.n	9000c390 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c386:	6823      	ldr	r3, [r4, #0]
9000c388:	011b      	lsls	r3, r3, #4
9000c38a:	d5f7      	bpl.n	9000c37c <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000c38c:	2000      	movs	r0, #0
}
9000c38e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c390:	2003      	movs	r0, #3
}
9000c392:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c394:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000c398:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c39a:	e7e6      	b.n	9000c36a <RCCEx_PLL2_Config.part.0+0xaa>
9000c39c:	58024400 	.word	0x58024400

9000c3a0 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c3a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c3a2:	4c36      	ldr	r4, [pc, #216]	@ (9000c47c <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c3a4:	4606      	mov	r6, r0
9000c3a6:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000c3a8:	6823      	ldr	r3, [r4, #0]
9000c3aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000c3ae:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c3b0:	f7fb fd42 	bl	90007e38 <HAL_GetTick>
9000c3b4:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c3b6:	e004      	b.n	9000c3c2 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c3b8:	f7fb fd3e 	bl	90007e38 <HAL_GetTick>
9000c3bc:	1b40      	subs	r0, r0, r5
9000c3be:	2802      	cmp	r0, #2
9000c3c0:	d856      	bhi.n	9000c470 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c3c2:	6823      	ldr	r3, [r4, #0]
9000c3c4:	009a      	lsls	r2, r3, #2
9000c3c6:	d4f7      	bmi.n	9000c3b8 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c3c8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c3ca:	6832      	ldr	r2, [r6, #0]
9000c3cc:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000c3d0:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c3d4:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c3d6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c3da:	3b01      	subs	r3, #1
9000c3dc:	3a01      	subs	r2, #1
9000c3de:	025b      	lsls	r3, r3, #9
9000c3e0:	0412      	lsls	r2, r2, #16
9000c3e2:	b29b      	uxth	r3, r3
9000c3e4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c3e8:	4313      	orrs	r3, r2
9000c3ea:	6872      	ldr	r2, [r6, #4]
9000c3ec:	3a01      	subs	r2, #1
9000c3ee:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c3f2:	4313      	orrs	r3, r2
9000c3f4:	6932      	ldr	r2, [r6, #16]
9000c3f6:	3a01      	subs	r2, #1
9000c3f8:	0612      	lsls	r2, r2, #24
9000c3fa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c3fe:	4313      	orrs	r3, r2
9000c400:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000c402:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c404:	6972      	ldr	r2, [r6, #20]
9000c406:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000c40a:	4313      	orrs	r3, r2
9000c40c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c40e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c410:	69b2      	ldr	r2, [r6, #24]
9000c412:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000c416:	4313      	orrs	r3, r2
9000c418:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000c41a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c41c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000c420:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c422:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000c424:	69f2      	ldr	r2, [r6, #28]
9000c426:	f36f 03cf 	bfc	r3, #3, #13
9000c42a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c42e:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000c430:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c432:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c436:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c438:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c43a:	b1df      	cbz	r7, 9000c474 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c43c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000c43e:	bf0c      	ite	eq
9000c440:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000c444:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000c448:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000c44a:	4c0c      	ldr	r4, [pc, #48]	@ (9000c47c <RCCEx_PLL3_Config.part.0+0xdc>)
9000c44c:	6823      	ldr	r3, [r4, #0]
9000c44e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000c452:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c454:	f7fb fcf0 	bl	90007e38 <HAL_GetTick>
9000c458:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c45a:	e004      	b.n	9000c466 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c45c:	f7fb fcec 	bl	90007e38 <HAL_GetTick>
9000c460:	1b40      	subs	r0, r0, r5
9000c462:	2802      	cmp	r0, #2
9000c464:	d804      	bhi.n	9000c470 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c466:	6823      	ldr	r3, [r4, #0]
9000c468:	009b      	lsls	r3, r3, #2
9000c46a:	d5f7      	bpl.n	9000c45c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000c46c:	2000      	movs	r0, #0
}
9000c46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c470:	2003      	movs	r0, #3
}
9000c472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c474:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000c478:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c47a:	e7e6      	b.n	9000c44a <RCCEx_PLL3_Config.part.0+0xaa>
9000c47c:	58024400 	.word	0x58024400

9000c480 <HAL_RCCEx_PeriphCLKConfig>:
{
9000c480:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c484:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000c488:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c48a:	011d      	lsls	r5, r3, #4
9000c48c:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000c490:	d524      	bpl.n	9000c4dc <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c492:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000c494:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c498:	f000 85df 	beq.w	9000d05a <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000c49c:	f200 86a8 	bhi.w	9000d1f0 <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000c4a0:	2900      	cmp	r1, #0
9000c4a2:	f000 85f6 	beq.w	9000d092 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000c4a6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c4aa:	f040 86a5 	bne.w	9000d1f8 <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4ae:	49a9      	ldr	r1, [pc, #676]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c4b0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4b2:	f001 0103 	and.w	r1, r1, #3
9000c4b6:	2903      	cmp	r1, #3
9000c4b8:	f000 869e 	beq.w	9000d1f8 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000c4bc:	2102      	movs	r1, #2
9000c4be:	3008      	adds	r0, #8
9000c4c0:	f7ff fefe 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c4c4:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c4c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4ca:	b93e      	cbnz	r6, 9000c4dc <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c4cc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000c4ce:	4da1      	ldr	r5, [pc, #644]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000c4d0:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c4d2:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000c4d4:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000c4d8:	4301      	orrs	r1, r0
9000c4da:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c4dc:	05d8      	lsls	r0, r3, #23
9000c4de:	d50a      	bpl.n	9000c4f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c4e0:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000c4e2:	2904      	cmp	r1, #4
9000c4e4:	d806      	bhi.n	9000c4f4 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000c4e6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c4ea:	03ff      	.short	0x03ff
9000c4ec:	0582056d 	.word	0x0582056d
9000c4f0:	04040404 	.word	0x04040404
      status = ret;
9000c4f4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c4f6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c4f8:	0599      	lsls	r1, r3, #22
9000c4fa:	d524      	bpl.n	9000c546 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c4fc:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000c4fe:	2980      	cmp	r1, #128	@ 0x80
9000c500:	f000 854b 	beq.w	9000cf9a <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000c504:	f200 8687 	bhi.w	9000d216 <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000c508:	2900      	cmp	r1, #0
9000c50a:	f000 85bb 	beq.w	9000d084 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000c50e:	2940      	cmp	r1, #64	@ 0x40
9000c510:	f040 8688 	bne.w	9000d224 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c514:	498f      	ldr	r1, [pc, #572]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c516:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c518:	f001 0103 	and.w	r1, r1, #3
9000c51c:	2903      	cmp	r1, #3
9000c51e:	f000 8681 	beq.w	9000d224 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000c522:	2100      	movs	r1, #0
9000c524:	f104 0008 	add.w	r0, r4, #8
9000c528:	f7ff feca 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c52c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c52e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c532:	2d00      	cmp	r5, #0
9000c534:	f040 8543 	bne.w	9000cfbe <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000c538:	4f86      	ldr	r7, [pc, #536]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c53a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000c53c:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c53e:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000c542:	4301      	orrs	r1, r0
9000c544:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c546:	055f      	lsls	r7, r3, #21
9000c548:	d528      	bpl.n	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c54a:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000c54e:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000c552:	f000 855c 	beq.w	9000d00e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000c556:	f200 8652 	bhi.w	9000d1fe <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000c55a:	2900      	cmp	r1, #0
9000c55c:	f000 858b 	beq.w	9000d076 <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000c560:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c564:	f040 8653 	bne.w	9000d20e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c568:	497a      	ldr	r1, [pc, #488]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c56a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c56c:	f001 0103 	and.w	r1, r1, #3
9000c570:	2903      	cmp	r1, #3
9000c572:	f000 864c 	beq.w	9000d20e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000c576:	2100      	movs	r1, #0
9000c578:	f104 0008 	add.w	r0, r4, #8
9000c57c:	f7ff fea0 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c580:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c582:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c586:	2d00      	cmp	r5, #0
9000c588:	f040 8553 	bne.w	9000d032 <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000c58c:	4f71      	ldr	r7, [pc, #452]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c58e:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000c592:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c594:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000c598:	4301      	orrs	r1, r0
9000c59a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c59c:	0518      	lsls	r0, r3, #20
9000c59e:	d528      	bpl.n	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c5a0:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000c5a4:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000c5a8:	f000 8546 	beq.w	9000d038 <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000c5ac:	f200 8614 	bhi.w	9000d1d8 <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000c5b0:	2900      	cmp	r1, #0
9000c5b2:	f000 84d6 	beq.w	9000cf62 <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000c5b6:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000c5ba:	f040 8615 	bne.w	9000d1e8 <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5be:	4965      	ldr	r1, [pc, #404]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c5c0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c5c2:	f001 0103 	and.w	r1, r1, #3
9000c5c6:	2903      	cmp	r1, #3
9000c5c8:	f000 860e 	beq.w	9000d1e8 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000c5cc:	2100      	movs	r1, #0
9000c5ce:	f104 0008 	add.w	r0, r4, #8
9000c5d2:	f7ff fe75 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c5d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c5d8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c5dc:	2d00      	cmp	r5, #0
9000c5de:	f040 84c8 	bne.w	9000cf72 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000c5e2:	4f5c      	ldr	r7, [pc, #368]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c5e4:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000c5e8:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c5ea:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000c5ee:	4301      	orrs	r1, r0
9000c5f0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c5f2:	0199      	lsls	r1, r3, #6
9000c5f4:	d518      	bpl.n	9000c628 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000c5f6:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000c5f8:	2920      	cmp	r1, #32
9000c5fa:	f000 8434 	beq.w	9000ce66 <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000c5fe:	f200 8615 	bhi.w	9000d22c <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000c602:	b139      	cbz	r1, 9000c614 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000c604:	2910      	cmp	r1, #16
9000c606:	f040 8614 	bne.w	9000d232 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c60a:	4852      	ldr	r0, [pc, #328]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c60c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c60e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c612:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c614:	2d00      	cmp	r5, #0
9000c616:	f040 83bf 	bne.w	9000cd98 <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000c61a:	4f4e      	ldr	r7, [pc, #312]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c61c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000c61e:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c620:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000c624:	4301      	orrs	r1, r0
9000c626:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c628:	04df      	lsls	r7, r3, #19
9000c62a:	d526      	bpl.n	9000c67a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c62c:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000c62e:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c632:	f000 84a1 	beq.w	9000cf78 <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000c636:	f200 85c3 	bhi.w	9000d1c0 <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000c63a:	2900      	cmp	r1, #0
9000c63c:	f000 8486 	beq.w	9000cf4c <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000c640:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000c644:	f040 85c4 	bne.w	9000d1d0 <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c648:	4942      	ldr	r1, [pc, #264]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c64a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c64c:	f001 0103 	and.w	r1, r1, #3
9000c650:	2903      	cmp	r1, #3
9000c652:	f000 85bd 	beq.w	9000d1d0 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000c656:	2100      	movs	r1, #0
9000c658:	f104 0008 	add.w	r0, r4, #8
9000c65c:	f7ff fe30 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c660:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c662:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c666:	2d00      	cmp	r5, #0
9000c668:	f040 8478 	bne.w	9000cf5c <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000c66c:	4f39      	ldr	r7, [pc, #228]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c66e:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000c670:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c672:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000c676:	4301      	orrs	r1, r0
9000c678:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c67a:	0498      	lsls	r0, r3, #18
9000c67c:	d524      	bpl.n	9000c6c8 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c67e:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000c680:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c684:	f000 8415 	beq.w	9000ceb2 <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000c688:	f200 8556 	bhi.w	9000d138 <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000c68c:	b191      	cbz	r1, 9000c6b4 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000c68e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c692:	f040 855b 	bne.w	9000d14c <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c696:	492f      	ldr	r1, [pc, #188]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c698:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c69a:	f001 0103 	and.w	r1, r1, #3
9000c69e:	2903      	cmp	r1, #3
9000c6a0:	f000 8554 	beq.w	9000d14c <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000c6a4:	2101      	movs	r1, #1
9000c6a6:	f104 0008 	add.w	r0, r4, #8
9000c6aa:	f7ff fe09 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c6ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c6b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6b4:	2d00      	cmp	r5, #0
9000c6b6:	f040 838f 	bne.w	9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000c6ba:	4f26      	ldr	r7, [pc, #152]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c6bc:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000c6be:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c6c0:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000c6c4:	4301      	orrs	r1, r0
9000c6c6:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c6c8:	0459      	lsls	r1, r3, #17
9000c6ca:	d526      	bpl.n	9000c71a <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c6cc:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000c6d0:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c6d4:	f000 8426 	beq.w	9000cf24 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000c6d8:	f200 854a 	bhi.w	9000d170 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000c6dc:	b191      	cbz	r1, 9000c704 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000c6de:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c6e2:	f040 854f 	bne.w	9000d184 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c6e6:	491b      	ldr	r1, [pc, #108]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c6e8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c6ea:	f001 0103 	and.w	r1, r1, #3
9000c6ee:	2903      	cmp	r1, #3
9000c6f0:	f000 8548 	beq.w	9000d184 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000c6f4:	2101      	movs	r1, #1
9000c6f6:	f104 0008 	add.w	r0, r4, #8
9000c6fa:	f7ff fde1 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c6fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c700:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c704:	2d00      	cmp	r5, #0
9000c706:	f040 835b 	bne.w	9000cdc0 <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000c70a:	4f12      	ldr	r7, [pc, #72]	@ (9000c754 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c70c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000c710:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c712:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c716:	4301      	orrs	r1, r0
9000c718:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c71a:	041f      	lsls	r7, r3, #16
9000c71c:	d50d      	bpl.n	9000c73a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000c71e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000c720:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c724:	f000 8260 	beq.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0x768>
9000c728:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c72c:	f000 8591 	beq.w	9000d252 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000c730:	2900      	cmp	r1, #0
9000c732:	f000 825e 	beq.w	9000cbf2 <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000c736:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c738:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c73a:	01d8      	lsls	r0, r3, #7
9000c73c:	d515      	bpl.n	9000c76a <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000c73e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c740:	2903      	cmp	r1, #3
9000c742:	f200 85b4 	bhi.w	9000d2ae <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c746:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c74a:	000c      	.short	0x000c
9000c74c:	03a10007 	.word	0x03a10007
9000c750:	000c      	.short	0x000c
9000c752:	bf00      	nop
9000c754:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c758:	4836      	ldr	r0, [pc, #216]	@ (9000c834 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000c75a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c75c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c760:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c762:	2d00      	cmp	r5, #0
9000c764:	f000 831a 	beq.w	9000cd9c <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000c768:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c76a:	0259      	lsls	r1, r3, #9
9000c76c:	f100 827a 	bmi.w	9000cc64 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c770:	07df      	lsls	r7, r3, #31
9000c772:	d52f      	bpl.n	9000c7d4 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000c774:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000c776:	2928      	cmp	r1, #40	@ 0x28
9000c778:	d82a      	bhi.n	9000c7d0 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c77a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c77e:	0257      	.short	0x0257
9000c780:	00290029 	.word	0x00290029
9000c784:	00290029 	.word	0x00290029
9000c788:	00290029 	.word	0x00290029
9000c78c:	02480029 	.word	0x02480029
9000c790:	00290029 	.word	0x00290029
9000c794:	00290029 	.word	0x00290029
9000c798:	00290029 	.word	0x00290029
9000c79c:	04b90029 	.word	0x04b90029
9000c7a0:	00290029 	.word	0x00290029
9000c7a4:	00290029 	.word	0x00290029
9000c7a8:	00290029 	.word	0x00290029
9000c7ac:	02570029 	.word	0x02570029
9000c7b0:	00290029 	.word	0x00290029
9000c7b4:	00290029 	.word	0x00290029
9000c7b8:	00290029 	.word	0x00290029
9000c7bc:	02570029 	.word	0x02570029
9000c7c0:	00290029 	.word	0x00290029
9000c7c4:	00290029 	.word	0x00290029
9000c7c8:	00290029 	.word	0x00290029
9000c7cc:	02570029 	.word	0x02570029
      status = ret;
9000c7d0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c7d2:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c7d4:	0798      	lsls	r0, r3, #30
9000c7d6:	d51e      	bpl.n	9000c816 <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c7d8:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000c7da:	2905      	cmp	r1, #5
9000c7dc:	f200 8550 	bhi.w	9000d280 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000c7e0:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c7e4:	00060015 	.word	0x00060015
9000c7e8:	00150471 	.word	0x00150471
9000c7ec:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c7f0:	4910      	ldr	r1, [pc, #64]	@ (9000c834 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000c7f2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7f4:	f001 0103 	and.w	r1, r1, #3
9000c7f8:	2903      	cmp	r1, #3
9000c7fa:	f000 8541 	beq.w	9000d280 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000c7fe:	2101      	movs	r1, #1
9000c800:	f104 0008 	add.w	r0, r4, #8
9000c804:	f7ff fd5c 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c808:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c80a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c80e:	2d00      	cmp	r5, #0
9000c810:	f000 82cc 	beq.w	9000cdac <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000c814:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c816:	0759      	lsls	r1, r3, #29
9000c818:	d521      	bpl.n	9000c85e <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c81a:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000c81e:	2905      	cmp	r1, #5
9000c820:	f200 852a 	bhi.w	9000d278 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000c824:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c828:	00080017 	.word	0x00080017
9000c82c:	0017043c 	.word	0x0017043c
9000c830:	00170017 	.word	0x00170017
9000c834:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c838:	49ae      	ldr	r1, [pc, #696]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c83a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c83c:	f001 0103 	and.w	r1, r1, #3
9000c840:	2903      	cmp	r1, #3
9000c842:	f000 8519 	beq.w	9000d278 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000c846:	2101      	movs	r1, #1
9000c848:	f104 0008 	add.w	r0, r4, #8
9000c84c:	f7ff fd38 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c850:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c852:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c856:	2d00      	cmp	r5, #0
9000c858:	f000 82c2 	beq.w	9000cde0 <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000c85c:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c85e:	069f      	lsls	r7, r3, #26
9000c860:	d526      	bpl.n	9000c8b0 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c862:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000c866:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c86a:	f000 82c6 	beq.w	9000cdfa <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000c86e:	f200 8455 	bhi.w	9000d11c <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000c872:	b191      	cbz	r1, 9000c89a <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000c874:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c878:	f040 845a 	bne.w	9000d130 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c87c:	499d      	ldr	r1, [pc, #628]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c87e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c880:	f001 0103 	and.w	r1, r1, #3
9000c884:	2903      	cmp	r1, #3
9000c886:	f000 8453 	beq.w	9000d130 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000c88a:	2100      	movs	r1, #0
9000c88c:	f104 0008 	add.w	r0, r4, #8
9000c890:	f7ff fd16 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c894:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c896:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c89a:	2d00      	cmp	r5, #0
9000c89c:	f040 828e 	bne.w	9000cdbc <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000c8a0:	4f94      	ldr	r7, [pc, #592]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c8a2:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000c8a6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c8a8:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c8ac:	4301      	orrs	r1, r0
9000c8ae:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c8b0:	0658      	lsls	r0, r3, #25
9000c8b2:	d526      	bpl.n	9000c902 <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c8b4:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000c8b8:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000c8bc:	f000 82af 	beq.w	9000ce1e <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000c8c0:	f200 8464 	bhi.w	9000d18c <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000c8c4:	b191      	cbz	r1, 9000c8ec <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c8c6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000c8ca:	f040 8469 	bne.w	9000d1a0 <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c8ce:	4989      	ldr	r1, [pc, #548]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c8d0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c8d2:	f001 0103 	and.w	r1, r1, #3
9000c8d6:	2903      	cmp	r1, #3
9000c8d8:	f000 8462 	beq.w	9000d1a0 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000c8dc:	2100      	movs	r1, #0
9000c8de:	f104 0008 	add.w	r0, r4, #8
9000c8e2:	f7ff fced 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c8e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c8e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c8ec:	2d00      	cmp	r5, #0
9000c8ee:	f040 8269 	bne.w	9000cdc4 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000c8f2:	4f80      	ldr	r7, [pc, #512]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c8f4:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000c8f8:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c8fa:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000c8fe:	4301      	orrs	r1, r0
9000c900:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c902:	0619      	lsls	r1, r3, #24
9000c904:	d526      	bpl.n	9000c954 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c906:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000c90a:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c90e:	f000 8298 	beq.w	9000ce42 <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000c912:	f200 841f 	bhi.w	9000d154 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000c916:	b191      	cbz	r1, 9000c93e <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000c918:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c91c:	f040 8424 	bne.w	9000d168 <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c920:	4974      	ldr	r1, [pc, #464]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c922:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c924:	f001 0103 	and.w	r1, r1, #3
9000c928:	2903      	cmp	r1, #3
9000c92a:	f000 841d 	beq.w	9000d168 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000c92e:	2100      	movs	r1, #0
9000c930:	f104 0008 	add.w	r0, r4, #8
9000c934:	f7ff fcc4 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c938:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c93a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c93e:	2d00      	cmp	r5, #0
9000c940:	f040 8244 	bne.w	9000cdcc <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000c944:	4f6b      	ldr	r7, [pc, #428]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c946:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000c94a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c94c:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000c950:	4301      	orrs	r1, r0
9000c952:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c954:	071f      	lsls	r7, r3, #28
9000c956:	d50b      	bpl.n	9000c970 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000c958:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000c95c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c960:	f000 81d4 	beq.w	9000cd0c <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c964:	4f63      	ldr	r7, [pc, #396]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c966:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c968:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000c96c:	4301      	orrs	r1, r0
9000c96e:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c970:	06d8      	lsls	r0, r3, #27
9000c972:	d50b      	bpl.n	9000c98c <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000c974:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000c978:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000c97c:	f000 81db 	beq.w	9000cd36 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c980:	4f5c      	ldr	r7, [pc, #368]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c982:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c984:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000c988:	4301      	orrs	r1, r0
9000c98a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c98c:	0319      	lsls	r1, r3, #12
9000c98e:	d524      	bpl.n	9000c9da <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000c990:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000c994:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c998:	f000 82b1 	beq.w	9000cefe <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000c99c:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c9a0:	d010      	beq.n	9000c9c4 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000c9a2:	2900      	cmp	r1, #0
9000c9a4:	f040 8130 	bne.w	9000cc08 <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9a8:	4852      	ldr	r0, [pc, #328]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c9aa:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000c9ac:	f000 0003 	and.w	r0, r0, #3
9000c9b0:	2803      	cmp	r0, #3
9000c9b2:	f000 8129 	beq.w	9000cc08 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000c9b6:	f104 0008 	add.w	r0, r4, #8
9000c9ba:	f7ff fc81 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000c9be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c9c0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c9c4:	2d00      	cmp	r5, #0
9000c9c6:	f040 81ff 	bne.w	9000cdc8 <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c9ca:	4f4a      	ldr	r7, [pc, #296]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c9cc:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000c9d0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c9d2:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000c9d6:	4301      	orrs	r1, r0
9000c9d8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c9da:	035f      	lsls	r7, r3, #13
9000c9dc:	d50f      	bpl.n	9000c9fe <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000c9de:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000c9e2:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c9e6:	f000 8277 	beq.w	9000ced8 <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000c9ea:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c9ee:	f000 812d 	beq.w	9000cc4c <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000c9f2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c9f6:	f000 8124 	beq.w	9000cc42 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000c9fa:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c9fc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c9fe:	03d8      	lsls	r0, r3, #15
9000ca00:	d520      	bpl.n	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000ca02:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000ca04:	2900      	cmp	r1, #0
9000ca06:	f000 81aa 	beq.w	9000cd5e <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000ca0a:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000ca0e:	f040 80e8 	bne.w	9000cbe2 <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca12:	4938      	ldr	r1, [pc, #224]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca14:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca16:	f001 0103 	and.w	r1, r1, #3
9000ca1a:	2903      	cmp	r1, #3
9000ca1c:	f000 80e1 	beq.w	9000cbe2 <HAL_RCCEx_PeriphCLKConfig+0x762>
9000ca20:	2102      	movs	r1, #2
9000ca22:	f104 0008 	add.w	r0, r4, #8
9000ca26:	f7ff fc4b 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000ca2a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000ca2c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ca30:	2d00      	cmp	r5, #0
9000ca32:	f040 819c 	bne.w	9000cd6e <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000ca36:	4f2f      	ldr	r7, [pc, #188]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca38:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000ca3a:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000ca3c:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000ca40:	4301      	orrs	r1, r0
9000ca42:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000ca44:	0099      	lsls	r1, r3, #2
9000ca46:	d50e      	bpl.n	9000ca66 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca48:	492a      	ldr	r1, [pc, #168]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca4a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca4c:	f001 0103 	and.w	r1, r1, #3
9000ca50:	2903      	cmp	r1, #3
9000ca52:	d007      	beq.n	9000ca64 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000ca54:	2102      	movs	r1, #2
9000ca56:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ca5a:	f7ff fca1 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ca5e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000ca62:	b100      	cbz	r0, 9000ca66 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000ca64:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ca66:	039f      	lsls	r7, r3, #14
9000ca68:	f100 80ab 	bmi.w	9000cbc2 <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000ca6c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000ca6e:	02d8      	lsls	r0, r3, #11
9000ca70:	d506      	bpl.n	9000ca80 <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000ca72:	4820      	ldr	r0, [pc, #128]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca74:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000ca76:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000ca78:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000ca7c:	4331      	orrs	r1, r6
9000ca7e:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000ca80:	00d9      	lsls	r1, r3, #3
9000ca82:	d507      	bpl.n	9000ca94 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000ca84:	481b      	ldr	r0, [pc, #108]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca86:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000ca8a:	6901      	ldr	r1, [r0, #16]
9000ca8c:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000ca90:	4331      	orrs	r1, r6
9000ca92:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000ca94:	029f      	lsls	r7, r3, #10
9000ca96:	d506      	bpl.n	9000caa6 <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000ca98:	4816      	ldr	r0, [pc, #88]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ca9a:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000ca9c:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000ca9e:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000caa2:	4331      	orrs	r1, r6
9000caa4:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000caa6:	005e      	lsls	r6, r3, #1
9000caa8:	d509      	bpl.n	9000cabe <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000caaa:	4912      	ldr	r1, [pc, #72]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000caac:	6908      	ldr	r0, [r1, #16]
9000caae:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000cab2:	6108      	str	r0, [r1, #16]
9000cab4:	6908      	ldr	r0, [r1, #16]
9000cab6:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000caba:	4330      	orrs	r0, r6
9000cabc:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000cabe:	2b00      	cmp	r3, #0
9000cac0:	da06      	bge.n	9000cad0 <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000cac2:	480c      	ldr	r0, [pc, #48]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cac4:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000cac6:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000cac8:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000cacc:	4331      	orrs	r1, r6
9000cace:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000cad0:	0218      	lsls	r0, r3, #8
9000cad2:	d507      	bpl.n	9000cae4 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000cad4:	4907      	ldr	r1, [pc, #28]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cad6:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000cada:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000cadc:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000cae0:	4303      	orrs	r3, r0
9000cae2:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000cae4:	07d1      	lsls	r1, r2, #31
9000cae6:	d511      	bpl.n	9000cb0c <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cae8:	4b02      	ldr	r3, [pc, #8]	@ (9000caf4 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000caea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000caec:	f003 0303 	and.w	r3, r3, #3
9000caf0:	2b03      	cmp	r3, #3
9000caf2:	e001      	b.n	9000caf8 <HAL_RCCEx_PeriphCLKConfig+0x678>
9000caf4:	58024400 	.word	0x58024400
9000caf8:	f000 835c 	beq.w	9000d1b4 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000cafc:	2100      	movs	r1, #0
9000cafe:	f104 0008 	add.w	r0, r4, #8
9000cb02:	f7ff fbdd 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000cb06:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000cb08:	b100      	cbz	r0, 9000cb0c <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000cb0a:	4605      	mov	r5, r0
9000cb0c:	0793      	lsls	r3, r2, #30
9000cb0e:	d50e      	bpl.n	9000cb2e <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb10:	4baf      	ldr	r3, [pc, #700]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cb12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cb14:	f003 0303 	and.w	r3, r3, #3
9000cb18:	2b03      	cmp	r3, #3
9000cb1a:	f000 834d 	beq.w	9000d1b8 <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000cb1e:	2101      	movs	r1, #1
9000cb20:	f104 0008 	add.w	r0, r4, #8
9000cb24:	f7ff fbcc 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000cb28:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000cb2a:	b100      	cbz	r0, 9000cb2e <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000cb2c:	4605      	mov	r5, r0
9000cb2e:	0757      	lsls	r7, r2, #29
9000cb30:	d50e      	bpl.n	9000cb50 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb32:	4ba7      	ldr	r3, [pc, #668]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cb34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cb36:	f003 0303 	and.w	r3, r3, #3
9000cb3a:	2b03      	cmp	r3, #3
9000cb3c:	f000 833e 	beq.w	9000d1bc <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000cb40:	2102      	movs	r1, #2
9000cb42:	f104 0008 	add.w	r0, r4, #8
9000cb46:	f7ff fbbb 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000cb4a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000cb4c:	b100      	cbz	r0, 9000cb50 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000cb4e:	4605      	mov	r5, r0
9000cb50:	0716      	lsls	r6, r2, #28
9000cb52:	d50e      	bpl.n	9000cb72 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb54:	4b9e      	ldr	r3, [pc, #632]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cb56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cb58:	f003 0303 	and.w	r3, r3, #3
9000cb5c:	2b03      	cmp	r3, #3
9000cb5e:	f000 8323 	beq.w	9000d1a8 <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000cb62:	2100      	movs	r1, #0
9000cb64:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cb68:	f7ff fc1a 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000cb6c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000cb6e:	b100      	cbz	r0, 9000cb72 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000cb70:	4605      	mov	r5, r0
9000cb72:	06d0      	lsls	r0, r2, #27
9000cb74:	d50f      	bpl.n	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb76:	4b96      	ldr	r3, [pc, #600]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cb78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cb7a:	f003 0303 	and.w	r3, r3, #3
9000cb7e:	2b03      	cmp	r3, #3
9000cb80:	f000 8314 	beq.w	9000d1ac <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000cb84:	2101      	movs	r1, #1
9000cb86:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cb8a:	f7ff fc09 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000cb8e:	2800      	cmp	r0, #0
9000cb90:	f040 8359 	bne.w	9000d246 <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cb94:	6862      	ldr	r2, [r4, #4]
9000cb96:	0693      	lsls	r3, r2, #26
9000cb98:	d50e      	bpl.n	9000cbb8 <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb9a:	4b8d      	ldr	r3, [pc, #564]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cb9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000cb9e:	f003 0303 	and.w	r3, r3, #3
9000cba2:	2b03      	cmp	r3, #3
9000cba4:	f000 82b7 	beq.w	9000d116 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000cba8:	2102      	movs	r1, #2
9000cbaa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cbae:	f7ff fbf7 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000cbb2:	2800      	cmp	r0, #0
9000cbb4:	f040 82af 	bne.w	9000d116 <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000cbb8:	1e28      	subs	r0, r5, #0
9000cbba:	bf18      	it	ne
9000cbbc:	2001      	movne	r0, #1
}
9000cbbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000cbc2:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000cbc6:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000cbca:	f000 80d2 	beq.w	9000cd72 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000cbce:	f240 8110 	bls.w	9000cdf2 <HAL_RCCEx_PeriphCLKConfig+0x972>
9000cbd2:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000cbd6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000cbda:	f000 80cf 	beq.w	9000cd7c <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000cbde:	2501      	movs	r5, #1
9000cbe0:	e745      	b.n	9000ca6e <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000cbe2:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cbe4:	4635      	mov	r5, r6
9000cbe6:	e72d      	b.n	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cbe8:	4879      	ldr	r0, [pc, #484]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cbea:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cbec:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cbf0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cbf2:	2d00      	cmp	r5, #0
9000cbf4:	f040 80ce 	bne.w	9000cd94 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000cbf8:	4f75      	ldr	r7, [pc, #468]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cbfa:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000cbfc:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cbfe:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000cc02:	4301      	orrs	r1, r0
9000cc04:	6539      	str	r1, [r7, #80]	@ 0x50
9000cc06:	e598      	b.n	9000c73a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000cc08:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc0a:	4635      	mov	r5, r6
9000cc0c:	e6e5      	b.n	9000c9da <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc0e:	4970      	ldr	r1, [pc, #448]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cc10:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc12:	f001 0103 	and.w	r1, r1, #3
9000cc16:	2903      	cmp	r1, #3
9000cc18:	f43f adda 	beq.w	9000c7d0 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000cc1c:	2101      	movs	r1, #1
9000cc1e:	f104 0008 	add.w	r0, r4, #8
9000cc22:	f7ff fb4d 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000cc26:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000cc28:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc2c:	2d00      	cmp	r5, #0
9000cc2e:	f040 80d5 	bne.w	9000cddc <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000cc32:	4f67      	ldr	r7, [pc, #412]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cc34:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000cc36:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cc38:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000cc3c:	4301      	orrs	r1, r0
9000cc3e:	6579      	str	r1, [r7, #84]	@ 0x54
9000cc40:	e5c8      	b.n	9000c7d4 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc42:	4863      	ldr	r0, [pc, #396]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cc44:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cc46:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cc4a:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cc4c:	2d00      	cmp	r5, #0
9000cc4e:	f040 809f 	bne.w	9000cd90 <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000cc52:	4f5f      	ldr	r7, [pc, #380]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cc54:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000cc58:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cc5a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000cc5e:	4301      	orrs	r1, r0
9000cc60:	6579      	str	r1, [r7, #84]	@ 0x54
9000cc62:	e6cc      	b.n	9000c9fe <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000cc64:	4f5b      	ldr	r7, [pc, #364]	@ (9000cdd4 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000cc66:	683b      	ldr	r3, [r7, #0]
9000cc68:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000cc6c:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000cc6e:	f7fb f8e3 	bl	90007e38 <HAL_GetTick>
9000cc72:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cc74:	e006      	b.n	9000cc84 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000cc76:	f7fb f8df 	bl	90007e38 <HAL_GetTick>
9000cc7a:	eba0 0008 	sub.w	r0, r0, r8
9000cc7e:	2864      	cmp	r0, #100	@ 0x64
9000cc80:	f200 82db 	bhi.w	9000d23a <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cc84:	683b      	ldr	r3, [r7, #0]
9000cc86:	05da      	lsls	r2, r3, #23
9000cc88:	d5f5      	bpl.n	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000cc8a:	2d00      	cmp	r5, #0
9000cc8c:	f040 82d6 	bne.w	9000d23c <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000cc90:	4a4f      	ldr	r2, [pc, #316]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cc92:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000cc96:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000cc98:	4059      	eors	r1, r3
9000cc9a:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000cc9e:	d00b      	beq.n	9000ccb8 <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000cca0:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000cca2:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000cca4:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000cca8:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000ccac:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000ccae:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000ccb0:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000ccb4:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000ccb6:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000ccb8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000ccbc:	f000 82fb 	beq.w	9000d2b6 <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ccc0:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000ccc4:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000ccc8:	f000 8309 	beq.w	9000d2de <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000cccc:	4940      	ldr	r1, [pc, #256]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ccce:	690a      	ldr	r2, [r1, #16]
9000ccd0:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000ccd4:	610a      	str	r2, [r1, #16]
9000ccd6:	483e      	ldr	r0, [pc, #248]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ccd8:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000ccdc:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000ccde:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cce0:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000cce4:	6701      	str	r1, [r0, #112]	@ 0x70
9000cce6:	e543      	b.n	9000c770 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cce8:	4839      	ldr	r0, [pc, #228]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ccea:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ccec:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ccf0:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000ccf2:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000ccf4:	2d00      	cmp	r5, #0
9000ccf6:	f040 8177 	bne.w	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000ccfa:	4f35      	ldr	r7, [pc, #212]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ccfc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000ccfe:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cd00:	f021 0107 	bic.w	r1, r1, #7
9000cd04:	4301      	orrs	r1, r0
9000cd06:	6539      	str	r1, [r7, #80]	@ 0x50
9000cd08:	f7ff bbf6 	b.w	9000c4f8 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd0c:	4930      	ldr	r1, [pc, #192]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd0e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd10:	f001 0103 	and.w	r1, r1, #3
9000cd14:	2903      	cmp	r1, #3
9000cd16:	f000 82ba 	beq.w	9000d28e <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000cd1a:	2102      	movs	r1, #2
9000cd1c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cd20:	f7ff fb3e 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000cd24:	2800      	cmp	r0, #0
9000cd26:	f000 82b5 	beq.w	9000d294 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cd2a:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000cd2e:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cd30:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cd34:	e616      	b.n	9000c964 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd36:	4926      	ldr	r1, [pc, #152]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd38:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd3a:	f001 0103 	and.w	r1, r1, #3
9000cd3e:	2903      	cmp	r1, #3
9000cd40:	f000 82a2 	beq.w	9000d288 <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000cd44:	2102      	movs	r1, #2
9000cd46:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cd4a:	f7ff fb29 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000cd4e:	2800      	cmp	r0, #0
9000cd50:	f040 82a6 	bne.w	9000d2a0 <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000cd54:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000cd58:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cd5c:	e610      	b.n	9000c980 <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cd5e:	481c      	ldr	r0, [pc, #112]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd60:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cd62:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cd66:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cd68:	2d00      	cmp	r5, #0
9000cd6a:	f43f ae64 	beq.w	9000ca36 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000cd6e:	462e      	mov	r6, r5
9000cd70:	e668      	b.n	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cd72:	4f17      	ldr	r7, [pc, #92]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd74:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000cd76:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000cd7a:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cd7c:	2d00      	cmp	r5, #0
9000cd7e:	f47f ae76 	bne.w	9000ca6e <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000cd82:	4d13      	ldr	r5, [pc, #76]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd84:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000cd86:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000cd8a:	4301      	orrs	r1, r0
9000cd8c:	6569      	str	r1, [r5, #84]	@ 0x54
9000cd8e:	e66d      	b.n	9000ca6c <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000cd90:	462e      	mov	r6, r5
9000cd92:	e634      	b.n	9000c9fe <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000cd94:	462e      	mov	r6, r5
9000cd96:	e4d0      	b.n	9000c73a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000cd98:	462e      	mov	r6, r5
9000cd9a:	e445      	b.n	9000c628 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000cd9c:	4f0c      	ldr	r7, [pc, #48]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cd9e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000cda0:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000cda2:	f021 0103 	bic.w	r1, r1, #3
9000cda6:	4301      	orrs	r1, r0
9000cda8:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000cdaa:	e4de      	b.n	9000c76a <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000cdac:	4f08      	ldr	r7, [pc, #32]	@ (9000cdd0 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000cdae:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000cdb0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cdb2:	f021 0107 	bic.w	r1, r1, #7
9000cdb6:	4301      	orrs	r1, r0
9000cdb8:	6579      	str	r1, [r7, #84]	@ 0x54
9000cdba:	e52c      	b.n	9000c816 <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000cdbc:	462e      	mov	r6, r5
9000cdbe:	e577      	b.n	9000c8b0 <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000cdc0:	462e      	mov	r6, r5
9000cdc2:	e4aa      	b.n	9000c71a <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000cdc4:	462e      	mov	r6, r5
9000cdc6:	e59c      	b.n	9000c902 <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000cdc8:	462e      	mov	r6, r5
9000cdca:	e606      	b.n	9000c9da <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000cdcc:	462e      	mov	r6, r5
9000cdce:	e5c1      	b.n	9000c954 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000cdd0:	58024400 	.word	0x58024400
9000cdd4:	58024800 	.word	0x58024800
      status = ret;
9000cdd8:	462e      	mov	r6, r5
9000cdda:	e475      	b.n	9000c6c8 <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000cddc:	462e      	mov	r6, r5
9000cdde:	e4f9      	b.n	9000c7d4 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000cde0:	4fc2      	ldr	r7, [pc, #776]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cde2:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000cde6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cde8:	f021 0107 	bic.w	r1, r1, #7
9000cdec:	4301      	orrs	r1, r0
9000cdee:	65b9      	str	r1, [r7, #88]	@ 0x58
9000cdf0:	e535      	b.n	9000c85e <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000cdf2:	2900      	cmp	r1, #0
9000cdf4:	f47f aef3 	bne.w	9000cbde <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000cdf8:	e7c0      	b.n	9000cd7c <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cdfa:	49bc      	ldr	r1, [pc, #752]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cdfc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cdfe:	f001 0103 	and.w	r1, r1, #3
9000ce02:	2903      	cmp	r1, #3
9000ce04:	f000 8194 	beq.w	9000d130 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000ce08:	2102      	movs	r1, #2
9000ce0a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce0e:	f7ff fac7 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000ce12:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ce14:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce18:	2d00      	cmp	r5, #0
9000ce1a:	d1cf      	bne.n	9000cdbc <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000ce1c:	e540      	b.n	9000c8a0 <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce1e:	49b3      	ldr	r1, [pc, #716]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ce20:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce22:	f001 0103 	and.w	r1, r1, #3
9000ce26:	2903      	cmp	r1, #3
9000ce28:	f000 81ba 	beq.w	9000d1a0 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000ce2c:	2102      	movs	r1, #2
9000ce2e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce32:	f7ff fab5 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000ce36:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ce38:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce3c:	2d00      	cmp	r5, #0
9000ce3e:	d1c1      	bne.n	9000cdc4 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000ce40:	e557      	b.n	9000c8f2 <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce42:	49aa      	ldr	r1, [pc, #680]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ce44:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce46:	f001 0103 	and.w	r1, r1, #3
9000ce4a:	2903      	cmp	r1, #3
9000ce4c:	f000 818c 	beq.w	9000d168 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000ce50:	2102      	movs	r1, #2
9000ce52:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce56:	f7ff faa3 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000ce5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ce5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce60:	2d00      	cmp	r5, #0
9000ce62:	d1b3      	bne.n	9000cdcc <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000ce64:	e56e      	b.n	9000c944 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce66:	49a1      	ldr	r1, [pc, #644]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ce68:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce6a:	f001 0103 	and.w	r1, r1, #3
9000ce6e:	2903      	cmp	r1, #3
9000ce70:	f000 81df 	beq.w	9000d232 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000ce74:	2102      	movs	r1, #2
9000ce76:	f104 0008 	add.w	r0, r4, #8
9000ce7a:	f7ff fa21 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000ce7e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ce80:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce84:	2d00      	cmp	r5, #0
9000ce86:	d187      	bne.n	9000cd98 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000ce88:	f7ff bbc7 	b.w	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce8c:	4997      	ldr	r1, [pc, #604]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ce8e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce90:	f001 0103 	and.w	r1, r1, #3
9000ce94:	2903      	cmp	r1, #3
9000ce96:	f000 820a 	beq.w	9000d2ae <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000ce9a:	2102      	movs	r1, #2
9000ce9c:	f104 0008 	add.w	r0, r4, #8
9000cea0:	f7ff fa0e 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000cea4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cea6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ceaa:	2d00      	cmp	r5, #0
9000ceac:	f47f ac5c 	bne.w	9000c768 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000ceb0:	e774      	b.n	9000cd9c <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ceb2:	498e      	ldr	r1, [pc, #568]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ceb4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ceb6:	f001 0103 	and.w	r1, r1, #3
9000ceba:	2903      	cmp	r1, #3
9000cebc:	f000 8146 	beq.w	9000d14c <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000cec0:	2101      	movs	r1, #1
9000cec2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cec6:	f7ff fa6b 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000ceca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cecc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ced0:	2d00      	cmp	r5, #0
9000ced2:	d181      	bne.n	9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000ced4:	f7ff bbf1 	b.w	9000c6ba <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ced8:	4984      	ldr	r1, [pc, #528]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ceda:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cedc:	f001 0103 	and.w	r1, r1, #3
9000cee0:	2903      	cmp	r1, #3
9000cee2:	f43f ad8a 	beq.w	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000cee6:	2101      	movs	r1, #1
9000cee8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ceec:	f7ff fa58 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000cef0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000cef2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cef6:	2d00      	cmp	r5, #0
9000cef8:	f47f af4a 	bne.w	9000cd90 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000cefc:	e6a9      	b.n	9000cc52 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cefe:	497b      	ldr	r1, [pc, #492]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf00:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf02:	f001 0103 	and.w	r1, r1, #3
9000cf06:	2903      	cmp	r1, #3
9000cf08:	f43f ae7e 	beq.w	9000cc08 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000cf0c:	2102      	movs	r1, #2
9000cf0e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cf12:	f7ff fa45 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000cf16:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000cf18:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf1c:	2d00      	cmp	r5, #0
9000cf1e:	f47f af53 	bne.w	9000cdc8 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000cf22:	e552      	b.n	9000c9ca <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf24:	4971      	ldr	r1, [pc, #452]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf26:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf28:	f001 0103 	and.w	r1, r1, #3
9000cf2c:	2903      	cmp	r1, #3
9000cf2e:	f000 8129 	beq.w	9000d184 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000cf32:	2101      	movs	r1, #1
9000cf34:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cf38:	f7ff fa32 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000cf3c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cf3e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf42:	2d00      	cmp	r5, #0
9000cf44:	f47f af3c 	bne.w	9000cdc0 <HAL_RCCEx_PeriphCLKConfig+0x940>
9000cf48:	f7ff bbdf 	b.w	9000c70a <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cf4c:	4867      	ldr	r0, [pc, #412]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf4e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cf50:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cf54:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cf56:	2d00      	cmp	r5, #0
9000cf58:	f43f ab88 	beq.w	9000c66c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000cf5c:	462e      	mov	r6, r5
9000cf5e:	f7ff bb8c 	b.w	9000c67a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cf62:	4862      	ldr	r0, [pc, #392]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf64:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cf66:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cf6a:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cf6c:	2d00      	cmp	r5, #0
9000cf6e:	f43f ab38 	beq.w	9000c5e2 <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000cf72:	462e      	mov	r6, r5
9000cf74:	f7ff bb3d 	b.w	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf78:	495c      	ldr	r1, [pc, #368]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf7a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf7c:	f001 0103 	and.w	r1, r1, #3
9000cf80:	2903      	cmp	r1, #3
9000cf82:	f000 8125 	beq.w	9000d1d0 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000cf86:	2100      	movs	r1, #0
9000cf88:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cf8c:	f7ff fa08 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000cf90:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cf92:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000cf96:	f7ff bb66 	b.w	9000c666 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf9a:	4954      	ldr	r1, [pc, #336]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cf9c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf9e:	f001 0103 	and.w	r1, r1, #3
9000cfa2:	2903      	cmp	r1, #3
9000cfa4:	f000 813e 	beq.w	9000d224 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000cfa8:	2100      	movs	r1, #0
9000cfaa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cfae:	f7ff f9f7 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000cfb2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cfb4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfb8:	2d00      	cmp	r5, #0
9000cfba:	f43f aabd 	beq.w	9000c538 <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000cfbe:	462e      	mov	r6, r5
9000cfc0:	f7ff bac1 	b.w	9000c546 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfc4:	4949      	ldr	r1, [pc, #292]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cfc6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cfc8:	f001 0103 	and.w	r1, r1, #3
9000cfcc:	2903      	cmp	r1, #3
9000cfce:	f43f aa91 	beq.w	9000c4f4 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000cfd2:	2100      	movs	r1, #0
9000cfd4:	f104 0008 	add.w	r0, r4, #8
9000cfd8:	f7ff f972 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000cfdc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cfde:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfe2:	2d00      	cmp	r5, #0
9000cfe4:	f43f ae89 	beq.w	9000ccfa <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000cfe8:	462e      	mov	r6, r5
9000cfea:	f7ff ba85 	b.w	9000c4f8 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfee:	493f      	ldr	r1, [pc, #252]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cff0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cff2:	f001 0103 	and.w	r1, r1, #3
9000cff6:	2903      	cmp	r1, #3
9000cff8:	f43f aa7c 	beq.w	9000c4f4 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000cffc:	2100      	movs	r1, #0
9000cffe:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d002:	f7ff f9cd 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d006:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d008:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d00c:	e672      	b.n	9000ccf4 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d00e:	4937      	ldr	r1, [pc, #220]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d010:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d012:	f001 0103 	and.w	r1, r1, #3
9000d016:	2903      	cmp	r1, #3
9000d018:	f000 80f9 	beq.w	9000d20e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000d01c:	2100      	movs	r1, #0
9000d01e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d022:	f7ff f9bd 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d026:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d028:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d02c:	2d00      	cmp	r5, #0
9000d02e:	f43f aaad 	beq.w	9000c58c <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000d032:	462e      	mov	r6, r5
9000d034:	f7ff bab2 	b.w	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d038:	492c      	ldr	r1, [pc, #176]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d03a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d03c:	f001 0103 	and.w	r1, r1, #3
9000d040:	2903      	cmp	r1, #3
9000d042:	f000 80d1 	beq.w	9000d1e8 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000d046:	2100      	movs	r1, #0
9000d048:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d04c:	f7ff f9a8 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d050:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d052:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d056:	f7ff bac1 	b.w	9000c5dc <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d05a:	4924      	ldr	r1, [pc, #144]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d05c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d05e:	f001 0103 	and.w	r1, r1, #3
9000d062:	2903      	cmp	r1, #3
9000d064:	f000 80c8 	beq.w	9000d1f8 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000d068:	2102      	movs	r1, #2
9000d06a:	3028      	adds	r0, #40	@ 0x28
9000d06c:	f7ff f998 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d070:	4606      	mov	r6, r0
        break;
9000d072:	f7ff ba28 	b.w	9000c4c6 <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d076:	481d      	ldr	r0, [pc, #116]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d078:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d07a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d07e:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d080:	f7ff ba81 	b.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d084:	4819      	ldr	r0, [pc, #100]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d086:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d088:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d08c:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d08e:	f7ff ba50 	b.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d092:	4d16      	ldr	r5, [pc, #88]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d094:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000d096:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d09a:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d09c:	f7ff ba17 	b.w	9000c4ce <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0a0:	4912      	ldr	r1, [pc, #72]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d0a2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d0a4:	f001 0103 	and.w	r1, r1, #3
9000d0a8:	2903      	cmp	r1, #3
9000d0aa:	f000 80e5 	beq.w	9000d278 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000d0ae:	2101      	movs	r1, #1
9000d0b0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d0b4:	f7ff f974 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d0b8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d0ba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d0be:	2d00      	cmp	r5, #0
9000d0c0:	f47f abcc 	bne.w	9000c85c <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000d0c4:	e68c      	b.n	9000cde0 <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0c6:	4909      	ldr	r1, [pc, #36]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d0c8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d0ca:	f001 0103 	and.w	r1, r1, #3
9000d0ce:	2903      	cmp	r1, #3
9000d0d0:	f000 80d6 	beq.w	9000d280 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000d0d4:	2101      	movs	r1, #1
9000d0d6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d0da:	f7ff f961 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d0de:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d0e0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d0e4:	2d00      	cmp	r5, #0
9000d0e6:	f47f ab95 	bne.w	9000c814 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000d0ea:	e65f      	b.n	9000cdac <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000d0ec:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0f0:	4983      	ldr	r1, [pc, #524]	@ (9000d300 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d0f2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d0f4:	f001 0103 	and.w	r1, r1, #3
9000d0f8:	2903      	cmp	r1, #3
9000d0fa:	f43f ab69 	beq.w	9000c7d0 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000d0fe:	2101      	movs	r1, #1
9000d100:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d104:	f7ff f94c 	bl	9000c3a0 <RCCEx_PLL3_Config.part.0>
9000d108:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d10a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d10e:	2d00      	cmp	r5, #0
9000d110:	f47f ae64 	bne.w	9000cddc <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000d114:	e58d      	b.n	9000cc32 <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000d116:	2001      	movs	r0, #1
}
9000d118:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d11c:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d120:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d124:	f43f abb9 	beq.w	9000c89a <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000d128:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d12c:	f43f abb5 	beq.w	9000c89a <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000d130:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d132:	4635      	mov	r5, r6
9000d134:	f7ff bbbc 	b.w	9000c8b0 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d138:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000d13c:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000d140:	f43f aab8 	beq.w	9000c6b4 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000d144:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000d148:	f43f aab4 	beq.w	9000c6b4 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000d14c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d14e:	4635      	mov	r5, r6
9000d150:	f7ff baba 	b.w	9000c6c8 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d154:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000d158:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d15c:	f43f abef 	beq.w	9000c93e <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000d160:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000d164:	f43f abeb 	beq.w	9000c93e <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000d168:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d16a:	4635      	mov	r5, r6
9000d16c:	f7ff bbf2 	b.w	9000c954 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d170:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d174:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d178:	f43f aac4 	beq.w	9000c704 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000d17c:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d180:	f43f aac0 	beq.w	9000c704 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000d184:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d186:	4635      	mov	r5, r6
9000d188:	f7ff bac7 	b.w	9000c71a <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d18c:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000d190:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000d194:	f43f abaa 	beq.w	9000c8ec <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000d198:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000d19c:	f43f aba6 	beq.w	9000c8ec <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000d1a0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d1a2:	4635      	mov	r5, r6
9000d1a4:	f7ff bbad 	b.w	9000c902 <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000d1a8:	2501      	movs	r5, #1
9000d1aa:	e4e2      	b.n	9000cb72 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d1ac:	0691      	lsls	r1, r2, #26
9000d1ae:	d5b2      	bpl.n	9000d116 <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000d1b0:	2501      	movs	r5, #1
9000d1b2:	e4f2      	b.n	9000cb9a <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000d1b4:	2501      	movs	r5, #1
9000d1b6:	e4a9      	b.n	9000cb0c <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000d1b8:	2501      	movs	r5, #1
9000d1ba:	e4b8      	b.n	9000cb2e <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000d1bc:	2501      	movs	r5, #1
9000d1be:	e4c7      	b.n	9000cb50 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d1c0:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000d1c4:	f43f aa4f 	beq.w	9000c666 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000d1c8:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000d1cc:	f43f aa4b 	beq.w	9000c666 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000d1d0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d1d2:	4635      	mov	r5, r6
9000d1d4:	f7ff ba51 	b.w	9000c67a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d1d8:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000d1dc:	f43f a9fe 	beq.w	9000c5dc <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000d1e0:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000d1e4:	f43f a9fa 	beq.w	9000c5dc <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000d1e8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d1ea:	4635      	mov	r5, r6
9000d1ec:	f7ff ba01 	b.w	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d1f0:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d1f4:	f43f a96b 	beq.w	9000c4ce <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000d1f8:	2601      	movs	r6, #1
9000d1fa:	f7ff b96f 	b.w	9000c4dc <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d1fe:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000d202:	f43f a9c0 	beq.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x106>
9000d206:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000d20a:	f43f a9bc 	beq.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000d20e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d210:	4635      	mov	r5, r6
9000d212:	f7ff b9c3 	b.w	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000d216:	29c0      	cmp	r1, #192	@ 0xc0
9000d218:	f43f a98b 	beq.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000d21c:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d220:	f43f a987 	beq.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000d224:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d226:	4635      	mov	r5, r6
9000d228:	f7ff b98d 	b.w	9000c546 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000d22c:	2930      	cmp	r1, #48	@ 0x30
9000d22e:	f43f a9f1 	beq.w	9000c614 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000d232:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d234:	4635      	mov	r5, r6
9000d236:	f7ff b9f7 	b.w	9000c628 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000d23a:	2503      	movs	r5, #3
      status = ret;
9000d23c:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d23e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d242:	f7ff ba95 	b.w	9000c770 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d246:	6863      	ldr	r3, [r4, #4]
9000d248:	069a      	lsls	r2, r3, #26
9000d24a:	f57f af64 	bpl.w	9000d116 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000d24e:	4605      	mov	r5, r0
9000d250:	e4a3      	b.n	9000cb9a <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d252:	492b      	ldr	r1, [pc, #172]	@ (9000d300 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d254:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d256:	f001 0103 	and.w	r1, r1, #3
9000d25a:	2903      	cmp	r1, #3
9000d25c:	f43f aa6b 	beq.w	9000c736 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000d260:	2101      	movs	r1, #1
9000d262:	f104 0008 	add.w	r0, r4, #8
9000d266:	f7ff f82b 	bl	9000c2c0 <RCCEx_PLL2_Config.part.0>
9000d26a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d26c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d270:	2d00      	cmp	r5, #0
9000d272:	f47f ad8f 	bne.w	9000cd94 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000d276:	e4bf      	b.n	9000cbf8 <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000d278:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d27a:	4635      	mov	r5, r6
9000d27c:	f7ff baef 	b.w	9000c85e <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000d280:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d282:	4635      	mov	r5, r6
9000d284:	f7ff bac7 	b.w	9000c816 <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000d288:	2601      	movs	r6, #1
9000d28a:	f7ff bb79 	b.w	9000c980 <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000d28e:	2601      	movs	r6, #1
9000d290:	f7ff bb68 	b.w	9000c964 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d294:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d298:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d29c:	f7ff bb62 	b.w	9000c964 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d2a0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000d2a4:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d2a6:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d2aa:	f7ff bb69 	b.w	9000c980 <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000d2ae:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d2b0:	4635      	mov	r5, r6
9000d2b2:	f7ff ba5a 	b.w	9000c76a <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000d2b6:	f7fa fdbf 	bl	90007e38 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d2ba:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000d300 <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000d2be:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d2c0:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d2c4:	e004      	b.n	9000d2d0 <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d2c6:	f7fa fdb7 	bl	90007e38 <HAL_GetTick>
9000d2ca:	1bc0      	subs	r0, r0, r7
9000d2cc:	4548      	cmp	r0, r9
9000d2ce:	d810      	bhi.n	9000d2f2 <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d2d0:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000d2d4:	079b      	lsls	r3, r3, #30
9000d2d6:	d5f6      	bpl.n	9000d2c6 <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d2d8:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d2dc:	e4f0      	b.n	9000ccc0 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000d2de:	4808      	ldr	r0, [pc, #32]	@ (9000d300 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d2e0:	4a08      	ldr	r2, [pc, #32]	@ (9000d304 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000d2e2:	6901      	ldr	r1, [r0, #16]
9000d2e4:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d2e8:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000d2ec:	430a      	orrs	r2, r1
9000d2ee:	6102      	str	r2, [r0, #16]
9000d2f0:	e4f1      	b.n	9000ccd6 <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000d2f2:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d2f4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d2f8:	4635      	mov	r5, r6
9000d2fa:	f7ff ba39 	b.w	9000c770 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000d2fe:	bf00      	nop
9000d300:	58024400 	.word	0x58024400
9000d304:	00ffffcf 	.word	0x00ffffcf

9000d308 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000d308:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000d30a:	f7fe fedd 	bl	9000c0c8 <HAL_RCC_GetHCLKFreq>
9000d30e:	4b05      	ldr	r3, [pc, #20]	@ (9000d324 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000d310:	4a05      	ldr	r2, [pc, #20]	@ (9000d328 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000d312:	6a1b      	ldr	r3, [r3, #32]
9000d314:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000d318:	5cd3      	ldrb	r3, [r2, r3]
9000d31a:	f003 031f 	and.w	r3, r3, #31
}
9000d31e:	40d8      	lsrs	r0, r3
9000d320:	bd08      	pop	{r3, pc}
9000d322:	bf00      	nop
9000d324:	58024400 	.word	0x58024400
9000d328:	9002e238 	.word	0x9002e238

9000d32c <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d32c:	4a47      	ldr	r2, [pc, #284]	@ (9000d44c <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000d32e:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d330:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d332:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d334:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000d336:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d33a:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d33e:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000d340:	d05b      	beq.n	9000d3fa <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d342:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d346:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d34a:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d34e:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d352:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000d356:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d358:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d35c:	ee06 1a90 	vmov	s13, r1
9000d360:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000d364:	d003      	beq.n	9000d36e <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000d366:	2c02      	cmp	r4, #2
9000d368:	d06a      	beq.n	9000d440 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000d36a:	2c00      	cmp	r4, #0
9000d36c:	d04a      	beq.n	9000d404 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d36e:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000d450 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000d372:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000d376:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d378:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d37c:	ee07 3a90 	vmov	s15, r3
9000d380:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000d384:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d388:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000d38c:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000d390:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000d394:	4a2d      	ldr	r2, [pc, #180]	@ (9000d44c <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000d396:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000d39a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d39c:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d3a0:	ee07 3a10 	vmov	s14, r3
9000d3a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000d3a8:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000d3aa:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d3ae:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d3b2:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d3b6:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000d3ba:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d3bc:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000d3c0:	ee07 3a10 	vmov	s14, r3
9000d3c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000d3c8:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d3cc:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d3d0:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d3d4:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000d3d8:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d3da:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000d3de:	ee06 3a90 	vmov	s13, r3
9000d3e2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d3e6:	ee76 6a86 	vadd.f32	s13, s13, s12
9000d3ea:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000d3ee:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000d3f2:	ee17 3a90 	vmov	r3, s15
9000d3f6:	6083      	str	r3, [r0, #8]
}
9000d3f8:	4770      	bx	lr
9000d3fa:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000d3fc:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000d400:	6083      	str	r3, [r0, #8]
}
9000d402:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d404:	6813      	ldr	r3, [r2, #0]
9000d406:	069b      	lsls	r3, r3, #26
9000d408:	d51d      	bpl.n	9000d446 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d40a:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d40c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000d410:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d412:	4910      	ldr	r1, [pc, #64]	@ (9000d454 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000d414:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d418:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d41c:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d41e:	ee07 3a90 	vmov	s15, r3
9000d422:	ee06 1a10 	vmov	s12, r1
9000d426:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d42a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000d42e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000d432:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000d436:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000d43a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000d43e:	e7a9      	b.n	9000d394 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d440:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d458 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000d444:	e795      	b.n	9000d372 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d446:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d45c <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000d44a:	e792      	b.n	9000d372 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000d44c:	58024400 	.word	0x58024400
9000d450:	4a742400 	.word	0x4a742400
9000d454:	03d09000 	.word	0x03d09000
9000d458:	4bbebc20 	.word	0x4bbebc20
9000d45c:	4c742400 	.word	0x4c742400

9000d460 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d460:	4a47      	ldr	r2, [pc, #284]	@ (9000d580 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000d462:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d464:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000d466:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000d468:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000d46a:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000d46e:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000d472:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000d474:	d05b      	beq.n	9000d52e <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000d476:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000d47a:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d47e:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d482:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000d486:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000d48a:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d48c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d490:	ee06 1a90 	vmov	s13, r1
9000d494:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000d498:	d003      	beq.n	9000d4a2 <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000d49a:	2c02      	cmp	r4, #2
9000d49c:	d06a      	beq.n	9000d574 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000d49e:	2c00      	cmp	r4, #0
9000d4a0:	d04a      	beq.n	9000d538 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d4a2:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000d584 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000d4a6:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000d4aa:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000d4ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d4b0:	ee07 3a90 	vmov	s15, r3
9000d4b4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000d4b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d4bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000d4c0:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000d4c4:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000d4c8:	4a2d      	ldr	r2, [pc, #180]	@ (9000d580 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000d4ca:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000d4ce:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000d4d0:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d4d4:	ee07 3a10 	vmov	s14, r3
9000d4d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000d4dc:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000d4de:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d4e2:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d4e6:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d4ea:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000d4ee:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000d4f0:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000d4f4:	ee07 3a10 	vmov	s14, r3
9000d4f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000d4fc:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d500:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d504:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d508:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000d50c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000d50e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000d512:	ee06 3a90 	vmov	s13, r3
9000d516:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d51a:	ee76 6a86 	vadd.f32	s13, s13, s12
9000d51e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000d522:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000d526:	ee17 3a90 	vmov	r3, s15
9000d52a:	6083      	str	r3, [r0, #8]
}
9000d52c:	4770      	bx	lr
9000d52e:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000d530:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000d534:	6083      	str	r3, [r0, #8]
}
9000d536:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d538:	6813      	ldr	r3, [r2, #0]
9000d53a:	069b      	lsls	r3, r3, #26
9000d53c:	d51d      	bpl.n	9000d57a <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d53e:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d540:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000d544:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d546:	4910      	ldr	r1, [pc, #64]	@ (9000d588 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000d548:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d54c:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d550:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d552:	ee07 3a90 	vmov	s15, r3
9000d556:	ee06 1a10 	vmov	s12, r1
9000d55a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d55e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000d562:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000d566:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000d56a:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000d56e:	ee67 7a87 	vmul.f32	s15, s15, s14
9000d572:	e7a9      	b.n	9000d4c8 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d574:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d58c <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000d578:	e795      	b.n	9000d4a6 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000d57a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d590 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000d57e:	e792      	b.n	9000d4a6 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000d580:	58024400 	.word	0x58024400
9000d584:	4a742400 	.word	0x4a742400
9000d588:	03d09000 	.word	0x03d09000
9000d58c:	4bbebc20 	.word	0x4bbebc20
9000d590:	4c742400 	.word	0x4c742400

9000d594 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d594:	b318      	cbz	r0, 9000d5de <HAL_SDRAM_Init+0x4a>
{
9000d596:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d598:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000d59c:	4604      	mov	r4, r0
9000d59e:	460d      	mov	r5, r1
9000d5a0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d5a4:	b1b3      	cbz	r3, 9000d5d4 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d5a6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d5a8:	2302      	movs	r3, #2
9000d5aa:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d5ae:	f851 0b04 	ldr.w	r0, [r1], #4
9000d5b2:	f000 fe29 	bl	9000e208 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d5b6:	6862      	ldr	r2, [r4, #4]
9000d5b8:	4629      	mov	r1, r5
9000d5ba:	6820      	ldr	r0, [r4, #0]
9000d5bc:	f000 fe5a 	bl	9000e274 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d5c0:	4a08      	ldr	r2, [pc, #32]	@ (9000d5e4 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d5c2:	2101      	movs	r1, #1

  return HAL_OK;
9000d5c4:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d5c6:	6813      	ldr	r3, [r2, #0]
9000d5c8:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000d5cc:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d5ce:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000d5d2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d5d4:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d5d8:	f7f7 fd54 	bl	90005084 <HAL_SDRAM_MspInit>
9000d5dc:	e7e3      	b.n	9000d5a6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d5de:	2001      	movs	r0, #1
}
9000d5e0:	4770      	bx	lr
9000d5e2:	bf00      	nop
9000d5e4:	52004000 	.word	0x52004000

9000d5e8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d5e8:	b510      	push	{r4, lr}
9000d5ea:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d5ec:	f7f7 fdc6 	bl	9000517c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d5f0:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d5f4:	f000 fe7c 	bl	9000e2f0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d5f8:	2000      	movs	r0, #0
9000d5fa:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d5fe:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000d602:	bd10      	pop	{r4, pc}

9000d604 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d604:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d606:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d60a:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d60c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d60e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d610:	d004      	beq.n	9000d61c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d612:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000d616:	2c01      	cmp	r4, #1
9000d618:	d001      	beq.n	9000d61e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d61a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d61c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d61e:	2302      	movs	r3, #2
9000d620:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d622:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d624:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d628:	f000 fe76 	bl	9000e318 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d62c:	6833      	ldr	r3, [r6, #0]
9000d62e:	2b02      	cmp	r3, #2
9000d630:	d003      	beq.n	9000d63a <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d632:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000d636:	2000      	movs	r0, #0
}
9000d638:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d63a:	2305      	movs	r3, #5
9000d63c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000d640:	e7f9      	b.n	9000d636 <HAL_SDRAM_SendCommand+0x32>
9000d642:	bf00      	nop

9000d644 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d644:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d646:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d64a:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d64c:	2b02      	cmp	r3, #2
9000d64e:	b2d8      	uxtb	r0, r3
9000d650:	d005      	beq.n	9000d65e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d652:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000d656:	2b01      	cmp	r3, #1
9000d658:	b2dd      	uxtb	r5, r3
9000d65a:	d001      	beq.n	9000d660 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d65c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d65e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d660:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d662:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d664:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d668:	f000 fe70 	bl	9000e34c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d66c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d66e:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000d672:	bd38      	pop	{r3, r4, r5, pc}

9000d674 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d674:	4770      	bx	lr
9000d676:	bf00      	nop

9000d678 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d678:	2800      	cmp	r0, #0
9000d67a:	f000 8095 	beq.w	9000d7a8 <HAL_TIM_Base_Init+0x130>
{
9000d67e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d680:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d684:	4604      	mov	r4, r0
9000d686:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d68a:	2b00      	cmp	r3, #0
9000d68c:	f000 8087 	beq.w	9000d79e <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d690:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d692:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d694:	4945      	ldr	r1, [pc, #276]	@ (9000d7ac <HAL_TIM_Base_Init+0x134>)
9000d696:	4d46      	ldr	r5, [pc, #280]	@ (9000d7b0 <HAL_TIM_Base_Init+0x138>)
9000d698:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000d69c:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000d6a0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d6a4:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000d6a8:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d6aa:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d6ae:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d6b0:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d6b4:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d6b6:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d6ba:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d6bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000d6c0:	d01f      	beq.n	9000d702 <HAL_TIM_Base_Init+0x8a>
9000d6c2:	b9f1      	cbnz	r1, 9000d702 <HAL_TIM_Base_Init+0x8a>
9000d6c4:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000d7c0 <HAL_TIM_Base_Init+0x148>
9000d6c8:	4563      	cmp	r3, ip
9000d6ca:	d050      	beq.n	9000d76e <HAL_TIM_Base_Init+0xf6>
9000d6cc:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d6d0:	4563      	cmp	r3, ip
9000d6d2:	d04c      	beq.n	9000d76e <HAL_TIM_Base_Init+0xf6>
9000d6d4:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d6d8:	4563      	cmp	r3, ip
9000d6da:	d012      	beq.n	9000d702 <HAL_TIM_Base_Init+0x8a>
9000d6dc:	f1be 0f00 	cmp.w	lr, #0
9000d6e0:	d10f      	bne.n	9000d702 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d6e2:	4d34      	ldr	r5, [pc, #208]	@ (9000d7b4 <HAL_TIM_Base_Init+0x13c>)
9000d6e4:	4934      	ldr	r1, [pc, #208]	@ (9000d7b8 <HAL_TIM_Base_Init+0x140>)
9000d6e6:	428b      	cmp	r3, r1
9000d6e8:	bf18      	it	ne
9000d6ea:	42ab      	cmpne	r3, r5
9000d6ec:	d043      	beq.n	9000d776 <HAL_TIM_Base_Init+0xfe>
9000d6ee:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000d6f2:	428b      	cmp	r3, r1
9000d6f4:	d03f      	beq.n	9000d776 <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d6f6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d6fa:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d6fc:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d6fe:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d700:	e014      	b.n	9000d72c <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000d702:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d704:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d708:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000d70c:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d70e:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d710:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000d712:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d716:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d71a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d71e:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d720:	b911      	cbnz	r1, 9000d728 <HAL_TIM_Base_Init+0xb0>
9000d722:	f1be 0f00 	cmp.w	lr, #0
9000d726:	d02f      	beq.n	9000d788 <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d728:	6962      	ldr	r2, [r4, #20]
9000d72a:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d72c:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d72e:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d730:	f041 0104 	orr.w	r1, r1, #4
9000d734:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000d736:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000d738:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000d73a:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d73c:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d740:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000d744:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000d748:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000d74c:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000d750:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000d754:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d758:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000d75c:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000d760:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000d764:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d768:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000d76c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d76e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000d772:	68a1      	ldr	r1, [r4, #8]
9000d774:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d776:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d778:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d77c:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d77e:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000d780:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d782:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d786:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d788:	490c      	ldr	r1, [pc, #48]	@ (9000d7bc <HAL_TIM_Base_Init+0x144>)
9000d78a:	4a0a      	ldr	r2, [pc, #40]	@ (9000d7b4 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d78c:	4293      	cmp	r3, r2
9000d78e:	bf18      	it	ne
9000d790:	428b      	cmpne	r3, r1
9000d792:	d0c9      	beq.n	9000d728 <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d794:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d798:	4293      	cmp	r3, r2
9000d79a:	d0c5      	beq.n	9000d728 <HAL_TIM_Base_Init+0xb0>
9000d79c:	e7c6      	b.n	9000d72c <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000d79e:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d7a2:	f7ff ff67 	bl	9000d674 <HAL_TIM_Base_MspInit>
9000d7a6:	e773      	b.n	9000d690 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000d7a8:	2001      	movs	r0, #1
}
9000d7aa:	4770      	bx	lr
9000d7ac:	40010000 	.word	0x40010000
9000d7b0:	40010400 	.word	0x40010400
9000d7b4:	40014000 	.word	0x40014000
9000d7b8:	40014400 	.word	0x40014400
9000d7bc:	40014800 	.word	0x40014800
9000d7c0:	40000400 	.word	0x40000400

9000d7c4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d7c4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d7c8:	2b01      	cmp	r3, #1
9000d7ca:	d13d      	bne.n	9000d848 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d7cc:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d7ce:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d7d0:	4b1e      	ldr	r3, [pc, #120]	@ (9000d84c <HAL_TIM_Base_Start_IT+0x88>)
9000d7d2:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000d7d6:	bf18      	it	ne
9000d7d8:	429a      	cmpne	r2, r3
{
9000d7da:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d7dc:	bf0c      	ite	eq
9000d7de:	2301      	moveq	r3, #1
9000d7e0:	2300      	movne	r3, #0
9000d7e2:	4d1b      	ldr	r5, [pc, #108]	@ (9000d850 <HAL_TIM_Base_Start_IT+0x8c>)
9000d7e4:	4c1b      	ldr	r4, [pc, #108]	@ (9000d854 <HAL_TIM_Base_Start_IT+0x90>)
9000d7e6:	42aa      	cmp	r2, r5
9000d7e8:	bf08      	it	eq
9000d7ea:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d7ee:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d7f2:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d7f4:	42a2      	cmp	r2, r4
9000d7f6:	bf08      	it	eq
9000d7f8:	f043 0301 	orreq.w	r3, r3, #1
9000d7fc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d800:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d804:	4814      	ldr	r0, [pc, #80]	@ (9000d858 <HAL_TIM_Base_Start_IT+0x94>)
9000d806:	42a2      	cmp	r2, r4
9000d808:	bf08      	it	eq
9000d80a:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d80e:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d810:	4282      	cmp	r2, r0
9000d812:	bf08      	it	eq
9000d814:	f043 0301 	orreq.w	r3, r3, #1
9000d818:	4910      	ldr	r1, [pc, #64]	@ (9000d85c <HAL_TIM_Base_Start_IT+0x98>)
9000d81a:	428a      	cmp	r2, r1
9000d81c:	bf08      	it	eq
9000d81e:	f043 0301 	orreq.w	r3, r3, #1
9000d822:	b913      	cbnz	r3, 9000d82a <HAL_TIM_Base_Start_IT+0x66>
9000d824:	4b0e      	ldr	r3, [pc, #56]	@ (9000d860 <HAL_TIM_Base_Start_IT+0x9c>)
9000d826:	429a      	cmp	r2, r3
9000d828:	d107      	bne.n	9000d83a <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d82a:	6891      	ldr	r1, [r2, #8]
9000d82c:	4b0d      	ldr	r3, [pc, #52]	@ (9000d864 <HAL_TIM_Base_Start_IT+0xa0>)
9000d82e:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d830:	2b06      	cmp	r3, #6
9000d832:	d006      	beq.n	9000d842 <HAL_TIM_Base_Start_IT+0x7e>
9000d834:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000d838:	d003      	beq.n	9000d842 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000d83a:	6813      	ldr	r3, [r2, #0]
9000d83c:	f043 0301 	orr.w	r3, r3, #1
9000d840:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000d842:	2000      	movs	r0, #0
}
9000d844:	bc30      	pop	{r4, r5}
9000d846:	4770      	bx	lr
    return HAL_ERROR;
9000d848:	2001      	movs	r0, #1
}
9000d84a:	4770      	bx	lr
9000d84c:	40010000 	.word	0x40010000
9000d850:	40000400 	.word	0x40000400
9000d854:	40000800 	.word	0x40000800
9000d858:	40010400 	.word	0x40010400
9000d85c:	40001800 	.word	0x40001800
9000d860:	40014000 	.word	0x40014000
9000d864:	00010007 	.word	0x00010007

9000d868 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000d868:	4770      	bx	lr
9000d86a:	bf00      	nop

9000d86c <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000d86c:	4770      	bx	lr
9000d86e:	bf00      	nop

9000d870 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000d870:	4770      	bx	lr
9000d872:	bf00      	nop

9000d874 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000d874:	4770      	bx	lr
9000d876:	bf00      	nop

9000d878 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000d878:	6803      	ldr	r3, [r0, #0]
{
9000d87a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000d87c:	68de      	ldr	r6, [r3, #12]
{
9000d87e:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000d880:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000d882:	07aa      	lsls	r2, r5, #30
9000d884:	d501      	bpl.n	9000d88a <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000d886:	07b1      	lsls	r1, r6, #30
9000d888:	d452      	bmi.n	9000d930 <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000d88a:	076b      	lsls	r3, r5, #29
9000d88c:	d501      	bpl.n	9000d892 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000d88e:	0770      	lsls	r0, r6, #29
9000d890:	d43b      	bmi.n	9000d90a <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000d892:	0729      	lsls	r1, r5, #28
9000d894:	d501      	bpl.n	9000d89a <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000d896:	0732      	lsls	r2, r6, #28
9000d898:	d425      	bmi.n	9000d8e6 <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000d89a:	06e8      	lsls	r0, r5, #27
9000d89c:	d501      	bpl.n	9000d8a2 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000d89e:	06f1      	lsls	r1, r6, #27
9000d8a0:	d411      	bmi.n	9000d8c6 <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000d8a2:	07ea      	lsls	r2, r5, #31
9000d8a4:	d501      	bpl.n	9000d8aa <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000d8a6:	07f3      	lsls	r3, r6, #31
9000d8a8:	d464      	bmi.n	9000d974 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d8aa:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000d8ae:	d04c      	beq.n	9000d94a <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d8b0:	0630      	lsls	r0, r6, #24
9000d8b2:	d467      	bmi.n	9000d984 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000d8b4:	0668      	lsls	r0, r5, #25
9000d8b6:	d501      	bpl.n	9000d8bc <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000d8b8:	0671      	lsls	r1, r6, #25
9000d8ba:	d46d      	bmi.n	9000d998 <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000d8bc:	06aa      	lsls	r2, r5, #26
9000d8be:	d501      	bpl.n	9000d8c4 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000d8c0:	06b3      	lsls	r3, r6, #26
9000d8c2:	d44e      	bmi.n	9000d962 <HAL_TIM_IRQHandler+0xea>
}
9000d8c4:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d8c6:	6823      	ldr	r3, [r4, #0]
9000d8c8:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000d8cc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d8ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d8d0:	2208      	movs	r2, #8
9000d8d2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000d8d4:	69db      	ldr	r3, [r3, #28]
9000d8d6:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d8da:	d071      	beq.n	9000d9c0 <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000d8dc:	f7ff ffc6 	bl	9000d86c <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d8e0:	2300      	movs	r3, #0
9000d8e2:	7723      	strb	r3, [r4, #28]
9000d8e4:	e7dd      	b.n	9000d8a2 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d8e6:	6823      	ldr	r3, [r4, #0]
9000d8e8:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000d8ec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d8ee:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d8f0:	2204      	movs	r2, #4
9000d8f2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000d8f4:	69db      	ldr	r3, [r3, #28]
9000d8f6:	079b      	lsls	r3, r3, #30
9000d8f8:	d15f      	bne.n	9000d9ba <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d8fa:	f7ff ffb5 	bl	9000d868 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d8fe:	4620      	mov	r0, r4
9000d900:	f7ff ffb6 	bl	9000d870 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d904:	2300      	movs	r3, #0
9000d906:	7723      	strb	r3, [r4, #28]
9000d908:	e7c7      	b.n	9000d89a <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d90a:	6823      	ldr	r3, [r4, #0]
9000d90c:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000d910:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d912:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d914:	2202      	movs	r2, #2
9000d916:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000d918:	699b      	ldr	r3, [r3, #24]
9000d91a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d91e:	d149      	bne.n	9000d9b4 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d920:	f7ff ffa2 	bl	9000d868 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d924:	4620      	mov	r0, r4
9000d926:	f7ff ffa3 	bl	9000d870 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d92a:	2300      	movs	r3, #0
9000d92c:	7723      	strb	r3, [r4, #28]
9000d92e:	e7b0      	b.n	9000d892 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000d930:	f06f 0202 	mvn.w	r2, #2
9000d934:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d936:	2201      	movs	r2, #1
9000d938:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000d93a:	699b      	ldr	r3, [r3, #24]
9000d93c:	079a      	lsls	r2, r3, #30
9000d93e:	d033      	beq.n	9000d9a8 <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000d940:	f7ff ff94 	bl	9000d86c <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d944:	2300      	movs	r3, #0
9000d946:	7723      	strb	r3, [r4, #28]
9000d948:	e79f      	b.n	9000d88a <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d94a:	05ea      	lsls	r2, r5, #23
9000d94c:	d5b2      	bpl.n	9000d8b4 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d94e:	0633      	lsls	r3, r6, #24
9000d950:	d5b0      	bpl.n	9000d8b4 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d952:	6823      	ldr	r3, [r4, #0]
9000d954:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000d958:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d95a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000d95c:	f000 f83a 	bl	9000d9d4 <HAL_TIMEx_Break2Callback>
9000d960:	e7a8      	b.n	9000d8b4 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d962:	6823      	ldr	r3, [r4, #0]
9000d964:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000d968:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d96a:	611a      	str	r2, [r3, #16]
}
9000d96c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000d970:	f000 b82c 	b.w	9000d9cc <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d974:	6823      	ldr	r3, [r4, #0]
9000d976:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000d97a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d97c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000d97e:	f7f6 fba1 	bl	900040c4 <HAL_TIM_PeriodElapsedCallback>
9000d982:	e792      	b.n	9000d8aa <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d984:	6823      	ldr	r3, [r4, #0]
9000d986:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000d98a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d98c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000d98e:	f000 f81f 	bl	9000d9d0 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d992:	05e9      	lsls	r1, r5, #23
9000d994:	d58e      	bpl.n	9000d8b4 <HAL_TIM_IRQHandler+0x3c>
9000d996:	e7dc      	b.n	9000d952 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d998:	6823      	ldr	r3, [r4, #0]
9000d99a:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000d99e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d9a0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000d9a2:	f7ff ff67 	bl	9000d874 <HAL_TIM_TriggerCallback>
9000d9a6:	e789      	b.n	9000d8bc <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000d9a8:	f7ff ff5e 	bl	9000d868 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d9ac:	4620      	mov	r0, r4
9000d9ae:	f7ff ff5f 	bl	9000d870 <HAL_TIM_PWM_PulseFinishedCallback>
9000d9b2:	e7c7      	b.n	9000d944 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000d9b4:	f7ff ff5a 	bl	9000d86c <HAL_TIM_IC_CaptureCallback>
9000d9b8:	e7b7      	b.n	9000d92a <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000d9ba:	f7ff ff57 	bl	9000d86c <HAL_TIM_IC_CaptureCallback>
9000d9be:	e7a1      	b.n	9000d904 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d9c0:	f7ff ff52 	bl	9000d868 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d9c4:	4620      	mov	r0, r4
9000d9c6:	f7ff ff53 	bl	9000d870 <HAL_TIM_PWM_PulseFinishedCallback>
9000d9ca:	e789      	b.n	9000d8e0 <HAL_TIM_IRQHandler+0x68>

9000d9cc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000d9cc:	4770      	bx	lr
9000d9ce:	bf00      	nop

9000d9d0 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000d9d0:	4770      	bx	lr
9000d9d2:	bf00      	nop

9000d9d4 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000d9d4:	4770      	bx	lr
9000d9d6:	bf00      	nop

9000d9d8 <UART_SetConfig>:
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d9d8:	6901      	ldr	r1, [r0, #16]
9000d9da:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9dc:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d9de:	430a      	orrs	r2, r1
{
9000d9e0:	b570      	push	{r4, r5, r6, lr}
9000d9e2:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9e4:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d9e6:	69c0      	ldr	r0, [r0, #28]
{
9000d9e8:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d9ea:	6961      	ldr	r1, [r4, #20]
9000d9ec:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9ee:	49a0      	ldr	r1, [pc, #640]	@ (9000dc70 <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d9f0:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9f2:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d9f4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9f6:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d9f8:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d9fa:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d9fc:	685a      	ldr	r2, [r3, #4]
9000d9fe:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000da02:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000da04:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000da06:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000da08:	4a9a      	ldr	r2, [pc, #616]	@ (9000dc74 <UART_SetConfig+0x29c>)
9000da0a:	4293      	cmp	r3, r2
9000da0c:	f000 8119 	beq.w	9000dc42 <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000da10:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000da12:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000da14:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000da16:	4a98      	ldr	r2, [pc, #608]	@ (9000dc78 <UART_SetConfig+0x2a0>)
9000da18:	4032      	ands	r2, r6
9000da1a:	4311      	orrs	r1, r2
9000da1c:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000da1e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000da20:	f022 020f 	bic.w	r2, r2, #15
9000da24:	432a      	orrs	r2, r5
9000da26:	62da      	str	r2, [r3, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
9000da28:	4a94      	ldr	r2, [pc, #592]	@ (9000dc7c <UART_SetConfig+0x2a4>)
9000da2a:	4293      	cmp	r3, r2
9000da2c:	d028      	beq.n	9000da80 <UART_SetConfig+0xa8>
9000da2e:	4a94      	ldr	r2, [pc, #592]	@ (9000dc80 <UART_SetConfig+0x2a8>)
9000da30:	4293      	cmp	r3, r2
9000da32:	d01a      	beq.n	9000da6a <UART_SetConfig+0x92>
9000da34:	4a93      	ldr	r2, [pc, #588]	@ (9000dc84 <UART_SetConfig+0x2ac>)
9000da36:	4293      	cmp	r3, r2
9000da38:	d017      	beq.n	9000da6a <UART_SetConfig+0x92>
9000da3a:	4a93      	ldr	r2, [pc, #588]	@ (9000dc88 <UART_SetConfig+0x2b0>)
9000da3c:	4293      	cmp	r3, r2
9000da3e:	d014      	beq.n	9000da6a <UART_SetConfig+0x92>
9000da40:	4a92      	ldr	r2, [pc, #584]	@ (9000dc8c <UART_SetConfig+0x2b4>)
9000da42:	4293      	cmp	r3, r2
9000da44:	d011      	beq.n	9000da6a <UART_SetConfig+0x92>
9000da46:	4a92      	ldr	r2, [pc, #584]	@ (9000dc90 <UART_SetConfig+0x2b8>)
9000da48:	4293      	cmp	r3, r2
9000da4a:	d019      	beq.n	9000da80 <UART_SetConfig+0xa8>
9000da4c:	4a91      	ldr	r2, [pc, #580]	@ (9000dc94 <UART_SetConfig+0x2bc>)
9000da4e:	4293      	cmp	r3, r2
9000da50:	d00b      	beq.n	9000da6a <UART_SetConfig+0x92>
9000da52:	4a91      	ldr	r2, [pc, #580]	@ (9000dc98 <UART_SetConfig+0x2c0>)
9000da54:	4293      	cmp	r3, r2
9000da56:	d008      	beq.n	9000da6a <UART_SetConfig+0x92>

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
      {
        ret = HAL_ERROR;
9000da58:	2001      	movs	r0, #1
  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
9000da5a:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000da5c:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000da60:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000da62:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000da64:	67a3      	str	r3, [r4, #120]	@ 0x78

  return ret;
}
9000da66:	b006      	add	sp, #24
9000da68:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000da6a:	4b8c      	ldr	r3, [pc, #560]	@ (9000dc9c <UART_SetConfig+0x2c4>)
9000da6c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000da6e:	f003 0307 	and.w	r3, r3, #7
9000da72:	2b05      	cmp	r3, #5
9000da74:	d8f0      	bhi.n	9000da58 <UART_SetConfig+0x80>
9000da76:	e8df f003 	tbb	[pc, r3]
9000da7a:	7e9e      	.short	0x7e9e
9000da7c:	785f9189 	.word	0x785f9189
9000da80:	4b86      	ldr	r3, [pc, #536]	@ (9000dc9c <UART_SetConfig+0x2c4>)
9000da82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000da84:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000da88:	2b28      	cmp	r3, #40	@ 0x28
9000da8a:	d8e5      	bhi.n	9000da58 <UART_SetConfig+0x80>
9000da8c:	a201      	add	r2, pc, #4	@ (adr r2, 9000da94 <UART_SetConfig+0xbc>)
9000da8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000da92:	bf00      	nop
9000da94:	9000dc11 	.word	0x9000dc11
9000da98:	9000da59 	.word	0x9000da59
9000da9c:	9000da59 	.word	0x9000da59
9000daa0:	9000da59 	.word	0x9000da59
9000daa4:	9000da59 	.word	0x9000da59
9000daa8:	9000da59 	.word	0x9000da59
9000daac:	9000da59 	.word	0x9000da59
9000dab0:	9000da59 	.word	0x9000da59
9000dab4:	9000db77 	.word	0x9000db77
9000dab8:	9000da59 	.word	0x9000da59
9000dabc:	9000da59 	.word	0x9000da59
9000dac0:	9000da59 	.word	0x9000da59
9000dac4:	9000da59 	.word	0x9000da59
9000dac8:	9000da59 	.word	0x9000da59
9000dacc:	9000da59 	.word	0x9000da59
9000dad0:	9000da59 	.word	0x9000da59
9000dad4:	9000db8d 	.word	0x9000db8d
9000dad8:	9000da59 	.word	0x9000da59
9000dadc:	9000da59 	.word	0x9000da59
9000dae0:	9000da59 	.word	0x9000da59
9000dae4:	9000da59 	.word	0x9000da59
9000dae8:	9000da59 	.word	0x9000da59
9000daec:	9000da59 	.word	0x9000da59
9000daf0:	9000da59 	.word	0x9000da59
9000daf4:	9000db9d 	.word	0x9000db9d
9000daf8:	9000da59 	.word	0x9000da59
9000dafc:	9000da59 	.word	0x9000da59
9000db00:	9000da59 	.word	0x9000da59
9000db04:	9000da59 	.word	0x9000da59
9000db08:	9000da59 	.word	0x9000da59
9000db0c:	9000da59 	.word	0x9000da59
9000db10:	9000da59 	.word	0x9000da59
9000db14:	9000db39 	.word	0x9000db39
9000db18:	9000da59 	.word	0x9000da59
9000db1c:	9000da59 	.word	0x9000da59
9000db20:	9000da59 	.word	0x9000da59
9000db24:	9000da59 	.word	0x9000da59
9000db28:	9000da59 	.word	0x9000da59
9000db2c:	9000da59 	.word	0x9000da59
9000db30:	9000da59 	.word	0x9000da59
9000db34:	9000db6b 	.word	0x9000db6b
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db38:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000db3c:	4858      	ldr	r0, [pc, #352]	@ (9000dca0 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db3e:	d047      	beq.n	9000dbd0 <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000db40:	4a58      	ldr	r2, [pc, #352]	@ (9000dca4 <UART_SetConfig+0x2cc>)
9000db42:	6863      	ldr	r3, [r4, #4]
9000db44:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000db48:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000db4c:	fbb0 f0f1 	udiv	r0, r0, r1
9000db50:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000db54:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000db58:	f1a0 0310 	sub.w	r3, r0, #16
9000db5c:	4293      	cmp	r3, r2
9000db5e:	f63f af7b 	bhi.w	9000da58 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000db62:	6823      	ldr	r3, [r4, #0]
9000db64:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000db66:	2000      	movs	r0, #0
9000db68:	e777      	b.n	9000da5a <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db6a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000db6e:	d02f      	beq.n	9000dbd0 <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000db70:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000db74:	e7e4      	b.n	9000db40 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db76:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000db7a:	d022      	beq.n	9000dbc2 <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000db7c:	4668      	mov	r0, sp
9000db7e:	f7ff fbd5 	bl	9000d32c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000db82:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000db84:	2800      	cmp	r0, #0
9000db86:	d0ee      	beq.n	9000db66 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000db88:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000db8a:	e7d9      	b.n	9000db40 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db8c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000db90:	d04f      	beq.n	9000dc32 <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000db92:	a803      	add	r0, sp, #12
9000db94:	f7ff fc64 	bl	9000d460 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000db98:	9804      	ldr	r0, [sp, #16]
        break;
9000db9a:	e7f3      	b.n	9000db84 <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000db9c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000dba0:	d03c      	beq.n	9000dc1c <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dba2:	4b3e      	ldr	r3, [pc, #248]	@ (9000dc9c <UART_SetConfig+0x2c4>)
9000dba4:	681a      	ldr	r2, [r3, #0]
9000dba6:	0691      	lsls	r1, r2, #26
9000dba8:	d52d      	bpl.n	9000dc06 <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000dbaa:	681b      	ldr	r3, [r3, #0]
9000dbac:	483e      	ldr	r0, [pc, #248]	@ (9000dca8 <UART_SetConfig+0x2d0>)
9000dbae:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000dbb2:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000dbb4:	e7c4      	b.n	9000db40 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000dbb6:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000dbba:	d026      	beq.n	9000dc0a <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000dbbc:	f7fe fac4 	bl	9000c148 <HAL_RCC_GetPCLK1Freq>
        break;
9000dbc0:	e7e0      	b.n	9000db84 <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000dbc2:	4668      	mov	r0, sp
9000dbc4:	f7ff fbb2 	bl	9000d32c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000dbc8:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000dbca:	2800      	cmp	r0, #0
9000dbcc:	d0cb      	beq.n	9000db66 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000dbce:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000dbd0:	4b34      	ldr	r3, [pc, #208]	@ (9000dca4 <UART_SetConfig+0x2cc>)
9000dbd2:	6862      	ldr	r2, [r4, #4]
9000dbd4:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000dbd8:	0853      	lsrs	r3, r2, #1
9000dbda:	fbb0 f0f1 	udiv	r0, r0, r1
9000dbde:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000dbe2:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000dbe6:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000dbea:	f1a3 0210 	sub.w	r2, r3, #16
9000dbee:	428a      	cmp	r2, r1
9000dbf0:	f63f af32 	bhi.w	9000da58 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000dbf4:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000dbf8:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000dbfc:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000dbfe:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000dc00:	4313      	orrs	r3, r2
9000dc02:	60cb      	str	r3, [r1, #12]
9000dc04:	e7af      	b.n	9000db66 <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000dc06:	4828      	ldr	r0, [pc, #160]	@ (9000dca8 <UART_SetConfig+0x2d0>)
9000dc08:	e79a      	b.n	9000db40 <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000dc0a:	f7fe fa9d 	bl	9000c148 <HAL_RCC_GetPCLK1Freq>
        break;
9000dc0e:	e7dc      	b.n	9000dbca <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000dc10:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000dc14:	d012      	beq.n	9000dc3c <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000dc16:	f7fe fadf 	bl	9000c1d8 <HAL_RCC_GetPCLK2Freq>
        break;
9000dc1a:	e7b3      	b.n	9000db84 <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dc1c:	4b1f      	ldr	r3, [pc, #124]	@ (9000dc9c <UART_SetConfig+0x2c4>)
9000dc1e:	681a      	ldr	r2, [r3, #0]
9000dc20:	0690      	lsls	r0, r2, #26
9000dc22:	f140 808b 	bpl.w	9000dd3c <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000dc26:	681b      	ldr	r3, [r3, #0]
9000dc28:	481f      	ldr	r0, [pc, #124]	@ (9000dca8 <UART_SetConfig+0x2d0>)
9000dc2a:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000dc2e:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000dc30:	e7ce      	b.n	9000dbd0 <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000dc32:	a803      	add	r0, sp, #12
9000dc34:	f7ff fc14 	bl	9000d460 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000dc38:	9804      	ldr	r0, [sp, #16]
        break;
9000dc3a:	e7c6      	b.n	9000dbca <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000dc3c:	f7fe facc 	bl	9000c1d8 <HAL_RCC_GetPCLK2Freq>
        break;
9000dc40:	e7c3      	b.n	9000dbca <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000dc42:	6898      	ldr	r0, [r3, #8]
9000dc44:	4a0c      	ldr	r2, [pc, #48]	@ (9000dc78 <UART_SetConfig+0x2a0>)
9000dc46:	4002      	ands	r2, r0
9000dc48:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000dc4a:	4914      	ldr	r1, [pc, #80]	@ (9000dc9c <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000dc4c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000dc4e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000dc50:	f022 020f 	bic.w	r2, r2, #15
9000dc54:	432a      	orrs	r2, r5
9000dc56:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000dc58:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000dc5a:	f003 0307 	and.w	r3, r3, #7
9000dc5e:	2b05      	cmp	r3, #5
9000dc60:	f63f aefa 	bhi.w	9000da58 <UART_SetConfig+0x80>
9000dc64:	e8df f003 	tbb	[pc, r3]
9000dc68:	224e575c 	.word	0x224e575c
9000dc6c:	5f62      	.short	0x5f62
9000dc6e:	bf00      	nop
9000dc70:	cfff69f3 	.word	0xcfff69f3
9000dc74:	58000c00 	.word	0x58000c00
9000dc78:	11fff4ff 	.word	0x11fff4ff
9000dc7c:	40011000 	.word	0x40011000
9000dc80:	40004400 	.word	0x40004400
9000dc84:	40004800 	.word	0x40004800
9000dc88:	40004c00 	.word	0x40004c00
9000dc8c:	40005000 	.word	0x40005000
9000dc90:	40011400 	.word	0x40011400
9000dc94:	40007800 	.word	0x40007800
9000dc98:	40007c00 	.word	0x40007c00
9000dc9c:	58024400 	.word	0x58024400
9000dca0:	003d0900 	.word	0x003d0900
9000dca4:	9002e4c8 	.word	0x9002e4c8
9000dca8:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dcac:	4b24      	ldr	r3, [pc, #144]	@ (9000dd40 <UART_SetConfig+0x368>)
9000dcae:	681a      	ldr	r2, [r3, #0]
9000dcb0:	0692      	lsls	r2, r2, #26
9000dcb2:	d43d      	bmi.n	9000dd30 <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000dcb4:	4823      	ldr	r0, [pc, #140]	@ (9000dd44 <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000dcb6:	4b24      	ldr	r3, [pc, #144]	@ (9000dd48 <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000dcb8:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000dcba:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000dcbe:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000dcc2:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000dcc6:	4299      	cmp	r1, r3
9000dcc8:	f63f aec6 	bhi.w	9000da58 <UART_SetConfig+0x80>
9000dccc:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000dcd0:	f63f aec2 	bhi.w	9000da58 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000dcd4:	2300      	movs	r3, #0
9000dcd6:	4619      	mov	r1, r3
9000dcd8:	f7f2 fd5e 	bl	90000798 <__aeabi_uldivmod>
9000dcdc:	4632      	mov	r2, r6
9000dcde:	0209      	lsls	r1, r1, #8
9000dce0:	0203      	lsls	r3, r0, #8
9000dce2:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000dce6:	0870      	lsrs	r0, r6, #1
9000dce8:	1818      	adds	r0, r3, r0
9000dcea:	f04f 0300 	mov.w	r3, #0
9000dcee:	f141 0100 	adc.w	r1, r1, #0
9000dcf2:	f7f2 fd51 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000dcf6:	4b15      	ldr	r3, [pc, #84]	@ (9000dd4c <UART_SetConfig+0x374>)
9000dcf8:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000dcfc:	429a      	cmp	r2, r3
9000dcfe:	f63f aeab 	bhi.w	9000da58 <UART_SetConfig+0x80>
9000dd02:	e72e      	b.n	9000db62 <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000dd04:	a803      	add	r0, sp, #12
9000dd06:	f7ff fbab 	bl	9000d460 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000dd0a:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000dd0c:	2800      	cmp	r0, #0
9000dd0e:	f43f af2a 	beq.w	9000db66 <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000dd12:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000dd14:	e7cf      	b.n	9000dcb6 <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000dd16:	4668      	mov	r0, sp
9000dd18:	f7ff fb08 	bl	9000d32c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000dd1c:	9801      	ldr	r0, [sp, #4]
        break;
9000dd1e:	e7f5      	b.n	9000dd0c <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000dd20:	f7ff faf2 	bl	9000d308 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000dd24:	e7f2      	b.n	9000dd0c <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000dd26:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000dd2a:	e7c4      	b.n	9000dcb6 <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000dd2c:	4808      	ldr	r0, [pc, #32]	@ (9000dd50 <UART_SetConfig+0x378>)
9000dd2e:	e7c2      	b.n	9000dcb6 <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000dd30:	681b      	ldr	r3, [r3, #0]
9000dd32:	4804      	ldr	r0, [pc, #16]	@ (9000dd44 <UART_SetConfig+0x36c>)
9000dd34:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000dd38:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000dd3a:	e7bc      	b.n	9000dcb6 <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000dd3c:	4801      	ldr	r0, [pc, #4]	@ (9000dd44 <UART_SetConfig+0x36c>)
9000dd3e:	e747      	b.n	9000dbd0 <UART_SetConfig+0x1f8>
9000dd40:	58024400 	.word	0x58024400
9000dd44:	03d09000 	.word	0x03d09000
9000dd48:	9002e4c8 	.word	0x9002e4c8
9000dd4c:	000ffcff 	.word	0x000ffcff
9000dd50:	003d0900 	.word	0x003d0900

9000dd54 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000dd54:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000dd56:	071a      	lsls	r2, r3, #28
{
9000dd58:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000dd5a:	d506      	bpl.n	9000dd6a <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000dd5c:	6801      	ldr	r1, [r0, #0]
9000dd5e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000dd60:	684a      	ldr	r2, [r1, #4]
9000dd62:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000dd66:	4322      	orrs	r2, r4
9000dd68:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000dd6a:	07dc      	lsls	r4, r3, #31
9000dd6c:	d506      	bpl.n	9000dd7c <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000dd6e:	6801      	ldr	r1, [r0, #0]
9000dd70:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000dd72:	684a      	ldr	r2, [r1, #4]
9000dd74:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000dd78:	4322      	orrs	r2, r4
9000dd7a:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000dd7c:	0799      	lsls	r1, r3, #30
9000dd7e:	d506      	bpl.n	9000dd8e <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000dd80:	6801      	ldr	r1, [r0, #0]
9000dd82:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000dd84:	684a      	ldr	r2, [r1, #4]
9000dd86:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000dd8a:	4322      	orrs	r2, r4
9000dd8c:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000dd8e:	075a      	lsls	r2, r3, #29
9000dd90:	d506      	bpl.n	9000dda0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000dd92:	6801      	ldr	r1, [r0, #0]
9000dd94:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000dd96:	684a      	ldr	r2, [r1, #4]
9000dd98:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000dd9c:	4322      	orrs	r2, r4
9000dd9e:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000dda0:	06dc      	lsls	r4, r3, #27
9000dda2:	d506      	bpl.n	9000ddb2 <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000dda4:	6801      	ldr	r1, [r0, #0]
9000dda6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000dda8:	688a      	ldr	r2, [r1, #8]
9000ddaa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000ddae:	4322      	orrs	r2, r4
9000ddb0:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000ddb2:	0699      	lsls	r1, r3, #26
9000ddb4:	d506      	bpl.n	9000ddc4 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000ddb6:	6801      	ldr	r1, [r0, #0]
9000ddb8:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000ddba:	688a      	ldr	r2, [r1, #8]
9000ddbc:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000ddc0:	4322      	orrs	r2, r4
9000ddc2:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000ddc4:	065a      	lsls	r2, r3, #25
9000ddc6:	d50a      	bpl.n	9000ddde <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000ddc8:	6801      	ldr	r1, [r0, #0]
9000ddca:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000ddcc:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000ddce:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000ddd2:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000ddd6:	ea42 0204 	orr.w	r2, r2, r4
9000ddda:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000dddc:	d00b      	beq.n	9000ddf6 <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000ddde:	061b      	lsls	r3, r3, #24
9000dde0:	d506      	bpl.n	9000ddf0 <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000dde2:	6802      	ldr	r2, [r0, #0]
9000dde4:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000dde6:	6853      	ldr	r3, [r2, #4]
9000dde8:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000ddec:	430b      	orrs	r3, r1
9000ddee:	6053      	str	r3, [r2, #4]
  }
}
9000ddf0:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ddf4:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000ddf6:	684a      	ldr	r2, [r1, #4]
9000ddf8:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000ddfa:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000ddfe:	4322      	orrs	r2, r4
9000de00:	604a      	str	r2, [r1, #4]
9000de02:	e7ec      	b.n	9000ddde <UART_AdvFeatureConfig+0x8a>

9000de04 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
9000de04:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000de06:	2300      	movs	r3, #0
{
9000de08:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000de0a:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
9000de0e:	f7fa f813 	bl	90007e38 <HAL_GetTick>

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000de12:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000de14:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000de16:	6813      	ldr	r3, [r2, #0]
9000de18:	071b      	lsls	r3, r3, #28
9000de1a:	d40f      	bmi.n	9000de3c <UART_CheckIdleState+0x38>
      return HAL_TIMEOUT;
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000de1c:	6813      	ldr	r3, [r2, #0]
9000de1e:	0759      	lsls	r1, r3, #29
9000de20:	d431      	bmi.n	9000de86 <UART_CheckIdleState+0x82>
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000de22:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000de24:	2220      	movs	r2, #32
  huart->RxEventType = HAL_UART_RXEVENT_TC;

  __HAL_UNLOCK(huart);

  return HAL_OK;
9000de26:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000de28:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000de2c:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000de30:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000de32:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000de34:	2300      	movs	r3, #0
9000de36:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000de3a:	bd38      	pop	{r3, r4, r5, pc}
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000de3c:	69d3      	ldr	r3, [r2, #28]
9000de3e:	0298      	lsls	r0, r3, #10
9000de40:	d4ec      	bmi.n	9000de1c <UART_CheckIdleState+0x18>
9000de42:	e00c      	b.n	9000de5e <UART_CheckIdleState+0x5a>
      {

        return HAL_TIMEOUT;
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000de44:	6819      	ldr	r1, [r3, #0]
9000de46:	461a      	mov	r2, r3
9000de48:	0749      	lsls	r1, r1, #29
9000de4a:	d505      	bpl.n	9000de58 <UART_CheckIdleState+0x54>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000de4c:	69d9      	ldr	r1, [r3, #28]
9000de4e:	0708      	lsls	r0, r1, #28
9000de50:	d44a      	bmi.n	9000dee8 <UART_CheckIdleState+0xe4>
          /* Process Unlocked */
          __HAL_UNLOCK(huart);

          return HAL_ERROR;
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000de52:	69d9      	ldr	r1, [r3, #28]
9000de54:	0509      	lsls	r1, r1, #20
9000de56:	d475      	bmi.n	9000df44 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000de58:	69db      	ldr	r3, [r3, #28]
9000de5a:	0298      	lsls	r0, r3, #10
9000de5c:	d4de      	bmi.n	9000de1c <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000de5e:	f7f9 ffeb 	bl	90007e38 <HAL_GetTick>
9000de62:	1b43      	subs	r3, r0, r5
9000de64:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000de68:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000de6a:	d3eb      	bcc.n	9000de44 <UART_CheckIdleState+0x40>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de6c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000de70:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de74:	e843 2100 	strex	r1, r2, [r3]
9000de78:	2900      	cmp	r1, #0
9000de7a:	d1f7      	bne.n	9000de6c <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000de7c:	2320      	movs	r3, #32
9000de7e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000de82:	2003      	movs	r0, #3
9000de84:	e7d6      	b.n	9000de34 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000de86:	69d3      	ldr	r3, [r2, #28]
9000de88:	025b      	lsls	r3, r3, #9
9000de8a:	d4ca      	bmi.n	9000de22 <UART_CheckIdleState+0x1e>
9000de8c:	e00d      	b.n	9000deaa <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000de8e:	681a      	ldr	r2, [r3, #0]
9000de90:	0750      	lsls	r0, r2, #29
9000de92:	d507      	bpl.n	9000dea4 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000de94:	69da      	ldr	r2, [r3, #28]
9000de96:	0711      	lsls	r1, r2, #28
9000de98:	f100 8082 	bmi.w	9000dfa0 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000de9c:	69da      	ldr	r2, [r3, #28]
9000de9e:	0512      	lsls	r2, r2, #20
9000dea0:	f100 80ac 	bmi.w	9000dffc <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000dea4:	69db      	ldr	r3, [r3, #28]
9000dea6:	025b      	lsls	r3, r3, #9
9000dea8:	d4bb      	bmi.n	9000de22 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000deaa:	f7f9 ffc5 	bl	90007e38 <HAL_GetTick>
9000deae:	1b43      	subs	r3, r0, r5
9000deb0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000deb4:	6823      	ldr	r3, [r4, #0]
9000deb6:	d3ea      	bcc.n	9000de8e <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000deb8:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000debc:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dec0:	e843 2100 	strex	r1, r2, [r3]
9000dec4:	2900      	cmp	r1, #0
9000dec6:	d1f7      	bne.n	9000deb8 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dec8:	f103 0208 	add.w	r2, r3, #8
9000decc:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000ded0:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ded4:	f103 0008 	add.w	r0, r3, #8
9000ded8:	e840 2100 	strex	r1, r2, [r0]
9000dedc:	2900      	cmp	r1, #0
9000dede:	d1f3      	bne.n	9000dec8 <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000dee0:	2320      	movs	r3, #32
9000dee2:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000dee6:	e7cc      	b.n	9000de82 <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000dee8:	2208      	movs	r2, #8
9000deea:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000deec:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000def0:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000def4:	e843 2100 	strex	r1, r2, [r3]
9000def8:	2900      	cmp	r1, #0
9000defa:	d1f7      	bne.n	9000deec <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000defc:	4856      	ldr	r0, [pc, #344]	@ (9000e058 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000defe:	f103 0208 	add.w	r2, r3, #8
9000df02:	e852 2f00 	ldrex	r2, [r2]
9000df06:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000df08:	f103 0508 	add.w	r5, r3, #8
9000df0c:	e845 2100 	strex	r1, r2, [r5]
9000df10:	2900      	cmp	r1, #0
9000df12:	d1f4      	bne.n	9000defe <UART_CheckIdleState+0xfa>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000df14:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000df16:	2a01      	cmp	r2, #1
9000df18:	d00b      	beq.n	9000df32 <UART_CheckIdleState+0x12e>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000df1a:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000df1c:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000df1e:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000df20:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
9000df24:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000df26:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000df28:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000df2c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000df30:	e79c      	b.n	9000de6c <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000df32:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000df36:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000df3a:	e843 2100 	strex	r1, r2, [r3]
9000df3e:	2900      	cmp	r1, #0
9000df40:	d1f7      	bne.n	9000df32 <UART_CheckIdleState+0x12e>
9000df42:	e7ea      	b.n	9000df1a <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000df44:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000df48:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000df4a:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000df4e:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000df52:	e843 2100 	strex	r1, r2, [r3]
9000df56:	2900      	cmp	r1, #0
9000df58:	d1f7      	bne.n	9000df4a <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000df5a:	483f      	ldr	r0, [pc, #252]	@ (9000e058 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000df5c:	f103 0208 	add.w	r2, r3, #8
9000df60:	e852 2f00 	ldrex	r2, [r2]
9000df64:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000df66:	f103 0508 	add.w	r5, r3, #8
9000df6a:	e845 2100 	strex	r1, r2, [r5]
9000df6e:	2900      	cmp	r1, #0
9000df70:	d1f4      	bne.n	9000df5c <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000df72:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000df74:	2a01      	cmp	r2, #1
9000df76:	d00a      	beq.n	9000df8e <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000df78:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000df7a:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000df7c:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000df7e:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000df82:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000df86:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000df88:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000df8c:	e76e      	b.n	9000de6c <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000df8e:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000df92:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000df96:	e843 2100 	strex	r1, r2, [r3]
9000df9a:	2900      	cmp	r1, #0
9000df9c:	d1f7      	bne.n	9000df8e <UART_CheckIdleState+0x18a>
9000df9e:	e7eb      	b.n	9000df78 <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000dfa0:	2208      	movs	r2, #8
9000dfa2:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dfa4:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dfa8:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dfac:	e843 2100 	strex	r1, r2, [r3]
9000dfb0:	2900      	cmp	r1, #0
9000dfb2:	d1f7      	bne.n	9000dfa4 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dfb4:	4828      	ldr	r0, [pc, #160]	@ (9000e058 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dfb6:	f103 0208 	add.w	r2, r3, #8
9000dfba:	e852 2f00 	ldrex	r2, [r2]
9000dfbe:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dfc0:	f103 0508 	add.w	r5, r3, #8
9000dfc4:	e845 2100 	strex	r1, r2, [r5]
9000dfc8:	2900      	cmp	r1, #0
9000dfca:	d1f4      	bne.n	9000dfb6 <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000dfcc:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000dfce:	2a01      	cmp	r2, #1
9000dfd0:	d00b      	beq.n	9000dfea <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dfd2:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000dfd4:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000dfd6:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000dfd8:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000dfdc:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dfde:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000dfe0:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000dfe4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000dfe8:	e766      	b.n	9000deb8 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dfea:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dfee:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dff2:	e843 2100 	strex	r1, r2, [r3]
9000dff6:	2900      	cmp	r1, #0
9000dff8:	d1f7      	bne.n	9000dfea <UART_CheckIdleState+0x1e6>
9000dffa:	e7ea      	b.n	9000dfd2 <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000dffc:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000e000:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e002:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e006:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e00a:	e843 2100 	strex	r1, r2, [r3]
9000e00e:	2900      	cmp	r1, #0
9000e010:	d1f7      	bne.n	9000e002 <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e012:	4811      	ldr	r0, [pc, #68]	@ (9000e058 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e014:	f103 0208 	add.w	r2, r3, #8
9000e018:	e852 2f00 	ldrex	r2, [r2]
9000e01c:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e01e:	f103 0508 	add.w	r5, r3, #8
9000e022:	e845 2100 	strex	r1, r2, [r5]
9000e026:	2900      	cmp	r1, #0
9000e028:	d1f4      	bne.n	9000e014 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e02a:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e02c:	2a01      	cmp	r2, #1
9000e02e:	d00a      	beq.n	9000e046 <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e030:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e032:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000e034:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000e036:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000e03a:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e03e:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000e040:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000e044:	e738      	b.n	9000deb8 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e046:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e04a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e04e:	e843 2100 	strex	r1, r2, [r3]
9000e052:	2900      	cmp	r1, #0
9000e054:	d1f7      	bne.n	9000e046 <UART_CheckIdleState+0x242>
9000e056:	e7eb      	b.n	9000e030 <UART_CheckIdleState+0x22c>
9000e058:	effffffe 	.word	0xeffffffe

9000e05c <HAL_UART_Init>:
  if (huart == NULL)
9000e05c:	b380      	cbz	r0, 9000e0c0 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000e05e:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000e062:	b510      	push	{r4, lr}
9000e064:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000e066:	b333      	cbz	r3, 9000e0b6 <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000e068:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000e06a:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000e06c:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000e06e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000e072:	6813      	ldr	r3, [r2, #0]
9000e074:	f023 0301 	bic.w	r3, r3, #1
9000e078:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000e07a:	b9c1      	cbnz	r1, 9000e0ae <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000e07c:	4620      	mov	r0, r4
9000e07e:	f7ff fcab 	bl	9000d9d8 <UART_SetConfig>
9000e082:	2801      	cmp	r0, #1
9000e084:	d011      	beq.n	9000e0aa <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000e086:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000e088:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000e08a:	685a      	ldr	r2, [r3, #4]
9000e08c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000e090:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000e092:	689a      	ldr	r2, [r3, #8]
9000e094:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000e098:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000e09a:	681a      	ldr	r2, [r3, #0]
9000e09c:	f042 0201 	orr.w	r2, r2, #1
}
9000e0a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000e0a4:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000e0a6:	f7ff bead 	b.w	9000de04 <UART_CheckIdleState>
}
9000e0aa:	2001      	movs	r0, #1
9000e0ac:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000e0ae:	4620      	mov	r0, r4
9000e0b0:	f7ff fe50 	bl	9000dd54 <UART_AdvFeatureConfig>
9000e0b4:	e7e2      	b.n	9000e07c <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000e0b6:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000e0ba:	f7f6 ff8d 	bl	90004fd8 <HAL_UART_MspInit>
9000e0be:	e7d3      	b.n	9000e068 <HAL_UART_Init+0xc>
}
9000e0c0:	2001      	movs	r0, #1
9000e0c2:	4770      	bx	lr

9000e0c4 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000e0c4:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000e0c8:	2a01      	cmp	r2, #1
9000e0ca:	d017      	beq.n	9000e0fc <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e0cc:	6802      	ldr	r2, [r0, #0]
9000e0ce:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000e0d0:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000e0d2:	2100      	movs	r1, #0
{
9000e0d4:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000e0d6:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000e0da:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e0dc:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000e0de:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000e0e0:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000e0e4:	f024 0401 	bic.w	r4, r4, #1
9000e0e8:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000e0ea:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000e0ec:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000e0ee:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000e0f0:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000e0f4:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000e0f8:	bc30      	pop	{r4, r5}
9000e0fa:	4770      	bx	lr
  __HAL_LOCK(huart);
9000e0fc:	2002      	movs	r0, #2
}
9000e0fe:	4770      	bx	lr

9000e100 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000e100:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000e104:	2a01      	cmp	r2, #1
9000e106:	d037      	beq.n	9000e178 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e108:	6802      	ldr	r2, [r0, #0]
9000e10a:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000e10c:	2024      	movs	r0, #36	@ 0x24
{
9000e10e:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000e110:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e114:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000e116:	6810      	ldr	r0, [r2, #0]
9000e118:	f020 0001 	bic.w	r0, r0, #1
9000e11c:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000e11e:	6890      	ldr	r0, [r2, #8]
9000e120:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000e124:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000e126:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000e128:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000e12a:	b310      	cbz	r0, 9000e172 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000e12c:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000e12e:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e130:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e134:	4911      	ldr	r1, [pc, #68]	@ (9000e17c <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000e136:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000e13a:	4d11      	ldr	r5, [pc, #68]	@ (9000e180 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e13c:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e140:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000e144:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e148:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000e14a:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e14e:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e150:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e154:	fbb1 f1f5 	udiv	r1, r1, r5
9000e158:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000e15c:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000e15e:	2100      	movs	r1, #0
9000e160:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000e164:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000e166:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000e168:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000e16c:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000e170:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000e172:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000e174:	4608      	mov	r0, r1
9000e176:	e7ef      	b.n	9000e158 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000e178:	2002      	movs	r0, #2
}
9000e17a:	4770      	bx	lr
9000e17c:	9002e4e8 	.word	0x9002e4e8
9000e180:	9002e4e0 	.word	0x9002e4e0

9000e184 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000e184:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000e188:	2a01      	cmp	r2, #1
9000e18a:	d037      	beq.n	9000e1fc <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e18c:	6802      	ldr	r2, [r0, #0]
9000e18e:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000e190:	2024      	movs	r0, #36	@ 0x24
{
9000e192:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000e194:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000e198:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000e19a:	6810      	ldr	r0, [r2, #0]
9000e19c:	f020 0001 	bic.w	r0, r0, #1
9000e1a0:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000e1a2:	6890      	ldr	r0, [r2, #8]
9000e1a4:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000e1a8:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000e1aa:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000e1ac:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000e1ae:	b310      	cbz	r0, 9000e1f6 <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000e1b0:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000e1b2:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e1b4:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e1b8:	4911      	ldr	r1, [pc, #68]	@ (9000e200 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000e1ba:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000e1be:	4d11      	ldr	r5, [pc, #68]	@ (9000e204 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e1c0:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e1c4:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000e1c8:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e1cc:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000e1ce:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e1d2:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000e1d4:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000e1d8:	fbb1 f1f5 	udiv	r1, r1, r5
9000e1dc:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000e1e0:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000e1e2:	2100      	movs	r1, #0
9000e1e4:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000e1e8:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000e1ea:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000e1ec:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000e1f0:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000e1f4:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000e1f6:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000e1f8:	4608      	mov	r0, r1
9000e1fa:	e7ef      	b.n	9000e1dc <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000e1fc:	2002      	movs	r0, #2
}
9000e1fe:	4770      	bx	lr
9000e200:	9002e4e8 	.word	0x9002e4e8
9000e204:	9002e4e0 	.word	0x9002e4e0

9000e208 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000e208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e20c:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000e210:	e9d1 8200 	ldrd	r8, r2, [r1]
9000e214:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000e216:	ea43 030e 	orr.w	r3, r3, lr
9000e21a:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000e21e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e222:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e224:	f1b8 0f00 	cmp.w	r8, #0
9000e228:	d10f      	bne.n	9000e24a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e22a:	433b      	orrs	r3, r7
9000e22c:	4313      	orrs	r3, r2
9000e22e:	6802      	ldr	r2, [r0, #0]
9000e230:	ea43 030c 	orr.w	r3, r3, ip
9000e234:	f36f 020e 	bfc	r2, #0, #15
9000e238:	4333      	orrs	r3, r6
9000e23a:	432b      	orrs	r3, r5
9000e23c:	4323      	orrs	r3, r4
9000e23e:	430b      	orrs	r3, r1
9000e240:	4313      	orrs	r3, r2
9000e242:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000e244:	2000      	movs	r0, #0
9000e246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e24a:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e24e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e250:	4332      	orrs	r2, r6
9000e252:	432a      	orrs	r2, r5
9000e254:	4322      	orrs	r2, r4
9000e256:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e258:	6801      	ldr	r1, [r0, #0]
9000e25a:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000e25e:	430b      	orrs	r3, r1
9000e260:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e262:	6843      	ldr	r3, [r0, #4]
9000e264:	f36f 030e 	bfc	r3, #0, #15
9000e268:	4313      	orrs	r3, r2
9000e26a:	6043      	str	r3, [r0, #4]
}
9000e26c:	2000      	movs	r0, #0
9000e26e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e272:	bf00      	nop

9000e274 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e274:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e276:	68cc      	ldr	r4, [r1, #12]
9000e278:	694b      	ldr	r3, [r1, #20]
9000e27a:	3c01      	subs	r4, #1
9000e27c:	688d      	ldr	r5, [r1, #8]
9000e27e:	698f      	ldr	r7, [r1, #24]
9000e280:	3b01      	subs	r3, #1
9000e282:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000e286:	684c      	ldr	r4, [r1, #4]
9000e288:	680e      	ldr	r6, [r1, #0]
9000e28a:	3d01      	subs	r5, #1
9000e28c:	3c01      	subs	r4, #1
9000e28e:	051b      	lsls	r3, r3, #20
9000e290:	022d      	lsls	r5, r5, #8
9000e292:	3e01      	subs	r6, #1
9000e294:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000e298:	690c      	ldr	r4, [r1, #16]
9000e29a:	1e79      	subs	r1, r7, #1
9000e29c:	3c01      	subs	r4, #1
9000e29e:	0609      	lsls	r1, r1, #24
9000e2a0:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000e2a2:	b972      	cbnz	r2, 9000e2c2 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e2a4:	ea4e 0303 	orr.w	r3, lr, r3
9000e2a8:	6882      	ldr	r2, [r0, #8]
9000e2aa:	4333      	orrs	r3, r6
9000e2ac:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e2b0:	ea43 030c 	orr.w	r3, r3, ip
9000e2b4:	432b      	orrs	r3, r5
9000e2b6:	4323      	orrs	r3, r4
9000e2b8:	430b      	orrs	r3, r1
9000e2ba:	4313      	orrs	r3, r2
9000e2bc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e2be:	2000      	movs	r0, #0
9000e2c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e2c2:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e2c6:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e2ca:	4a08      	ldr	r2, [pc, #32]	@ (9000e2ec <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e2cc:	4333      	orrs	r3, r6
9000e2ce:	4323      	orrs	r3, r4
9000e2d0:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e2d2:	6881      	ldr	r1, [r0, #8]
9000e2d4:	400a      	ands	r2, r1
9000e2d6:	ea4e 0202 	orr.w	r2, lr, r2
9000e2da:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e2dc:	68c2      	ldr	r2, [r0, #12]
9000e2de:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e2e2:	4313      	orrs	r3, r2
9000e2e4:	60c3      	str	r3, [r0, #12]
}
9000e2e6:	2000      	movs	r0, #0
9000e2e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000e2ea:	bf00      	nop
9000e2ec:	ff0f0fff 	.word	0xff0f0fff

9000e2f0 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e2f0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e2f2:	2200      	movs	r2, #0
{
9000e2f4:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e2f6:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e2fa:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000e2fe:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e302:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e306:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e308:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e30c:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e30e:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e310:	619a      	str	r2, [r3, #24]
}
9000e312:	bc30      	pop	{r4, r5}
9000e314:	4770      	bx	lr
9000e316:	bf00      	nop

9000e318 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e318:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e31a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e31e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e320:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000e348 <FMC_SDRAM_SendCommand+0x30>
9000e324:	6900      	ldr	r0, [r0, #16]
9000e326:	4323      	orrs	r3, r4
9000e328:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e32c:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e330:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e332:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e336:	3901      	subs	r1, #1
}
9000e338:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e33c:	ea43 030c 	orr.w	r3, r3, ip
9000e340:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e344:	6113      	str	r3, [r2, #16]
}
9000e346:	4770      	bx	lr
9000e348:	ffc00000 	.word	0xffc00000

9000e34c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e34c:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000e34e:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e350:	6953      	ldr	r3, [r2, #20]
9000e352:	f36f 034d 	bfc	r3, #1, #13
9000e356:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000e35a:	6153      	str	r3, [r2, #20]
}
9000e35c:	4770      	bx	lr
9000e35e:	bf00      	nop

9000e360 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000e360:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000e362:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e366:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000e368:	f002 fbd8 	bl	90010b1c <xTaskGetSchedulerState>
9000e36c:	2801      	cmp	r0, #1
9000e36e:	d100      	bne.n	9000e372 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000e370:	bd08      	pop	{r3, pc}
9000e372:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000e376:	f000 bc45 	b.w	9000ec04 <xPortSysTickHandler>
9000e37a:	bf00      	nop

9000e37c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000e37c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e380:	b92b      	cbnz	r3, 9000e38e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000e382:	4b06      	ldr	r3, [pc, #24]	@ (9000e39c <osKernelInitialize+0x20>)
9000e384:	6818      	ldr	r0, [r3, #0]
9000e386:	b928      	cbnz	r0, 9000e394 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000e388:	2201      	movs	r2, #1
9000e38a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000e38c:	4770      	bx	lr
    stat = osErrorISR;
9000e38e:	f06f 0005 	mvn.w	r0, #5
9000e392:	4770      	bx	lr
    } else {
      stat = osError;
9000e394:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000e398:	4770      	bx	lr
9000e39a:	bf00      	nop
9000e39c:	24009024 	.word	0x24009024

9000e3a0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000e3a0:	b510      	push	{r4, lr}
9000e3a2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e3a6:	b974      	cbnz	r4, 9000e3c6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000e3a8:	4b08      	ldr	r3, [pc, #32]	@ (9000e3cc <osKernelStart+0x2c>)
9000e3aa:	681a      	ldr	r2, [r3, #0]
9000e3ac:	2a01      	cmp	r2, #1
9000e3ae:	d107      	bne.n	9000e3c0 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000e3b0:	4907      	ldr	r1, [pc, #28]	@ (9000e3d0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000e3b2:	2202      	movs	r2, #2
9000e3b4:	77cc      	strb	r4, [r1, #31]
9000e3b6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000e3b8:	f002 f94e 	bl	90010658 <vTaskStartScheduler>
      stat = osOK;
9000e3bc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000e3be:	bd10      	pop	{r4, pc}
      stat = osError;
9000e3c0:	f04f 30ff 	mov.w	r0, #4294967295
}
9000e3c4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e3c6:	f06f 0005 	mvn.w	r0, #5
}
9000e3ca:	bd10      	pop	{r4, pc}
9000e3cc:	24009024 	.word	0x24009024
9000e3d0:	e000ed00 	.word	0xe000ed00

9000e3d4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e3d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000e3d6:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e3d8:	b087      	sub	sp, #28
  hTask = NULL;
9000e3da:	9505      	str	r5, [sp, #20]
9000e3dc:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000e3e0:	b340      	cbz	r0, 9000e434 <osThreadNew+0x60>
9000e3e2:	bb3b      	cbnz	r3, 9000e434 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000e3e4:	4614      	mov	r4, r2
9000e3e6:	b1d2      	cbz	r2, 9000e41e <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000e3e8:	6996      	ldr	r6, [r2, #24]
9000e3ea:	bb36      	cbnz	r6, 9000e43a <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000e3ec:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e3ee:	6863      	ldr	r3, [r4, #4]
9000e3f0:	07db      	lsls	r3, r3, #31
9000e3f2:	d41f      	bmi.n	9000e434 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000e3f4:	6963      	ldr	r3, [r4, #20]
9000e3f6:	b323      	cbz	r3, 9000e442 <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000e3f8:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e3fa:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000e3fc:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e400:	68e7      	ldr	r7, [r4, #12]
9000e402:	b305      	cbz	r5, 9000e446 <osThreadNew+0x72>
9000e404:	2f5f      	cmp	r7, #95	@ 0x5f
9000e406:	d915      	bls.n	9000e434 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000e408:	6924      	ldr	r4, [r4, #16]
9000e40a:	b19c      	cbz	r4, 9000e434 <osThreadNew+0x60>
9000e40c:	b193      	cbz	r3, 9000e434 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000e40e:	460b      	mov	r3, r1
9000e410:	9600      	str	r6, [sp, #0]
9000e412:	4661      	mov	r1, ip
9000e414:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000e418:	f001 ff0a 	bl	90010230 <xTaskCreateStatic>
9000e41c:	e00b      	b.n	9000e436 <osThreadNew+0x62>
9000e41e:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000e420:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e422:	460b      	mov	r3, r1
9000e424:	4621      	mov	r1, r4
9000e426:	ac05      	add	r4, sp, #20
9000e428:	9600      	str	r6, [sp, #0]
9000e42a:	9401      	str	r4, [sp, #4]
9000e42c:	f001 ffaa 	bl	90010384 <xTaskCreate>
9000e430:	2801      	cmp	r0, #1
9000e432:	d010      	beq.n	9000e456 <osThreadNew+0x82>
        return (NULL);
9000e434:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000e436:	b007      	add	sp, #28
9000e438:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e43a:	1e72      	subs	r2, r6, #1
9000e43c:	2a37      	cmp	r2, #55	@ 0x37
9000e43e:	d9d6      	bls.n	9000e3ee <osThreadNew+0x1a>
9000e440:	e7f8      	b.n	9000e434 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000e442:	2280      	movs	r2, #128	@ 0x80
9000e444:	e7d9      	b.n	9000e3fa <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000e446:	2f00      	cmp	r7, #0
9000e448:	d1f4      	bne.n	9000e434 <osThreadNew+0x60>
9000e44a:	6923      	ldr	r3, [r4, #16]
9000e44c:	2b00      	cmp	r3, #0
9000e44e:	d1f1      	bne.n	9000e434 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e450:	b292      	uxth	r2, r2
9000e452:	4664      	mov	r4, ip
9000e454:	e7e5      	b.n	9000e422 <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000e456:	9805      	ldr	r0, [sp, #20]
9000e458:	e7ed      	b.n	9000e436 <osThreadNew+0x62>
9000e45a:	bf00      	nop

9000e45c <osDelay>:
9000e45c:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e460:	b93a      	cbnz	r2, 9000e472 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000e462:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000e464:	b908      	cbnz	r0, 9000e46a <osDelay+0xe>
    stat = osOK;
9000e466:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000e468:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000e46a:	f002 f89f 	bl	900105ac <vTaskDelay>
    stat = osOK;
9000e46e:	2000      	movs	r0, #0
}
9000e470:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000e472:	f06f 0005 	mvn.w	r0, #5
}
9000e476:	4770      	bx	lr

9000e478 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000e478:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e47a:	b083      	sub	sp, #12
9000e47c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000e480:	b98e      	cbnz	r6, 9000e4a6 <osSemaphoreNew+0x2e>
9000e482:	4605      	mov	r5, r0
9000e484:	b178      	cbz	r0, 9000e4a6 <osSemaphoreNew+0x2e>
9000e486:	4288      	cmp	r0, r1
9000e488:	460f      	mov	r7, r1
9000e48a:	d30c      	bcc.n	9000e4a6 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000e48c:	4614      	mov	r4, r2
9000e48e:	b172      	cbz	r2, 9000e4ae <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e490:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000e494:	b14a      	cbz	r2, 9000e4aa <osSemaphoreNew+0x32>
9000e496:	2b4f      	cmp	r3, #79	@ 0x4f
9000e498:	d905      	bls.n	9000e4a6 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000e49a:	2801      	cmp	r0, #1
9000e49c:	d02e      	beq.n	9000e4fc <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000e49e:	f000 fd91 	bl	9000efc4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000e4a2:	4605      	mov	r5, r0
9000e4a4:	b96d      	cbnz	r5, 9000e4c2 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000e4a6:	2500      	movs	r5, #0
9000e4a8:	e010      	b.n	9000e4cc <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e4aa:	2b00      	cmp	r3, #0
9000e4ac:	d1fb      	bne.n	9000e4a6 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000e4ae:	2d01      	cmp	r5, #1
9000e4b0:	d00f      	beq.n	9000e4d2 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000e4b2:	4628      	mov	r0, r5
9000e4b4:	4639      	mov	r1, r7
9000e4b6:	f000 fde5 	bl	9000f084 <xQueueCreateCountingSemaphore>
9000e4ba:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000e4bc:	2d00      	cmp	r5, #0
9000e4be:	d0f2      	beq.n	9000e4a6 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000e4c0:	b104      	cbz	r4, 9000e4c4 <osSemaphoreNew+0x4c>
          name = attr->name;
9000e4c2:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000e4c4:	4621      	mov	r1, r4
9000e4c6:	4628      	mov	r0, r5
9000e4c8:	f001 fc10 	bl	9000fcec <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000e4cc:	4628      	mov	r0, r5
9000e4ce:	b003      	add	sp, #12
9000e4d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000e4d2:	4628      	mov	r0, r5
9000e4d4:	2203      	movs	r2, #3
9000e4d6:	2100      	movs	r1, #0
9000e4d8:	f000 fd32 	bl	9000ef40 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e4dc:	4605      	mov	r5, r0
9000e4de:	2800      	cmp	r0, #0
9000e4e0:	d0ec      	beq.n	9000e4bc <osSemaphoreNew+0x44>
9000e4e2:	2f00      	cmp	r7, #0
9000e4e4:	d0ea      	beq.n	9000e4bc <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e4e6:	2300      	movs	r3, #0
9000e4e8:	461a      	mov	r2, r3
9000e4ea:	4619      	mov	r1, r3
9000e4ec:	f000 fe10 	bl	9000f110 <xQueueGenericSend>
9000e4f0:	2801      	cmp	r0, #1
9000e4f2:	d0e5      	beq.n	9000e4c0 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000e4f4:	4628      	mov	r0, r5
9000e4f6:	f001 fbb3 	bl	9000fc60 <vQueueDelete>
      if (hSemaphore != NULL) {
9000e4fa:	e7d4      	b.n	9000e4a6 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000e4fc:	4613      	mov	r3, r2
9000e4fe:	2203      	movs	r2, #3
9000e500:	4631      	mov	r1, r6
9000e502:	9200      	str	r2, [sp, #0]
9000e504:	4632      	mov	r2, r6
9000e506:	f000 fcaf 	bl	9000ee68 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e50a:	4605      	mov	r5, r0
9000e50c:	2800      	cmp	r0, #0
9000e50e:	d0c9      	beq.n	9000e4a4 <osSemaphoreNew+0x2c>
9000e510:	2f00      	cmp	r7, #0
9000e512:	d0c7      	beq.n	9000e4a4 <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e514:	4633      	mov	r3, r6
9000e516:	4632      	mov	r2, r6
9000e518:	4631      	mov	r1, r6
9000e51a:	f000 fdf9 	bl	9000f110 <xQueueGenericSend>
9000e51e:	2801      	cmp	r0, #1
9000e520:	d0cf      	beq.n	9000e4c2 <osSemaphoreNew+0x4a>
9000e522:	e7e7      	b.n	9000e4f4 <osSemaphoreNew+0x7c>

9000e524 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e524:	b360      	cbz	r0, 9000e580 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000e526:	b510      	push	{r4, lr}
9000e528:	460c      	mov	r4, r1
9000e52a:	b082      	sub	sp, #8
9000e52c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e530:	b1b3      	cbz	r3, 9000e560 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000e532:	bb11      	cbnz	r1, 9000e57a <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e534:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e536:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e538:	f001 fb36 	bl	9000fba8 <xQueueReceiveFromISR>
9000e53c:	2801      	cmp	r0, #1
9000e53e:	d118      	bne.n	9000e572 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e540:	9b01      	ldr	r3, [sp, #4]
9000e542:	b913      	cbnz	r3, 9000e54a <osSemaphoreAcquire+0x26>
  stat = osOK;
9000e544:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e546:	b002      	add	sp, #8
9000e548:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000e54a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e54e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e552:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e556:	f3bf 8f4f 	dsb	sy
9000e55a:	f3bf 8f6f 	isb	sy
9000e55e:	e7f1      	b.n	9000e544 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000e560:	f001 f992 	bl	9000f888 <xQueueSemaphoreTake>
9000e564:	2801      	cmp	r0, #1
9000e566:	d0ed      	beq.n	9000e544 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000e568:	b11c      	cbz	r4, 9000e572 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000e56a:	f06f 0001 	mvn.w	r0, #1
}
9000e56e:	b002      	add	sp, #8
9000e570:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000e572:	f06f 0002 	mvn.w	r0, #2
}
9000e576:	b002      	add	sp, #8
9000e578:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000e57a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e57e:	e7e2      	b.n	9000e546 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000e580:	f06f 0003 	mvn.w	r0, #3
}
9000e584:	4770      	bx	lr
9000e586:	bf00      	nop

9000e588 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e588:	b328      	cbz	r0, 9000e5d6 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000e58a:	b500      	push	{lr}
9000e58c:	b083      	sub	sp, #12
9000e58e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e592:	b19b      	cbz	r3, 9000e5bc <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000e594:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e596:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e598:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e59a:	f000 ffa1 	bl	9000f4e0 <xQueueGiveFromISR>
9000e59e:	2801      	cmp	r0, #1
9000e5a0:	d116      	bne.n	9000e5d0 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e5a2:	9b01      	ldr	r3, [sp, #4]
9000e5a4:	b183      	cbz	r3, 9000e5c8 <osSemaphoreRelease+0x40>
9000e5a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e5aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e5ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e5b2:	f3bf 8f4f 	dsb	sy
9000e5b6:	f3bf 8f6f 	isb	sy
9000e5ba:	e005      	b.n	9000e5c8 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e5bc:	461a      	mov	r2, r3
9000e5be:	4619      	mov	r1, r3
9000e5c0:	f000 fda6 	bl	9000f110 <xQueueGenericSend>
9000e5c4:	2801      	cmp	r0, #1
9000e5c6:	d103      	bne.n	9000e5d0 <osSemaphoreRelease+0x48>
  stat = osOK;
9000e5c8:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e5ca:	b003      	add	sp, #12
9000e5cc:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000e5d0:	f06f 0002 	mvn.w	r0, #2
9000e5d4:	e7f9      	b.n	9000e5ca <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000e5d6:	f06f 0003 	mvn.w	r0, #3
}
9000e5da:	4770      	bx	lr

9000e5dc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e5dc:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e5de:	b083      	sub	sp, #12
9000e5e0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e5e4:	b987      	cbnz	r7, 9000e608 <osMessageQueueNew+0x2c>
9000e5e6:	4605      	mov	r5, r0
9000e5e8:	b170      	cbz	r0, 9000e608 <osMessageQueueNew+0x2c>
9000e5ea:	b169      	cbz	r1, 9000e608 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e5ec:	4614      	mov	r4, r2
9000e5ee:	b17a      	cbz	r2, 9000e610 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e5f0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000e5f4:	b1c3      	cbz	r3, 9000e628 <osMessageQueueNew+0x4c>
9000e5f6:	2a4f      	cmp	r2, #79	@ 0x4f
9000e5f8:	d906      	bls.n	9000e608 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e5fa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e5fc:	b122      	cbz	r2, 9000e608 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e5fe:	fb01 f505 	mul.w	r5, r1, r5
9000e602:	6966      	ldr	r6, [r4, #20]
9000e604:	42ae      	cmp	r6, r5
9000e606:	d21e      	bcs.n	9000e646 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000e608:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e60a:	4628      	mov	r0, r5
9000e60c:	b003      	add	sp, #12
9000e60e:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e610:	f000 fc96 	bl	9000ef40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e614:	4605      	mov	r5, r0
9000e616:	2800      	cmp	r0, #0
9000e618:	d0f6      	beq.n	9000e608 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e61a:	4628      	mov	r0, r5
9000e61c:	4621      	mov	r1, r4
9000e61e:	f001 fb65 	bl	9000fcec <vQueueAddToRegistry>
}
9000e622:	4628      	mov	r0, r5
9000e624:	b003      	add	sp, #12
9000e626:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e628:	2a00      	cmp	r2, #0
9000e62a:	d1ed      	bne.n	9000e608 <osMessageQueueNew+0x2c>
9000e62c:	6923      	ldr	r3, [r4, #16]
9000e62e:	2b00      	cmp	r3, #0
9000e630:	d1ea      	bne.n	9000e608 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e632:	6962      	ldr	r2, [r4, #20]
9000e634:	2a00      	cmp	r2, #0
9000e636:	d1e7      	bne.n	9000e608 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e638:	f000 fc82 	bl	9000ef40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e63c:	4605      	mov	r5, r0
9000e63e:	2800      	cmp	r0, #0
9000e640:	d0e2      	beq.n	9000e608 <osMessageQueueNew+0x2c>
        name = attr->name;
9000e642:	6824      	ldr	r4, [r4, #0]
9000e644:	e7e9      	b.n	9000e61a <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e646:	9700      	str	r7, [sp, #0]
9000e648:	f000 fc0e 	bl	9000ee68 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e64c:	4605      	mov	r5, r0
9000e64e:	2800      	cmp	r0, #0
9000e650:	d1f7      	bne.n	9000e642 <osMessageQueueNew+0x66>
9000e652:	e7d9      	b.n	9000e608 <osMessageQueueNew+0x2c>

9000e654 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e654:	b560      	push	{r5, r6, lr}
9000e656:	461e      	mov	r6, r3
9000e658:	b083      	sub	sp, #12
9000e65a:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e65e:	fab0 f580 	clz	r5, r0
9000e662:	fab1 f381 	clz	r3, r1
9000e666:	096d      	lsrs	r5, r5, #5
9000e668:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000e66a:	b1da      	cbz	r2, 9000e6a4 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e66c:	2e00      	cmp	r6, #0
9000e66e:	bf18      	it	ne
9000e670:	f043 0301 	orrne.w	r3, r3, #1
9000e674:	bb33      	cbnz	r3, 9000e6c4 <osMessageQueuePut+0x70>
9000e676:	bb2d      	cbnz	r5, 9000e6c4 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e678:	462b      	mov	r3, r5
9000e67a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e67c:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e67e:	f000 fec9 	bl	9000f414 <xQueueGenericSendFromISR>
9000e682:	2801      	cmp	r0, #1
9000e684:	d11a      	bne.n	9000e6bc <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e686:	9b01      	ldr	r3, [sp, #4]
9000e688:	b14b      	cbz	r3, 9000e69e <osMessageQueuePut+0x4a>
9000e68a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e68e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e692:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e696:	f3bf 8f4f 	dsb	sy
9000e69a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e69e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e6a0:	b003      	add	sp, #12
9000e6a2:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e6a4:	b975      	cbnz	r5, 9000e6c4 <osMessageQueuePut+0x70>
9000e6a6:	b96b      	cbnz	r3, 9000e6c4 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e6a8:	4632      	mov	r2, r6
9000e6aa:	f000 fd31 	bl	9000f110 <xQueueGenericSend>
9000e6ae:	2801      	cmp	r0, #1
9000e6b0:	d0f5      	beq.n	9000e69e <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000e6b2:	b11e      	cbz	r6, 9000e6bc <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000e6b4:	f06f 0001 	mvn.w	r0, #1
}
9000e6b8:	b003      	add	sp, #12
9000e6ba:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000e6bc:	f06f 0002 	mvn.w	r0, #2
}
9000e6c0:	b003      	add	sp, #12
9000e6c2:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000e6c4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e6c8:	e7ea      	b.n	9000e6a0 <osMessageQueuePut+0x4c>
9000e6ca:	bf00      	nop

9000e6cc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e6cc:	b570      	push	{r4, r5, r6, lr}
9000e6ce:	461e      	mov	r6, r3
9000e6d0:	b082      	sub	sp, #8
9000e6d2:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e6d6:	fab0 f580 	clz	r5, r0
9000e6da:	fab1 f481 	clz	r4, r1
9000e6de:	096d      	lsrs	r5, r5, #5
9000e6e0:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000e6e2:	b1d3      	cbz	r3, 9000e71a <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e6e4:	2e00      	cmp	r6, #0
9000e6e6:	bf18      	it	ne
9000e6e8:	f044 0401 	orrne.w	r4, r4, #1
9000e6ec:	bb2c      	cbnz	r4, 9000e73a <osMessageQueueGet+0x6e>
9000e6ee:	bb25      	cbnz	r5, 9000e73a <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e6f0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e6f2:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e6f4:	f001 fa58 	bl	9000fba8 <xQueueReceiveFromISR>
9000e6f8:	2801      	cmp	r0, #1
9000e6fa:	d11a      	bne.n	9000e732 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e6fc:	9b01      	ldr	r3, [sp, #4]
9000e6fe:	b14b      	cbz	r3, 9000e714 <osMessageQueueGet+0x48>
9000e700:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e704:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e708:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e70c:	f3bf 8f4f 	dsb	sy
9000e710:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e714:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e716:	b002      	add	sp, #8
9000e718:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e71a:	b975      	cbnz	r5, 9000e73a <osMessageQueueGet+0x6e>
9000e71c:	b96c      	cbnz	r4, 9000e73a <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e71e:	4632      	mov	r2, r6
9000e720:	f000 ff34 	bl	9000f58c <xQueueReceive>
9000e724:	2801      	cmp	r0, #1
9000e726:	d0f5      	beq.n	9000e714 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000e728:	b11e      	cbz	r6, 9000e732 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000e72a:	f06f 0001 	mvn.w	r0, #1
}
9000e72e:	b002      	add	sp, #8
9000e730:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000e732:	f06f 0002 	mvn.w	r0, #2
}
9000e736:	b002      	add	sp, #8
9000e738:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000e73a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e73e:	e7ea      	b.n	9000e716 <osMessageQueueGet+0x4a>

9000e740 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e740:	4b04      	ldr	r3, [pc, #16]	@ (9000e754 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e742:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e744:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e746:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e748:	4c03      	ldr	r4, [pc, #12]	@ (9000e758 <vApplicationGetIdleTaskMemory+0x18>)
9000e74a:	600c      	str	r4, [r1, #0]
}
9000e74c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e750:	6013      	str	r3, [r2, #0]
}
9000e752:	4770      	bx	lr
9000e754:	24008fc4 	.word	0x24008fc4
9000e758:	24008dc4 	.word	0x24008dc4

9000e75c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e75c:	4b05      	ldr	r3, [pc, #20]	@ (9000e774 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e75e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e760:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e762:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e766:	4c04      	ldr	r4, [pc, #16]	@ (9000e778 <vApplicationGetTimerTaskMemory+0x1c>)
9000e768:	600c      	str	r4, [r1, #0]
}
9000e76a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e76e:	6013      	str	r3, [r2, #0]
}
9000e770:	4770      	bx	lr
9000e772:	bf00      	nop
9000e774:	24008d64 	.word	0x24008d64
9000e778:	24008964 	.word	0x24008964

9000e77c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e77c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e780:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e782:	f002 f805 	bl	90010790 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e786:	4a54      	ldr	r2, [pc, #336]	@ (9000e8d8 <pvPortMalloc+0x15c>)
9000e788:	6815      	ldr	r5, [r2, #0]
9000e78a:	2d00      	cmp	r5, #0
9000e78c:	d035      	beq.n	9000e7fa <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e78e:	4b53      	ldr	r3, [pc, #332]	@ (9000e8dc <pvPortMalloc+0x160>)
9000e790:	681e      	ldr	r6, [r3, #0]
9000e792:	4234      	tst	r4, r6
9000e794:	d12b      	bne.n	9000e7ee <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e796:	b354      	cbz	r4, 9000e7ee <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000e798:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e79c:	0764      	lsls	r4, r4, #29
9000e79e:	d002      	beq.n	9000e7a6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e7a0:	f020 0007 	bic.w	r0, r0, #7
9000e7a4:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e7a6:	b310      	cbz	r0, 9000e7ee <pvPortMalloc+0x72>
9000e7a8:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000e8f0 <pvPortMalloc+0x174>
9000e7ac:	f8de c000 	ldr.w	ip, [lr]
9000e7b0:	4584      	cmp	ip, r0
9000e7b2:	d31c      	bcc.n	9000e7ee <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e7b4:	4c4a      	ldr	r4, [pc, #296]	@ (9000e8e0 <pvPortMalloc+0x164>)
9000e7b6:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e7b8:	e003      	b.n	9000e7c2 <pvPortMalloc+0x46>
9000e7ba:	681a      	ldr	r2, [r3, #0]
9000e7bc:	b122      	cbz	r2, 9000e7c8 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000e7be:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000e7c0:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e7c2:	6859      	ldr	r1, [r3, #4]
9000e7c4:	4281      	cmp	r1, r0
9000e7c6:	d3f8      	bcc.n	9000e7ba <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e7c8:	42ab      	cmp	r3, r5
9000e7ca:	d010      	beq.n	9000e7ee <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e7cc:	681a      	ldr	r2, [r3, #0]
9000e7ce:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e7d0:	1a0c      	subs	r4, r1, r0
9000e7d2:	2c10      	cmp	r4, #16
9000e7d4:	d947      	bls.n	9000e866 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e7d6:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e7d8:	0751      	lsls	r1, r2, #29
9000e7da:	d02d      	beq.n	9000e838 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e7dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7e0:	f383 8811 	msr	BASEPRI, r3
9000e7e4:	f3bf 8f6f 	isb	sy
9000e7e8:	f3bf 8f4f 	dsb	sy
9000e7ec:	e7fe      	b.n	9000e7ec <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000e7ee:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e7f0:	f001 ffd6 	bl	900107a0 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e7f4:	4620      	mov	r0, r4
9000e7f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000e7fa:	4b3a      	ldr	r3, [pc, #232]	@ (9000e8e4 <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e7fc:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e800:	4e37      	ldr	r6, [pc, #220]	@ (9000e8e0 <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e802:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000e804:	4d38      	ldr	r5, [pc, #224]	@ (9000e8e8 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e806:	bf18      	it	ne
9000e808:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e80a:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e80e:	bf18      	it	ne
9000e810:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000e814:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e816:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e818:	6033      	str	r3, [r6, #0]
9000e81a:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000e81c:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e81e:	1aeb      	subs	r3, r5, r3
}
9000e820:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000e822:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e826:	4a31      	ldr	r2, [pc, #196]	@ (9000e8ec <pvPortMalloc+0x170>)
9000e828:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e82a:	4a31      	ldr	r2, [pc, #196]	@ (9000e8f0 <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e82c:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e830:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e832:	4b2a      	ldr	r3, [pc, #168]	@ (9000e8dc <pvPortMalloc+0x160>)
9000e834:	6018      	str	r0, [r3, #0]
}
9000e836:	e7ac      	b.n	9000e792 <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e838:	4929      	ldr	r1, [pc, #164]	@ (9000e8e0 <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e83a:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000e83c:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e83e:	460c      	mov	r4, r1
9000e840:	6809      	ldr	r1, [r1, #0]
9000e842:	428a      	cmp	r2, r1
9000e844:	d8fb      	bhi.n	9000e83e <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e846:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e848:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e84c:	eb04 0907 	add.w	r9, r4, r7
9000e850:	454a      	cmp	r2, r9
9000e852:	d028      	beq.n	9000e8a6 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e854:	eb02 0708 	add.w	r7, r2, r8
9000e858:	42b9      	cmp	r1, r7
9000e85a:	d02b      	beq.n	9000e8b4 <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000e85c:	6011      	str	r1, [r2, #0]
9000e85e:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e860:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e862:	bf18      	it	ne
9000e864:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e866:	4821      	ldr	r0, [pc, #132]	@ (9000e8ec <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e868:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e86c:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000e86e:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e870:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e872:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e876:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e878:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e87c:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e87e:	bf38      	it	cc
9000e880:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000e882:	481c      	ldr	r0, [pc, #112]	@ (9000e8f4 <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000e884:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000e886:	6802      	ldr	r2, [r0, #0]
9000e888:	3201      	adds	r2, #1
9000e88a:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000e88c:	f001 ff88 	bl	900107a0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e890:	0763      	lsls	r3, r4, #29
9000e892:	d0af      	beq.n	9000e7f4 <pvPortMalloc+0x78>
9000e894:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e898:	f383 8811 	msr	BASEPRI, r3
9000e89c:	f3bf 8f6f 	isb	sy
9000e8a0:	f3bf 8f4f 	dsb	sy
9000e8a4:	e7fe      	b.n	9000e8a4 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e8a6:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e8a8:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e8aa:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e8ac:	4281      	cmp	r1, r0
9000e8ae:	d00a      	beq.n	9000e8c6 <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e8b0:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000e8b2:	e7d8      	b.n	9000e866 <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e8b4:	42a9      	cmp	r1, r5
9000e8b6:	d0d1      	beq.n	9000e85c <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8b8:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8ba:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8bc:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8be:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8c0:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e8c2:	6859      	ldr	r1, [r3, #4]
9000e8c4:	e7cc      	b.n	9000e860 <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e8c6:	42a9      	cmp	r1, r5
9000e8c8:	d0f2      	beq.n	9000e8b0 <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8ca:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8cc:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8ce:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8d0:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8d2:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8d4:	e7ec      	b.n	9000e8b0 <pvPortMalloc+0x134>
9000e8d6:	bf00      	nop
9000e8d8:	2400903c 	.word	0x2400903c
9000e8dc:	24009028 	.word	0x24009028
9000e8e0:	24009040 	.word	0x24009040
9000e8e4:	24009048 	.word	0x24009048
9000e8e8:	240216e0 	.word	0x240216e0
9000e8ec:	24009034 	.word	0x24009034
9000e8f0:	24009038 	.word	0x24009038
9000e8f4:	24009030 	.word	0x24009030

9000e8f8 <vPortFree>:
	if( pv != NULL )
9000e8f8:	b1d0      	cbz	r0, 9000e930 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e8fa:	4a2f      	ldr	r2, [pc, #188]	@ (9000e9b8 <vPortFree+0xc0>)
9000e8fc:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e900:	6812      	ldr	r2, [r2, #0]
9000e902:	4213      	tst	r3, r2
9000e904:	d00b      	beq.n	9000e91e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e906:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e90a:	b191      	cbz	r1, 9000e932 <vPortFree+0x3a>
9000e90c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e910:	f383 8811 	msr	BASEPRI, r3
9000e914:	f3bf 8f6f 	isb	sy
9000e918:	f3bf 8f4f 	dsb	sy
9000e91c:	e7fe      	b.n	9000e91c <vPortFree+0x24>
9000e91e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e922:	f383 8811 	msr	BASEPRI, r3
9000e926:	f3bf 8f6f 	isb	sy
9000e92a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e92e:	e7fe      	b.n	9000e92e <vPortFree+0x36>
9000e930:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e932:	ea23 0302 	bic.w	r3, r3, r2
{
9000e936:	b530      	push	{r4, r5, lr}
9000e938:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e93a:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e93e:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e942:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e944:	f001 ff24 	bl	90010790 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e948:	4a1c      	ldr	r2, [pc, #112]	@ (9000e9bc <vPortFree+0xc4>)
9000e94a:	9801      	ldr	r0, [sp, #4]
9000e94c:	6813      	ldr	r3, [r2, #0]
9000e94e:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000e952:	440b      	add	r3, r1
9000e954:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e956:	4b1a      	ldr	r3, [pc, #104]	@ (9000e9c0 <vPortFree+0xc8>)
9000e958:	461a      	mov	r2, r3
9000e95a:	681b      	ldr	r3, [r3, #0]
9000e95c:	429c      	cmp	r4, r3
9000e95e:	d8fb      	bhi.n	9000e958 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e960:	6855      	ldr	r5, [r2, #4]
9000e962:	eb02 0e05 	add.w	lr, r2, r5
9000e966:	4574      	cmp	r4, lr
9000e968:	d011      	beq.n	9000e98e <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e96a:	eb04 0c01 	add.w	ip, r4, r1
9000e96e:	4563      	cmp	r3, ip
9000e970:	d01d      	beq.n	9000e9ae <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000e972:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000e976:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e978:	bf18      	it	ne
9000e97a:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e97c:	4a11      	ldr	r2, [pc, #68]	@ (9000e9c4 <vPortFree+0xcc>)
9000e97e:	6813      	ldr	r3, [r2, #0]
9000e980:	3301      	adds	r3, #1
9000e982:	6013      	str	r3, [r2, #0]
}
9000e984:	b003      	add	sp, #12
9000e986:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e98a:	f001 bf09 	b.w	900107a0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e98e:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e990:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e992:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e994:	4283      	cmp	r3, r0
9000e996:	d1f1      	bne.n	9000e97c <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e998:	480b      	ldr	r0, [pc, #44]	@ (9000e9c8 <vPortFree+0xd0>)
9000e99a:	6800      	ldr	r0, [r0, #0]
9000e99c:	4283      	cmp	r3, r0
9000e99e:	d0ed      	beq.n	9000e97c <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000e9a0:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e9a2:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e9a6:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e9a8:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e9aa:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e9ac:	e7e3      	b.n	9000e976 <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e9ae:	4d06      	ldr	r5, [pc, #24]	@ (9000e9c8 <vPortFree+0xd0>)
9000e9b0:	682d      	ldr	r5, [r5, #0]
9000e9b2:	42ab      	cmp	r3, r5
9000e9b4:	d1f5      	bne.n	9000e9a2 <vPortFree+0xaa>
9000e9b6:	e7dc      	b.n	9000e972 <vPortFree+0x7a>
9000e9b8:	24009028 	.word	0x24009028
9000e9bc:	24009038 	.word	0x24009038
9000e9c0:	24009040 	.word	0x24009040
9000e9c4:	2400902c 	.word	0x2400902c
9000e9c8:	2400903c 	.word	0x2400903c

9000e9cc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e9cc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e9d0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e9d4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e9d6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e9d8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e9da:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e9dc:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e9e0:	4770      	bx	lr
9000e9e2:	bf00      	nop

9000e9e4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e9e4:	2300      	movs	r3, #0
9000e9e6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e9e8:	4770      	bx	lr
9000e9ea:	bf00      	nop

9000e9ec <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e9ec:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000e9ee:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000e9f0:	3301      	adds	r3, #1
{
9000e9f2:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e9f4:	6894      	ldr	r4, [r2, #8]
9000e9f6:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e9fa:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e9fc:	6091      	str	r1, [r2, #8]
}
9000e9fe:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000ea02:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000ea04:	6003      	str	r3, [r0, #0]
}
9000ea06:	4770      	bx	lr

9000ea08 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000ea08:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000ea0a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000ea0c:	1c6b      	adds	r3, r5, #1
9000ea0e:	d010      	beq.n	9000ea32 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000ea10:	f100 0308 	add.w	r3, r0, #8
9000ea14:	461c      	mov	r4, r3
9000ea16:	685b      	ldr	r3, [r3, #4]
9000ea18:	681a      	ldr	r2, [r3, #0]
9000ea1a:	42aa      	cmp	r2, r5
9000ea1c:	d9fa      	bls.n	9000ea14 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000ea1e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000ea20:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000ea22:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000ea24:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000ea26:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000ea28:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000ea2a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000ea2c:	6002      	str	r2, [r0, #0]
}
9000ea2e:	bc30      	pop	{r4, r5}
9000ea30:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000ea32:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000ea34:	6863      	ldr	r3, [r4, #4]
9000ea36:	e7f2      	b.n	9000ea1e <vListInsert+0x16>

9000ea38 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000ea38:	6903      	ldr	r3, [r0, #16]
{
9000ea3a:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000ea3c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000ea3e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000ea42:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000ea44:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000ea48:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000ea4a:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000ea4c:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000ea50:	bf08      	it	eq
9000ea52:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000ea54:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000ea56:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000ea58:	3a01      	subs	r2, #1
9000ea5a:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000ea5c:	6818      	ldr	r0, [r3, #0]
}
9000ea5e:	4770      	bx	lr

9000ea60 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000ea60:	4808      	ldr	r0, [pc, #32]	@ (9000ea84 <prvPortStartFirstTask+0x24>)
9000ea62:	6800      	ldr	r0, [r0, #0]
9000ea64:	6800      	ldr	r0, [r0, #0]
9000ea66:	f380 8808 	msr	MSP, r0
9000ea6a:	f04f 0000 	mov.w	r0, #0
9000ea6e:	f380 8814 	msr	CONTROL, r0
9000ea72:	b662      	cpsie	i
9000ea74:	b661      	cpsie	f
9000ea76:	f3bf 8f4f 	dsb	sy
9000ea7a:	f3bf 8f6f 	isb	sy
9000ea7e:	df00      	svc	0
9000ea80:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000ea82:	0000      	.short	0x0000
9000ea84:	e000ed08 	.word	0xe000ed08

9000ea88 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000ea88:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000ea98 <vPortEnableVFP+0x10>
9000ea8c:	6801      	ldr	r1, [r0, #0]
9000ea8e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000ea92:	6001      	str	r1, [r0, #0]
9000ea94:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000ea96:	0000      	.short	0x0000
9000ea98:	e000ed88 	.word	0xe000ed88

9000ea9c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000ea9c:	4b0e      	ldr	r3, [pc, #56]	@ (9000ead8 <prvTaskExitError+0x3c>)
{
9000ea9e:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000eaa0:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000eaa2:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000eaa4:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000eaa6:	3301      	adds	r3, #1
9000eaa8:	d008      	beq.n	9000eabc <prvTaskExitError+0x20>
9000eaaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eaae:	f383 8811 	msr	BASEPRI, r3
9000eab2:	f3bf 8f6f 	isb	sy
9000eab6:	f3bf 8f4f 	dsb	sy
9000eaba:	e7fe      	b.n	9000eaba <prvTaskExitError+0x1e>
9000eabc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eac0:	f383 8811 	msr	BASEPRI, r3
9000eac4:	f3bf 8f6f 	isb	sy
9000eac8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000eacc:	9b01      	ldr	r3, [sp, #4]
9000eace:	2b00      	cmp	r3, #0
9000ead0:	d0fc      	beq.n	9000eacc <prvTaskExitError+0x30>
}
9000ead2:	b002      	add	sp, #8
9000ead4:	4770      	bx	lr
9000ead6:	bf00      	nop
9000ead8:	24000084 	.word	0x24000084

9000eadc <pxPortInitialiseStack>:
{
9000eadc:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000eade:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000eae2:	4809      	ldr	r0, [pc, #36]	@ (9000eb08 <pxPortInitialiseStack+0x2c>)
{
9000eae4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000eae6:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000eaea:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000eaee:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000eaf2:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000eaf6:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000eafa:	f06f 0102 	mvn.w	r1, #2
}
9000eafe:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000eb02:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000eb06:	4770      	bx	lr
9000eb08:	9000ea9d 	.word	0x9000ea9d
9000eb0c:	00000000 	.word	0x00000000

9000eb10 <SVC_Handler>:
	__asm volatile (
9000eb10:	4b07      	ldr	r3, [pc, #28]	@ (9000eb30 <pxCurrentTCBConst2>)
9000eb12:	6819      	ldr	r1, [r3, #0]
9000eb14:	6808      	ldr	r0, [r1, #0]
9000eb16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eb1a:	f380 8809 	msr	PSP, r0
9000eb1e:	f3bf 8f6f 	isb	sy
9000eb22:	f04f 0000 	mov.w	r0, #0
9000eb26:	f380 8811 	msr	BASEPRI, r0
9000eb2a:	4770      	bx	lr
9000eb2c:	f3af 8000 	nop.w

9000eb30 <pxCurrentTCBConst2>:
9000eb30:	24021c28 	.word	0x24021c28

9000eb34 <vPortEnterCritical>:
9000eb34:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb38:	f383 8811 	msr	BASEPRI, r3
9000eb3c:	f3bf 8f6f 	isb	sy
9000eb40:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000eb44:	4a0b      	ldr	r2, [pc, #44]	@ (9000eb74 <vPortEnterCritical+0x40>)
9000eb46:	6813      	ldr	r3, [r2, #0]
9000eb48:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000eb4a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000eb4c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000eb4e:	d000      	beq.n	9000eb52 <vPortEnterCritical+0x1e>
}
9000eb50:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000eb52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eb56:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000eb5a:	b2db      	uxtb	r3, r3
9000eb5c:	2b00      	cmp	r3, #0
9000eb5e:	d0f7      	beq.n	9000eb50 <vPortEnterCritical+0x1c>
9000eb60:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb64:	f383 8811 	msr	BASEPRI, r3
9000eb68:	f3bf 8f6f 	isb	sy
9000eb6c:	f3bf 8f4f 	dsb	sy
9000eb70:	e7fe      	b.n	9000eb70 <vPortEnterCritical+0x3c>
9000eb72:	bf00      	nop
9000eb74:	24000084 	.word	0x24000084

9000eb78 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000eb78:	4a08      	ldr	r2, [pc, #32]	@ (9000eb9c <vPortExitCritical+0x24>)
9000eb7a:	6813      	ldr	r3, [r2, #0]
9000eb7c:	b943      	cbnz	r3, 9000eb90 <vPortExitCritical+0x18>
9000eb7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb82:	f383 8811 	msr	BASEPRI, r3
9000eb86:	f3bf 8f6f 	isb	sy
9000eb8a:	f3bf 8f4f 	dsb	sy
9000eb8e:	e7fe      	b.n	9000eb8e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000eb90:	3b01      	subs	r3, #1
9000eb92:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000eb94:	b90b      	cbnz	r3, 9000eb9a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000eb96:	f383 8811 	msr	BASEPRI, r3
}
9000eb9a:	4770      	bx	lr
9000eb9c:	24000084 	.word	0x24000084

9000eba0 <PendSV_Handler>:
	__asm volatile
9000eba0:	f3ef 8009 	mrs	r0, PSP
9000eba4:	f3bf 8f6f 	isb	sy
9000eba8:	4b15      	ldr	r3, [pc, #84]	@ (9000ec00 <pxCurrentTCBConst>)
9000ebaa:	681a      	ldr	r2, [r3, #0]
9000ebac:	f01e 0f10 	tst.w	lr, #16
9000ebb0:	bf08      	it	eq
9000ebb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ebb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ebba:	6010      	str	r0, [r2, #0]
9000ebbc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ebc0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ebc4:	f380 8811 	msr	BASEPRI, r0
9000ebc8:	f3bf 8f4f 	dsb	sy
9000ebcc:	f3bf 8f6f 	isb	sy
9000ebd0:	f001 fe22 	bl	90010818 <vTaskSwitchContext>
9000ebd4:	f04f 0000 	mov.w	r0, #0
9000ebd8:	f380 8811 	msr	BASEPRI, r0
9000ebdc:	bc09      	pop	{r0, r3}
9000ebde:	6819      	ldr	r1, [r3, #0]
9000ebe0:	6808      	ldr	r0, [r1, #0]
9000ebe2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ebe6:	f01e 0f10 	tst.w	lr, #16
9000ebea:	bf08      	it	eq
9000ebec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000ebf0:	f380 8809 	msr	PSP, r0
9000ebf4:	f3bf 8f6f 	isb	sy
9000ebf8:	4770      	bx	lr
9000ebfa:	bf00      	nop
9000ebfc:	f3af 8000 	nop.w

9000ec00 <pxCurrentTCBConst>:
9000ec00:	24021c28 	.word	0x24021c28

9000ec04 <xPortSysTickHandler>:
{
9000ec04:	b508      	push	{r3, lr}
	__asm volatile
9000ec06:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec0a:	f383 8811 	msr	BASEPRI, r3
9000ec0e:	f3bf 8f6f 	isb	sy
9000ec12:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000ec16:	f001 fdd9 	bl	900107cc <xTaskIncrementTick>
9000ec1a:	b128      	cbz	r0, 9000ec28 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000ec1c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ec20:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ec24:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000ec28:	2300      	movs	r3, #0
9000ec2a:	f383 8811 	msr	BASEPRI, r3
}
9000ec2e:	bd08      	pop	{r3, pc}

9000ec30 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ec30:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000ec34:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ec36:	4806      	ldr	r0, [pc, #24]	@ (9000ec50 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ec38:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ec3a:	4906      	ldr	r1, [pc, #24]	@ (9000ec54 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000ec3c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ec3e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ec40:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ec42:	fba1 1303 	umull	r1, r3, r1, r3
9000ec46:	099b      	lsrs	r3, r3, #6
9000ec48:	3b01      	subs	r3, #1
9000ec4a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ec4c:	6110      	str	r0, [r2, #16]
}
9000ec4e:	4770      	bx	lr
9000ec50:	24000078 	.word	0x24000078
9000ec54:	10624dd3 	.word	0x10624dd3

9000ec58 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000ec58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ec5c:	4a48      	ldr	r2, [pc, #288]	@ (9000ed80 <xPortStartScheduler+0x128>)
9000ec5e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000ec62:	4291      	cmp	r1, r2
9000ec64:	d041      	beq.n	9000ecea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000ec66:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000ec6a:	4b46      	ldr	r3, [pc, #280]	@ (9000ed84 <xPortStartScheduler+0x12c>)
9000ec6c:	429a      	cmp	r2, r3
9000ec6e:	d033      	beq.n	9000ecd8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ec70:	4b45      	ldr	r3, [pc, #276]	@ (9000ed88 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000ec72:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ec76:	4845      	ldr	r0, [pc, #276]	@ (9000ed8c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ec78:	4945      	ldr	r1, [pc, #276]	@ (9000ed90 <xPortStartScheduler+0x138>)
{
9000ec7a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ec7c:	781a      	ldrb	r2, [r3, #0]
{
9000ec7e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ec80:	b2d2      	uxtb	r2, r2
9000ec82:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ec84:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000ec86:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000ec8a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ec8c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000ec8e:	b2db      	uxtb	r3, r3
9000ec90:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ec94:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ec98:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000ec9c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eca0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eca2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eca4:	d50f      	bpl.n	9000ecc6 <xPortStartScheduler+0x6e>
9000eca6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000eca8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000ecac:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ecae:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000ecb0:	005b      	lsls	r3, r3, #1
9000ecb2:	b2db      	uxtb	r3, r3
9000ecb4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ecb8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000ecbc:	061b      	lsls	r3, r3, #24
9000ecbe:	d4f3      	bmi.n	9000eca8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000ecc0:	2903      	cmp	r1, #3
9000ecc2:	d01b      	beq.n	9000ecfc <xPortStartScheduler+0xa4>
9000ecc4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000ecc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecca:	f383 8811 	msr	BASEPRI, r3
9000ecce:	f3bf 8f6f 	isb	sy
9000ecd2:	f3bf 8f4f 	dsb	sy
9000ecd6:	e7fe      	b.n	9000ecd6 <xPortStartScheduler+0x7e>
9000ecd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecdc:	f383 8811 	msr	BASEPRI, r3
9000ece0:	f3bf 8f6f 	isb	sy
9000ece4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000ece8:	e7fe      	b.n	9000ece8 <xPortStartScheduler+0x90>
9000ecea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecee:	f383 8811 	msr	BASEPRI, r3
9000ecf2:	f3bf 8f6f 	isb	sy
9000ecf6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000ecfa:	e7fe      	b.n	9000ecfa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ecfc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000ecfe:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000ed02:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ed06:	4a20      	ldr	r2, [pc, #128]	@ (9000ed88 <xPortStartScheduler+0x130>)
9000ed08:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000ed0a:	4e22      	ldr	r6, [pc, #136]	@ (9000ed94 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000ed0c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000ed0e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ed10:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000ed12:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000ed16:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000ed1a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000ed1e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000ed22:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000ed26:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000ed2a:	f7ff ff81 	bl	9000ec30 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000ed2e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000ed30:	f7ff feaa 	bl	9000ea88 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000ed34:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000ed38:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000ed3c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000ed40:	f7ff fe8e 	bl	9000ea60 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000ed44:	f001 fd68 	bl	90010818 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000ed48:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000ed4a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000ed4c:	3301      	adds	r3, #1
9000ed4e:	d008      	beq.n	9000ed62 <xPortStartScheduler+0x10a>
9000ed50:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed54:	f383 8811 	msr	BASEPRI, r3
9000ed58:	f3bf 8f6f 	isb	sy
9000ed5c:	f3bf 8f4f 	dsb	sy
9000ed60:	e7fe      	b.n	9000ed60 <xPortStartScheduler+0x108>
9000ed62:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed66:	f383 8811 	msr	BASEPRI, r3
9000ed6a:	f3bf 8f6f 	isb	sy
9000ed6e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000ed72:	9b03      	ldr	r3, [sp, #12]
9000ed74:	2b00      	cmp	r3, #0
9000ed76:	d0fc      	beq.n	9000ed72 <xPortStartScheduler+0x11a>
}
9000ed78:	2000      	movs	r0, #0
9000ed7a:	b004      	add	sp, #16
9000ed7c:	bd70      	pop	{r4, r5, r6, pc}
9000ed7e:	bf00      	nop
9000ed80:	410fc271 	.word	0x410fc271
9000ed84:	410fc270 	.word	0x410fc270
9000ed88:	e000e400 	.word	0xe000e400
9000ed8c:	240216e8 	.word	0x240216e8
9000ed90:	240216ec 	.word	0x240216ec
9000ed94:	24000084 	.word	0x24000084

9000ed98 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000ed98:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000ed9c:	2b0f      	cmp	r3, #15
9000ed9e:	d90e      	bls.n	9000edbe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000eda0:	4911      	ldr	r1, [pc, #68]	@ (9000ede8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000eda2:	4a12      	ldr	r2, [pc, #72]	@ (9000edec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000eda4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000eda6:	7812      	ldrb	r2, [r2, #0]
9000eda8:	429a      	cmp	r2, r3
9000edaa:	d908      	bls.n	9000edbe <vPortValidateInterruptPriority+0x26>
9000edac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edb0:	f383 8811 	msr	BASEPRI, r3
9000edb4:	f3bf 8f6f 	isb	sy
9000edb8:	f3bf 8f4f 	dsb	sy
9000edbc:	e7fe      	b.n	9000edbc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000edbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000edc2:	4a0b      	ldr	r2, [pc, #44]	@ (9000edf0 <vPortValidateInterruptPriority+0x58>)
9000edc4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000edc8:	6812      	ldr	r2, [r2, #0]
9000edca:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000edce:	4293      	cmp	r3, r2
9000edd0:	d908      	bls.n	9000ede4 <vPortValidateInterruptPriority+0x4c>
9000edd2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edd6:	f383 8811 	msr	BASEPRI, r3
9000edda:	f3bf 8f6f 	isb	sy
9000edde:	f3bf 8f4f 	dsb	sy
9000ede2:	e7fe      	b.n	9000ede2 <vPortValidateInterruptPriority+0x4a>
	}
9000ede4:	4770      	bx	lr
9000ede6:	bf00      	nop
9000ede8:	e000e3f0 	.word	0xe000e3f0
9000edec:	240216ec 	.word	0x240216ec
9000edf0:	240216e8 	.word	0x240216e8

9000edf4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000edf4:	b570      	push	{r4, r5, r6, lr}
9000edf6:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000edf8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000edfa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000edfc:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000edfe:	b92a      	cbnz	r2, 9000ee0c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ee00:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ee02:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ee04:	b32e      	cbz	r6, 9000ee52 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000ee06:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ee08:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000ee0a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000ee0c:	b97e      	cbnz	r6, 9000ee2e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ee0e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ee10:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ee12:	f01c f8a4 	bl	9002af5e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ee16:	6863      	ldr	r3, [r4, #4]
9000ee18:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ee1a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ee1c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ee1e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ee20:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000ee22:	bf24      	itt	cs
9000ee24:	6823      	ldrcs	r3, [r4, #0]
9000ee26:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000ee28:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ee2a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000ee2c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000ee2e:	68c0      	ldr	r0, [r0, #12]
9000ee30:	f01c f895 	bl	9002af5e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ee34:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ee36:	68e3      	ldr	r3, [r4, #12]
9000ee38:	4251      	negs	r1, r2
9000ee3a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ee3c:	6822      	ldr	r2, [r4, #0]
9000ee3e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ee40:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ee42:	d202      	bcs.n	9000ee4a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000ee44:	68a3      	ldr	r3, [r4, #8]
9000ee46:	440b      	add	r3, r1
9000ee48:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000ee4a:	2e02      	cmp	r6, #2
9000ee4c:	d006      	beq.n	9000ee5c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ee4e:	3501      	adds	r5, #1
9000ee50:	e7ea      	b.n	9000ee28 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ee52:	6880      	ldr	r0, [r0, #8]
9000ee54:	f001 feb2 	bl	90010bbc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000ee58:	60a6      	str	r6, [r4, #8]
9000ee5a:	e7d5      	b.n	9000ee08 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ee5c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000ee5e:	f04f 0000 	mov.w	r0, #0
9000ee62:	bf38      	it	cc
9000ee64:	2501      	movcc	r5, #1
9000ee66:	e7cf      	b.n	9000ee08 <prvCopyDataToQueue+0x14>

9000ee68 <xQueueGenericCreateStatic>:
	{
9000ee68:	b530      	push	{r4, r5, lr}
9000ee6a:	b083      	sub	sp, #12
9000ee6c:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ee70:	b940      	cbnz	r0, 9000ee84 <xQueueGenericCreateStatic+0x1c>
9000ee72:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee76:	f383 8811 	msr	BASEPRI, r3
9000ee7a:	f3bf 8f6f 	isb	sy
9000ee7e:	f3bf 8f4f 	dsb	sy
9000ee82:	e7fe      	b.n	9000ee82 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000ee84:	461c      	mov	r4, r3
9000ee86:	b153      	cbz	r3, 9000ee9e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000ee88:	b30a      	cbz	r2, 9000eece <xQueueGenericCreateStatic+0x66>
9000ee8a:	b989      	cbnz	r1, 9000eeb0 <xQueueGenericCreateStatic+0x48>
9000ee8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee90:	f383 8811 	msr	BASEPRI, r3
9000ee94:	f3bf 8f6f 	isb	sy
9000ee98:	f3bf 8f4f 	dsb	sy
9000ee9c:	e7fe      	b.n	9000ee9c <xQueueGenericCreateStatic+0x34>
9000ee9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eea2:	f383 8811 	msr	BASEPRI, r3
9000eea6:	f3bf 8f6f 	isb	sy
9000eeaa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000eeae:	e7fe      	b.n	9000eeae <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000eeb0:	b16a      	cbz	r2, 9000eece <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000eeb2:	2350      	movs	r3, #80	@ 0x50
9000eeb4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000eeb6:	9b01      	ldr	r3, [sp, #4]
9000eeb8:	2b50      	cmp	r3, #80	@ 0x50
9000eeba:	d013      	beq.n	9000eee4 <xQueueGenericCreateStatic+0x7c>
9000eebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eec0:	f383 8811 	msr	BASEPRI, r3
9000eec4:	f3bf 8f6f 	isb	sy
9000eec8:	f3bf 8f4f 	dsb	sy
9000eecc:	e7fe      	b.n	9000eecc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000eece:	2900      	cmp	r1, #0
9000eed0:	d0ef      	beq.n	9000eeb2 <xQueueGenericCreateStatic+0x4a>
9000eed2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eed6:	f383 8811 	msr	BASEPRI, r3
9000eeda:	f3bf 8f6f 	isb	sy
9000eede:	f3bf 8f4f 	dsb	sy
9000eee2:	e7fe      	b.n	9000eee2 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eee4:	2900      	cmp	r1, #0
9000eee6:	bf08      	it	eq
9000eee8:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000eeea:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eeec:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000eeee:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000eef0:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000eef2:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eef4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000eef8:	f7ff fe1c 	bl	9000eb34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eefc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eefe:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ef02:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef04:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ef08:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef0c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef0e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef10:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef12:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef14:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ef16:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef18:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef1a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000ef1c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ef20:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef24:	f7ff fd52 	bl	9000e9cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ef28:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ef2c:	f7ff fd4e 	bl	9000e9cc <vListInitialise>
	taskEXIT_CRITICAL();
9000ef30:	f7ff fe22 	bl	9000eb78 <vPortExitCritical>
	}
9000ef34:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000ef36:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000ef3a:	b003      	add	sp, #12
9000ef3c:	bd30      	pop	{r4, r5, pc}
9000ef3e:	bf00      	nop

9000ef40 <xQueueGenericCreate>:
	{
9000ef40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ef42:	b940      	cbnz	r0, 9000ef56 <xQueueGenericCreate+0x16>
9000ef44:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef48:	f383 8811 	msr	BASEPRI, r3
9000ef4c:	f3bf 8f6f 	isb	sy
9000ef50:	f3bf 8f4f 	dsb	sy
9000ef54:	e7fe      	b.n	9000ef54 <xQueueGenericCreate+0x14>
9000ef56:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ef58:	fb01 f000 	mul.w	r0, r1, r0
9000ef5c:	460e      	mov	r6, r1
9000ef5e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ef60:	3050      	adds	r0, #80	@ 0x50
9000ef62:	f7ff fc0b 	bl	9000e77c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ef66:	4604      	mov	r4, r0
9000ef68:	b340      	cbz	r0, 9000efbc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ef6a:	2300      	movs	r3, #0
9000ef6c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000ef70:	b336      	cbz	r6, 9000efc0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef72:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000ef76:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ef78:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000ef7c:	f7ff fdda 	bl	9000eb34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef80:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ef86:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef88:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ef8c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef90:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef92:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef94:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef96:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef98:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ef9a:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef9c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef9e:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000efa0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000efa4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000efa8:	f7ff fd10 	bl	9000e9cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000efac:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000efb0:	f7ff fd0c 	bl	9000e9cc <vListInitialise>
	taskEXIT_CRITICAL();
9000efb4:	f7ff fde0 	bl	9000eb78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000efb8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000efbc:	4620      	mov	r0, r4
9000efbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000efc0:	4603      	mov	r3, r0
9000efc2:	e7d8      	b.n	9000ef76 <xQueueGenericCreate+0x36>

9000efc4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000efc4:	b940      	cbnz	r0, 9000efd8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000efc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efca:	f383 8811 	msr	BASEPRI, r3
9000efce:	f3bf 8f6f 	isb	sy
9000efd2:	f3bf 8f4f 	dsb	sy
9000efd6:	e7fe      	b.n	9000efd6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000efd8:	4288      	cmp	r0, r1
9000efda:	d208      	bcs.n	9000efee <xQueueCreateCountingSemaphoreStatic+0x2a>
9000efdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efe0:	f383 8811 	msr	BASEPRI, r3
9000efe4:	f3bf 8f6f 	isb	sy
9000efe8:	f3bf 8f4f 	dsb	sy
9000efec:	e7fe      	b.n	9000efec <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000efee:	b530      	push	{r4, r5, lr}
9000eff0:	4614      	mov	r4, r2
9000eff2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000eff4:	2a00      	cmp	r2, #0
9000eff6:	d03b      	beq.n	9000f070 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000eff8:	2350      	movs	r3, #80	@ 0x50
9000effa:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000effc:	9b03      	ldr	r3, [sp, #12]
9000effe:	2b50      	cmp	r3, #80	@ 0x50
9000f000:	d008      	beq.n	9000f014 <xQueueCreateCountingSemaphoreStatic+0x50>
9000f002:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f006:	f383 8811 	msr	BASEPRI, r3
9000f00a:	f3bf 8f6f 	isb	sy
9000f00e:	f3bf 8f4f 	dsb	sy
9000f012:	e7fe      	b.n	9000f012 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000f014:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f016:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f018:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000f01a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f01c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f020:	6415      	str	r5, [r2, #64]	@ 0x40
9000f022:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f024:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000f026:	f7ff fd85 	bl	9000eb34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f02a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f02c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f02e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f030:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000f034:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f038:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f03a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f03c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f03e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f040:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f042:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f046:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f048:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f04c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f050:	f7ff fcbc 	bl	9000e9cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f054:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f058:	f7ff fcb8 	bl	9000e9cc <vListInitialise>
	taskEXIT_CRITICAL();
9000f05c:	f7ff fd8c 	bl	9000eb78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f060:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f062:	9901      	ldr	r1, [sp, #4]
	}
9000f064:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f066:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f06a:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000f06c:	b005      	add	sp, #20
9000f06e:	bd30      	pop	{r4, r5, pc}
9000f070:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f074:	f383 8811 	msr	BASEPRI, r3
9000f078:	f3bf 8f6f 	isb	sy
9000f07c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f080:	e7fe      	b.n	9000f080 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000f082:	bf00      	nop

9000f084 <xQueueCreateCountingSemaphore>:
	{
9000f084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000f086:	b940      	cbnz	r0, 9000f09a <xQueueCreateCountingSemaphore+0x16>
9000f088:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f08c:	f383 8811 	msr	BASEPRI, r3
9000f090:	f3bf 8f6f 	isb	sy
9000f094:	f3bf 8f4f 	dsb	sy
9000f098:	e7fe      	b.n	9000f098 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000f09a:	4288      	cmp	r0, r1
9000f09c:	4604      	mov	r4, r0
9000f09e:	460e      	mov	r6, r1
9000f0a0:	d208      	bcs.n	9000f0b4 <xQueueCreateCountingSemaphore+0x30>
9000f0a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0a6:	f383 8811 	msr	BASEPRI, r3
9000f0aa:	f3bf 8f6f 	isb	sy
9000f0ae:	f3bf 8f4f 	dsb	sy
9000f0b2:	e7fe      	b.n	9000f0b2 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f0b4:	2050      	movs	r0, #80	@ 0x50
9000f0b6:	f7ff fb61 	bl	9000e77c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f0ba:	4605      	mov	r5, r0
9000f0bc:	b330      	cbz	r0, 9000f10c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f0be:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f0c0:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000f0c2:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f0c4:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f0c8:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000f0ca:	f7ff fd33 	bl	9000eb34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0ce:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f0d0:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f0d2:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f0d6:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0d8:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000f0dc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0e0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0e2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0e4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0e6:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f0e8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f0ea:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f0ec:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f0f0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f0f4:	f7ff fc6a 	bl	9000e9cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f0f8:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000f0fc:	f7ff fc66 	bl	9000e9cc <vListInitialise>
	taskEXIT_CRITICAL();
9000f100:	f7ff fd3a 	bl	9000eb78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f104:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f106:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000f108:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000f10c:	4628      	mov	r0, r5
9000f10e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000f110 <xQueueGenericSend>:
{
9000f110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000f114:	b084      	sub	sp, #16
9000f116:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000f118:	2800      	cmp	r0, #0
9000f11a:	f000 8103 	beq.w	9000f324 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f11e:	4688      	mov	r8, r1
9000f120:	4604      	mov	r4, r0
9000f122:	461f      	mov	r7, r3
9000f124:	2900      	cmp	r1, #0
9000f126:	f000 8097 	beq.w	9000f258 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f12a:	2f02      	cmp	r7, #2
9000f12c:	d10b      	bne.n	9000f146 <xQueueGenericSend+0x36>
9000f12e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f130:	2b01      	cmp	r3, #1
9000f132:	d008      	beq.n	9000f146 <xQueueGenericSend+0x36>
9000f134:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f138:	f383 8811 	msr	BASEPRI, r3
9000f13c:	f3bf 8f6f 	isb	sy
9000f140:	f3bf 8f4f 	dsb	sy
9000f144:	e7fe      	b.n	9000f144 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f146:	f001 fce9 	bl	90010b1c <xTaskGetSchedulerState>
9000f14a:	2800      	cmp	r0, #0
9000f14c:	f000 80f3 	beq.w	9000f336 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f150:	f1a7 0902 	sub.w	r9, r7, #2
9000f154:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f156:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f15a:	fab9 f989 	clz	r9, r9
9000f15e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000f162:	f7ff fce7 	bl	9000eb34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f166:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000f168:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f16a:	429a      	cmp	r2, r3
9000f16c:	f0c0 80f0 	bcc.w	9000f350 <xQueueGenericSend+0x240>
9000f170:	f1b9 0f00 	cmp.w	r9, #0
9000f174:	f040 80ec 	bne.w	9000f350 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f178:	9b01      	ldr	r3, [sp, #4]
9000f17a:	2b00      	cmp	r3, #0
9000f17c:	f000 8101 	beq.w	9000f382 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000f180:	2d00      	cmp	r5, #0
9000f182:	f000 80cb 	beq.w	9000f31c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000f186:	f7ff fcf7 	bl	9000eb78 <vPortExitCritical>
		vTaskSuspendAll();
9000f18a:	f001 fb01 	bl	90010790 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f18e:	f7ff fcd1 	bl	9000eb34 <vPortEnterCritical>
9000f192:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f196:	2bff      	cmp	r3, #255	@ 0xff
9000f198:	d102      	bne.n	9000f1a0 <xQueueGenericSend+0x90>
9000f19a:	2300      	movs	r3, #0
9000f19c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000f1a0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f1a4:	2bff      	cmp	r3, #255	@ 0xff
9000f1a6:	d102      	bne.n	9000f1ae <xQueueGenericSend+0x9e>
9000f1a8:	2300      	movs	r3, #0
9000f1aa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000f1ae:	f7ff fce3 	bl	9000eb78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f1b2:	a901      	add	r1, sp, #4
9000f1b4:	a802      	add	r0, sp, #8
9000f1b6:	f001 fc69 	bl	90010a8c <xTaskCheckForTimeOut>
9000f1ba:	2800      	cmp	r0, #0
9000f1bc:	f040 80e5 	bne.w	9000f38a <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000f1c0:	f7ff fcb8 	bl	9000eb34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000f1c4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000f1c6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f1c8:	429a      	cmp	r2, r3
9000f1ca:	d052      	beq.n	9000f272 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000f1cc:	f7ff fcd4 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f1d0:	f7ff fcb0 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f1d4:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000f1d8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1da:	2d00      	cmp	r5, #0
9000f1dc:	dc04      	bgt.n	9000f1e8 <xQueueGenericSend+0xd8>
9000f1de:	e011      	b.n	9000f204 <xQueueGenericSend+0xf4>
			--cTxLock;
9000f1e0:	1e6a      	subs	r2, r5, #1
9000f1e2:	b2d3      	uxtb	r3, r2
9000f1e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1e6:	b16b      	cbz	r3, 9000f204 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1ec:	b153      	cbz	r3, 9000f204 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1ee:	f001 fbfb 	bl	900109e8 <xTaskRemoveFromEventList>
9000f1f2:	2800      	cmp	r0, #0
9000f1f4:	d0f4      	beq.n	9000f1e0 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000f1f6:	f001 fc8b 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f1fa:	1e6a      	subs	r2, r5, #1
9000f1fc:	b2d3      	uxtb	r3, r2
9000f1fe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f200:	2b00      	cmp	r3, #0
9000f202:	d1f1      	bne.n	9000f1e8 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000f204:	23ff      	movs	r3, #255	@ 0xff
9000f206:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f20a:	f7ff fcb5 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f20e:	f7ff fc91 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f212:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000f216:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f218:	2d00      	cmp	r5, #0
9000f21a:	dd14      	ble.n	9000f246 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f21c:	f104 0a10 	add.w	sl, r4, #16
9000f220:	e003      	b.n	9000f22a <xQueueGenericSend+0x11a>
				--cRxLock;
9000f222:	1e6a      	subs	r2, r5, #1
9000f224:	b2d3      	uxtb	r3, r2
9000f226:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f228:	b16b      	cbz	r3, 9000f246 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f22a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f22c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f22e:	b153      	cbz	r3, 9000f246 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f230:	f001 fbda 	bl	900109e8 <xTaskRemoveFromEventList>
9000f234:	2800      	cmp	r0, #0
9000f236:	d0f4      	beq.n	9000f222 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000f238:	f001 fc6a 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f23c:	1e6a      	subs	r2, r5, #1
9000f23e:	b2d3      	uxtb	r3, r2
9000f240:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f242:	2b00      	cmp	r3, #0
9000f244:	d1f1      	bne.n	9000f22a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f246:	23ff      	movs	r3, #255	@ 0xff
9000f248:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f24c:	f7ff fc94 	bl	9000eb78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f250:	f001 faa6 	bl	900107a0 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f254:	2501      	movs	r5, #1
9000f256:	e784      	b.n	9000f162 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f258:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f25a:	2b00      	cmp	r3, #0
9000f25c:	f43f af65 	beq.w	9000f12a <xQueueGenericSend+0x1a>
9000f260:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f264:	f383 8811 	msr	BASEPRI, r3
9000f268:	f3bf 8f6f 	isb	sy
9000f26c:	f3bf 8f4f 	dsb	sy
9000f270:	e7fe      	b.n	9000f270 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f272:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000f276:	f7ff fc7f 	bl	9000eb78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f27a:	9901      	ldr	r1, [sp, #4]
9000f27c:	4650      	mov	r0, sl
9000f27e:	f001 fb25 	bl	900108cc <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f282:	f7ff fc57 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f286:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f28a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f28c:	2d00      	cmp	r5, #0
9000f28e:	dc04      	bgt.n	9000f29a <xQueueGenericSend+0x18a>
9000f290:	e011      	b.n	9000f2b6 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000f292:	1e6b      	subs	r3, r5, #1
9000f294:	b2da      	uxtb	r2, r3
9000f296:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f298:	b16a      	cbz	r2, 9000f2b6 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f29a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f29c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f29e:	b153      	cbz	r3, 9000f2b6 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2a0:	f001 fba2 	bl	900109e8 <xTaskRemoveFromEventList>
9000f2a4:	2800      	cmp	r0, #0
9000f2a6:	d0f4      	beq.n	9000f292 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000f2a8:	f001 fc32 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f2ac:	1e6b      	subs	r3, r5, #1
9000f2ae:	b2da      	uxtb	r2, r3
9000f2b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2b2:	2a00      	cmp	r2, #0
9000f2b4:	d1f1      	bne.n	9000f29a <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f2b6:	23ff      	movs	r3, #255	@ 0xff
9000f2b8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f2bc:	f7ff fc5c 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f2c0:	f7ff fc38 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f2c4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f2c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2ca:	2d00      	cmp	r5, #0
9000f2cc:	dc04      	bgt.n	9000f2d8 <xQueueGenericSend+0x1c8>
9000f2ce:	e011      	b.n	9000f2f4 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000f2d0:	1e6b      	subs	r3, r5, #1
9000f2d2:	b2da      	uxtb	r2, r3
9000f2d4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2d6:	b16a      	cbz	r2, 9000f2f4 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2d8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2da:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2dc:	b153      	cbz	r3, 9000f2f4 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2de:	f001 fb83 	bl	900109e8 <xTaskRemoveFromEventList>
9000f2e2:	2800      	cmp	r0, #0
9000f2e4:	d0f4      	beq.n	9000f2d0 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000f2e6:	f001 fc13 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f2ea:	1e6b      	subs	r3, r5, #1
9000f2ec:	b2da      	uxtb	r2, r3
9000f2ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2f0:	2a00      	cmp	r2, #0
9000f2f2:	d1f1      	bne.n	9000f2d8 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f2f4:	23ff      	movs	r3, #255	@ 0xff
9000f2f6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f2fa:	f7ff fc3d 	bl	9000eb78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f2fe:	f001 fa4f 	bl	900107a0 <xTaskResumeAll>
9000f302:	2800      	cmp	r0, #0
9000f304:	d1a6      	bne.n	9000f254 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000f306:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f30a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f30e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f312:	f3bf 8f4f 	dsb	sy
9000f316:	f3bf 8f6f 	isb	sy
9000f31a:	e79b      	b.n	9000f254 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f31c:	a802      	add	r0, sp, #8
9000f31e:	f001 fba9 	bl	90010a74 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f322:	e730      	b.n	9000f186 <xQueueGenericSend+0x76>
9000f324:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f328:	f383 8811 	msr	BASEPRI, r3
9000f32c:	f3bf 8f6f 	isb	sy
9000f330:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f334:	e7fe      	b.n	9000f334 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f336:	9b01      	ldr	r3, [sp, #4]
9000f338:	2b00      	cmp	r3, #0
9000f33a:	f43f af09 	beq.w	9000f150 <xQueueGenericSend+0x40>
9000f33e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f342:	f383 8811 	msr	BASEPRI, r3
9000f346:	f3bf 8f6f 	isb	sy
9000f34a:	f3bf 8f4f 	dsb	sy
9000f34e:	e7fe      	b.n	9000f34e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f350:	463a      	mov	r2, r7
9000f352:	4641      	mov	r1, r8
9000f354:	4620      	mov	r0, r4
9000f356:	f7ff fd4d 	bl	9000edf4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f35a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f35c:	2b00      	cmp	r3, #0
9000f35e:	d151      	bne.n	9000f404 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000f360:	b148      	cbz	r0, 9000f376 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000f362:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f366:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f36a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f36e:	f3bf 8f4f 	dsb	sy
9000f372:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000f376:	f7ff fbff 	bl	9000eb78 <vPortExitCritical>
				return pdPASS;
9000f37a:	2001      	movs	r0, #1
}
9000f37c:	b004      	add	sp, #16
9000f37e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000f382:	f7ff fbf9 	bl	9000eb78 <vPortExitCritical>
					return errQUEUE_FULL;
9000f386:	2000      	movs	r0, #0
9000f388:	e7f8      	b.n	9000f37c <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000f38a:	f7ff fbd3 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f38e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f392:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f394:	2d00      	cmp	r5, #0
9000f396:	dd10      	ble.n	9000f3ba <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f398:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000f39c:	e003      	b.n	9000f3a6 <xQueueGenericSend+0x296>
			--cTxLock;
9000f39e:	1e6b      	subs	r3, r5, #1
9000f3a0:	b2da      	uxtb	r2, r3
9000f3a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f3a4:	b14a      	cbz	r2, 9000f3ba <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f3a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3a8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f3aa:	b133      	cbz	r3, 9000f3ba <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3ac:	f001 fb1c 	bl	900109e8 <xTaskRemoveFromEventList>
9000f3b0:	2800      	cmp	r0, #0
9000f3b2:	d0f4      	beq.n	9000f39e <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000f3b4:	f001 fbac 	bl	90010b10 <vTaskMissedYield>
9000f3b8:	e7f1      	b.n	9000f39e <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f3ba:	23ff      	movs	r3, #255	@ 0xff
9000f3bc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f3c0:	f7ff fbda 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f3c4:	f7ff fbb6 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f3c8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f3cc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3ce:	2d00      	cmp	r5, #0
9000f3d0:	dd10      	ble.n	9000f3f4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3d2:	f104 0610 	add.w	r6, r4, #16
9000f3d6:	e003      	b.n	9000f3e0 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000f3d8:	1e6b      	subs	r3, r5, #1
9000f3da:	b2da      	uxtb	r2, r3
9000f3dc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3de:	b14a      	cbz	r2, 9000f3f4 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3e0:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3e2:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3e4:	b133      	cbz	r3, 9000f3f4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3e6:	f001 faff 	bl	900109e8 <xTaskRemoveFromEventList>
9000f3ea:	2800      	cmp	r0, #0
9000f3ec:	d0f4      	beq.n	9000f3d8 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000f3ee:	f001 fb8f 	bl	90010b10 <vTaskMissedYield>
9000f3f2:	e7f1      	b.n	9000f3d8 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f3f4:	23ff      	movs	r3, #255	@ 0xff
9000f3f6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f3fa:	f7ff fbbd 	bl	9000eb78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f3fe:	f001 f9cf 	bl	900107a0 <xTaskResumeAll>
			return errQUEUE_FULL;
9000f402:	e7c0      	b.n	9000f386 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f404:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f408:	f001 faee 	bl	900109e8 <xTaskRemoveFromEventList>
9000f40c:	2800      	cmp	r0, #0
9000f40e:	d0b2      	beq.n	9000f376 <xQueueGenericSend+0x266>
9000f410:	e7a7      	b.n	9000f362 <xQueueGenericSend+0x252>
9000f412:	bf00      	nop

9000f414 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000f414:	2800      	cmp	r0, #0
9000f416:	d04b      	beq.n	9000f4b0 <xQueueGenericSendFromISR+0x9c>
{
9000f418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f41c:	460e      	mov	r6, r1
9000f41e:	4604      	mov	r4, r0
9000f420:	4617      	mov	r7, r2
9000f422:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f424:	b339      	cbz	r1, 9000f476 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f426:	2d02      	cmp	r5, #2
9000f428:	d10b      	bne.n	9000f442 <xQueueGenericSendFromISR+0x2e>
9000f42a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f42c:	2b01      	cmp	r3, #1
9000f42e:	d008      	beq.n	9000f442 <xQueueGenericSendFromISR+0x2e>
9000f430:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f434:	f383 8811 	msr	BASEPRI, r3
9000f438:	f3bf 8f6f 	isb	sy
9000f43c:	f3bf 8f4f 	dsb	sy
9000f440:	e7fe      	b.n	9000f440 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f442:	f7ff fca9 	bl	9000ed98 <vPortValidateInterruptPriority>
	__asm volatile
9000f446:	f3ef 8811 	mrs	r8, BASEPRI
9000f44a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f44e:	f383 8811 	msr	BASEPRI, r3
9000f452:	f3bf 8f6f 	isb	sy
9000f456:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f45a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000f45c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f45e:	429a      	cmp	r2, r3
9000f460:	d315      	bcc.n	9000f48e <xQueueGenericSendFromISR+0x7a>
9000f462:	f1a5 0002 	sub.w	r0, r5, #2
9000f466:	fab0 f080 	clz	r0, r0
9000f46a:	0940      	lsrs	r0, r0, #5
9000f46c:	b978      	cbnz	r0, 9000f48e <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000f46e:	f388 8811 	msr	BASEPRI, r8
}
9000f472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f476:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f478:	2b00      	cmp	r3, #0
9000f47a:	d0d4      	beq.n	9000f426 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000f47c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f480:	f383 8811 	msr	BASEPRI, r3
9000f484:	f3bf 8f6f 	isb	sy
9000f488:	f3bf 8f4f 	dsb	sy
9000f48c:	e7fe      	b.n	9000f48c <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f48e:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000f490:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f494:	4631      	mov	r1, r6
9000f496:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000f498:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f49a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f49c:	f7ff fcaa 	bl	9000edf4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000f4a0:	1c6b      	adds	r3, r5, #1
9000f4a2:	d00e      	beq.n	9000f4c2 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f4a4:	1c6b      	adds	r3, r5, #1
9000f4a6:	b25b      	sxtb	r3, r3
9000f4a8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000f4ac:	2001      	movs	r0, #1
9000f4ae:	e7de      	b.n	9000f46e <xQueueGenericSendFromISR+0x5a>
9000f4b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4b4:	f383 8811 	msr	BASEPRI, r3
9000f4b8:	f3bf 8f6f 	isb	sy
9000f4bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f4c0:	e7fe      	b.n	9000f4c0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f4c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f4c4:	2b00      	cmp	r3, #0
9000f4c6:	d0f1      	beq.n	9000f4ac <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f4c8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f4cc:	f001 fa8c 	bl	900109e8 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f4d0:	2f00      	cmp	r7, #0
9000f4d2:	d0eb      	beq.n	9000f4ac <xQueueGenericSendFromISR+0x98>
9000f4d4:	2800      	cmp	r0, #0
9000f4d6:	d0e9      	beq.n	9000f4ac <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f4d8:	2301      	movs	r3, #1
9000f4da:	603b      	str	r3, [r7, #0]
9000f4dc:	e7e6      	b.n	9000f4ac <xQueueGenericSendFromISR+0x98>
9000f4de:	bf00      	nop

9000f4e0 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000f4e0:	b360      	cbz	r0, 9000f53c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f4e2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000f4e4:	b570      	push	{r4, r5, r6, lr}
9000f4e6:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000f4e8:	b143      	cbz	r3, 9000f4fc <xQueueGiveFromISR+0x1c>
9000f4ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4ee:	f383 8811 	msr	BASEPRI, r3
9000f4f2:	f3bf 8f6f 	isb	sy
9000f4f6:	f3bf 8f4f 	dsb	sy
9000f4fa:	e7fe      	b.n	9000f4fa <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f4fc:	6803      	ldr	r3, [r0, #0]
9000f4fe:	460d      	mov	r5, r1
9000f500:	b32b      	cbz	r3, 9000f54e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f502:	f7ff fc49 	bl	9000ed98 <vPortValidateInterruptPriority>
	__asm volatile
9000f506:	f3ef 8611 	mrs	r6, BASEPRI
9000f50a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f50e:	f383 8811 	msr	BASEPRI, r3
9000f512:	f3bf 8f6f 	isb	sy
9000f516:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f51a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f51c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000f51e:	429a      	cmp	r2, r3
9000f520:	d921      	bls.n	9000f566 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f522:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f526:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f528:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f52a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f52c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f52e:	d01e      	beq.n	9000f56e <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f530:	3301      	adds	r3, #1
9000f532:	b25b      	sxtb	r3, r3
9000f534:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000f538:	2001      	movs	r0, #1
9000f53a:	e015      	b.n	9000f568 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f53c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f540:	f383 8811 	msr	BASEPRI, r3
9000f544:	f3bf 8f6f 	isb	sy
9000f548:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f54c:	e7fe      	b.n	9000f54c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f54e:	6883      	ldr	r3, [r0, #8]
9000f550:	2b00      	cmp	r3, #0
9000f552:	d0d6      	beq.n	9000f502 <xQueueGiveFromISR+0x22>
9000f554:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f558:	f383 8811 	msr	BASEPRI, r3
9000f55c:	f3bf 8f6f 	isb	sy
9000f560:	f3bf 8f4f 	dsb	sy
9000f564:	e7fe      	b.n	9000f564 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f566:	2000      	movs	r0, #0
	__asm volatile
9000f568:	f386 8811 	msr	BASEPRI, r6
}
9000f56c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f56e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f570:	2b00      	cmp	r3, #0
9000f572:	d0e1      	beq.n	9000f538 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f574:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f578:	f001 fa36 	bl	900109e8 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f57c:	2d00      	cmp	r5, #0
9000f57e:	d0db      	beq.n	9000f538 <xQueueGiveFromISR+0x58>
9000f580:	2800      	cmp	r0, #0
9000f582:	d0d9      	beq.n	9000f538 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f584:	2301      	movs	r3, #1
9000f586:	602b      	str	r3, [r5, #0]
9000f588:	e7d6      	b.n	9000f538 <xQueueGiveFromISR+0x58>
9000f58a:	bf00      	nop

9000f58c <xQueueReceive>:
{
9000f58c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f590:	b085      	sub	sp, #20
9000f592:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f594:	2800      	cmp	r0, #0
9000f596:	f000 8147 	beq.w	9000f828 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f59a:	460f      	mov	r7, r1
9000f59c:	4604      	mov	r4, r0
9000f59e:	2900      	cmp	r1, #0
9000f5a0:	d07b      	beq.n	9000f69a <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f5a2:	f001 fabb 	bl	90010b1c <xTaskGetSchedulerState>
9000f5a6:	2800      	cmp	r0, #0
9000f5a8:	f000 8083 	beq.w	9000f6b2 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000f5ac:	f7ff fac2 	bl	9000eb34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f5b0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f5b2:	2d00      	cmp	r5, #0
9000f5b4:	f040 8141 	bne.w	9000f83a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f5b8:	9b01      	ldr	r3, [sp, #4]
9000f5ba:	2b00      	cmp	r3, #0
9000f5bc:	f000 80d7 	beq.w	9000f76e <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000f5c0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5c2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f5c6:	a802      	add	r0, sp, #8
9000f5c8:	f001 fa54 	bl	90010a74 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f5cc:	f7ff fad4 	bl	9000eb78 <vPortExitCritical>
		vTaskSuspendAll();
9000f5d0:	f001 f8de 	bl	90010790 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f5d4:	f7ff faae 	bl	9000eb34 <vPortEnterCritical>
9000f5d8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f5dc:	2bff      	cmp	r3, #255	@ 0xff
9000f5de:	d101      	bne.n	9000f5e4 <xQueueReceive+0x58>
9000f5e0:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f5e4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f5e8:	2bff      	cmp	r3, #255	@ 0xff
9000f5ea:	d101      	bne.n	9000f5f0 <xQueueReceive+0x64>
9000f5ec:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f5f0:	f7ff fac2 	bl	9000eb78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f5f4:	a901      	add	r1, sp, #4
9000f5f6:	a802      	add	r0, sp, #8
9000f5f8:	f001 fa48 	bl	90010a8c <xTaskCheckForTimeOut>
9000f5fc:	2800      	cmp	r0, #0
9000f5fe:	d165      	bne.n	9000f6cc <xQueueReceive+0x140>
	taskENTER_CRITICAL();
9000f600:	f7ff fa98 	bl	9000eb34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f604:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f606:	2b00      	cmp	r3, #0
9000f608:	f000 80b7 	beq.w	9000f77a <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9000f60c:	f7ff fab4 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f610:	f7ff fa90 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f614:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f618:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f61a:	2d00      	cmp	r5, #0
9000f61c:	dd14      	ble.n	9000f648 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f61e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f622:	e003      	b.n	9000f62c <xQueueReceive+0xa0>
			--cTxLock;
9000f624:	1e6b      	subs	r3, r5, #1
9000f626:	b2da      	uxtb	r2, r3
9000f628:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f62a:	b16a      	cbz	r2, 9000f648 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f62c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f62e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f630:	b153      	cbz	r3, 9000f648 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f632:	f001 f9d9 	bl	900109e8 <xTaskRemoveFromEventList>
9000f636:	2800      	cmp	r0, #0
9000f638:	d0f4      	beq.n	9000f624 <xQueueReceive+0x98>
						vTaskMissedYield();
9000f63a:	f001 fa69 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f63e:	1e6b      	subs	r3, r5, #1
9000f640:	b2da      	uxtb	r2, r3
9000f642:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f644:	2a00      	cmp	r2, #0
9000f646:	d1f1      	bne.n	9000f62c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
9000f648:	23ff      	movs	r3, #255	@ 0xff
9000f64a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f64e:	f7ff fa93 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f652:	f7ff fa6f 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f656:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f65a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f65c:	2d00      	cmp	r5, #0
9000f65e:	dd14      	ble.n	9000f68a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f660:	f104 0910 	add.w	r9, r4, #16
9000f664:	e003      	b.n	9000f66e <xQueueReceive+0xe2>
				--cRxLock;
9000f666:	1e6b      	subs	r3, r5, #1
9000f668:	b2da      	uxtb	r2, r3
9000f66a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f66c:	b16a      	cbz	r2, 9000f68a <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f66e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f670:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f672:	b153      	cbz	r3, 9000f68a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f674:	f001 f9b8 	bl	900109e8 <xTaskRemoveFromEventList>
9000f678:	2800      	cmp	r0, #0
9000f67a:	d0f4      	beq.n	9000f666 <xQueueReceive+0xda>
					vTaskMissedYield();
9000f67c:	f001 fa48 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f680:	1e6b      	subs	r3, r5, #1
9000f682:	b2da      	uxtb	r2, r3
9000f684:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f686:	2a00      	cmp	r2, #0
9000f688:	d1f1      	bne.n	9000f66e <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f68a:	23ff      	movs	r3, #255	@ 0xff
9000f68c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f690:	f7ff fa72 	bl	9000eb78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f694:	f001 f884 	bl	900107a0 <xTaskResumeAll>
9000f698:	e060      	b.n	9000f75c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f69a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f69c:	2b00      	cmp	r3, #0
9000f69e:	d080      	beq.n	9000f5a2 <xQueueReceive+0x16>
	__asm volatile
9000f6a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6a4:	f383 8811 	msr	BASEPRI, r3
9000f6a8:	f3bf 8f6f 	isb	sy
9000f6ac:	f3bf 8f4f 	dsb	sy
9000f6b0:	e7fe      	b.n	9000f6b0 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f6b2:	9b01      	ldr	r3, [sp, #4]
9000f6b4:	2b00      	cmp	r3, #0
9000f6b6:	f43f af79 	beq.w	9000f5ac <xQueueReceive+0x20>
9000f6ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6be:	f383 8811 	msr	BASEPRI, r3
9000f6c2:	f3bf 8f6f 	isb	sy
9000f6c6:	f3bf 8f4f 	dsb	sy
9000f6ca:	e7fe      	b.n	9000f6ca <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
9000f6cc:	f7ff fa32 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f6d0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f6d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f6d6:	2d00      	cmp	r5, #0
9000f6d8:	dc04      	bgt.n	9000f6e4 <xQueueReceive+0x158>
9000f6da:	e011      	b.n	9000f700 <xQueueReceive+0x174>
			--cTxLock;
9000f6dc:	1e6b      	subs	r3, r5, #1
9000f6de:	b2da      	uxtb	r2, r3
9000f6e0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f6e2:	b16a      	cbz	r2, 9000f700 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f6e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f6e6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f6e8:	b153      	cbz	r3, 9000f700 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f6ea:	f001 f97d 	bl	900109e8 <xTaskRemoveFromEventList>
9000f6ee:	2800      	cmp	r0, #0
9000f6f0:	d0f4      	beq.n	9000f6dc <xQueueReceive+0x150>
						vTaskMissedYield();
9000f6f2:	f001 fa0d 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f6f6:	1e6b      	subs	r3, r5, #1
9000f6f8:	b2da      	uxtb	r2, r3
9000f6fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f6fc:	2a00      	cmp	r2, #0
9000f6fe:	d1f1      	bne.n	9000f6e4 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
9000f700:	23ff      	movs	r3, #255	@ 0xff
9000f702:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f706:	f7ff fa37 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f70a:	f7ff fa13 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f70e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f712:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f714:	2d00      	cmp	r5, #0
9000f716:	dd14      	ble.n	9000f742 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f718:	f104 0910 	add.w	r9, r4, #16
9000f71c:	e003      	b.n	9000f726 <xQueueReceive+0x19a>
				--cRxLock;
9000f71e:	1e6b      	subs	r3, r5, #1
9000f720:	b2da      	uxtb	r2, r3
9000f722:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f724:	b16a      	cbz	r2, 9000f742 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f726:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f728:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f72a:	b153      	cbz	r3, 9000f742 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f72c:	f001 f95c 	bl	900109e8 <xTaskRemoveFromEventList>
9000f730:	2800      	cmp	r0, #0
9000f732:	d0f4      	beq.n	9000f71e <xQueueReceive+0x192>
					vTaskMissedYield();
9000f734:	f001 f9ec 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f738:	1e6b      	subs	r3, r5, #1
9000f73a:	b2da      	uxtb	r2, r3
9000f73c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f73e:	2a00      	cmp	r2, #0
9000f740:	d1f1      	bne.n	9000f726 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f742:	23ff      	movs	r3, #255	@ 0xff
9000f744:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f748:	f7ff fa16 	bl	9000eb78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f74c:	f001 f828 	bl	900107a0 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f750:	f7ff f9f0 	bl	9000eb34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f754:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f756:	b153      	cbz	r3, 9000f76e <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
9000f758:	f7ff fa0e 	bl	9000eb78 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f75c:	f7ff f9ea 	bl	9000eb34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f760:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f762:	2d00      	cmp	r5, #0
9000f764:	d169      	bne.n	9000f83a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f766:	9b01      	ldr	r3, [sp, #4]
9000f768:	2b00      	cmp	r3, #0
9000f76a:	f47f af2f 	bne.w	9000f5cc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f76e:	f7ff fa03 	bl	9000eb78 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f772:	2000      	movs	r0, #0
}
9000f774:	b005      	add	sp, #20
9000f776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f77a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000f77e:	f7ff f9fb 	bl	9000eb78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f782:	9901      	ldr	r1, [sp, #4]
9000f784:	4648      	mov	r0, r9
9000f786:	f001 f8a1 	bl	900108cc <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f78a:	f7ff f9d3 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f78e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f792:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f794:	2d00      	cmp	r5, #0
9000f796:	dc04      	bgt.n	9000f7a2 <xQueueReceive+0x216>
9000f798:	e011      	b.n	9000f7be <xQueueReceive+0x232>
			--cTxLock;
9000f79a:	1e6b      	subs	r3, r5, #1
9000f79c:	b2da      	uxtb	r2, r3
9000f79e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7a0:	b16a      	cbz	r2, 9000f7be <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f7a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f7a4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f7a6:	b153      	cbz	r3, 9000f7be <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f7a8:	f001 f91e 	bl	900109e8 <xTaskRemoveFromEventList>
9000f7ac:	2800      	cmp	r0, #0
9000f7ae:	d0f4      	beq.n	9000f79a <xQueueReceive+0x20e>
						vTaskMissedYield();
9000f7b0:	f001 f9ae 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f7b4:	1e6b      	subs	r3, r5, #1
9000f7b6:	b2da      	uxtb	r2, r3
9000f7b8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7ba:	2a00      	cmp	r2, #0
9000f7bc:	d1f1      	bne.n	9000f7a2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
9000f7be:	23ff      	movs	r3, #255	@ 0xff
9000f7c0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f7c4:	f7ff f9d8 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f7c8:	f7ff f9b4 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f7cc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f7d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f7d2:	2d00      	cmp	r5, #0
9000f7d4:	dd14      	ble.n	9000f800 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f7d6:	f104 0910 	add.w	r9, r4, #16
9000f7da:	e003      	b.n	9000f7e4 <xQueueReceive+0x258>
				--cRxLock;
9000f7dc:	1e6b      	subs	r3, r5, #1
9000f7de:	b2da      	uxtb	r2, r3
9000f7e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f7e2:	b16a      	cbz	r2, 9000f800 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f7e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f7e6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f7e8:	b153      	cbz	r3, 9000f800 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f7ea:	f001 f8fd 	bl	900109e8 <xTaskRemoveFromEventList>
9000f7ee:	2800      	cmp	r0, #0
9000f7f0:	d0f4      	beq.n	9000f7dc <xQueueReceive+0x250>
					vTaskMissedYield();
9000f7f2:	f001 f98d 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f7f6:	1e6b      	subs	r3, r5, #1
9000f7f8:	b2da      	uxtb	r2, r3
9000f7fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f7fc:	2a00      	cmp	r2, #0
9000f7fe:	d1f1      	bne.n	9000f7e4 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
9000f800:	23ff      	movs	r3, #255	@ 0xff
9000f802:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f806:	f7ff f9b7 	bl	9000eb78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f80a:	f000 ffc9 	bl	900107a0 <xTaskResumeAll>
9000f80e:	2800      	cmp	r0, #0
9000f810:	d1a4      	bne.n	9000f75c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
9000f812:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f816:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f81a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f81e:	f3bf 8f4f 	dsb	sy
9000f822:	f3bf 8f6f 	isb	sy
9000f826:	e799      	b.n	9000f75c <xQueueReceive+0x1d0>
9000f828:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f82c:	f383 8811 	msr	BASEPRI, r3
9000f830:	f3bf 8f6f 	isb	sy
9000f834:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f838:	e7fe      	b.n	9000f838 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f83a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000f83c:	b152      	cbz	r2, 9000f854 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f83e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f840:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f842:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f844:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f846:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f848:	d301      	bcc.n	9000f84e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f84a:	6821      	ldr	r1, [r4, #0]
9000f84c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f84e:	4638      	mov	r0, r7
9000f850:	f01b fb85 	bl	9002af5e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f854:	3d01      	subs	r5, #1
9000f856:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f858:	6923      	ldr	r3, [r4, #16]
9000f85a:	b91b      	cbnz	r3, 9000f864 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f85c:	f7ff f98c 	bl	9000eb78 <vPortExitCritical>
				return pdPASS;
9000f860:	2001      	movs	r0, #1
9000f862:	e787      	b.n	9000f774 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f864:	f104 0010 	add.w	r0, r4, #16
9000f868:	f001 f8be 	bl	900109e8 <xTaskRemoveFromEventList>
9000f86c:	2800      	cmp	r0, #0
9000f86e:	d0f5      	beq.n	9000f85c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
9000f870:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f874:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f878:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f87c:	f3bf 8f4f 	dsb	sy
9000f880:	f3bf 8f6f 	isb	sy
9000f884:	e7ea      	b.n	9000f85c <xQueueReceive+0x2d0>
9000f886:	bf00      	nop

9000f888 <xQueueSemaphoreTake>:
{
9000f888:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f88c:	b085      	sub	sp, #20
9000f88e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f890:	2800      	cmp	r0, #0
9000f892:	d05f      	beq.n	9000f954 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f894:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f896:	4604      	mov	r4, r0
9000f898:	b143      	cbz	r3, 9000f8ac <xQueueSemaphoreTake+0x24>
9000f89a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f89e:	f383 8811 	msr	BASEPRI, r3
9000f8a2:	f3bf 8f6f 	isb	sy
9000f8a6:	f3bf 8f4f 	dsb	sy
9000f8aa:	e7fe      	b.n	9000f8aa <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f8ac:	f001 f936 	bl	90010b1c <xTaskGetSchedulerState>
9000f8b0:	2800      	cmp	r0, #0
9000f8b2:	d058      	beq.n	9000f966 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
9000f8b4:	f7ff f93e 	bl	9000eb34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f8b8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f8ba:	2d00      	cmp	r5, #0
9000f8bc:	f040 8155 	bne.w	9000fb6a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f8c0:	9b01      	ldr	r3, [sp, #4]
9000f8c2:	2b00      	cmp	r3, #0
9000f8c4:	f000 8145 	beq.w	9000fb52 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f8c8:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
9000f8ca:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f8cc:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f8d0:	a802      	add	r0, sp, #8
9000f8d2:	f001 f8cf 	bl	90010a74 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f8d6:	f7ff f94f 	bl	9000eb78 <vPortExitCritical>
		vTaskSuspendAll();
9000f8da:	f000 ff59 	bl	90010790 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f8de:	f7ff f929 	bl	9000eb34 <vPortEnterCritical>
9000f8e2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f8e6:	2bff      	cmp	r3, #255	@ 0xff
9000f8e8:	d101      	bne.n	9000f8ee <xQueueSemaphoreTake+0x66>
9000f8ea:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f8ee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f8f2:	2bff      	cmp	r3, #255	@ 0xff
9000f8f4:	d101      	bne.n	9000f8fa <xQueueSemaphoreTake+0x72>
9000f8f6:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f8fa:	f7ff f93d 	bl	9000eb78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f8fe:	a901      	add	r1, sp, #4
9000f900:	a802      	add	r0, sp, #8
9000f902:	f001 f8c3 	bl	90010a8c <xTaskCheckForTimeOut>
9000f906:	2800      	cmp	r0, #0
9000f908:	d139      	bne.n	9000f97e <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000f90a:	f7ff f913 	bl	9000eb34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f90e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f910:	2b00      	cmp	r3, #0
9000f912:	f000 80c0 	beq.w	9000fa96 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
9000f916:	f7ff f92f 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f91a:	f7ff f90b 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f91e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f922:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f924:	2d00      	cmp	r5, #0
9000f926:	f340 8091 	ble.w	9000fa4c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f92a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f92e:	e005      	b.n	9000f93c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000f930:	1e6b      	subs	r3, r5, #1
9000f932:	b2da      	uxtb	r2, r3
9000f934:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f936:	2a00      	cmp	r2, #0
9000f938:	f000 8088 	beq.w	9000fa4c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f93c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f93e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f940:	2b00      	cmp	r3, #0
9000f942:	f000 8083 	beq.w	9000fa4c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f946:	f001 f84f 	bl	900109e8 <xTaskRemoveFromEventList>
9000f94a:	2800      	cmp	r0, #0
9000f94c:	d0f0      	beq.n	9000f930 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9000f94e:	f001 f8df 	bl	90010b10 <vTaskMissedYield>
9000f952:	e7ed      	b.n	9000f930 <xQueueSemaphoreTake+0xa8>
9000f954:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f958:	f383 8811 	msr	BASEPRI, r3
9000f95c:	f3bf 8f6f 	isb	sy
9000f960:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f964:	e7fe      	b.n	9000f964 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f966:	9b01      	ldr	r3, [sp, #4]
9000f968:	2b00      	cmp	r3, #0
9000f96a:	d0a3      	beq.n	9000f8b4 <xQueueSemaphoreTake+0x2c>
9000f96c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f970:	f383 8811 	msr	BASEPRI, r3
9000f974:	f3bf 8f6f 	isb	sy
9000f978:	f3bf 8f4f 	dsb	sy
9000f97c:	e7fe      	b.n	9000f97c <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000f97e:	f7ff f8d9 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f982:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f986:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f988:	2d00      	cmp	r5, #0
9000f98a:	dc04      	bgt.n	9000f996 <xQueueSemaphoreTake+0x10e>
9000f98c:	e011      	b.n	9000f9b2 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000f98e:	1e6b      	subs	r3, r5, #1
9000f990:	b2da      	uxtb	r2, r3
9000f992:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f994:	b16a      	cbz	r2, 9000f9b2 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f996:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f998:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f99a:	b153      	cbz	r3, 9000f9b2 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f99c:	f001 f824 	bl	900109e8 <xTaskRemoveFromEventList>
9000f9a0:	2800      	cmp	r0, #0
9000f9a2:	d0f4      	beq.n	9000f98e <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000f9a4:	f001 f8b4 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000f9a8:	1e6b      	subs	r3, r5, #1
9000f9aa:	b2da      	uxtb	r2, r3
9000f9ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9ae:	2a00      	cmp	r2, #0
9000f9b0:	d1f1      	bne.n	9000f996 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f9b2:	23ff      	movs	r3, #255	@ 0xff
9000f9b4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f9b8:	f7ff f8de 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f9bc:	f7ff f8ba 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f9c0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f9c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f9c6:	2d00      	cmp	r5, #0
9000f9c8:	dd14      	ble.n	9000f9f4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f9ca:	f104 0910 	add.w	r9, r4, #16
9000f9ce:	e003      	b.n	9000f9d8 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000f9d0:	1e6b      	subs	r3, r5, #1
9000f9d2:	b2da      	uxtb	r2, r3
9000f9d4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f9d6:	b16a      	cbz	r2, 9000f9f4 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f9d8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f9da:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f9dc:	b153      	cbz	r3, 9000f9f4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f9de:	f001 f803 	bl	900109e8 <xTaskRemoveFromEventList>
9000f9e2:	2800      	cmp	r0, #0
9000f9e4:	d0f4      	beq.n	9000f9d0 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000f9e6:	f001 f893 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000f9ea:	1e6b      	subs	r3, r5, #1
9000f9ec:	b2da      	uxtb	r2, r3
9000f9ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f9f0:	2a00      	cmp	r2, #0
9000f9f2:	d1f1      	bne.n	9000f9d8 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000f9f4:	23ff      	movs	r3, #255	@ 0xff
9000f9f6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f9fa:	f7ff f8bd 	bl	9000eb78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f9fe:	f000 fecf 	bl	900107a0 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000fa02:	f7ff f897 	bl	9000eb34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fa06:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000fa08:	b943      	cbnz	r3, 9000fa1c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9000fa0a:	f7ff f8b5 	bl	9000eb78 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000fa0e:	2f00      	cmp	r7, #0
9000fa10:	f040 8094 	bne.w	9000fb3c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
9000fa14:	2000      	movs	r0, #0
}
9000fa16:	b005      	add	sp, #20
9000fa18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000fa1c:	f7ff f8ac 	bl	9000eb78 <vPortExitCritical>
		taskENTER_CRITICAL();
9000fa20:	f7ff f888 	bl	9000eb34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000fa24:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000fa26:	2d00      	cmp	r5, #0
9000fa28:	f040 809f 	bne.w	9000fb6a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000fa2c:	9b01      	ldr	r3, [sp, #4]
9000fa2e:	2b00      	cmp	r3, #0
9000fa30:	f47f af51 	bne.w	9000f8d6 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000fa34:	2f00      	cmp	r7, #0
9000fa36:	f000 808c 	beq.w	9000fb52 <xQueueSemaphoreTake+0x2ca>
9000fa3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa3e:	f383 8811 	msr	BASEPRI, r3
9000fa42:	f3bf 8f6f 	isb	sy
9000fa46:	f3bf 8f4f 	dsb	sy
9000fa4a:	e7fe      	b.n	9000fa4a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9000fa4c:	23ff      	movs	r3, #255	@ 0xff
9000fa4e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fa52:	f7ff f891 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fa56:	f7ff f86d 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fa5a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000fa5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa60:	2d00      	cmp	r5, #0
9000fa62:	dd10      	ble.n	9000fa86 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa64:	f104 0910 	add.w	r9, r4, #16
9000fa68:	e003      	b.n	9000fa72 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9000fa6a:	1e6b      	subs	r3, r5, #1
9000fa6c:	b2da      	uxtb	r2, r3
9000fa6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa70:	b14a      	cbz	r2, 9000fa86 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa72:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa74:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa76:	b133      	cbz	r3, 9000fa86 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa78:	f000 ffb6 	bl	900109e8 <xTaskRemoveFromEventList>
9000fa7c:	2800      	cmp	r0, #0
9000fa7e:	d0f4      	beq.n	9000fa6a <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
9000fa80:	f001 f846 	bl	90010b10 <vTaskMissedYield>
9000fa84:	e7f1      	b.n	9000fa6a <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
9000fa86:	23ff      	movs	r3, #255	@ 0xff
9000fa88:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fa8c:	f7ff f874 	bl	9000eb78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000fa90:	f000 fe86 	bl	900107a0 <xTaskResumeAll>
9000fa94:	e7c4      	b.n	9000fa20 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
9000fa96:	f7ff f86f 	bl	9000eb78 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fa9a:	6823      	ldr	r3, [r4, #0]
9000fa9c:	2b00      	cmp	r3, #0
9000fa9e:	d05b      	beq.n	9000fb58 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000faa0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000faa4:	9901      	ldr	r1, [sp, #4]
9000faa6:	4648      	mov	r0, r9
9000faa8:	f000 ff10 	bl	900108cc <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000faac:	f7ff f842 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fab0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000fab4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fab6:	2d00      	cmp	r5, #0
9000fab8:	dc04      	bgt.n	9000fac4 <xQueueSemaphoreTake+0x23c>
9000faba:	e00d      	b.n	9000fad8 <xQueueSemaphoreTake+0x250>
			--cTxLock;
9000fabc:	1e6b      	subs	r3, r5, #1
9000fabe:	b2da      	uxtb	r2, r3
9000fac0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fac2:	b14a      	cbz	r2, 9000fad8 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fac4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fac6:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fac8:	b133      	cbz	r3, 9000fad8 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000faca:	f000 ff8d 	bl	900109e8 <xTaskRemoveFromEventList>
9000face:	2800      	cmp	r0, #0
9000fad0:	d0f4      	beq.n	9000fabc <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
9000fad2:	f001 f81d 	bl	90010b10 <vTaskMissedYield>
9000fad6:	e7f1      	b.n	9000fabc <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
9000fad8:	23ff      	movs	r3, #255	@ 0xff
9000fada:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fade:	f7ff f84b 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fae2:	f7ff f827 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fae6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000faea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000faec:	2d00      	cmp	r5, #0
9000faee:	dd10      	ble.n	9000fb12 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000faf0:	f104 0910 	add.w	r9, r4, #16
9000faf4:	e003      	b.n	9000fafe <xQueueSemaphoreTake+0x276>
				--cRxLock;
9000faf6:	1e6b      	subs	r3, r5, #1
9000faf8:	b2da      	uxtb	r2, r3
9000fafa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fafc:	b14a      	cbz	r2, 9000fb12 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fafe:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb00:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb02:	b133      	cbz	r3, 9000fb12 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb04:	f000 ff70 	bl	900109e8 <xTaskRemoveFromEventList>
9000fb08:	2800      	cmp	r0, #0
9000fb0a:	d0f4      	beq.n	9000faf6 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9000fb0c:	f001 f800 	bl	90010b10 <vTaskMissedYield>
9000fb10:	e7f1      	b.n	9000faf6 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
9000fb12:	23ff      	movs	r3, #255	@ 0xff
9000fb14:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fb18:	f7ff f82e 	bl	9000eb78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000fb1c:	f000 fe40 	bl	900107a0 <xTaskResumeAll>
9000fb20:	2800      	cmp	r0, #0
9000fb22:	f47f af7d 	bne.w	9000fa20 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
9000fb26:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fb2a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fb2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fb32:	f3bf 8f4f 	dsb	sy
9000fb36:	f3bf 8f6f 	isb	sy
9000fb3a:	e771      	b.n	9000fa20 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9000fb3c:	f7fe fffa 	bl	9000eb34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000fb40:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000fb42:	b119      	cbz	r1, 9000fb4c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000fb44:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000fb46:	6819      	ldr	r1, [r3, #0]
9000fb48:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000fb4c:	68a0      	ldr	r0, [r4, #8]
9000fb4e:	f001 f879 	bl	90010c44 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000fb52:	f7ff f811 	bl	9000eb78 <vPortExitCritical>
9000fb56:	e75d      	b.n	9000fa14 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000fb58:	f7fe ffec 	bl	9000eb34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000fb5c:	68a0      	ldr	r0, [r4, #8]
9000fb5e:	f000 ffed 	bl	90010b3c <xTaskPriorityInherit>
9000fb62:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000fb64:	f7ff f808 	bl	9000eb78 <vPortExitCritical>
9000fb68:	e79a      	b.n	9000faa0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000fb6a:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fb6c:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000fb6e:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fb70:	b12b      	cbz	r3, 9000fb7e <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb72:	6923      	ldr	r3, [r4, #16]
9000fb74:	b93b      	cbnz	r3, 9000fb86 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
9000fb76:	f7fe ffff 	bl	9000eb78 <vPortExitCritical>
				return pdPASS;
9000fb7a:	2001      	movs	r0, #1
9000fb7c:	e74b      	b.n	9000fa16 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000fb7e:	f001 f8b1 	bl	90010ce4 <pvTaskIncrementMutexHeldCount>
9000fb82:	60a0      	str	r0, [r4, #8]
9000fb84:	e7f5      	b.n	9000fb72 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb86:	f104 0010 	add.w	r0, r4, #16
9000fb8a:	f000 ff2d 	bl	900109e8 <xTaskRemoveFromEventList>
9000fb8e:	2800      	cmp	r0, #0
9000fb90:	d0f1      	beq.n	9000fb76 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
9000fb92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fb96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fb9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fb9e:	f3bf 8f4f 	dsb	sy
9000fba2:	f3bf 8f6f 	isb	sy
9000fba6:	e7e6      	b.n	9000fb76 <xQueueSemaphoreTake+0x2ee>

9000fba8 <xQueueReceiveFromISR>:
{
9000fba8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000fbac:	b310      	cbz	r0, 9000fbf4 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fbae:	460f      	mov	r7, r1
9000fbb0:	4604      	mov	r4, r0
9000fbb2:	4616      	mov	r6, r2
9000fbb4:	b191      	cbz	r1, 9000fbdc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000fbb6:	f7ff f8ef 	bl	9000ed98 <vPortValidateInterruptPriority>
	__asm volatile
9000fbba:	f3ef 8911 	mrs	r9, BASEPRI
9000fbbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbc2:	f383 8811 	msr	BASEPRI, r3
9000fbc6:	f3bf 8f6f 	isb	sy
9000fbca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fbce:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fbd0:	b9cd      	cbnz	r5, 9000fc06 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000fbd2:	4628      	mov	r0, r5
	__asm volatile
9000fbd4:	f389 8811 	msr	BASEPRI, r9
}
9000fbd8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fbdc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000fbde:	2b00      	cmp	r3, #0
9000fbe0:	d0e9      	beq.n	9000fbb6 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000fbe2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbe6:	f383 8811 	msr	BASEPRI, r3
9000fbea:	f3bf 8f6f 	isb	sy
9000fbee:	f3bf 8f4f 	dsb	sy
9000fbf2:	e7fe      	b.n	9000fbf2 <xQueueReceiveFromISR+0x4a>
9000fbf4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbf8:	f383 8811 	msr	BASEPRI, r3
9000fbfc:	f3bf 8f6f 	isb	sy
9000fc00:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fc04:	e7fe      	b.n	9000fc04 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000fc06:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fc0a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000fc0c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fc10:	b142      	cbz	r2, 9000fc24 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc12:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc14:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc16:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc18:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fc1a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fc1c:	d21c      	bcs.n	9000fc58 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000fc1e:	4638      	mov	r0, r7
9000fc20:	f01b f99d 	bl	9002af5e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fc24:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000fc26:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fc2a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000fc2c:	d006      	beq.n	9000fc3c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000fc2e:	f108 0301 	add.w	r3, r8, #1
9000fc32:	b25b      	sxtb	r3, r3
9000fc34:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000fc38:	2001      	movs	r0, #1
9000fc3a:	e7cb      	b.n	9000fbd4 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc3c:	6923      	ldr	r3, [r4, #16]
9000fc3e:	2b00      	cmp	r3, #0
9000fc40:	d0fa      	beq.n	9000fc38 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc42:	f104 0010 	add.w	r0, r4, #16
9000fc46:	f000 fecf 	bl	900109e8 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000fc4a:	2e00      	cmp	r6, #0
9000fc4c:	d0f4      	beq.n	9000fc38 <xQueueReceiveFromISR+0x90>
9000fc4e:	2800      	cmp	r0, #0
9000fc50:	d0f2      	beq.n	9000fc38 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000fc52:	2301      	movs	r3, #1
9000fc54:	6033      	str	r3, [r6, #0]
9000fc56:	e7ef      	b.n	9000fc38 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000fc58:	6821      	ldr	r1, [r4, #0]
9000fc5a:	60e1      	str	r1, [r4, #12]
9000fc5c:	e7df      	b.n	9000fc1e <xQueueReceiveFromISR+0x76>
9000fc5e:	bf00      	nop

9000fc60 <vQueueDelete>:
	configASSERT( pxQueue );
9000fc60:	b1e0      	cbz	r0, 9000fc9c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000fc62:	4b21      	ldr	r3, [pc, #132]	@ (9000fce8 <vQueueDelete+0x88>)
9000fc64:	685a      	ldr	r2, [r3, #4]
9000fc66:	4290      	cmp	r0, r2
9000fc68:	d02b      	beq.n	9000fcc2 <vQueueDelete+0x62>
9000fc6a:	68da      	ldr	r2, [r3, #12]
9000fc6c:	4290      	cmp	r0, r2
9000fc6e:	d02a      	beq.n	9000fcc6 <vQueueDelete+0x66>
9000fc70:	695a      	ldr	r2, [r3, #20]
9000fc72:	4290      	cmp	r0, r2
9000fc74:	d029      	beq.n	9000fcca <vQueueDelete+0x6a>
9000fc76:	69da      	ldr	r2, [r3, #28]
9000fc78:	4290      	cmp	r0, r2
9000fc7a:	d028      	beq.n	9000fcce <vQueueDelete+0x6e>
9000fc7c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000fc7e:	4290      	cmp	r0, r2
9000fc80:	d027      	beq.n	9000fcd2 <vQueueDelete+0x72>
9000fc82:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000fc84:	4290      	cmp	r0, r2
9000fc86:	d014      	beq.n	9000fcb2 <vQueueDelete+0x52>
9000fc88:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000fc8a:	4290      	cmp	r0, r2
9000fc8c:	d023      	beq.n	9000fcd6 <vQueueDelete+0x76>
9000fc8e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000fc90:	4290      	cmp	r0, r2
9000fc92:	d022      	beq.n	9000fcda <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000fc94:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000fc98:	b14b      	cbz	r3, 9000fcae <vQueueDelete+0x4e>
}
9000fc9a:	4770      	bx	lr
9000fc9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fca0:	f383 8811 	msr	BASEPRI, r3
9000fca4:	f3bf 8f6f 	isb	sy
9000fca8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fcac:	e7fe      	b.n	9000fcac <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000fcae:	f7fe be23 	b.w	9000e8f8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fcb2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000fcb4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000fcb8:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000fce0 <vQueueDelete+0x80>
9000fcbc:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000fcc0:	e7e8      	b.n	9000fc94 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fcc2:	2200      	movs	r2, #0
9000fcc4:	e7f6      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcc6:	2201      	movs	r2, #1
9000fcc8:	e7f4      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcca:	2202      	movs	r2, #2
9000fccc:	e7f2      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcce:	2203      	movs	r2, #3
9000fcd0:	e7f0      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcd2:	2204      	movs	r2, #4
9000fcd4:	e7ee      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcd6:	2206      	movs	r2, #6
9000fcd8:	e7ec      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcda:	2207      	movs	r2, #7
9000fcdc:	e7ea      	b.n	9000fcb4 <vQueueDelete+0x54>
9000fcde:	bf00      	nop
	...
9000fce8:	240216f0 	.word	0x240216f0

9000fcec <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000fcec:	4b12      	ldr	r3, [pc, #72]	@ (9000fd38 <vQueueAddToRegistry+0x4c>)
9000fcee:	681a      	ldr	r2, [r3, #0]
9000fcf0:	b17a      	cbz	r2, 9000fd12 <vQueueAddToRegistry+0x26>
9000fcf2:	689a      	ldr	r2, [r3, #8]
9000fcf4:	b162      	cbz	r2, 9000fd10 <vQueueAddToRegistry+0x24>
9000fcf6:	691a      	ldr	r2, [r3, #16]
9000fcf8:	b192      	cbz	r2, 9000fd20 <vQueueAddToRegistry+0x34>
9000fcfa:	699a      	ldr	r2, [r3, #24]
9000fcfc:	b192      	cbz	r2, 9000fd24 <vQueueAddToRegistry+0x38>
9000fcfe:	6a1a      	ldr	r2, [r3, #32]
9000fd00:	b192      	cbz	r2, 9000fd28 <vQueueAddToRegistry+0x3c>
9000fd02:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000fd04:	b192      	cbz	r2, 9000fd2c <vQueueAddToRegistry+0x40>
9000fd06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000fd08:	b192      	cbz	r2, 9000fd30 <vQueueAddToRegistry+0x44>
9000fd0a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000fd0c:	b192      	cbz	r2, 9000fd34 <vQueueAddToRegistry+0x48>
	}
9000fd0e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fd10:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fd12:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000fd16:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fd1a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000fd1e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fd20:	2202      	movs	r2, #2
9000fd22:	e7f6      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd24:	2203      	movs	r2, #3
9000fd26:	e7f4      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd28:	2204      	movs	r2, #4
9000fd2a:	e7f2      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd2c:	2205      	movs	r2, #5
9000fd2e:	e7f0      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd30:	2206      	movs	r2, #6
9000fd32:	e7ee      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd34:	2207      	movs	r2, #7
9000fd36:	e7ec      	b.n	9000fd12 <vQueueAddToRegistry+0x26>
9000fd38:	240216f0 	.word	0x240216f0

9000fd3c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000fd3c:	b570      	push	{r4, r5, r6, lr}
9000fd3e:	4605      	mov	r5, r0
9000fd40:	460e      	mov	r6, r1
9000fd42:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000fd44:	f7fe fef6 	bl	9000eb34 <vPortEnterCritical>
9000fd48:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000fd4c:	2bff      	cmp	r3, #255	@ 0xff
9000fd4e:	d102      	bne.n	9000fd56 <vQueueWaitForMessageRestricted+0x1a>
9000fd50:	2300      	movs	r3, #0
9000fd52:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000fd56:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000fd5a:	2bff      	cmp	r3, #255	@ 0xff
9000fd5c:	d102      	bne.n	9000fd64 <vQueueWaitForMessageRestricted+0x28>
9000fd5e:	2300      	movs	r3, #0
9000fd60:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000fd64:	f7fe ff08 	bl	9000eb78 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000fd68:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000fd6a:	2b00      	cmp	r3, #0
9000fd6c:	d043      	beq.n	9000fdf6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000fd6e:	f7fe fee1 	bl	9000eb34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fd72:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000fd76:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fd78:	2c00      	cmp	r4, #0
9000fd7a:	dd14      	ble.n	9000fda6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fd7c:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000fd80:	e003      	b.n	9000fd8a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000fd82:	1e63      	subs	r3, r4, #1
9000fd84:	b2da      	uxtb	r2, r3
9000fd86:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fd88:	b16a      	cbz	r2, 9000fda6 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fd8a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fd8c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fd8e:	b153      	cbz	r3, 9000fda6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fd90:	f000 fe2a 	bl	900109e8 <xTaskRemoveFromEventList>
9000fd94:	2800      	cmp	r0, #0
9000fd96:	d0f4      	beq.n	9000fd82 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000fd98:	f000 feba 	bl	90010b10 <vTaskMissedYield>
			--cTxLock;
9000fd9c:	1e63      	subs	r3, r4, #1
9000fd9e:	b2da      	uxtb	r2, r3
9000fda0:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fda2:	2a00      	cmp	r2, #0
9000fda4:	d1f1      	bne.n	9000fd8a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fda6:	23ff      	movs	r3, #255	@ 0xff
9000fda8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fdac:	f7fe fee4 	bl	9000eb78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fdb0:	f7fe fec0 	bl	9000eb34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fdb4:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000fdb8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fdba:	2c00      	cmp	r4, #0
9000fdbc:	dd14      	ble.n	9000fde8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fdbe:	f105 0610 	add.w	r6, r5, #16
9000fdc2:	e003      	b.n	9000fdcc <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000fdc4:	1e63      	subs	r3, r4, #1
9000fdc6:	b2da      	uxtb	r2, r3
9000fdc8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fdca:	b16a      	cbz	r2, 9000fde8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fdcc:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fdce:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fdd0:	b153      	cbz	r3, 9000fde8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fdd2:	f000 fe09 	bl	900109e8 <xTaskRemoveFromEventList>
9000fdd6:	2800      	cmp	r0, #0
9000fdd8:	d0f4      	beq.n	9000fdc4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000fdda:	f000 fe99 	bl	90010b10 <vTaskMissedYield>
				--cRxLock;
9000fdde:	1e63      	subs	r3, r4, #1
9000fde0:	b2da      	uxtb	r2, r3
9000fde2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fde4:	2a00      	cmp	r2, #0
9000fde6:	d1f1      	bne.n	9000fdcc <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000fde8:	23ff      	movs	r3, #255	@ 0xff
9000fdea:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000fdee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000fdf2:	f7fe bec1 	b.w	9000eb78 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000fdf6:	4622      	mov	r2, r4
9000fdf8:	4631      	mov	r1, r6
9000fdfa:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000fdfe:	f000 fda9 	bl	90010954 <vTaskPlaceOnEventListRestricted>
9000fe02:	e7b4      	b.n	9000fd6e <vQueueWaitForMessageRestricted+0x32>

9000fe04 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000fe04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fe08:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000fe0a:	f7fe fe93 	bl	9000eb34 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000fe0e:	4a33      	ldr	r2, [pc, #204]	@ (9000fedc <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
9000fe10:	4e33      	ldr	r6, [pc, #204]	@ (9000fee0 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
9000fe12:	6813      	ldr	r3, [r2, #0]
9000fe14:	3301      	adds	r3, #1
9000fe16:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000fe18:	6833      	ldr	r3, [r6, #0]
9000fe1a:	2b00      	cmp	r3, #0
9000fe1c:	d031      	beq.n	9000fe82 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000fe1e:	4c31      	ldr	r4, [pc, #196]	@ (9000fee4 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fe20:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000fe22:	6823      	ldr	r3, [r4, #0]
9000fe24:	b333      	cbz	r3, 9000fe74 <prvAddNewTaskToReadyList+0x70>
9000fe26:	4f30      	ldr	r7, [pc, #192]	@ (9000fee8 <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000fe28:	4a30      	ldr	r2, [pc, #192]	@ (9000feec <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000fe2a:	4931      	ldr	r1, [pc, #196]	@ (9000fef0 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
9000fe2c:	6813      	ldr	r3, [r2, #0]
9000fe2e:	3301      	adds	r3, #1
9000fe30:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000fe32:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000fe34:	680b      	ldr	r3, [r1, #0]
9000fe36:	4283      	cmp	r3, r0
9000fe38:	d200      	bcs.n	9000fe3c <prvAddNewTaskToReadyList+0x38>
9000fe3a:	6008      	str	r0, [r1, #0]
9000fe3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fe40:	1d29      	adds	r1, r5, #4
9000fe42:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000fe46:	f7fe fdd1 	bl	9000e9ec <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000fe4a:	f7fe fe95 	bl	9000eb78 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000fe4e:	6823      	ldr	r3, [r4, #0]
9000fe50:	b173      	cbz	r3, 9000fe70 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000fe52:	6832      	ldr	r2, [r6, #0]
9000fe54:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000fe56:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000fe58:	429a      	cmp	r2, r3
9000fe5a:	d209      	bcs.n	9000fe70 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000fe5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fe60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fe64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fe68:	f3bf 8f4f 	dsb	sy
9000fe6c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000fe70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fe74:	6833      	ldr	r3, [r6, #0]
9000fe76:	4f1c      	ldr	r7, [pc, #112]	@ (9000fee8 <prvAddNewTaskToReadyList+0xe4>)
9000fe78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fe7a:	4283      	cmp	r3, r0
9000fe7c:	d8d4      	bhi.n	9000fe28 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000fe7e:	6035      	str	r5, [r6, #0]
9000fe80:	e7d2      	b.n	9000fe28 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000fe82:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000fe84:	6813      	ldr	r3, [r2, #0]
9000fe86:	2b01      	cmp	r3, #1
9000fe88:	d003      	beq.n	9000fe92 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fe8a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000fe8c:	4f16      	ldr	r7, [pc, #88]	@ (9000fee8 <prvAddNewTaskToReadyList+0xe4>)
9000fe8e:	4c15      	ldr	r4, [pc, #84]	@ (9000fee4 <prvAddNewTaskToReadyList+0xe0>)
9000fe90:	e7ca      	b.n	9000fe28 <prvAddNewTaskToReadyList+0x24>
9000fe92:	4f15      	ldr	r7, [pc, #84]	@ (9000fee8 <prvAddNewTaskToReadyList+0xe4>)
9000fe94:	463c      	mov	r4, r7
9000fe96:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fe9a:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fe9c:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fe9e:	f7fe fd95 	bl	9000e9cc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fea2:	45a0      	cmp	r8, r4
9000fea4:	d1f9      	bne.n	9000fe9a <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000fea6:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000ff0c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000feaa:	4c12      	ldr	r4, [pc, #72]	@ (9000fef4 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9000feac:	4640      	mov	r0, r8
9000feae:	f7fe fd8d 	bl	9000e9cc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000feb2:	4620      	mov	r0, r4
9000feb4:	f7fe fd8a 	bl	9000e9cc <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000feb8:	480f      	ldr	r0, [pc, #60]	@ (9000fef8 <prvAddNewTaskToReadyList+0xf4>)
9000feba:	f7fe fd87 	bl	9000e9cc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000febe:	480f      	ldr	r0, [pc, #60]	@ (9000fefc <prvAddNewTaskToReadyList+0xf8>)
9000fec0:	f7fe fd84 	bl	9000e9cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000fec4:	480e      	ldr	r0, [pc, #56]	@ (9000ff00 <prvAddNewTaskToReadyList+0xfc>)
9000fec6:	f7fe fd81 	bl	9000e9cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000feca:	4b0e      	ldr	r3, [pc, #56]	@ (9000ff04 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000fecc:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000fece:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000fed2:	4b0d      	ldr	r3, [pc, #52]	@ (9000ff08 <prvAddNewTaskToReadyList+0x104>)
9000fed4:	601c      	str	r4, [r3, #0]
9000fed6:	4c03      	ldr	r4, [pc, #12]	@ (9000fee4 <prvAddNewTaskToReadyList+0xe0>)
}
9000fed8:	e7a6      	b.n	9000fe28 <prvAddNewTaskToReadyList+0x24>
9000feda:	bf00      	nop
9000fedc:	24021754 	.word	0x24021754
9000fee0:	24021c28 	.word	0x24021c28
9000fee4:	24021748 	.word	0x24021748
9000fee8:	240217c8 	.word	0x240217c8
9000feec:	24021738 	.word	0x24021738
9000fef0:	2402174c 	.word	0x2402174c
9000fef4:	240217a0 	.word	0x240217a0
9000fef8:	24021784 	.word	0x24021784
9000fefc:	24021770 	.word	0x24021770
9000ff00:	24021758 	.word	0x24021758
9000ff04:	2402179c 	.word	0x2402179c
9000ff08:	24021798 	.word	0x24021798
9000ff0c:	240217b4 	.word	0x240217b4

9000ff10 <prvIdleTask>:
{
9000ff10:	b580      	push	{r7, lr}
9000ff12:	4c22      	ldr	r4, [pc, #136]	@ (9000ff9c <prvIdleTask+0x8c>)
9000ff14:	4e22      	ldr	r6, [pc, #136]	@ (9000ffa0 <prvIdleTask+0x90>)
9000ff16:	4d23      	ldr	r5, [pc, #140]	@ (9000ffa4 <prvIdleTask+0x94>)
9000ff18:	4f23      	ldr	r7, [pc, #140]	@ (9000ffa8 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ff1a:	6823      	ldr	r3, [r4, #0]
9000ff1c:	b353      	cbz	r3, 9000ff74 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000ff1e:	f7fe fe09 	bl	9000eb34 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ff22:	68f3      	ldr	r3, [r6, #12]
9000ff24:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ff28:	f108 0004 	add.w	r0, r8, #4
9000ff2c:	f7fe fd84 	bl	9000ea38 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ff30:	682b      	ldr	r3, [r5, #0]
9000ff32:	3b01      	subs	r3, #1
9000ff34:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ff36:	6823      	ldr	r3, [r4, #0]
9000ff38:	3b01      	subs	r3, #1
9000ff3a:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ff3c:	f7fe fe1c 	bl	9000eb78 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ff40:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000ff44:	b163      	cbz	r3, 9000ff60 <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ff46:	2b01      	cmp	r3, #1
9000ff48:	d024      	beq.n	9000ff94 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ff4a:	2b02      	cmp	r3, #2
9000ff4c:	d0e5      	beq.n	9000ff1a <prvIdleTask+0xa>
9000ff4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff52:	f383 8811 	msr	BASEPRI, r3
9000ff56:	f3bf 8f6f 	isb	sy
9000ff5a:	f3bf 8f4f 	dsb	sy
9000ff5e:	e7fe      	b.n	9000ff5e <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000ff60:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000ff64:	f7fe fcc8 	bl	9000e8f8 <vPortFree>
				vPortFree( pxTCB );
9000ff68:	4640      	mov	r0, r8
9000ff6a:	f7fe fcc5 	bl	9000e8f8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ff6e:	6823      	ldr	r3, [r4, #0]
9000ff70:	2b00      	cmp	r3, #0
9000ff72:	d1d4      	bne.n	9000ff1e <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ff74:	683b      	ldr	r3, [r7, #0]
9000ff76:	2b01      	cmp	r3, #1
9000ff78:	d909      	bls.n	9000ff8e <prvIdleTask+0x7e>
				taskYIELD();
9000ff7a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ff7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ff82:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ff86:	f3bf 8f4f 	dsb	sy
9000ff8a:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000ff8e:	f7f3 fbeb 	bl	90003768 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000ff92:	e7c2      	b.n	9000ff1a <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000ff94:	4640      	mov	r0, r8
9000ff96:	f7fe fcaf 	bl	9000e8f8 <vPortFree>
9000ff9a:	e7be      	b.n	9000ff1a <prvIdleTask+0xa>
9000ff9c:	2402176c 	.word	0x2402176c
9000ffa0:	24021770 	.word	0x24021770
9000ffa4:	24021754 	.word	0x24021754
9000ffa8:	240217c8 	.word	0x240217c8

9000ffac <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ffac:	4b49      	ldr	r3, [pc, #292]	@ (900100d4 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000ffae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ffb2:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000ffb4:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ffb6:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000ffb8:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000ffba:	2e00      	cmp	r6, #0
9000ffbc:	d03e      	beq.n	9001003c <xTaskIncrementTick.part.0+0x90>
9000ffbe:	4b46      	ldr	r3, [pc, #280]	@ (900100d8 <xTaskIncrementTick.part.0+0x12c>)
9000ffc0:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000ffc2:	681b      	ldr	r3, [r3, #0]
9000ffc4:	429e      	cmp	r6, r3
9000ffc6:	d346      	bcc.n	90010056 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ffc8:	4f44      	ldr	r7, [pc, #272]	@ (900100dc <xTaskIncrementTick.part.0+0x130>)
9000ffca:	683b      	ldr	r3, [r7, #0]
9000ffcc:	681d      	ldr	r5, [r3, #0]
9000ffce:	2d00      	cmp	r5, #0
9000ffd0:	d077      	beq.n	900100c2 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000ffd2:	2500      	movs	r5, #0
9000ffd4:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 900100ec <xTaskIncrementTick.part.0+0x140>
9000ffd8:	f8df a114 	ldr.w	sl, [pc, #276]	@ 900100f0 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000ffdc:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 900100f4 <xTaskIncrementTick.part.0+0x148>
9000ffe0:	e020      	b.n	90010024 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ffe2:	f7fe fd29 	bl	9000ea38 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ffe6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ffe8:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ffec:	b10b      	cbz	r3, 9000fff2 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ffee:	f7fe fd23 	bl	9000ea38 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fff2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000fff4:	4659      	mov	r1, fp
9000fff6:	f8d8 2000 	ldr.w	r2, [r8]
9000fffa:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fffe:	4293      	cmp	r3, r2
90010000:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010004:	d901      	bls.n	9001000a <xTaskIncrementTick.part.0+0x5e>
90010006:	f8c8 3000 	str.w	r3, [r8]
9001000a:	f7fe fcef 	bl	9000e9ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001000e:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010012:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010014:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90010016:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010018:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9001001a:	4291      	cmp	r1, r2
9001001c:	bf28      	it	cs
9001001e:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010020:	2b00      	cmp	r3, #0
90010022:	d052      	beq.n	900100ca <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010024:	683b      	ldr	r3, [r7, #0]
90010026:	68db      	ldr	r3, [r3, #12]
90010028:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9001002a:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001002c:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
90010030:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010032:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90010034:	d2d5      	bcs.n	9000ffe2 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90010036:	9a01      	ldr	r2, [sp, #4]
90010038:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9001003a:	e011      	b.n	90010060 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9001003c:	4b27      	ldr	r3, [pc, #156]	@ (900100dc <xTaskIncrementTick.part.0+0x130>)
9001003e:	681a      	ldr	r2, [r3, #0]
90010040:	6812      	ldr	r2, [r2, #0]
90010042:	b30a      	cbz	r2, 90010088 <xTaskIncrementTick.part.0+0xdc>
90010044:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010048:	f383 8811 	msr	BASEPRI, r3
9001004c:	f3bf 8f6f 	isb	sy
90010050:	f3bf 8f4f 	dsb	sy
90010054:	e7fe      	b.n	90010054 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90010056:	2500      	movs	r5, #0
90010058:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 900100ec <xTaskIncrementTick.part.0+0x140>
9001005c:	f8df a090 	ldr.w	sl, [pc, #144]	@ 900100f0 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010060:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90010064:	491e      	ldr	r1, [pc, #120]	@ (900100e0 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010066:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010068:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001006c:	009b      	lsls	r3, r3, #2
9001006e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90010072:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90010074:	2a02      	cmp	r2, #2
90010076:	bf28      	it	cs
90010078:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9001007a:	2b00      	cmp	r3, #0
}
9001007c:	bf0c      	ite	eq
9001007e:	4628      	moveq	r0, r5
90010080:	2001      	movne	r0, #1
90010082:	b003      	add	sp, #12
90010084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90010088:	4a16      	ldr	r2, [pc, #88]	@ (900100e4 <xTaskIncrementTick.part.0+0x138>)
9001008a:	6818      	ldr	r0, [r3, #0]
9001008c:	6811      	ldr	r1, [r2, #0]
9001008e:	6019      	str	r1, [r3, #0]
90010090:	4915      	ldr	r1, [pc, #84]	@ (900100e8 <xTaskIncrementTick.part.0+0x13c>)
90010092:	6010      	str	r0, [r2, #0]
90010094:	680a      	ldr	r2, [r1, #0]
90010096:	3201      	adds	r2, #1
90010098:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001009a:	681a      	ldr	r2, [r3, #0]
9001009c:	6812      	ldr	r2, [r2, #0]
9001009e:	b93a      	cbnz	r2, 900100b0 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
900100a0:	4b0d      	ldr	r3, [pc, #52]	@ (900100d8 <xTaskIncrementTick.part.0+0x12c>)
900100a2:	461a      	mov	r2, r3
900100a4:	9301      	str	r3, [sp, #4]
900100a6:	f04f 33ff 	mov.w	r3, #4294967295
900100aa:	6013      	str	r3, [r2, #0]
900100ac:	4613      	mov	r3, r2
900100ae:	e788      	b.n	9000ffc2 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900100b0:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900100b2:	4a09      	ldr	r2, [pc, #36]	@ (900100d8 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900100b4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900100b6:	9201      	str	r2, [sp, #4]
900100b8:	68db      	ldr	r3, [r3, #12]
900100ba:	685b      	ldr	r3, [r3, #4]
900100bc:	6013      	str	r3, [r2, #0]
900100be:	4613      	mov	r3, r2
	}
}
900100c0:	e77f      	b.n	9000ffc2 <xTaskIncrementTick.part.0+0x16>
900100c2:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 900100ec <xTaskIncrementTick.part.0+0x140>
900100c6:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900100f0 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900100ca:	f04f 33ff 	mov.w	r3, #4294967295
900100ce:	9a01      	ldr	r2, [sp, #4]
900100d0:	6013      	str	r3, [r2, #0]
					break;
900100d2:	e7c5      	b.n	90010060 <xTaskIncrementTick.part.0+0xb4>
900100d4:	24021750 	.word	0x24021750
900100d8:	24021734 	.word	0x24021734
900100dc:	2402179c 	.word	0x2402179c
900100e0:	24021740 	.word	0x24021740
900100e4:	24021798 	.word	0x24021798
900100e8:	2402173c 	.word	0x2402173c
900100ec:	240217c8 	.word	0x240217c8
900100f0:	24021c28 	.word	0x24021c28
900100f4:	2402174c 	.word	0x2402174c

900100f8 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900100f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900100fc:	4d42      	ldr	r5, [pc, #264]	@ (90010208 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
900100fe:	f7fe fd19 	bl	9000eb34 <vPortEnterCritical>
		--uxSchedulerSuspended;
90010102:	682b      	ldr	r3, [r5, #0]
90010104:	3b01      	subs	r3, #1
90010106:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010108:	682b      	ldr	r3, [r5, #0]
9001010a:	2b00      	cmp	r3, #0
9001010c:	d165      	bne.n	900101da <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9001010e:	4b3f      	ldr	r3, [pc, #252]	@ (9001020c <xTaskResumeAll.part.0+0x114>)
90010110:	681b      	ldr	r3, [r3, #0]
90010112:	2b00      	cmp	r3, #0
90010114:	d061      	beq.n	900101da <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010116:	4e3e      	ldr	r6, [pc, #248]	@ (90010210 <xTaskResumeAll.part.0+0x118>)
90010118:	6833      	ldr	r3, [r6, #0]
9001011a:	2b00      	cmp	r3, #0
9001011c:	d070      	beq.n	90010200 <xTaskResumeAll.part.0+0x108>
9001011e:	4f3d      	ldr	r7, [pc, #244]	@ (90010214 <xTaskResumeAll.part.0+0x11c>)
90010120:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 90010224 <xTaskResumeAll.part.0+0x12c>
90010124:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 90010228 <xTaskResumeAll.part.0+0x130>
90010128:	f8df a100 	ldr.w	sl, [pc, #256]	@ 9001022c <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001012c:	68f3      	ldr	r3, [r6, #12]
9001012e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010130:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010134:	f104 0018 	add.w	r0, r4, #24
90010138:	f7fe fc7e 	bl	9000ea38 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001013c:	4658      	mov	r0, fp
9001013e:	f7fe fc7b 	bl	9000ea38 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90010142:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90010144:	683a      	ldr	r2, [r7, #0]
90010146:	4659      	mov	r1, fp
90010148:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9001014c:	4293      	cmp	r3, r2
9001014e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010152:	d900      	bls.n	90010156 <xTaskResumeAll.part.0+0x5e>
90010154:	603b      	str	r3, [r7, #0]
90010156:	f7fe fc49 	bl	9000e9ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001015a:	f8d8 3000 	ldr.w	r3, [r8]
9001015e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90010160:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010162:	429a      	cmp	r2, r3
90010164:	d33f      	bcc.n	900101e6 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
90010166:	2301      	movs	r3, #1
90010168:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001016c:	6833      	ldr	r3, [r6, #0]
9001016e:	2b00      	cmp	r3, #0
90010170:	d1dc      	bne.n	9001012c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010172:	4b29      	ldr	r3, [pc, #164]	@ (90010218 <xTaskResumeAll.part.0+0x120>)
90010174:	681a      	ldr	r2, [r3, #0]
90010176:	6812      	ldr	r2, [r2, #0]
90010178:	2a00      	cmp	r2, #0
9001017a:	d03c      	beq.n	900101f6 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001017c:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001017e:	4b27      	ldr	r3, [pc, #156]	@ (9001021c <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010180:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010182:	68d2      	ldr	r2, [r2, #12]
90010184:	6852      	ldr	r2, [r2, #4]
90010186:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90010188:	4e25      	ldr	r6, [pc, #148]	@ (90010220 <xTaskResumeAll.part.0+0x128>)
9001018a:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9001018c:	b194      	cbz	r4, 900101b4 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
9001018e:	2701      	movs	r7, #1
90010190:	e006      	b.n	900101a0 <xTaskResumeAll.part.0+0xa8>
90010192:	f7ff ff0b 	bl	9000ffac <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010196:	b108      	cbz	r0, 9001019c <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
90010198:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001019c:	3c01      	subs	r4, #1
9001019e:	d008      	beq.n	900101b2 <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900101a0:	682b      	ldr	r3, [r5, #0]
900101a2:	2b00      	cmp	r3, #0
900101a4:	d0f5      	beq.n	90010192 <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
900101a6:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
900101a8:	3c01      	subs	r4, #1
		++xPendedTicks;
900101aa:	f103 0301 	add.w	r3, r3, #1
900101ae:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
900101b0:	d1f6      	bne.n	900101a0 <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
900101b2:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
900101b4:	f8da 3000 	ldr.w	r3, [sl]
900101b8:	b17b      	cbz	r3, 900101da <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
900101ba:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900101be:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900101c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900101c6:	f3bf 8f4f 	dsb	sy
900101ca:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
900101ce:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
900101d0:	f7fe fcd2 	bl	9000eb78 <vPortExitCritical>
}
900101d4:	4620      	mov	r0, r4
900101d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
900101da:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
900101dc:	f7fe fccc 	bl	9000eb78 <vPortExitCritical>
}
900101e0:	4620      	mov	r0, r4
900101e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900101e6:	6833      	ldr	r3, [r6, #0]
900101e8:	2b00      	cmp	r3, #0
900101ea:	d19f      	bne.n	9001012c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900101ec:	4b0a      	ldr	r3, [pc, #40]	@ (90010218 <xTaskResumeAll.part.0+0x120>)
900101ee:	681a      	ldr	r2, [r3, #0]
900101f0:	6812      	ldr	r2, [r2, #0]
900101f2:	2a00      	cmp	r2, #0
900101f4:	d1c2      	bne.n	9001017c <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
900101f6:	4b09      	ldr	r3, [pc, #36]	@ (9001021c <xTaskResumeAll.part.0+0x124>)
900101f8:	f04f 32ff 	mov.w	r2, #4294967295
900101fc:	601a      	str	r2, [r3, #0]
900101fe:	e7c3      	b.n	90010188 <xTaskResumeAll.part.0+0x90>
90010200:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9001022c <xTaskResumeAll.part.0+0x134>
90010204:	e7c0      	b.n	90010188 <xTaskResumeAll.part.0+0x90>
90010206:	bf00      	nop
90010208:	24021730 	.word	0x24021730
9001020c:	24021754 	.word	0x24021754
90010210:	24021784 	.word	0x24021784
90010214:	2402174c 	.word	0x2402174c
90010218:	2402179c 	.word	0x2402179c
9001021c:	24021734 	.word	0x24021734
90010220:	24021744 	.word	0x24021744
90010224:	240217c8 	.word	0x240217c8
90010228:	24021c28 	.word	0x24021c28
9001022c:	24021740 	.word	0x24021740

90010230 <xTaskCreateStatic>:
	{
90010230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010234:	b083      	sub	sp, #12
90010236:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
90010238:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9001023c:	b1bb      	cbz	r3, 9001026e <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9001023e:	b16c      	cbz	r4, 9001025c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90010240:	2360      	movs	r3, #96	@ 0x60
90010242:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90010244:	9b01      	ldr	r3, [sp, #4]
90010246:	2b60      	cmp	r3, #96	@ 0x60
90010248:	d01a      	beq.n	90010280 <xTaskCreateStatic+0x50>
9001024a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001024e:	f383 8811 	msr	BASEPRI, r3
90010252:	f3bf 8f6f 	isb	sy
90010256:	f3bf 8f4f 	dsb	sy
9001025a:	e7fe      	b.n	9001025a <xTaskCreateStatic+0x2a>
9001025c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010260:	f383 8811 	msr	BASEPRI, r3
90010264:	f3bf 8f6f 	isb	sy
90010268:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001026c:	e7fe      	b.n	9001026c <xTaskCreateStatic+0x3c>
9001026e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010272:	f383 8811 	msr	BASEPRI, r3
90010276:	f3bf 8f6f 	isb	sy
9001027a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9001027e:	e7fe      	b.n	9001027e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010280:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010282:	0096      	lsls	r6, r2, #2
90010284:	4607      	mov	r7, r0
90010286:	460d      	mov	r5, r1
90010288:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9001028a:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9001028c:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001028e:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010290:	4632      	mov	r2, r6
90010292:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010294:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010298:	f01a fd80 	bl	9002ad9c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001029c:	1f32      	subs	r2, r6, #4
9001029e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900102a0:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900102a2:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
900102a6:	2d00      	cmp	r5, #0
900102a8:	d068      	beq.n	9001037c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102aa:	782b      	ldrb	r3, [r5, #0]
900102ac:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
900102b0:	2b00      	cmp	r3, #0
900102b2:	d036      	beq.n	90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102b4:	786b      	ldrb	r3, [r5, #1]
900102b6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
900102ba:	b393      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102bc:	78ab      	ldrb	r3, [r5, #2]
900102be:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
900102c2:	b373      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102c4:	78eb      	ldrb	r3, [r5, #3]
900102c6:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
900102ca:	b353      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102cc:	792b      	ldrb	r3, [r5, #4]
900102ce:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
900102d2:	b333      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102d4:	796b      	ldrb	r3, [r5, #5]
900102d6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900102da:	b313      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102dc:	79ab      	ldrb	r3, [r5, #6]
900102de:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
900102e2:	b1f3      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102e4:	79eb      	ldrb	r3, [r5, #7]
900102e6:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
900102ea:	b1d3      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102ec:	7a2b      	ldrb	r3, [r5, #8]
900102ee:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900102f2:	b1b3      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102f4:	7a6b      	ldrb	r3, [r5, #9]
900102f6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900102fa:	b193      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900102fc:	7aab      	ldrb	r3, [r5, #10]
900102fe:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90010302:	b173      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010304:	7aeb      	ldrb	r3, [r5, #11]
90010306:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9001030a:	b153      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001030c:	7b2b      	ldrb	r3, [r5, #12]
9001030e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90010312:	b133      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010314:	7b6b      	ldrb	r3, [r5, #13]
90010316:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9001031a:	b113      	cbz	r3, 90010322 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001031c:	7bab      	ldrb	r3, [r5, #14]
9001031e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010322:	2300      	movs	r3, #0
90010324:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010328:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9001032a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001032e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010330:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90010332:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010336:	bf28      	it	cs
90010338:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9001033a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001033c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001033e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010342:	f7fe fb4f 	bl	9000e9e4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010346:	f104 0018 	add.w	r0, r4, #24
9001034a:	f7fe fb4b 	bl	9000e9e4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001034e:	4642      	mov	r2, r8
90010350:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90010352:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010356:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010358:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001035a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001035c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9001035e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010362:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010366:	f7fe fbb9 	bl	9000eadc <pxPortInitialiseStack>
9001036a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001036c:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001036e:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010370:	f7ff fd48 	bl	9000fe04 <prvAddNewTaskToReadyList>
	}
90010374:	4620      	mov	r0, r4
90010376:	b003      	add	sp, #12
90010378:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9001037c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90010380:	e7d2      	b.n	90010328 <xTaskCreateStatic+0xf8>
90010382:	bf00      	nop

90010384 <xTaskCreate>:
	{
90010384:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010388:	0096      	lsls	r6, r2, #2
	{
9001038a:	4680      	mov	r8, r0
9001038c:	460d      	mov	r5, r1
9001038e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010390:	4630      	mov	r0, r6
90010392:	f7fe f9f3 	bl	9000e77c <pvPortMalloc>
			if( pxStack != NULL )
90010396:	2800      	cmp	r0, #0
90010398:	d07f      	beq.n	9001049a <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9001039a:	4607      	mov	r7, r0
9001039c:	2060      	movs	r0, #96	@ 0x60
9001039e:	f7fe f9ed 	bl	9000e77c <pvPortMalloc>
				if( pxNewTCB != NULL )
900103a2:	4604      	mov	r4, r0
900103a4:	2800      	cmp	r0, #0
900103a6:	d075      	beq.n	90010494 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900103a8:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
900103aa:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900103ac:	4632      	mov	r2, r6
900103ae:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900103b0:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900103b4:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900103b6:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900103b8:	f01a fcf0 	bl	9002ad9c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900103bc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900103be:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900103c0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
900103c4:	2d00      	cmp	r5, #0
900103c6:	d06c      	beq.n	900104a2 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103c8:	782b      	ldrb	r3, [r5, #0]
900103ca:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
900103ce:	2b00      	cmp	r3, #0
900103d0:	d036      	beq.n	90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103d2:	786b      	ldrb	r3, [r5, #1]
900103d4:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
900103d8:	b393      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103da:	78ab      	ldrb	r3, [r5, #2]
900103dc:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
900103e0:	b373      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103e2:	78eb      	ldrb	r3, [r5, #3]
900103e4:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
900103e8:	b353      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103ea:	792b      	ldrb	r3, [r5, #4]
900103ec:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
900103f0:	b333      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103f2:	796b      	ldrb	r3, [r5, #5]
900103f4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900103f8:	b313      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103fa:	79ab      	ldrb	r3, [r5, #6]
900103fc:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90010400:	b1f3      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010402:	79eb      	ldrb	r3, [r5, #7]
90010404:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010408:	b1d3      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001040a:	7a2b      	ldrb	r3, [r5, #8]
9001040c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90010410:	b1b3      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010412:	7a6b      	ldrb	r3, [r5, #9]
90010414:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90010418:	b193      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001041a:	7aab      	ldrb	r3, [r5, #10]
9001041c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90010420:	b173      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010422:	7aeb      	ldrb	r3, [r5, #11]
90010424:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90010428:	b153      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001042a:	7b2b      	ldrb	r3, [r5, #12]
9001042c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90010430:	b133      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010432:	7b6b      	ldrb	r3, [r5, #13]
90010434:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90010438:	b113      	cbz	r3, 90010440 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001043a:	7bab      	ldrb	r3, [r5, #14]
9001043c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010440:	2300      	movs	r3, #0
90010442:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010446:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90010448:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001044a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9001044c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9001044e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010450:	bf28      	it	cs
90010452:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
90010454:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90010456:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010458:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001045c:	f7fe fac2 	bl	9000e9e4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010460:	f104 0018 	add.w	r0, r4, #24
90010464:	f7fe fabe 	bl	9000e9e4 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
90010468:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001046a:	464a      	mov	r2, r9
9001046c:	4641      	mov	r1, r8
9001046e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010470:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90010472:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90010474:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90010476:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010478:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001047c:	f7fe fb2e 	bl	9000eadc <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90010480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010482:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90010484:	b103      	cbz	r3, 90010488 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90010486:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010488:	4620      	mov	r0, r4
9001048a:	f7ff fcbb 	bl	9000fe04 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9001048e:	2001      	movs	r0, #1
	}
90010490:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
90010494:	4638      	mov	r0, r7
90010496:	f7fe fa2f 	bl	9000e8f8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001049a:	f04f 30ff 	mov.w	r0, #4294967295
	}
9001049e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
900104a2:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
900104a6:	e7ce      	b.n	90010446 <xTaskCreate+0xc2>

900104a8 <vTaskDelete>:
	{
900104a8:	b570      	push	{r4, r5, r6, lr}
900104aa:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
900104ac:	4d36      	ldr	r5, [pc, #216]	@ (90010588 <vTaskDelete+0xe0>)
		taskENTER_CRITICAL();
900104ae:	f7fe fb41 	bl	9000eb34 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
900104b2:	2c00      	cmp	r4, #0
900104b4:	d044      	beq.n	90010540 <vTaskDelete+0x98>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900104b6:	1d26      	adds	r6, r4, #4
900104b8:	4630      	mov	r0, r6
900104ba:	f7fe fabd 	bl	9000ea38 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900104be:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900104c0:	b11b      	cbz	r3, 900104ca <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900104c2:	f104 0018 	add.w	r0, r4, #24
900104c6:	f7fe fab7 	bl	9000ea38 <uxListRemove>
			uxTaskNumber++;
900104ca:	4a30      	ldr	r2, [pc, #192]	@ (9001058c <vTaskDelete+0xe4>)
900104cc:	6813      	ldr	r3, [r2, #0]
900104ce:	3301      	adds	r3, #1
900104d0:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
900104d2:	682b      	ldr	r3, [r5, #0]
900104d4:	42a3      	cmp	r3, r4
900104d6:	d02a      	beq.n	9001052e <vTaskDelete+0x86>
				--uxCurrentNumberOfTasks;
900104d8:	492d      	ldr	r1, [pc, #180]	@ (90010590 <vTaskDelete+0xe8>)
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900104da:	f894 205d 	ldrb.w	r2, [r4, #93]	@ 0x5d
				--uxCurrentNumberOfTasks;
900104de:	680b      	ldr	r3, [r1, #0]
900104e0:	3b01      	subs	r3, #1
900104e2:	600b      	str	r3, [r1, #0]
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900104e4:	b162      	cbz	r2, 90010500 <vTaskDelete+0x58>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
900104e6:	2a01      	cmp	r2, #1
900104e8:	d03f      	beq.n	9001056a <vTaskDelete+0xc2>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
900104ea:	2a02      	cmp	r2, #2
900104ec:	d00e      	beq.n	9001050c <vTaskDelete+0x64>
900104ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104f2:	f383 8811 	msr	BASEPRI, r3
900104f6:	f3bf 8f6f 	isb	sy
900104fa:	f3bf 8f4f 	dsb	sy
900104fe:	e7fe      	b.n	900104fe <vTaskDelete+0x56>
				vPortFree( pxTCB->pxStack );
90010500:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90010502:	f7fe f9f9 	bl	9000e8f8 <vPortFree>
				vPortFree( pxTCB );
90010506:	4620      	mov	r0, r4
90010508:	f7fe f9f6 	bl	9000e8f8 <vPortFree>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001050c:	4b21      	ldr	r3, [pc, #132]	@ (90010594 <vTaskDelete+0xec>)
9001050e:	681a      	ldr	r2, [r3, #0]
90010510:	6812      	ldr	r2, [r2, #0]
90010512:	b9ba      	cbnz	r2, 90010544 <vTaskDelete+0x9c>
		xNextTaskUnblockTime = portMAX_DELAY;
90010514:	4b20      	ldr	r3, [pc, #128]	@ (90010598 <vTaskDelete+0xf0>)
90010516:	f04f 32ff 	mov.w	r2, #4294967295
9001051a:	601a      	str	r2, [r3, #0]
		taskEXIT_CRITICAL();
9001051c:	f7fe fb2c 	bl	9000eb78 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
90010520:	4b1e      	ldr	r3, [pc, #120]	@ (9001059c <vTaskDelete+0xf4>)
90010522:	681b      	ldr	r3, [r3, #0]
90010524:	b113      	cbz	r3, 9001052c <vTaskDelete+0x84>
			if( pxTCB == pxCurrentTCB )
90010526:	682b      	ldr	r3, [r5, #0]
90010528:	42a3      	cmp	r3, r4
9001052a:	d012      	beq.n	90010552 <vTaskDelete+0xaa>
	}
9001052c:	bd70      	pop	{r4, r5, r6, pc}
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
9001052e:	4631      	mov	r1, r6
90010530:	481b      	ldr	r0, [pc, #108]	@ (900105a0 <vTaskDelete+0xf8>)
90010532:	f7fe fa5b 	bl	9000e9ec <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
90010536:	4a1b      	ldr	r2, [pc, #108]	@ (900105a4 <vTaskDelete+0xfc>)
90010538:	6813      	ldr	r3, [r2, #0]
9001053a:	3301      	adds	r3, #1
9001053c:	6013      	str	r3, [r2, #0]
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
9001053e:	e7ed      	b.n	9001051c <vTaskDelete+0x74>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010540:	682c      	ldr	r4, [r5, #0]
90010542:	e7b8      	b.n	900104b6 <vTaskDelete+0xe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010544:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010546:	4b14      	ldr	r3, [pc, #80]	@ (90010598 <vTaskDelete+0xf0>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010548:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001054a:	68d2      	ldr	r2, [r2, #12]
9001054c:	6852      	ldr	r2, [r2, #4]
9001054e:	601a      	str	r2, [r3, #0]
}
90010550:	e7e4      	b.n	9001051c <vTaskDelete+0x74>
				configASSERT( uxSchedulerSuspended == 0 );
90010552:	4b15      	ldr	r3, [pc, #84]	@ (900105a8 <vTaskDelete+0x100>)
90010554:	681b      	ldr	r3, [r3, #0]
90010556:	b163      	cbz	r3, 90010572 <vTaskDelete+0xca>
90010558:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001055c:	f383 8811 	msr	BASEPRI, r3
90010560:	f3bf 8f6f 	isb	sy
90010564:	f3bf 8f4f 	dsb	sy
90010568:	e7fe      	b.n	90010568 <vTaskDelete+0xc0>
				vPortFree( pxTCB );
9001056a:	4620      	mov	r0, r4
9001056c:	f7fe f9c4 	bl	9000e8f8 <vPortFree>
90010570:	e7cc      	b.n	9001050c <vTaskDelete+0x64>
				portYIELD_WITHIN_API();
90010572:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010576:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001057a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001057e:	f3bf 8f4f 	dsb	sy
90010582:	f3bf 8f6f 	isb	sy
	}
90010586:	bd70      	pop	{r4, r5, r6, pc}
90010588:	24021c28 	.word	0x24021c28
9001058c:	24021738 	.word	0x24021738
90010590:	24021754 	.word	0x24021754
90010594:	2402179c 	.word	0x2402179c
90010598:	24021734 	.word	0x24021734
9001059c:	24021748 	.word	0x24021748
900105a0:	24021770 	.word	0x24021770
900105a4:	2402176c 	.word	0x2402176c
900105a8:	24021730 	.word	0x24021730

900105ac <vTaskDelay>:
	{
900105ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
900105ae:	b950      	cbnz	r0, 900105c6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900105b0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900105b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900105b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900105bc:	f3bf 8f4f 	dsb	sy
900105c0:	f3bf 8f6f 	isb	sy
	}
900105c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
900105c6:	4d1e      	ldr	r5, [pc, #120]	@ (90010640 <vTaskDelay+0x94>)
900105c8:	682b      	ldr	r3, [r5, #0]
900105ca:	b143      	cbz	r3, 900105de <vTaskDelay+0x32>
900105cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105d0:	f383 8811 	msr	BASEPRI, r3
900105d4:	f3bf 8f6f 	isb	sy
900105d8:	f3bf 8f4f 	dsb	sy
900105dc:	e7fe      	b.n	900105dc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
900105de:	682b      	ldr	r3, [r5, #0]
900105e0:	4604      	mov	r4, r0
900105e2:	3301      	adds	r3, #1
900105e4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900105e6:	4b17      	ldr	r3, [pc, #92]	@ (90010644 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900105e8:	4e17      	ldr	r6, [pc, #92]	@ (90010648 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900105ea:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900105ec:	6830      	ldr	r0, [r6, #0]
900105ee:	3004      	adds	r0, #4
900105f0:	f7fe fa22 	bl	9000ea38 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900105f4:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900105f6:	6833      	ldr	r3, [r6, #0]
900105f8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900105fa:	d315      	bcc.n	90010628 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900105fc:	4b13      	ldr	r3, [pc, #76]	@ (9001064c <vTaskDelay+0xa0>)
900105fe:	6818      	ldr	r0, [r3, #0]
90010600:	6831      	ldr	r1, [r6, #0]
90010602:	3104      	adds	r1, #4
90010604:	f7fe fa00 	bl	9000ea08 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90010608:	682b      	ldr	r3, [r5, #0]
9001060a:	b943      	cbnz	r3, 9001061e <vTaskDelay+0x72>
9001060c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010610:	f383 8811 	msr	BASEPRI, r3
90010614:	f3bf 8f6f 	isb	sy
90010618:	f3bf 8f4f 	dsb	sy
9001061c:	e7fe      	b.n	9001061c <vTaskDelay+0x70>
9001061e:	f7ff fd6b 	bl	900100f8 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90010622:	2800      	cmp	r0, #0
90010624:	d0c4      	beq.n	900105b0 <vTaskDelay+0x4>
	}
90010626:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010628:	4b09      	ldr	r3, [pc, #36]	@ (90010650 <vTaskDelay+0xa4>)
9001062a:	6818      	ldr	r0, [r3, #0]
9001062c:	6831      	ldr	r1, [r6, #0]
9001062e:	3104      	adds	r1, #4
90010630:	f7fe f9ea 	bl	9000ea08 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90010634:	4b07      	ldr	r3, [pc, #28]	@ (90010654 <vTaskDelay+0xa8>)
90010636:	681a      	ldr	r2, [r3, #0]
90010638:	4294      	cmp	r4, r2
9001063a:	d2e5      	bcs.n	90010608 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9001063c:	601c      	str	r4, [r3, #0]
9001063e:	e7e3      	b.n	90010608 <vTaskDelay+0x5c>
90010640:	24021730 	.word	0x24021730
90010644:	24021750 	.word	0x24021750
90010648:	24021c28 	.word	0x24021c28
9001064c:	24021798 	.word	0x24021798
90010650:	2402179c 	.word	0x2402179c
90010654:	24021734 	.word	0x24021734

90010658 <vTaskStartScheduler>:
{
90010658:	b570      	push	{r4, r5, r6, lr}
9001065a:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9001065c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001065e:	4668      	mov	r0, sp
90010660:	aa02      	add	r2, sp, #8
90010662:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90010664:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90010668:	f7fe f86a 	bl	9000e740 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9001066c:	9d00      	ldr	r5, [sp, #0]
9001066e:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
90010672:	b1b8      	cbz	r0, 900106a4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90010674:	b16d      	cbz	r5, 90010692 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90010676:	2260      	movs	r2, #96	@ 0x60
90010678:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9001067a:	9a03      	ldr	r2, [sp, #12]
9001067c:	2a60      	cmp	r2, #96	@ 0x60
9001067e:	d01a      	beq.n	900106b6 <vTaskStartScheduler+0x5e>
90010680:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010684:	f383 8811 	msr	BASEPRI, r3
90010688:	f3bf 8f6f 	isb	sy
9001068c:	f3bf 8f4f 	dsb	sy
90010690:	e7fe      	b.n	90010690 <vTaskStartScheduler+0x38>
90010692:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010696:	f383 8811 	msr	BASEPRI, r3
9001069a:	f3bf 8f6f 	isb	sy
9001069e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900106a2:	e7fe      	b.n	900106a2 <vTaskStartScheduler+0x4a>
900106a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106a8:	f383 8811 	msr	BASEPRI, r3
900106ac:	f3bf 8f6f 	isb	sy
900106b0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
900106b4:	e7fe      	b.n	900106b4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900106b6:	2202      	movs	r2, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900106b8:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900106ba:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900106bc:	4096      	lsls	r6, r2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900106be:	f885 205d 	strb.w	r2, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
900106c2:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900106c4:	4632      	mov	r2, r6
900106c6:	f01a fb69 	bl	9002ad9c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900106ca:	1f33      	subs	r3, r6, #4
900106cc:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900106ce:	1d28      	adds	r0, r5, #4
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900106d0:	4929      	ldr	r1, [pc, #164]	@ (90010778 <vTaskStartScheduler+0x120>)
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900106d2:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900106d4:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
900106d8:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900106da:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900106de:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
900106e2:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
900106e4:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900106e8:	f7fe f97c 	bl	9000e9e4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900106ec:	f105 0018 	add.w	r0, r5, #24
900106f0:	f7fe f978 	bl	9000e9e4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106f4:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106f6:	4622      	mov	r2, r4
900106f8:	4920      	ldr	r1, [pc, #128]	@ (9001077c <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
900106fa:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106fc:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106fe:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90010700:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90010702:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90010704:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010706:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001070a:	f7fe f9e7 	bl	9000eadc <pxPortInitialiseStack>
9001070e:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90010710:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010712:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010714:	f7ff fb76 	bl	9000fe04 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90010718:	f000 fc86 	bl	90011028 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9001071c:	2801      	cmp	r0, #1
9001071e:	d00c      	beq.n	9001073a <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010720:	3001      	adds	r0, #1
90010722:	d001      	beq.n	90010728 <vTaskStartScheduler+0xd0>
}
90010724:	b004      	add	sp, #16
90010726:	bd70      	pop	{r4, r5, r6, pc}
90010728:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001072c:	f383 8811 	msr	BASEPRI, r3
90010730:	f3bf 8f6f 	isb	sy
90010734:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010738:	e7fe      	b.n	90010738 <vTaskStartScheduler+0xe0>
9001073a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001073e:	f383 8811 	msr	BASEPRI, r3
90010742:	f3bf 8f6f 	isb	sy
90010746:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9001074a:	4b0d      	ldr	r3, [pc, #52]	@ (90010780 <vTaskStartScheduler+0x128>)
9001074c:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90010750:	490c      	ldr	r1, [pc, #48]	@ (90010784 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90010752:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010754:	4b0c      	ldr	r3, [pc, #48]	@ (90010788 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90010756:	4a0d      	ldr	r2, [pc, #52]	@ (9001078c <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90010758:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9001075a:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9001075c:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001075e:	b143      	cbz	r3, 90010772 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90010760:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010762:	b10b      	cbz	r3, 90010768 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010764:	2000      	movs	r0, #0
90010766:	4798      	blx	r3
}
90010768:	b004      	add	sp, #16
9001076a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9001076e:	f7fe ba73 	b.w	9000ec58 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90010772:	6813      	ldr	r3, [r2, #0]
90010774:	e7f4      	b.n	90010760 <vTaskStartScheduler+0x108>
90010776:	bf00      	nop
90010778:	454c4449 	.word	0x454c4449
9001077c:	9000ff11 	.word	0x9000ff11
90010780:	24021734 	.word	0x24021734
90010784:	24021748 	.word	0x24021748
90010788:	24021750 	.word	0x24021750
9001078c:	24021c28 	.word	0x24021c28

90010790 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90010790:	4a02      	ldr	r2, [pc, #8]	@ (9001079c <vTaskSuspendAll+0xc>)
90010792:	6813      	ldr	r3, [r2, #0]
90010794:	3301      	adds	r3, #1
90010796:	6013      	str	r3, [r2, #0]
}
90010798:	4770      	bx	lr
9001079a:	bf00      	nop
9001079c:	24021730 	.word	0x24021730

900107a0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
900107a0:	4b06      	ldr	r3, [pc, #24]	@ (900107bc <xTaskResumeAll+0x1c>)
900107a2:	681b      	ldr	r3, [r3, #0]
900107a4:	b943      	cbnz	r3, 900107b8 <xTaskResumeAll+0x18>
900107a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107aa:	f383 8811 	msr	BASEPRI, r3
900107ae:	f3bf 8f6f 	isb	sy
900107b2:	f3bf 8f4f 	dsb	sy
900107b6:	e7fe      	b.n	900107b6 <xTaskResumeAll+0x16>
900107b8:	f7ff bc9e 	b.w	900100f8 <xTaskResumeAll.part.0>
900107bc:	24021730 	.word	0x24021730

900107c0 <xTaskGetTickCount>:
		xTicks = xTickCount;
900107c0:	4b01      	ldr	r3, [pc, #4]	@ (900107c8 <xTaskGetTickCount+0x8>)
900107c2:	6818      	ldr	r0, [r3, #0]
}
900107c4:	4770      	bx	lr
900107c6:	bf00      	nop
900107c8:	24021750 	.word	0x24021750

900107cc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900107cc:	4b05      	ldr	r3, [pc, #20]	@ (900107e4 <xTaskIncrementTick+0x18>)
900107ce:	681b      	ldr	r3, [r3, #0]
900107d0:	b90b      	cbnz	r3, 900107d6 <xTaskIncrementTick+0xa>
900107d2:	f7ff bbeb 	b.w	9000ffac <xTaskIncrementTick.part.0>
		++xPendedTicks;
900107d6:	4a04      	ldr	r2, [pc, #16]	@ (900107e8 <xTaskIncrementTick+0x1c>)
}
900107d8:	2000      	movs	r0, #0
		++xPendedTicks;
900107da:	6813      	ldr	r3, [r2, #0]
900107dc:	3301      	adds	r3, #1
900107de:	6013      	str	r3, [r2, #0]
}
900107e0:	4770      	bx	lr
900107e2:	bf00      	nop
900107e4:	24021730 	.word	0x24021730
900107e8:	24021744 	.word	0x24021744

900107ec <vTaskSetApplicationTaskTag>:
	{
900107ec:	b538      	push	{r3, r4, r5, lr}
900107ee:	460d      	mov	r5, r1
		if( xTask == NULL )
900107f0:	b138      	cbz	r0, 90010802 <vTaskSetApplicationTaskTag+0x16>
900107f2:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900107f4:	f7fe f99e 	bl	9000eb34 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900107f8:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900107fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900107fe:	f7fe b9bb 	b.w	9000eb78 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90010802:	4b04      	ldr	r3, [pc, #16]	@ (90010814 <vTaskSetApplicationTaskTag+0x28>)
90010804:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90010806:	f7fe f995 	bl	9000eb34 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9001080a:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9001080c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90010810:	f7fe b9b2 	b.w	9000eb78 <vPortExitCritical>
90010814:	24021c28 	.word	0x24021c28

90010818 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90010818:	4b27      	ldr	r3, [pc, #156]	@ (900108b8 <vTaskSwitchContext+0xa0>)
9001081a:	681b      	ldr	r3, [r3, #0]
9001081c:	b11b      	cbz	r3, 90010826 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9001081e:	4b27      	ldr	r3, [pc, #156]	@ (900108bc <vTaskSwitchContext+0xa4>)
90010820:	2201      	movs	r2, #1
90010822:	601a      	str	r2, [r3, #0]
90010824:	4770      	bx	lr
{
90010826:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90010828:	4a24      	ldr	r2, [pc, #144]	@ (900108bc <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9001082a:	4c25      	ldr	r4, [pc, #148]	@ (900108c0 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9001082c:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001082e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010830:	2b00      	cmp	r3, #0
90010832:	d036      	beq.n	900108a2 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90010834:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010836:	b10b      	cbz	r3, 9001083c <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010838:	2001      	movs	r0, #1
9001083a:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001083c:	4d21      	ldr	r5, [pc, #132]	@ (900108c4 <vTaskSwitchContext+0xac>)
9001083e:	4922      	ldr	r1, [pc, #136]	@ (900108c8 <vTaskSwitchContext+0xb0>)
90010840:	682b      	ldr	r3, [r5, #0]
90010842:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010846:	0098      	lsls	r0, r3, #2
90010848:	0092      	lsls	r2, r2, #2
9001084a:	588a      	ldr	r2, [r1, r2]
9001084c:	b942      	cbnz	r2, 90010860 <vTaskSwitchContext+0x48>
9001084e:	b1fb      	cbz	r3, 90010890 <vTaskSwitchContext+0x78>
90010850:	3b01      	subs	r3, #1
90010852:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010856:	0098      	lsls	r0, r3, #2
90010858:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001085c:	2a00      	cmp	r2, #0
9001085e:	d0f6      	beq.n	9001084e <vTaskSwitchContext+0x36>
90010860:	4418      	add	r0, r3
90010862:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010866:	f8dc 1004 	ldr.w	r1, [ip, #4]
9001086a:	4662      	mov	r2, ip
9001086c:	6849      	ldr	r1, [r1, #4]
9001086e:	3208      	adds	r2, #8
90010870:	4291      	cmp	r1, r2
90010872:	f8cc 1004 	str.w	r1, [ip, #4]
90010876:	d01b      	beq.n	900108b0 <vTaskSwitchContext+0x98>
90010878:	68ca      	ldr	r2, [r1, #12]
9001087a:	6022      	str	r2, [r4, #0]
9001087c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001087e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010880:	b1a3      	cbz	r3, 900108ac <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90010882:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010884:	b11b      	cbz	r3, 9001088e <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010886:	2000      	movs	r0, #0
}
90010888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9001088c:	4718      	bx	r3
}
9001088e:	bd70      	pop	{r4, r5, r6, pc}
90010890:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010894:	f383 8811 	msr	BASEPRI, r3
90010898:	f3bf 8f6f 	isb	sy
9001089c:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900108a0:	e7fe      	b.n	900108a0 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
900108a2:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
900108a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900108a6:	2b00      	cmp	r3, #0
900108a8:	d1c6      	bne.n	90010838 <vTaskSwitchContext+0x20>
900108aa:	e7c7      	b.n	9001083c <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
900108ac:	6823      	ldr	r3, [r4, #0]
900108ae:	e7e8      	b.n	90010882 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900108b0:	6849      	ldr	r1, [r1, #4]
900108b2:	f8cc 1004 	str.w	r1, [ip, #4]
900108b6:	e7df      	b.n	90010878 <vTaskSwitchContext+0x60>
900108b8:	24021730 	.word	0x24021730
900108bc:	24021740 	.word	0x24021740
900108c0:	24021c28 	.word	0x24021c28
900108c4:	2402174c 	.word	0x2402174c
900108c8:	240217c8 	.word	0x240217c8

900108cc <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
900108cc:	b1f0      	cbz	r0, 9001090c <vTaskPlaceOnEventList+0x40>
{
900108ce:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900108d0:	4d1a      	ldr	r5, [pc, #104]	@ (9001093c <vTaskPlaceOnEventList+0x70>)
900108d2:	460c      	mov	r4, r1
900108d4:	6829      	ldr	r1, [r5, #0]
900108d6:	3118      	adds	r1, #24
900108d8:	f7fe f896 	bl	9000ea08 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
900108dc:	4b18      	ldr	r3, [pc, #96]	@ (90010940 <vTaskPlaceOnEventList+0x74>)
900108de:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900108e0:	6828      	ldr	r0, [r5, #0]
900108e2:	3004      	adds	r0, #4
900108e4:	f7fe f8a8 	bl	9000ea38 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900108e8:	1c63      	adds	r3, r4, #1
900108ea:	d020      	beq.n	9001092e <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900108ec:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900108ee:	682b      	ldr	r3, [r5, #0]
900108f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900108f2:	d214      	bcs.n	9001091e <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108f4:	4b13      	ldr	r3, [pc, #76]	@ (90010944 <vTaskPlaceOnEventList+0x78>)
900108f6:	6818      	ldr	r0, [r3, #0]
900108f8:	6829      	ldr	r1, [r5, #0]
900108fa:	3104      	adds	r1, #4
900108fc:	f7fe f884 	bl	9000ea08 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010900:	4b11      	ldr	r3, [pc, #68]	@ (90010948 <vTaskPlaceOnEventList+0x7c>)
90010902:	681a      	ldr	r2, [r3, #0]
90010904:	4294      	cmp	r4, r2
90010906:	d200      	bcs.n	9001090a <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90010908:	601c      	str	r4, [r3, #0]
}
9001090a:	bd70      	pop	{r4, r5, r6, pc}
9001090c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010910:	f383 8811 	msr	BASEPRI, r3
90010914:	f3bf 8f6f 	isb	sy
90010918:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9001091c:	e7fe      	b.n	9001091c <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001091e:	4b0b      	ldr	r3, [pc, #44]	@ (9001094c <vTaskPlaceOnEventList+0x80>)
90010920:	6818      	ldr	r0, [r3, #0]
90010922:	6829      	ldr	r1, [r5, #0]
}
90010924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010928:	3104      	adds	r1, #4
9001092a:	f7fe b86d 	b.w	9000ea08 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001092e:	6829      	ldr	r1, [r5, #0]
90010930:	4807      	ldr	r0, [pc, #28]	@ (90010950 <vTaskPlaceOnEventList+0x84>)
90010932:	3104      	adds	r1, #4
}
90010934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010938:	f7fe b858 	b.w	9000e9ec <vListInsertEnd>
9001093c:	24021c28 	.word	0x24021c28
90010940:	24021750 	.word	0x24021750
90010944:	2402179c 	.word	0x2402179c
90010948:	24021734 	.word	0x24021734
9001094c:	24021798 	.word	0x24021798
90010950:	24021758 	.word	0x24021758

90010954 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90010954:	b350      	cbz	r0, 900109ac <vTaskPlaceOnEventListRestricted+0x58>
	{
90010956:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010958:	4e1d      	ldr	r6, [pc, #116]	@ (900109d0 <vTaskPlaceOnEventListRestricted+0x7c>)
9001095a:	460c      	mov	r4, r1
9001095c:	4615      	mov	r5, r2
9001095e:	6831      	ldr	r1, [r6, #0]
90010960:	3118      	adds	r1, #24
90010962:	f7fe f843 	bl	9000e9ec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90010966:	4b1b      	ldr	r3, [pc, #108]	@ (900109d4 <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
90010968:	b15d      	cbz	r5, 90010982 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9001096a:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001096c:	6830      	ldr	r0, [r6, #0]
9001096e:	3004      	adds	r0, #4
90010970:	f7fe f862 	bl	9000ea38 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010974:	6831      	ldr	r1, [r6, #0]
90010976:	4818      	ldr	r0, [pc, #96]	@ (900109d8 <vTaskPlaceOnEventListRestricted+0x84>)
90010978:	3104      	adds	r1, #4
	}
9001097a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001097e:	f7fe b835 	b.w	9000e9ec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90010982:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010984:	6830      	ldr	r0, [r6, #0]
90010986:	3004      	adds	r0, #4
90010988:	f7fe f856 	bl	9000ea38 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001098c:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001098e:	6833      	ldr	r3, [r6, #0]
90010990:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010992:	d214      	bcs.n	900109be <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010994:	4b11      	ldr	r3, [pc, #68]	@ (900109dc <vTaskPlaceOnEventListRestricted+0x88>)
90010996:	6818      	ldr	r0, [r3, #0]
90010998:	6831      	ldr	r1, [r6, #0]
9001099a:	3104      	adds	r1, #4
9001099c:	f7fe f834 	bl	9000ea08 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900109a0:	4b0f      	ldr	r3, [pc, #60]	@ (900109e0 <vTaskPlaceOnEventListRestricted+0x8c>)
900109a2:	681a      	ldr	r2, [r3, #0]
900109a4:	4294      	cmp	r4, r2
900109a6:	d200      	bcs.n	900109aa <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
900109a8:	601c      	str	r4, [r3, #0]
	}
900109aa:	bd70      	pop	{r4, r5, r6, pc}
900109ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
900109b0:	f383 8811 	msr	BASEPRI, r3
900109b4:	f3bf 8f6f 	isb	sy
900109b8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
900109bc:	e7fe      	b.n	900109bc <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900109be:	4b09      	ldr	r3, [pc, #36]	@ (900109e4 <vTaskPlaceOnEventListRestricted+0x90>)
900109c0:	6818      	ldr	r0, [r3, #0]
900109c2:	6831      	ldr	r1, [r6, #0]
	}
900109c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900109c8:	3104      	adds	r1, #4
900109ca:	f7fe b81d 	b.w	9000ea08 <vListInsert>
900109ce:	bf00      	nop
900109d0:	24021c28 	.word	0x24021c28
900109d4:	24021750 	.word	0x24021750
900109d8:	24021758 	.word	0x24021758
900109dc:	2402179c 	.word	0x2402179c
900109e0:	24021734 	.word	0x24021734
900109e4:	24021798 	.word	0x24021798

900109e8 <xTaskRemoveFromEventList>:
{
900109e8:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900109ea:	68c3      	ldr	r3, [r0, #12]
900109ec:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
900109ee:	b34c      	cbz	r4, 90010a44 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900109f0:	f104 0518 	add.w	r5, r4, #24
900109f4:	4628      	mov	r0, r5
900109f6:	f7fe f81f 	bl	9000ea38 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900109fa:	4b18      	ldr	r3, [pc, #96]	@ (90010a5c <xTaskRemoveFromEventList+0x74>)
900109fc:	681b      	ldr	r3, [r3, #0]
900109fe:	b173      	cbz	r3, 90010a1e <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90010a00:	4629      	mov	r1, r5
90010a02:	4817      	ldr	r0, [pc, #92]	@ (90010a60 <xTaskRemoveFromEventList+0x78>)
90010a04:	f7fd fff2 	bl	9000e9ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90010a08:	4b16      	ldr	r3, [pc, #88]	@ (90010a64 <xTaskRemoveFromEventList+0x7c>)
90010a0a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90010a0c:	681b      	ldr	r3, [r3, #0]
90010a0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010a10:	429a      	cmp	r2, r3
90010a12:	d920      	bls.n	90010a56 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
90010a14:	2301      	movs	r3, #1
90010a16:	4a14      	ldr	r2, [pc, #80]	@ (90010a68 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90010a18:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90010a1a:	6013      	str	r3, [r2, #0]
}
90010a1c:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90010a1e:	1d25      	adds	r5, r4, #4
90010a20:	4628      	mov	r0, r5
90010a22:	f7fe f809 	bl	9000ea38 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90010a26:	4b11      	ldr	r3, [pc, #68]	@ (90010a6c <xTaskRemoveFromEventList+0x84>)
90010a28:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010a2a:	681a      	ldr	r2, [r3, #0]
90010a2c:	4290      	cmp	r0, r2
90010a2e:	d900      	bls.n	90010a32 <xTaskRemoveFromEventList+0x4a>
90010a30:	6018      	str	r0, [r3, #0]
90010a32:	4b0f      	ldr	r3, [pc, #60]	@ (90010a70 <xTaskRemoveFromEventList+0x88>)
90010a34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010a38:	4629      	mov	r1, r5
90010a3a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010a3e:	f7fd ffd5 	bl	9000e9ec <vListInsertEnd>
90010a42:	e7e1      	b.n	90010a08 <xTaskRemoveFromEventList+0x20>
90010a44:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a48:	f383 8811 	msr	BASEPRI, r3
90010a4c:	f3bf 8f6f 	isb	sy
90010a50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90010a54:	e7fe      	b.n	90010a54 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
90010a56:	2000      	movs	r0, #0
}
90010a58:	bd38      	pop	{r3, r4, r5, pc}
90010a5a:	bf00      	nop
90010a5c:	24021730 	.word	0x24021730
90010a60:	24021784 	.word	0x24021784
90010a64:	24021c28 	.word	0x24021c28
90010a68:	24021740 	.word	0x24021740
90010a6c:	2402174c 	.word	0x2402174c
90010a70:	240217c8 	.word	0x240217c8

90010a74 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010a74:	4a03      	ldr	r2, [pc, #12]	@ (90010a84 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90010a76:	4b04      	ldr	r3, [pc, #16]	@ (90010a88 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010a78:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010a7a:	681b      	ldr	r3, [r3, #0]
90010a7c:	e9c0 2300 	strd	r2, r3, [r0]
}
90010a80:	4770      	bx	lr
90010a82:	bf00      	nop
90010a84:	2402173c 	.word	0x2402173c
90010a88:	24021750 	.word	0x24021750

90010a8c <xTaskCheckForTimeOut>:
{
90010a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90010a8e:	b308      	cbz	r0, 90010ad4 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90010a90:	460d      	mov	r5, r1
90010a92:	b1b1      	cbz	r1, 90010ac2 <xTaskCheckForTimeOut+0x36>
90010a94:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90010a96:	f7fe f84d 	bl	9000eb34 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90010a9a:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90010a9c:	4a1a      	ldr	r2, [pc, #104]	@ (90010b08 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90010a9e:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010aa0:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90010aa2:	d02c      	beq.n	90010afe <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010aa4:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90010b0c <xTaskCheckForTimeOut+0x80>
90010aa8:	6826      	ldr	r6, [r4, #0]
90010aaa:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010aae:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010ab0:	42be      	cmp	r6, r7
90010ab2:	d018      	beq.n	90010ae6 <xTaskCheckForTimeOut+0x5a>
90010ab4:	4288      	cmp	r0, r1
90010ab6:	d816      	bhi.n	90010ae6 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90010ab8:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90010aba:	f7fe f85d 	bl	9000eb78 <vPortExitCritical>
}
90010abe:	4620      	mov	r0, r4
90010ac0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90010ac2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ac6:	f383 8811 	msr	BASEPRI, r3
90010aca:	f3bf 8f6f 	isb	sy
90010ace:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90010ad2:	e7fe      	b.n	90010ad2 <xTaskCheckForTimeOut+0x46>
90010ad4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ad8:	f383 8811 	msr	BASEPRI, r3
90010adc:	f3bf 8f6f 	isb	sy
90010ae0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90010ae4:	e7fe      	b.n	90010ae4 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010ae6:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90010aea:	4573      	cmp	r3, lr
90010aec:	d909      	bls.n	90010b02 <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90010aee:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010af0:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010af4:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90010af6:	4403      	add	r3, r0
90010af8:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010afa:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90010afe:	2400      	movs	r4, #0
90010b00:	e7db      	b.n	90010aba <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
90010b02:	2300      	movs	r3, #0
90010b04:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90010b06:	e7d7      	b.n	90010ab8 <xTaskCheckForTimeOut+0x2c>
90010b08:	24021750 	.word	0x24021750
90010b0c:	2402173c 	.word	0x2402173c

90010b10 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90010b10:	4b01      	ldr	r3, [pc, #4]	@ (90010b18 <vTaskMissedYield+0x8>)
90010b12:	2201      	movs	r2, #1
90010b14:	601a      	str	r2, [r3, #0]
}
90010b16:	4770      	bx	lr
90010b18:	24021740 	.word	0x24021740

90010b1c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90010b1c:	4b05      	ldr	r3, [pc, #20]	@ (90010b34 <xTaskGetSchedulerState+0x18>)
90010b1e:	681b      	ldr	r3, [r3, #0]
90010b20:	b133      	cbz	r3, 90010b30 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010b22:	4b05      	ldr	r3, [pc, #20]	@ (90010b38 <xTaskGetSchedulerState+0x1c>)
90010b24:	6818      	ldr	r0, [r3, #0]
90010b26:	fab0 f080 	clz	r0, r0
90010b2a:	0940      	lsrs	r0, r0, #5
90010b2c:	0040      	lsls	r0, r0, #1
90010b2e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90010b30:	2001      	movs	r0, #1
	}
90010b32:	4770      	bx	lr
90010b34:	24021748 	.word	0x24021748
90010b38:	24021730 	.word	0x24021730

90010b3c <xTaskPriorityInherit>:
	{
90010b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90010b3e:	4604      	mov	r4, r0
90010b40:	b1c8      	cbz	r0, 90010b76 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90010b42:	4d1b      	ldr	r5, [pc, #108]	@ (90010bb0 <xTaskPriorityInherit+0x74>)
90010b44:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90010b46:	682a      	ldr	r2, [r5, #0]
90010b48:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010b4a:	4293      	cmp	r3, r2
90010b4c:	d214      	bcs.n	90010b78 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010b4e:	6982      	ldr	r2, [r0, #24]
90010b50:	2a00      	cmp	r2, #0
90010b52:	db04      	blt.n	90010b5e <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010b54:	682a      	ldr	r2, [r5, #0]
90010b56:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010b58:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90010b5c:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90010b5e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010b62:	4e14      	ldr	r6, [pc, #80]	@ (90010bb4 <xTaskPriorityInherit+0x78>)
90010b64:	6962      	ldr	r2, [r4, #20]
90010b66:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010b6a:	429a      	cmp	r2, r3
90010b6c:	d00c      	beq.n	90010b88 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b6e:	682b      	ldr	r3, [r5, #0]
90010b70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b72:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
90010b74:	2001      	movs	r0, #1
	}
90010b76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010b78:	682b      	ldr	r3, [r5, #0]
90010b7a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90010b7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b7e:	4298      	cmp	r0, r3
90010b80:	bf2c      	ite	cs
90010b82:	2000      	movcs	r0, #0
90010b84:	2001      	movcc	r0, #1
	}
90010b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010b88:	1d27      	adds	r7, r4, #4
90010b8a:	4638      	mov	r0, r7
90010b8c:	f7fd ff54 	bl	9000ea38 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b90:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b92:	4b09      	ldr	r3, [pc, #36]	@ (90010bb8 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b94:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b96:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b98:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b9a:	4290      	cmp	r0, r2
90010b9c:	d900      	bls.n	90010ba0 <xTaskPriorityInherit+0x64>
90010b9e:	6018      	str	r0, [r3, #0]
90010ba0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010ba4:	4639      	mov	r1, r7
90010ba6:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90010baa:	f7fd ff1f 	bl	9000e9ec <vListInsertEnd>
90010bae:	e7e1      	b.n	90010b74 <xTaskPriorityInherit+0x38>
90010bb0:	24021c28 	.word	0x24021c28
90010bb4:	240217c8 	.word	0x240217c8
90010bb8:	2402174c 	.word	0x2402174c

90010bbc <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90010bbc:	b308      	cbz	r0, 90010c02 <xTaskPriorityDisinherit+0x46>
	{
90010bbe:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90010bc0:	4b1d      	ldr	r3, [pc, #116]	@ (90010c38 <xTaskPriorityDisinherit+0x7c>)
90010bc2:	681c      	ldr	r4, [r3, #0]
90010bc4:	4284      	cmp	r4, r0
90010bc6:	d008      	beq.n	90010bda <xTaskPriorityDisinherit+0x1e>
90010bc8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010bcc:	f383 8811 	msr	BASEPRI, r3
90010bd0:	f3bf 8f6f 	isb	sy
90010bd4:	f3bf 8f4f 	dsb	sy
90010bd8:	e7fe      	b.n	90010bd8 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
90010bda:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90010bdc:	b143      	cbz	r3, 90010bf0 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010bde:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90010be0:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010be2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90010be4:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90010be6:	4291      	cmp	r1, r2
90010be8:	d000      	beq.n	90010bec <xTaskPriorityDisinherit+0x30>
90010bea:	b163      	cbz	r3, 90010c06 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90010bec:	2000      	movs	r0, #0
	}
90010bee:	bd38      	pop	{r3, r4, r5, pc}
90010bf0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010bf4:	f383 8811 	msr	BASEPRI, r3
90010bf8:	f3bf 8f6f 	isb	sy
90010bfc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010c00:	e7fe      	b.n	90010c00 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90010c02:	2000      	movs	r0, #0
	}
90010c04:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010c06:	1d25      	adds	r5, r4, #4
90010c08:	4628      	mov	r0, r5
90010c0a:	f7fd ff15 	bl	9000ea38 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010c0e:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90010c10:	4b0a      	ldr	r3, [pc, #40]	@ (90010c3c <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c12:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010c16:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c18:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90010c1a:	681a      	ldr	r2, [r3, #0]
90010c1c:	4290      	cmp	r0, r2
90010c1e:	d900      	bls.n	90010c22 <xTaskPriorityDisinherit+0x66>
90010c20:	6018      	str	r0, [r3, #0]
90010c22:	4b07      	ldr	r3, [pc, #28]	@ (90010c40 <xTaskPriorityDisinherit+0x84>)
90010c24:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010c28:	4629      	mov	r1, r5
90010c2a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010c2e:	f7fd fedd 	bl	9000e9ec <vListInsertEnd>
					xReturn = pdTRUE;
90010c32:	2001      	movs	r0, #1
	}
90010c34:	bd38      	pop	{r3, r4, r5, pc}
90010c36:	bf00      	nop
90010c38:	24021c28 	.word	0x24021c28
90010c3c:	2402174c 	.word	0x2402174c
90010c40:	240217c8 	.word	0x240217c8

90010c44 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010c44:	2800      	cmp	r0, #0
90010c46:	d03c      	beq.n	90010cc2 <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90010c48:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90010c4a:	b570      	push	{r4, r5, r6, lr}
90010c4c:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90010c4e:	b14b      	cbz	r3, 90010c64 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010c50:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90010c52:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010c54:	4281      	cmp	r1, r0
90010c56:	bf38      	it	cc
90010c58:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90010c5a:	2b01      	cmp	r3, #1
90010c5c:	d101      	bne.n	90010c62 <vTaskPriorityDisinheritAfterTimeout+0x1e>
90010c5e:	428a      	cmp	r2, r1
90010c60:	d109      	bne.n	90010c76 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90010c62:	bd70      	pop	{r4, r5, r6, pc}
90010c64:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c68:	f383 8811 	msr	BASEPRI, r3
90010c6c:	f3bf 8f6f 	isb	sy
90010c70:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010c74:	e7fe      	b.n	90010c74 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90010c76:	4b18      	ldr	r3, [pc, #96]	@ (90010cd8 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90010c78:	681b      	ldr	r3, [r3, #0]
90010c7a:	42a3      	cmp	r3, r4
90010c7c:	d022      	beq.n	90010cc4 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010c7e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010c80:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010c82:	2b00      	cmp	r3, #0
90010c84:	db02      	blt.n	90010c8c <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c86:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90010c8a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90010c8c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010c90:	4d12      	ldr	r5, [pc, #72]	@ (90010cdc <vTaskPriorityDisinheritAfterTimeout+0x98>)
90010c92:	6961      	ldr	r1, [r4, #20]
90010c94:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010c98:	4299      	cmp	r1, r3
90010c9a:	d1e2      	bne.n	90010c62 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010c9c:	1d26      	adds	r6, r4, #4
90010c9e:	4630      	mov	r0, r6
90010ca0:	f7fd feca 	bl	9000ea38 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010ca4:	4b0e      	ldr	r3, [pc, #56]	@ (90010ce0 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90010ca6:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010ca8:	681a      	ldr	r2, [r3, #0]
90010caa:	4290      	cmp	r0, r2
90010cac:	d900      	bls.n	90010cb0 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90010cae:	6018      	str	r0, [r3, #0]
90010cb0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010cb4:	4631      	mov	r1, r6
90010cb6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90010cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90010cbe:	f7fd be95 	b.w	9000e9ec <vListInsertEnd>
90010cc2:	4770      	bx	lr
90010cc4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010cc8:	f383 8811 	msr	BASEPRI, r3
90010ccc:	f3bf 8f6f 	isb	sy
90010cd0:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90010cd4:	e7fe      	b.n	90010cd4 <vTaskPriorityDisinheritAfterTimeout+0x90>
90010cd6:	bf00      	nop
90010cd8:	24021c28 	.word	0x24021c28
90010cdc:	240217c8 	.word	0x240217c8
90010ce0:	2402174c 	.word	0x2402174c

90010ce4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90010ce4:	4b04      	ldr	r3, [pc, #16]	@ (90010cf8 <pvTaskIncrementMutexHeldCount+0x14>)
90010ce6:	681a      	ldr	r2, [r3, #0]
90010ce8:	b11a      	cbz	r2, 90010cf2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90010cea:	6819      	ldr	r1, [r3, #0]
90010cec:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90010cee:	3201      	adds	r2, #1
90010cf0:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90010cf2:	6818      	ldr	r0, [r3, #0]
	}
90010cf4:	4770      	bx	lr
90010cf6:	bf00      	nop
90010cf8:	24021c28 	.word	0x24021c28

90010cfc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90010cfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010d00:	4e21      	ldr	r6, [pc, #132]	@ (90010d88 <prvSwitchTimerLists+0x8c>)
90010d02:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010d04:	e00d      	b.n	90010d22 <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010d06:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d08:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010d0a:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010d0c:	1d25      	adds	r5, r4, #4
90010d0e:	4628      	mov	r0, r5
90010d10:	f7fd fe92 	bl	9000ea38 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010d14:	6a23      	ldr	r3, [r4, #32]
90010d16:	4620      	mov	r0, r4
90010d18:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010d1a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90010d1e:	075b      	lsls	r3, r3, #29
90010d20:	d40a      	bmi.n	90010d38 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010d22:	6833      	ldr	r3, [r6, #0]
90010d24:	681a      	ldr	r2, [r3, #0]
90010d26:	2a00      	cmp	r2, #0
90010d28:	d1ed      	bne.n	90010d06 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90010d2a:	4a18      	ldr	r2, [pc, #96]	@ (90010d8c <prvSwitchTimerLists+0x90>)
90010d2c:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90010d2e:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90010d30:	6031      	str	r1, [r6, #0]
}
90010d32:	b004      	add	sp, #16
90010d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010d38:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d3a:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90010d3c:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90010d90 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010d40:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90010d42:	429f      	cmp	r7, r3
90010d44:	d205      	bcs.n	90010d52 <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d46:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010d48:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010d4a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d4c:	f7fd fe5c 	bl	9000ea08 <vListInsert>
90010d50:	e7e7      	b.n	90010d22 <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90010d52:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90010d56:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90010d58:	b16b      	cbz	r3, 90010d76 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010d5a:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90010d5c:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010d60:	f7ff fedc 	bl	90010b1c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010d64:	462b      	mov	r3, r5
90010d66:	462a      	mov	r2, r5
90010d68:	4669      	mov	r1, sp
90010d6a:	f8d8 0000 	ldr.w	r0, [r8]
90010d6e:	f7fe f9cf 	bl	9000f110 <xQueueGenericSend>
				configASSERT( xResult );
90010d72:	2800      	cmp	r0, #0
90010d74:	d1d5      	bne.n	90010d22 <prvSwitchTimerLists+0x26>
90010d76:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d7a:	f383 8811 	msr	BASEPRI, r3
90010d7e:	f3bf 8f6f 	isb	sy
90010d82:	f3bf 8f4f 	dsb	sy
90010d86:	e7fe      	b.n	90010d86 <prvSwitchTimerLists+0x8a>
90010d88:	24021d2c 	.word	0x24021d2c
90010d8c:	24021d28 	.word	0x24021d28
90010d90:	24021d24 	.word	0x24021d24

90010d94 <prvTimerTask>:
{
90010d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010d98:	4e9f      	ldr	r6, [pc, #636]	@ (90011018 <prvTimerTask+0x284>)
90010d9a:	b089      	sub	sp, #36	@ 0x24
90010d9c:	4d9f      	ldr	r5, [pc, #636]	@ (9001101c <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010d9e:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
90010da2:	4c9f      	ldr	r4, [pc, #636]	@ (90011020 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90010da4:	6833      	ldr	r3, [r6, #0]
90010da6:	681f      	ldr	r7, [r3, #0]
90010da8:	2f00      	cmp	r7, #0
90010daa:	f000 80b2 	beq.w	90010f12 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010dae:	68db      	ldr	r3, [r3, #12]
90010db0:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
90010db2:	f7ff fced 	bl	90010790 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010db6:	f7ff fd03 	bl	900107c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010dba:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010dbc:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010dbe:	4298      	cmp	r0, r3
90010dc0:	f0c0 80af 	bcc.w	90010f22 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010dc4:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90010dc6:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010dc8:	f200 80d0 	bhi.w	90010f6c <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90010dcc:	f7ff fce8 	bl	900107a0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010dd0:	6833      	ldr	r3, [r6, #0]
90010dd2:	68db      	ldr	r3, [r3, #12]
90010dd4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010dd8:	f10b 0804 	add.w	r8, fp, #4
90010ddc:	4640      	mov	r0, r8
90010dde:	f7fd fe2b 	bl	9000ea38 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010de2:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
90010de6:	0758      	lsls	r0, r3, #29
90010de8:	f100 80d0 	bmi.w	90010f8c <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010dec:	f023 0301 	bic.w	r3, r3, #1
90010df0:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010df4:	f8db 3020 	ldr.w	r3, [fp, #32]
90010df8:	4658      	mov	r0, fp
90010dfa:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90010dfc:	2200      	movs	r2, #0
90010dfe:	4669      	mov	r1, sp
90010e00:	6820      	ldr	r0, [r4, #0]
90010e02:	f7fe fbc3 	bl	9000f58c <xQueueReceive>
90010e06:	2800      	cmp	r0, #0
90010e08:	d0cc      	beq.n	90010da4 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010e0a:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010e0c:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010e0e:	2b00      	cmp	r3, #0
90010e10:	db77      	blt.n	90010f02 <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90010e12:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90010e14:	697b      	ldr	r3, [r7, #20]
90010e16:	b113      	cbz	r3, 90010e1e <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010e18:	1d38      	adds	r0, r7, #4
90010e1a:	f7fd fe0d 	bl	9000ea38 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90010e1e:	f7ff fccf 	bl	900107c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010e22:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010e24:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
90010e26:	4298      	cmp	r0, r3
90010e28:	f0c0 8082 	bcc.w	90010f30 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90010e2c:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90010e2e:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
90010e32:	2b09      	cmp	r3, #9
90010e34:	d8e2      	bhi.n	90010dfc <prvTimerTask+0x68>
90010e36:	e8df f003 	tbb	[pc, r3]
90010e3a:	0505      	.short	0x0505
90010e3c:	5b3e5405 	.word	0x5b3e5405
90010e40:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e44:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010e48:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e4a:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010e4e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e50:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010e54:	69ba      	ldr	r2, [r7, #24]
90010e56:	1899      	adds	r1, r3, r2
90010e58:	bf2c      	ite	cs
90010e5a:	2001      	movcs	r0, #1
90010e5c:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90010e5e:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010e60:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010e62:	f200 8085 	bhi.w	90010f70 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010e66:	ebab 0303 	sub.w	r3, fp, r3
90010e6a:	429a      	cmp	r2, r3
90010e6c:	f200 80be 	bhi.w	90010fec <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010e70:	6a3b      	ldr	r3, [r7, #32]
90010e72:	4638      	mov	r0, r7
90010e74:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010e76:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010e7a:	0759      	lsls	r1, r3, #29
90010e7c:	d5be      	bpl.n	90010dfc <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010e7e:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010e80:	9b01      	ldr	r3, [sp, #4]
90010e82:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90010e84:	b171      	cbz	r1, 90010ea4 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010e86:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010e88:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010e8c:	2700      	movs	r7, #0
90010e8e:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010e90:	f7ff fe44 	bl	90010b1c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010e94:	463b      	mov	r3, r7
90010e96:	463a      	mov	r2, r7
90010e98:	a904      	add	r1, sp, #16
90010e9a:	6820      	ldr	r0, [r4, #0]
90010e9c:	f7fe f938 	bl	9000f110 <xQueueGenericSend>
							configASSERT( xResult );
90010ea0:	2800      	cmp	r0, #0
90010ea2:	d1ab      	bne.n	90010dfc <prvTimerTask+0x68>
90010ea4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ea8:	f383 8811 	msr	BASEPRI, r3
90010eac:	f3bf 8f6f 	isb	sy
90010eb0:	f3bf 8f4f 	dsb	sy
90010eb4:	e7fe      	b.n	90010eb4 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010eb6:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010eba:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010ebc:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010ec0:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010ec2:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010ec6:	2b00      	cmp	r3, #0
90010ec8:	f000 809c 	beq.w	90011004 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90010ecc:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ece:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010ed0:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90010ed2:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010ed4:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010ed6:	d855      	bhi.n	90010f84 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ed8:	4b52      	ldr	r3, [pc, #328]	@ (90011024 <prvTimerTask+0x290>)
90010eda:	6818      	ldr	r0, [r3, #0]
90010edc:	f7fd fd94 	bl	9000ea08 <vListInsert>
90010ee0:	e78c      	b.n	90010dfc <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010ee2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010ee6:	f023 0301 	bic.w	r3, r3, #1
90010eea:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
90010eee:	e785      	b.n	90010dfc <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90010ef0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010ef4:	079a      	lsls	r2, r3, #30
90010ef6:	d557      	bpl.n	90010fa8 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010ef8:	f023 0301 	bic.w	r3, r3, #1
90010efc:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
90010f00:	e77c      	b.n	90010dfc <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010f02:	9b01      	ldr	r3, [sp, #4]
90010f04:	9903      	ldr	r1, [sp, #12]
90010f06:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010f08:	9b00      	ldr	r3, [sp, #0]
90010f0a:	2b00      	cmp	r3, #0
90010f0c:	f6ff af76 	blt.w	90010dfc <prvTimerTask+0x68>
90010f10:	e77f      	b.n	90010e12 <prvTimerTask+0x7e>
	vTaskSuspendAll();
90010f12:	f7ff fc3d 	bl	90010790 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010f16:	f7ff fc53 	bl	900107c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010f1a:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010f1c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010f1e:	4283      	cmp	r3, r0
90010f20:	d909      	bls.n	90010f36 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90010f22:	f7ff feeb 	bl	90010cfc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90010f26:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010f2a:	f7ff fc39 	bl	900107a0 <xTaskResumeAll>
90010f2e:	e765      	b.n	90010dfc <prvTimerTask+0x68>
		prvSwitchTimerLists();
90010f30:	f7ff fee4 	bl	90010cfc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90010f34:	e77a      	b.n	90010e2c <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010f36:	4b3b      	ldr	r3, [pc, #236]	@ (90011024 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010f38:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010f3c:	681b      	ldr	r3, [r3, #0]
90010f3e:	681a      	ldr	r2, [r3, #0]
90010f40:	fab2 f282 	clz	r2, r2
90010f44:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010f46:	eba7 010a 	sub.w	r1, r7, sl
90010f4a:	6820      	ldr	r0, [r4, #0]
90010f4c:	f7fe fef6 	bl	9000fd3c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010f50:	f7ff fc26 	bl	900107a0 <xTaskResumeAll>
90010f54:	2800      	cmp	r0, #0
90010f56:	f47f af51 	bne.w	90010dfc <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010f5a:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
90010f5e:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90010f62:	f3bf 8f4f 	dsb	sy
90010f66:	f3bf 8f6f 	isb	sy
90010f6a:	e747      	b.n	90010dfc <prvTimerTask+0x68>
90010f6c:	2200      	movs	r2, #0
90010f6e:	e7ea      	b.n	90010f46 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010f70:	455b      	cmp	r3, fp
90010f72:	d902      	bls.n	90010f7a <prvTimerTask+0x1e6>
90010f74:	2800      	cmp	r0, #0
90010f76:	f43f af7b 	beq.w	90010e70 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010f7a:	1d39      	adds	r1, r7, #4
90010f7c:	6830      	ldr	r0, [r6, #0]
90010f7e:	f7fd fd43 	bl	9000ea08 <vListInsert>
	return xProcessTimerNow;
90010f82:	e73b      	b.n	90010dfc <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010f84:	6830      	ldr	r0, [r6, #0]
90010f86:	f7fd fd3f 	bl	9000ea08 <vListInsert>
90010f8a:	e737      	b.n	90010dfc <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010f8c:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010f90:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010f94:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90010f96:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010f98:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010f9c:	d208      	bcs.n	90010fb0 <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010f9e:	4641      	mov	r1, r8
90010fa0:	6830      	ldr	r0, [r6, #0]
90010fa2:	f7fd fd31 	bl	9000ea08 <vListInsert>
	return xProcessTimerNow;
90010fa6:	e725      	b.n	90010df4 <prvTimerTask+0x60>
							vPortFree( pxTimer );
90010fa8:	4638      	mov	r0, r7
90010faa:	f7fd fca5 	bl	9000e8f8 <vPortFree>
90010fae:	e725      	b.n	90010dfc <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010fb0:	ebaa 0a07 	sub.w	sl, sl, r7
90010fb4:	4552      	cmp	r2, sl
90010fb6:	d81f      	bhi.n	90010ff8 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90010fb8:	6823      	ldr	r3, [r4, #0]
90010fba:	b173      	cbz	r3, 90010fda <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010fbc:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010fc0:	2700      	movs	r7, #0
90010fc2:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010fc4:	f7ff fdaa 	bl	90010b1c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010fc8:	463b      	mov	r3, r7
90010fca:	463a      	mov	r2, r7
90010fcc:	a904      	add	r1, sp, #16
90010fce:	6820      	ldr	r0, [r4, #0]
90010fd0:	f7fe f89e 	bl	9000f110 <xQueueGenericSend>
			configASSERT( xResult );
90010fd4:	2800      	cmp	r0, #0
90010fd6:	f47f af0d 	bne.w	90010df4 <prvTimerTask+0x60>
90010fda:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010fde:	f383 8811 	msr	BASEPRI, r3
90010fe2:	f3bf 8f6f 	isb	sy
90010fe6:	f3bf 8f4f 	dsb	sy
90010fea:	e7fe      	b.n	90010fea <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010fec:	4b0d      	ldr	r3, [pc, #52]	@ (90011024 <prvTimerTask+0x290>)
90010fee:	1d39      	adds	r1, r7, #4
90010ff0:	6818      	ldr	r0, [r3, #0]
90010ff2:	f7fd fd09 	bl	9000ea08 <vListInsert>
	return xProcessTimerNow;
90010ff6:	e701      	b.n	90010dfc <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ff8:	4b0a      	ldr	r3, [pc, #40]	@ (90011024 <prvTimerTask+0x290>)
90010ffa:	4641      	mov	r1, r8
90010ffc:	6818      	ldr	r0, [r3, #0]
90010ffe:	f7fd fd03 	bl	9000ea08 <vListInsert>
	return xProcessTimerNow;
90011002:	e6f7      	b.n	90010df4 <prvTimerTask+0x60>
90011004:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011008:	f383 8811 	msr	BASEPRI, r3
9001100c:	f3bf 8f6f 	isb	sy
90011010:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90011014:	e7fe      	b.n	90011014 <prvTimerTask+0x280>
90011016:	bf00      	nop
90011018:	24021d2c 	.word	0x24021d2c
9001101c:	24021d1c 	.word	0x24021d1c
90011020:	24021d24 	.word	0x24021d24
90011024:	24021d28 	.word	0x24021d28

90011028 <xTimerCreateTimerTask>:
{
90011028:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9001102a:	4c23      	ldr	r4, [pc, #140]	@ (900110b8 <xTimerCreateTimerTask+0x90>)
{
9001102c:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9001102e:	f7fd fd81 	bl	9000eb34 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90011032:	6825      	ldr	r5, [r4, #0]
90011034:	b335      	cbz	r5, 90011084 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90011036:	f7fd fd9f 	bl	9000eb78 <vPortExitCritical>
	if( xTimerQueue != NULL )
9001103a:	6823      	ldr	r3, [r4, #0]
9001103c:	b1cb      	cbz	r3, 90011072 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9001103e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011040:	aa07      	add	r2, sp, #28
90011042:	a906      	add	r1, sp, #24
90011044:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011046:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90011048:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9001104c:	f7fd fb86 	bl	9000e75c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011050:	4623      	mov	r3, r4
90011052:	9a07      	ldr	r2, [sp, #28]
90011054:	9500      	str	r5, [sp, #0]
90011056:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9001105a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001105e:	4917      	ldr	r1, [pc, #92]	@ (900110bc <xTimerCreateTimerTask+0x94>)
90011060:	4817      	ldr	r0, [pc, #92]	@ (900110c0 <xTimerCreateTimerTask+0x98>)
90011062:	f7ff f8e5 	bl	90010230 <xTaskCreateStatic>
90011066:	4b17      	ldr	r3, [pc, #92]	@ (900110c4 <xTimerCreateTimerTask+0x9c>)
90011068:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9001106a:	b110      	cbz	r0, 90011072 <xTimerCreateTimerTask+0x4a>
}
9001106c:	2001      	movs	r0, #1
9001106e:	b009      	add	sp, #36	@ 0x24
90011070:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011072:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011076:	f383 8811 	msr	BASEPRI, r3
9001107a:	f3bf 8f6f 	isb	sy
9001107e:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90011082:	e7fe      	b.n	90011082 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90011084:	4f10      	ldr	r7, [pc, #64]	@ (900110c8 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90011086:	4e11      	ldr	r6, [pc, #68]	@ (900110cc <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90011088:	4638      	mov	r0, r7
9001108a:	f7fd fc9f 	bl	9000e9cc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9001108e:	4630      	mov	r0, r6
90011090:	f7fd fc9c 	bl	9000e9cc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90011094:	4a0e      	ldr	r2, [pc, #56]	@ (900110d0 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011096:	9500      	str	r5, [sp, #0]
90011098:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9001109a:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001109c:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9001109e:	4a0d      	ldr	r2, [pc, #52]	@ (900110d4 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900110a0:	4b0d      	ldr	r3, [pc, #52]	@ (900110d8 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
900110a2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900110a4:	4a0d      	ldr	r2, [pc, #52]	@ (900110dc <xTimerCreateTimerTask+0xb4>)
900110a6:	f7fd fedf 	bl	9000ee68 <xQueueGenericCreateStatic>
900110aa:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
900110ac:	2800      	cmp	r0, #0
900110ae:	d0c2      	beq.n	90011036 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
900110b0:	490b      	ldr	r1, [pc, #44]	@ (900110e0 <xTimerCreateTimerTask+0xb8>)
900110b2:	f7fe fe1b 	bl	9000fcec <vQueueAddToRegistry>
900110b6:	e7be      	b.n	90011036 <xTimerCreateTimerTask+0xe>
900110b8:	24021d24 	.word	0x24021d24
900110bc:	9002d5a0 	.word	0x9002d5a0
900110c0:	90010d95 	.word	0x90010d95
900110c4:	24021d20 	.word	0x24021d20
900110c8:	24021d44 	.word	0x24021d44
900110cc:	24021d30 	.word	0x24021d30
900110d0:	24021d2c 	.word	0x24021d2c
900110d4:	24021d28 	.word	0x24021d28
900110d8:	24021c2c 	.word	0x24021c2c
900110dc:	24021c7c 	.word	0x24021c7c
900110e0:	9002d598 	.word	0x9002d598

900110e4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900110e4:	8880      	ldrh	r0, [r0, #4]
900110e6:	4770      	bx	lr

900110e8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900110e8:	b570      	push	{r4, r5, r6, lr}
900110ea:	6803      	ldr	r3, [r0, #0]
900110ec:	460c      	mov	r4, r1
900110ee:	2100      	movs	r1, #0
900110f0:	4605      	mov	r5, r0
900110f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900110f4:	4798      	blx	r3
900110f6:	4606      	mov	r6, r0
900110f8:	682b      	ldr	r3, [r5, #0]
900110fa:	4628      	mov	r0, r5
900110fc:	1ba4      	subs	r4, r4, r6
900110fe:	6a1b      	ldr	r3, [r3, #32]
90011100:	b2a4      	uxth	r4, r4
90011102:	4798      	blx	r3
90011104:	fbb4 f0f0 	udiv	r0, r4, r0
90011108:	bd70      	pop	{r4, r5, r6, pc}

9001110a <_ZN8touchgfx17AbstractPartition5clearEv>:
9001110a:	2300      	movs	r3, #0
9001110c:	8083      	strh	r3, [r0, #4]
9001110e:	4770      	bx	lr

90011110 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90011110:	b510      	push	{r4, lr}
90011112:	6803      	ldr	r3, [r0, #0]
90011114:	4604      	mov	r4, r0
90011116:	8881      	ldrh	r1, [r0, #4]
90011118:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001111a:	4798      	blx	r3
9001111c:	88a3      	ldrh	r3, [r4, #4]
9001111e:	3301      	adds	r3, #1
90011120:	80a3      	strh	r3, [r4, #4]
90011122:	bd10      	pop	{r4, pc}

90011124 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90011124:	6803      	ldr	r3, [r0, #0]
90011126:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011128:	4718      	bx	r3

9001112a <_ZN8touchgfx17AbstractPartitionD1Ev>:
9001112a:	4770      	bx	lr

9001112c <_ZN8touchgfx17AbstractPartitionC1Ev>:
9001112c:	4a02      	ldr	r2, [pc, #8]	@ (90011138 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9001112e:	6002      	str	r2, [r0, #0]
90011130:	2200      	movs	r2, #0
90011132:	8082      	strh	r2, [r0, #4]
90011134:	4770      	bx	lr
90011136:	bf00      	nop
90011138:	9002e4f8 	.word	0x9002e4f8

9001113c <_ZN8touchgfx9Container13getFirstChildEv>:
9001113c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9001113e:	4770      	bx	lr

90011140 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90011140:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011142:	2000      	movs	r0, #0
90011144:	b12b      	cbz	r3, 90011152 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011146:	b920      	cbnz	r0, 90011152 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011148:	1a5a      	subs	r2, r3, r1
9001114a:	699b      	ldr	r3, [r3, #24]
9001114c:	4250      	negs	r0, r2
9001114e:	4150      	adcs	r0, r2
90011150:	e7f8      	b.n	90011144 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90011152:	4770      	bx	lr

90011154 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90011154:	2300      	movs	r3, #0
90011156:	6148      	str	r0, [r1, #20]
90011158:	618b      	str	r3, [r1, #24]
9001115a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001115c:	b913      	cbnz	r3, 90011164 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9001115e:	6281      	str	r1, [r0, #40]	@ 0x28
90011160:	4770      	bx	lr
90011162:	4613      	mov	r3, r2
90011164:	699a      	ldr	r2, [r3, #24]
90011166:	2a00      	cmp	r2, #0
90011168:	d1fb      	bne.n	90011162 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001116a:	6199      	str	r1, [r3, #24]
9001116c:	4770      	bx	lr

9001116e <_ZN8touchgfx9Container9removeAllEv>:
9001116e:	2200      	movs	r2, #0
90011170:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011172:	b123      	cbz	r3, 9001117e <_ZN8touchgfx9Container9removeAllEv+0x10>
90011174:	6999      	ldr	r1, [r3, #24]
90011176:	6281      	str	r1, [r0, #40]	@ 0x28
90011178:	e9c3 2205 	strd	r2, r2, [r3, #20]
9001117c:	e7f8      	b.n	90011170 <_ZN8touchgfx9Container9removeAllEv+0x2>
9001117e:	4770      	bx	lr

90011180 <_ZN8touchgfx9Container6unlinkEv>:
90011180:	2300      	movs	r3, #0
90011182:	6283      	str	r3, [r0, #40]	@ 0x28
90011184:	4770      	bx	lr

90011186 <_ZNK8touchgfx9Container12getSolidRectEv>:
90011186:	2200      	movs	r2, #0
90011188:	8002      	strh	r2, [r0, #0]
9001118a:	8042      	strh	r2, [r0, #2]
9001118c:	8082      	strh	r2, [r0, #4]
9001118e:	80c2      	strh	r2, [r0, #6]
90011190:	4770      	bx	lr

90011192 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90011192:	b570      	push	{r4, r5, r6, lr}
90011194:	460d      	mov	r5, r1
90011196:	4616      	mov	r6, r2
90011198:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001119a:	b13c      	cbz	r4, 900111ac <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9001119c:	6823      	ldr	r3, [r4, #0]
9001119e:	4620      	mov	r0, r4
900111a0:	4632      	mov	r2, r6
900111a2:	4629      	mov	r1, r5
900111a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900111a6:	4798      	blx	r3
900111a8:	69a4      	ldr	r4, [r4, #24]
900111aa:	e7f6      	b.n	9001119a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
900111ac:	bd70      	pop	{r4, r5, r6, pc}

900111ae <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
900111ae:	b538      	push	{r3, r4, r5, lr}
900111b0:	460d      	mov	r5, r1
900111b2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900111b4:	b134      	cbz	r4, 900111c4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
900111b6:	682b      	ldr	r3, [r5, #0]
900111b8:	4621      	mov	r1, r4
900111ba:	4628      	mov	r0, r5
900111bc:	689b      	ldr	r3, [r3, #8]
900111be:	4798      	blx	r3
900111c0:	69a4      	ldr	r4, [r4, #24]
900111c2:	e7f7      	b.n	900111b4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900111c4:	bd38      	pop	{r3, r4, r5, pc}

900111c6 <_ZN8touchgfx9ContainerD1Ev>:
900111c6:	4770      	bx	lr

900111c8 <_ZN8touchgfx9ContainerD0Ev>:
900111c8:	b510      	push	{r4, lr}
900111ca:	4604      	mov	r4, r0
900111cc:	212c      	movs	r1, #44	@ 0x2c
900111ce:	f018 ffb9 	bl	9002a144 <_ZdlPvj>
900111d2:	4620      	mov	r0, r4
900111d4:	bd10      	pop	{r4, pc}

900111d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900111d6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900111d8:	b19b      	cbz	r3, 90011202 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900111da:	428b      	cmp	r3, r1
900111dc:	d109      	bne.n	900111f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900111de:	699a      	ldr	r2, [r3, #24]
900111e0:	2100      	movs	r1, #0
900111e2:	6159      	str	r1, [r3, #20]
900111e4:	6282      	str	r2, [r0, #40]	@ 0x28
900111e6:	b902      	cbnz	r2, 900111ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900111e8:	4770      	bx	lr
900111ea:	6199      	str	r1, [r3, #24]
900111ec:	4770      	bx	lr
900111ee:	4613      	mov	r3, r2
900111f0:	b13a      	cbz	r2, 90011202 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900111f2:	699a      	ldr	r2, [r3, #24]
900111f4:	428a      	cmp	r2, r1
900111f6:	d1fa      	bne.n	900111ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900111f8:	698a      	ldr	r2, [r1, #24]
900111fa:	619a      	str	r2, [r3, #24]
900111fc:	2300      	movs	r3, #0
900111fe:	e9c1 3305 	strd	r3, r3, [r1, #20]
90011202:	4770      	bx	lr

90011204 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90011204:	b410      	push	{r4}
90011206:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011208:	4604      	mov	r4, r0
9001120a:	b92b      	cbnz	r3, 90011218 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9001120c:	6803      	ldr	r3, [r0, #0]
9001120e:	4611      	mov	r1, r2
90011210:	f85d 4b04 	ldr.w	r4, [sp], #4
90011214:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90011216:	4718      	bx	r3
90011218:	b941      	cbnz	r1, 9001122c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9001121a:	6193      	str	r3, [r2, #24]
9001121c:	6282      	str	r2, [r0, #40]	@ 0x28
9001121e:	6154      	str	r4, [r2, #20]
90011220:	f85d 4b04 	ldr.w	r4, [sp], #4
90011224:	4770      	bx	lr
90011226:	4603      	mov	r3, r0
90011228:	2800      	cmp	r0, #0
9001122a:	d0f9      	beq.n	90011220 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9001122c:	4299      	cmp	r1, r3
9001122e:	6998      	ldr	r0, [r3, #24]
90011230:	d1f9      	bne.n	90011226 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90011232:	6190      	str	r0, [r2, #24]
90011234:	618a      	str	r2, [r1, #24]
90011236:	e7f2      	b.n	9001121e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90011238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90011238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001123c:	461f      	mov	r7, r3
9001123e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90011242:	460d      	mov	r5, r1
90011244:	4616      	mov	r6, r2
90011246:	b103      	cbz	r3, 9001124a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90011248:	6038      	str	r0, [r7, #0]
9001124a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001124c:	b314      	cbz	r4, 90011294 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9001124e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011252:	b1eb      	cbz	r3, 90011290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011254:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90011258:	428d      	cmp	r5, r1
9001125a:	db19      	blt.n	90011290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001125c:	b289      	uxth	r1, r1
9001125e:	8923      	ldrh	r3, [r4, #8]
90011260:	440b      	add	r3, r1
90011262:	b21b      	sxth	r3, r3
90011264:	429d      	cmp	r5, r3
90011266:	da13      	bge.n	90011290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011268:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001126c:	4296      	cmp	r6, r2
9001126e:	db0f      	blt.n	90011290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011270:	b292      	uxth	r2, r2
90011272:	8963      	ldrh	r3, [r4, #10]
90011274:	4413      	add	r3, r2
90011276:	b21b      	sxth	r3, r3
90011278:	429e      	cmp	r6, r3
9001127a:	da09      	bge.n	90011290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001127c:	6823      	ldr	r3, [r4, #0]
9001127e:	1ab2      	subs	r2, r6, r2
90011280:	1a69      	subs	r1, r5, r1
90011282:	4620      	mov	r0, r4
90011284:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90011288:	b212      	sxth	r2, r2
9001128a:	463b      	mov	r3, r7
9001128c:	b209      	sxth	r1, r1
9001128e:	47c0      	blx	r8
90011290:	69a4      	ldr	r4, [r4, #24]
90011292:	e7db      	b.n	9001124c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90011294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011298 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90011298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001129c:	4c6d      	ldr	r4, [pc, #436]	@ (90011454 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9001129e:	b0a1      	sub	sp, #132	@ 0x84
900112a0:	4606      	mov	r6, r0
900112a2:	6824      	ldr	r4, [r4, #0]
900112a4:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900112a6:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900112aa:	2400      	movs	r4, #0
900112ac:	9303      	str	r3, [sp, #12]
900112ae:	802c      	strh	r4, [r5, #0]
900112b0:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900112b2:	802c      	strh	r4, [r5, #0]
900112b4:	601c      	str	r4, [r3, #0]
900112b6:	e9cd 1201 	strd	r1, r2, [sp, #4]
900112ba:	f7ff ffbd 	bl	90011238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900112be:	f1b9 0f03 	cmp.w	r9, #3
900112c2:	f340 80c1 	ble.w	90011448 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900112c6:	4631      	mov	r1, r6
900112c8:	a80c      	add	r0, sp, #48	@ 0x30
900112ca:	f007 fb69 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900112ce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900112d2:	9306      	str	r3, [sp, #24]
900112d4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900112d8:	9307      	str	r3, [sp, #28]
900112da:	9b03      	ldr	r3, [sp, #12]
900112dc:	f8d3 a000 	ldr.w	sl, [r3]
900112e0:	f1ba 0f00 	cmp.w	sl, #0
900112e4:	f000 80b3 	beq.w	9001144e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
900112e8:	4651      	mov	r1, sl
900112ea:	a810      	add	r0, sp, #64	@ 0x40
900112ec:	f007 fb58 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900112f0:	2002      	movs	r0, #2
900112f2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
900112f6:	9b01      	ldr	r3, [sp, #4]
900112f8:	9a06      	ldr	r2, [sp, #24]
900112fa:	fb91 f1f0 	sdiv	r1, r1, r0
900112fe:	189d      	adds	r5, r3, r2
90011300:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90011304:	9a07      	ldr	r2, [sp, #28]
90011306:	4419      	add	r1, r3
90011308:	9b02      	ldr	r3, [sp, #8]
9001130a:	4413      	add	r3, r2
9001130c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90011310:	1a6d      	subs	r5, r5, r1
90011312:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90011316:	fb92 f2f0 	sdiv	r2, r2, r0
9001131a:	440a      	add	r2, r1
9001131c:	1a9b      	subs	r3, r3, r2
9001131e:	435b      	muls	r3, r3
90011320:	fb05 3505 	mla	r5, r5, r5, r3
90011324:	4f4c      	ldr	r7, [pc, #304]	@ (90011458 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90011326:	ac10      	add	r4, sp, #64	@ 0x40
90011328:	f1b9 0f0c 	cmp.w	r9, #12
9001132c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001132e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011330:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011332:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011334:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011336:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011338:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9001133c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011340:	f04f 0303 	mov.w	r3, #3
90011344:	bfd8      	it	le
90011346:	f109 32ff 	addle.w	r2, r9, #4294967295
9001134a:	f04f 0400 	mov.w	r4, #0
9001134e:	f8cd 9000 	str.w	r9, [sp]
90011352:	bfcc      	ite	gt
90011354:	4698      	movgt	r8, r3
90011356:	fb92 f8f3 	sdivle	r8, r2, r3
9001135a:	1c63      	adds	r3, r4, #1
9001135c:	aa10      	add	r2, sp, #64	@ 0x40
9001135e:	f004 0401 	and.w	r4, r4, #1
90011362:	f04f 0b00 	mov.w	fp, #0
90011366:	9308      	str	r3, [sp, #32]
90011368:	9b00      	ldr	r3, [sp, #0]
9001136a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9001136e:	fb93 f3f8 	sdiv	r3, r3, r8
90011372:	3404      	adds	r4, #4
90011374:	b29b      	uxth	r3, r3
90011376:	9304      	str	r3, [sp, #16]
90011378:	9a04      	ldr	r2, [sp, #16]
9001137a:	f854 3c04 	ldr.w	r3, [r4, #-4]
9001137e:	fb13 f302 	smulbb	r3, r3, r2
90011382:	9a01      	ldr	r2, [sp, #4]
90011384:	b29b      	uxth	r3, r3
90011386:	1899      	adds	r1, r3, r2
90011388:	9305      	str	r3, [sp, #20]
9001138a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9001138e:	b209      	sxth	r1, r1
90011390:	4299      	cmp	r1, r3
90011392:	db4d      	blt.n	90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011394:	8932      	ldrh	r2, [r6, #8]
90011396:	4413      	add	r3, r2
90011398:	b21b      	sxth	r3, r3
9001139a:	4299      	cmp	r1, r3
9001139c:	da48      	bge.n	90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001139e:	9b04      	ldr	r3, [sp, #16]
900113a0:	6827      	ldr	r7, [r4, #0]
900113a2:	fb17 f703 	smulbb	r7, r7, r3
900113a6:	9b02      	ldr	r3, [sp, #8]
900113a8:	b2bf      	uxth	r7, r7
900113aa:	18fa      	adds	r2, r7, r3
900113ac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900113b0:	b212      	sxth	r2, r2
900113b2:	429a      	cmp	r2, r3
900113b4:	db3c      	blt.n	90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113b6:	8970      	ldrh	r0, [r6, #10]
900113b8:	4403      	add	r3, r0
900113ba:	b21b      	sxth	r3, r3
900113bc:	429a      	cmp	r2, r3
900113be:	da37      	bge.n	90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113c0:	2300      	movs	r3, #0
900113c2:	4630      	mov	r0, r6
900113c4:	930b      	str	r3, [sp, #44]	@ 0x2c
900113c6:	ab0b      	add	r3, sp, #44	@ 0x2c
900113c8:	f7ff ff36 	bl	90011238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900113cc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900113ce:	b37a      	cbz	r2, 90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113d0:	4552      	cmp	r2, sl
900113d2:	d02d      	beq.n	90011430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113d4:	4611      	mov	r1, r2
900113d6:	a80e      	add	r0, sp, #56	@ 0x38
900113d8:	9209      	str	r2, [sp, #36]	@ 0x24
900113da:	f007 fae1 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900113de:	f04f 0e02 	mov.w	lr, #2
900113e2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
900113e6:	9a06      	ldr	r2, [sp, #24]
900113e8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
900113ec:	9b01      	ldr	r3, [sp, #4]
900113ee:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
900113f2:	4413      	add	r3, r2
900113f4:	9a07      	ldr	r2, [sp, #28]
900113f6:	fb91 f1fe 	sdiv	r1, r1, lr
900113fa:	fb9c fcfe 	sdiv	ip, ip, lr
900113fe:	4401      	add	r1, r0
90011400:	1a58      	subs	r0, r3, r1
90011402:	9b02      	ldr	r3, [sp, #8]
90011404:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90011408:	4413      	add	r3, r2
9001140a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001140c:	448c      	add	ip, r1
9001140e:	eba3 030c 	sub.w	r3, r3, ip
90011412:	435b      	muls	r3, r3
90011414:	fb00 3300 	mla	r3, r0, r0, r3
90011418:	42ab      	cmp	r3, r5
9001141a:	d208      	bcs.n	9001142e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9001141c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001141e:	461d      	mov	r5, r3
90011420:	9803      	ldr	r0, [sp, #12]
90011422:	6001      	str	r1, [r0, #0]
90011424:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90011426:	9805      	ldr	r0, [sp, #20]
90011428:	8008      	strh	r0, [r1, #0]
9001142a:	992b      	ldr	r1, [sp, #172]	@ 0xac
9001142c:	800f      	strh	r7, [r1, #0]
9001142e:	4692      	mov	sl, r2
90011430:	f10b 0b01 	add.w	fp, fp, #1
90011434:	3408      	adds	r4, #8
90011436:	f1bb 0f04 	cmp.w	fp, #4
9001143a:	d19d      	bne.n	90011378 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9001143c:	9b00      	ldr	r3, [sp, #0]
9001143e:	9c08      	ldr	r4, [sp, #32]
90011440:	444b      	add	r3, r9
90011442:	4544      	cmp	r4, r8
90011444:	9300      	str	r3, [sp, #0]
90011446:	d188      	bne.n	9001135a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90011448:	b021      	add	sp, #132	@ 0x84
9001144a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001144e:	f04f 35ff 	mov.w	r5, #4294967295
90011452:	e767      	b.n	90011324 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90011454:	24021d64 	.word	0x24021d64
90011458:	9002b8e0 	.word	0x9002b8e0

9001145c <_ZN8touchgfx4RectaNERKS0_>:
9001145c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011460:	f9b1 7000 	ldrsh.w	r7, [r1]
90011464:	888c      	ldrh	r4, [r1, #4]
90011466:	f9b0 9000 	ldrsh.w	r9, [r0]
9001146a:	443c      	add	r4, r7
9001146c:	b2a4      	uxth	r4, r4
9001146e:	fa0f f884 	sxth.w	r8, r4
90011472:	45c1      	cmp	r9, r8
90011474:	da2f      	bge.n	900114d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011476:	8882      	ldrh	r2, [r0, #4]
90011478:	444a      	add	r2, r9
9001147a:	b292      	uxth	r2, r2
9001147c:	fa0f fe82 	sxth.w	lr, r2
90011480:	4577      	cmp	r7, lr
90011482:	da28      	bge.n	900114d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011484:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90011488:	88cb      	ldrh	r3, [r1, #6]
9001148a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001148e:	442b      	add	r3, r5
90011490:	b21b      	sxth	r3, r3
90011492:	429e      	cmp	r6, r3
90011494:	da1f      	bge.n	900114d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011496:	88c3      	ldrh	r3, [r0, #6]
90011498:	4433      	add	r3, r6
9001149a:	b29b      	uxth	r3, r3
9001149c:	fa0f fc83 	sxth.w	ip, r3
900114a0:	4565      	cmp	r5, ip
900114a2:	da18      	bge.n	900114d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900114a4:	454f      	cmp	r7, r9
900114a6:	bfb8      	it	lt
900114a8:	464f      	movlt	r7, r9
900114aa:	42b5      	cmp	r5, r6
900114ac:	bfb8      	it	lt
900114ae:	4635      	movlt	r5, r6
900114b0:	45f0      	cmp	r8, lr
900114b2:	bfd8      	it	le
900114b4:	4622      	movle	r2, r4
900114b6:	1bd2      	subs	r2, r2, r7
900114b8:	8082      	strh	r2, [r0, #4]
900114ba:	884a      	ldrh	r2, [r1, #2]
900114bc:	88c9      	ldrh	r1, [r1, #6]
900114be:	8007      	strh	r7, [r0, #0]
900114c0:	440a      	add	r2, r1
900114c2:	8045      	strh	r5, [r0, #2]
900114c4:	b292      	uxth	r2, r2
900114c6:	b211      	sxth	r1, r2
900114c8:	458c      	cmp	ip, r1
900114ca:	bfa8      	it	ge
900114cc:	4613      	movge	r3, r2
900114ce:	1b5b      	subs	r3, r3, r5
900114d0:	80c3      	strh	r3, [r0, #6]
900114d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900114d6:	2300      	movs	r3, #0
900114d8:	8003      	strh	r3, [r0, #0]
900114da:	8043      	strh	r3, [r0, #2]
900114dc:	8083      	strh	r3, [r0, #4]
900114de:	80c3      	strh	r3, [r0, #6]
900114e0:	e7f7      	b.n	900114d2 <_ZN8touchgfx4RectaNERKS0_+0x76>

900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>:
900114e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900114e6:	2b00      	cmp	r3, #0
900114e8:	dd06      	ble.n	900114f8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
900114ea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
900114ee:	2800      	cmp	r0, #0
900114f0:	bfcc      	ite	gt
900114f2:	2000      	movgt	r0, #0
900114f4:	2001      	movle	r0, #1
900114f6:	4770      	bx	lr
900114f8:	2001      	movs	r0, #1
900114fa:	4770      	bx	lr

900114fc <_ZNK8touchgfx9Container16getContainedAreaEv>:
900114fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011500:	2300      	movs	r3, #0
90011502:	4604      	mov	r4, r0
90011504:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90011506:	8003      	strh	r3, [r0, #0]
90011508:	8043      	strh	r3, [r0, #2]
9001150a:	8083      	strh	r3, [r0, #4]
9001150c:	80c3      	strh	r3, [r0, #6]
9001150e:	2d00      	cmp	r5, #0
90011510:	d040      	beq.n	90011594 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90011512:	1d28      	adds	r0, r5, #4
90011514:	f7ff ffe5 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90011518:	b988      	cbnz	r0, 9001153e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001151a:	4620      	mov	r0, r4
9001151c:	f7ff ffe1 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90011520:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90011524:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90011528:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9001152c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90011530:	b138      	cbz	r0, 90011542 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90011532:	8022      	strh	r2, [r4, #0]
90011534:	8063      	strh	r3, [r4, #2]
90011536:	f8a4 e004 	strh.w	lr, [r4, #4]
9001153a:	f8a4 c006 	strh.w	ip, [r4, #6]
9001153e:	69ad      	ldr	r5, [r5, #24]
90011540:	e7e5      	b.n	9001150e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90011542:	f9b4 0000 	ldrsh.w	r0, [r4]
90011546:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001154a:	4290      	cmp	r0, r2
9001154c:	4607      	mov	r7, r0
9001154e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90011552:	460e      	mov	r6, r1
90011554:	bfa8      	it	ge
90011556:	4617      	movge	r7, r2
90011558:	4299      	cmp	r1, r3
9001155a:	4472      	add	r2, lr
9001155c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011560:	bfa8      	it	ge
90011562:	461e      	movge	r6, r3
90011564:	4440      	add	r0, r8
90011566:	4471      	add	r1, lr
90011568:	4463      	add	r3, ip
9001156a:	b200      	sxth	r0, r0
9001156c:	8027      	strh	r7, [r4, #0]
9001156e:	b212      	sxth	r2, r2
90011570:	8066      	strh	r6, [r4, #2]
90011572:	b209      	sxth	r1, r1
90011574:	b21b      	sxth	r3, r3
90011576:	4290      	cmp	r0, r2
90011578:	bfac      	ite	ge
9001157a:	ebc7 0200 	rsbge	r2, r7, r0
9001157e:	ebc7 0202 	rsblt	r2, r7, r2
90011582:	4299      	cmp	r1, r3
90011584:	bfac      	ite	ge
90011586:	ebc6 0301 	rsbge	r3, r6, r1
9001158a:	ebc6 0303 	rsblt	r3, r6, r3
9001158e:	80a2      	strh	r2, [r4, #4]
90011590:	80e3      	strh	r3, [r4, #6]
90011592:	e7d4      	b.n	9001153e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011594:	4620      	mov	r0, r4
90011596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001159a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9001159a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9001159e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900115a2:	b383      	cbz	r3, 90011606 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900115a4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900115a6:	b374      	cbz	r4, 90011606 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900115a8:	f9b1 5000 	ldrsh.w	r5, [r1]
900115ac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900115b0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900115b4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900115b8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900115bc:	b303      	cbz	r3, 90011600 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900115be:	4668      	mov	r0, sp
900115c0:	1d21      	adds	r1, r4, #4
900115c2:	f8ad 5000 	strh.w	r5, [sp]
900115c6:	f8ad 6002 	strh.w	r6, [sp, #2]
900115ca:	f8ad 7004 	strh.w	r7, [sp, #4]
900115ce:	f8ad 8006 	strh.w	r8, [sp, #6]
900115d2:	f7ff ff43 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
900115d6:	4668      	mov	r0, sp
900115d8:	f7ff ff83 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
900115dc:	b980      	cbnz	r0, 90011600 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900115de:	f8bd 3000 	ldrh.w	r3, [sp]
900115e2:	4669      	mov	r1, sp
900115e4:	88a2      	ldrh	r2, [r4, #4]
900115e6:	4620      	mov	r0, r4
900115e8:	1a9b      	subs	r3, r3, r2
900115ea:	88e2      	ldrh	r2, [r4, #6]
900115ec:	f8ad 3000 	strh.w	r3, [sp]
900115f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900115f4:	1a9b      	subs	r3, r3, r2
900115f6:	f8ad 3002 	strh.w	r3, [sp, #2]
900115fa:	6823      	ldr	r3, [r4, #0]
900115fc:	689b      	ldr	r3, [r3, #8]
900115fe:	4798      	blx	r3
90011600:	69a4      	ldr	r4, [r4, #24]
90011602:	2c00      	cmp	r4, #0
90011604:	d1d8      	bne.n	900115b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90011606:	b002      	add	sp, #8
90011608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001160c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001160c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001160e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90011612:	460d      	mov	r5, r1
90011614:	4616      	mov	r6, r2
90011616:	b323      	cbz	r3, 90011662 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90011618:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001161a:	b314      	cbz	r4, 90011662 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001161c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011620:	b1eb      	cbz	r3, 9001165e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90011622:	6828      	ldr	r0, [r5, #0]
90011624:	466b      	mov	r3, sp
90011626:	6869      	ldr	r1, [r5, #4]
90011628:	c303      	stmia	r3!, {r0, r1}
9001162a:	4668      	mov	r0, sp
9001162c:	1d21      	adds	r1, r4, #4
9001162e:	f7ff ff15 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90011632:	4668      	mov	r0, sp
90011634:	f7ff ff55 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90011638:	b988      	cbnz	r0, 9001165e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001163a:	f8bd 3000 	ldrh.w	r3, [sp]
9001163e:	4669      	mov	r1, sp
90011640:	88a2      	ldrh	r2, [r4, #4]
90011642:	4620      	mov	r0, r4
90011644:	1a9b      	subs	r3, r3, r2
90011646:	88e2      	ldrh	r2, [r4, #6]
90011648:	f8ad 3000 	strh.w	r3, [sp]
9001164c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011650:	1a9b      	subs	r3, r3, r2
90011652:	4632      	mov	r2, r6
90011654:	f8ad 3002 	strh.w	r3, [sp, #2]
90011658:	6823      	ldr	r3, [r4, #0]
9001165a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001165c:	4798      	blx	r3
9001165e:	69a4      	ldr	r4, [r4, #24]
90011660:	e7db      	b.n	9001161a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90011662:	b002      	add	sp, #8
90011664:	bd70      	pop	{r4, r5, r6, pc}

90011666 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90011666:	6803      	ldr	r3, [r0, #0]
90011668:	b513      	push	{r0, r1, r4, lr}
9001166a:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
9001166e:	2300      	movs	r3, #0
90011670:	e9cd 3300 	strd	r3, r3, [sp]
90011674:	466b      	mov	r3, sp
90011676:	47a0      	blx	r4
90011678:	b002      	add	sp, #8
9001167a:	bd10      	pop	{r4, pc}

9001167c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
9001167c:	2301      	movs	r3, #1
9001167e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90011682:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90011686:	4770      	bx	lr

90011688 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90011688:	2301      	movs	r3, #1
9001168a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001168e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90011692:	4770      	bx	lr

90011694 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90011694:	6843      	ldr	r3, [r0, #4]
90011696:	2201      	movs	r2, #1
90011698:	725a      	strb	r2, [r3, #9]
9001169a:	6840      	ldr	r0, [r0, #4]
9001169c:	6803      	ldr	r3, [r0, #0]
9001169e:	691b      	ldr	r3, [r3, #16]
900116a0:	4718      	bx	r3

900116a2 <_ZN8touchgfx3HAL8flushDMAEv>:
900116a2:	6840      	ldr	r0, [r0, #4]
900116a4:	6803      	ldr	r3, [r0, #0]
900116a6:	689b      	ldr	r3, [r3, #8]
900116a8:	4718      	bx	r3

900116aa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900116aa:	b530      	push	{r4, r5, lr}
900116ac:	b08b      	sub	sp, #44	@ 0x2c
900116ae:	6804      	ldr	r4, [r0, #0]
900116b0:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900116b4:	9509      	str	r5, [sp, #36]	@ 0x24
900116b6:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900116ba:	9508      	str	r5, [sp, #32]
900116bc:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900116c0:	9507      	str	r5, [sp, #28]
900116c2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900116c6:	9506      	str	r5, [sp, #24]
900116c8:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900116cc:	9505      	str	r5, [sp, #20]
900116ce:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
900116d2:	9504      	str	r5, [sp, #16]
900116d4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900116d8:	9503      	str	r5, [sp, #12]
900116da:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900116de:	9502      	str	r5, [sp, #8]
900116e0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
900116e4:	e9cd 3500 	strd	r3, r5, [sp]
900116e8:	4613      	mov	r3, r2
900116ea:	6c24      	ldr	r4, [r4, #64]	@ 0x40
900116ec:	2200      	movs	r2, #0
900116ee:	47a0      	blx	r4
900116f0:	b00b      	add	sp, #44	@ 0x2c
900116f2:	bd30      	pop	{r4, r5, pc}

900116f4 <_ZN8touchgfx3HAL10beginFrameEv>:
900116f4:	4b04      	ldr	r3, [pc, #16]	@ (90011708 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900116f6:	781b      	ldrb	r3, [r3, #0]
900116f8:	b123      	cbz	r3, 90011704 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900116fa:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
900116fe:	f080 0001 	eor.w	r0, r0, #1
90011702:	4770      	bx	lr
90011704:	2001      	movs	r0, #1
90011706:	4770      	bx	lr
90011708:	24021d62 	.word	0x24021d62

9001170c <_ZN8touchgfx3HAL8endFrameEv>:
9001170c:	b510      	push	{r4, lr}
9001170e:	4604      	mov	r4, r0
90011710:	6840      	ldr	r0, [r0, #4]
90011712:	6803      	ldr	r3, [r0, #0]
90011714:	689b      	ldr	r3, [r3, #8]
90011716:	4798      	blx	r3
90011718:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
9001171c:	b113      	cbz	r3, 90011724 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001171e:	2301      	movs	r3, #1
90011720:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90011724:	bd10      	pop	{r4, pc}

90011726 <_ZN8touchgfx3HAL10initializeEv>:
90011726:	b510      	push	{r4, lr}
90011728:	4604      	mov	r4, r0
9001172a:	f7f0 fe05 	bl	90002338 <_ZN8touchgfx10OSWrappers10initializeEv>
9001172e:	f7ef fa87 	bl	90000c40 <_ZN8touchgfx4GPIO4initEv>
90011732:	6860      	ldr	r0, [r4, #4]
90011734:	6803      	ldr	r3, [r0, #0]
90011736:	68db      	ldr	r3, [r3, #12]
90011738:	4798      	blx	r3
9001173a:	68e0      	ldr	r0, [r4, #12]
9001173c:	6803      	ldr	r3, [r0, #0]
9001173e:	689b      	ldr	r3, [r3, #8]
90011740:	4798      	blx	r3
90011742:	6823      	ldr	r3, [r4, #0]
90011744:	4620      	mov	r0, r4
90011746:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90011748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001174c:	4718      	bx	r3
	...

90011750 <_ZN8touchgfx3HAL4tickEv>:
90011750:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011752:	6803      	ldr	r3, [r0, #0]
90011754:	4604      	mov	r4, r0
90011756:	4d62      	ldr	r5, [pc, #392]	@ (900118e0 <_ZN8touchgfx3HAL4tickEv+0x190>)
90011758:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
9001175c:	4798      	blx	r3
9001175e:	2800      	cmp	r0, #0
90011760:	f000 809e 	beq.w	900118a0 <_ZN8touchgfx3HAL4tickEv+0x150>
90011764:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90011768:	2b02      	cmp	r3, #2
9001176a:	d002      	beq.n	90011772 <_ZN8touchgfx3HAL4tickEv+0x22>
9001176c:	2001      	movs	r0, #1
9001176e:	f7ef fa91 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011772:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
90011776:	2600      	movs	r6, #0
90011778:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9001177c:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90011780:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
90011784:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90011788:	b133      	cbz	r3, 90011798 <_ZN8touchgfx3HAL4tickEv+0x48>
9001178a:	6823      	ldr	r3, [r4, #0]
9001178c:	4620      	mov	r0, r4
9001178e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90011792:	4798      	blx	r3
90011794:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90011798:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
9001179c:	2601      	movs	r6, #1
9001179e:	6862      	ldr	r2, [r4, #4]
900117a0:	f083 0301 	eor.w	r3, r3, #1
900117a4:	702e      	strb	r6, [r5, #0]
900117a6:	7253      	strb	r3, [r2, #9]
900117a8:	f005 fe5c 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
900117ac:	6803      	ldr	r3, [r0, #0]
900117ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900117b0:	4798      	blx	r3
900117b2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900117b6:	b90b      	cbnz	r3, 900117bc <_ZN8touchgfx3HAL4tickEv+0x6c>
900117b8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900117bc:	f005 fe52 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
900117c0:	6803      	ldr	r3, [r0, #0]
900117c2:	695b      	ldr	r3, [r3, #20]
900117c4:	4798      	blx	r3
900117c6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900117c8:	6803      	ldr	r3, [r0, #0]
900117ca:	691b      	ldr	r3, [r3, #16]
900117cc:	4798      	blx	r3
900117ce:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900117d2:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
900117d6:	3b01      	subs	r3, #1
900117d8:	b2db      	uxtb	r3, r3
900117da:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900117de:	b10a      	cbz	r2, 900117e4 <_ZN8touchgfx3HAL4tickEv+0x94>
900117e0:	2b00      	cmp	r3, #0
900117e2:	d1eb      	bne.n	900117bc <_ZN8touchgfx3HAL4tickEv+0x6c>
900117e4:	4a3f      	ldr	r2, [pc, #252]	@ (900118e4 <_ZN8touchgfx3HAL4tickEv+0x194>)
900117e6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
900117ea:	7813      	ldrb	r3, [r2, #0]
900117ec:	3301      	adds	r3, #1
900117ee:	b25b      	sxtb	r3, r3
900117f0:	4299      	cmp	r1, r3
900117f2:	7013      	strb	r3, [r2, #0]
900117f4:	dc10      	bgt.n	90011818 <_ZN8touchgfx3HAL4tickEv+0xc8>
900117f6:	2300      	movs	r3, #0
900117f8:	68e0      	ldr	r0, [r4, #12]
900117fa:	a902      	add	r1, sp, #8
900117fc:	7013      	strb	r3, [r2, #0]
900117fe:	aa03      	add	r2, sp, #12
90011800:	6803      	ldr	r3, [r0, #0]
90011802:	68db      	ldr	r3, [r3, #12]
90011804:	4798      	blx	r3
90011806:	6823      	ldr	r3, [r4, #0]
90011808:	2800      	cmp	r0, #0
9001180a:	d059      	beq.n	900118c0 <_ZN8touchgfx3HAL4tickEv+0x170>
9001180c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90011810:	4620      	mov	r0, r4
90011812:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011816:	4798      	blx	r3
90011818:	2300      	movs	r3, #0
9001181a:	6960      	ldr	r0, [r4, #20]
9001181c:	f88d 3007 	strb.w	r3, [sp, #7]
90011820:	b158      	cbz	r0, 9001183a <_ZN8touchgfx3HAL4tickEv+0xea>
90011822:	6803      	ldr	r3, [r0, #0]
90011824:	f10d 0107 	add.w	r1, sp, #7
90011828:	68db      	ldr	r3, [r3, #12]
9001182a:	4798      	blx	r3
9001182c:	b128      	cbz	r0, 9001183a <_ZN8touchgfx3HAL4tickEv+0xea>
9001182e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90011830:	f89d 1007 	ldrb.w	r1, [sp, #7]
90011834:	6803      	ldr	r3, [r0, #0]
90011836:	68db      	ldr	r3, [r3, #12]
90011838:	4798      	blx	r3
9001183a:	f104 001c 	add.w	r0, r4, #28
9001183e:	f017 fe65 	bl	9002950c <_ZN8touchgfx8Gestures4tickEv>
90011842:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90011846:	b30b      	cbz	r3, 9001188c <_ZN8touchgfx3HAL4tickEv+0x13c>
90011848:	6920      	ldr	r0, [r4, #16]
9001184a:	6803      	ldr	r3, [r0, #0]
9001184c:	691b      	ldr	r3, [r3, #16]
9001184e:	4798      	blx	r3
90011850:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011852:	4606      	mov	r6, r0
90011854:	b903      	cbnz	r3, 90011858 <_ZN8touchgfx3HAL4tickEv+0x108>
90011856:	6760      	str	r0, [r4, #116]	@ 0x74
90011858:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001185a:	4a23      	ldr	r2, [pc, #140]	@ (900118e8 <_ZN8touchgfx3HAL4tickEv+0x198>)
9001185c:	1af3      	subs	r3, r6, r3
9001185e:	4293      	cmp	r3, r2
90011860:	d914      	bls.n	9001188c <_ZN8touchgfx3HAL4tickEv+0x13c>
90011862:	6920      	ldr	r0, [r4, #16]
90011864:	6803      	ldr	r3, [r0, #0]
90011866:	699b      	ldr	r3, [r3, #24]
90011868:	4798      	blx	r3
9001186a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001186c:	2264      	movs	r2, #100	@ 0x64
9001186e:	1af3      	subs	r3, r6, r3
90011870:	fbb3 f3f2 	udiv	r3, r3, r2
90011874:	fbb0 f0f3 	udiv	r0, r0, r3
90011878:	2800      	cmp	r0, #0
9001187a:	dc26      	bgt.n	900118ca <_ZN8touchgfx3HAL4tickEv+0x17a>
9001187c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90011880:	6920      	ldr	r0, [r4, #16]
90011882:	2100      	movs	r1, #0
90011884:	6803      	ldr	r3, [r0, #0]
90011886:	69db      	ldr	r3, [r3, #28]
90011888:	4798      	blx	r3
9001188a:	6766      	str	r6, [r4, #116]	@ 0x74
9001188c:	6823      	ldr	r3, [r4, #0]
9001188e:	4620      	mov	r0, r4
90011890:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90011894:	4798      	blx	r3
90011896:	f005 fde5 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
9001189a:	6803      	ldr	r3, [r0, #0]
9001189c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001189e:	4798      	blx	r3
900118a0:	6823      	ldr	r3, [r4, #0]
900118a2:	4620      	mov	r0, r4
900118a4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900118a8:	4798      	blx	r3
900118aa:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900118ae:	2b02      	cmp	r3, #2
900118b0:	d002      	beq.n	900118b8 <_ZN8touchgfx3HAL4tickEv+0x168>
900118b2:	2001      	movs	r0, #1
900118b4:	f7ef fa22 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900118b8:	2300      	movs	r3, #0
900118ba:	702b      	strb	r3, [r5, #0]
900118bc:	b004      	add	sp, #16
900118be:	bd70      	pop	{r4, r5, r6, pc}
900118c0:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
900118c4:	4620      	mov	r0, r4
900118c6:	4798      	blx	r3
900118c8:	e7a6      	b.n	90011818 <_ZN8touchgfx3HAL4tickEv+0xc8>
900118ca:	2863      	cmp	r0, #99	@ 0x63
900118cc:	bfcb      	itete	gt
900118ce:	2300      	movgt	r3, #0
900118d0:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
900118d4:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
900118d8:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
900118dc:	e7d0      	b.n	90011880 <_ZN8touchgfx3HAL4tickEv+0x130>
900118de:	bf00      	nop
900118e0:	24021d68 	.word	0x24021d68
900118e4:	24021d69 	.word	0x24021d69
900118e8:	05f5e100 	.word	0x05f5e100

900118ec <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900118ec:	b510      	push	{r4, lr}
900118ee:	4604      	mov	r4, r0
900118f0:	f7f0 fd54 	bl	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900118f4:	2200      	movs	r2, #0
900118f6:	6863      	ldr	r3, [r4, #4]
900118f8:	729a      	strb	r2, [r3, #10]
900118fa:	bd10      	pop	{r4, pc}

900118fc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900118fc:	65c1      	str	r1, [r0, #92]	@ 0x5c
900118fe:	301c      	adds	r0, #28
90011900:	f017 be02 	b.w	90029508 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90011904 <_ZN8touchgfx3HAL5touchEll>:
90011904:	b530      	push	{r4, r5, lr}
90011906:	b087      	sub	sp, #28
90011908:	4604      	mov	r4, r0
9001190a:	a804      	add	r0, sp, #16
9001190c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90011910:	f005 fb8e 	bl	90017030 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90011914:	9b04      	ldr	r3, [sp, #16]
90011916:	a906      	add	r1, sp, #24
90011918:	a803      	add	r0, sp, #12
9001191a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001191e:	9b05      	ldr	r3, [sp, #20]
90011920:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90011924:	f005 fbd6 	bl	900170d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011928:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
9001192c:	f104 001c 	add.w	r0, r4, #28
90011930:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90011934:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011938:	b189      	cbz	r1, 9001195e <_ZN8touchgfx3HAL5touchEll+0x5a>
9001193a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
9001193e:	9300      	str	r3, [sp, #0]
90011940:	4613      	mov	r3, r2
90011942:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90011946:	462a      	mov	r2, r5
90011948:	f017 fdee 	bl	90029528 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
9001194c:	b128      	cbz	r0, 9001195a <_ZN8touchgfx3HAL5touchEll+0x56>
9001194e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90011952:	6623      	str	r3, [r4, #96]	@ 0x60
90011954:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011958:	6663      	str	r3, [r4, #100]	@ 0x64
9001195a:	b007      	add	sp, #28
9001195c:	bd30      	pop	{r4, r5, pc}
9001195e:	f017 fe23 	bl	900295a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011962:	2301      	movs	r3, #1
90011964:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90011968:	e7f1      	b.n	9001194e <_ZN8touchgfx3HAL5touchEll+0x4a>

9001196a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001196a:	b510      	push	{r4, lr}
9001196c:	2b00      	cmp	r3, #0
9001196e:	d046      	beq.n	900119fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011970:	ea81 0002 	eor.w	r0, r1, r2
90011974:	07c4      	lsls	r4, r0, #31
90011976:	d508      	bpl.n	9001198a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011978:	440b      	add	r3, r1
9001197a:	3a01      	subs	r2, #1
9001197c:	428b      	cmp	r3, r1
9001197e:	d93e      	bls.n	900119fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011980:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011984:	f801 0b01 	strb.w	r0, [r1], #1
90011988:	e7f8      	b.n	9001197c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001198a:	07d0      	lsls	r0, r2, #31
9001198c:	bf42      	ittt	mi
9001198e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90011992:	f103 33ff 	addmi.w	r3, r3, #4294967295
90011996:	f801 0b01 	strbmi.w	r0, [r1], #1
9001199a:	2b01      	cmp	r3, #1
9001199c:	d911      	bls.n	900119c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001199e:	ea81 0402 	eor.w	r4, r1, r2
900119a2:	4610      	mov	r0, r2
900119a4:	07a4      	lsls	r4, r4, #30
900119a6:	d022      	beq.n	900119ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900119a8:	f023 0401 	bic.w	r4, r3, #1
900119ac:	440c      	add	r4, r1
900119ae:	428c      	cmp	r4, r1
900119b0:	4602      	mov	r2, r0
900119b2:	d904      	bls.n	900119be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900119b4:	8812      	ldrh	r2, [r2, #0]
900119b6:	3002      	adds	r0, #2
900119b8:	f821 2b02 	strh.w	r2, [r1], #2
900119bc:	e7f7      	b.n	900119ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900119be:	f003 0301 	and.w	r3, r3, #1
900119c2:	f023 0003 	bic.w	r0, r3, #3
900119c6:	4408      	add	r0, r1
900119c8:	4288      	cmp	r0, r1
900119ca:	4614      	mov	r4, r2
900119cc:	d904      	bls.n	900119d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900119ce:	6824      	ldr	r4, [r4, #0]
900119d0:	3204      	adds	r2, #4
900119d2:	f841 4b04 	str.w	r4, [r1], #4
900119d6:	e7f7      	b.n	900119c8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900119d8:	f003 0303 	and.w	r3, r3, #3
900119dc:	3a01      	subs	r2, #1
900119de:	440b      	add	r3, r1
900119e0:	428b      	cmp	r3, r1
900119e2:	d90c      	bls.n	900119fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900119e4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900119e8:	f801 0b01 	strb.w	r0, [r1], #1
900119ec:	e7f8      	b.n	900119e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900119ee:	0790      	lsls	r0, r2, #30
900119f0:	d0e7      	beq.n	900119c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900119f2:	f832 0b02 	ldrh.w	r0, [r2], #2
900119f6:	3b02      	subs	r3, #2
900119f8:	f821 0b02 	strh.w	r0, [r1], #2
900119fc:	e7e1      	b.n	900119c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900119fe:	2001      	movs	r0, #1
90011a00:	bd10      	pop	{r4, pc}

90011a02 <_ZN8touchgfx3HAL7noTouchEv>:
90011a02:	b510      	push	{r4, lr}
90011a04:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90011a08:	4604      	mov	r4, r0
90011a0a:	b153      	cbz	r3, 90011a22 <_ZN8touchgfx3HAL7noTouchEv+0x20>
90011a0c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90011a10:	2101      	movs	r1, #1
90011a12:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90011a16:	301c      	adds	r0, #28
90011a18:	f017 fdc6 	bl	900295a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011a1c:	2300      	movs	r3, #0
90011a1e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90011a22:	bd10      	pop	{r4, pc}

90011a24 <_ZN8touchgfx8Drawable5setXYEss>:
90011a24:	b570      	push	{r4, r5, r6, lr}
90011a26:	6803      	ldr	r3, [r0, #0]
90011a28:	4604      	mov	r4, r0
90011a2a:	4615      	mov	r5, r2
90011a2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011a2e:	4798      	blx	r3
90011a30:	6823      	ldr	r3, [r4, #0]
90011a32:	4629      	mov	r1, r5
90011a34:	4620      	mov	r0, r4
90011a36:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011a38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011a3c:	4718      	bx	r3
	...

90011a40 <_ZN8touchgfx3HAL3lcdEv>:
90011a40:	4b04      	ldr	r3, [pc, #16]	@ (90011a54 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90011a42:	681b      	ldr	r3, [r3, #0]
90011a44:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90011a48:	b10a      	cbz	r2, 90011a4e <_ZN8touchgfx3HAL3lcdEv+0xe>
90011a4a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90011a4c:	b900      	cbnz	r0, 90011a50 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011a4e:	6898      	ldr	r0, [r3, #8]
90011a50:	4770      	bx	lr
90011a52:	bf00      	nop
90011a54:	24021d64 	.word	0x24021d64

90011a58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011a58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011a5c:	b085      	sub	sp, #20
90011a5e:	4604      	mov	r4, r0
90011a60:	2000      	movs	r0, #0
90011a62:	4699      	mov	r9, r3
90011a64:	ad04      	add	r5, sp, #16
90011a66:	460f      	mov	r7, r1
90011a68:	4690      	mov	r8, r2
90011a6a:	f845 0d04 	str.w	r0, [r5, #-4]!
90011a6e:	69a0      	ldr	r0, [r4, #24]
90011a70:	6806      	ldr	r6, [r0, #0]
90011a72:	9501      	str	r5, [sp, #4]
90011a74:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90011a78:	9500      	str	r5, [sp, #0]
90011a7a:	6835      	ldr	r5, [r6, #0]
90011a7c:	47a8      	blx	r5
90011a7e:	4d10      	ldr	r5, [pc, #64]	@ (90011ac0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011a80:	4606      	mov	r6, r0
90011a82:	f8a5 9000 	strh.w	r9, [r5]
90011a86:	f7ff ffdb 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011a8a:	6803      	ldr	r3, [r0, #0]
90011a8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011a8e:	4798      	blx	r3
90011a90:	b128      	cbz	r0, 90011a9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90011a92:	2801      	cmp	r0, #1
90011a94:	d00b      	beq.n	90011aae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90011a96:	4630      	mov	r0, r6
90011a98:	b005      	add	sp, #20
90011a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011a9e:	882b      	ldrh	r3, [r5, #0]
90011aa0:	fb08 7203 	mla	r2, r8, r3, r7
90011aa4:	9b03      	ldr	r3, [sp, #12]
90011aa6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011aaa:	63e3      	str	r3, [r4, #60]	@ 0x3c
90011aac:	e7f3      	b.n	90011a96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011aae:	882a      	ldrh	r2, [r5, #0]
90011ab0:	9b03      	ldr	r3, [sp, #12]
90011ab2:	fb08 7202 	mla	r2, r8, r2, r7
90011ab6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011aba:	1a9a      	subs	r2, r3, r2
90011abc:	63e2      	str	r2, [r4, #60]	@ 0x3c
90011abe:	e7ea      	b.n	90011a96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011ac0:	24021d5e 	.word	0x24021d5e

90011ac4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
90011ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90011ac6:	4b15      	ldr	r3, [pc, #84]	@ (90011b1c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90011ac8:	460f      	mov	r7, r1
90011aca:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
90011ace:	4606      	mov	r6, r0
90011ad0:	881b      	ldrh	r3, [r3, #0]
90011ad2:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90011ad4:	fb93 f4f4 	sdiv	r4, r3, r4
90011ad8:	f7ff ffb2 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011adc:	6803      	ldr	r3, [r0, #0]
90011ade:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ae0:	4798      	blx	r3
90011ae2:	2801      	cmp	r0, #1
90011ae4:	d00b      	beq.n	90011afe <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
90011ae6:	d303      	bcc.n	90011af0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90011ae8:	2802      	cmp	r0, #2
90011aea:	d010      	beq.n	90011b0e <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90011aec:	63f5      	str	r5, [r6, #60]	@ 0x3c
90011aee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011af0:	4b0b      	ldr	r3, [pc, #44]	@ (90011b20 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90011af2:	437c      	muls	r4, r7
90011af4:	8819      	ldrh	r1, [r3, #0]
90011af6:	434c      	muls	r4, r1
90011af8:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90011afc:	e7f6      	b.n	90011aec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011afe:	4b08      	ldr	r3, [pc, #32]	@ (90011b20 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90011b00:	437c      	muls	r4, r7
90011b02:	8819      	ldrh	r1, [r3, #0]
90011b04:	434c      	muls	r4, r1
90011b06:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90011b0a:	1b2d      	subs	r5, r5, r4
90011b0c:	e7ee      	b.n	90011aec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011b0e:	4b04      	ldr	r3, [pc, #16]	@ (90011b20 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90011b10:	437c      	muls	r4, r7
90011b12:	8819      	ldrh	r1, [r3, #0]
90011b14:	434c      	muls	r4, r1
90011b16:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90011b1a:	e7e7      	b.n	90011aec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011b1c:	24021d60 	.word	0x24021d60
90011b20:	24021d5e 	.word	0x24021d5e

90011b24 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90011b24:	b5f0      	push	{r4, r5, r6, r7, lr}
90011b26:	b08b      	sub	sp, #44	@ 0x2c
90011b28:	4617      	mov	r7, r2
90011b2a:	4604      	mov	r4, r0
90011b2c:	460e      	mov	r6, r1
90011b2e:	461d      	mov	r5, r3
90011b30:	f7ff ff86 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011b34:	6803      	ldr	r3, [r0, #0]
90011b36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011b38:	4798      	blx	r3
90011b3a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90011b3e:	9007      	str	r0, [sp, #28]
90011b40:	4631      	mov	r1, r6
90011b42:	6822      	ldr	r2, [r4, #0]
90011b44:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011b48:	4b0c      	ldr	r3, [pc, #48]	@ (90011b7c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011b4a:	4620      	mov	r0, r4
90011b4c:	881b      	ldrh	r3, [r3, #0]
90011b4e:	9306      	str	r3, [sp, #24]
90011b50:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011b54:	9305      	str	r3, [sp, #20]
90011b56:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90011b5a:	9304      	str	r3, [sp, #16]
90011b5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011b60:	9303      	str	r3, [sp, #12]
90011b62:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011b66:	9302      	str	r3, [sp, #8]
90011b68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011b6c:	e9cd 5300 	strd	r5, r3, [sp]
90011b70:	463b      	mov	r3, r7
90011b72:	6c15      	ldr	r5, [r2, #64]	@ 0x40
90011b74:	2200      	movs	r2, #0
90011b76:	47a8      	blx	r5
90011b78:	b00b      	add	sp, #44	@ 0x2c
90011b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011b7c:	24021d5e 	.word	0x24021d5e

90011b80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011b80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011b84:	4698      	mov	r8, r3
90011b86:	6803      	ldr	r3, [r0, #0]
90011b88:	b08b      	sub	sp, #44	@ 0x2c
90011b8a:	4617      	mov	r7, r2
90011b8c:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
90011b8e:	460e      	mov	r6, r1
90011b90:	4b13      	ldr	r3, [pc, #76]	@ (90011be0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90011b92:	4604      	mov	r4, r0
90011b94:	f8b3 9000 	ldrh.w	r9, [r3]
90011b98:	f7ff ff52 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011b9c:	6803      	ldr	r3, [r0, #0]
90011b9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ba0:	4798      	blx	r3
90011ba2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90011ba6:	2200      	movs	r2, #0
90011ba8:	4631      	mov	r1, r6
90011baa:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011bae:	2302      	movs	r3, #2
90011bb0:	4620      	mov	r0, r4
90011bb2:	e9cd 9306 	strd	r9, r3, [sp, #24]
90011bb6:	2301      	movs	r3, #1
90011bb8:	9305      	str	r3, [sp, #20]
90011bba:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90011bbe:	9304      	str	r3, [sp, #16]
90011bc0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90011bc4:	9303      	str	r3, [sp, #12]
90011bc6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011bca:	9302      	str	r3, [sp, #8]
90011bcc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011bd0:	e9cd 8300 	strd	r8, r3, [sp]
90011bd4:	463b      	mov	r3, r7
90011bd6:	47a8      	blx	r5
90011bd8:	b00b      	add	sp, #44	@ 0x2c
90011bda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011bde:	bf00      	nop
90011be0:	24021d5e 	.word	0x24021d5e

90011be4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90011be4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011be8:	4698      	mov	r8, r3
90011bea:	6803      	ldr	r3, [r0, #0]
90011bec:	b087      	sub	sp, #28
90011bee:	460e      	mov	r6, r1
90011bf0:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
90011bf2:	4617      	mov	r7, r2
90011bf4:	4b0f      	ldr	r3, [pc, #60]	@ (90011c34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90011bf6:	4604      	mov	r4, r0
90011bf8:	f8b3 9000 	ldrh.w	r9, [r3]
90011bfc:	f7ff ff20 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011c00:	6803      	ldr	r3, [r0, #0]
90011c02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011c04:	4798      	blx	r3
90011c06:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90011c0a:	463a      	mov	r2, r7
90011c0c:	4631      	mov	r1, r6
90011c0e:	f8cd 900c 	str.w	r9, [sp, #12]
90011c12:	e9cd 0304 	strd	r0, r3, [sp, #16]
90011c16:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90011c1a:	4620      	mov	r0, r4
90011c1c:	9302      	str	r3, [sp, #8]
90011c1e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90011c22:	9301      	str	r3, [sp, #4]
90011c24:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90011c28:	9300      	str	r3, [sp, #0]
90011c2a:	4643      	mov	r3, r8
90011c2c:	47a8      	blx	r5
90011c2e:	b007      	add	sp, #28
90011c30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011c34:	24021d5e 	.word	0x24021d5e

90011c38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011c3c:	4604      	mov	r4, r0
90011c3e:	b08f      	sub	sp, #60	@ 0x3c
90011c40:	4610      	mov	r0, r2
90011c42:	460d      	mov	r5, r1
90011c44:	4691      	mov	r9, r2
90011c46:	461e      	mov	r6, r3
90011c48:	f009 f93a 	bl	9001aec0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011c4c:	2800      	cmp	r0, #0
90011c4e:	f000 809d 	beq.w	90011d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90011c52:	6823      	ldr	r3, [r4, #0]
90011c54:	4620      	mov	r0, r4
90011c56:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90011df0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011c5a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90011c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011c60:	4798      	blx	r3
90011c62:	6823      	ldr	r3, [r4, #0]
90011c64:	4620      	mov	r0, r4
90011c66:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90011df4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011c6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011c6c:	4798      	blx	r3
90011c6e:	f8bb 3000 	ldrh.w	r3, [fp]
90011c72:	4f5c      	ldr	r7, [pc, #368]	@ (90011de4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011c74:	9301      	str	r3, [sp, #4]
90011c76:	f8ba 3000 	ldrh.w	r3, [sl]
90011c7a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011c7e:	4640      	mov	r0, r8
90011c80:	9302      	str	r3, [sp, #8]
90011c82:	883b      	ldrh	r3, [r7, #0]
90011c84:	9303      	str	r3, [sp, #12]
90011c86:	4b58      	ldr	r3, [pc, #352]	@ (90011de8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011c88:	881a      	ldrh	r2, [r3, #0]
90011c8a:	9305      	str	r3, [sp, #20]
90011c8c:	9204      	str	r2, [sp, #16]
90011c8e:	f009 f9ab 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011c92:	8038      	strh	r0, [r7, #0]
90011c94:	4640      	mov	r0, r8
90011c96:	f009 f9db 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011c9a:	9b05      	ldr	r3, [sp, #20]
90011c9c:	b280      	uxth	r0, r0
90011c9e:	8018      	strh	r0, [r3, #0]
90011ca0:	4b52      	ldr	r3, [pc, #328]	@ (90011dec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90011ca2:	781b      	ldrb	r3, [r3, #0]
90011ca4:	2b00      	cmp	r3, #0
90011ca6:	d174      	bne.n	90011d92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011ca8:	883b      	ldrh	r3, [r7, #0]
90011caa:	f8aa 0000 	strh.w	r0, [sl]
90011cae:	f8ab 3000 	strh.w	r3, [fp]
90011cb2:	4648      	mov	r0, r9
90011cb4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90011cb8:	f009 f902 	bl	9001aec0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011cbc:	2200      	movs	r2, #0
90011cbe:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90011cc2:	4611      	mov	r1, r2
90011cc4:	4628      	mov	r0, r5
90011cc6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90011cca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90011cce:	f7ff fea9 	bl	90011a24 <_ZN8touchgfx8Drawable5setXYEss>
90011cd2:	2301      	movs	r3, #1
90011cd4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90011cd8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90011cdc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011ce0:	2b00      	cmp	r3, #0
90011ce2:	dd5c      	ble.n	90011d9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011ce4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011ce8:	2b00      	cmp	r3, #0
90011cea:	dd58      	ble.n	90011d9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011cec:	462a      	mov	r2, r5
90011cee:	ab0a      	add	r3, sp, #40	@ 0x28
90011cf0:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011cf4:	6851      	ldr	r1, [r2, #4]
90011cf6:	c303      	stmia	r3!, {r0, r1}
90011cf8:	4631      	mov	r1, r6
90011cfa:	a80a      	add	r0, sp, #40	@ 0x28
90011cfc:	f7ff fbae 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90011d00:	4b38      	ldr	r3, [pc, #224]	@ (90011de4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011d02:	2100      	movs	r1, #0
90011d04:	f9b3 2000 	ldrsh.w	r2, [r3]
90011d08:	4b37      	ldr	r3, [pc, #220]	@ (90011de8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011d0a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90011d0e:	aa0a      	add	r2, sp, #40	@ 0x28
90011d10:	f9b3 3000 	ldrsh.w	r3, [r3]
90011d14:	910c      	str	r1, [sp, #48]	@ 0x30
90011d16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90011d1a:	ab08      	add	r3, sp, #32
90011d1c:	e892 0003 	ldmia.w	r2, {r0, r1}
90011d20:	e883 0003 	stmia.w	r3, {r0, r1}
90011d24:	4618      	mov	r0, r3
90011d26:	a90c      	add	r1, sp, #48	@ 0x30
90011d28:	f7ff fb98 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90011d2c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90011d2e:	2b00      	cmp	r3, #0
90011d30:	d13c      	bne.n	90011dac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90011d32:	2000      	movs	r0, #0
90011d34:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90011d38:	2600      	movs	r6, #0
90011d3a:	696b      	ldr	r3, [r5, #20]
90011d3c:	a908      	add	r1, sp, #32
90011d3e:	682a      	ldr	r2, [r5, #0]
90011d40:	4628      	mov	r0, r5
90011d42:	9305      	str	r3, [sp, #20]
90011d44:	616e      	str	r6, [r5, #20]
90011d46:	6892      	ldr	r2, [r2, #8]
90011d48:	4790      	blx	r2
90011d4a:	9b05      	ldr	r3, [sp, #20]
90011d4c:	4652      	mov	r2, sl
90011d4e:	4649      	mov	r1, r9
90011d50:	616b      	str	r3, [r5, #20]
90011d52:	4628      	mov	r0, r5
90011d54:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90011d58:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90011d5c:	f7ff fe62 	bl	90011a24 <_ZN8touchgfx8Drawable5setXYEss>
90011d60:	9a01      	ldr	r2, [sp, #4]
90011d62:	4b23      	ldr	r3, [pc, #140]	@ (90011df0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90011d64:	4620      	mov	r0, r4
90011d66:	801a      	strh	r2, [r3, #0]
90011d68:	9a02      	ldr	r2, [sp, #8]
90011d6a:	4b22      	ldr	r3, [pc, #136]	@ (90011df4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90011d6c:	801a      	strh	r2, [r3, #0]
90011d6e:	9a03      	ldr	r2, [sp, #12]
90011d70:	4b1c      	ldr	r3, [pc, #112]	@ (90011de4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011d72:	801a      	strh	r2, [r3, #0]
90011d74:	4b1c      	ldr	r3, [pc, #112]	@ (90011de8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011d76:	9a04      	ldr	r2, [sp, #16]
90011d78:	801a      	strh	r2, [r3, #0]
90011d7a:	6823      	ldr	r3, [r4, #0]
90011d7c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90011d80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011d82:	4798      	blx	r3
90011d84:	6823      	ldr	r3, [r4, #0]
90011d86:	4620      	mov	r0, r4
90011d88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011d8a:	4798      	blx	r3
90011d8c:	b00f      	add	sp, #60	@ 0x3c
90011d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011d92:	883b      	ldrh	r3, [r7, #0]
90011d94:	f8ab 0000 	strh.w	r0, [fp]
90011d98:	f8aa 3000 	strh.w	r3, [sl]
90011d9c:	e789      	b.n	90011cb2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90011d9e:	462a      	mov	r2, r5
90011da0:	ab0a      	add	r3, sp, #40	@ 0x28
90011da2:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011da6:	6851      	ldr	r1, [r2, #4]
90011da8:	c303      	stmia	r3!, {r0, r1}
90011daa:	e7a9      	b.n	90011d00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90011dac:	a807      	add	r0, sp, #28
90011dae:	f009 fa91 	bl	9001b2d4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90011db2:	4606      	mov	r6, r0
90011db4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90011db6:	6803      	ldr	r3, [r0, #0]
90011db8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011dba:	4798      	blx	r3
90011dbc:	4286      	cmp	r6, r0
90011dbe:	d1b8      	bne.n	90011d32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011dc0:	f7ff fe3e 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90011dc4:	6803      	ldr	r3, [r0, #0]
90011dc6:	4606      	mov	r6, r0
90011dc8:	a807      	add	r0, sp, #28
90011dca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011dcc:	9305      	str	r3, [sp, #20]
90011dce:	f009 fa81 	bl	9001b2d4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90011dd2:	9b05      	ldr	r3, [sp, #20]
90011dd4:	4601      	mov	r1, r0
90011dd6:	4630      	mov	r0, r6
90011dd8:	4798      	blx	r3
90011dda:	f080 0001 	eor.w	r0, r0, #1
90011dde:	b2c0      	uxtb	r0, r0
90011de0:	e7a8      	b.n	90011d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90011de2:	bf00      	nop
90011de4:	24021d58 	.word	0x24021d58
90011de8:	24021d5a 	.word	0x24021d5a
90011dec:	24021d5c 	.word	0x24021d5c
90011df0:	24021d5e 	.word	0x24021d5e
90011df4:	24021d60 	.word	0x24021d60

90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011df8:	4b07      	ldr	r3, [pc, #28]	@ (90011e18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90011dfa:	b510      	push	{r4, lr}
90011dfc:	781b      	ldrb	r3, [r3, #0]
90011dfe:	4604      	mov	r4, r0
90011e00:	b13b      	cbz	r3, 90011e12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011e02:	6803      	ldr	r3, [r0, #0]
90011e04:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011e06:	4798      	blx	r3
90011e08:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90011e0a:	4283      	cmp	r3, r0
90011e0c:	d101      	bne.n	90011e12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011e0e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90011e10:	bd10      	pop	{r4, pc}
90011e12:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90011e14:	e7fc      	b.n	90011e10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90011e16:	bf00      	nop
90011e18:	24021d62 	.word	0x24021d62

90011e1c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011e1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011e20:	461d      	mov	r5, r3
90011e22:	b08a      	sub	sp, #40	@ 0x28
90011e24:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90011e28:	4690      	mov	r8, r2
90011e2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90011e2e:	2400      	movs	r4, #0
90011e30:	4607      	mov	r7, r0
90011e32:	fb06 8505 	mla	r5, r6, r5, r8
90011e36:	9404      	str	r4, [sp, #16]
90011e38:	f88d 4020 	strb.w	r4, [sp, #32]
90011e3c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011e40:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011e44:	f8ad 3018 	strh.w	r3, [sp, #24]
90011e48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011e4c:	f8ad 301a 	strh.w	r3, [sp, #26]
90011e50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011e54:	f8ad 301c 	strh.w	r3, [sp, #28]
90011e58:	f7ff ffce 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011e5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011e60:	6878      	ldr	r0, [r7, #4]
90011e62:	f8ad 601e 	strh.w	r6, [sp, #30]
90011e66:	a901      	add	r1, sp, #4
90011e68:	9505      	str	r5, [sp, #20]
90011e6a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011e6e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90011e72:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90011e76:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011e7a:	6803      	ldr	r3, [r0, #0]
90011e7c:	685b      	ldr	r3, [r3, #4]
90011e7e:	4798      	blx	r3
90011e80:	b00a      	add	sp, #40	@ 0x28
90011e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011e86 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90011e86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011e8a:	b08b      	sub	sp, #44	@ 0x2c
90011e8c:	2400      	movs	r4, #0
90011e8e:	4691      	mov	r9, r2
90011e90:	461d      	mov	r5, r3
90011e92:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90011e96:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90011e9a:	4688      	mov	r8, r1
90011e9c:	4607      	mov	r7, r0
90011e9e:	9404      	str	r4, [sp, #16]
90011ea0:	fb06 9505 	mla	r5, r6, r5, r9
90011ea4:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011ea8:	f7ff ffa6 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011eac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011eb0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011eb4:	6878      	ldr	r0, [r7, #4]
90011eb6:	f8ad 3018 	strh.w	r3, [sp, #24]
90011eba:	a901      	add	r1, sp, #4
90011ebc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011ec0:	9505      	str	r5, [sp, #20]
90011ec2:	f8ad 301a 	strh.w	r3, [sp, #26]
90011ec6:	f8ad 401c 	strh.w	r4, [sp, #28]
90011eca:	f8ad 601e 	strh.w	r6, [sp, #30]
90011ece:	f8cd 8010 	str.w	r8, [sp, #16]
90011ed2:	f8ad 4020 	strh.w	r4, [sp, #32]
90011ed6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011eda:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90011ede:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011ee2:	6803      	ldr	r3, [r0, #0]
90011ee4:	685b      	ldr	r3, [r3, #4]
90011ee6:	4798      	blx	r3
90011ee8:	b00b      	add	sp, #44	@ 0x2c
90011eea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011ef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011ef4:	b08a      	sub	sp, #40	@ 0x28
90011ef6:	4698      	mov	r8, r3
90011ef8:	2300      	movs	r3, #0
90011efa:	4606      	mov	r6, r0
90011efc:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90011f00:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90011f04:	2d0b      	cmp	r5, #11
90011f06:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90011f0a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90011f0e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90011f12:	9304      	str	r3, [sp, #16]
90011f14:	d137      	bne.n	90011f86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90011f16:	2380      	movs	r3, #128	@ 0x80
90011f18:	f88d 0020 	strb.w	r0, [sp, #32]
90011f1c:	4630      	mov	r0, r6
90011f1e:	9203      	str	r2, [sp, #12]
90011f20:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011f24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011f28:	f8ad 3018 	strh.w	r3, [sp, #24]
90011f2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011f30:	f8ad 301a 	strh.w	r3, [sp, #26]
90011f34:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011f38:	f8ad 301c 	strh.w	r3, [sp, #28]
90011f3c:	f7ff ff5c 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011f40:	2c0b      	cmp	r4, #11
90011f42:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90011f46:	f8ad 701e 	strh.w	r7, [sp, #30]
90011f4a:	bf94      	ite	ls
90011f4c:	4b19      	ldrls	r3, [pc, #100]	@ (90011fb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011f4e:	2100      	movhi	r1, #0
90011f50:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90011f54:	bf98      	it	ls
90011f56:	5d19      	ldrbls	r1, [r3, r4]
90011f58:	fb02 8307 	mla	r3, r2, r7, r8
90011f5c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011f60:	10c9      	asrs	r1, r1, #3
90011f62:	fb01 0003 	mla	r0, r1, r3, r0
90011f66:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90011f6a:	a901      	add	r1, sp, #4
90011f6c:	9005      	str	r0, [sp, #20]
90011f6e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011f72:	2300      	movs	r3, #0
90011f74:	6870      	ldr	r0, [r6, #4]
90011f76:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011f7a:	6803      	ldr	r3, [r0, #0]
90011f7c:	685b      	ldr	r3, [r3, #4]
90011f7e:	4798      	blx	r3
90011f80:	b00a      	add	sp, #40	@ 0x28
90011f82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011f86:	2d02      	cmp	r5, #2
90011f88:	d109      	bne.n	90011f9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011f8a:	28ff      	cmp	r0, #255	@ 0xff
90011f8c:	d105      	bne.n	90011f9a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011f8e:	f1bc 0f00 	cmp.w	ip, #0
90011f92:	bf14      	ite	ne
90011f94:	2340      	movne	r3, #64	@ 0x40
90011f96:	2320      	moveq	r3, #32
90011f98:	e7be      	b.n	90011f18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f9a:	2340      	movs	r3, #64	@ 0x40
90011f9c:	e7bc      	b.n	90011f18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f9e:	28ff      	cmp	r0, #255	@ 0xff
90011fa0:	d105      	bne.n	90011fae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011fa2:	f1bc 0f00 	cmp.w	ip, #0
90011fa6:	bf14      	ite	ne
90011fa8:	2304      	movne	r3, #4
90011faa:	2301      	moveq	r3, #1
90011fac:	e7b4      	b.n	90011f18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011fae:	2304      	movs	r3, #4
90011fb0:	e7b2      	b.n	90011f18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011fb2:	bf00      	nop
90011fb4:	9002e5b4 	.word	0x9002e5b4

90011fb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011fbc:	b08b      	sub	sp, #44	@ 0x2c
90011fbe:	461d      	mov	r5, r3
90011fc0:	2400      	movs	r4, #0
90011fc2:	4688      	mov	r8, r1
90011fc4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90011fc8:	4693      	mov	fp, r2
90011fca:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90011fce:	4607      	mov	r7, r0
90011fd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90011fd4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90011fd8:	9404      	str	r4, [sp, #16]
90011fda:	bf14      	ite	ne
90011fdc:	2308      	movne	r3, #8
90011fde:	2302      	moveq	r3, #2
90011fe0:	fb05 b50a 	mla	r5, r5, sl, fp
90011fe4:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011fe8:	f7ff ff06 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011fec:	2e0b      	cmp	r6, #11
90011fee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90011ff2:	a901      	add	r1, sp, #4
90011ff4:	bf98      	it	ls
90011ff6:	4b13      	ldrls	r3, [pc, #76]	@ (90012044 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011ff8:	f8ad a01e 	strh.w	sl, [sp, #30]
90011ffc:	bf98      	it	ls
90011ffe:	5d9c      	ldrbls	r4, [r3, r6]
90012000:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90012004:	10e4      	asrs	r4, r4, #3
90012006:	f8cd 8010 	str.w	r8, [sp, #16]
9001200a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001200e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90012012:	fb04 0405 	mla	r4, r4, r5, r0
90012016:	6878      	ldr	r0, [r7, #4]
90012018:	f8ad 301a 	strh.w	r3, [sp, #26]
9001201c:	2300      	movs	r3, #0
9001201e:	9405      	str	r4, [sp, #20]
90012020:	f8ad 301c 	strh.w	r3, [sp, #28]
90012024:	f88d 9020 	strb.w	r9, [sp, #32]
90012028:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
9001202c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90012030:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90012034:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90012038:	6803      	ldr	r3, [r0, #0]
9001203a:	685b      	ldr	r3, [r3, #4]
9001203c:	4798      	blx	r3
9001203e:	b00b      	add	sp, #44	@ 0x2c
90012040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012044:	9002e5b4 	.word	0x9002e5b4

90012048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90012048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001204c:	461e      	mov	r6, r3
9001204e:	4b0a      	ldr	r3, [pc, #40]	@ (90012078 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90012050:	460f      	mov	r7, r1
90012052:	4690      	mov	r8, r2
90012054:	881d      	ldrh	r5, [r3, #0]
90012056:	f7ff fcf3 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
9001205a:	6803      	ldr	r3, [r0, #0]
9001205c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001205e:	4798      	blx	r3
90012060:	280b      	cmp	r0, #11
90012062:	bf96      	itet	ls
90012064:	4b05      	ldrls	r3, [pc, #20]	@ (9001207c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90012066:	2400      	movhi	r4, #0
90012068:	5c1c      	ldrbls	r4, [r3, r0]
9001206a:	fb08 7005 	mla	r0, r8, r5, r7
9001206e:	10e4      	asrs	r4, r4, #3
90012070:	fb04 6000 	mla	r0, r4, r0, r6
90012074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012078:	24021d5e 	.word	0x24021d5e
9001207c:	9002e5b4 	.word	0x9002e5b4

90012080 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90012080:	b5f0      	push	{r4, r5, r6, r7, lr}
90012082:	b08b      	sub	sp, #44	@ 0x2c
90012084:	461f      	mov	r7, r3
90012086:	4604      	mov	r4, r0
90012088:	4616      	mov	r6, r2
9001208a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001208e:	2500      	movs	r5, #0
90012090:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012094:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012098:	9504      	str	r5, [sp, #16]
9001209a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001209e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900120a2:	f8ad 301a 	strh.w	r3, [sp, #26]
900120a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900120aa:	f8ad 301c 	strh.w	r3, [sp, #28]
900120ae:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900120b2:	f88d 3020 	strb.w	r3, [sp, #32]
900120b6:	f7ff fe9f 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900120ba:	463a      	mov	r2, r7
900120bc:	4631      	mov	r1, r6
900120be:	4603      	mov	r3, r0
900120c0:	4620      	mov	r0, r4
900120c2:	f7ff ffc1 	bl	90012048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900120c6:	4b0e      	ldr	r3, [pc, #56]	@ (90012100 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900120c8:	9005      	str	r0, [sp, #20]
900120ca:	881b      	ldrh	r3, [r3, #0]
900120cc:	f8ad 301e 	strh.w	r3, [sp, #30]
900120d0:	f7ff fcb6 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
900120d4:	6803      	ldr	r3, [r0, #0]
900120d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900120d8:	4798      	blx	r3
900120da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900120dc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
900120e0:	a901      	add	r1, sp, #4
900120e2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900120e6:	9304      	str	r3, [sp, #16]
900120e8:	6860      	ldr	r0, [r4, #4]
900120ea:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900120ee:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
900120f2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900120f6:	6803      	ldr	r3, [r0, #0]
900120f8:	685b      	ldr	r3, [r3, #4]
900120fa:	4798      	blx	r3
900120fc:	b00b      	add	sp, #44	@ 0x2c
900120fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012100:	24021d5e 	.word	0x24021d5e

90012104 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90012104:	b5f0      	push	{r4, r5, r6, r7, lr}
90012106:	b08d      	sub	sp, #52	@ 0x34
90012108:	2501      	movs	r5, #1
9001210a:	4604      	mov	r4, r0
9001210c:	466b      	mov	r3, sp
9001210e:	9503      	str	r5, [sp, #12]
90012110:	e883 0006 	stmia.w	r3, {r1, r2}
90012114:	2300      	movs	r3, #0
90012116:	f8bd 6000 	ldrh.w	r6, [sp]
9001211a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001211e:	9306      	str	r3, [sp, #24]
90012120:	6803      	ldr	r3, [r0, #0]
90012122:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012124:	4798      	blx	r3
90012126:	463a      	mov	r2, r7
90012128:	4631      	mov	r1, r6
9001212a:	4603      	mov	r3, r0
9001212c:	4620      	mov	r0, r4
9001212e:	f7ff ff8b 	bl	90012048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012132:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90012134:	9004      	str	r0, [sp, #16]
90012136:	9307      	str	r3, [sp, #28]
90012138:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001213c:	f8ad 3020 	strh.w	r3, [sp, #32]
90012140:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012144:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90012148:	4b0e      	ldr	r3, [pc, #56]	@ (90012184 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
9001214a:	881b      	ldrh	r3, [r3, #0]
9001214c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90012150:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90012154:	f7ff fc74 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
90012158:	6803      	ldr	r3, [r0, #0]
9001215a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001215c:	4798      	blx	r3
9001215e:	23ff      	movs	r3, #255	@ 0xff
90012160:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012164:	a903      	add	r1, sp, #12
90012166:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001216a:	6860      	ldr	r0, [r4, #4]
9001216c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012170:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012174:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012178:	6803      	ldr	r3, [r0, #0]
9001217a:	685b      	ldr	r3, [r3, #4]
9001217c:	4798      	blx	r3
9001217e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90012180:	b00d      	add	sp, #52	@ 0x34
90012182:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012184:	24021d5e 	.word	0x24021d5e

90012188 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90012188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001218c:	b08c      	sub	sp, #48	@ 0x30
9001218e:	461e      	mov	r6, r3
90012190:	2300      	movs	r3, #0
90012192:	4604      	mov	r4, r0
90012194:	466d      	mov	r5, sp
90012196:	9306      	str	r3, [sp, #24]
90012198:	6803      	ldr	r3, [r0, #0]
9001219a:	e885 0006 	stmia.w	r5, {r1, r2}
9001219e:	2501      	movs	r5, #1
900121a0:	f8bd 7000 	ldrh.w	r7, [sp]
900121a4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900121a8:	9503      	str	r5, [sp, #12]
900121aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900121ac:	4798      	blx	r3
900121ae:	4642      	mov	r2, r8
900121b0:	4639      	mov	r1, r7
900121b2:	4603      	mov	r3, r0
900121b4:	4620      	mov	r0, r4
900121b6:	f7ff ff47 	bl	90012048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900121ba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900121be:	9004      	str	r0, [sp, #16]
900121c0:	f8ad 3020 	strh.w	r3, [sp, #32]
900121c4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900121c8:	9607      	str	r6, [sp, #28]
900121ca:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900121ce:	4b10      	ldr	r3, [pc, #64]	@ (90012210 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
900121d0:	881b      	ldrh	r3, [r3, #0]
900121d2:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900121d6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900121d8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900121dc:	f7ff fc30 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
900121e0:	6803      	ldr	r3, [r0, #0]
900121e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900121e4:	4798      	blx	r3
900121e6:	23ff      	movs	r3, #255	@ 0xff
900121e8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900121ec:	a903      	add	r1, sp, #12
900121ee:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900121f2:	6860      	ldr	r0, [r4, #4]
900121f4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900121f8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900121fc:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012200:	6803      	ldr	r3, [r0, #0]
90012202:	685b      	ldr	r3, [r3, #4]
90012204:	4798      	blx	r3
90012206:	4630      	mov	r0, r6
90012208:	b00c      	add	sp, #48	@ 0x30
9001220a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001220e:	bf00      	nop
90012210:	24021d5e 	.word	0x24021d5e

90012214 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90012214:	b5f0      	push	{r4, r5, r6, r7, lr}
90012216:	b085      	sub	sp, #20
90012218:	4605      	mov	r5, r0
9001221a:	ac02      	add	r4, sp, #8
9001221c:	e884 0006 	stmia.w	r4, {r1, r2}
90012220:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90012224:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90012228:	f7ff fde6 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001222c:	4631      	mov	r1, r6
9001222e:	4603      	mov	r3, r0
90012230:	463a      	mov	r2, r7
90012232:	4628      	mov	r0, r5
90012234:	f7ff ff08 	bl	90012048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012238:	4a05      	ldr	r2, [pc, #20]	@ (90012250 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
9001223a:	682b      	ldr	r3, [r5, #0]
9001223c:	8812      	ldrh	r2, [r2, #0]
9001223e:	9200      	str	r2, [sp, #0]
90012240:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90012242:	4603      	mov	r3, r0
90012244:	4628      	mov	r0, r5
90012246:	e894 0006 	ldmia.w	r4, {r1, r2}
9001224a:	47b0      	blx	r6
9001224c:	b005      	add	sp, #20
9001224e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012250:	24021d5e 	.word	0x24021d5e

90012254 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90012254:	b570      	push	{r4, r5, r6, lr}
90012256:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
9001225a:	4604      	mov	r4, r0
9001225c:	b19b      	cbz	r3, 90012286 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
9001225e:	2002      	movs	r0, #2
90012260:	f7ee fd80 	bl	90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90012264:	2300      	movs	r3, #0
90012266:	4620      	mov	r0, r4
90012268:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001226c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90012270:	6823      	ldr	r3, [r4, #0]
90012272:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
90012276:	f7ff fdbf 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001227a:	4601      	mov	r1, r0
9001227c:	4620      	mov	r0, r4
9001227e:	462b      	mov	r3, r5
90012280:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012284:	4718      	bx	r3
90012286:	bd70      	pop	{r4, r5, r6, pc}

90012288 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90012288:	b570      	push	{r4, r5, r6, lr}
9001228a:	4605      	mov	r5, r0
9001228c:	460c      	mov	r4, r1
9001228e:	2003      	movs	r0, #3
90012290:	b149      	cbz	r1, 900122a6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90012292:	f7ee fcff 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012296:	6928      	ldr	r0, [r5, #16]
90012298:	b168      	cbz	r0, 900122b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001229a:	6803      	ldr	r3, [r0, #0]
9001229c:	2101      	movs	r1, #1
9001229e:	695b      	ldr	r3, [r3, #20]
900122a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900122a4:	4718      	bx	r3
900122a6:	f7ee fd29 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900122aa:	6928      	ldr	r0, [r5, #16]
900122ac:	b118      	cbz	r0, 900122b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900122ae:	6803      	ldr	r3, [r0, #0]
900122b0:	4621      	mov	r1, r4
900122b2:	695b      	ldr	r3, [r3, #20]
900122b4:	e7f4      	b.n	900122a0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900122b6:	bd70      	pop	{r4, r5, r6, pc}

900122b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900122b8:	b538      	push	{r3, r4, r5, lr}
900122ba:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900122be:	4604      	mov	r4, r0
900122c0:	460d      	mov	r5, r1
900122c2:	428b      	cmp	r3, r1
900122c4:	d006      	beq.n	900122d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900122c6:	6803      	ldr	r3, [r0, #0]
900122c8:	b929      	cbnz	r1, 900122d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900122ca:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
900122ce:	4798      	blx	r3
900122d0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900122d4:	bd38      	pop	{r3, r4, r5, pc}
900122d6:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
900122da:	e7f8      	b.n	900122ce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

900122dc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
900122dc:	4b0c      	ldr	r3, [pc, #48]	@ (90012310 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
900122de:	b510      	push	{r4, lr}
900122e0:	781b      	ldrb	r3, [r3, #0]
900122e2:	4604      	mov	r4, r0
900122e4:	b953      	cbnz	r3, 900122fc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900122e6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
900122ea:	b93b      	cbnz	r3, 900122fc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900122ec:	6840      	ldr	r0, [r0, #4]
900122ee:	f000 f919 	bl	90012524 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
900122f2:	b118      	cbz	r0, 900122fc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900122f4:	6862      	ldr	r2, [r4, #4]
900122f6:	7a53      	ldrb	r3, [r2, #9]
900122f8:	2b00      	cmp	r3, #0
900122fa:	d0fc      	beq.n	900122f6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
900122fc:	f7f0 f846 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90012300:	4620      	mov	r0, r4
90012302:	2100      	movs	r1, #0
90012304:	f7ff ffd8 	bl	900122b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012308:	4620      	mov	r0, r4
9001230a:	f7ff fd75 	bl	90011df8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001230e:	bd10      	pop	{r4, pc}
90012310:	24021d62 	.word	0x24021d62

90012314 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90012314:	b570      	push	{r4, r5, r6, lr}
90012316:	4604      	mov	r4, r0
90012318:	6803      	ldr	r3, [r0, #0]
9001231a:	b919      	cbnz	r1, 90012324 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
9001231c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001231e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012322:	4718      	bx	r3
90012324:	2200      	movs	r2, #0
90012326:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
9001232a:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001232e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012330:	4798      	blx	r3
90012332:	6863      	ldr	r3, [r4, #4]
90012334:	2101      	movs	r1, #1
90012336:	4605      	mov	r5, r0
90012338:	4620      	mov	r0, r4
9001233a:	7299      	strb	r1, [r3, #10]
9001233c:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90012340:	f7ff ffba 	bl	900122b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012344:	4628      	mov	r0, r5
90012346:	bd70      	pop	{r4, r5, r6, pc}

90012348 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90012348:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
9001234c:	1a13      	subs	r3, r2, r0
9001234e:	4258      	negs	r0, r3
90012350:	4158      	adcs	r0, r3
90012352:	4770      	bx	lr

90012354 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90012354:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90012358:	1a9b      	subs	r3, r3, r2
9001235a:	2b00      	cmp	r3, #0
9001235c:	bfdc      	itt	le
9001235e:	6882      	ldrle	r2, [r0, #8]
90012360:	189b      	addle	r3, r3, r2
90012362:	2b01      	cmp	r3, #1
90012364:	bfcc      	ite	gt
90012366:	2000      	movgt	r0, #0
90012368:	2001      	movle	r0, #1
9001236a:	4770      	bx	lr

9001236c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
9001236c:	6902      	ldr	r2, [r0, #16]
9001236e:	6843      	ldr	r3, [r0, #4]
90012370:	2024      	movs	r0, #36	@ 0x24
90012372:	fb00 3002 	mla	r0, r0, r2, r3
90012376:	4770      	bx	lr

90012378 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90012378:	6803      	ldr	r3, [r0, #0]
9001237a:	691b      	ldr	r3, [r3, #16]
9001237c:	4718      	bx	r3

9001237e <_ZN8touchgfx13DMA_Interface7executeEv>:
9001237e:	2301      	movs	r3, #1
90012380:	b570      	push	{r4, r5, r6, lr}
90012382:	7203      	strb	r3, [r0, #8]
90012384:	4604      	mov	r4, r0
90012386:	6840      	ldr	r0, [r0, #4]
90012388:	6803      	ldr	r3, [r0, #0]
9001238a:	699b      	ldr	r3, [r3, #24]
9001238c:	4798      	blx	r3
9001238e:	6803      	ldr	r3, [r0, #0]
90012390:	4605      	mov	r5, r0
90012392:	2b40      	cmp	r3, #64	@ 0x40
90012394:	d00c      	beq.n	900123b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012396:	d810      	bhi.n	900123ba <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90012398:	2b04      	cmp	r3, #4
9001239a:	d01d      	beq.n	900123d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
9001239c:	d804      	bhi.n	900123a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
9001239e:	2b01      	cmp	r3, #1
900123a0:	d006      	beq.n	900123b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900123a2:	2b02      	cmp	r3, #2
900123a4:	d02c      	beq.n	90012400 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900123a6:	bd70      	pop	{r4, r5, r6, pc}
900123a8:	2b08      	cmp	r3, #8
900123aa:	d01d      	beq.n	900123e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900123ac:	2b20      	cmp	r3, #32
900123ae:	d1fa      	bne.n	900123a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900123b0:	6823      	ldr	r3, [r4, #0]
900123b2:	4620      	mov	r0, r4
900123b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900123b6:	4798      	blx	r3
900123b8:	e013      	b.n	900123e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900123ba:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900123be:	d0f7      	beq.n	900123b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900123c0:	d804      	bhi.n	900123cc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900123c2:	2b80      	cmp	r3, #128	@ 0x80
900123c4:	d0f4      	beq.n	900123b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900123c6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900123ca:	e7f0      	b.n	900123ae <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900123cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900123d0:	d0ee      	beq.n	900123b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900123d2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900123d6:	e7e5      	b.n	900123a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900123d8:	6823      	ldr	r3, [r4, #0]
900123da:	7f01      	ldrb	r1, [r0, #28]
900123dc:	4620      	mov	r0, r4
900123de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900123e0:	4798      	blx	r3
900123e2:	6823      	ldr	r3, [r4, #0]
900123e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900123e6:	e006      	b.n	900123f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
900123e8:	6823      	ldr	r3, [r4, #0]
900123ea:	7f01      	ldrb	r1, [r0, #28]
900123ec:	4620      	mov	r0, r4
900123ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900123f0:	4798      	blx	r3
900123f2:	6823      	ldr	r3, [r4, #0]
900123f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900123f6:	4629      	mov	r1, r5
900123f8:	4620      	mov	r0, r4
900123fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900123fe:	4718      	bx	r3
90012400:	6823      	ldr	r3, [r4, #0]
90012402:	4620      	mov	r0, r4
90012404:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012406:	4798      	blx	r3
90012408:	e7f3      	b.n	900123f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

9001240a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9001240a:	4770      	bx	lr

9001240c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
9001240c:	4770      	bx	lr

9001240e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001240e:	4770      	bx	lr

90012410 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90012410:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90012414:	b510      	push	{r4, lr}
90012416:	1ad2      	subs	r2, r2, r3
90012418:	2a00      	cmp	r2, #0
9001241a:	bfdc      	itt	le
9001241c:	6884      	ldrle	r4, [r0, #8]
9001241e:	1912      	addle	r2, r2, r4
90012420:	2a01      	cmp	r2, #1
90012422:	dd16      	ble.n	90012452 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90012424:	6842      	ldr	r2, [r0, #4]
90012426:	2424      	movs	r4, #36	@ 0x24
90012428:	fb04 2303 	mla	r3, r4, r3, r2
9001242c:	f101 0220 	add.w	r2, r1, #32
90012430:	f851 4b04 	ldr.w	r4, [r1], #4
90012434:	4291      	cmp	r1, r2
90012436:	f843 4b04 	str.w	r4, [r3], #4
9001243a:	d1f9      	bne.n	90012430 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
9001243c:	780a      	ldrb	r2, [r1, #0]
9001243e:	701a      	strb	r2, [r3, #0]
90012440:	68c3      	ldr	r3, [r0, #12]
90012442:	6882      	ldr	r2, [r0, #8]
90012444:	f3bf 8f5b 	dmb	ish
90012448:	3301      	adds	r3, #1
9001244a:	429a      	cmp	r2, r3
9001244c:	bfd8      	it	le
9001244e:	1a9b      	suble	r3, r3, r2
90012450:	60c3      	str	r3, [r0, #12]
90012452:	bd10      	pop	{r4, pc}

90012454 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90012454:	6903      	ldr	r3, [r0, #16]
90012456:	6882      	ldr	r2, [r0, #8]
90012458:	f3bf 8f5b 	dmb	ish
9001245c:	3301      	adds	r3, #1
9001245e:	429a      	cmp	r2, r3
90012460:	bfd8      	it	le
90012462:	1a9b      	suble	r3, r3, r2
90012464:	6103      	str	r3, [r0, #16]
90012466:	4770      	bx	lr

90012468 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90012468:	b570      	push	{r4, r5, r6, lr}
9001246a:	4604      	mov	r4, r0
9001246c:	460e      	mov	r6, r1
9001246e:	6860      	ldr	r0, [r4, #4]
90012470:	6803      	ldr	r3, [r0, #0]
90012472:	685b      	ldr	r3, [r3, #4]
90012474:	4798      	blx	r3
90012476:	2800      	cmp	r0, #0
90012478:	d1f9      	bne.n	9001246e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001247a:	4d0d      	ldr	r5, [pc, #52]	@ (900124b0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
9001247c:	6828      	ldr	r0, [r5, #0]
9001247e:	6803      	ldr	r3, [r0, #0]
90012480:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012484:	4798      	blx	r3
90012486:	f7ef ff8f 	bl	900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9001248a:	6828      	ldr	r0, [r5, #0]
9001248c:	2101      	movs	r1, #1
9001248e:	f7ff ff13 	bl	900122b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012492:	6860      	ldr	r0, [r4, #4]
90012494:	4631      	mov	r1, r6
90012496:	6803      	ldr	r3, [r0, #0]
90012498:	689b      	ldr	r3, [r3, #8]
9001249a:	4798      	blx	r3
9001249c:	6823      	ldr	r3, [r4, #0]
9001249e:	4620      	mov	r0, r4
900124a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900124a2:	4798      	blx	r3
900124a4:	6828      	ldr	r0, [r5, #0]
900124a6:	6803      	ldr	r3, [r0, #0]
900124a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900124ac:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900124ae:	4718      	bx	r3
900124b0:	24021d64 	.word	0x24021d64

900124b4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900124b4:	b508      	push	{r3, lr}
900124b6:	f7ef ff69 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900124ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900124be:	f7ef bf6d 	b.w	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900124c2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900124c2:	b510      	push	{r4, lr}
900124c4:	4604      	mov	r4, r0
900124c6:	2114      	movs	r1, #20
900124c8:	f017 fe3c 	bl	9002a144 <_ZdlPvj>
900124cc:	4620      	mov	r0, r4
900124ce:	bd10      	pop	{r4, pc}

900124d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900124d0:	b570      	push	{r4, r5, r6, lr}
900124d2:	4604      	mov	r4, r0
900124d4:	6840      	ldr	r0, [r0, #4]
900124d6:	6803      	ldr	r3, [r0, #0]
900124d8:	681b      	ldr	r3, [r3, #0]
900124da:	4798      	blx	r3
900124dc:	4605      	mov	r5, r0
900124de:	b930      	cbnz	r0, 900124ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900124e0:	7a23      	ldrb	r3, [r4, #8]
900124e2:	b123      	cbz	r3, 900124ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900124e4:	6860      	ldr	r0, [r4, #4]
900124e6:	6803      	ldr	r3, [r0, #0]
900124e8:	695b      	ldr	r3, [r3, #20]
900124ea:	4798      	blx	r3
900124ec:	7225      	strb	r5, [r4, #8]
900124ee:	6860      	ldr	r0, [r4, #4]
900124f0:	6803      	ldr	r3, [r0, #0]
900124f2:	681b      	ldr	r3, [r3, #0]
900124f4:	4798      	blx	r3
900124f6:	b928      	cbnz	r0, 90012504 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
900124f8:	6823      	ldr	r3, [r4, #0]
900124fa:	4620      	mov	r0, r4
900124fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900124fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012502:	4718      	bx	r3
90012504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012508:	f7ef bf56 	b.w	900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

9001250c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
9001250c:	b510      	push	{r4, lr}
9001250e:	6082      	str	r2, [r0, #8]
90012510:	2200      	movs	r2, #0
90012512:	4c03      	ldr	r4, [pc, #12]	@ (90012520 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90012514:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012518:	e9c0 4100 	strd	r4, r1, [r0]
9001251c:	bd10      	pop	{r4, pc}
9001251e:	bf00      	nop
90012520:	9002e5c8 	.word	0x9002e5c8

90012524 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90012524:	6840      	ldr	r0, [r0, #4]
90012526:	6803      	ldr	r3, [r0, #0]
90012528:	681b      	ldr	r3, [r3, #0]
9001252a:	4718      	bx	r3
9001252c:	0000      	movs	r0, r0
	...

90012530 <_ZN8touchgfxL10applyNoiseEiihhh>:
90012530:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90012534:	fb80 0101 	smull	r0, r1, r0, r1
90012538:	4f21      	ldr	r7, [pc, #132]	@ (900125c0 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
9001253a:	461c      	mov	r4, r3
9001253c:	4616      	mov	r6, r2
9001253e:	fba0 bc07 	umull	fp, ip, r0, r7
90012542:	f89d 5018 	ldrb.w	r5, [sp, #24]
90012546:	fb07 cc01 	mla	ip, r7, r1, ip
9001254a:	fbab 010b 	umull	r0, r1, fp, fp
9001254e:	fb0b f70c 	mul.w	r7, fp, ip
90012552:	fb00 f30c 	mul.w	r3, r0, ip
90012556:	eb01 0147 	add.w	r1, r1, r7, lsl #1
9001255a:	fb0b 3301 	mla	r3, fp, r1, r3
9001255e:	fba0 010b 	umull	r0, r1, r0, fp
90012562:	4419      	add	r1, r3
90012564:	a314      	add	r3, pc, #80	@ (adr r3, 900125b8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90012566:	e9d3 2300 	ldrd	r2, r3, [r3]
9001256a:	f7ee f8c5 	bl	900006f8 <__aeabi_ldivmod>
9001256e:	2ef7      	cmp	r6, #247	@ 0xf7
90012570:	b290      	uxth	r0, r2
90012572:	bf9e      	ittt	ls
90012574:	f002 0207 	andls.w	r2, r2, #7
90012578:	18b6      	addls	r6, r6, r2
9001257a:	b2f6      	uxtbls	r6, r6
9001257c:	2cfb      	cmp	r4, #251	@ 0xfb
9001257e:	bf9e      	ittt	ls
90012580:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90012584:	18e4      	addls	r4, r4, r3
90012586:	b2e4      	uxtbls	r4, r4
90012588:	2df7      	cmp	r5, #247	@ 0xf7
9001258a:	bf98      	it	ls
9001258c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90012590:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90012594:	bf98      	it	ls
90012596:	182d      	addls	r5, r5, r0
90012598:	480a      	ldr	r0, [pc, #40]	@ (900125c4 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
9001259a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001259e:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900125a2:	bf98      	it	ls
900125a4:	b2ed      	uxtbls	r5, r5
900125a6:	4304      	orrs	r4, r0
900125a8:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900125ac:	b280      	uxth	r0, r0
900125ae:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900125b2:	bf00      	nop
900125b4:	f3af 8000 	nop.w
900125b8:	797a8d77 	.word	0x797a8d77
900125bc:	00000000 	.word	0x00000000
900125c0:	00ec4ba7 	.word	0x00ec4ba7
900125c4:	fffff800 	.word	0xfffff800

900125c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900125c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900125cc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900125d0:	4605      	mov	r5, r0
900125d2:	ed2d 8b02 	vpush	{d8}
900125d6:	b087      	sub	sp, #28
900125d8:	7c41      	ldrb	r1, [r0, #17]
900125da:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900125de:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900125e2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900125e6:	2900      	cmp	r1, #0
900125e8:	f000 809a 	beq.w	90012720 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
900125ec:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900125f0:	ed90 7a08 	vldr	s14, [r0, #32]
900125f4:	454a      	cmp	r2, r9
900125f6:	68c0      	ldr	r0, [r0, #12]
900125f8:	db25      	blt.n	90012646 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
900125fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900125fe:	f640 72fc 	movw	r2, #4092	@ 0xffc
90012602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012606:	bfc8      	it	gt
90012608:	2200      	movgt	r2, #0
9001260a:	5882      	ldr	r2, [r0, r2]
9001260c:	2100      	movs	r1, #0
9001260e:	ea4f 2812 	mov.w	r8, r2, lsr #8
90012612:	7c2d      	ldrb	r5, [r5, #16]
90012614:	0950      	lsrs	r0, r2, #5
90012616:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
9001261a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
9001261e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90012622:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90012626:	2d00      	cmp	r5, #0
90012628:	d044      	beq.n	900126b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001262a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001262e:	d141      	bne.n	900126b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90012630:	bb61      	cbnz	r1, 9001268c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90012632:	ea4e 0000 	orr.w	r0, lr, r0
90012636:	ea4c 0500 	orr.w	r5, ip, r0
9001263a:	42bc      	cmp	r4, r7
9001263c:	f080 8214 	bcs.w	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012640:	f824 5b02 	strh.w	r5, [r4], #2
90012644:	e7f9      	b.n	9001263a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90012646:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
9001264a:	454f      	cmp	r7, r9
9001264c:	dc08      	bgt.n	90012660 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001264e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012652:	f640 72fc 	movw	r2, #4092	@ 0xffc
90012656:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001265a:	bfd8      	it	le
9001265c:	2200      	movle	r2, #0
9001265e:	e7d4      	b.n	9001260a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90012660:	eba9 0202 	sub.w	r2, r9, r2
90012664:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012668:	ee07 2a90 	vmov	s15, r2
9001266c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012674:	ee67 7a87 	vmul.f32	s15, s15, s14
90012678:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001267c:	ee17 2a90 	vmov	r2, s15
90012680:	bfd8      	it	le
90012682:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90012686:	0092      	lsls	r2, r2, #2
90012688:	5882      	ldr	r2, [r0, r2]
9001268a:	e7c0      	b.n	9001260e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
9001268c:	b2d5      	uxtb	r5, r2
9001268e:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90012692:	fa5f f888 	uxtb.w	r8, r8
90012696:	461e      	mov	r6, r3
90012698:	42bc      	cmp	r4, r7
9001269a:	f080 81e5 	bcs.w	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001269e:	4630      	mov	r0, r6
900126a0:	9500      	str	r5, [sp, #0]
900126a2:	4643      	mov	r3, r8
900126a4:	4652      	mov	r2, sl
900126a6:	4649      	mov	r1, r9
900126a8:	3601      	adds	r6, #1
900126aa:	f7ff ff41 	bl	90012530 <_ZN8touchgfxL10applyNoiseEiihhh>
900126ae:	f824 0b02 	strh.w	r0, [r4], #2
900126b2:	e7f1      	b.n	90012698 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900126b4:	0e12      	lsrs	r2, r2, #24
900126b6:	26ff      	movs	r6, #255	@ 0xff
900126b8:	fb02 f20a 	mul.w	r2, r2, sl
900126bc:	1c53      	adds	r3, r2, #1
900126be:	eb03 2222 	add.w	r2, r3, r2, asr #8
900126c2:	1212      	asrs	r2, r2, #8
900126c4:	fb02 f50c 	mul.w	r5, r2, ip
900126c8:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90012a7c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900126cc:	fb02 f10e 	mul.w	r1, r2, lr
900126d0:	4350      	muls	r0, r2
900126d2:	43d2      	mvns	r2, r2
900126d4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900126d8:	42bc      	cmp	r4, r7
900126da:	f080 81c5 	bcs.w	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900126de:	f8b4 e000 	ldrh.w	lr, [r4]
900126e2:	ea0e 030c 	and.w	r3, lr, ip
900126e6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900126ea:	f00e 0e1f 	and.w	lr, lr, #31
900126ee:	fb02 1303 	mla	r3, r2, r3, r1
900126f2:	fb02 0808 	mla	r8, r2, r8, r0
900126f6:	fb02 5e0e 	mla	lr, r2, lr, r5
900126fa:	fb93 f3f6 	sdiv	r3, r3, r6
900126fe:	fb98 f8f6 	sdiv	r8, r8, r6
90012702:	fb9e fef6 	sdiv	lr, lr, r6
90012706:	ea03 030c 	and.w	r3, r3, ip
9001270a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001270e:	f00e 0e1f 	and.w	lr, lr, #31
90012712:	ea43 0308 	orr.w	r3, r3, r8
90012716:	ea43 030e 	orr.w	r3, r3, lr
9001271a:	f824 3b02 	strh.w	r3, [r4], #2
9001271e:	e7db      	b.n	900126d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90012720:	7c82      	ldrb	r2, [r0, #18]
90012722:	2a00      	cmp	r2, #0
90012724:	d04f      	beq.n	900127c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90012726:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
9001272a:	ee07 2a90 	vmov	s15, r2
9001272e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012732:	ee07 3a10 	vmov	s14, r3
90012736:	461f      	mov	r7, r3
90012738:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001273c:	eef4 6ae7 	vcmpe.f32	s13, s15
90012740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012744:	f200 8095 	bhi.w	90012872 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90012748:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001274c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90012750:	68ea      	ldr	r2, [r5, #12]
90012752:	f895 c010 	ldrb.w	ip, [r5, #16]
90012756:	ee37 7a87 	vadd.f32	s14, s15, s14
9001275a:	ee37 7a66 	vsub.f32	s14, s14, s13
9001275e:	ee06 6a90 	vmov	s13, r6
90012762:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90012766:	eeb4 7ae6 	vcmpe.f32	s14, s13
9001276a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001276e:	bf4a      	itet	mi
90012770:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90012774:	9602      	strpl	r6, [sp, #8]
90012776:	ed8d 7a02 	vstrmi	s14, [sp, #8]
9001277a:	ed95 7a08 	vldr	s14, [r5, #32]
9001277e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012786:	bfc8      	it	gt
90012788:	2100      	movgt	r1, #0
9001278a:	5852      	ldr	r2, [r2, r1]
9001278c:	9902      	ldr	r1, [sp, #8]
9001278e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90012792:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90012796:	0950      	lsrs	r0, r2, #5
90012798:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001279c:	9103      	str	r1, [sp, #12]
9001279e:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900127a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900127a6:	f1bc 0f00 	cmp.w	ip, #0
900127aa:	d024      	beq.n	900127f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900127ac:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900127b0:	d121      	bne.n	900127f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900127b2:	ea4b 0b00 	orr.w	fp, fp, r0
900127b6:	ea41 010b 	orr.w	r1, r1, fp
900127ba:	9a03      	ldr	r2, [sp, #12]
900127bc:	4294      	cmp	r4, r2
900127be:	d255      	bcs.n	9001286c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900127c0:	f824 1b02 	strh.w	r1, [r4], #2
900127c4:	e7f9      	b.n	900127ba <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900127c6:	ee07 9a10 	vmov	s14, r9
900127ca:	edd0 7a06 	vldr	s15, [r0, #24]
900127ce:	edd0 6a05 	vldr	s13, [r0, #20]
900127d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900127d6:	ee37 7a67 	vsub.f32	s14, s14, s15
900127da:	eec7 7a26 	vdiv.f32	s15, s14, s13
900127de:	ed90 7a08 	vldr	s14, [r0, #32]
900127e2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900127e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127ea:	bf44      	itt	mi
900127ec:	ed90 7a07 	vldrmi	s14, [r0, #28]
900127f0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
900127f4:	e79d      	b.n	90012732 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
900127f6:	0e12      	lsrs	r2, r2, #24
900127f8:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90012a7c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900127fc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90012800:	fb02 f20a 	mul.w	r2, r2, sl
90012804:	f102 0c01 	add.w	ip, r2, #1
90012808:	eb0c 2222 	add.w	r2, ip, r2, asr #8
9001280c:	1212      	asrs	r2, r2, #8
9001280e:	4350      	muls	r0, r2
90012810:	4351      	muls	r1, r2
90012812:	fb02 fb0b 	mul.w	fp, r2, fp
90012816:	43d2      	mvns	r2, r2
90012818:	9004      	str	r0, [sp, #16]
9001281a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001281e:	9105      	str	r1, [sp, #20]
90012820:	9903      	ldr	r1, [sp, #12]
90012822:	428c      	cmp	r4, r1
90012824:	d222      	bcs.n	9001286c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90012826:	8820      	ldrh	r0, [r4, #0]
90012828:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001282c:	ea00 0c08 	and.w	ip, r0, r8
90012830:	460f      	mov	r7, r1
90012832:	9904      	ldr	r1, [sp, #16]
90012834:	fb02 bc0c 	mla	ip, r2, ip, fp
90012838:	fb02 1107 	mla	r1, r2, r7, r1
9001283c:	fb9c fcfe 	sdiv	ip, ip, lr
90012840:	fb91 f1fe 	sdiv	r1, r1, lr
90012844:	ea0c 0c08 	and.w	ip, ip, r8
90012848:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001284c:	ea4c 0101 	orr.w	r1, ip, r1
90012850:	f000 0c1f 	and.w	ip, r0, #31
90012854:	9805      	ldr	r0, [sp, #20]
90012856:	fb02 0c0c 	mla	ip, r2, ip, r0
9001285a:	fb9c fcfe 	sdiv	ip, ip, lr
9001285e:	f00c 0c1f 	and.w	ip, ip, #31
90012862:	ea41 010c 	orr.w	r1, r1, ip
90012866:	f824 1b02 	strh.w	r1, [r4], #2
9001286a:	e7d9      	b.n	90012820 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
9001286c:	9a02      	ldr	r2, [sp, #8]
9001286e:	441a      	add	r2, r3
90012870:	4617      	mov	r7, r2
90012872:	441e      	add	r6, r3
90012874:	b236      	sxth	r6, r6
90012876:	42be      	cmp	r6, r7
90012878:	f340 80f6 	ble.w	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001287c:	ed95 7a07 	vldr	s14, [r5, #28]
90012880:	ee06 7a90 	vmov	s13, r7
90012884:	ee37 7a87 	vadd.f32	s14, s15, s14
90012888:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001288c:	eeb4 7ae6 	vcmpe.f32	s14, s13
90012890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012894:	f340 80b2 	ble.w	900129fc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90012898:	ee06 6a10 	vmov	s12, r6
9001289c:	ee76 7ae7 	vsub.f32	s15, s13, s15
900128a0:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90012a74 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900128a4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900128a8:	7c2b      	ldrb	r3, [r5, #16]
900128aa:	eeb4 7ac6 	vcmpe.f32	s14, s12
900128ae:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90012a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900128b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900128b6:	bfd6      	itet	le
900128b8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900128bc:	46b0      	movgt	r8, r6
900128be:	ee17 8a10 	vmovle	r8, s14
900128c2:	ed95 7a08 	vldr	s14, [r5, #32]
900128c6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900128ca:	eba8 0707 	sub.w	r7, r8, r7
900128ce:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900128d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900128d6:	fe38 8a06 	vselgt.f32	s16, s16, s12
900128da:	eea7 8a27 	vfma.f32	s16, s14, s15
900128de:	b1db      	cbz	r3, 90012918 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900128e0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900128e4:	d118      	bne.n	90012918 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900128e6:	42bc      	cmp	r4, r7
900128e8:	d262      	bcs.n	900129b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900128ea:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900128ee:	68eb      	ldr	r3, [r5, #12]
900128f0:	4649      	mov	r1, r9
900128f2:	ee17 0a90 	vmov	r0, s15
900128f6:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
900128fa:	b2d3      	uxtb	r3, r2
900128fc:	9300      	str	r3, [sp, #0]
900128fe:	f3c2 2307 	ubfx	r3, r2, #8, #8
90012902:	f3c2 4207 	ubfx	r2, r2, #16, #8
90012906:	f7ff fe13 	bl	90012530 <_ZN8touchgfxL10applyNoiseEiihhh>
9001290a:	f824 0b02 	strh.w	r0, [r4], #2
9001290e:	edd5 7a08 	vldr	s15, [r5, #32]
90012912:	ee38 8a27 	vadd.f32	s16, s16, s15
90012916:	e7e6      	b.n	900128e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90012918:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90012a7c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001291c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90012920:	42bc      	cmp	r4, r7
90012922:	d245      	bcs.n	900129b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90012924:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012928:	68eb      	ldr	r3, [r5, #12]
9001292a:	f8b4 e000 	ldrh.w	lr, [r4]
9001292e:	ee17 2a90 	vmov	r2, s15
90012932:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90012936:	0e13      	lsrs	r3, r2, #24
90012938:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001293c:	fb03 f30a 	mul.w	r3, r3, sl
90012940:	b289      	uxth	r1, r1
90012942:	1c58      	adds	r0, r3, #1
90012944:	eb00 2023 	add.w	r0, r0, r3, asr #8
90012948:	ea0e 030b 	and.w	r3, lr, fp
9001294c:	1200      	asrs	r0, r0, #8
9001294e:	ea6f 0c00 	mvn.w	ip, r0
90012952:	fa5f fc8c 	uxtb.w	ip, ip
90012956:	fb0c f303 	mul.w	r3, ip, r3
9001295a:	fb00 3101 	mla	r1, r0, r1, r3
9001295e:	fb91 f1f9 	sdiv	r1, r1, r9
90012962:	ea01 030b 	and.w	r3, r1, fp
90012966:	9302      	str	r3, [sp, #8]
90012968:	0953      	lsrs	r3, r2, #5
9001296a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001296e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90012972:	4619      	mov	r1, r3
90012974:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90012978:	f00e 0e1f 	and.w	lr, lr, #31
9001297c:	fb0c f303 	mul.w	r3, ip, r3
90012980:	fb0c fc0e 	mul.w	ip, ip, lr
90012984:	fb00 3301 	mla	r3, r0, r1, r3
90012988:	9902      	ldr	r1, [sp, #8]
9001298a:	fb00 c002 	mla	r0, r0, r2, ip
9001298e:	fb93 f3f9 	sdiv	r3, r3, r9
90012992:	fb90 f0f9 	sdiv	r0, r0, r9
90012996:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001299a:	f000 001f 	and.w	r0, r0, #31
9001299e:	4319      	orrs	r1, r3
900129a0:	4301      	orrs	r1, r0
900129a2:	f824 1b02 	strh.w	r1, [r4], #2
900129a6:	edd5 7a08 	vldr	s15, [r5, #32]
900129aa:	ee38 8a27 	vadd.f32	s16, s16, s15
900129ae:	e7b7      	b.n	90012920 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900129b0:	4546      	cmp	r6, r8
900129b2:	dd59      	ble.n	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900129b4:	edd5 7a08 	vldr	s15, [r5, #32]
900129b8:	f640 73fc 	movw	r3, #4092	@ 0xffc
900129bc:	68ea      	ldr	r2, [r5, #12]
900129be:	eba6 0608 	sub.w	r6, r6, r8
900129c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900129c6:	7c29      	ldrb	r1, [r5, #16]
900129c8:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900129cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900129d0:	bfd8      	it	le
900129d2:	2300      	movle	r3, #0
900129d4:	58d2      	ldr	r2, [r2, r3]
900129d6:	0a10      	lsrs	r0, r2, #8
900129d8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900129dc:	0953      	lsrs	r3, r2, #5
900129de:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900129e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900129e6:	b159      	cbz	r1, 90012a00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900129e8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900129ec:	d108      	bne.n	90012a00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900129ee:	4318      	orrs	r0, r3
900129f0:	4338      	orrs	r0, r7
900129f2:	42b4      	cmp	r4, r6
900129f4:	d238      	bcs.n	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900129f6:	f824 0b02 	strh.w	r0, [r4], #2
900129fa:	e7fa      	b.n	900129f2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
900129fc:	46b8      	mov	r8, r7
900129fe:	e7d9      	b.n	900129b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90012a00:	0e12      	lsrs	r2, r2, #24
90012a02:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90012a7c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90012a06:	fb02 f10a 	mul.w	r1, r2, sl
90012a0a:	1c4a      	adds	r2, r1, #1
90012a0c:	eb02 2221 	add.w	r2, r2, r1, asr #8
90012a10:	1212      	asrs	r2, r2, #8
90012a12:	fb02 f507 	mul.w	r5, r2, r7
90012a16:	27ff      	movs	r7, #255	@ 0xff
90012a18:	4350      	muls	r0, r2
90012a1a:	4353      	muls	r3, r2
90012a1c:	43d2      	mvns	r2, r2
90012a1e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90012a22:	42b4      	cmp	r4, r6
90012a24:	d220      	bcs.n	90012a68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012a26:	f8b4 e000 	ldrh.w	lr, [r4]
90012a2a:	ea0e 010c 	and.w	r1, lr, ip
90012a2e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90012a32:	f00e 0e1f 	and.w	lr, lr, #31
90012a36:	fb02 0101 	mla	r1, r2, r1, r0
90012a3a:	fb02 3808 	mla	r8, r2, r8, r3
90012a3e:	fb02 5e0e 	mla	lr, r2, lr, r5
90012a42:	fb91 f1f7 	sdiv	r1, r1, r7
90012a46:	fb98 f8f7 	sdiv	r8, r8, r7
90012a4a:	fb9e fef7 	sdiv	lr, lr, r7
90012a4e:	ea01 010c 	and.w	r1, r1, ip
90012a52:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90012a56:	f00e 0e1f 	and.w	lr, lr, #31
90012a5a:	ea41 0108 	orr.w	r1, r1, r8
90012a5e:	ea41 010e 	orr.w	r1, r1, lr
90012a62:	f824 1b02 	strh.w	r1, [r4], #2
90012a66:	e7dc      	b.n	90012a22 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90012a68:	b007      	add	sp, #28
90012a6a:	ecbd 8b02 	vpop	{d8}
90012a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012a72:	bf00      	nop
90012a74:	00000000 	.word	0x00000000
90012a78:	447ffffe 	.word	0x447ffffe
90012a7c:	fffff800 	.word	0xfffff800

90012a80 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90012a80:	4770      	bx	lr

90012a82 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90012a82:	4770      	bx	lr

90012a84 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90012a84:	b510      	push	{r4, lr}
90012a86:	4604      	mov	r4, r0
90012a88:	2124      	movs	r1, #36	@ 0x24
90012a8a:	f017 fb5b 	bl	9002a144 <_ZdlPvj>
90012a8e:	4620      	mov	r0, r4
90012a90:	bd10      	pop	{r4, pc}
	...

90012a94 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012a94:	094a      	lsrs	r2, r1, #5
90012a96:	4b06      	ldr	r3, [pc, #24]	@ (90012ab0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90012a98:	60c1      	str	r1, [r0, #12]
90012a9a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90012a9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90012aa2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90012aa6:	4313      	orrs	r3, r2
90012aa8:	4319      	orrs	r1, r3
90012aaa:	8201      	strh	r1, [r0, #16]
90012aac:	4770      	bx	lr
90012aae:	bf00      	nop
90012ab0:	fffff800 	.word	0xfffff800

90012ab4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012ab4:	f1a0 0008 	sub.w	r0, r0, #8
90012ab8:	e7ec      	b.n	90012a94 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90012aba:	bf00      	nop

90012abc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90012abc:	b508      	push	{r3, lr}
90012abe:	4b05      	ldr	r3, [pc, #20]	@ (90012ad4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90012ac0:	6818      	ldr	r0, [r3, #0]
90012ac2:	6803      	ldr	r3, [r0, #0]
90012ac4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90012ac8:	4798      	blx	r3
90012aca:	1e43      	subs	r3, r0, #1
90012acc:	4258      	negs	r0, r3
90012ace:	4158      	adcs	r0, r3
90012ad0:	bd08      	pop	{r3, pc}
90012ad2:	bf00      	nop
90012ad4:	24021d64 	.word	0x24021d64

90012ad8 <_ZN8touchgfx13PainterRGB565D1Ev>:
90012ad8:	4770      	bx	lr

90012ada <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90012ada:	3808      	subs	r0, #8
90012adc:	4770      	bx	lr

90012ade <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90012ade:	b430      	push	{r4, r5}
90012ae0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90012ae4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90012ae8:	8a02      	ldrh	r2, [r0, #16]
90012aea:	f89d 3010 	ldrb.w	r3, [sp, #16]
90012aee:	4629      	mov	r1, r5
90012af0:	9202      	str	r2, [sp, #8]
90012af2:	68c2      	ldr	r2, [r0, #12]
90012af4:	4620      	mov	r0, r4
90012af6:	bc30      	pop	{r4, r5}
90012af8:	f7ef bf52 	b.w	900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90012afc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90012afc:	f7ef bf2c 	b.w	90002958 <_ZN8touchgfx5paint8tearDownEv>

90012b00 <_ZN8touchgfx13PainterRGB565D0Ev>:
90012b00:	b510      	push	{r4, lr}
90012b02:	4604      	mov	r4, r0
90012b04:	2114      	movs	r1, #20
90012b06:	f017 fb1d 	bl	9002a144 <_ZdlPvj>
90012b0a:	4620      	mov	r0, r4
90012b0c:	bd10      	pop	{r4, pc}

90012b0e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90012b0e:	f1a0 0008 	sub.w	r0, r0, #8
90012b12:	e7f5      	b.n	90012b00 <_ZN8touchgfx13PainterRGB565D0Ev>

90012b14 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90012b14:	2300      	movs	r3, #0
90012b16:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012b18:	8503      	strh	r3, [r0, #40]	@ 0x28
90012b1a:	8543      	strh	r3, [r0, #42]	@ 0x2a
90012b1c:	8583      	strh	r3, [r0, #44]	@ 0x2c
90012b1e:	6980      	ldr	r0, [r0, #24]
90012b20:	b110      	cbz	r0, 90012b28 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90012b22:	6803      	ldr	r3, [r0, #0]
90012b24:	691b      	ldr	r3, [r3, #16]
90012b26:	4718      	bx	r3
90012b28:	4770      	bx	lr

90012b2a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90012b2a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90012b2e:	4770      	bx	lr

90012b30 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90012b30:	b538      	push	{r3, r4, r5, lr}
90012b32:	0e0b      	lsrs	r3, r1, #24
90012b34:	4604      	mov	r4, r0
90012b36:	460d      	mov	r5, r1
90012b38:	7783      	strb	r3, [r0, #30]
90012b3a:	6803      	ldr	r3, [r0, #0]
90012b3c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012b3e:	4798      	blx	r3
90012b40:	6803      	ldr	r3, [r0, #0]
90012b42:	4629      	mov	r1, r5
90012b44:	689b      	ldr	r3, [r3, #8]
90012b46:	4798      	blx	r3
90012b48:	6823      	ldr	r3, [r4, #0]
90012b4a:	4620      	mov	r0, r4
90012b4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90012b4e:	4798      	blx	r3
90012b50:	61a0      	str	r0, [r4, #24]
90012b52:	bd38      	pop	{r3, r4, r5, pc}

90012b54 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90012b54:	7741      	strb	r1, [r0, #29]
90012b56:	4770      	bx	lr

90012b58 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90012b58:	b530      	push	{r4, r5, lr}
90012b5a:	460d      	mov	r5, r1
90012b5c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90012b60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90012b62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012b64:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90012b66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012b68:	682b      	ldr	r3, [r5, #0]
90012b6a:	6023      	str	r3, [r4, #0]
90012b6c:	bd30      	pop	{r4, r5, pc}

90012b6e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90012b6e:	b538      	push	{r3, r4, r5, lr}
90012b70:	4604      	mov	r4, r0
90012b72:	1d03      	adds	r3, r0, #4
90012b74:	6808      	ldr	r0, [r1, #0]
90012b76:	2500      	movs	r5, #0
90012b78:	6849      	ldr	r1, [r1, #4]
90012b7a:	c303      	stmia	r3!, {r0, r1}
90012b7c:	6813      	ldr	r3, [r2, #0]
90012b7e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90012b82:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90012b86:	6853      	ldr	r3, [r2, #4]
90012b88:	61a5      	str	r5, [r4, #24]
90012b8a:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90012b8e:	f006 f9f9 	bl	90018f84 <_ZN8touchgfx9Matrix3x35resetEv>
90012b92:	23ff      	movs	r3, #255	@ 0xff
90012b94:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90012b98:	7763      	strb	r3, [r4, #29]
90012b9a:	77a3      	strb	r3, [r4, #30]
90012b9c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90012ba0:	6323      	str	r3, [r4, #48]	@ 0x30
90012ba2:	2301      	movs	r3, #1
90012ba4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90012ba8:	bd38      	pop	{r3, r4, r5, pc}
	...

90012bac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90012bac:	ee70 7a41 	vsub.f32	s15, s0, s2
90012bb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012bb4:	eef5 7a40 	vcmp.f32	s15, #0.0
90012bb8:	4605      	mov	r5, r0
90012bba:	ed2d 8b0a 	vpush	{d8-d12}
90012bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012bc2:	b087      	sub	sp, #28
90012bc4:	eef0 9a40 	vmov.f32	s19, s0
90012bc8:	6802      	ldr	r2, [r0, #0]
90012bca:	eeb0 aa60 	vmov.f32	s20, s1
90012bce:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90012bd2:	eeb0 9a41 	vmov.f32	s18, s2
90012bd6:	9f19      	ldr	r7, [sp, #100]	@ 0x64
90012bd8:	eef0 8a61 	vmov.f32	s17, s3
90012bdc:	eeb0 ca42 	vmov.f32	s24, s4
90012be0:	eef0 ca62 	vmov.f32	s25, s5
90012be4:	d112      	bne.n	90012c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90012be6:	ee70 7ae1 	vsub.f32	s15, s1, s3
90012bea:	eef5 7a40 	vcmp.f32	s15, #0.0
90012bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012bf2:	d10b      	bne.n	90012c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90012bf4:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90012bf8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90012bfa:	3901      	subs	r1, #1
90012bfc:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90012c00:	b007      	add	sp, #28
90012c02:	ecbd 8b0a 	vpop	{d8-d12}
90012c06:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012c0a:	4710      	bx	r2
90012c0c:	23ff      	movs	r3, #255	@ 0xff
90012c0e:	4628      	mov	r0, r5
90012c10:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90012c14:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90012edc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90012c18:	77ab      	strb	r3, [r5, #30]
90012c1a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90012c1c:	4798      	blx	r3
90012c1e:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90012c22:	eeb0 0a69 	vmov.f32	s0, s19
90012c26:	4604      	mov	r4, r0
90012c28:	80c3      	strh	r3, [r0, #6]
90012c2a:	eef0 0a4a 	vmov.f32	s1, s20
90012c2e:	4640      	mov	r0, r8
90012c30:	f006 fa57 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c34:	eeb0 ba40 	vmov.f32	s22, s0
90012c38:	ed8d 0a00 	vstr	s0, [sp]
90012c3c:	eeb0 0a49 	vmov.f32	s0, s18
90012c40:	eef0 ba60 	vmov.f32	s23, s1
90012c44:	edcd 0a01 	vstr	s1, [sp, #4]
90012c48:	4640      	mov	r0, r8
90012c4a:	eef0 0a68 	vmov.f32	s1, s17
90012c4e:	f006 fa48 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c52:	eeb4 ba40 	vcmp.f32	s22, s0
90012c56:	eeb0 8a40 	vmov.f32	s16, s0
90012c5a:	ed8d 0a02 	vstr	s0, [sp, #8]
90012c5e:	eef0 aa60 	vmov.f32	s21, s1
90012c62:	edcd 0a03 	vstr	s1, [sp, #12]
90012c66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c6a:	eef4 ba60 	vcmp.f32	s23, s1
90012c6e:	bf0c      	ite	eq
90012c70:	2301      	moveq	r3, #1
90012c72:	2300      	movne	r3, #0
90012c74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c78:	eeb4 ba40 	vcmp.f32	s22, s0
90012c7c:	7463      	strb	r3, [r4, #17]
90012c7e:	bf0c      	ite	eq
90012c80:	2301      	moveq	r3, #1
90012c82:	2300      	movne	r3, #0
90012c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c88:	74a3      	strb	r3, [r4, #18]
90012c8a:	d031      	beq.n	90012cf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012c8c:	eef4 ba60 	vcmp.f32	s23, s1
90012c90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c94:	d02c      	beq.n	90012cf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012c96:	ee39 9a69 	vsub.f32	s18, s18, s19
90012c9a:	4640      	mov	r0, r8
90012c9c:	ee78 8aca 	vsub.f32	s17, s17, s20
90012ca0:	eef0 0a4a 	vmov.f32	s1, s20
90012ca4:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90012ca8:	eec8 7aac 	vdiv.f32	s15, s17, s25
90012cac:	eeb0 0a69 	vmov.f32	s0, s19
90012cb0:	eeec 0a87 	vfma.f32	s1, s25, s14
90012cb4:	eea7 0acc 	vfms.f32	s0, s15, s24
90012cb8:	f006 fa13 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012cbc:	f899 3000 	ldrb.w	r3, [r9]
90012cc0:	edcd 0a05 	vstr	s1, [sp, #20]
90012cc4:	ee70 0aeb 	vsub.f32	s1, s1, s23
90012cc8:	2b01      	cmp	r3, #1
90012cca:	bf08      	it	eq
90012ccc:	eef1 7a60 	vnegeq.f32	s15, s1
90012cd0:	ed8d 0a04 	vstr	s0, [sp, #16]
90012cd4:	ee30 0a4b 	vsub.f32	s0, s0, s22
90012cd8:	bf04      	itt	eq
90012cda:	eef0 0a40 	vmoveq.f32	s1, s0
90012cde:	eeb0 0a67 	vmoveq.f32	s0, s15
90012ce2:	eeb5 0a40 	vcmp.f32	s0, #0.0
90012ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012cea:	d135      	bne.n	90012d58 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90012cec:	2301      	movs	r3, #1
90012cee:	74a3      	strb	r3, [r4, #18]
90012cf0:	f899 2000 	ldrb.w	r2, [r9]
90012cf4:	7c63      	ldrb	r3, [r4, #17]
90012cf6:	2a01      	cmp	r2, #1
90012cf8:	f040 80a3 	bne.w	90012e42 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90012cfc:	2b00      	cmp	r3, #0
90012cfe:	d073      	beq.n	90012de8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90012d00:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012d04:	eddf 6a73 	vldr	s13, [pc, #460]	@ 90012ed4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012d08:	eef4 baea 	vcmpe.f32	s23, s21
90012d0c:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012d14:	edc4 7a08 	vstr	s15, [r4, #32]
90012d18:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012d1c:	ee17 3a90 	vmov	r3, s15
90012d20:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012d24:	b21a      	sxth	r2, r3
90012d26:	ee17 3a90 	vmov	r3, s15
90012d2a:	bf48      	it	mi
90012d2c:	8162      	strhmi	r2, [r4, #10]
90012d2e:	b21b      	sxth	r3, r3
90012d30:	bf56      	itet	pl
90012d32:	8122      	strhpl	r2, [r4, #8]
90012d34:	8123      	strhmi	r3, [r4, #8]
90012d36:	8163      	strhpl	r3, [r4, #10]
90012d38:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012d3c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012d40:	1a9b      	subs	r3, r3, r2
90012d42:	ee07 3a90 	vmov	s15, r3
90012d46:	2300      	movs	r3, #0
90012d48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012d4c:	7463      	strb	r3, [r4, #17]
90012d4e:	2301      	movs	r3, #1
90012d50:	edc4 7a07 	vstr	s15, [r4, #28]
90012d54:	74a3      	strb	r3, [r4, #18]
90012d56:	e03f      	b.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012d58:	ee80 7a80 	vdiv.f32	s14, s1, s0
90012d5c:	eeb5 7a40 	vcmp.f32	s14, #0.0
90012d60:	ed84 7a05 	vstr	s14, [r4, #20]
90012d64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012d68:	d102      	bne.n	90012d70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90012d6a:	2301      	movs	r3, #1
90012d6c:	7463      	strb	r3, [r4, #17]
90012d6e:	e7bf      	b.n	90012cf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012d70:	2b01      	cmp	r3, #1
90012d72:	ee38 8a4b 	vsub.f32	s16, s16, s22
90012d76:	ee7a aaeb 	vsub.f32	s21, s21, s23
90012d7a:	bf0b      	itete	eq
90012d7c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90012d80:	eef0 7a6b 	vmovne.f32	s15, s23
90012d84:	ee07 2a90 	vmoveq	s15, r2
90012d88:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90012d8c:	bf02      	ittt	eq
90012d8e:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
90012d92:	ee77 7acb 	vsubeq.f32	s15, s15, s22
90012d96:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90012d9a:	2b01      	cmp	r3, #1
90012d9c:	edc4 7a06 	vstr	s15, [r4, #24]
90012da0:	bf02      	ittt	eq
90012da2:	eef1 7a48 	vnegeq.f32	s15, s16
90012da6:	eeb0 8a6a 	vmoveq.f32	s16, s21
90012daa:	eef0 aa67 	vmoveq.f32	s21, s15
90012dae:	eeca 7a87 	vdiv.f32	s15, s21, s14
90012db2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90012ed8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
90012db6:	ee38 8a67 	vsub.f32	s16, s16, s15
90012dba:	eec7 7a08 	vdiv.f32	s15, s14, s16
90012dbe:	ed84 8a07 	vstr	s16, [r4, #28]
90012dc2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90012dc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012dca:	edc4 7a08 	vstr	s15, [r4, #32]
90012dce:	d503      	bpl.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012dd0:	eeb1 8a48 	vneg.f32	s16, s16
90012dd4:	ed84 8a07 	vstr	s16, [r4, #28]
90012dd8:	60e7      	str	r7, [r4, #12]
90012dda:	7426      	strb	r6, [r4, #16]
90012ddc:	61ac      	str	r4, [r5, #24]
90012dde:	b007      	add	sp, #28
90012de0:	ecbd 8b0a 	vpop	{d8-d12}
90012de4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012de8:	7ca3      	ldrb	r3, [r4, #18]
90012dea:	2b00      	cmp	r3, #0
90012dec:	d0f4      	beq.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012dee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90012df2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 90012ed4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012df6:	ee00 3a10 	vmov	s0, r3
90012dfa:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90012dfe:	ee30 8a48 	vsub.f32	s16, s0, s16
90012e02:	ee30 0a4b 	vsub.f32	s0, s0, s22
90012e06:	ee38 7a40 	vsub.f32	s14, s16, s0
90012e0a:	eeb4 8ac0 	vcmpe.f32	s16, s0
90012e0e:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012e16:	edc4 7a08 	vstr	s15, [r4, #32]
90012e1a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012e1e:	ee17 3a90 	vmov	r3, s15
90012e22:	eefd 7ac0 	vcvt.s32.f32	s15, s0
90012e26:	b21a      	sxth	r2, r3
90012e28:	ee17 3a90 	vmov	r3, s15
90012e2c:	bfc8      	it	gt
90012e2e:	8162      	strhgt	r2, [r4, #10]
90012e30:	b21b      	sxth	r3, r3
90012e32:	bfd6      	itet	le
90012e34:	8122      	strhle	r2, [r4, #8]
90012e36:	8123      	strhgt	r3, [r4, #8]
90012e38:	8163      	strhle	r3, [r4, #10]
90012e3a:	2301      	movs	r3, #1
90012e3c:	7463      	strb	r3, [r4, #17]
90012e3e:	2300      	movs	r3, #0
90012e40:	e788      	b.n	90012d54 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
90012e42:	b1e3      	cbz	r3, 90012e7e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
90012e44:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012e48:	eddf 6a22 	vldr	s13, [pc, #136]	@ 90012ed4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012e4c:	eef4 baea 	vcmpe.f32	s23, s21
90012e50:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012e58:	edc4 7a08 	vstr	s15, [r4, #32]
90012e5c:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012e60:	ee17 3a90 	vmov	r3, s15
90012e64:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012e68:	b21a      	sxth	r2, r3
90012e6a:	ee17 3a90 	vmov	r3, s15
90012e6e:	bf48      	it	mi
90012e70:	8162      	strhmi	r2, [r4, #10]
90012e72:	b21b      	sxth	r3, r3
90012e74:	bf56      	itet	pl
90012e76:	8122      	strhpl	r2, [r4, #8]
90012e78:	8123      	strhmi	r3, [r4, #8]
90012e7a:	8163      	strhpl	r3, [r4, #10]
90012e7c:	e7ac      	b.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012e7e:	7ca3      	ldrb	r3, [r4, #18]
90012e80:	2b00      	cmp	r3, #0
90012e82:	d0a9      	beq.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012e84:	ee38 7a4b 	vsub.f32	s14, s16, s22
90012e88:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90012ed4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012e8c:	eeb4 bac8 	vcmpe.f32	s22, s16
90012e90:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012e94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012e98:	edc4 7a08 	vstr	s15, [r4, #32]
90012e9c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012ea0:	ee17 3a90 	vmov	r3, s15
90012ea4:	eefd 7acb 	vcvt.s32.f32	s15, s22
90012ea8:	b21a      	sxth	r2, r3
90012eaa:	ee17 3a90 	vmov	r3, s15
90012eae:	bf48      	it	mi
90012eb0:	8162      	strhmi	r2, [r4, #10]
90012eb2:	b21b      	sxth	r3, r3
90012eb4:	bf56      	itet	pl
90012eb6:	8122      	strhpl	r2, [r4, #8]
90012eb8:	8123      	strhmi	r3, [r4, #8]
90012eba:	8163      	strhpl	r3, [r4, #10]
90012ebc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012ec0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012ec4:	1a9b      	subs	r3, r3, r2
90012ec6:	ee07 3a90 	vmov	s15, r3
90012eca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012ece:	edc4 7a07 	vstr	s15, [r4, #28]
90012ed2:	e781      	b.n	90012dd8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012ed4:	447ffffe 	.word	0x447ffffe
90012ed8:	44800000 	.word	0x44800000
90012edc:	24021d5c 	.word	0x24021d5c

90012ee0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90012ee0:	b510      	push	{r4, lr}
90012ee2:	ed2d 8b02 	vpush	{d8}
90012ee6:	eef0 8a62 	vmov.f32	s17, s5
90012eea:	2100      	movs	r1, #0
90012eec:	4604      	mov	r4, r0
90012eee:	eeb0 8a42 	vmov.f32	s16, s4
90012ef2:	f016 fe99 	bl	90029c28 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90012ef6:	eef0 7a68 	vmov.f32	s15, s17
90012efa:	6823      	ldr	r3, [r4, #0]
90012efc:	4620      	mov	r0, r4
90012efe:	689b      	ldr	r3, [r3, #8]
90012f00:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f04:	ee17 2a90 	vmov	r2, s15
90012f08:	eef0 7a48 	vmov.f32	s15, s16
90012f0c:	ecbd 8b02 	vpop	{d8}
90012f10:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012f18:	ee17 1a90 	vmov	r1, s15
90012f1c:	4718      	bx	r3

90012f1e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90012f1e:	b510      	push	{r4, lr}
90012f20:	ed2d 8b02 	vpush	{d8}
90012f24:	eef0 8a63 	vmov.f32	s17, s7
90012f28:	2100      	movs	r1, #0
90012f2a:	4604      	mov	r4, r0
90012f2c:	eeb0 8a43 	vmov.f32	s16, s6
90012f30:	f016 ff3c 	bl	90029dac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90012f34:	eef0 7a68 	vmov.f32	s15, s17
90012f38:	6823      	ldr	r3, [r4, #0]
90012f3a:	4620      	mov	r0, r4
90012f3c:	689b      	ldr	r3, [r3, #8]
90012f3e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f42:	ee17 2a90 	vmov	r2, s15
90012f46:	eef0 7a48 	vmov.f32	s15, s16
90012f4a:	ecbd 8b02 	vpop	{d8}
90012f4e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012f56:	ee17 1a90 	vmov	r1, s15
90012f5a:	4718      	bx	r3

90012f5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90012f5c:	b513      	push	{r0, r1, r4, lr}
90012f5e:	4604      	mov	r4, r0
90012f60:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012f62:	f006 f8be 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012f66:	eef0 7a60 	vmov.f32	s15, s1
90012f6a:	4620      	mov	r0, r4
90012f6c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f70:	ee17 2a90 	vmov	r2, s15
90012f74:	eef0 7a40 	vmov.f32	s15, s0
90012f78:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f7c:	ee17 1a90 	vmov	r1, s15
90012f80:	b002      	add	sp, #8
90012f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012f86:	f016 bda9 	b.w	90029adc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90012f8a:	b513      	push	{r0, r1, r4, lr}
90012f8c:	4604      	mov	r4, r0
90012f8e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012f90:	f006 f8a7 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012f94:	eef0 7a60 	vmov.f32	s15, s1
90012f98:	4620      	mov	r0, r4
90012f9a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012f9e:	ee17 2a90 	vmov	r2, s15
90012fa2:	eef0 7a40 	vmov.f32	s15, s0
90012fa6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012faa:	ee17 1a90 	vmov	r1, s15
90012fae:	b002      	add	sp, #8
90012fb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012fb4:	f016 bddf 	b.w	90029b76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90012fb8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90012fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
90012fba:	2400      	movs	r4, #0
90012fbc:	9f07      	ldr	r7, [sp, #28]
90012fbe:	f04f 0e01 	mov.w	lr, #1
90012fc2:	4626      	mov	r6, r4
90012fc4:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90012fc8:	4463      	add	r3, ip
90012fca:	4563      	cmp	r3, ip
90012fcc:	d02d      	beq.n	9001302a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90012fce:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90012fd2:	2d06      	cmp	r5, #6
90012fd4:	d8f9      	bhi.n	90012fca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012fd6:	fa0e f505 	lsl.w	r5, lr, r5
90012fda:	f015 0f66 	tst.w	r5, #102	@ 0x66
90012fde:	d10d      	bne.n	90012ffc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90012fe0:	f015 0f10 	tst.w	r5, #16
90012fe4:	d117      	bne.n	90013016 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90012fe6:	072d      	lsls	r5, r5, #28
90012fe8:	d5ef      	bpl.n	90012fca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012fea:	3801      	subs	r0, #1
90012fec:	b91e      	cbnz	r6, 90012ff6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012fee:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90012ff2:	682d      	ldr	r5, [r5, #0]
90012ff4:	600d      	str	r5, [r1, #0]
90012ff6:	b96c      	cbnz	r4, 90013014 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012ff8:	2601      	movs	r6, #1
90012ffa:	e7e6      	b.n	90012fca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012ffc:	b926      	cbnz	r6, 90013008 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012ffe:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90013002:	f853 3c08 	ldr.w	r3, [r3, #-8]
90013006:	600b      	str	r3, [r1, #0]
90013008:	b924      	cbnz	r4, 90013014 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001300a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9001300e:	f850 3c04 	ldr.w	r3, [r0, #-4]
90013012:	6013      	str	r3, [r2, #0]
90013014:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013016:	3801      	subs	r0, #1
90013018:	b91c      	cbnz	r4, 90013022 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
9001301a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
9001301e:	6824      	ldr	r4, [r4, #0]
90013020:	6014      	str	r4, [r2, #0]
90013022:	2e00      	cmp	r6, #0
90013024:	d1f6      	bne.n	90013014 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013026:	2401      	movs	r4, #1
90013028:	e7cf      	b.n	90012fca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001302a:	b90e      	cbnz	r6, 90013030 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
9001302c:	2300      	movs	r3, #0
9001302e:	600b      	str	r3, [r1, #0]
90013030:	2c00      	cmp	r4, #0
90013032:	d1ef      	bne.n	90013014 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013034:	2300      	movs	r3, #0
90013036:	e7ec      	b.n	90013012 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90013038 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90013038:	b538      	push	{r3, r4, r5, lr}
9001303a:	ed2d 8b0a 	vpush	{d8-d12}
9001303e:	eef0 ba40 	vmov.f32	s23, s0
90013042:	4604      	mov	r4, r0
90013044:	eeb0 ca60 	vmov.f32	s24, s1
90013048:	460d      	mov	r5, r1
9001304a:	eef0 aa41 	vmov.f32	s21, s2
9001304e:	eeb0 ba61 	vmov.f32	s22, s3
90013052:	eeb0 9a42 	vmov.f32	s18, s4
90013056:	eef0 9a62 	vmov.f32	s19, s5
9001305a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
9001305e:	ee7b 8a29 	vadd.f32	s17, s22, s19
90013062:	ee3a 8a89 	vadd.f32	s16, s21, s18
90013066:	ee68 8a8a 	vmul.f32	s17, s17, s20
9001306a:	ee28 8a0a 	vmul.f32	s16, s16, s20
9001306e:	ee3c 0a68 	vsub.f32	s0, s24, s17
90013072:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90013076:	ee20 0a00 	vmul.f32	s0, s0, s0
9001307a:	eea7 0aa7 	vfma.f32	s0, s15, s15
9001307e:	f017 f88b 	bl	9002a198 <sqrtf>
90013082:	eeb5 0a40 	vcmp.f32	s0, #0.0
90013086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001308a:	d12e      	bne.n	900130ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
9001308c:	ee79 7a6a 	vsub.f32	s15, s18, s21
90013090:	ee39 7acb 	vsub.f32	s14, s19, s22
90013094:	eeb0 8a6a 	vmov.f32	s16, s21
90013098:	eef0 8a4b 	vmov.f32	s17, s22
9001309c:	eea7 8a8a 	vfma.f32	s16, s15, s20
900130a0:	eee7 8a0a 	vfma.f32	s17, s14, s20
900130a4:	eea7 8a0a 	vfma.f32	s16, s14, s20
900130a8:	eee7 8aca 	vfms.f32	s17, s15, s20
900130ac:	2d02      	cmp	r5, #2
900130ae:	dc2f      	bgt.n	90013110 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
900130b0:	3501      	adds	r5, #1
900130b2:	eef0 1a4b 	vmov.f32	s3, s22
900130b6:	eeb0 1a6a 	vmov.f32	s2, s21
900130ba:	4620      	mov	r0, r4
900130bc:	4629      	mov	r1, r5
900130be:	eef0 2a68 	vmov.f32	s5, s17
900130c2:	eeb0 2a48 	vmov.f32	s4, s16
900130c6:	eef0 0a4c 	vmov.f32	s1, s24
900130ca:	eeb0 0a6b 	vmov.f32	s0, s23
900130ce:	f7ff ffb3 	bl	90013038 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900130d2:	eef0 0a68 	vmov.f32	s1, s17
900130d6:	eeb0 0a48 	vmov.f32	s0, s16
900130da:	4620      	mov	r0, r4
900130dc:	f7ff ff55 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900130e0:	eeb0 ba68 	vmov.f32	s22, s17
900130e4:	eef0 aa48 	vmov.f32	s21, s16
900130e8:	e7b9      	b.n	9001305e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
900130ea:	ee38 8a6b 	vsub.f32	s16, s16, s23
900130ee:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
900130f2:	ee78 8acc 	vsub.f32	s17, s17, s24
900130f6:	ee28 7a27 	vmul.f32	s14, s16, s15
900130fa:	ee68 7aa7 	vmul.f32	s15, s17, s15
900130fe:	ee87 8a00 	vdiv.f32	s16, s14, s0
90013102:	eec7 8a80 	vdiv.f32	s17, s15, s0
90013106:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001310a:	ee7c 8a28 	vadd.f32	s17, s24, s17
9001310e:	e7cd      	b.n	900130ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90013110:	eef0 0a68 	vmov.f32	s1, s17
90013114:	4620      	mov	r0, r4
90013116:	eeb0 0a48 	vmov.f32	s0, s16
9001311a:	f7ff ff36 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001311e:	ecbd 8b0a 	vpop	{d8-d12}
90013122:	bd38      	pop	{r3, r4, r5, pc}

90013124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90013124:	b510      	push	{r4, lr}
90013126:	ed2d 8b0a 	vpush	{d8-d12}
9001312a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
9001312e:	4604      	mov	r4, r0
90013130:	eeb0 ca40 	vmov.f32	s24, s0
90013134:	2b02      	cmp	r3, #2
90013136:	eeb0 9a60 	vmov.f32	s18, s1
9001313a:	eef0 9a41 	vmov.f32	s19, s2
9001313e:	eef0 8a61 	vmov.f32	s17, s3
90013142:	eeb0 ba42 	vmov.f32	s22, s4
90013146:	eef0 ba62 	vmov.f32	s23, s5
9001314a:	eeb0 aa43 	vmov.f32	s20, s6
9001314e:	eef0 aa63 	vmov.f32	s21, s7
90013152:	eeb0 8a44 	vmov.f32	s16, s8
90013156:	eef0 ca64 	vmov.f32	s25, s9
9001315a:	d12c      	bne.n	900131b6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
9001315c:	eef0 0a62 	vmov.f32	s1, s5
90013160:	eeb0 0a42 	vmov.f32	s0, s4
90013164:	f7ff ff11 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013168:	ee79 9acb 	vsub.f32	s19, s19, s22
9001316c:	ee7a caec 	vsub.f32	s25, s21, s25
90013170:	ee78 8aeb 	vsub.f32	s17, s17, s23
90013174:	ee3a 8a48 	vsub.f32	s16, s20, s16
90013178:	ee69 9aac 	vmul.f32	s19, s19, s25
9001317c:	ee28 8a88 	vmul.f32	s16, s17, s16
90013180:	eef4 9ac8 	vcmpe.f32	s19, s16
90013184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013188:	db0f      	blt.n	900131aa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
9001318a:	2101      	movs	r1, #1
9001318c:	eef0 2a6a 	vmov.f32	s5, s21
90013190:	eeb0 2a4a 	vmov.f32	s4, s20
90013194:	4620      	mov	r0, r4
90013196:	eef0 1a6b 	vmov.f32	s3, s23
9001319a:	eeb0 1a4b 	vmov.f32	s2, s22
9001319e:	eef0 0a49 	vmov.f32	s1, s18
900131a2:	eeb0 0a4c 	vmov.f32	s0, s24
900131a6:	f7ff ff47 	bl	90013038 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900131aa:	eef0 0a6a 	vmov.f32	s1, s21
900131ae:	4620      	mov	r0, r4
900131b0:	eeb0 0a4a 	vmov.f32	s0, s20
900131b4:	e035      	b.n	90013222 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900131b6:	2b01      	cmp	r3, #1
900131b8:	d138      	bne.n	9001322c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900131ba:	ee31 4ae2 	vsub.f32	s8, s3, s5
900131be:	ee33 6a48 	vsub.f32	s12, s6, s16
900131c2:	ee71 7a42 	vsub.f32	s15, s2, s4
900131c6:	ee73 6ae4 	vsub.f32	s13, s7, s9
900131ca:	ee26 7a44 	vnmul.f32	s14, s12, s8
900131ce:	eea7 7aa6 	vfma.f32	s14, s15, s13
900131d2:	eeb5 7a40 	vcmp.f32	s14, #0.0
900131d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900131da:	d027      	beq.n	9001322c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900131dc:	ee28 8a63 	vnmul.f32	s16, s16, s7
900131e0:	ee61 8ac2 	vnmul.f32	s17, s3, s4
900131e4:	eea4 8a83 	vfma.f32	s16, s9, s6
900131e8:	eee1 8a22 	vfma.f32	s17, s2, s5
900131ec:	ee68 7a67 	vnmul.f32	s15, s16, s15
900131f0:	ee28 8a44 	vnmul.f32	s16, s16, s8
900131f4:	eee6 7a28 	vfma.f32	s15, s12, s17
900131f8:	eea6 8aa8 	vfma.f32	s16, s13, s17
900131fc:	ee87 0a87 	vdiv.f32	s0, s15, s14
90013200:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90013204:	eec8 0a07 	vdiv.f32	s1, s16, s14
90013208:	ee3c ca40 	vsub.f32	s24, s24, s0
9001320c:	ee39 9a60 	vsub.f32	s18, s18, s1
90013210:	ee29 9a09 	vmul.f32	s18, s18, s18
90013214:	eeac 9a0c 	vfma.f32	s18, s24, s24
90013218:	eef4 7ac9 	vcmpe.f32	s15, s18
9001321c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013220:	db04      	blt.n	9001322c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013222:	f7ff feb2 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013226:	ecbd 8b0a 	vpop	{d8-d12}
9001322a:	bd10      	pop	{r4, pc}
9001322c:	eef0 0a6b 	vmov.f32	s1, s23
90013230:	4620      	mov	r0, r4
90013232:	eeb0 0a4b 	vmov.f32	s0, s22
90013236:	f7ff fea8 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001323a:	e7b6      	b.n	900131aa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

9001323c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
9001323c:	b510      	push	{r4, lr}
9001323e:	ed2d 8b0c 	vpush	{d8-d13}
90013242:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90013246:	4604      	mov	r4, r0
90013248:	eeb0 9a40 	vmov.f32	s18, s0
9001324c:	eef0 9a60 	vmov.f32	s19, s1
90013250:	eef0 aa41 	vmov.f32	s21, s2
90013254:	eeb0 ba61 	vmov.f32	s22, s3
90013258:	b933      	cbnz	r3, 90013268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
9001325a:	f7ff fe96 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001325e:	eef0 0a4b 	vmov.f32	s1, s22
90013262:	eeb0 0a6a 	vmov.f32	s0, s21
90013266:	e015      	b.n	90013294 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90013268:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9001326c:	2b02      	cmp	r3, #2
9001326e:	ee71 8a40 	vsub.f32	s17, s2, s0
90013272:	ee31 8ae0 	vsub.f32	s16, s3, s1
90013276:	ee68 8aa7 	vmul.f32	s17, s17, s15
9001327a:	ee28 8a27 	vmul.f32	s16, s16, s15
9001327e:	d10f      	bne.n	900132a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90013280:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013284:	ee30 0a08 	vadd.f32	s0, s0, s16
90013288:	f7ff fe7f 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001328c:	ee7b 0a68 	vsub.f32	s1, s22, s17
90013290:	ee3a 0a88 	vadd.f32	s0, s21, s16
90013294:	4620      	mov	r0, r4
90013296:	f7ff fe78 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001329a:	ecbd 8b0c 	vpop	{d8-d13}
9001329e:	bd10      	pop	{r4, pc}
900132a0:	f7ff fe73 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900132a4:	eef0 0a69 	vmov.f32	s1, s19
900132a8:	eeb0 0a49 	vmov.f32	s0, s18
900132ac:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900133dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900132b0:	eeb1 aa68 	vneg.f32	s20, s17
900132b4:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900133e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900132b8:	eee8 0a27 	vfma.f32	s1, s16, s15
900132bc:	4620      	mov	r0, r4
900132be:	eea8 0aa7 	vfma.f32	s0, s17, s15
900132c2:	ed9f ca48 	vldr	s24, [pc, #288]	@ 900133e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900132c6:	eddf ca48 	vldr	s25, [pc, #288]	@ 900133e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900132ca:	ed9f da48 	vldr	s26, [pc, #288]	@ 900133ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900132ce:	eeea 0a2b 	vfma.f32	s1, s20, s23
900132d2:	eea8 0a2b 	vfma.f32	s0, s16, s23
900132d6:	f7ff fe58 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900132da:	eef0 0a69 	vmov.f32	s1, s19
900132de:	eeb0 0a49 	vmov.f32	s0, s18
900132e2:	eddf 7a43 	vldr	s15, [pc, #268]	@ 900133f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
900132e6:	4620      	mov	r0, r4
900132e8:	eee8 0a27 	vfma.f32	s1, s16, s15
900132ec:	eea8 0aa7 	vfma.f32	s0, s17, s15
900132f0:	eeea 0a0c 	vfma.f32	s1, s20, s24
900132f4:	eea8 0a0c 	vfma.f32	s0, s16, s24
900132f8:	f7ff fe47 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900132fc:	eef0 0a69 	vmov.f32	s1, s19
90013300:	eeb0 0a49 	vmov.f32	s0, s18
90013304:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 900133f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90013308:	4620      	mov	r0, r4
9001330a:	eee8 0a27 	vfma.f32	s1, s16, s15
9001330e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013312:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013316:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001331a:	f7ff fe36 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001331e:	eef0 0a69 	vmov.f32	s1, s19
90013322:	eeb0 0a49 	vmov.f32	s0, s18
90013326:	eddf 7a34 	vldr	s15, [pc, #208]	@ 900133f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
9001332a:	4620      	mov	r0, r4
9001332c:	eee8 0a27 	vfma.f32	s1, s16, s15
90013330:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013334:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013338:	eea8 0a0d 	vfma.f32	s0, s16, s26
9001333c:	f7ff fe25 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013340:	ee79 0a88 	vadd.f32	s1, s19, s16
90013344:	ee39 0a28 	vadd.f32	s0, s18, s17
90013348:	4620      	mov	r0, r4
9001334a:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001334e:	ee30 0a08 	vadd.f32	s0, s0, s16
90013352:	f7ff fe1a 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013356:	eef0 0a69 	vmov.f32	s1, s19
9001335a:	eeb0 0a49 	vmov.f32	s0, s18
9001335e:	eddf 7a27 	vldr	s15, [pc, #156]	@ 900133fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90013362:	4620      	mov	r0, r4
90013364:	eee8 0a27 	vfma.f32	s1, s16, s15
90013368:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001336c:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013370:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013374:	f7ff fe09 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013378:	eef0 0a69 	vmov.f32	s1, s19
9001337c:	eeb0 0a49 	vmov.f32	s0, s18
90013380:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90013400 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90013384:	4620      	mov	r0, r4
90013386:	eee8 0a27 	vfma.f32	s1, s16, s15
9001338a:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001338e:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013392:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013396:	f7ff fdf8 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001339a:	eef0 0a69 	vmov.f32	s1, s19
9001339e:	eeb0 0a49 	vmov.f32	s0, s18
900133a2:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90013404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900133a6:	4620      	mov	r0, r4
900133a8:	eee8 0a27 	vfma.f32	s1, s16, s15
900133ac:	eea8 0aa7 	vfma.f32	s0, s17, s15
900133b0:	eeea 0a0c 	vfma.f32	s1, s20, s24
900133b4:	eea8 0a0c 	vfma.f32	s0, s16, s24
900133b8:	f7ff fde7 	bl	90012f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900133bc:	eef0 0a69 	vmov.f32	s1, s19
900133c0:	eeb0 0a49 	vmov.f32	s0, s18
900133c4:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90013408 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900133c8:	4620      	mov	r0, r4
900133ca:	eee8 0a27 	vfma.f32	s1, s16, s15
900133ce:	eea8 0aa7 	vfma.f32	s0, s17, s15
900133d2:	eeea 0a2b 	vfma.f32	s1, s20, s23
900133d6:	eea8 0a2b 	vfma.f32	s0, s16, s23
900133da:	e73e      	b.n	9001325a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900133dc:	3d23d70a 	.word	0x3d23d70a
900133e0:	3e8f5c29 	.word	0x3e8f5c29
900133e4:	3f19999a 	.word	0x3f19999a
900133e8:	3f4ccccd 	.word	0x3f4ccccd
900133ec:	3f75c28f 	.word	0x3f75c28f
900133f0:	3e4ccccd 	.word	0x3e4ccccd
900133f4:	3ecccccd 	.word	0x3ecccccd
900133f8:	3f3851ec 	.word	0x3f3851ec
900133fc:	3fa3d70a 	.word	0x3fa3d70a
90013400:	3fcccccd 	.word	0x3fcccccd
90013404:	3fe66666 	.word	0x3fe66666
90013408:	3ffae148 	.word	0x3ffae148

9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
9001340c:	b570      	push	{r4, r5, r6, lr}
9001340e:	ed2d 8b06 	vpush	{d8-d10}
90013412:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90013416:	eef0 aa40 	vmov.f32	s21, s0
9001341a:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
9001341e:	4604      	mov	r4, r0
90013420:	ee30 8ac8 	vsub.f32	s16, s1, s16
90013424:	ee30 9a49 	vsub.f32	s18, s0, s18
90013428:	eeb0 aa60 	vmov.f32	s20, s1
9001342c:	ee28 0a08 	vmul.f32	s0, s16, s16
90013430:	eea9 0a09 	vfma.f32	s0, s18, s18
90013434:	f016 feb0 	bl	9002a198 <sqrtf>
90013438:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9001343c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013440:	dd36      	ble.n	900134b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90013442:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90013446:	2600      	movs	r6, #0
90013448:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
9001344c:	eec0 6a27 	vdiv.f32	s13, s0, s15
90013450:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90013454:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90013458:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
9001345c:	eec8 8a26 	vdiv.f32	s17, s16, s13
90013460:	ee89 8a26 	vdiv.f32	s16, s18, s13
90013464:	ee70 9a28 	vadd.f32	s19, s0, s17
90013468:	ee78 8aaa 	vadd.f32	s17, s17, s21
9001346c:	ee30 9ac8 	vsub.f32	s18, s1, s16
90013470:	ee3a 8a48 	vsub.f32	s16, s20, s16
90013474:	b1fd      	cbz	r5, 900134b6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90013476:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
9001347a:	eef0 0a49 	vmov.f32	s1, s18
9001347e:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90013482:	eeb0 0a69 	vmov.f32	s0, s19
90013486:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
9001348a:	4620      	mov	r0, r4
9001348c:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90013490:	f7ff fd64 	bl	90012f5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90013494:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90013498:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
9001349c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900134a0:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900134a4:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900134a8:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900134ac:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900134b0:	ecbd 8b06 	vpop	{d8-d10}
900134b4:	bd70      	pop	{r4, r5, r6, pc}
900134b6:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900134ba:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900134be:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900134c2:	b16b      	cbz	r3, 900134e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900134c4:	eef0 1a49 	vmov.f32	s3, s18
900134c8:	4620      	mov	r0, r4
900134ca:	eeb0 1a69 	vmov.f32	s2, s19
900134ce:	eef0 0a62 	vmov.f32	s1, s5
900134d2:	eeb0 0a42 	vmov.f32	s0, s4
900134d6:	f7ff feb1 	bl	9001323c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900134da:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900134de:	e7db      	b.n	90013498 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900134e0:	eef0 4a48 	vmov.f32	s9, s16
900134e4:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900134e8:	eeb0 4a68 	vmov.f32	s8, s17
900134ec:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900134f0:	eef0 3a49 	vmov.f32	s7, s18
900134f4:	4620      	mov	r0, r4
900134f6:	eeb0 3a69 	vmov.f32	s6, s19
900134fa:	f7ff fe13 	bl	90013124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900134fe:	e7cb      	b.n	90013498 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90013500 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90013500:	ee07 2a90 	vmov	s15, r2
90013504:	ee07 1a10 	vmov	s14, r1
90013508:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001350c:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90013520 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90013510:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90013514:	ee60 0aa7 	vmul.f32	s1, s1, s15
90013518:	ee20 0a27 	vmul.f32	s0, s0, s15
9001351c:	f7ff bf76 	b.w	9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013520:	3d000000 	.word	0x3d000000

90013524 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90013524:	b538      	push	{r3, r4, r5, lr}
90013526:	ed2d 8b02 	vpush	{d8}
9001352a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
9001352e:	4604      	mov	r4, r0
90013530:	b31d      	cbz	r5, 9001357a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90013532:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90013536:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001353a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
9001353e:	ee78 8a67 	vsub.f32	s17, s16, s15
90013542:	ee38 8a27 	vadd.f32	s16, s16, s15
90013546:	eef0 0a68 	vmov.f32	s1, s17
9001354a:	f7ff fd07 	bl	90012f5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
9001354e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013552:	eef0 1a48 	vmov.f32	s3, s16
90013556:	4620      	mov	r0, r4
90013558:	eeb0 0a41 	vmov.f32	s0, s2
9001355c:	eef0 0a68 	vmov.f32	s1, s17
90013560:	f7ff fe6c 	bl	9001323c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013564:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013568:	eef0 1a68 	vmov.f32	s3, s17
9001356c:	4620      	mov	r0, r4
9001356e:	eef0 0a48 	vmov.f32	s1, s16
90013572:	eeb0 0a41 	vmov.f32	s0, s2
90013576:	f7ff fe61 	bl	9001323c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001357a:	4628      	mov	r0, r5
9001357c:	ecbd 8b02 	vpop	{d8}
90013580:	bd38      	pop	{r3, r4, r5, pc}

90013582 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90013582:	b510      	push	{r4, lr}
90013584:	ed2d 8b02 	vpush	{d8}
90013588:	4604      	mov	r4, r0
9001358a:	eeb0 8a40 	vmov.f32	s16, s0
9001358e:	eef0 8a60 	vmov.f32	s17, s1
90013592:	f7ff ffc7 	bl	90013524 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90013596:	b9d0      	cbnz	r0, 900135ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90013598:	4620      	mov	r0, r4
9001359a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
9001359e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900135a2:	eef0 0a68 	vmov.f32	s1, s17
900135a6:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900135aa:	eeb0 0a48 	vmov.f32	s0, s16
900135ae:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900135b2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900135b6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900135ba:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900135be:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900135c2:	f7ff fdaf 	bl	90013124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900135c6:	2001      	movs	r0, #1
900135c8:	ecbd 8b02 	vpop	{d8}
900135cc:	bd10      	pop	{r4, pc}
900135ce:	2000      	movs	r0, #0
900135d0:	e7fa      	b.n	900135c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900135d2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900135d2:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900135d6:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900135da:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900135de:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900135e2:	f7ff be2b 	b.w	9001323c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

900135e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
900135e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900135ec:	b089      	sub	sp, #36	@ 0x24
900135ee:	461c      	mov	r4, r3
900135f0:	4682      	mov	sl, r0
900135f2:	4615      	mov	r5, r2
900135f4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900135f8:	f10d 0820 	add.w	r8, sp, #32
900135fc:	9e15      	ldr	r6, [sp, #84]	@ 0x54
900135fe:	9304      	str	r3, [sp, #16]
90013600:	2300      	movs	r3, #0
90013602:	9105      	str	r1, [sp, #20]
90013604:	9306      	str	r3, [sp, #24]
90013606:	f848 3d04 	str.w	r3, [r8, #-4]!
9001360a:	9b04      	ldr	r3, [sp, #16]
9001360c:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90013610:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90013614:	9b05      	ldr	r3, [sp, #20]
90013616:	429d      	cmp	r5, r3
90013618:	d96d      	bls.n	900136f6 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
9001361a:	3d01      	subs	r5, #1
9001361c:	f819 3005 	ldrb.w	r3, [r9, r5]
90013620:	2b06      	cmp	r3, #6
90013622:	d8f7      	bhi.n	90013614 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90013624:	a201      	add	r2, pc, #4	@ (adr r2, 9001362c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90013626:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001362a:	bf00      	nop
9001362c:	9001364b 	.word	0x9001364b
90013630:	90013615 	.word	0x90013615
90013634:	90013649 	.word	0x90013649
90013638:	9001366d 	.word	0x9001366d
9001363c:	9001366d 	.word	0x9001366d
90013640:	90013671 	.word	0x90013671
90013644:	900136b1 	.word	0x900136b1
90013648:	3c02      	subs	r4, #2
9001364a:	4650      	mov	r0, sl
9001364c:	9400      	str	r4, [sp, #0]
9001364e:	462b      	mov	r3, r5
90013650:	4642      	mov	r2, r8
90013652:	a906      	add	r1, sp, #24
90013654:	e9cd 9701 	strd	r9, r7, [sp, #4]
90013658:	f7ff fcae 	bl	90012fb8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
9001365c:	eddd 0a07 	vldr	s1, [sp, #28]
90013660:	ed9d 0a06 	vldr	s0, [sp, #24]
90013664:	4630      	mov	r0, r6
90013666:	f7ff fed1 	bl	9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001366a:	e7d3      	b.n	90013614 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001366c:	3c01      	subs	r4, #1
9001366e:	e7ec      	b.n	9001364a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90013670:	f1a4 0b04 	sub.w	fp, r4, #4
90013674:	3c02      	subs	r4, #2
90013676:	4650      	mov	r0, sl
90013678:	462b      	mov	r3, r5
9001367a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
9001367e:	f8cd b000 	str.w	fp, [sp]
90013682:	4642      	mov	r2, r8
90013684:	a906      	add	r1, sp, #24
90013686:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001368a:	f7ff fc95 	bl	90012fb8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
9001368e:	eddd 2a07 	vldr	s5, [sp, #28]
90013692:	ed9d 2a06 	vldr	s4, [sp, #24]
90013696:	4630      	mov	r0, r6
90013698:	ed54 1a01 	vldr	s3, [r4, #-4]
9001369c:	ed14 1a02 	vldr	s2, [r4, #-8]
900136a0:	edd4 0a01 	vldr	s1, [r4, #4]
900136a4:	ed94 0a00 	vldr	s0, [r4]
900136a8:	f7ff fc1a 	bl	90012ee0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900136ac:	465c      	mov	r4, fp
900136ae:	e7b1      	b.n	90013614 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900136b0:	f1a4 0b06 	sub.w	fp, r4, #6
900136b4:	3c02      	subs	r4, #2
900136b6:	4650      	mov	r0, sl
900136b8:	462b      	mov	r3, r5
900136ba:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900136be:	f8cd b000 	str.w	fp, [sp]
900136c2:	4642      	mov	r2, r8
900136c4:	a906      	add	r1, sp, #24
900136c6:	e9cd 9701 	strd	r9, r7, [sp, #4]
900136ca:	f7ff fc75 	bl	90012fb8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900136ce:	eddd 3a07 	vldr	s7, [sp, #28]
900136d2:	ed9d 3a06 	vldr	s6, [sp, #24]
900136d6:	4630      	mov	r0, r6
900136d8:	ed54 2a03 	vldr	s5, [r4, #-12]
900136dc:	ed14 2a04 	vldr	s4, [r4, #-16]
900136e0:	ed54 1a01 	vldr	s3, [r4, #-4]
900136e4:	ed14 1a02 	vldr	s2, [r4, #-8]
900136e8:	edd4 0a01 	vldr	s1, [r4, #4]
900136ec:	ed94 0a00 	vldr	s0, [r4]
900136f0:	f7ff fc15 	bl	90012f1e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900136f4:	e7da      	b.n	900136ac <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
900136f6:	9b04      	ldr	r3, [sp, #16]
900136f8:	b113      	cbz	r3, 90013700 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
900136fa:	4630      	mov	r0, r6
900136fc:	f7ff ff69 	bl	900135d2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90013700:	b009      	add	sp, #36	@ 0x24
90013702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013706:	bf00      	nop

90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90013708:	eef0 7a60 	vmov.f32	s15, s1
9001370c:	6803      	ldr	r3, [r0, #0]
9001370e:	689b      	ldr	r3, [r3, #8]
90013710:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013714:	ee17 2a90 	vmov	r2, s15
90013718:	eef0 7a40 	vmov.f32	s15, s0
9001371c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013720:	ee17 1a90 	vmov	r1, s15
90013724:	4718      	bx	r3
	...

90013728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90013728:	4b04      	ldr	r3, [pc, #16]	@ (9001373c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
9001372a:	b510      	push	{r4, lr}
9001372c:	4604      	mov	r4, r0
9001372e:	f840 3b14 	str.w	r3, [r0], #20
90013732:	f001 fb29 	bl	90014d88 <_ZN8touchgfx7OutlineD1Ev>
90013736:	4620      	mov	r0, r4
90013738:	bd10      	pop	{r4, pc}
9001373a:	bf00      	nop
9001373c:	9002edb4 	.word	0x9002edb4

90013740 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90013740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013744:	ed2d 8b04 	vpush	{d8-d9}
90013748:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
9001374c:	b0b5      	sub	sp, #212	@ 0xd4
9001374e:	4605      	mov	r5, r0
90013750:	468b      	mov	fp, r1
90013752:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90013756:	9206      	str	r2, [sp, #24]
90013758:	461e      	mov	r6, r3
9001375a:	2400      	movs	r4, #0
9001375c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013760:	f240 814f 	bls.w	90013a02 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90013764:	23ff      	movs	r3, #255	@ 0xff
90013766:	1d02      	adds	r2, r0, #4
90013768:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90013a08 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
9001376c:	f04f 0800 	mov.w	r8, #0
90013770:	9300      	str	r3, [sp, #0]
90013772:	af08      	add	r7, sp, #32
90013774:	6981      	ldr	r1, [r0, #24]
90013776:	a808      	add	r0, sp, #32
90013778:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
9001377a:	eef0 9a49 	vmov.f32	s19, s18
9001377e:	f016 f861 	bl	90029844 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90013782:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
90013786:	4ba1      	ldr	r3, [pc, #644]	@ (90013a0c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90013788:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001378c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90013790:	2201      	movs	r2, #1
90013792:	9308      	str	r3, [sp, #32]
90013794:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90013798:	edd5 6a08 	vldr	s13, [r5, #32]
9001379c:	eeb0 8a49 	vmov.f32	s16, s18
900137a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900137a4:	9325      	str	r3, [sp, #148]	@ 0x94
900137a6:	f04f 0300 	mov.w	r3, #0
900137aa:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900137ae:	7f6a      	ldrb	r2, [r5, #29]
900137b0:	eef0 8a49 	vmov.f32	s17, s18
900137b4:	bf48      	it	mi
900137b6:	eef1 7a67 	vnegmi.f32	s15, s15
900137ba:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900137be:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900137c2:	46c1      	mov	r9, r8
900137c4:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900137c8:	f04f 0a01 	mov.w	sl, #1
900137cc:	ee67 7a87 	vmul.f32	s15, s15, s14
900137d0:	7fab      	ldrb	r3, [r5, #30]
900137d2:	942a      	str	r4, [sp, #168]	@ 0xa8
900137d4:	435a      	muls	r2, r3
900137d6:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900137da:	ee26 7aa7 	vmul.f32	s14, s13, s15
900137de:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900137e2:	1c53      	adds	r3, r2, #1
900137e4:	942b      	str	r4, [sp, #172]	@ 0xac
900137e6:	942c      	str	r4, [sp, #176]	@ 0xb0
900137e8:	ee27 7a26 	vmul.f32	s14, s14, s13
900137ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900137f0:	942d      	str	r4, [sp, #180]	@ 0xb4
900137f2:	942e      	str	r4, [sp, #184]	@ 0xb8
900137f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900137f8:	ee67 7a27 	vmul.f32	s15, s14, s15
900137fc:	942f      	str	r4, [sp, #188]	@ 0xbc
900137fe:	9430      	str	r4, [sp, #192]	@ 0xc0
90013800:	9431      	str	r4, [sp, #196]	@ 0xc4
90013802:	9432      	str	r4, [sp, #200]	@ 0xc8
90013804:	9433      	str	r4, [sp, #204]	@ 0xcc
90013806:	4644      	mov	r4, r8
90013808:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
9001380c:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90013810:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90013814:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90013818:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
9001381c:	9b06      	ldr	r3, [sp, #24]
9001381e:	454b      	cmp	r3, r9
90013820:	f000 80cc 	beq.w	900139bc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90013824:	f109 0301 	add.w	r3, r9, #1
90013828:	9305      	str	r3, [sp, #20]
9001382a:	f81b 3009 	ldrb.w	r3, [fp, r9]
9001382e:	2b06      	cmp	r3, #6
90013830:	d839      	bhi.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013832:	e8df f003 	tbb	[pc, r3]
90013836:	3b04      	.short	0x3b04
90013838:	817c6f60 	.word	0x817c6f60
9001383c:	a0          	.byte	0xa0
9001383d:	00          	.byte	0x00
9001383e:	45c1      	cmp	r9, r8
90013840:	d92b      	bls.n	9001389a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90013842:	eef0 0a49 	vmov.f32	s1, s18
90013846:	4638      	mov	r0, r7
90013848:	eeb0 0a69 	vmov.f32	s0, s19
9001384c:	f7ff fdde 	bl	9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013850:	4638      	mov	r0, r7
90013852:	f7ff fe67 	bl	90013524 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90013856:	4681      	mov	r9, r0
90013858:	b9f8      	cbnz	r0, 9001389a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001385a:	eef0 0a49 	vmov.f32	s1, s18
9001385e:	4638      	mov	r0, r7
90013860:	eeb0 0a69 	vmov.f32	s0, s19
90013864:	f7ff fe8d 	bl	90013582 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90013868:	4628      	mov	r0, r5
9001386a:	4623      	mov	r3, r4
9001386c:	9a05      	ldr	r2, [sp, #20]
9001386e:	4641      	mov	r1, r8
90013870:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90013874:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90013878:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
9001387c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90013880:	e9cd 9702 	strd	r9, r7, [sp, #8]
90013884:	e9cd b600 	strd	fp, r6, [sp]
90013888:	f7ff feae 	bl	900135e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
9001388c:	eef0 0a49 	vmov.f32	s1, s18
90013890:	eeb0 0a69 	vmov.f32	s0, s19
90013894:	4638      	mov	r0, r7
90013896:	f7ff fe74 	bl	90013582 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001389a:	eeb0 8a49 	vmov.f32	s16, s18
9001389e:	f8dd 8014 	ldr.w	r8, [sp, #20]
900138a2:	eef0 8a69 	vmov.f32	s17, s19
900138a6:	f8dd 9014 	ldr.w	r9, [sp, #20]
900138aa:	e7b7      	b.n	9001381c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900138ac:	45c1      	cmp	r9, r8
900138ae:	d90d      	bls.n	900138cc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900138b0:	4638      	mov	r0, r7
900138b2:	f7ff fe37 	bl	90013524 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900138b6:	b948      	cbnz	r0, 900138cc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900138b8:	4623      	mov	r3, r4
900138ba:	464a      	mov	r2, r9
900138bc:	4641      	mov	r1, r8
900138be:	4628      	mov	r0, r5
900138c0:	e9cd a702 	strd	sl, r7, [sp, #8]
900138c4:	e9cd b600 	strd	fp, r6, [sp]
900138c8:	f7ff fe8e 	bl	900135e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900138cc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900138d0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900138d4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900138d8:	3402      	adds	r4, #2
900138da:	edd3 8a00 	vldr	s17, [r3]
900138de:	46c8      	mov	r8, r9
900138e0:	ed93 8a01 	vldr	s16, [r3, #4]
900138e4:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900138e8:	eef0 9a68 	vmov.f32	s19, s17
900138ec:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900138f0:	eeb0 9a48 	vmov.f32	s18, s16
900138f4:	e7d7      	b.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900138f6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900138fa:	4638      	mov	r0, r7
900138fc:	3402      	adds	r4, #2
900138fe:	edd3 8a00 	vldr	s17, [r3]
90013902:	ed93 8a01 	vldr	s16, [r3, #4]
90013906:	eeb0 0a68 	vmov.f32	s0, s17
9001390a:	eef0 0a48 	vmov.f32	s1, s16
9001390e:	f7ff fd7d 	bl	9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013912:	e7c8      	b.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013914:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013918:	edd3 8a00 	vldr	s17, [r3]
9001391c:	eef0 0a48 	vmov.f32	s1, s16
90013920:	4638      	mov	r0, r7
90013922:	eeb0 0a68 	vmov.f32	s0, s17
90013926:	3401      	adds	r4, #1
90013928:	f7ff fd70 	bl	9001340c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001392c:	e7bb      	b.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001392e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013932:	ed93 8a00 	vldr	s16, [r3]
90013936:	e7f1      	b.n	9001391c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90013938:	00a3      	lsls	r3, r4, #2
9001393a:	eef0 0a48 	vmov.f32	s1, s16
9001393e:	eeb0 0a68 	vmov.f32	s0, s17
90013942:	4638      	mov	r0, r7
90013944:	f103 0208 	add.w	r2, r3, #8
90013948:	f103 090c 	add.w	r9, r3, #12
9001394c:	4433      	add	r3, r6
9001394e:	3404      	adds	r4, #4
90013950:	4432      	add	r2, r6
90013952:	44b1      	add	r9, r6
90013954:	edd3 1a01 	vldr	s3, [r3, #4]
90013958:	ed92 2a00 	vldr	s4, [r2]
9001395c:	edd9 2a00 	vldr	s5, [r9]
90013960:	ed93 1a00 	vldr	s2, [r3]
90013964:	9207      	str	r2, [sp, #28]
90013966:	f7ff fabb 	bl	90012ee0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001396a:	9a07      	ldr	r2, [sp, #28]
9001396c:	ed99 8a00 	vldr	s16, [r9]
90013970:	edd2 8a00 	vldr	s17, [r2]
90013974:	e797      	b.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013976:	00a3      	lsls	r3, r4, #2
90013978:	eef0 0a48 	vmov.f32	s1, s16
9001397c:	eeb0 0a68 	vmov.f32	s0, s17
90013980:	4638      	mov	r0, r7
90013982:	f103 0210 	add.w	r2, r3, #16
90013986:	f103 0914 	add.w	r9, r3, #20
9001398a:	4433      	add	r3, r6
9001398c:	3406      	adds	r4, #6
9001398e:	4432      	add	r2, r6
90013990:	44b1      	add	r9, r6
90013992:	edd3 2a03 	vldr	s5, [r3, #12]
90013996:	ed92 3a00 	vldr	s6, [r2]
9001399a:	edd9 3a00 	vldr	s7, [r9]
9001399e:	ed93 2a02 	vldr	s4, [r3, #8]
900139a2:	edd3 1a01 	vldr	s3, [r3, #4]
900139a6:	ed93 1a00 	vldr	s2, [r3]
900139aa:	9207      	str	r2, [sp, #28]
900139ac:	f7ff fab7 	bl	90012f1e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900139b0:	9a07      	ldr	r2, [sp, #28]
900139b2:	ed99 8a00 	vldr	s16, [r9]
900139b6:	edd2 8a00 	vldr	s17, [r2]
900139ba:	e774      	b.n	900138a6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900139bc:	9b06      	ldr	r3, [sp, #24]
900139be:	af08      	add	r7, sp, #32
900139c0:	4543      	cmp	r3, r8
900139c2:	d90f      	bls.n	900139e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900139c4:	4638      	mov	r0, r7
900139c6:	f7ff fdad 	bl	90013524 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900139ca:	b958      	cbnz	r0, 900139e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900139cc:	2301      	movs	r3, #1
900139ce:	9703      	str	r7, [sp, #12]
900139d0:	f8cd b000 	str.w	fp, [sp]
900139d4:	4641      	mov	r1, r8
900139d6:	9a06      	ldr	r2, [sp, #24]
900139d8:	4628      	mov	r0, r5
900139da:	e9cd 6301 	strd	r6, r3, [sp, #4]
900139de:	4623      	mov	r3, r4
900139e0:	f7ff fe02 	bl	900135e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900139e4:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900139e8:	4638      	mov	r0, r7
900139ea:	f015 ffbf 	bl	9002996c <_ZN8touchgfx6Canvas6renderEh>
900139ee:	4604      	mov	r4, r0
900139f0:	4638      	mov	r0, r7
900139f2:	f7ff fe99 	bl	90013728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900139f6:	4620      	mov	r0, r4
900139f8:	b035      	add	sp, #212	@ 0xd4
900139fa:	ecbd 8b04 	vpop	{d8-d9}
900139fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013a02:	2401      	movs	r4, #1
90013a04:	e7f7      	b.n	900139f6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90013a06:	bf00      	nop
90013a08:	00000000 	.word	0x00000000
90013a0c:	9002e644 	.word	0x9002e644

90013a10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90013a10:	b510      	push	{r4, lr}
90013a12:	4604      	mov	r4, r0
90013a14:	f7ff fe88 	bl	90013728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90013a18:	21b0      	movs	r1, #176	@ 0xb0
90013a1a:	4620      	mov	r0, r4
90013a1c:	f016 fb92 	bl	9002a144 <_ZdlPvj>
90013a20:	4620      	mov	r0, r4
90013a22:	bd10      	pop	{r4, pc}

90013a24 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90013a24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013a28:	4698      	mov	r8, r3
90013a2a:	23ff      	movs	r3, #255	@ 0xff
90013a2c:	4607      	mov	r7, r0
90013a2e:	4689      	mov	r9, r1
90013a30:	4692      	mov	sl, r2
90013a32:	1d02      	adds	r2, r0, #4
90013a34:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90013a38:	2400      	movs	r4, #0
90013a3a:	44ca      	add	sl, r9
90013a3c:	ed2d 8b06 	vpush	{d8-d10}
90013a40:	b0aa      	sub	sp, #168	@ 0xa8
90013a42:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90013c48 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90013a46:	9300      	str	r3, [sp, #0]
90013a48:	eef0 8a48 	vmov.f32	s17, s16
90013a4c:	6981      	ldr	r1, [r0, #24]
90013a4e:	a80d      	add	r0, sp, #52	@ 0x34
90013a50:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90013a52:	f015 fef7 	bl	90029844 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90013a56:	7f3b      	ldrb	r3, [r7, #28]
90013a58:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90013c48 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90013a5c:	4628      	mov	r0, r5
90013a5e:	1e5a      	subs	r2, r3, #1
90013a60:	eeb0 0a60 	vmov.f32	s0, s1
90013a64:	4253      	negs	r3, r2
90013a66:	4153      	adcs	r3, r2
90013a68:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90013a6c:	f005 fb39 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013a70:	eeb0 9a40 	vmov.f32	s18, s0
90013a74:	eef0 9a60 	vmov.f32	s19, s1
90013a78:	45ca      	cmp	sl, r9
90013a7a:	f000 80cd 	beq.w	90013c18 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90013a7e:	f819 3b01 	ldrb.w	r3, [r9], #1
90013a82:	2b06      	cmp	r3, #6
90013a84:	d8f8      	bhi.n	90013a78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013a86:	e8df f003 	tbb	[pc, r3]
90013a8a:	0804      	.short	0x0804
90013a8c:	58533f2a 	.word	0x58533f2a
90013a90:	8a          	.byte	0x8a
90013a91:	00          	.byte	0x00
90013a92:	a80d      	add	r0, sp, #52	@ 0x34
90013a94:	f015 ff48 	bl	90029928 <_ZN8touchgfx6Canvas5closeEv>
90013a98:	e7ee      	b.n	90013a78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013a9a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013a9e:	4628      	mov	r0, r5
90013aa0:	ed93 8a01 	vldr	s16, [r3, #4]
90013aa4:	edd3 8a00 	vldr	s17, [r3]
90013aa8:	eef0 0a48 	vmov.f32	s1, s16
90013aac:	eeb0 0a68 	vmov.f32	s0, s17
90013ab0:	f005 fb17 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013ab4:	a80d      	add	r0, sp, #52	@ 0x34
90013ab6:	eef0 7a60 	vmov.f32	s15, s1
90013aba:	eeb0 9a40 	vmov.f32	s18, s0
90013abe:	eef0 9a60 	vmov.f32	s19, s1
90013ac2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013ac6:	ee17 2a90 	vmov	r2, s15
90013aca:	eef0 7a40 	vmov.f32	s15, s0
90013ace:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013ad2:	ee17 1a90 	vmov	r1, s15
90013ad6:	f016 f801 	bl	90029adc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90013ada:	3402      	adds	r4, #2
90013adc:	e7cc      	b.n	90013a78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013ade:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013ae2:	4628      	mov	r0, r5
90013ae4:	edd3 8a00 	vldr	s17, [r3]
90013ae8:	ed93 8a01 	vldr	s16, [r3, #4]
90013aec:	eeb0 0a68 	vmov.f32	s0, s17
90013af0:	eef0 0a48 	vmov.f32	s1, s16
90013af4:	f005 faf5 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013af8:	a80d      	add	r0, sp, #52	@ 0x34
90013afa:	eeb0 9a40 	vmov.f32	s18, s0
90013afe:	eef0 9a60 	vmov.f32	s19, s1
90013b02:	f7ff fe01 	bl	90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90013b06:	e7e8      	b.n	90013ada <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90013b08:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013b0c:	edd3 8a00 	vldr	s17, [r3]
90013b10:	eef0 0a48 	vmov.f32	s1, s16
90013b14:	4628      	mov	r0, r5
90013b16:	eeb0 0a68 	vmov.f32	s0, s17
90013b1a:	3401      	adds	r4, #1
90013b1c:	f005 fae1 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013b20:	a80d      	add	r0, sp, #52	@ 0x34
90013b22:	eef0 9a60 	vmov.f32	s19, s1
90013b26:	eeb0 9a40 	vmov.f32	s18, s0
90013b2a:	f7ff fded 	bl	90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90013b2e:	e7a3      	b.n	90013a78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013b30:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013b34:	ed93 8a00 	vldr	s16, [r3]
90013b38:	e7ea      	b.n	90013b10 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90013b3a:	1ca3      	adds	r3, r4, #2
90013b3c:	4628      	mov	r0, r5
90013b3e:	3404      	adds	r4, #4
90013b40:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90013b44:	ed53 0a01 	vldr	s1, [r3, #-4]
90013b48:	ed13 0a02 	vldr	s0, [r3, #-8]
90013b4c:	edd3 8a00 	vldr	s17, [r3]
90013b50:	ed93 8a01 	vldr	s16, [r3, #4]
90013b54:	f005 fac5 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013b58:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90013b5c:	eeb0 0a68 	vmov.f32	s0, s17
90013b60:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90013b64:	eef0 0a48 	vmov.f32	s1, s16
90013b68:	4628      	mov	r0, r5
90013b6a:	f005 faba 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013b6e:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90013b72:	eef0 2a60 	vmov.f32	s5, s1
90013b76:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90013b7a:	eeb0 2a40 	vmov.f32	s4, s0
90013b7e:	a80d      	add	r0, sp, #52	@ 0x34
90013b80:	eeb0 aa40 	vmov.f32	s20, s0
90013b84:	eef0 aa60 	vmov.f32	s21, s1
90013b88:	eeb0 0a49 	vmov.f32	s0, s18
90013b8c:	eef0 0a69 	vmov.f32	s1, s19
90013b90:	f7ff f9a6 	bl	90012ee0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90013b94:	eef0 9a6a 	vmov.f32	s19, s21
90013b98:	eeb0 9a4a 	vmov.f32	s18, s20
90013b9c:	e76c      	b.n	90013a78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013b9e:	1d26      	adds	r6, r4, #4
90013ba0:	4628      	mov	r0, r5
90013ba2:	3406      	adds	r4, #6
90013ba4:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90013ba8:	ed56 0a03 	vldr	s1, [r6, #-12]
90013bac:	ed16 0a04 	vldr	s0, [r6, #-16]
90013bb0:	edd6 8a00 	vldr	s17, [r6]
90013bb4:	ed96 8a01 	vldr	s16, [r6, #4]
90013bb8:	f005 fa93 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013bbc:	ed8d 0a07 	vstr	s0, [sp, #28]
90013bc0:	4628      	mov	r0, r5
90013bc2:	ed16 0a02 	vldr	s0, [r6, #-8]
90013bc6:	edcd 0a08 	vstr	s1, [sp, #32]
90013bca:	ed56 0a01 	vldr	s1, [r6, #-4]
90013bce:	f005 fa88 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013bd2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90013bd6:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90013bda:	eeb0 0a68 	vmov.f32	s0, s17
90013bde:	eef0 0a48 	vmov.f32	s1, s16
90013be2:	4628      	mov	r0, r5
90013be4:	f005 fa7d 	bl	900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013be8:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90013bec:	eeb0 3a40 	vmov.f32	s6, s0
90013bf0:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90013bf4:	eef0 3a60 	vmov.f32	s7, s1
90013bf8:	eddd 1a08 	vldr	s3, [sp, #32]
90013bfc:	eeb0 aa40 	vmov.f32	s20, s0
90013c00:	ed9d 1a07 	vldr	s2, [sp, #28]
90013c04:	eef0 aa60 	vmov.f32	s21, s1
90013c08:	a80d      	add	r0, sp, #52	@ 0x34
90013c0a:	eef0 0a69 	vmov.f32	s1, s19
90013c0e:	eeb0 0a49 	vmov.f32	s0, s18
90013c12:	f7ff f984 	bl	90012f1e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90013c16:	e7bd      	b.n	90013b94 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90013c18:	7f7b      	ldrb	r3, [r7, #29]
90013c1a:	a80d      	add	r0, sp, #52	@ 0x34
90013c1c:	7fb9      	ldrb	r1, [r7, #30]
90013c1e:	4359      	muls	r1, r3
90013c20:	1c4b      	adds	r3, r1, #1
90013c22:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90013c26:	f3c1 2107 	ubfx	r1, r1, #8, #8
90013c2a:	f015 fe9f 	bl	9002996c <_ZN8touchgfx6Canvas6renderEh>
90013c2e:	4b07      	ldr	r3, [pc, #28]	@ (90013c4c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90013c30:	4604      	mov	r4, r0
90013c32:	a812      	add	r0, sp, #72	@ 0x48
90013c34:	930d      	str	r3, [sp, #52]	@ 0x34
90013c36:	f001 f8a7 	bl	90014d88 <_ZN8touchgfx7OutlineD1Ev>
90013c3a:	4620      	mov	r0, r4
90013c3c:	b02a      	add	sp, #168	@ 0xa8
90013c3e:	ecbd 8b06 	vpop	{d8-d10}
90013c42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90013c46:	bf00      	nop
90013c48:	00000000 	.word	0x00000000
90013c4c:	9002edb4 	.word	0x9002edb4

90013c50 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90013c50:	b410      	push	{r4}
90013c52:	7f04      	ldrb	r4, [r0, #28]
90013c54:	b11c      	cbz	r4, 90013c5e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90013c56:	f85d 4b04 	ldr.w	r4, [sp], #4
90013c5a:	f7ff bee3 	b.w	90013a24 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90013c5e:	f85d 4b04 	ldr.w	r4, [sp], #4
90013c62:	f7ff bd6d 	b.w	90013740 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90013c68 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90013c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013c6c:	4691      	mov	r9, r2
90013c6e:	4602      	mov	r2, r0
90013c70:	b085      	sub	sp, #20
90013c72:	4605      	mov	r5, r0
90013c74:	f852 0f26 	ldr.w	r0, [r2, #38]!
90013c78:	4688      	mov	r8, r1
90013c7a:	469a      	mov	sl, r3
90013c7c:	ab02      	add	r3, sp, #8
90013c7e:	6851      	ldr	r1, [r2, #4]
90013c80:	af02      	add	r7, sp, #8
90013c82:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
90013c86:	c303      	stmia	r3!, {r0, r1}
90013c88:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013c8c:	2b00      	cmp	r3, #0
90013c8e:	dd08      	ble.n	90013ca2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013c90:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90013c94:	2c00      	cmp	r4, #0
90013c96:	dd04      	ble.n	90013ca2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013c98:	4a2e      	ldr	r2, [pc, #184]	@ (90013d54 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90013c9a:	7812      	ldrb	r2, [r2, #0]
90013c9c:	b122      	cbz	r2, 90013ca8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90013c9e:	2a01      	cmp	r2, #1
90013ca0:	d02d      	beq.n	90013cfe <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
90013ca2:	b005      	add	sp, #20
90013ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013ca8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013cac:	441c      	add	r4, r3
90013cae:	b2a4      	uxth	r4, r4
90013cb0:	b226      	sxth	r6, r4
90013cb2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90013cb6:	42b3      	cmp	r3, r6
90013cb8:	daf3      	bge.n	90013ca2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013cba:	4653      	mov	r3, sl
90013cbc:	464a      	mov	r2, r9
90013cbe:	4641      	mov	r1, r8
90013cc0:	4628      	mov	r0, r5
90013cc2:	e9cd b700 	strd	fp, r7, [sp]
90013cc6:	f7ff ffc3 	bl	90013c50 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90013cca:	b940      	cbnz	r0, 90013cde <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90013ccc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013cd0:	2b01      	cmp	r3, #1
90013cd2:	d004      	beq.n	90013cde <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90013cd4:	3301      	adds	r3, #1
90013cd6:	105b      	asrs	r3, r3, #1
90013cd8:	f8ad 300e 	strh.w	r3, [sp, #14]
90013cdc:	e7ed      	b.n	90013cba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90013cde:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013ce2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013ce6:	4413      	add	r3, r2
90013ce8:	b29b      	uxth	r3, r3
90013cea:	441a      	add	r2, r3
90013cec:	f8ad 300a 	strh.w	r3, [sp, #10]
90013cf0:	b212      	sxth	r2, r2
90013cf2:	4296      	cmp	r6, r2
90013cf4:	dadd      	bge.n	90013cb2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90013cf6:	1ae3      	subs	r3, r4, r3
90013cf8:	f8ad 300e 	strh.w	r3, [sp, #14]
90013cfc:	e7d9      	b.n	90013cb2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90013cfe:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90013d02:	441c      	add	r4, r3
90013d04:	b2a4      	uxth	r4, r4
90013d06:	b226      	sxth	r6, r4
90013d08:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90013d0c:	42b3      	cmp	r3, r6
90013d0e:	dac8      	bge.n	90013ca2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013d10:	4653      	mov	r3, sl
90013d12:	464a      	mov	r2, r9
90013d14:	4641      	mov	r1, r8
90013d16:	4628      	mov	r0, r5
90013d18:	e9cd b700 	strd	fp, r7, [sp]
90013d1c:	f7ff ff98 	bl	90013c50 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90013d20:	b940      	cbnz	r0, 90013d34 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90013d22:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013d26:	2b01      	cmp	r3, #1
90013d28:	d004      	beq.n	90013d34 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90013d2a:	3301      	adds	r3, #1
90013d2c:	105b      	asrs	r3, r3, #1
90013d2e:	f8ad 300c 	strh.w	r3, [sp, #12]
90013d32:	e7ed      	b.n	90013d10 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90013d34:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013d38:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90013d3c:	4413      	add	r3, r2
90013d3e:	b29b      	uxth	r3, r3
90013d40:	441a      	add	r2, r3
90013d42:	f8ad 3008 	strh.w	r3, [sp, #8]
90013d46:	b212      	sxth	r2, r2
90013d48:	4296      	cmp	r6, r2
90013d4a:	dadd      	bge.n	90013d08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90013d4c:	1ae3      	subs	r3, r4, r3
90013d4e:	f8ad 300c 	strh.w	r3, [sp, #12]
90013d52:	e7d9      	b.n	90013d08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90013d54:	24021d5c 	.word	0x24021d5c

90013d58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013d58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013d5a:	6803      	ldr	r3, [r0, #0]
90013d5c:	460d      	mov	r5, r1
90013d5e:	4604      	mov	r4, r0
90013d60:	4601      	mov	r1, r0
90013d62:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013d64:	a802      	add	r0, sp, #8
90013d66:	4798      	blx	r3
90013d68:	6828      	ldr	r0, [r5, #0]
90013d6a:	6869      	ldr	r1, [r5, #4]
90013d6c:	466b      	mov	r3, sp
90013d6e:	c303      	stmia	r3!, {r0, r1}
90013d70:	4668      	mov	r0, sp
90013d72:	4619      	mov	r1, r3
90013d74:	f7fd fb72 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90013d78:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90013d7a:	b188      	cbz	r0, 90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d7c:	6803      	ldr	r3, [r0, #0]
90013d7e:	1d21      	adds	r1, r4, #4
90013d80:	68db      	ldr	r3, [r3, #12]
90013d82:	4798      	blx	r3
90013d84:	b160      	cbz	r0, 90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d86:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013d8a:	2b00      	cmp	r3, #0
90013d8c:	dd08      	ble.n	90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d8e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013d92:	2d00      	cmp	r5, #0
90013d94:	dd04      	ble.n	90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d96:	4a2b      	ldr	r2, [pc, #172]	@ (90013e44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013d98:	7812      	ldrb	r2, [r2, #0]
90013d9a:	b11a      	cbz	r2, 90013da4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013d9c:	2a01      	cmp	r2, #1
90013d9e:	d029      	beq.n	90013df4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013da0:	b004      	add	sp, #16
90013da2:	bd70      	pop	{r4, r5, r6, pc}
90013da4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013da8:	441d      	add	r5, r3
90013daa:	b2ad      	uxth	r5, r5
90013dac:	b22e      	sxth	r6, r5
90013dae:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013db2:	42b3      	cmp	r3, r6
90013db4:	daf4      	bge.n	90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013db6:	6823      	ldr	r3, [r4, #0]
90013db8:	4669      	mov	r1, sp
90013dba:	4620      	mov	r0, r4
90013dbc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013dbe:	4798      	blx	r3
90013dc0:	b940      	cbnz	r0, 90013dd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013dc2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013dc6:	2b01      	cmp	r3, #1
90013dc8:	d004      	beq.n	90013dd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013dca:	3301      	adds	r3, #1
90013dcc:	105b      	asrs	r3, r3, #1
90013dce:	f8ad 3006 	strh.w	r3, [sp, #6]
90013dd2:	e7f0      	b.n	90013db6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013dd4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013dd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013ddc:	4413      	add	r3, r2
90013dde:	b29b      	uxth	r3, r3
90013de0:	441a      	add	r2, r3
90013de2:	f8ad 3002 	strh.w	r3, [sp, #2]
90013de6:	b212      	sxth	r2, r2
90013de8:	4296      	cmp	r6, r2
90013dea:	dae0      	bge.n	90013dae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013dec:	1aeb      	subs	r3, r5, r3
90013dee:	f8ad 3006 	strh.w	r3, [sp, #6]
90013df2:	e7dc      	b.n	90013dae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013df4:	f8bd 5000 	ldrh.w	r5, [sp]
90013df8:	441d      	add	r5, r3
90013dfa:	b2ad      	uxth	r5, r5
90013dfc:	b22e      	sxth	r6, r5
90013dfe:	f9bd 3000 	ldrsh.w	r3, [sp]
90013e02:	42b3      	cmp	r3, r6
90013e04:	dacc      	bge.n	90013da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013e06:	6823      	ldr	r3, [r4, #0]
90013e08:	4669      	mov	r1, sp
90013e0a:	4620      	mov	r0, r4
90013e0c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013e0e:	4798      	blx	r3
90013e10:	b940      	cbnz	r0, 90013e24 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013e12:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013e16:	2b01      	cmp	r3, #1
90013e18:	d004      	beq.n	90013e24 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013e1a:	3301      	adds	r3, #1
90013e1c:	105b      	asrs	r3, r3, #1
90013e1e:	f8ad 3004 	strh.w	r3, [sp, #4]
90013e22:	e7f0      	b.n	90013e06 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013e24:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013e28:	f8bd 3000 	ldrh.w	r3, [sp]
90013e2c:	4413      	add	r3, r2
90013e2e:	b29b      	uxth	r3, r3
90013e30:	441a      	add	r2, r3
90013e32:	f8ad 3000 	strh.w	r3, [sp]
90013e36:	b212      	sxth	r2, r2
90013e38:	4296      	cmp	r6, r2
90013e3a:	dae0      	bge.n	90013dfe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013e3c:	1aeb      	subs	r3, r5, r3
90013e3e:	f8ad 3004 	strh.w	r3, [sp, #4]
90013e42:	e7dc      	b.n	90013dfe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013e44:	24021d5c 	.word	0x24021d5c

90013e48 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013e48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013e4a:	6803      	ldr	r3, [r0, #0]
90013e4c:	4604      	mov	r4, r0
90013e4e:	4601      	mov	r1, r0
90013e50:	4668      	mov	r0, sp
90013e52:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013e54:	4798      	blx	r3
90013e56:	2100      	movs	r1, #0
90013e58:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013e5c:	4668      	mov	r0, sp
90013e5e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013e62:	9102      	str	r1, [sp, #8]
90013e64:	a902      	add	r1, sp, #8
90013e66:	f8ad 200c 	strh.w	r2, [sp, #12]
90013e6a:	f8ad 300e 	strh.w	r3, [sp, #14]
90013e6e:	f7fd faf5 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90013e72:	6823      	ldr	r3, [r4, #0]
90013e74:	4669      	mov	r1, sp
90013e76:	4620      	mov	r0, r4
90013e78:	691b      	ldr	r3, [r3, #16]
90013e7a:	4798      	blx	r3
90013e7c:	b004      	add	sp, #16
90013e7e:	bd10      	pop	{r4, pc}

90013e80 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013e80:	2101      	movs	r1, #1
90013e82:	2200      	movs	r2, #0
90013e84:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013e88:	490a      	ldr	r1, [pc, #40]	@ (90013eb4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013e8a:	8082      	strh	r2, [r0, #4]
90013e8c:	6001      	str	r1, [r0, #0]
90013e8e:	21ff      	movs	r1, #255	@ 0xff
90013e90:	80c2      	strh	r2, [r0, #6]
90013e92:	8102      	strh	r2, [r0, #8]
90013e94:	8142      	strh	r2, [r0, #10]
90013e96:	8182      	strh	r2, [r0, #12]
90013e98:	81c2      	strh	r2, [r0, #14]
90013e9a:	8202      	strh	r2, [r0, #16]
90013e9c:	8242      	strh	r2, [r0, #18]
90013e9e:	61c2      	str	r2, [r0, #28]
90013ea0:	8402      	strh	r2, [r0, #32]
90013ea2:	8442      	strh	r2, [r0, #34]	@ 0x22
90013ea4:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90013ea8:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90013eac:	6282      	str	r2, [r0, #40]	@ 0x28
90013eae:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013eb2:	4770      	bx	lr
90013eb4:	9002e6a4 	.word	0x9002e6a4

90013eb8 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
90013eb8:	880b      	ldrh	r3, [r1, #0]
90013eba:	8643      	strh	r3, [r0, #50]	@ 0x32
90013ebc:	4770      	bx	lr

90013ebe <_ZN8touchgfx13AnimatedImageD1Ev>:
90013ebe:	4770      	bx	lr

90013ec0 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
90013ec0:	880b      	ldrh	r3, [r1, #0]
90013ec2:	8603      	strh	r3, [r0, #48]	@ 0x30
90013ec4:	f000 bdfb 	b.w	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

90013ec8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
90013ec8:	b513      	push	{r0, r1, r4, lr}
90013eca:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90013ece:	4604      	mov	r4, r0
90013ed0:	b143      	cbz	r3, 90013ee4 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
90013ed2:	f003 fac7 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90013ed6:	4621      	mov	r1, r4
90013ed8:	3004      	adds	r0, #4
90013eda:	f003 fae8 	bl	900174ae <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90013ede:	2300      	movs	r3, #0
90013ee0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90013ee4:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90013ee8:	b163      	cbz	r3, 90013f04 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
90013eea:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90013eec:	a901      	add	r1, sp, #4
90013eee:	4620      	mov	r0, r4
90013ef0:	f8ad 3004 	strh.w	r3, [sp, #4]
90013ef4:	f000 fde3 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90013ef8:	6823      	ldr	r3, [r4, #0]
90013efa:	4620      	mov	r0, r4
90013efc:	695b      	ldr	r3, [r3, #20]
90013efe:	4798      	blx	r3
90013f00:	b002      	add	sp, #8
90013f02:	bd10      	pop	{r4, pc}
90013f04:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90013f06:	e7f1      	b.n	90013eec <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

90013f08 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
90013f08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90013f0a:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90013f0e:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
90013f10:	4604      	mov	r4, r0
90013f12:	42bd      	cmp	r5, r7
90013f14:	d01a      	beq.n	90013f4c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90013f16:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
90013f18:	42be      	cmp	r6, r7
90013f1a:	d017      	beq.n	90013f4c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90013f1c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
90013f20:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
90013f24:	b1a1      	cbz	r1, 90013f50 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
90013f26:	b142      	cbz	r2, 90013f3a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90013f28:	a902      	add	r1, sp, #8
90013f2a:	f821 6d04 	strh.w	r6, [r1, #-4]!
90013f2e:	f000 fdc6 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90013f32:	6823      	ldr	r3, [r4, #0]
90013f34:	4620      	mov	r0, r4
90013f36:	695b      	ldr	r3, [r3, #20]
90013f38:	4798      	blx	r3
90013f3a:	f003 fa93 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90013f3e:	4621      	mov	r1, r4
90013f40:	3004      	adds	r0, #4
90013f42:	f003 fb5d 	bl	90017600 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90013f46:	2301      	movs	r3, #1
90013f48:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90013f4c:	b003      	add	sp, #12
90013f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013f50:	2a00      	cmp	r2, #0
90013f52:	d0f2      	beq.n	90013f3a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90013f54:	a902      	add	r1, sp, #8
90013f56:	f821 5d04 	strh.w	r5, [r1, #-4]!
90013f5a:	e7e8      	b.n	90013f2e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

90013f5c <_ZN8touchgfx13AnimatedImageD0Ev>:
90013f5c:	b510      	push	{r4, lr}
90013f5e:	4604      	mov	r4, r0
90013f60:	213c      	movs	r1, #60	@ 0x3c
90013f62:	f016 f8ef 	bl	9002a144 <_ZdlPvj>
90013f66:	4620      	mov	r0, r4
90013f68:	bd10      	pop	{r4, pc}

90013f6a <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
90013f6a:	b510      	push	{r4, lr}
90013f6c:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90013f70:	4604      	mov	r4, r0
90013f72:	b14b      	cbz	r3, 90013f88 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
90013f74:	f003 fa76 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90013f78:	4621      	mov	r1, r4
90013f7a:	3004      	adds	r0, #4
90013f7c:	f003 fa97 	bl	900174ae <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90013f80:	2300      	movs	r3, #0
90013f82:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90013f86:	bd10      	pop	{r4, pc}
90013f88:	f003 fa6c 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90013f8c:	4621      	mov	r1, r4
90013f8e:	3004      	adds	r0, #4
90013f90:	f003 fb36 	bl	90017600 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90013f94:	2301      	movs	r3, #1
90013f96:	e7f4      	b.n	90013f82 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

90013f98 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
90013f98:	b537      	push	{r0, r1, r2, r4, r5, lr}
90013f9a:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90013f9e:	4604      	mov	r4, r0
90013fa0:	2b00      	cmp	r3, #0
90013fa2:	d042      	beq.n	9001402a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90013fa4:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90013fa8:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
90013fac:	3301      	adds	r3, #1
90013fae:	b2db      	uxtb	r3, r3
90013fb0:	429a      	cmp	r2, r3
90013fb2:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90013fb6:	d138      	bne.n	9001402a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90013fb8:	2300      	movs	r3, #0
90013fba:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
90013fbc:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
90013fc0:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90013fc4:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
90013fc6:	4299      	cmp	r1, r3
90013fc8:	d100      	bne.n	90013fcc <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
90013fca:	b122      	cbz	r2, 90013fd6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
90013fcc:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
90013fce:	4299      	cmp	r1, r3
90013fd0:	d12f      	bne.n	90014032 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
90013fd2:	2a00      	cmp	r2, #0
90013fd4:	d034      	beq.n	90014040 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90013fd6:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
90013fda:	b93d      	cbnz	r5, 90013fec <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
90013fdc:	f003 fa42 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90013fe0:	4621      	mov	r1, r4
90013fe2:	3004      	adds	r0, #4
90013fe4:	f003 fa63 	bl	900174ae <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90013fe8:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
90013fec:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90013fee:	b140      	cbz	r0, 90014002 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90013ff0:	6803      	ldr	r3, [r0, #0]
90013ff2:	68db      	ldr	r3, [r3, #12]
90013ff4:	4798      	blx	r3
90013ff6:	b120      	cbz	r0, 90014002 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90013ff8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90013ffa:	4621      	mov	r1, r4
90013ffc:	6803      	ldr	r3, [r0, #0]
90013ffe:	689b      	ldr	r3, [r3, #8]
90014000:	4798      	blx	r3
90014002:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014006:	b183      	cbz	r3, 9001402a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90014008:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
9001400c:	b16b      	cbz	r3, 9001402a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
9001400e:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90014012:	b163      	cbz	r3, 9001402e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
90014014:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90014016:	a901      	add	r1, sp, #4
90014018:	f8ad 3004 	strh.w	r3, [sp, #4]
9001401c:	4620      	mov	r0, r4
9001401e:	f000 fd4e 	bl	90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014022:	6823      	ldr	r3, [r4, #0]
90014024:	4620      	mov	r0, r4
90014026:	695b      	ldr	r3, [r3, #20]
90014028:	4798      	blx	r3
9001402a:	b003      	add	sp, #12
9001402c:	bd30      	pop	{r4, r5, pc}
9001402e:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90014030:	e7f1      	b.n	90014016 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
90014032:	b12a      	cbz	r2, 90014040 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90014034:	3b01      	subs	r3, #1
90014036:	b29b      	uxth	r3, r3
90014038:	a902      	add	r1, sp, #8
9001403a:	f821 3d04 	strh.w	r3, [r1, #-4]!
9001403e:	e7ed      	b.n	9001401c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
90014040:	3301      	adds	r3, #1
90014042:	e7f8      	b.n	90014036 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

90014044 <_ZNK8touchgfx5Image17invalidateContentEv>:
90014044:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90014048:	b12a      	cbz	r2, 90014056 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
9001404a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001404e:	b112      	cbz	r2, 90014056 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90014050:	6803      	ldr	r3, [r0, #0]
90014052:	695b      	ldr	r3, [r3, #20]
90014054:	4718      	bx	r3
90014056:	4770      	bx	lr

90014058 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
90014058:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001405a:	ac02      	add	r4, sp, #8
9001405c:	6803      	ldr	r3, [r0, #0]
9001405e:	4605      	mov	r5, r0
90014060:	4616      	mov	r6, r2
90014062:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90014064:	f824 1d04 	strh.w	r1, [r4, #-4]!
90014068:	4621      	mov	r1, r4
9001406a:	4798      	blx	r3
9001406c:	682b      	ldr	r3, [r5, #0]
9001406e:	4621      	mov	r1, r4
90014070:	4628      	mov	r0, r5
90014072:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90014074:	f8ad 6004 	strh.w	r6, [sp, #4]
90014078:	4798      	blx	r3
9001407a:	b002      	add	sp, #8
9001407c:	bd70      	pop	{r4, r5, r6, pc}

9001407e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
9001407e:	2300      	movs	r3, #0
90014080:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
90014084:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90014088:	4770      	bx	lr

9001408a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
9001408a:	2000      	movs	r0, #0
9001408c:	4770      	bx	lr
	...

90014090 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014090:	4b07      	ldr	r3, [pc, #28]	@ (900140b0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90014092:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014094:	881b      	ldrh	r3, [r3, #0]
90014096:	4293      	cmp	r3, r2
90014098:	bf81      	itttt	hi
9001409a:	4b06      	ldrhi	r3, [pc, #24]	@ (900140b4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
9001409c:	681b      	ldrhi	r3, [r3, #0]
9001409e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900140a2:	7858      	ldrbhi	r0, [r3, #1]
900140a4:	bf8c      	ite	hi
900140a6:	f000 0003 	andhi.w	r0, r0, #3
900140aa:	2000      	movls	r0, #0
900140ac:	4770      	bx	lr
900140ae:	bf00      	nop
900140b0:	24021dc0 	.word	0x24021dc0
900140b4:	24021dbc 	.word	0x24021dbc

900140b8 <_ZN8touchgfx8TextAreaD1Ev>:
900140b8:	4770      	bx	lr
	...

900140bc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900140bc:	4b11      	ldr	r3, [pc, #68]	@ (90014104 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900140be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900140c2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900140c4:	4604      	mov	r4, r0
900140c6:	881b      	ldrh	r3, [r3, #0]
900140c8:	428b      	cmp	r3, r1
900140ca:	d918      	bls.n	900140fe <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
900140cc:	6803      	ldr	r3, [r0, #0]
900140ce:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
900140d0:	4b0d      	ldr	r3, [pc, #52]	@ (90014108 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
900140d2:	6818      	ldr	r0, [r3, #0]
900140d4:	f7f2 fbc0 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
900140d8:	6823      	ldr	r3, [r4, #0]
900140da:	4606      	mov	r6, r0
900140dc:	4620      	mov	r0, r4
900140de:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900140e0:	4798      	blx	r3
900140e2:	6823      	ldr	r3, [r4, #0]
900140e4:	4607      	mov	r7, r0
900140e6:	4620      	mov	r0, r4
900140e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900140ec:	4798      	blx	r3
900140ee:	463a      	mov	r2, r7
900140f0:	4603      	mov	r3, r0
900140f2:	4631      	mov	r1, r6
900140f4:	4620      	mov	r0, r4
900140f6:	46ac      	mov	ip, r5
900140f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900140fc:	4760      	bx	ip
900140fe:	2000      	movs	r0, #0
90014100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014104:	24021dc0 	.word	0x24021dc0
90014108:	24021dc8 	.word	0x24021dc8

9001410c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9001410c:	4b18      	ldr	r3, [pc, #96]	@ (90014170 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9001410e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014112:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90014114:	4604      	mov	r4, r0
90014116:	881b      	ldrh	r3, [r3, #0]
90014118:	428b      	cmp	r3, r1
9001411a:	d926      	bls.n	9001416a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9001411c:	4b15      	ldr	r3, [pc, #84]	@ (90014174 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9001411e:	681b      	ldr	r3, [r3, #0]
90014120:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014124:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014128:	4b13      	ldr	r3, [pc, #76]	@ (90014178 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001412a:	7855      	ldrb	r5, [r2, #1]
9001412c:	681b      	ldr	r3, [r3, #0]
9001412e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014132:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90014136:	6833      	ldr	r3, [r6, #0]
90014138:	69df      	ldr	r7, [r3, #28]
9001413a:	4b10      	ldr	r3, [pc, #64]	@ (9001417c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9001413c:	6818      	ldr	r0, [r3, #0]
9001413e:	f7f2 fb8b 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
90014142:	6823      	ldr	r3, [r4, #0]
90014144:	4680      	mov	r8, r0
90014146:	4620      	mov	r0, r4
90014148:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001414a:	4798      	blx	r3
9001414c:	6823      	ldr	r3, [r4, #0]
9001414e:	4681      	mov	r9, r0
90014150:	4620      	mov	r0, r4
90014152:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014156:	4798      	blx	r3
90014158:	464b      	mov	r3, r9
9001415a:	9000      	str	r0, [sp, #0]
9001415c:	4642      	mov	r2, r8
9001415e:	4629      	mov	r1, r5
90014160:	4630      	mov	r0, r6
90014162:	47b8      	blx	r7
90014164:	b003      	add	sp, #12
90014166:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001416a:	2000      	movs	r0, #0
9001416c:	e7fa      	b.n	90014164 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001416e:	bf00      	nop
90014170:	24021dc0 	.word	0x24021dc0
90014174:	24021dbc 	.word	0x24021dbc
90014178:	24021dc4 	.word	0x24021dc4
9001417c:	24021dc8 	.word	0x24021dc8

90014180 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014180:	b40e      	push	{r1, r2, r3}
90014182:	4b30      	ldr	r3, [pc, #192]	@ (90014244 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90014184:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014188:	881a      	ldrh	r2, [r3, #0]
9001418a:	b09d      	sub	sp, #116	@ 0x74
9001418c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9001418e:	4604      	mov	r4, r0
90014190:	429a      	cmp	r2, r3
90014192:	d954      	bls.n	9001423e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90014194:	aa26      	add	r2, sp, #152	@ 0x98
90014196:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90014248 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001419a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 9001424c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9001419e:	9202      	str	r2, [sp, #8]
900141a0:	f8d9 2000 	ldr.w	r2, [r9]
900141a4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900141a8:	f8d8 3000 	ldr.w	r3, [r8]
900141ac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900141b0:	682b      	ldr	r3, [r5, #0]
900141b2:	4628      	mov	r0, r5
900141b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900141b6:	4798      	blx	r3
900141b8:	4606      	mov	r6, r0
900141ba:	b207      	sxth	r7, r0
900141bc:	a803      	add	r0, sp, #12
900141be:	f005 fb59 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
900141c2:	682b      	ldr	r3, [r5, #0]
900141c4:	4628      	mov	r0, r5
900141c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900141c8:	4798      	blx	r3
900141ca:	682b      	ldr	r3, [r5, #0]
900141cc:	4682      	mov	sl, r0
900141ce:	4628      	mov	r0, r5
900141d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900141d2:	4798      	blx	r3
900141d4:	4653      	mov	r3, sl
900141d6:	9000      	str	r0, [sp, #0]
900141d8:	a803      	add	r0, sp, #12
900141da:	9a02      	ldr	r2, [sp, #8]
900141dc:	9925      	ldr	r1, [sp, #148]	@ 0x94
900141de:	f005 fba4 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900141e2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900141e4:	f8d9 3000 	ldr.w	r3, [r9]
900141e8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
900141ec:	8925      	ldrh	r5, [r4, #8]
900141ee:	eb03 0142 	add.w	r1, r3, r2, lsl #1
900141f2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
900141f6:	eba5 050c 	sub.w	r5, r5, ip
900141fa:	784a      	ldrb	r2, [r1, #1]
900141fc:	f8d8 3000 	ldr.w	r3, [r8]
90014200:	b22d      	sxth	r5, r5
90014202:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
90014206:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001420a:	9500      	str	r5, [sp, #0]
9001420c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014210:	a803      	add	r0, sp, #12
90014212:	f002 fc93 	bl	90016b3c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90014216:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9001421a:	b203      	sxth	r3, r0
9001421c:	18b9      	adds	r1, r7, r2
9001421e:	2900      	cmp	r1, #0
90014220:	dd0b      	ble.n	9001423a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014222:	3b01      	subs	r3, #1
90014224:	fb13 f302 	smulbb	r3, r3, r2
90014228:	fb16 3300 	smlabb	r3, r6, r0, r3
9001422c:	b21f      	sxth	r7, r3
9001422e:	4638      	mov	r0, r7
90014230:	b01d      	add	sp, #116	@ 0x74
90014232:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014236:	b003      	add	sp, #12
90014238:	4770      	bx	lr
9001423a:	2b00      	cmp	r3, #0
9001423c:	dcf7      	bgt.n	9001422e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001423e:	2700      	movs	r7, #0
90014240:	e7f5      	b.n	9001422e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014242:	bf00      	nop
90014244:	24021dc0 	.word	0x24021dc0
90014248:	24021dbc 	.word	0x24021dbc
9001424c:	24021dc4 	.word	0x24021dc4

90014250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014250:	4bbd      	ldr	r3, [pc, #756]	@ (90014548 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014252:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014256:	460c      	mov	r4, r1
90014258:	881b      	ldrh	r3, [r3, #0]
9001425a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
9001425c:	b0a9      	sub	sp, #164	@ 0xa4
9001425e:	4680      	mov	r8, r0
90014260:	428b      	cmp	r3, r1
90014262:	d809      	bhi.n	90014278 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014264:	2300      	movs	r3, #0
90014266:	f04f 32ff 	mov.w	r2, #4294967295
9001426a:	6083      	str	r3, [r0, #8]
9001426c:	e9c0 3200 	strd	r3, r2, [r0]
90014270:	4640      	mov	r0, r8
90014272:	b029      	add	sp, #164	@ 0xa4
90014274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014278:	4eb4      	ldr	r6, [pc, #720]	@ (9001454c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
9001427a:	6833      	ldr	r3, [r6, #0]
9001427c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014280:	4bb3      	ldr	r3, [pc, #716]	@ (90014550 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014282:	681b      	ldr	r3, [r3, #0]
90014284:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014288:	4bb2      	ldr	r3, [pc, #712]	@ (90014554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
9001428a:	6818      	ldr	r0, [r3, #0]
9001428c:	f7f2 fae4 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
90014290:	682b      	ldr	r3, [r5, #0]
90014292:	4681      	mov	r9, r0
90014294:	4628      	mov	r0, r5
90014296:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014298:	4798      	blx	r3
9001429a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
9001429c:	b203      	sxth	r3, r0
9001429e:	4682      	mov	sl, r0
900142a0:	4407      	add	r7, r0
900142a2:	a80f      	add	r0, sp, #60	@ 0x3c
900142a4:	9304      	str	r3, [sp, #16]
900142a6:	b2bb      	uxth	r3, r7
900142a8:	9303      	str	r3, [sp, #12]
900142aa:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900142ae:	2b00      	cmp	r3, #0
900142b0:	f040 80a5 	bne.w	900143fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
900142b4:	f005 fade 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
900142b8:	682b      	ldr	r3, [r5, #0]
900142ba:	4628      	mov	r0, r5
900142bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900142be:	4798      	blx	r3
900142c0:	682b      	ldr	r3, [r5, #0]
900142c2:	4606      	mov	r6, r0
900142c4:	4628      	mov	r0, r5
900142c6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900142c8:	4798      	blx	r3
900142ca:	6823      	ldr	r3, [r4, #0]
900142cc:	4607      	mov	r7, r0
900142ce:	4620      	mov	r0, r4
900142d0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900142d2:	4798      	blx	r3
900142d4:	6823      	ldr	r3, [r4, #0]
900142d6:	4683      	mov	fp, r0
900142d8:	4620      	mov	r0, r4
900142da:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900142de:	4798      	blx	r3
900142e0:	463b      	mov	r3, r7
900142e2:	4649      	mov	r1, r9
900142e4:	4632      	mov	r2, r6
900142e6:	2600      	movs	r6, #0
900142e8:	e9cd b000 	strd	fp, r0, [sp]
900142ec:	a80f      	add	r0, sp, #60	@ 0x3c
900142ee:	4637      	mov	r7, r6
900142f0:	f005 fb30 	bl	90019954 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
900142f4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900142f8:	f8df b250 	ldr.w	fp, [pc, #592]	@ 9001454c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
900142fc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014300:	bf0c      	ite	eq
90014302:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90014306:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
9001430a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9001430c:	4629      	mov	r1, r5
9001430e:	f8db 3000 	ldr.w	r3, [fp]
90014312:	a80f      	add	r0, sp, #60	@ 0x3c
90014314:	3701      	adds	r7, #1
90014316:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001431a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001431e:	b2bf      	uxth	r7, r7
90014320:	785b      	ldrb	r3, [r3, #1]
90014322:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014326:	f002 f910 	bl	9001654a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001432a:	9b03      	ldr	r3, [sp, #12]
9001432c:	4286      	cmp	r6, r0
9001432e:	eba9 0903 	sub.w	r9, r9, r3
90014332:	bfb8      	it	lt
90014334:	4606      	movlt	r6, r0
90014336:	a80f      	add	r0, sp, #60	@ 0x3c
90014338:	fa0f f989 	sxth.w	r9, r9
9001433c:	b236      	sxth	r6, r6
9001433e:	f005 fac0 	bl	900198c2 <_ZN8touchgfx12TextProvider11endOfStringEv>
90014342:	b918      	cbnz	r0, 9001434c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014344:	7a2b      	ldrb	r3, [r5, #8]
90014346:	444b      	add	r3, r9
90014348:	2b00      	cmp	r3, #0
9001434a:	dcde      	bgt.n	9001430a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
9001434c:	9b03      	ldr	r3, [sp, #12]
9001434e:	4620      	mov	r0, r4
90014350:	9a04      	ldr	r2, [sp, #16]
90014352:	fb13 f707 	smulbb	r7, r3, r7
90014356:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90014358:	f895 9009 	ldrb.w	r9, [r5, #9]
9001435c:	1aff      	subs	r7, r7, r3
9001435e:	b2bf      	uxth	r7, r7
90014360:	b23b      	sxth	r3, r7
90014362:	429a      	cmp	r2, r3
90014364:	bfa8      	it	ge
90014366:	4657      	movge	r7, sl
90014368:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001436c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014370:	6823      	ldr	r3, [r4, #0]
90014372:	444f      	add	r7, r9
90014374:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014376:	bf08      	it	eq
90014378:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
9001437c:	fa1f f987 	uxth.w	r9, r7
90014380:	bf18      	it	ne
90014382:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90014386:	4798      	blx	r3
90014388:	2801      	cmp	r0, #1
9001438a:	fa0f f789 	sxth.w	r7, r9
9001438e:	b2b3      	uxth	r3, r6
90014390:	f000 80e2 	beq.w	90014558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90014394:	2802      	cmp	r0, #2
90014396:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
9001439a:	f000 80e3 	beq.w	90014564 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
9001439e:	7aea      	ldrb	r2, [r5, #11]
900143a0:	b236      	sxth	r6, r6
900143a2:	7b2d      	ldrb	r5, [r5, #12]
900143a4:	1ab6      	subs	r6, r6, r2
900143a6:	442a      	add	r2, r5
900143a8:	fa1f fa86 	uxth.w	sl, r6
900143ac:	4413      	add	r3, r2
900143ae:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
900143b2:	fa0f fb8a 	sxth.w	fp, sl
900143b6:	b29b      	uxth	r3, r3
900143b8:	2a02      	cmp	r2, #2
900143ba:	b21e      	sxth	r6, r3
900143bc:	f000 80d6 	beq.w	9001456c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900143c0:	2a03      	cmp	r2, #3
900143c2:	f000 80de 	beq.w	90014582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900143c6:	2a01      	cmp	r2, #1
900143c8:	f040 80e6 	bne.w	90014598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
900143cc:	8925      	ldrh	r5, [r4, #8]
900143ce:	4633      	mov	r3, r6
900143d0:	463e      	mov	r6, r7
900143d2:	eba5 0909 	sub.w	r9, r5, r9
900143d6:	461f      	mov	r7, r3
900143d8:	465d      	mov	r5, fp
900143da:	fa0f fb89 	sxth.w	fp, r9
900143de:	4b5d      	ldr	r3, [pc, #372]	@ (90014554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900143e0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900143e2:	6818      	ldr	r0, [r3, #0]
900143e4:	f7f2 fa38 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
900143e8:	f8a8 b000 	strh.w	fp, [r8]
900143ec:	f8a8 5002 	strh.w	r5, [r8, #2]
900143f0:	f8a8 6004 	strh.w	r6, [r8, #4]
900143f4:	f8a8 7006 	strh.w	r7, [r8, #6]
900143f8:	f8c8 0008 	str.w	r0, [r8, #8]
900143fc:	e738      	b.n	90014270 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
900143fe:	f005 fa39 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
90014402:	682b      	ldr	r3, [r5, #0]
90014404:	4628      	mov	r0, r5
90014406:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014408:	4798      	blx	r3
9001440a:	682b      	ldr	r3, [r5, #0]
9001440c:	4607      	mov	r7, r0
9001440e:	4628      	mov	r0, r5
90014410:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014412:	4798      	blx	r3
90014414:	6823      	ldr	r3, [r4, #0]
90014416:	4683      	mov	fp, r0
90014418:	4620      	mov	r0, r4
9001441a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001441c:	4798      	blx	r3
9001441e:	6822      	ldr	r2, [r4, #0]
90014420:	9005      	str	r0, [sp, #20]
90014422:	4620      	mov	r0, r4
90014424:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
90014428:	4790      	blx	r2
9001442a:	9b05      	ldr	r3, [sp, #20]
9001442c:	463a      	mov	r2, r7
9001442e:	4649      	mov	r1, r9
90014430:	9001      	str	r0, [sp, #4]
90014432:	a80f      	add	r0, sp, #60	@ 0x3c
90014434:	9300      	str	r3, [sp, #0]
90014436:	465b      	mov	r3, fp
90014438:	f005 fa8c 	bl	90019954 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
9001443c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014440:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90014444:	af0f      	add	r7, sp, #60	@ 0x3c
90014446:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001444a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001444e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90014450:	bf0a      	itet	eq
90014452:	464a      	moveq	r2, r9
90014454:	461a      	movne	r2, r3
90014456:	4699      	moveq	r9, r3
90014458:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
9001445c:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90014460:	1ad2      	subs	r2, r2, r3
90014462:	6833      	ldr	r3, [r6, #0]
90014464:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90014468:	eb03 0341 	add.w	r3, r3, r1, lsl #1
9001446c:	7859      	ldrb	r1, [r3, #1]
9001446e:	2300      	movs	r3, #0
90014470:	9707      	str	r7, [sp, #28]
90014472:	f3c1 0181 	ubfx	r1, r1, #2, #2
90014476:	f8ad 3018 	strh.w	r3, [sp, #24]
9001447a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
9001447e:	f88d 1020 	strb.w	r1, [sp, #32]
90014482:	9509      	str	r5, [sp, #36]	@ 0x24
90014484:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90014488:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
9001448c:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
90014490:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90014494:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90014498:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001449c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900144a0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900144a4:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900144a8:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
900144ac:	b350      	cbz	r0, 90014504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144ae:	682b      	ldr	r3, [r5, #0]
900144b0:	4628      	mov	r0, r5
900144b2:	695b      	ldr	r3, [r3, #20]
900144b4:	4798      	blx	r3
900144b6:	4607      	mov	r7, r0
900144b8:	b320      	cbz	r0, 90014504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
900144bc:	4639      	mov	r1, r7
900144be:	6803      	ldr	r3, [r0, #0]
900144c0:	68db      	ldr	r3, [r3, #12]
900144c2:	4798      	blx	r3
900144c4:	4606      	mov	r6, r0
900144c6:	b1e8      	cbz	r0, 90014504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144c8:	7b43      	ldrb	r3, [r0, #13]
900144ca:	7a82      	ldrb	r2, [r0, #10]
900144cc:	005b      	lsls	r3, r3, #1
900144ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900144d2:	4313      	orrs	r3, r2
900144d4:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900144d8:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
900144dc:	2b06      	cmp	r3, #6
900144de:	d111      	bne.n	90014504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900144e0:	9809      	ldr	r0, [sp, #36]	@ 0x24
900144e2:	4632      	mov	r2, r6
900144e4:	4639      	mov	r1, r7
900144e6:	6803      	ldr	r3, [r0, #0]
900144e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900144ea:	4798      	blx	r3
900144ec:	7b73      	ldrb	r3, [r6, #13]
900144ee:	005b      	lsls	r3, r3, #1
900144f0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900144f4:	7ab3      	ldrb	r3, [r6, #10]
900144f6:	4313      	orrs	r3, r2
900144f8:	4418      	add	r0, r3
900144fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900144fe:	4418      	add	r0, r3
90014500:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
90014504:	2600      	movs	r6, #0
90014506:	4637      	mov	r7, r6
90014508:	a806      	add	r0, sp, #24
9001450a:	3701      	adds	r7, #1
9001450c:	f002 fa13 	bl	90016936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014510:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
90014514:	9b03      	ldr	r3, [sp, #12]
90014516:	b2bf      	uxth	r7, r7
90014518:	4286      	cmp	r6, r0
9001451a:	eba9 0903 	sub.w	r9, r9, r3
9001451e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90014522:	bfb8      	it	lt
90014524:	4606      	movlt	r6, r0
90014526:	fa0f f989 	sxth.w	r9, r9
9001452a:	b236      	sxth	r6, r6
9001452c:	2b00      	cmp	r3, #0
9001452e:	f43f af0d 	beq.w	9001434c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014532:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90014536:	2b00      	cmp	r3, #0
90014538:	f47f af08 	bne.w	9001434c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001453c:	7a2b      	ldrb	r3, [r5, #8]
9001453e:	444b      	add	r3, r9
90014540:	2b00      	cmp	r3, #0
90014542:	dce1      	bgt.n	90014508 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90014544:	e702      	b.n	9001434c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014546:	bf00      	nop
90014548:	24021dc0 	.word	0x24021dc0
9001454c:	24021dbc 	.word	0x24021dbc
90014550:	24021dc4 	.word	0x24021dc4
90014554:	24021dc8 	.word	0x24021dc8
90014558:	ebaa 0606 	sub.w	r6, sl, r6
9001455c:	2002      	movs	r0, #2
9001455e:	fb96 f6f0 	sdiv	r6, r6, r0
90014562:	e71c      	b.n	9001439e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014564:	441e      	add	r6, r3
90014566:	ebaa 0606 	sub.w	r6, sl, r6
9001456a:	e718      	b.n	9001439e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001456c:	8925      	ldrh	r5, [r4, #8]
9001456e:	1aed      	subs	r5, r5, r3
90014570:	eba5 050a 	sub.w	r5, r5, sl
90014574:	fa0f fb85 	sxth.w	fp, r5
90014578:	8965      	ldrh	r5, [r4, #10]
9001457a:	eba5 0509 	sub.w	r5, r5, r9
9001457e:	b22d      	sxth	r5, r5
90014580:	e72d      	b.n	900143de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014582:	8965      	ldrh	r5, [r4, #10]
90014584:	f04f 0b00 	mov.w	fp, #0
90014588:	1aed      	subs	r5, r5, r3
9001458a:	4633      	mov	r3, r6
9001458c:	463e      	mov	r6, r7
9001458e:	eba5 050a 	sub.w	r5, r5, sl
90014592:	461f      	mov	r7, r3
90014594:	b22d      	sxth	r5, r5
90014596:	e722      	b.n	900143de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014598:	2500      	movs	r5, #0
9001459a:	e720      	b.n	900143de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

9001459c <_ZN8touchgfx8TextAreaD0Ev>:
9001459c:	b510      	push	{r4, lr}
9001459e:	4604      	mov	r4, r0
900145a0:	2148      	movs	r1, #72	@ 0x48
900145a2:	f015 fdcf 	bl	9002a144 <_ZdlPvj>
900145a6:	4620      	mov	r0, r4
900145a8:	bd10      	pop	{r4, pc}
	...

900145ac <_ZNK8touchgfx8TextArea17invalidateContentEv>:
900145ac:	b513      	push	{r0, r1, r4, lr}
900145ae:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
900145b2:	4604      	mov	r4, r0
900145b4:	b1fb      	cbz	r3, 900145f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145b6:	4b16      	ldr	r3, [pc, #88]	@ (90014610 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
900145b8:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900145ba:	881b      	ldrh	r3, [r3, #0]
900145bc:	428b      	cmp	r3, r1
900145be:	d91a      	bls.n	900145f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145c0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900145c4:	2b00      	cmp	r3, #0
900145c6:	dd16      	ble.n	900145f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900145cc:	2b00      	cmp	r3, #0
900145ce:	dd12      	ble.n	900145f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900145d0:	4b10      	ldr	r3, [pc, #64]	@ (90014614 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900145d2:	6818      	ldr	r0, [r3, #0]
900145d4:	f7f2 f940 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
900145d8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
900145dc:	6822      	ldr	r2, [r4, #0]
900145de:	2b00      	cmp	r3, #0
900145e0:	db06      	blt.n	900145f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900145e2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
900145e6:	2b00      	cmp	r3, #0
900145e8:	db02      	blt.n	900145f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900145ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900145ec:	4298      	cmp	r0, r3
900145ee:	d004      	beq.n	900145fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900145f0:	6953      	ldr	r3, [r2, #20]
900145f2:	4620      	mov	r0, r4
900145f4:	4798      	blx	r3
900145f6:	b002      	add	sp, #8
900145f8:	bd10      	pop	{r4, pc}
900145fa:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
900145fe:	466b      	mov	r3, sp
90014600:	6912      	ldr	r2, [r2, #16]
90014602:	c903      	ldmia	r1, {r0, r1}
90014604:	e883 0003 	stmia.w	r3, {r0, r1}
90014608:	4619      	mov	r1, r3
9001460a:	4620      	mov	r0, r4
9001460c:	4790      	blx	r2
9001460e:	e7f2      	b.n	900145f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014610:	24021dc0 	.word	0x24021dc0
90014614:	24021dc8 	.word	0x24021dc8

90014618 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90014618:	4b45      	ldr	r3, [pc, #276]	@ (90014730 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
9001461a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001461e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014620:	b08e      	sub	sp, #56	@ 0x38
90014622:	881b      	ldrh	r3, [r3, #0]
90014624:	4604      	mov	r4, r0
90014626:	4293      	cmp	r3, r2
90014628:	d97e      	bls.n	90014728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001462a:	6808      	ldr	r0, [r1, #0]
9001462c:	ab05      	add	r3, sp, #20
9001462e:	6849      	ldr	r1, [r1, #4]
90014630:	4d40      	ldr	r5, [pc, #256]	@ (90014734 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90014632:	c303      	stmia	r3!, {r0, r1}
90014634:	4611      	mov	r1, r2
90014636:	6828      	ldr	r0, [r5, #0]
90014638:	f7f2 f90e 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
9001463c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90014640:	2b00      	cmp	r3, #0
90014642:	db11      	blt.n	90014668 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014644:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90014648:	2b00      	cmp	r3, #0
9001464a:	db0d      	blt.n	90014668 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001464c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9001464e:	4298      	cmp	r0, r3
90014650:	d10a      	bne.n	90014668 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014652:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90014656:	ab09      	add	r3, sp, #36	@ 0x24
90014658:	e892 0003 	ldmia.w	r2, {r0, r1}
9001465c:	e883 0003 	stmia.w	r3, {r0, r1}
90014660:	4619      	mov	r1, r3
90014662:	a805      	add	r0, sp, #20
90014664:	f7fc fefa 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90014668:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001466c:	2b00      	cmp	r3, #0
9001466e:	dd5b      	ble.n	90014728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014670:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014674:	2b00      	cmp	r3, #0
90014676:	dd57      	ble.n	90014728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014678:	4f2f      	ldr	r7, [pc, #188]	@ (90014738 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
9001467a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9001467c:	683b      	ldr	r3, [r7, #0]
9001467e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90014682:	4b2e      	ldr	r3, [pc, #184]	@ (9001473c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90014684:	681b      	ldr	r3, [r3, #0]
90014686:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001468a:	2e00      	cmp	r6, #0
9001468c:	d04c      	beq.n	90014728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001468e:	6823      	ldr	r3, [r4, #0]
90014690:	4620      	mov	r0, r4
90014692:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90014696:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014698:	4798      	blx	r3
9001469a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9001469c:	683b      	ldr	r3, [r7, #0]
9001469e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
900146a2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900146a6:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
900146aa:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
900146ae:	785b      	ldrb	r3, [r3, #1]
900146b0:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
900146b4:	f3c3 0381 	ubfx	r3, r3, #2, #2
900146b8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900146ba:	9609      	str	r6, [sp, #36]	@ 0x24
900146bc:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
900146c0:	4b1f      	ldr	r3, [pc, #124]	@ (90014740 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900146c2:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
900146c6:	681b      	ldr	r3, [r3, #0]
900146c8:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
900146cc:	910b      	str	r1, [sp, #44]	@ 0x2c
900146ce:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
900146d2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
900146d6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
900146da:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
900146de:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900146e2:	b10a      	cbz	r2, 900146e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900146e4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
900146e6:	b906      	cbnz	r6, 900146ea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900146e8:	689e      	ldr	r6, [r3, #8]
900146ea:	af07      	add	r7, sp, #28
900146ec:	4621      	mov	r1, r4
900146ee:	4638      	mov	r0, r7
900146f0:	f004 f956 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900146f4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900146f6:	6828      	ldr	r0, [r5, #0]
900146f8:	f7f2 f8ae 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
900146fc:	6823      	ldr	r3, [r4, #0]
900146fe:	4605      	mov	r5, r0
90014700:	4620      	mov	r0, r4
90014702:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014704:	4798      	blx	r3
90014706:	6823      	ldr	r3, [r4, #0]
90014708:	4680      	mov	r8, r0
9001470a:	4620      	mov	r0, r4
9001470c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014710:	4798      	blx	r3
90014712:	ab09      	add	r3, sp, #36	@ 0x24
90014714:	9501      	str	r5, [sp, #4]
90014716:	9300      	str	r3, [sp, #0]
90014718:	ab05      	add	r3, sp, #20
9001471a:	e9cd 8002 	strd	r8, r0, [sp, #8]
9001471e:	4630      	mov	r0, r6
90014720:	e897 0006 	ldmia.w	r7, {r1, r2}
90014724:	f7f2 f848 	bl	900067b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014728:	b00e      	add	sp, #56	@ 0x38
9001472a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001472e:	bf00      	nop
90014730:	24021dc0 	.word	0x24021dc0
90014734:	24021dc8 	.word	0x24021dc8
90014738:	24021dbc 	.word	0x24021dbc
9001473c:	24021dc4 	.word	0x24021dc4
90014740:	24021d64 	.word	0x24021d64

90014744 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90014744:	b570      	push	{r4, r5, r6, lr}
90014746:	6803      	ldr	r3, [r0, #0]
90014748:	4604      	mov	r4, r0
9001474a:	4615      	mov	r5, r2
9001474c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001474e:	4798      	blx	r3
90014750:	6823      	ldr	r3, [r4, #0]
90014752:	4629      	mov	r1, r5
90014754:	4620      	mov	r0, r4
90014756:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014758:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001475c:	4718      	bx	r3
	...

90014760 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90014760:	b538      	push	{r3, r4, r5, lr}
90014762:	4b0e      	ldr	r3, [pc, #56]	@ (9001479c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90014764:	4604      	mov	r4, r0
90014766:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014768:	881b      	ldrh	r3, [r3, #0]
9001476a:	429a      	cmp	r2, r3
9001476c:	d214      	bcs.n	90014798 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001476e:	6803      	ldr	r3, [r0, #0]
90014770:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90014772:	4798      	blx	r3
90014774:	6823      	ldr	r3, [r4, #0]
90014776:	4605      	mov	r5, r0
90014778:	4620      	mov	r0, r4
9001477a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9001477c:	4798      	blx	r3
9001477e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014782:	b22d      	sxth	r5, r5
90014784:	4601      	mov	r1, r0
90014786:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001478a:	bf06      	itte	eq
9001478c:	4602      	moveq	r2, r0
9001478e:	4629      	moveq	r1, r5
90014790:	462a      	movne	r2, r5
90014792:	4620      	mov	r0, r4
90014794:	f7ff ffd6 	bl	90014744 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014798:	bd38      	pop	{r3, r4, r5, pc}
9001479a:	bf00      	nop
9001479c:	24021dc0 	.word	0x24021dc0

900147a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900147a0:	b530      	push	{r4, r5, lr}
900147a2:	888b      	ldrh	r3, [r1, #4]
900147a4:	b085      	sub	sp, #20
900147a6:	4604      	mov	r4, r0
900147a8:	8583      	strh	r3, [r0, #44]	@ 0x2c
900147aa:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900147ae:	b923      	cbnz	r3, 900147ba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900147b0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900147b4:	b90b      	cbnz	r3, 900147ba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900147b6:	f7ff ffd3 	bl	90014760 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900147ba:	6823      	ldr	r3, [r4, #0]
900147bc:	466d      	mov	r5, sp
900147be:	4621      	mov	r1, r4
900147c0:	343c      	adds	r4, #60	@ 0x3c
900147c2:	4628      	mov	r0, r5
900147c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900147c8:	4798      	blx	r3
900147ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900147ce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900147d2:	b005      	add	sp, #20
900147d4:	bd30      	pop	{r4, r5, pc}

900147d6 <_ZNK8touchgfx3Box12getSolidRectEv>:
900147d6:	2300      	movs	r3, #0
900147d8:	8083      	strh	r3, [r0, #4]
900147da:	80c3      	strh	r3, [r0, #6]
900147dc:	8003      	strh	r3, [r0, #0]
900147de:	8043      	strh	r3, [r0, #2]
900147e0:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900147e4:	2bff      	cmp	r3, #255	@ 0xff
900147e6:	bf01      	itttt	eq
900147e8:	890b      	ldrheq	r3, [r1, #8]
900147ea:	8083      	strheq	r3, [r0, #4]
900147ec:	894b      	ldrheq	r3, [r1, #10]
900147ee:	80c3      	strheq	r3, [r0, #6]
900147f0:	4770      	bx	lr
	...

900147f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900147f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900147f6:	4604      	mov	r4, r0
900147f8:	466b      	mov	r3, sp
900147fa:	6808      	ldr	r0, [r1, #0]
900147fc:	6849      	ldr	r1, [r1, #4]
900147fe:	c303      	stmia	r3!, {r0, r1}
90014800:	6823      	ldr	r3, [r4, #0]
90014802:	4669      	mov	r1, sp
90014804:	4620      	mov	r0, r4
90014806:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014808:	4798      	blx	r3
9001480a:	4b08      	ldr	r3, [pc, #32]	@ (9001482c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9001480c:	681b      	ldr	r3, [r3, #0]
9001480e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014812:	b10a      	cbz	r2, 90014818 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90014814:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014816:	b900      	cbnz	r0, 9001481a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90014818:	6898      	ldr	r0, [r3, #8]
9001481a:	6803      	ldr	r3, [r0, #0]
9001481c:	4669      	mov	r1, sp
9001481e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90014820:	6a1d      	ldr	r5, [r3, #32]
90014822:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90014826:	47a8      	blx	r5
90014828:	b003      	add	sp, #12
9001482a:	bd30      	pop	{r4, r5, pc}
9001482c:	24021d64 	.word	0x24021d64

90014830 <_ZN8touchgfx3BoxD1Ev>:
90014830:	4770      	bx	lr

90014832 <_ZN8touchgfx3BoxD0Ev>:
90014832:	b510      	push	{r4, lr}
90014834:	4604      	mov	r4, r0
90014836:	212c      	movs	r1, #44	@ 0x2c
90014838:	f015 fc84 	bl	9002a144 <_ZdlPvj>
9001483c:	4620      	mov	r0, r4
9001483e:	bd10      	pop	{r4, pc}

90014840 <_ZNK8touchgfx3Box17invalidateContentEv>:
90014840:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90014844:	b12a      	cbz	r2, 90014852 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90014846:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001484a:	b112      	cbz	r2, 90014852 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001484c:	6803      	ldr	r3, [r0, #0]
9001484e:	695b      	ldr	r3, [r3, #20]
90014850:	4718      	bx	r3
90014852:	4770      	bx	lr

90014854 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90014854:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90014858:	4770      	bx	lr

9001485a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9001485a:	b570      	push	{r4, r5, r6, lr}
9001485c:	880b      	ldrh	r3, [r1, #0]
9001485e:	4605      	mov	r5, r0
90014860:	4604      	mov	r4, r0
90014862:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90014864:	8813      	ldrh	r3, [r2, #0]
90014866:	f825 3f30 	strh.w	r3, [r5, #48]!
9001486a:	4628      	mov	r0, r5
9001486c:	f006 fbbc 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014870:	4606      	mov	r6, r0
90014872:	4628      	mov	r0, r5
90014874:	f006 fbec 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014878:	6823      	ldr	r3, [r4, #0]
9001487a:	4605      	mov	r5, r0
9001487c:	4631      	mov	r1, r6
9001487e:	4620      	mov	r0, r4
90014880:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014882:	4798      	blx	r3
90014884:	6823      	ldr	r3, [r4, #0]
90014886:	4629      	mov	r1, r5
90014888:	4620      	mov	r0, r4
9001488a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001488c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014890:	4718      	bx	r3

90014892 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90014892:	b510      	push	{r4, lr}
90014894:	4604      	mov	r4, r0
90014896:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90014898:	b150      	cbz	r0, 900148b0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001489a:	6803      	ldr	r3, [r0, #0]
9001489c:	68db      	ldr	r3, [r3, #12]
9001489e:	4798      	blx	r3
900148a0:	b130      	cbz	r0, 900148b0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900148a2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900148a4:	4621      	mov	r1, r4
900148a6:	6803      	ldr	r3, [r0, #0]
900148a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900148ac:	689b      	ldr	r3, [r3, #8]
900148ae:	4718      	bx	r3
900148b0:	bd10      	pop	{r4, pc}

900148b2 <_ZNK8touchgfx6Button12getSolidRectEv>:
900148b2:	b510      	push	{r4, lr}
900148b4:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
900148b8:	4604      	mov	r4, r0
900148ba:	2bff      	cmp	r3, #255	@ 0xff
900148bc:	d006      	beq.n	900148cc <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900148be:	2300      	movs	r3, #0
900148c0:	8003      	strh	r3, [r0, #0]
900148c2:	8043      	strh	r3, [r0, #2]
900148c4:	8083      	strh	r3, [r0, #4]
900148c6:	80c3      	strh	r3, [r0, #6]
900148c8:	4620      	mov	r0, r4
900148ca:	bd10      	pop	{r4, pc}
900148cc:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
900148d0:	b11b      	cbz	r3, 900148da <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900148d2:	3130      	adds	r1, #48	@ 0x30
900148d4:	f006 fbf0 	bl	9001b0b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900148d8:	e7f6      	b.n	900148c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900148da:	312e      	adds	r1, #46	@ 0x2e
900148dc:	e7fa      	b.n	900148d4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900148e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900148e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900148e4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900148e8:	b08a      	sub	sp, #40	@ 0x28
900148ea:	4604      	mov	r4, r0
900148ec:	4688      	mov	r8, r1
900148ee:	2b00      	cmp	r3, #0
900148f0:	d066      	beq.n	900149c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900148f2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
900148f4:	a805      	add	r0, sp, #20
900148f6:	f8ad 3014 	strh.w	r3, [sp, #20]
900148fa:	f006 fb75 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900148fe:	4607      	mov	r7, r0
90014900:	a805      	add	r0, sp, #20
90014902:	f006 fba5 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014906:	f9b8 6000 	ldrsh.w	r6, [r8]
9001490a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9001490e:	2300      	movs	r3, #0
90014910:	4432      	add	r2, r6
90014912:	9306      	str	r3, [sp, #24]
90014914:	b292      	uxth	r2, r2
90014916:	fa0f fc82 	sxth.w	ip, r2
9001491a:	459c      	cmp	ip, r3
9001491c:	dd52      	ble.n	900149c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001491e:	42b7      	cmp	r7, r6
90014920:	dd50      	ble.n	900149c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014922:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90014926:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001492a:	442b      	add	r3, r5
9001492c:	b29b      	uxth	r3, r3
9001492e:	b219      	sxth	r1, r3
90014930:	2900      	cmp	r1, #0
90014932:	dd47      	ble.n	900149c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014934:	42a8      	cmp	r0, r5
90014936:	dd45      	ble.n	900149c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014938:	4567      	cmp	r7, ip
9001493a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001493e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90014942:	bfb8      	it	lt
90014944:	b2ba      	uxthlt	r2, r7
90014946:	4288      	cmp	r0, r1
90014948:	f8ad 6018 	strh.w	r6, [sp, #24]
9001494c:	bfb8      	it	lt
9001494e:	b283      	uxthlt	r3, r0
90014950:	1b92      	subs	r2, r2, r6
90014952:	f8ad 501a 	strh.w	r5, [sp, #26]
90014956:	1b5b      	subs	r3, r3, r5
90014958:	f8ad 201c 	strh.w	r2, [sp, #28]
9001495c:	f8ad 301e 	strh.w	r3, [sp, #30]
90014960:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90014964:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90014968:	429a      	cmp	r2, r3
9001496a:	d026      	beq.n	900149ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001496c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90014970:	2b00      	cmp	r3, #0
90014972:	dd22      	ble.n	900149ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90014974:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014978:	2b00      	cmp	r3, #0
9001497a:	dd1e      	ble.n	900149ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001497c:	2300      	movs	r3, #0
9001497e:	a908      	add	r1, sp, #32
90014980:	4620      	mov	r0, r4
90014982:	e9cd 3308 	strd	r3, r3, [sp, #32]
90014986:	6823      	ldr	r3, [r4, #0]
90014988:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001498a:	4798      	blx	r3
9001498c:	4b0f      	ldr	r3, [pc, #60]	@ (900149cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9001498e:	681b      	ldr	r3, [r3, #0]
90014990:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014994:	b10a      	cbz	r2, 9001499a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90014996:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014998:	b900      	cbnz	r0, 9001499c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001499a:	6898      	ldr	r0, [r3, #8]
9001499c:	2501      	movs	r5, #1
9001499e:	6801      	ldr	r1, [r0, #0]
900149a0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900149a4:	9502      	str	r5, [sp, #8]
900149a6:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900149aa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900149ae:	9401      	str	r4, [sp, #4]
900149b0:	ac06      	add	r4, sp, #24
900149b2:	9400      	str	r4, [sp, #0]
900149b4:	688c      	ldr	r4, [r1, #8]
900149b6:	a905      	add	r1, sp, #20
900149b8:	47a0      	blx	r4
900149ba:	b00a      	add	sp, #40	@ 0x28
900149bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900149c0:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
900149c2:	e797      	b.n	900148f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900149c4:	2300      	movs	r3, #0
900149c6:	9307      	str	r3, [sp, #28]
900149c8:	e7ca      	b.n	90014960 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900149ca:	bf00      	nop
900149cc:	24021d64 	.word	0x24021d64

900149d0 <_ZNK8touchgfx6Button17invalidateContentEv>:
900149d0:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900149d4:	b12a      	cbz	r2, 900149e2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900149d6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900149da:	b112      	cbz	r2, 900149e2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900149dc:	6803      	ldr	r3, [r0, #0]
900149de:	695b      	ldr	r3, [r3, #20]
900149e0:	4718      	bx	r3
900149e2:	4770      	bx	lr

900149e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900149e4:	4b30      	ldr	r3, [pc, #192]	@ (90014aa8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900149e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900149ea:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900149ec:	b08d      	sub	sp, #52	@ 0x34
900149ee:	881b      	ldrh	r3, [r3, #0]
900149f0:	4604      	mov	r4, r0
900149f2:	460f      	mov	r7, r1
900149f4:	4293      	cmp	r3, r2
900149f6:	d954      	bls.n	90014aa2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900149f8:	4b2c      	ldr	r3, [pc, #176]	@ (90014aac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900149fa:	6819      	ldr	r1, [r3, #0]
900149fc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90014a00:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90014a04:	4a2a      	ldr	r2, [pc, #168]	@ (90014ab0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90014a06:	6812      	ldr	r2, [r2, #0]
90014a08:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90014a0c:	2900      	cmp	r1, #0
90014a0e:	d048      	beq.n	90014aa2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014a10:	785a      	ldrb	r2, [r3, #1]
90014a12:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90014a16:	f3c2 0801 	ubfx	r8, r2, #0, #2
90014a1a:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014a1e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014a22:	4b24      	ldr	r3, [pc, #144]	@ (90014ab4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90014a24:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90014a28:	681a      	ldr	r2, [r3, #0]
90014a2a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90014a2e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
90014a32:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90014a36:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90014a38:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90014a3c:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90014a40:	9107      	str	r1, [sp, #28]
90014a42:	f88d 8020 	strb.w	r8, [sp, #32]
90014a46:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90014a4a:	9609      	str	r6, [sp, #36]	@ 0x24
90014a4c:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90014a50:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90014a54:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90014a58:	b10b      	cbz	r3, 90014a5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90014a5a:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90014a5c:	b905      	cbnz	r5, 90014a60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90014a5e:	6895      	ldr	r5, [r2, #8]
90014a60:	ae05      	add	r6, sp, #20
90014a62:	4621      	mov	r1, r4
90014a64:	4630      	mov	r0, r6
90014a66:	f003 ff9b 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014a6a:	4b13      	ldr	r3, [pc, #76]	@ (90014ab8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90014a6c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90014a6e:	6818      	ldr	r0, [r3, #0]
90014a70:	f7f1 fef2 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
90014a74:	6823      	ldr	r3, [r4, #0]
90014a76:	4680      	mov	r8, r0
90014a78:	4620      	mov	r0, r4
90014a7a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014a7c:	4798      	blx	r3
90014a7e:	6823      	ldr	r3, [r4, #0]
90014a80:	4681      	mov	r9, r0
90014a82:	4620      	mov	r0, r4
90014a84:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014a88:	4798      	blx	r3
90014a8a:	ab07      	add	r3, sp, #28
90014a8c:	f8cd 8004 	str.w	r8, [sp, #4]
90014a90:	9300      	str	r3, [sp, #0]
90014a92:	463b      	mov	r3, r7
90014a94:	e9cd 9002 	strd	r9, r0, [sp, #8]
90014a98:	4628      	mov	r0, r5
90014a9a:	e896 0006 	ldmia.w	r6, {r1, r2}
90014a9e:	f7f1 fe8b 	bl	900067b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014aa2:	b00d      	add	sp, #52	@ 0x34
90014aa4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014aa8:	24021dc0 	.word	0x24021dc0
90014aac:	24021dbc 	.word	0x24021dbc
90014ab0:	24021dc4 	.word	0x24021dc4
90014ab4:	24021d64 	.word	0x24021d64
90014ab8:	24021dc8 	.word	0x24021dc8

90014abc <_ZN8touchgfx5ImageD1Ev>:
90014abc:	4770      	bx	lr

90014abe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90014abe:	b570      	push	{r4, r5, r6, lr}
90014ac0:	880b      	ldrh	r3, [r1, #0]
90014ac2:	460d      	mov	r5, r1
90014ac4:	4604      	mov	r4, r0
90014ac6:	84c3      	strh	r3, [r0, #38]	@ 0x26
90014ac8:	4608      	mov	r0, r1
90014aca:	f006 fa8d 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014ace:	4606      	mov	r6, r0
90014ad0:	4628      	mov	r0, r5
90014ad2:	f006 fabd 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014ad6:	6823      	ldr	r3, [r4, #0]
90014ad8:	4605      	mov	r5, r0
90014ada:	4631      	mov	r1, r6
90014adc:	4620      	mov	r0, r4
90014ade:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014ae0:	4798      	blx	r3
90014ae2:	6823      	ldr	r3, [r4, #0]
90014ae4:	4629      	mov	r1, r5
90014ae6:	4620      	mov	r0, r4
90014ae8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014aee:	4718      	bx	r3

90014af0 <_ZN8touchgfx5ImageD0Ev>:
90014af0:	b510      	push	{r4, lr}
90014af2:	4604      	mov	r4, r0
90014af4:	212c      	movs	r1, #44	@ 0x2c
90014af6:	f015 fb25 	bl	9002a144 <_ZdlPvj>
90014afa:	4620      	mov	r0, r4
90014afc:	bd10      	pop	{r4, pc}

90014afe <_ZNK8touchgfx5Image12getSolidRectEv>:
90014afe:	b510      	push	{r4, lr}
90014b00:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90014b04:	4604      	mov	r4, r0
90014b06:	2bff      	cmp	r3, #255	@ 0xff
90014b08:	d006      	beq.n	90014b18 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90014b0a:	2300      	movs	r3, #0
90014b0c:	8003      	strh	r3, [r0, #0]
90014b0e:	8043      	strh	r3, [r0, #2]
90014b10:	8083      	strh	r3, [r0, #4]
90014b12:	80c3      	strh	r3, [r0, #6]
90014b14:	4620      	mov	r0, r4
90014b16:	bd10      	pop	{r4, pc}
90014b18:	3126      	adds	r1, #38	@ 0x26
90014b1a:	f006 facd 	bl	9001b0b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014b1e:	e7f9      	b.n	90014b14 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90014b20 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90014b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014b24:	4604      	mov	r4, r0
90014b26:	b088      	sub	sp, #32
90014b28:	2500      	movs	r5, #0
90014b2a:	460f      	mov	r7, r1
90014b2c:	f854 3b26 	ldr.w	r3, [r4], #38
90014b30:	a904      	add	r1, sp, #16
90014b32:	4606      	mov	r6, r0
90014b34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014b36:	e9cd 5504 	strd	r5, r5, [sp, #16]
90014b3a:	4798      	blx	r3
90014b3c:	4620      	mov	r0, r4
90014b3e:	f006 fa53 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014b42:	4680      	mov	r8, r0
90014b44:	4620      	mov	r0, r4
90014b46:	f006 fa83 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014b4a:	9506      	str	r5, [sp, #24]
90014b4c:	ad06      	add	r5, sp, #24
90014b4e:	f8ad 001e 	strh.w	r0, [sp, #30]
90014b52:	4639      	mov	r1, r7
90014b54:	f8ad 801c 	strh.w	r8, [sp, #28]
90014b58:	4628      	mov	r0, r5
90014b5a:	f7fc fc7f 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90014b5e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90014b62:	2b00      	cmp	r3, #0
90014b64:	dd19      	ble.n	90014b9a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014b66:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014b6a:	2b00      	cmp	r3, #0
90014b6c:	dd15      	ble.n	90014b9a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014b6e:	4b0c      	ldr	r3, [pc, #48]	@ (90014ba0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90014b70:	681b      	ldr	r3, [r3, #0]
90014b72:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014b76:	b10a      	cbz	r2, 90014b7c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90014b78:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014b7a:	b900      	cbnz	r0, 90014b7e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90014b7c:	6898      	ldr	r0, [r3, #8]
90014b7e:	2701      	movs	r7, #1
90014b80:	6801      	ldr	r1, [r0, #0]
90014b82:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90014b86:	9702      	str	r7, [sp, #8]
90014b88:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90014b8c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90014b90:	e9cd 5600 	strd	r5, r6, [sp]
90014b94:	688d      	ldr	r5, [r1, #8]
90014b96:	4621      	mov	r1, r4
90014b98:	47a8      	blx	r5
90014b9a:	b008      	add	sp, #32
90014b9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014ba0:	24021d64 	.word	0x24021d64

90014ba4 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90014ba4:	4770      	bx	lr

90014ba6 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90014ba6:	b510      	push	{r4, lr}
90014ba8:	4604      	mov	r4, r0
90014baa:	2148      	movs	r1, #72	@ 0x48
90014bac:	f015 faca 	bl	9002a144 <_ZdlPvj>
90014bb0:	4620      	mov	r0, r4
90014bb2:	bd10      	pop	{r4, pc}

90014bb4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90014bb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014bb8:	b08d      	sub	sp, #52	@ 0x34
90014bba:	4604      	mov	r4, r0
90014bbc:	460f      	mov	r7, r1
90014bbe:	f7ff fe8f 	bl	900148e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90014bc2:	4a55      	ldr	r2, [pc, #340]	@ (90014d18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90014bc4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90014bc6:	8812      	ldrh	r2, [r2, #0]
90014bc8:	429a      	cmp	r2, r3
90014bca:	f240 8082 	bls.w	90014cd2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014bce:	4d53      	ldr	r5, [pc, #332]	@ (90014d1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90014bd0:	682a      	ldr	r2, [r5, #0]
90014bd2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014bd6:	4b52      	ldr	r3, [pc, #328]	@ (90014d20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90014bd8:	681b      	ldr	r3, [r3, #0]
90014bda:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90014bde:	2200      	movs	r2, #0
90014be0:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
90014be4:	e9cd 2203 	strd	r2, r2, [sp, #12]
90014be8:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90014bec:	2a03      	cmp	r2, #3
90014bee:	d811      	bhi.n	90014c14 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014bf0:	e8df f002 	tbb	[pc, r2]
90014bf4:	89727902 	.word	0x89727902
90014bf8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014bfc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014c00:	1ad2      	subs	r2, r2, r3
90014c02:	2002      	movs	r0, #2
90014c04:	f8ad 1010 	strh.w	r1, [sp, #16]
90014c08:	f8ad 3012 	strh.w	r3, [sp, #18]
90014c0c:	fb92 f2f0 	sdiv	r2, r2, r0
90014c10:	f8ad 200e 	strh.w	r2, [sp, #14]
90014c14:	f10d 080c 	add.w	r8, sp, #12
90014c18:	f10d 0914 	add.w	r9, sp, #20
90014c1c:	e898 0003 	ldmia.w	r8, {r0, r1}
90014c20:	e889 0003 	stmia.w	r9, {r0, r1}
90014c24:	4639      	mov	r1, r7
90014c26:	4648      	mov	r0, r9
90014c28:	f7fc fc18 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90014c2c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014c30:	2b00      	cmp	r3, #0
90014c32:	dd4e      	ble.n	90014cd2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014c34:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014c38:	2b00      	cmp	r3, #0
90014c3a:	dd4a      	ble.n	90014cd2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014c3c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014c40:	4641      	mov	r1, r8
90014c42:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90014c46:	4620      	mov	r0, r4
90014c48:	1a9b      	subs	r3, r3, r2
90014c4a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90014c4e:	f8ad 3014 	strh.w	r3, [sp, #20]
90014c52:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90014c56:	1a9b      	subs	r3, r3, r2
90014c58:	f8ad 3016 	strh.w	r3, [sp, #22]
90014c5c:	6823      	ldr	r3, [r4, #0]
90014c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014c60:	4798      	blx	r3
90014c62:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90014c66:	2b00      	cmp	r3, #0
90014c68:	d053      	beq.n	90014d12 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90014c6a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90014c6c:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90014c6e:	682b      	ldr	r3, [r5, #0]
90014c70:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90014c74:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014c78:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90014c7c:	785b      	ldrb	r3, [r3, #1]
90014c7e:	9209      	str	r2, [sp, #36]	@ 0x24
90014c80:	f3c3 0501 	ubfx	r5, r3, #0, #2
90014c84:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014c88:	9607      	str	r6, [sp, #28]
90014c8a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
90014c8e:	2300      	movs	r3, #0
90014c90:	f88d 5020 	strb.w	r5, [sp, #32]
90014c94:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90014c98:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90014c9c:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014ca0:	4b20      	ldr	r3, [pc, #128]	@ (90014d24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90014ca2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90014ca6:	681b      	ldr	r3, [r3, #0]
90014ca8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90014cac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014cb0:	b10a      	cbz	r2, 90014cb6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90014cb2:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90014cb4:	b904      	cbnz	r4, 90014cb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90014cb6:	689c      	ldr	r4, [r3, #8]
90014cb8:	4b1b      	ldr	r3, [pc, #108]	@ (90014d28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90014cba:	6818      	ldr	r0, [r3, #0]
90014cbc:	f7f1 fdcc 	bl	90006858 <_ZNK8touchgfx5Texts7getTextEt>
90014cc0:	ab07      	add	r3, sp, #28
90014cc2:	9001      	str	r0, [sp, #4]
90014cc4:	4620      	mov	r0, r4
90014cc6:	9300      	str	r3, [sp, #0]
90014cc8:	464b      	mov	r3, r9
90014cca:	e898 0006 	ldmia.w	r8, {r1, r2}
90014cce:	f7f1 fd73 	bl	900067b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014cd2:	b00d      	add	sp, #52	@ 0x34
90014cd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014cd8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014cdc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014ce0:	1ad2      	subs	r2, r2, r3
90014ce2:	3201      	adds	r2, #1
90014ce4:	e78d      	b.n	90014c02 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90014ce6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014cea:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014cee:	1ad2      	subs	r2, r2, r3
90014cf0:	3201      	adds	r2, #1
90014cf2:	2002      	movs	r0, #2
90014cf4:	f8ad 3010 	strh.w	r3, [sp, #16]
90014cf8:	f8ad 1012 	strh.w	r1, [sp, #18]
90014cfc:	fb92 f2f0 	sdiv	r2, r2, r0
90014d00:	f8ad 200c 	strh.w	r2, [sp, #12]
90014d04:	e786      	b.n	90014c14 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014d06:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014d0a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014d0e:	1ad2      	subs	r2, r2, r3
90014d10:	e7ef      	b.n	90014cf2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90014d12:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90014d14:	e7aa      	b.n	90014c6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90014d16:	bf00      	nop
90014d18:	24021dc0 	.word	0x24021dc0
90014d1c:	24021dbc 	.word	0x24021dbc
90014d20:	24021dc4 	.word	0x24021dc4
90014d24:	24021d64 	.word	0x24021d64
90014d28:	24021dc8 	.word	0x24021dc8

90014d2c <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90014d2c:	2101      	movs	r1, #1
90014d2e:	2200      	movs	r2, #0
90014d30:	b510      	push	{r4, lr}
90014d32:	4c13      	ldr	r4, [pc, #76]	@ (90014d80 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90014d34:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90014d38:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90014d3c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90014d40:	6004      	str	r4, [r0, #0]
90014d42:	4c10      	ldr	r4, [pc, #64]	@ (90014d84 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90014d44:	8082      	strh	r2, [r0, #4]
90014d46:	80c2      	strh	r2, [r0, #6]
90014d48:	8102      	strh	r2, [r0, #8]
90014d4a:	8142      	strh	r2, [r0, #10]
90014d4c:	8182      	strh	r2, [r0, #12]
90014d4e:	81c2      	strh	r2, [r0, #14]
90014d50:	8202      	strh	r2, [r0, #16]
90014d52:	8242      	strh	r2, [r0, #18]
90014d54:	61c2      	str	r2, [r0, #28]
90014d56:	8402      	strh	r2, [r0, #32]
90014d58:	8442      	strh	r2, [r0, #34]	@ 0x22
90014d5a:	6282      	str	r2, [r0, #40]	@ 0x28
90014d5c:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90014d60:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90014d62:	8601      	strh	r1, [r0, #48]	@ 0x30
90014d64:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90014d68:	6344      	str	r4, [r0, #52]	@ 0x34
90014d6a:	8701      	strh	r1, [r0, #56]	@ 0x38
90014d6c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90014d70:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90014d74:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014d78:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90014d7c:	bd10      	pop	{r4, pc}
90014d7e:	bf00      	nop
90014d80:	9002e8fc 	.word	0x9002e8fc
90014d84:	9002dac8 	.word	0x9002dac8

90014d88 <_ZN8touchgfx7OutlineD1Ev>:
90014d88:	4770      	bx	lr

90014d8a <_ZN8touchgfx7OutlineD0Ev>:
90014d8a:	b510      	push	{r4, lr}
90014d8c:	4604      	mov	r4, r0
90014d8e:	2130      	movs	r1, #48	@ 0x30
90014d90:	f015 f9d8 	bl	9002a144 <_ZdlPvj>
90014d94:	4620      	mov	r0, r4
90014d96:	bd10      	pop	{r4, pc}

90014d98 <_ZN8touchgfx7Outline5resetEv>:
90014d98:	b510      	push	{r4, lr}
90014d9a:	4604      	mov	r4, r0
90014d9c:	f000 fe72 	bl	90015a84 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90014da0:	60e0      	str	r0, [r4, #12]
90014da2:	f000 fe75 	bl	90015a90 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90014da6:	68e3      	ldr	r3, [r4, #12]
90014da8:	08c0      	lsrs	r0, r0, #3
90014daa:	2200      	movs	r2, #0
90014dac:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90014db0:	6123      	str	r3, [r4, #16]
90014db2:	3801      	subs	r0, #1
90014db4:	60a2      	str	r2, [r4, #8]
90014db6:	6060      	str	r0, [r4, #4]
90014db8:	8019      	strh	r1, [r3, #0]
90014dba:	8059      	strh	r1, [r3, #2]
90014dbc:	809a      	strh	r2, [r3, #4]
90014dbe:	80da      	strh	r2, [r3, #6]
90014dc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014dc2:	f023 0301 	bic.w	r3, r3, #1
90014dc6:	f043 0302 	orr.w	r3, r3, #2
90014dca:	6263      	str	r3, [r4, #36]	@ 0x24
90014dcc:	bd10      	pop	{r4, pc}
	...

90014dd0 <_ZN8touchgfx7OutlineC1Ev>:
90014dd0:	4b0a      	ldr	r3, [pc, #40]	@ (90014dfc <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90014dd2:	b510      	push	{r4, lr}
90014dd4:	6003      	str	r3, [r0, #0]
90014dd6:	2300      	movs	r3, #0
90014dd8:	4604      	mov	r4, r0
90014dda:	6243      	str	r3, [r0, #36]	@ 0x24
90014ddc:	e9c0 3301 	strd	r3, r3, [r0, #4]
90014de0:	e9c0 3303 	strd	r3, r3, [r0, #12]
90014de4:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014de8:	e9c0 3307 	strd	r3, r3, [r0, #28]
90014dec:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90014df0:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90014df4:	f7ff ffd0 	bl	90014d98 <_ZN8touchgfx7Outline5resetEv>
90014df8:	4620      	mov	r0, r4
90014dfa:	bd10      	pop	{r4, pc}
90014dfc:	9002e970 	.word	0x9002e970

90014e00 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014e04:	b093      	sub	sp, #76	@ 0x4c
90014e06:	1156      	asrs	r6, r2, #5
90014e08:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90014e0a:	9305      	str	r3, [sp, #20]
90014e0c:	1153      	asrs	r3, r2, #5
90014e0e:	f004 051f 	and.w	r5, r4, #31
90014e12:	9303      	str	r3, [sp, #12]
90014e14:	1163      	asrs	r3, r4, #5
90014e16:	9504      	str	r5, [sp, #16]
90014e18:	1165      	asrs	r5, r4, #5
90014e1a:	9306      	str	r3, [sp, #24]
90014e1c:	f002 031f 	and.w	r3, r2, #31
90014e20:	42ae      	cmp	r6, r5
90014e22:	f040 80f4 	bne.w	9001500e <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90014e26:	9c04      	ldr	r4, [sp, #16]
90014e28:	9a05      	ldr	r2, [sp, #20]
90014e2a:	42a3      	cmp	r3, r4
90014e2c:	ea4f 1e62 	mov.w	lr, r2, asr #5
90014e30:	6902      	ldr	r2, [r0, #16]
90014e32:	d125      	bne.n	90014e80 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90014e34:	f9b2 3000 	ldrsh.w	r3, [r2]
90014e38:	459e      	cmp	lr, r3
90014e3a:	d103      	bne.n	90014e44 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014e3c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014e40:	429e      	cmp	r6, r3
90014e42:	d035      	beq.n	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014e44:	88d1      	ldrh	r1, [r2, #6]
90014e46:	8893      	ldrh	r3, [r2, #4]
90014e48:	430b      	orrs	r3, r1
90014e4a:	d010      	beq.n	90014e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014e4c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014e50:	2b00      	cmp	r3, #0
90014e52:	db0c      	blt.n	90014e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014e54:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014e56:	428b      	cmp	r3, r1
90014e58:	da09      	bge.n	90014e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014e5a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014e5e:	428b      	cmp	r3, r1
90014e60:	f103 0301 	add.w	r3, r3, #1
90014e64:	bf38      	it	cc
90014e66:	3208      	addcc	r2, #8
90014e68:	6083      	str	r3, [r0, #8]
90014e6a:	bf38      	it	cc
90014e6c:	6102      	strcc	r2, [r0, #16]
90014e6e:	6903      	ldr	r3, [r0, #16]
90014e70:	9a03      	ldr	r2, [sp, #12]
90014e72:	f8a3 e000 	strh.w	lr, [r3]
90014e76:	805a      	strh	r2, [r3, #2]
90014e78:	2200      	movs	r2, #0
90014e7a:	809a      	strh	r2, [r3, #4]
90014e7c:	80da      	strh	r2, [r3, #6]
90014e7e:	e017      	b.n	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014e80:	9c05      	ldr	r4, [sp, #20]
90014e82:	114e      	asrs	r6, r1, #5
90014e84:	f001 0c1f 	and.w	ip, r1, #31
90014e88:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90014e8c:	f004 041f 	and.w	r4, r4, #31
90014e90:	4576      	cmp	r6, lr
90014e92:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90014e96:	9402      	str	r4, [sp, #8]
90014e98:	9c04      	ldr	r4, [sp, #16]
90014e9a:	eba4 0403 	sub.w	r4, r4, r3
90014e9e:	d10a      	bne.n	90014eb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90014ea0:	9b02      	ldr	r3, [sp, #8]
90014ea2:	44a0      	add	r8, r4
90014ea4:	449c      	add	ip, r3
90014ea6:	f8a2 8004 	strh.w	r8, [r2, #4]
90014eaa:	fb04 a40c 	mla	r4, r4, ip, sl
90014eae:	80d4      	strh	r4, [r2, #6]
90014eb0:	b013      	add	sp, #76	@ 0x4c
90014eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014eb6:	9d05      	ldr	r5, [sp, #20]
90014eb8:	1a69      	subs	r1, r5, r1
90014eba:	bf51      	iteee	pl
90014ebc:	f1cc 0520 	rsbpl	r5, ip, #32
90014ec0:	fb04 f40c 	mulmi.w	r4, r4, ip
90014ec4:	4249      	negmi	r1, r1
90014ec6:	2500      	movmi	r5, #0
90014ec8:	bf5d      	ittte	pl
90014eca:	436c      	mulpl	r4, r5
90014ecc:	2520      	movpl	r5, #32
90014ece:	f04f 0901 	movpl.w	r9, #1
90014ed2:	f04f 39ff 	movmi.w	r9, #4294967295
90014ed6:	9501      	str	r5, [sp, #4]
90014ed8:	9f01      	ldr	r7, [sp, #4]
90014eda:	444e      	add	r6, r9
90014edc:	fb94 f5f1 	sdiv	r5, r4, r1
90014ee0:	fb01 4415 	mls	r4, r1, r5, r4
90014ee4:	44bc      	add	ip, r7
90014ee6:	2c00      	cmp	r4, #0
90014ee8:	bfbc      	itt	lt
90014eea:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014eee:	1864      	addlt	r4, r4, r1
90014ef0:	44a8      	add	r8, r5
90014ef2:	fb05 ac0c 	mla	ip, r5, ip, sl
90014ef6:	f8a2 8004 	strh.w	r8, [r2, #4]
90014efa:	f8a2 c006 	strh.w	ip, [r2, #6]
90014efe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f02:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014f06:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014f0a:	ea58 0202 	orrs.w	r2, r8, r2
90014f0e:	d011      	beq.n	90014f34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014f10:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014f14:	f1b8 0f00 	cmp.w	r8, #0
90014f18:	db0c      	blt.n	90014f34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014f1a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014f1c:	4590      	cmp	r8, r2
90014f1e:	da09      	bge.n	90014f34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014f20:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90014f24:	4590      	cmp	r8, r2
90014f26:	bf3c      	itt	cc
90014f28:	f10c 0208 	addcc.w	r2, ip, #8
90014f2c:	6102      	strcc	r2, [r0, #16]
90014f2e:	f108 0201 	add.w	r2, r8, #1
90014f32:	6082      	str	r2, [r0, #8]
90014f34:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f38:	2700      	movs	r7, #0
90014f3a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014f3e:	45b6      	cmp	lr, r6
90014f40:	f8ac 6000 	strh.w	r6, [ip]
90014f44:	442b      	add	r3, r5
90014f46:	f8ac 2002 	strh.w	r2, [ip, #2]
90014f4a:	f8ac 7004 	strh.w	r7, [ip, #4]
90014f4e:	f8ac 7006 	strh.w	r7, [ip, #6]
90014f52:	d04b      	beq.n	90014fec <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90014f54:	9f04      	ldr	r7, [sp, #16]
90014f56:	1a64      	subs	r4, r4, r1
90014f58:	f04f 0a00 	mov.w	sl, #0
90014f5c:	1aff      	subs	r7, r7, r3
90014f5e:	443d      	add	r5, r7
90014f60:	016d      	lsls	r5, r5, #5
90014f62:	fb95 f8f1 	sdiv	r8, r5, r1
90014f66:	fb01 5518 	mls	r5, r1, r8, r5
90014f6a:	2d00      	cmp	r5, #0
90014f6c:	bfbc      	itt	lt
90014f6e:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014f72:	186d      	addlt	r5, r5, r1
90014f74:	f108 0701 	add.w	r7, r8, #1
90014f78:	9703      	str	r7, [sp, #12]
90014f7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f7e:	1964      	adds	r4, r4, r5
90014f80:	444e      	add	r6, r9
90014f82:	bf54      	ite	pl
90014f84:	9f03      	ldrpl	r7, [sp, #12]
90014f86:	4647      	movmi	r7, r8
90014f88:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014f8c:	bf58      	it	pl
90014f8e:	1a64      	subpl	r4, r4, r1
90014f90:	443b      	add	r3, r7
90014f92:	44bb      	add	fp, r7
90014f94:	f8ac b004 	strh.w	fp, [ip, #4]
90014f98:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014f9c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014fa0:	f8ac b006 	strh.w	fp, [ip, #6]
90014fa4:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014fa8:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014fac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014fb0:	ea5b 0707 	orrs.w	r7, fp, r7
90014fb4:	d011      	beq.n	90014fda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014fb6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014fba:	f1bb 0f00 	cmp.w	fp, #0
90014fbe:	db0c      	blt.n	90014fda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014fc0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014fc2:	45bb      	cmp	fp, r7
90014fc4:	da09      	bge.n	90014fda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014fc6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014fca:	45bb      	cmp	fp, r7
90014fcc:	bf3c      	itt	cc
90014fce:	f10c 0708 	addcc.w	r7, ip, #8
90014fd2:	6107      	strcc	r7, [r0, #16]
90014fd4:	f10b 0701 	add.w	r7, fp, #1
90014fd8:	6087      	str	r7, [r0, #8]
90014fda:	6907      	ldr	r7, [r0, #16]
90014fdc:	45b6      	cmp	lr, r6
90014fde:	803e      	strh	r6, [r7, #0]
90014fe0:	807a      	strh	r2, [r7, #2]
90014fe2:	f8a7 a004 	strh.w	sl, [r7, #4]
90014fe6:	f8a7 a006 	strh.w	sl, [r7, #6]
90014fea:	d1c6      	bne.n	90014f7a <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014fec:	9a04      	ldr	r2, [sp, #16]
90014fee:	1ad3      	subs	r3, r2, r3
90014ff0:	6902      	ldr	r2, [r0, #16]
90014ff2:	8891      	ldrh	r1, [r2, #4]
90014ff4:	88d6      	ldrh	r6, [r2, #6]
90014ff6:	4419      	add	r1, r3
90014ff8:	8091      	strh	r1, [r2, #4]
90014ffa:	9902      	ldr	r1, [sp, #8]
90014ffc:	f101 0c20 	add.w	ip, r1, #32
90015000:	9901      	ldr	r1, [sp, #4]
90015002:	ebac 0c01 	sub.w	ip, ip, r1
90015006:	fb03 630c 	mla	r3, r3, ip, r6
9001500a:	80d3      	strh	r3, [r2, #6]
9001500c:	e750      	b.n	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001500e:	9d05      	ldr	r5, [sp, #20]
90015010:	1aa2      	subs	r2, r4, r2
90015012:	eba5 0501 	sub.w	r5, r5, r1
90015016:	9202      	str	r2, [sp, #8]
90015018:	9508      	str	r5, [sp, #32]
9001501a:	f140 8128 	bpl.w	9001526e <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
9001501e:	9a03      	ldr	r2, [sp, #12]
90015020:	2a00      	cmp	r2, #0
90015022:	f6ff af45 	blt.w	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015026:	9a02      	ldr	r2, [sp, #8]
90015028:	f04f 34ff 	mov.w	r4, #4294967295
9001502c:	4252      	negs	r2, r2
9001502e:	940b      	str	r4, [sp, #44]	@ 0x2c
90015030:	2400      	movs	r4, #0
90015032:	9202      	str	r2, [sp, #8]
90015034:	9a06      	ldr	r2, [sp, #24]
90015036:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
9001503a:	9206      	str	r2, [sp, #24]
9001503c:	462a      	mov	r2, r5
9001503e:	435a      	muls	r2, r3
90015040:	9401      	str	r4, [sp, #4]
90015042:	9c02      	ldr	r4, [sp, #8]
90015044:	9d02      	ldr	r5, [sp, #8]
90015046:	fb92 f4f4 	sdiv	r4, r2, r4
9001504a:	fb05 2214 	mls	r2, r5, r4, r2
9001504e:	2a00      	cmp	r2, #0
90015050:	9207      	str	r2, [sp, #28]
90015052:	bfbc      	itt	lt
90015054:	1952      	addlt	r2, r2, r5
90015056:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001505a:	6905      	ldr	r5, [r0, #16]
9001505c:	bfb8      	it	lt
9001505e:	9207      	strlt	r2, [sp, #28]
90015060:	eb04 0901 	add.w	r9, r4, r1
90015064:	9a01      	ldr	r2, [sp, #4]
90015066:	ea4f 1669 	mov.w	r6, r9, asr #5
9001506a:	429a      	cmp	r2, r3
9001506c:	f040 8111 	bne.w	90015292 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90015070:	f9b5 3000 	ldrsh.w	r3, [r5]
90015074:	429e      	cmp	r6, r3
90015076:	d104      	bne.n	90015082 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90015078:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001507c:	9a03      	ldr	r2, [sp, #12]
9001507e:	429a      	cmp	r2, r3
90015080:	d01b      	beq.n	900150ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015082:	88ea      	ldrh	r2, [r5, #6]
90015084:	88ab      	ldrh	r3, [r5, #4]
90015086:	4313      	orrs	r3, r2
90015088:	d010      	beq.n	900150ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001508a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001508e:	2a00      	cmp	r2, #0
90015090:	db0c      	blt.n	900150ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015092:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015094:	429a      	cmp	r2, r3
90015096:	da09      	bge.n	900150ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015098:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
9001509c:	429a      	cmp	r2, r3
9001509e:	f102 0201 	add.w	r2, r2, #1
900150a2:	bf38      	it	cc
900150a4:	3508      	addcc	r5, #8
900150a6:	6082      	str	r2, [r0, #8]
900150a8:	bf38      	it	cc
900150aa:	6105      	strcc	r5, [r0, #16]
900150ac:	6903      	ldr	r3, [r0, #16]
900150ae:	9a03      	ldr	r2, [sp, #12]
900150b0:	801e      	strh	r6, [r3, #0]
900150b2:	805a      	strh	r2, [r3, #2]
900150b4:	2200      	movs	r2, #0
900150b6:	809a      	strh	r2, [r3, #4]
900150b8:	80da      	strh	r2, [r3, #6]
900150ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900150bc:	9a03      	ldr	r2, [sp, #12]
900150be:	6901      	ldr	r1, [r0, #16]
900150c0:	441a      	add	r2, r3
900150c2:	f9b1 3000 	ldrsh.w	r3, [r1]
900150c6:	42b3      	cmp	r3, r6
900150c8:	d103      	bne.n	900150d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
900150ca:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900150ce:	429a      	cmp	r2, r3
900150d0:	d01a      	beq.n	90015108 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
900150d2:	88cc      	ldrh	r4, [r1, #6]
900150d4:	888b      	ldrh	r3, [r1, #4]
900150d6:	4323      	orrs	r3, r4
900150d8:	d010      	beq.n	900150fc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900150da:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900150de:	2c00      	cmp	r4, #0
900150e0:	db0c      	blt.n	900150fc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900150e2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900150e4:	429c      	cmp	r4, r3
900150e6:	da09      	bge.n	900150fc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900150e8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900150ec:	429c      	cmp	r4, r3
900150ee:	f104 0401 	add.w	r4, r4, #1
900150f2:	bf38      	it	cc
900150f4:	3108      	addcc	r1, #8
900150f6:	6084      	str	r4, [r0, #8]
900150f8:	bf38      	it	cc
900150fa:	6101      	strcc	r1, [r0, #16]
900150fc:	6903      	ldr	r3, [r0, #16]
900150fe:	2100      	movs	r1, #0
90015100:	801e      	strh	r6, [r3, #0]
90015102:	805a      	strh	r2, [r3, #2]
90015104:	8099      	strh	r1, [r3, #4]
90015106:	80d9      	strh	r1, [r3, #6]
90015108:	9b06      	ldr	r3, [sp, #24]
9001510a:	4293      	cmp	r3, r2
9001510c:	f000 8082 	beq.w	90015214 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90015110:	9b08      	ldr	r3, [sp, #32]
90015112:	9902      	ldr	r1, [sp, #8]
90015114:	015b      	lsls	r3, r3, #5
90015116:	9c02      	ldr	r4, [sp, #8]
90015118:	fb93 f1f1 	sdiv	r1, r3, r1
9001511c:	fb04 3311 	mls	r3, r4, r1, r3
90015120:	9103      	str	r1, [sp, #12]
90015122:	2b00      	cmp	r3, #0
90015124:	9308      	str	r3, [sp, #32]
90015126:	da04      	bge.n	90015132 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90015128:	1e4b      	subs	r3, r1, #1
9001512a:	9303      	str	r3, [sp, #12]
9001512c:	9b08      	ldr	r3, [sp, #32]
9001512e:	4423      	add	r3, r4
90015130:	9308      	str	r3, [sp, #32]
90015132:	9b07      	ldr	r3, [sp, #28]
90015134:	464f      	mov	r7, r9
90015136:	9902      	ldr	r1, [sp, #8]
90015138:	2600      	movs	r6, #0
9001513a:	1a5b      	subs	r3, r3, r1
9001513c:	9307      	str	r3, [sp, #28]
9001513e:	9b01      	ldr	r3, [sp, #4]
90015140:	f1c3 0320 	rsb	r3, r3, #32
90015144:	930e      	str	r3, [sp, #56]	@ 0x38
90015146:	990e      	ldr	r1, [sp, #56]	@ 0x38
90015148:	9b01      	ldr	r3, [sp, #4]
9001514a:	1a5b      	subs	r3, r3, r1
9001514c:	930a      	str	r3, [sp, #40]	@ 0x28
9001514e:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90015152:	185b      	adds	r3, r3, r1
90015154:	bf58      	it	pl
90015156:	9902      	ldrpl	r1, [sp, #8]
90015158:	9307      	str	r3, [sp, #28]
9001515a:	bf57      	itett	pl
9001515c:	1a5b      	subpl	r3, r3, r1
9001515e:	9903      	ldrmi	r1, [sp, #12]
90015160:	9307      	strpl	r3, [sp, #28]
90015162:	9b03      	ldrpl	r3, [sp, #12]
90015164:	bf58      	it	pl
90015166:	1c59      	addpl	r1, r3, #1
90015168:	2a00      	cmp	r2, #0
9001516a:	4489      	add	r9, r1
9001516c:	ea4f 1a69 	mov.w	sl, r9, asr #5
90015170:	db2e      	blt.n	900151d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015172:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015174:	4293      	cmp	r3, r2
90015176:	dd2b      	ble.n	900151d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015178:	9c01      	ldr	r4, [sp, #4]
9001517a:	6905      	ldr	r5, [r0, #16]
9001517c:	46a0      	mov	r8, r4
9001517e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90015180:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90015184:	45a0      	cmp	r8, r4
90015186:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001518a:	f040 814c 	bne.w	90015426 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
9001518e:	f9b5 1000 	ldrsh.w	r1, [r5]
90015192:	4551      	cmp	r1, sl
90015194:	d103      	bne.n	9001519e <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90015196:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001519a:	4291      	cmp	r1, r2
9001519c:	d018      	beq.n	900151d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001519e:	ea5c 010e 	orrs.w	r1, ip, lr
900151a2:	d00f      	beq.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900151a4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900151a8:	2900      	cmp	r1, #0
900151aa:	db0b      	blt.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900151ac:	428b      	cmp	r3, r1
900151ae:	dd09      	ble.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900151b0:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900151b4:	4299      	cmp	r1, r3
900151b6:	f101 0101 	add.w	r1, r1, #1
900151ba:	bf38      	it	cc
900151bc:	3508      	addcc	r5, #8
900151be:	6081      	str	r1, [r0, #8]
900151c0:	bf38      	it	cc
900151c2:	6105      	strcc	r5, [r0, #16]
900151c4:	6903      	ldr	r3, [r0, #16]
900151c6:	f8a3 a000 	strh.w	sl, [r3]
900151ca:	805a      	strh	r2, [r3, #2]
900151cc:	809e      	strh	r6, [r3, #4]
900151ce:	80de      	strh	r6, [r3, #6]
900151d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900151d2:	6901      	ldr	r1, [r0, #16]
900151d4:	441a      	add	r2, r3
900151d6:	88cc      	ldrh	r4, [r1, #6]
900151d8:	888b      	ldrh	r3, [r1, #4]
900151da:	4323      	orrs	r3, r4
900151dc:	d010      	beq.n	90015200 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900151de:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900151e2:	2c00      	cmp	r4, #0
900151e4:	db0c      	blt.n	90015200 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900151e6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900151e8:	429c      	cmp	r4, r3
900151ea:	da09      	bge.n	90015200 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900151ec:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900151f0:	429c      	cmp	r4, r3
900151f2:	f104 0401 	add.w	r4, r4, #1
900151f6:	bf38      	it	cc
900151f8:	3108      	addcc	r1, #8
900151fa:	6084      	str	r4, [r0, #8]
900151fc:	bf38      	it	cc
900151fe:	6101      	strcc	r1, [r0, #16]
90015200:	6903      	ldr	r3, [r0, #16]
90015202:	464f      	mov	r7, r9
90015204:	f8a3 a000 	strh.w	sl, [r3]
90015208:	805a      	strh	r2, [r3, #2]
9001520a:	809e      	strh	r6, [r3, #4]
9001520c:	80de      	strh	r6, [r3, #6]
9001520e:	9b06      	ldr	r3, [sp, #24]
90015210:	4293      	cmp	r3, r2
90015212:	d19c      	bne.n	9001514e <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90015214:	9b01      	ldr	r3, [sp, #4]
90015216:	6907      	ldr	r7, [r0, #16]
90015218:	f1c3 0620 	rsb	r6, r3, #32
9001521c:	9b05      	ldr	r3, [sp, #20]
9001521e:	ea4f 1e63 	mov.w	lr, r3, asr #5
90015222:	9b04      	ldr	r3, [sp, #16]
90015224:	429e      	cmp	r6, r3
90015226:	f040 81c7 	bne.w	900155b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
9001522a:	f9b7 3000 	ldrsh.w	r3, [r7]
9001522e:	459e      	cmp	lr, r3
90015230:	d104      	bne.n	9001523c <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90015232:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015236:	429a      	cmp	r2, r3
90015238:	f43f ae3a 	beq.w	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001523c:	88f9      	ldrh	r1, [r7, #6]
9001523e:	88bb      	ldrh	r3, [r7, #4]
90015240:	430b      	orrs	r3, r1
90015242:	d010      	beq.n	90015266 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015244:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015248:	2b00      	cmp	r3, #0
9001524a:	db0c      	blt.n	90015266 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001524c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9001524e:	428b      	cmp	r3, r1
90015250:	da09      	bge.n	90015266 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015252:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015256:	428b      	cmp	r3, r1
90015258:	f103 0301 	add.w	r3, r3, #1
9001525c:	bf38      	it	cc
9001525e:	3708      	addcc	r7, #8
90015260:	6083      	str	r3, [r0, #8]
90015262:	bf38      	it	cc
90015264:	6107      	strcc	r7, [r0, #16]
90015266:	6903      	ldr	r3, [r0, #16]
90015268:	f8a3 e000 	strh.w	lr, [r3]
9001526c:	e603      	b.n	90014e76 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
9001526e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90015270:	9c03      	ldr	r4, [sp, #12]
90015272:	42a2      	cmp	r2, r4
90015274:	f6ff ae1c 	blt.w	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015278:	9c06      	ldr	r4, [sp, #24]
9001527a:	42a2      	cmp	r2, r4
9001527c:	9c08      	ldr	r4, [sp, #32]
9001527e:	bfbc      	itt	lt
90015280:	3201      	addlt	r2, #1
90015282:	9206      	strlt	r2, [sp, #24]
90015284:	f1c3 0220 	rsb	r2, r3, #32
90015288:	4362      	muls	r2, r4
9001528a:	2401      	movs	r4, #1
9001528c:	940b      	str	r4, [sp, #44]	@ 0x2c
9001528e:	2420      	movs	r4, #32
90015290:	e6d6      	b.n	90015040 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90015292:	ea4f 1861 	mov.w	r8, r1, asr #5
90015296:	f009 021f 	and.w	r2, r9, #31
9001529a:	f001 011f 	and.w	r1, r1, #31
9001529e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900152a2:	920c      	str	r2, [sp, #48]	@ 0x30
900152a4:	45b0      	cmp	r8, r6
900152a6:	9a01      	ldr	r2, [sp, #4]
900152a8:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900152ac:	eba2 0203 	sub.w	r2, r2, r3
900152b0:	d108      	bne.n	900152c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900152b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900152b4:	4496      	add	lr, r2
900152b6:	4419      	add	r1, r3
900152b8:	f8a5 e004 	strh.w	lr, [r5, #4]
900152bc:	fb02 a101 	mla	r1, r2, r1, sl
900152c0:	80e9      	strh	r1, [r5, #6]
900152c2:	e6fa      	b.n	900150ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900152c4:	2c00      	cmp	r4, #0
900152c6:	f2c0 80a7 	blt.w	90015418 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
900152ca:	2701      	movs	r7, #1
900152cc:	f1c1 0c20 	rsb	ip, r1, #32
900152d0:	970a      	str	r7, [sp, #40]	@ 0x28
900152d2:	2720      	movs	r7, #32
900152d4:	fb02 f20c 	mul.w	r2, r2, ip
900152d8:	9709      	str	r7, [sp, #36]	@ 0x24
900152da:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900152dc:	fb92 fcf4 	sdiv	ip, r2, r4
900152e0:	fb04 221c 	mls	r2, r4, ip, r2
900152e4:	4439      	add	r1, r7
900152e6:	2a00      	cmp	r2, #0
900152e8:	bfbc      	itt	lt
900152ea:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900152ee:	1912      	addlt	r2, r2, r4
900152f0:	fb0c a101 	mla	r1, ip, r1, sl
900152f4:	44e6      	add	lr, ip
900152f6:	80e9      	strh	r1, [r5, #6]
900152f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
900152fa:	f8a5 e004 	strh.w	lr, [r5, #4]
900152fe:	eb08 0501 	add.w	r5, r8, r1
90015302:	6901      	ldr	r1, [r0, #16]
90015304:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90015308:	f8b1 e004 	ldrh.w	lr, [r1, #4]
9001530c:	ea58 070e 	orrs.w	r7, r8, lr
90015310:	d010      	beq.n	90015334 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015312:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90015316:	f1be 0f00 	cmp.w	lr, #0
9001531a:	db0b      	blt.n	90015334 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001531c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001531e:	45be      	cmp	lr, r7
90015320:	da08      	bge.n	90015334 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015322:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90015326:	45be      	cmp	lr, r7
90015328:	bf3c      	itt	cc
9001532a:	3108      	addcc	r1, #8
9001532c:	6101      	strcc	r1, [r0, #16]
9001532e:	f10e 0101 	add.w	r1, lr, #1
90015332:	6081      	str	r1, [r0, #8]
90015334:	6901      	ldr	r1, [r0, #16]
90015336:	f04f 0e00 	mov.w	lr, #0
9001533a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001533e:	42ae      	cmp	r6, r5
90015340:	800d      	strh	r5, [r1, #0]
90015342:	4463      	add	r3, ip
90015344:	f8a1 8002 	strh.w	r8, [r1, #2]
90015348:	f8a1 e004 	strh.w	lr, [r1, #4]
9001534c:	f8a1 e006 	strh.w	lr, [r1, #6]
90015350:	d053      	beq.n	900153fa <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90015352:	9901      	ldr	r1, [sp, #4]
90015354:	1b12      	subs	r2, r2, r4
90015356:	1ac9      	subs	r1, r1, r3
90015358:	4461      	add	r1, ip
9001535a:	0149      	lsls	r1, r1, #5
9001535c:	fb91 fef4 	sdiv	lr, r1, r4
90015360:	fb04 111e 	mls	r1, r4, lr, r1
90015364:	2900      	cmp	r1, #0
90015366:	bfbc      	itt	lt
90015368:	f10e 3eff 	addlt.w	lr, lr, #4294967295
9001536c:	1909      	addlt	r1, r1, r4
9001536e:	f10e 0701 	add.w	r7, lr, #1
90015372:	970d      	str	r7, [sp, #52]	@ 0x34
90015374:	f8d0 a010 	ldr.w	sl, [r0, #16]
90015378:	1852      	adds	r2, r2, r1
9001537a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001537c:	bf54      	ite	pl
9001537e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90015382:	46f4      	movmi	ip, lr
90015384:	f8ba b004 	ldrh.w	fp, [sl, #4]
90015388:	bf58      	it	pl
9001538a:	1b12      	subpl	r2, r2, r4
9001538c:	4463      	add	r3, ip
9001538e:	443d      	add	r5, r7
90015390:	44e3      	add	fp, ip
90015392:	f8aa b004 	strh.w	fp, [sl, #4]
90015396:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001539a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
9001539e:	f8aa b006 	strh.w	fp, [sl, #6]
900153a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900153a6:	f8bc b006 	ldrh.w	fp, [ip, #6]
900153aa:	f8bc a004 	ldrh.w	sl, [ip, #4]
900153ae:	ea5b 070a 	orrs.w	r7, fp, sl
900153b2:	d014      	beq.n	900153de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900153b4:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900153b8:	f1ba 0f00 	cmp.w	sl, #0
900153bc:	db0f      	blt.n	900153de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900153be:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900153c0:	45ba      	cmp	sl, r7
900153c2:	da0c      	bge.n	900153de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900153c4:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
900153c8:	45ba      	cmp	sl, r7
900153ca:	f10a 0a01 	add.w	sl, sl, #1
900153ce:	bf38      	it	cc
900153d0:	f10c 0c08 	addcc.w	ip, ip, #8
900153d4:	f8c0 a008 	str.w	sl, [r0, #8]
900153d8:	bf38      	it	cc
900153da:	f8c0 c010 	strcc.w	ip, [r0, #16]
900153de:	f8d0 c010 	ldr.w	ip, [r0, #16]
900153e2:	f04f 0700 	mov.w	r7, #0
900153e6:	42ae      	cmp	r6, r5
900153e8:	f8ac 5000 	strh.w	r5, [ip]
900153ec:	f8ac 8002 	strh.w	r8, [ip, #2]
900153f0:	f8ac 7004 	strh.w	r7, [ip, #4]
900153f4:	f8ac 7006 	strh.w	r7, [ip, #6]
900153f8:	d1bc      	bne.n	90015374 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900153fa:	6904      	ldr	r4, [r0, #16]
900153fc:	9a01      	ldr	r2, [sp, #4]
900153fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015400:	1ad3      	subs	r3, r2, r3
90015402:	88a2      	ldrh	r2, [r4, #4]
90015404:	3120      	adds	r1, #32
90015406:	441a      	add	r2, r3
90015408:	80a2      	strh	r2, [r4, #4]
9001540a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001540c:	1a89      	subs	r1, r1, r2
9001540e:	88e2      	ldrh	r2, [r4, #6]
90015410:	fb03 2301 	mla	r3, r3, r1, r2
90015414:	80e3      	strh	r3, [r4, #6]
90015416:	e650      	b.n	900150ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015418:	f04f 37ff 	mov.w	r7, #4294967295
9001541c:	434a      	muls	r2, r1
9001541e:	4264      	negs	r4, r4
90015420:	970a      	str	r7, [sp, #40]	@ 0x28
90015422:	2700      	movs	r7, #0
90015424:	e758      	b.n	900152d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90015426:	ea4f 1867 	mov.w	r8, r7, asr #5
9001542a:	f009 031f 	and.w	r3, r9, #31
9001542e:	f007 071f 	and.w	r7, r7, #31
90015432:	fa1f fc8c 	uxth.w	ip, ip
90015436:	45d0      	cmp	r8, sl
90015438:	930f      	str	r3, [sp, #60]	@ 0x3c
9001543a:	fa1f fe8e 	uxth.w	lr, lr
9001543e:	d10a      	bne.n	90015456 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90015440:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90015442:	449c      	add	ip, r3
90015444:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015446:	441f      	add	r7, r3
90015448:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001544a:	f8a5 c004 	strh.w	ip, [r5, #4]
9001544e:	fb03 e707 	mla	r7, r3, r7, lr
90015452:	80ef      	strh	r7, [r5, #6]
90015454:	e6bc      	b.n	900151d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015456:	2900      	cmp	r1, #0
90015458:	f2c0 80a6 	blt.w	900155a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
9001545c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001545e:	f1c7 0320 	rsb	r3, r7, #32
90015462:	4363      	muls	r3, r4
90015464:	2401      	movs	r4, #1
90015466:	940d      	str	r4, [sp, #52]	@ 0x34
90015468:	2420      	movs	r4, #32
9001546a:	940c      	str	r4, [sp, #48]	@ 0x30
9001546c:	fb93 f4f1 	sdiv	r4, r3, r1
90015470:	fb01 3b14 	mls	fp, r1, r4, r3
90015474:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015476:	f1bb 0f00 	cmp.w	fp, #0
9001547a:	441f      	add	r7, r3
9001547c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001547e:	bfbc      	itt	lt
90015480:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015484:	448b      	addlt	fp, r1
90015486:	fb04 e707 	mla	r7, r4, r7, lr
9001548a:	44a4      	add	ip, r4
9001548c:	80ef      	strh	r7, [r5, #6]
9001548e:	f8a5 c004 	strh.w	ip, [r5, #4]
90015492:	eb08 0503 	add.w	r5, r8, r3
90015496:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001549a:	f8bc e006 	ldrh.w	lr, [ip, #6]
9001549e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900154a2:	ea5e 0307 	orrs.w	r3, lr, r7
900154a6:	d011      	beq.n	900154cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900154a8:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900154ac:	f1be 0f00 	cmp.w	lr, #0
900154b0:	db0c      	blt.n	900154cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900154b2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900154b4:	45be      	cmp	lr, r7
900154b6:	da09      	bge.n	900154cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900154b8:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900154bc:	45be      	cmp	lr, r7
900154be:	bf3c      	itt	cc
900154c0:	f10c 0708 	addcc.w	r7, ip, #8
900154c4:	6107      	strcc	r7, [r0, #16]
900154c6:	f10e 0701 	add.w	r7, lr, #1
900154ca:	6087      	str	r7, [r0, #8]
900154cc:	6907      	ldr	r7, [r0, #16]
900154ce:	b213      	sxth	r3, r2
900154d0:	4555      	cmp	r5, sl
900154d2:	9310      	str	r3, [sp, #64]	@ 0x40
900154d4:	807b      	strh	r3, [r7, #2]
900154d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900154d8:	803d      	strh	r5, [r7, #0]
900154da:	80be      	strh	r6, [r7, #4]
900154dc:	eb04 0c03 	add.w	ip, r4, r3
900154e0:	80fe      	strh	r6, [r7, #6]
900154e2:	d050      	beq.n	90015586 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900154e4:	9b01      	ldr	r3, [sp, #4]
900154e6:	eba3 070c 	sub.w	r7, r3, ip
900154ea:	ebab 0301 	sub.w	r3, fp, r1
900154ee:	443c      	add	r4, r7
900154f0:	9309      	str	r3, [sp, #36]	@ 0x24
900154f2:	0164      	lsls	r4, r4, #5
900154f4:	fb94 f8f1 	sdiv	r8, r4, r1
900154f8:	fb01 4418 	mls	r4, r1, r8, r4
900154fc:	2c00      	cmp	r4, #0
900154fe:	bfbc      	itt	lt
90015500:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015504:	1864      	addlt	r4, r4, r1
90015506:	f108 0701 	add.w	r7, r8, #1
9001550a:	9711      	str	r7, [sp, #68]	@ 0x44
9001550c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001550e:	f8d0 e010 	ldr.w	lr, [r0, #16]
90015512:	191b      	adds	r3, r3, r4
90015514:	f8be b004 	ldrh.w	fp, [lr, #4]
90015518:	bf54      	ite	pl
9001551a:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
9001551c:	4647      	movmi	r7, r8
9001551e:	9309      	str	r3, [sp, #36]	@ 0x24
90015520:	bf58      	it	pl
90015522:	1a5b      	subpl	r3, r3, r1
90015524:	44bb      	add	fp, r7
90015526:	44bc      	add	ip, r7
90015528:	bf58      	it	pl
9001552a:	9309      	strpl	r3, [sp, #36]	@ 0x24
9001552c:	f8ae b004 	strh.w	fp, [lr, #4]
90015530:	f8be b006 	ldrh.w	fp, [lr, #6]
90015534:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015538:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
9001553a:	f8ae b006 	strh.w	fp, [lr, #6]
9001553e:	443d      	add	r5, r7
90015540:	f8d0 e010 	ldr.w	lr, [r0, #16]
90015544:	f8be b006 	ldrh.w	fp, [lr, #6]
90015548:	f8be 7004 	ldrh.w	r7, [lr, #4]
9001554c:	ea5b 0307 	orrs.w	r3, fp, r7
90015550:	d011      	beq.n	90015576 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015552:	f9be b002 	ldrsh.w	fp, [lr, #2]
90015556:	f1bb 0f00 	cmp.w	fp, #0
9001555a:	db0c      	blt.n	90015576 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001555c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001555e:	45bb      	cmp	fp, r7
90015560:	da09      	bge.n	90015576 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015562:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015566:	45bb      	cmp	fp, r7
90015568:	bf3c      	itt	cc
9001556a:	f10e 0708 	addcc.w	r7, lr, #8
9001556e:	6107      	strcc	r7, [r0, #16]
90015570:	f10b 0701 	add.w	r7, fp, #1
90015574:	6087      	str	r7, [r0, #8]
90015576:	6907      	ldr	r7, [r0, #16]
90015578:	4555      	cmp	r5, sl
9001557a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001557c:	803d      	strh	r5, [r7, #0]
9001557e:	807b      	strh	r3, [r7, #2]
90015580:	80be      	strh	r6, [r7, #4]
90015582:	80fe      	strh	r6, [r7, #6]
90015584:	d1c2      	bne.n	9001550c <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90015586:	9b01      	ldr	r3, [sp, #4]
90015588:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001558a:	eba3 0c0c 	sub.w	ip, r3, ip
9001558e:	6903      	ldr	r3, [r0, #16]
90015590:	3720      	adds	r7, #32
90015592:	8899      	ldrh	r1, [r3, #4]
90015594:	4461      	add	r1, ip
90015596:	8099      	strh	r1, [r3, #4]
90015598:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001559a:	1a7f      	subs	r7, r7, r1
9001559c:	88d9      	ldrh	r1, [r3, #6]
9001559e:	fb0c 1c07 	mla	ip, ip, r7, r1
900155a2:	f8a3 c006 	strh.w	ip, [r3, #6]
900155a6:	e613      	b.n	900151d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900155a8:	f04f 34ff 	mov.w	r4, #4294967295
900155ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900155ae:	4249      	negs	r1, r1
900155b0:	940d      	str	r4, [sp, #52]	@ 0x34
900155b2:	2400      	movs	r4, #0
900155b4:	437b      	muls	r3, r7
900155b6:	e758      	b.n	9001546a <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900155b8:	9905      	ldr	r1, [sp, #20]
900155ba:	ea4f 1b69 	mov.w	fp, r9, asr #5
900155be:	f009 0c1f 	and.w	ip, r9, #31
900155c2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900155c6:	f001 011f 	and.w	r1, r1, #31
900155ca:	45f3      	cmp	fp, lr
900155cc:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900155d0:	9102      	str	r1, [sp, #8]
900155d2:	9904      	ldr	r1, [sp, #16]
900155d4:	eba1 0406 	sub.w	r4, r1, r6
900155d8:	d108      	bne.n	900155ec <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900155da:	9b02      	ldr	r3, [sp, #8]
900155dc:	44a0      	add	r8, r4
900155de:	449c      	add	ip, r3
900155e0:	f8a7 8004 	strh.w	r8, [r7, #4]
900155e4:	fb04 a40c 	mla	r4, r4, ip, sl
900155e8:	80fc      	strh	r4, [r7, #6]
900155ea:	e461      	b.n	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900155ec:	9905      	ldr	r1, [sp, #20]
900155ee:	ebb1 0109 	subs.w	r1, r1, r9
900155f2:	bf51      	iteee	pl
900155f4:	f1cc 0520 	rsbpl	r5, ip, #32
900155f8:	fb04 f40c 	mulmi.w	r4, r4, ip
900155fc:	4249      	negmi	r1, r1
900155fe:	2500      	movmi	r5, #0
90015600:	bf5d      	ittte	pl
90015602:	436c      	mulpl	r4, r5
90015604:	2520      	movpl	r5, #32
90015606:	f04f 0901 	movpl.w	r9, #1
9001560a:	f04f 39ff 	movmi.w	r9, #4294967295
9001560e:	9501      	str	r5, [sp, #4]
90015610:	9b01      	ldr	r3, [sp, #4]
90015612:	fb94 f5f1 	sdiv	r5, r4, r1
90015616:	fb01 4415 	mls	r4, r1, r5, r4
9001561a:	449c      	add	ip, r3
9001561c:	eb0b 0309 	add.w	r3, fp, r9
90015620:	2c00      	cmp	r4, #0
90015622:	bfbc      	itt	lt
90015624:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015628:	1864      	addlt	r4, r4, r1
9001562a:	44a8      	add	r8, r5
9001562c:	fb05 ac0c 	mla	ip, r5, ip, sl
90015630:	f8a7 8004 	strh.w	r8, [r7, #4]
90015634:	f8a7 c006 	strh.w	ip, [r7, #6]
90015638:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001563c:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015640:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015644:	ea58 0707 	orrs.w	r7, r8, r7
90015648:	d011      	beq.n	9001566e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001564a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001564e:	f1b8 0f00 	cmp.w	r8, #0
90015652:	db0c      	blt.n	9001566e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90015654:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015656:	45b8      	cmp	r8, r7
90015658:	da09      	bge.n	9001566e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001565a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
9001565e:	45b8      	cmp	r8, r7
90015660:	bf3c      	itt	cc
90015662:	f10c 0708 	addcc.w	r7, ip, #8
90015666:	6107      	strcc	r7, [r0, #16]
90015668:	f108 0701 	add.w	r7, r8, #1
9001566c:	6087      	str	r7, [r0, #8]
9001566e:	6907      	ldr	r7, [r0, #16]
90015670:	f04f 0c00 	mov.w	ip, #0
90015674:	b212      	sxth	r2, r2
90015676:	459e      	cmp	lr, r3
90015678:	803b      	strh	r3, [r7, #0]
9001567a:	442e      	add	r6, r5
9001567c:	807a      	strh	r2, [r7, #2]
9001567e:	f8a7 c004 	strh.w	ip, [r7, #4]
90015682:	f8a7 c006 	strh.w	ip, [r7, #6]
90015686:	d04b      	beq.n	90015720 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90015688:	9f04      	ldr	r7, [sp, #16]
9001568a:	1a64      	subs	r4, r4, r1
9001568c:	f04f 0a00 	mov.w	sl, #0
90015690:	1bbf      	subs	r7, r7, r6
90015692:	443d      	add	r5, r7
90015694:	016d      	lsls	r5, r5, #5
90015696:	fb95 f8f1 	sdiv	r8, r5, r1
9001569a:	fb01 5518 	mls	r5, r1, r8, r5
9001569e:	4565      	cmp	r5, ip
900156a0:	bfbc      	itt	lt
900156a2:	f108 38ff 	addlt.w	r8, r8, #4294967295
900156a6:	186d      	addlt	r5, r5, r1
900156a8:	f108 0701 	add.w	r7, r8, #1
900156ac:	9703      	str	r7, [sp, #12]
900156ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
900156b2:	1964      	adds	r4, r4, r5
900156b4:	444b      	add	r3, r9
900156b6:	bf54      	ite	pl
900156b8:	9f03      	ldrpl	r7, [sp, #12]
900156ba:	4647      	movmi	r7, r8
900156bc:	f8bc b004 	ldrh.w	fp, [ip, #4]
900156c0:	bf58      	it	pl
900156c2:	1a64      	subpl	r4, r4, r1
900156c4:	443e      	add	r6, r7
900156c6:	44bb      	add	fp, r7
900156c8:	f8ac b004 	strh.w	fp, [ip, #4]
900156cc:	f8bc b006 	ldrh.w	fp, [ip, #6]
900156d0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900156d4:	f8ac b006 	strh.w	fp, [ip, #6]
900156d8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900156dc:	f8bc b006 	ldrh.w	fp, [ip, #6]
900156e0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900156e4:	ea5b 0707 	orrs.w	r7, fp, r7
900156e8:	d011      	beq.n	9001570e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900156ea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900156ee:	f1bb 0f00 	cmp.w	fp, #0
900156f2:	db0c      	blt.n	9001570e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900156f4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900156f6:	45bb      	cmp	fp, r7
900156f8:	da09      	bge.n	9001570e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900156fa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900156fe:	45bb      	cmp	fp, r7
90015700:	bf3c      	itt	cc
90015702:	f10c 0708 	addcc.w	r7, ip, #8
90015706:	6107      	strcc	r7, [r0, #16]
90015708:	f10b 0701 	add.w	r7, fp, #1
9001570c:	6087      	str	r7, [r0, #8]
9001570e:	6907      	ldr	r7, [r0, #16]
90015710:	459e      	cmp	lr, r3
90015712:	803b      	strh	r3, [r7, #0]
90015714:	807a      	strh	r2, [r7, #2]
90015716:	f8a7 a004 	strh.w	sl, [r7, #4]
9001571a:	f8a7 a006 	strh.w	sl, [r7, #6]
9001571e:	d1c6      	bne.n	900156ae <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90015720:	9b04      	ldr	r3, [sp, #16]
90015722:	1b9e      	subs	r6, r3, r6
90015724:	6903      	ldr	r3, [r0, #16]
90015726:	889a      	ldrh	r2, [r3, #4]
90015728:	4432      	add	r2, r6
9001572a:	809a      	strh	r2, [r3, #4]
9001572c:	9a02      	ldr	r2, [sp, #8]
9001572e:	f102 0c20 	add.w	ip, r2, #32
90015732:	9a01      	ldr	r2, [sp, #4]
90015734:	ebac 0c02 	sub.w	ip, ip, r2
90015738:	88da      	ldrh	r2, [r3, #6]
9001573a:	fb06 260c 	mla	r6, r6, ip, r2
9001573e:	80de      	strh	r6, [r3, #6]
90015740:	f7ff bbb6 	b.w	90014eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90015744 <_ZN8touchgfx7Outline6lineToEii>:
90015744:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015746:	079b      	lsls	r3, r3, #30
90015748:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001574a:	460e      	mov	r6, r1
9001574c:	4615      	mov	r5, r2
9001574e:	d511      	bpl.n	90015774 <_ZN8touchgfx7Outline6lineToEii+0x30>
90015750:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90015754:	ea86 0701 	eor.w	r7, r6, r1
90015758:	ea85 0302 	eor.w	r3, r5, r2
9001575c:	433b      	orrs	r3, r7
9001575e:	d009      	beq.n	90015774 <_ZN8touchgfx7Outline6lineToEii+0x30>
90015760:	4633      	mov	r3, r6
90015762:	9500      	str	r5, [sp, #0]
90015764:	f7ff fb4c 	bl	90014e00 <_ZN8touchgfx7Outline10renderLineEiiii>
90015768:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001576a:	f043 0301 	orr.w	r3, r3, #1
9001576e:	e9c0 6505 	strd	r6, r5, [r0, #20]
90015772:	6243      	str	r3, [r0, #36]	@ 0x24
90015774:	b003      	add	sp, #12
90015776:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015778 <_ZN8touchgfx7Outline6moveToEii>:
90015778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001577a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001577c:	4615      	mov	r5, r2
9001577e:	4604      	mov	r4, r0
90015780:	460e      	mov	r6, r1
90015782:	079a      	lsls	r2, r3, #30
90015784:	d401      	bmi.n	9001578a <_ZN8touchgfx7Outline6moveToEii+0x12>
90015786:	f7ff fb07 	bl	90014d98 <_ZN8touchgfx7Outline5resetEv>
9001578a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001578c:	07db      	lsls	r3, r3, #31
9001578e:	d504      	bpl.n	9001579a <_ZN8touchgfx7Outline6moveToEii+0x22>
90015790:	4620      	mov	r0, r4
90015792:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90015796:	f7ff ffd5 	bl	90015744 <_ZN8touchgfx7Outline6lineToEii>
9001579a:	6923      	ldr	r3, [r4, #16]
9001579c:	1170      	asrs	r0, r6, #5
9001579e:	1169      	asrs	r1, r5, #5
900157a0:	f9b3 2000 	ldrsh.w	r2, [r3]
900157a4:	4290      	cmp	r0, r2
900157a6:	d103      	bne.n	900157b0 <_ZN8touchgfx7Outline6moveToEii+0x38>
900157a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900157ac:	4291      	cmp	r1, r2
900157ae:	d01a      	beq.n	900157e6 <_ZN8touchgfx7Outline6moveToEii+0x6e>
900157b0:	88df      	ldrh	r7, [r3, #6]
900157b2:	889a      	ldrh	r2, [r3, #4]
900157b4:	433a      	orrs	r2, r7
900157b6:	d010      	beq.n	900157da <_ZN8touchgfx7Outline6moveToEii+0x62>
900157b8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900157bc:	2a00      	cmp	r2, #0
900157be:	db0c      	blt.n	900157da <_ZN8touchgfx7Outline6moveToEii+0x62>
900157c0:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900157c2:	42ba      	cmp	r2, r7
900157c4:	da09      	bge.n	900157da <_ZN8touchgfx7Outline6moveToEii+0x62>
900157c6:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900157ca:	42ba      	cmp	r2, r7
900157cc:	f102 0201 	add.w	r2, r2, #1
900157d0:	bf38      	it	cc
900157d2:	3308      	addcc	r3, #8
900157d4:	60a2      	str	r2, [r4, #8]
900157d6:	bf38      	it	cc
900157d8:	6123      	strcc	r3, [r4, #16]
900157da:	6923      	ldr	r3, [r4, #16]
900157dc:	2200      	movs	r2, #0
900157de:	8018      	strh	r0, [r3, #0]
900157e0:	8059      	strh	r1, [r3, #2]
900157e2:	809a      	strh	r2, [r3, #4]
900157e4:	80da      	strh	r2, [r3, #6]
900157e6:	6166      	str	r6, [r4, #20]
900157e8:	6225      	str	r5, [r4, #32]
900157ea:	e9c4 5606 	strd	r5, r6, [r4, #24]
900157ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900157f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900157f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900157f4:	b0d0      	sub	sp, #320	@ 0x140
900157f6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900157fa:	466c      	mov	r4, sp
900157fc:	4627      	mov	r7, r4
900157fe:	1a0d      	subs	r5, r1, r0
90015800:	f100 0308 	add.w	r3, r0, #8
90015804:	2d48      	cmp	r5, #72	@ 0x48
90015806:	f340 80d5 	ble.w	900159b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001580a:	112d      	asrs	r5, r5, #4
9001580c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90015810:	f9b0 9000 	ldrsh.w	r9, [r0]
90015814:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90015818:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
9001581c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90015820:	6816      	ldr	r6, [r2, #0]
90015822:	6006      	str	r6, [r0, #0]
90015824:	6856      	ldr	r6, [r2, #4]
90015826:	6046      	str	r6, [r0, #4]
90015828:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
9001582c:	f8a2 8002 	strh.w	r8, [r2, #2]
90015830:	f8a2 e004 	strh.w	lr, [r2, #4]
90015834:	f8a2 c006 	strh.w	ip, [r2, #6]
90015838:	f1a1 0208 	sub.w	r2, r1, #8
9001583c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90015840:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90015844:	4565      	cmp	r5, ip
90015846:	db06      	blt.n	90015856 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90015848:	d119      	bne.n	9001587e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001584a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001584e:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90015852:	42ae      	cmp	r6, r5
90015854:	dd13      	ble.n	9001587e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90015856:	460e      	mov	r6, r1
90015858:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
9001585c:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90015860:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90015864:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90015868:	601d      	str	r5, [r3, #0]
9001586a:	6875      	ldr	r5, [r6, #4]
9001586c:	605d      	str	r5, [r3, #4]
9001586e:	f821 9c08 	strh.w	r9, [r1, #-8]
90015872:	f821 cc06 	strh.w	ip, [r1, #-6]
90015876:	f821 8c04 	strh.w	r8, [r1, #-4]
9001587a:	f821 ec02 	strh.w	lr, [r1, #-2]
9001587e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90015882:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90015886:	42ae      	cmp	r6, r5
90015888:	db06      	blt.n	90015898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001588a:	d116      	bne.n	900158ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001588c:	f9b0 c000 	ldrsh.w	ip, [r0]
90015890:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90015894:	45ac      	cmp	ip, r5
90015896:	da10      	bge.n	900158ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90015898:	681d      	ldr	r5, [r3, #0]
9001589a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001589e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900158a2:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900158a6:	6005      	str	r5, [r0, #0]
900158a8:	685d      	ldr	r5, [r3, #4]
900158aa:	f8a0 8008 	strh.w	r8, [r0, #8]
900158ae:	6045      	str	r5, [r0, #4]
900158b0:	8146      	strh	r6, [r0, #10]
900158b2:	f8a0 e00c 	strh.w	lr, [r0, #12]
900158b6:	f8a0 c00e 	strh.w	ip, [r0, #14]
900158ba:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900158be:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900158c2:	4565      	cmp	r5, ip
900158c4:	db06      	blt.n	900158d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900158c6:	d119      	bne.n	900158fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900158c8:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900158cc:	f9b0 5000 	ldrsh.w	r5, [r0]
900158d0:	42ae      	cmp	r6, r5
900158d2:	da13      	bge.n	900158fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900158d4:	460e      	mov	r6, r1
900158d6:	f9b0 9000 	ldrsh.w	r9, [r0]
900158da:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900158de:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900158e2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900158e6:	6005      	str	r5, [r0, #0]
900158e8:	6875      	ldr	r5, [r6, #4]
900158ea:	6045      	str	r5, [r0, #4]
900158ec:	f821 9c08 	strh.w	r9, [r1, #-8]
900158f0:	f821 cc06 	strh.w	ip, [r1, #-6]
900158f4:	f821 8c04 	strh.w	r8, [r1, #-4]
900158f8:	f821 ec02 	strh.w	lr, [r1, #-2]
900158fc:	3308      	adds	r3, #8
900158fe:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90015902:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90015906:	45e6      	cmp	lr, ip
90015908:	dbf8      	blt.n	900158fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001590a:	d105      	bne.n	90015918 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001590c:	f9b3 6000 	ldrsh.w	r6, [r3]
90015910:	f9b0 5000 	ldrsh.w	r5, [r0]
90015914:	42ae      	cmp	r6, r5
90015916:	dbf1      	blt.n	900158fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015918:	4615      	mov	r5, r2
9001591a:	3a08      	subs	r2, #8
9001591c:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90015920:	45b4      	cmp	ip, r6
90015922:	dbf9      	blt.n	90015918 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015924:	d105      	bne.n	90015932 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90015926:	f9b0 8000 	ldrsh.w	r8, [r0]
9001592a:	f9b2 6000 	ldrsh.w	r6, [r2]
9001592e:	45b0      	cmp	r8, r6
90015930:	dbf2      	blt.n	90015918 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015932:	4293      	cmp	r3, r2
90015934:	f1a5 0608 	sub.w	r6, r5, #8
90015938:	d816      	bhi.n	90015968 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
9001593a:	f8d6 c000 	ldr.w	ip, [r6]
9001593e:	f9b3 a000 	ldrsh.w	sl, [r3]
90015942:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90015946:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001594a:	f8c3 c000 	str.w	ip, [r3]
9001594e:	f8d6 c004 	ldr.w	ip, [r6, #4]
90015952:	f8c3 c004 	str.w	ip, [r3, #4]
90015956:	f825 ac08 	strh.w	sl, [r5, #-8]
9001595a:	f825 ec06 	strh.w	lr, [r5, #-6]
9001595e:	f825 9c04 	strh.w	r9, [r5, #-4]
90015962:	f825 8c02 	strh.w	r8, [r5, #-2]
90015966:	e7c9      	b.n	900158fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015968:	f8d6 e000 	ldr.w	lr, [r6]
9001596c:	f9b0 a000 	ldrsh.w	sl, [r0]
90015970:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90015974:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90015978:	f8c0 e000 	str.w	lr, [r0]
9001597c:	f8d6 e004 	ldr.w	lr, [r6, #4]
90015980:	1a16      	subs	r6, r2, r0
90015982:	f8c0 e004 	str.w	lr, [r0, #4]
90015986:	f825 ac08 	strh.w	sl, [r5, #-8]
9001598a:	f825 cc06 	strh.w	ip, [r5, #-6]
9001598e:	f825 9c04 	strh.w	r9, [r5, #-4]
90015992:	f825 8c02 	strh.w	r8, [r5, #-2]
90015996:	1acd      	subs	r5, r1, r3
90015998:	10ed      	asrs	r5, r5, #3
9001599a:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
9001599e:	bfb5      	itete	lt
900159a0:	e9c4 0200 	strdlt	r0, r2, [r4]
900159a4:	e9c4 3100 	strdge	r3, r1, [r4]
900159a8:	460a      	movlt	r2, r1
900159aa:	4603      	movge	r3, r0
900159ac:	3408      	adds	r4, #8
900159ae:	4618      	mov	r0, r3
900159b0:	4611      	mov	r1, r2
900159b2:	e724      	b.n	900157fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900159b4:	4299      	cmp	r1, r3
900159b6:	d927      	bls.n	90015a08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900159b8:	f1a3 0210 	sub.w	r2, r3, #16
900159bc:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900159c0:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900159c4:	45ac      	cmp	ip, r5
900159c6:	db06      	blt.n	900159d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900159c8:	d11c      	bne.n	90015a04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900159ca:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900159ce:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900159d2:	42ae      	cmp	r6, r5
900159d4:	da16      	bge.n	90015a04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900159d6:	4615      	mov	r5, r2
900159d8:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900159dc:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900159e0:	3a08      	subs	r2, #8
900159e2:	f855 6f08 	ldr.w	r6, [r5, #8]!
900159e6:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900159ea:	6196      	str	r6, [r2, #24]
900159ec:	42a8      	cmp	r0, r5
900159ee:	686e      	ldr	r6, [r5, #4]
900159f0:	f8a2 9010 	strh.w	r9, [r2, #16]
900159f4:	61d6      	str	r6, [r2, #28]
900159f6:	f8a2 c012 	strh.w	ip, [r2, #18]
900159fa:	f8a2 8014 	strh.w	r8, [r2, #20]
900159fe:	f8a2 e016 	strh.w	lr, [r2, #22]
90015a02:	d1db      	bne.n	900159bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90015a04:	3308      	adds	r3, #8
90015a06:	e7d5      	b.n	900159b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015a08:	42bc      	cmp	r4, r7
90015a0a:	d903      	bls.n	90015a14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90015a0c:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90015a10:	3c08      	subs	r4, #8
90015a12:	e6f4      	b.n	900157fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90015a14:	b050      	add	sp, #320	@ 0x140
90015a16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015a1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90015a1a:	b510      	push	{r4, lr}
90015a1c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015a1e:	4604      	mov	r4, r0
90015a20:	07da      	lsls	r2, r3, #31
90015a22:	d507      	bpl.n	90015a34 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90015a24:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90015a28:	f7ff fe8c 	bl	90015744 <_ZN8touchgfx7Outline6lineToEii>
90015a2c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015a2e:	f023 0301 	bic.w	r3, r3, #1
90015a32:	6243      	str	r3, [r0, #36]	@ 0x24
90015a34:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015a36:	079b      	lsls	r3, r3, #30
90015a38:	d521      	bpl.n	90015a7e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90015a3a:	6923      	ldr	r3, [r4, #16]
90015a3c:	88d9      	ldrh	r1, [r3, #6]
90015a3e:	889a      	ldrh	r2, [r3, #4]
90015a40:	430a      	orrs	r2, r1
90015a42:	d010      	beq.n	90015a66 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015a44:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015a48:	2a00      	cmp	r2, #0
90015a4a:	db0c      	blt.n	90015a66 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015a4c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90015a4e:	428a      	cmp	r2, r1
90015a50:	da09      	bge.n	90015a66 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015a52:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90015a56:	4291      	cmp	r1, r2
90015a58:	f102 0201 	add.w	r2, r2, #1
90015a5c:	bf88      	it	hi
90015a5e:	3308      	addhi	r3, #8
90015a60:	60a2      	str	r2, [r4, #8]
90015a62:	bf88      	it	hi
90015a64:	6123      	strhi	r3, [r4, #16]
90015a66:	68a1      	ldr	r1, [r4, #8]
90015a68:	b129      	cbz	r1, 90015a76 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015a6a:	6863      	ldr	r3, [r4, #4]
90015a6c:	4299      	cmp	r1, r3
90015a6e:	d802      	bhi.n	90015a76 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015a70:	68e0      	ldr	r0, [r4, #12]
90015a72:	f7ff febd 	bl	900157f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90015a76:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015a78:	f023 0302 	bic.w	r3, r3, #2
90015a7c:	6263      	str	r3, [r4, #36]	@ 0x24
90015a7e:	68e0      	ldr	r0, [r4, #12]
90015a80:	bd10      	pop	{r4, pc}
	...

90015a84 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90015a84:	4b01      	ldr	r3, [pc, #4]	@ (90015a8c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90015a86:	6818      	ldr	r0, [r3, #0]
90015a88:	4770      	bx	lr
90015a8a:	bf00      	nop
90015a8c:	24021d6c 	.word	0x24021d6c

90015a90 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90015a90:	4b01      	ldr	r3, [pc, #4]	@ (90015a98 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90015a92:	6818      	ldr	r0, [r3, #0]
90015a94:	4770      	bx	lr
90015a96:	bf00      	nop
90015a98:	24021d70 	.word	0x24021d70

90015a9c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90015a9c:	b510      	push	{r4, lr}
90015a9e:	6803      	ldr	r3, [r0, #0]
90015aa0:	460c      	mov	r4, r1
90015aa2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015aa4:	4798      	blx	r3
90015aa6:	1b03      	subs	r3, r0, r4
90015aa8:	4258      	negs	r0, r3
90015aaa:	4158      	adcs	r0, r3
90015aac:	bd10      	pop	{r4, pc}
	...

90015ab0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90015ab0:	4b01      	ldr	r3, [pc, #4]	@ (90015ab8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90015ab2:	6019      	str	r1, [r3, #0]
90015ab4:	4770      	bx	lr
90015ab6:	bf00      	nop
90015ab8:	24021d74 	.word	0x24021d74

90015abc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015ac0:	4696      	mov	lr, r2
90015ac2:	b097      	sub	sp, #92	@ 0x5c
90015ac4:	4605      	mov	r5, r0
90015ac6:	4614      	mov	r4, r2
90015ac8:	460e      	mov	r6, r1
90015aca:	461f      	mov	r7, r3
90015acc:	f10d 0c1c 	add.w	ip, sp, #28
90015ad0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90015ad4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90015ad8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90015adc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015ae0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015ae4:	f8de 3000 	ldr.w	r3, [lr]
90015ae8:	f104 0e14 	add.w	lr, r4, #20
90015aec:	f8cc 3000 	str.w	r3, [ip]
90015af0:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015af4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015af8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015afc:	f8de 3000 	ldr.w	r3, [lr]
90015b00:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90015b04:	f8cc 3000 	str.w	r3, [ip]
90015b08:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90015b0c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015b10:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015b14:	f8de 3000 	ldr.w	r3, [lr]
90015b18:	4631      	mov	r1, r6
90015b1a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015b1c:	4628      	mov	r0, r5
90015b1e:	f8cc 3000 	str.w	r3, [ip]
90015b22:	682b      	ldr	r3, [r5, #0]
90015b24:	9201      	str	r2, [sp, #4]
90015b26:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015b28:	f8cd 8008 	str.w	r8, [sp, #8]
90015b2c:	9200      	str	r2, [sp, #0]
90015b2e:	aa07      	add	r2, sp, #28
90015b30:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015b34:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90015b38:	463b      	mov	r3, r7
90015b3a:	47d8      	blx	fp
90015b3c:	46a6      	mov	lr, r4
90015b3e:	f10d 0c1c 	add.w	ip, sp, #28
90015b42:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015b46:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015b4a:	f8de 3000 	ldr.w	r3, [lr]
90015b4e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90015b52:	343c      	adds	r4, #60	@ 0x3c
90015b54:	f8cc 3000 	str.w	r3, [ip]
90015b58:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015b5c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015b60:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015b64:	f8de 3000 	ldr.w	r3, [lr]
90015b68:	f8cc 3000 	str.w	r3, [ip]
90015b6c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90015b70:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90015b72:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015b76:	6823      	ldr	r3, [r4, #0]
90015b78:	4631      	mov	r1, r6
90015b7a:	4628      	mov	r0, r5
90015b7c:	f8cc 3000 	str.w	r3, [ip]
90015b80:	682b      	ldr	r3, [r5, #0]
90015b82:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015b86:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015b88:	f8cd 8008 	str.w	r8, [sp, #8]
90015b8c:	9201      	str	r2, [sp, #4]
90015b8e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015b90:	9200      	str	r2, [sp, #0]
90015b92:	aa07      	add	r2, sp, #28
90015b94:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90015b96:	463b      	mov	r3, r7
90015b98:	47a0      	blx	r4
90015b9a:	b017      	add	sp, #92	@ 0x5c
90015b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015ba0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90015ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015ba4:	b08d      	sub	sp, #52	@ 0x34
90015ba6:	4688      	mov	r8, r1
90015ba8:	f8d3 c000 	ldr.w	ip, [r3]
90015bac:	9916      	ldr	r1, [sp, #88]	@ 0x58
90015bae:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90015bb2:	680f      	ldr	r7, [r1, #0]
90015bb4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90015bb8:	eba7 070c 	sub.w	r7, r7, ip
90015bbc:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90015bc0:	edd3 6a07 	vldr	s13, [r3, #28]
90015bc4:	42bc      	cmp	r4, r7
90015bc6:	9918      	ldr	r1, [sp, #96]	@ 0x60
90015bc8:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90015bcc:	bfa8      	it	ge
90015bce:	463c      	movge	r4, r7
90015bd0:	f9b1 9000 	ldrsh.w	r9, [r1]
90015bd4:	f9ba 1000 	ldrsh.w	r1, [sl]
90015bd8:	ee07 4a90 	vmov	s15, r4
90015bdc:	eb09 0e0c 	add.w	lr, r9, ip
90015be0:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90015be4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90015be8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90015bec:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90015bf0:	4571      	cmp	r1, lr
90015bf2:	ee25 4a04 	vmul.f32	s8, s10, s8
90015bf6:	ee65 4a24 	vmul.f32	s9, s10, s9
90015bfa:	ee25 5a27 	vmul.f32	s10, s10, s15
90015bfe:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90015c02:	ee71 0aa4 	vadd.f32	s1, s3, s9
90015c06:	ee32 1a05 	vadd.f32	s2, s4, s10
90015c0a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90015c0e:	ee36 0a84 	vadd.f32	s0, s13, s8
90015c12:	ee61 1a87 	vmul.f32	s3, s3, s14
90015c16:	ee22 2a07 	vmul.f32	s4, s4, s14
90015c1a:	f340 808c 	ble.w	90015d36 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90015c1e:	eba1 060e 	sub.w	r6, r1, lr
90015c22:	fb96 f5f4 	sdiv	r5, r6, r4
90015c26:	ee07 5a10 	vmov	s14, r5
90015c2a:	2d00      	cmp	r5, #0
90015c2c:	fb04 6615 	mls	r6, r4, r5, r6
90015c30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90015c34:	eea7 0a04 	vfma.f32	s0, s14, s8
90015c38:	eee7 0a24 	vfma.f32	s1, s14, s9
90015c3c:	eea7 1a05 	vfma.f32	s2, s14, s10
90015c40:	dd12      	ble.n	90015c68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90015c42:	ee70 6a44 	vsub.f32	s13, s0, s8
90015c46:	ee70 1ae4 	vsub.f32	s3, s1, s9
90015c4a:	ee31 2a45 	vsub.f32	s4, s2, s10
90015c4e:	eef5 6a40 	vcmp.f32	s13, #0.0
90015c52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015c56:	bf14      	ite	ne
90015c58:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90015c5c:	eeb0 7a67 	vmoveq.f32	s14, s15
90015c60:	ee61 1a87 	vmul.f32	s3, s3, s14
90015c64:	ee22 2a07 	vmul.f32	s4, s4, s14
90015c68:	fb05 f204 	mul.w	r2, r5, r4
90015c6c:	1abf      	subs	r7, r7, r2
90015c6e:	4494      	add	ip, r2
90015c70:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90015c74:	4411      	add	r1, r2
90015c76:	eb09 020c 	add.w	r2, r9, ip
90015c7a:	b209      	sxth	r1, r1
90015c7c:	443a      	add	r2, r7
90015c7e:	428a      	cmp	r2, r1
90015c80:	bfc4      	itt	gt
90015c82:	eba1 0209 	subgt.w	r2, r1, r9
90015c86:	eba2 070c 	subgt.w	r7, r2, ip
90015c8a:	2f00      	cmp	r7, #0
90015c8c:	dd50      	ble.n	90015d30 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90015c8e:	fb97 f1f4 	sdiv	r1, r7, r4
90015c92:	fb04 7211 	mls	r2, r4, r1, r7
90015c96:	b90a      	cbnz	r2, 90015c9c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90015c98:	3901      	subs	r1, #1
90015c9a:	4622      	mov	r2, r4
90015c9c:	eec7 3a80 	vdiv.f32	s7, s15, s0
90015ca0:	6840      	ldr	r0, [r0, #4]
90015ca2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90015ca6:	44b6      	add	lr, r6
90015ca8:	f8d0 a000 	ldr.w	sl, [r0]
90015cac:	2900      	cmp	r1, #0
90015cae:	bfcc      	ite	gt
90015cb0:	46a1      	movgt	r9, r4
90015cb2:	4691      	movle	r9, r2
90015cb4:	900b      	str	r0, [sp, #44]	@ 0x2c
90015cb6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90015cb8:	fb04 e505 	mla	r5, r4, r5, lr
90015cbc:	eef0 6a42 	vmov.f32	s13, s4
90015cc0:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90015cc4:	9008      	str	r0, [sp, #32]
90015cc6:	eeb0 7a61 	vmov.f32	s14, s3
90015cca:	9818      	ldr	r0, [sp, #96]	@ 0x60
90015ccc:	695b      	ldr	r3, [r3, #20]
90015cce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015cd2:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90015cd6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90015cda:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90015cdc:	445b      	add	r3, fp
90015cde:	9307      	str	r3, [sp, #28]
90015ce0:	ee16 3a90 	vmov	r3, s13
90015ce4:	e9cd 8505 	strd	r8, r5, [sp, #20]
90015ce8:	ee60 2aa3 	vmul.f32	s5, s1, s7
90015cec:	ee21 3a23 	vmul.f32	s6, s2, s7
90015cf0:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015cf4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015cf8:	ee17 7a90 	vmov	r7, s15
90015cfc:	ee73 7a42 	vsub.f32	s15, s6, s4
90015d00:	fb97 f7f4 	sdiv	r7, r7, r4
90015d04:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015d08:	ee17 ca90 	vmov	ip, s15
90015d0c:	fb9c fcf4 	sdiv	ip, ip, r4
90015d10:	fb0c 3306 	mla	r3, ip, r6, r3
90015d14:	9302      	str	r3, [sp, #8]
90015d16:	ee17 3a10 	vmov	r3, s14
90015d1a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90015d1e:	fb07 3706 	mla	r7, r7, r6, r3
90015d22:	eba9 0306 	sub.w	r3, r9, r6
90015d26:	e9cd 4700 	strd	r4, r7, [sp]
90015d2a:	f8da 4008 	ldr.w	r4, [sl, #8]
90015d2e:	47a0      	blx	r4
90015d30:	b00d      	add	sp, #52	@ 0x34
90015d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015d36:	2500      	movs	r5, #0
90015d38:	462e      	mov	r6, r5
90015d3a:	e799      	b.n	90015c70 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90015d3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015d40:	b0db      	sub	sp, #364	@ 0x16c
90015d42:	461d      	mov	r5, r3
90015d44:	4614      	mov	r4, r2
90015d46:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90015d4a:	910f      	str	r1, [sp, #60]	@ 0x3c
90015d4c:	4629      	mov	r1, r5
90015d4e:	930a      	str	r3, [sp, #40]	@ 0x28
90015d50:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90015d54:	9009      	str	r0, [sp, #36]	@ 0x24
90015d56:	930b      	str	r3, [sp, #44]	@ 0x2c
90015d58:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90015d5c:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90015d60:	9310      	str	r3, [sp, #64]	@ 0x40
90015d62:	6803      	ldr	r3, [r0, #0]
90015d64:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90015d66:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90015d6a:	47b8      	blx	r7
90015d6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015d6e:	6058      	str	r0, [r3, #4]
90015d70:	2800      	cmp	r0, #0
90015d72:	f000 83a1 	beq.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015d76:	682b      	ldr	r3, [r5, #0]
90015d78:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90015d7c:	ed94 7a02 	vldr	s14, [r4, #8]
90015d80:	9314      	str	r3, [sp, #80]	@ 0x50
90015d82:	686b      	ldr	r3, [r5, #4]
90015d84:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015d88:	9315      	str	r3, [sp, #84]	@ 0x54
90015d8a:	4bc1      	ldr	r3, [pc, #772]	@ (90016090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90015d8c:	7819      	ldrb	r1, [r3, #0]
90015d8e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90015d92:	2900      	cmp	r1, #0
90015d94:	bf16      	itet	ne
90015d96:	4619      	movne	r1, r3
90015d98:	4611      	moveq	r1, r2
90015d9a:	4613      	movne	r3, r2
90015d9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015da0:	9116      	str	r1, [sp, #88]	@ 0x58
90015da2:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90015da6:	f240 8387 	bls.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015daa:	ed94 7a07 	vldr	s14, [r4, #28]
90015dae:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015db6:	f240 837f 	bls.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dba:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90015dbe:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015dc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015dc6:	f240 8377 	bls.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dca:	6822      	ldr	r2, [r4, #0]
90015dcc:	4bb1      	ldr	r3, [pc, #708]	@ (90016094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90015dce:	429a      	cmp	r2, r3
90015dd0:	f2c0 8372 	blt.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dd4:	49b0      	ldr	r1, [pc, #704]	@ (90016098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015dd6:	6963      	ldr	r3, [r4, #20]
90015dd8:	428a      	cmp	r2, r1
90015dda:	f300 836d 	bgt.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dde:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015de2:	48ae      	ldr	r0, [pc, #696]	@ (9001609c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015de4:	33ff      	adds	r3, #255	@ 0xff
90015de6:	4283      	cmp	r3, r0
90015de8:	f200 8366 	bhi.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dec:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90015dee:	4dac      	ldr	r5, [pc, #688]	@ (900160a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015df0:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015df4:	33ff      	adds	r3, #255	@ 0xff
90015df6:	42ab      	cmp	r3, r5
90015df8:	f200 835e 	bhi.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015dfc:	6862      	ldr	r2, [r4, #4]
90015dfe:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90015e02:	33ff      	adds	r3, #255	@ 0xff
90015e04:	4283      	cmp	r3, r0
90015e06:	f200 8357 	bhi.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015e0a:	69a1      	ldr	r1, [r4, #24]
90015e0c:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90015e10:	33ff      	adds	r3, #255	@ 0xff
90015e12:	4283      	cmp	r3, r0
90015e14:	f200 8350 	bhi.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015e18:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90015e1a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90015e1e:	30ff      	adds	r0, #255	@ 0xff
90015e20:	42a8      	cmp	r0, r5
90015e22:	f200 8349 	bhi.w	900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015e26:	428a      	cmp	r2, r1
90015e28:	f280 8110 	bge.w	9001604c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90015e2c:	429a      	cmp	r2, r3
90015e2e:	f300 8119 	bgt.w	90016064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015e32:	4299      	cmp	r1, r3
90015e34:	f280 811d 	bge.w	90016072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90015e38:	2502      	movs	r5, #2
90015e3a:	2701      	movs	r7, #1
90015e3c:	46a9      	mov	r9, r5
90015e3e:	46b8      	mov	r8, r7
90015e40:	f04f 0a00 	mov.w	sl, #0
90015e44:	4621      	mov	r1, r4
90015e46:	a849      	add	r0, sp, #292	@ 0x124
90015e48:	f004 fa8c 	bl	9001a364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90015e4c:	4622      	mov	r2, r4
90015e4e:	4653      	mov	r3, sl
90015e50:	a949      	add	r1, sp, #292	@ 0x124
90015e52:	f8cd 9000 	str.w	r9, [sp]
90015e56:	a819      	add	r0, sp, #100	@ 0x64
90015e58:	f004 fbb4 	bl	9001a5c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015e5c:	4622      	mov	r2, r4
90015e5e:	4653      	mov	r3, sl
90015e60:	a949      	add	r1, sp, #292	@ 0x124
90015e62:	f8cd 8000 	str.w	r8, [sp]
90015e66:	a829      	add	r0, sp, #164	@ 0xa4
90015e68:	f004 fbac 	bl	9001a5c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015e6c:	4643      	mov	r3, r8
90015e6e:	4622      	mov	r2, r4
90015e70:	a949      	add	r1, sp, #292	@ 0x124
90015e72:	f8cd 9000 	str.w	r9, [sp]
90015e76:	a839      	add	r0, sp, #228	@ 0xe4
90015e78:	f004 fba4 	bl	9001a5c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015e7c:	42af      	cmp	r7, r5
90015e7e:	af12      	add	r7, sp, #72	@ 0x48
90015e80:	bfb7      	itett	lt
90015e82:	2300      	movlt	r3, #0
90015e84:	2301      	movge	r3, #1
90015e86:	ad29      	addlt	r5, sp, #164	@ 0xa4
90015e88:	ac19      	addlt	r4, sp, #100	@ 0x64
90015e8a:	bfb1      	iteee	lt
90015e8c:	930e      	strlt	r3, [sp, #56]	@ 0x38
90015e8e:	ad19      	addge	r5, sp, #100	@ 0x64
90015e90:	930e      	strge	r3, [sp, #56]	@ 0x38
90015e92:	ac29      	addge	r4, sp, #164	@ 0xa4
90015e94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015e96:	e893 0003 	ldmia.w	r3, {r0, r1}
90015e9a:	e887 0003 	stmia.w	r7, {r0, r1}
90015e9e:	b928      	cbnz	r0, 90015eac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90015ea0:	4b80      	ldr	r3, [pc, #512]	@ (900160a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90015ea2:	6818      	ldr	r0, [r3, #0]
90015ea4:	6803      	ldr	r3, [r0, #0]
90015ea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015ea8:	4798      	blx	r3
90015eaa:	6038      	str	r0, [r7, #0]
90015eac:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015eae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015eb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015eb6:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90015eb8:	930c      	str	r3, [sp, #48]	@ 0x30
90015eba:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015ebc:	6963      	ldr	r3, [r4, #20]
90015ebe:	440b      	add	r3, r1
90015ec0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015ec4:	4408      	add	r0, r1
90015ec6:	b200      	sxth	r0, r0
90015ec8:	4283      	cmp	r3, r0
90015eca:	900d      	str	r0, [sp, #52]	@ 0x34
90015ecc:	f280 80dd 	bge.w	9001608a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015ed0:	428b      	cmp	r3, r1
90015ed2:	da08      	bge.n	90015ee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015ed4:	2a00      	cmp	r2, #0
90015ed6:	dd06      	ble.n	90015ee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015ed8:	1acb      	subs	r3, r1, r3
90015eda:	429a      	cmp	r2, r3
90015edc:	f2c0 80e4 	blt.w	900160a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015ee0:	2b00      	cmp	r3, #0
90015ee2:	f300 80e2 	bgt.w	900160aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015ee6:	6967      	ldr	r7, [r4, #20]
90015ee8:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015eec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015eee:	443b      	add	r3, r7
90015ef0:	461f      	mov	r7, r3
90015ef2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015ef4:	1bdf      	subs	r7, r3, r7
90015ef6:	4297      	cmp	r7, r2
90015ef8:	bfa8      	it	ge
90015efa:	4617      	movge	r7, r2
90015efc:	2f00      	cmp	r7, #0
90015efe:	f340 8166 	ble.w	900161ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015f02:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015f04:	6829      	ldr	r1, [r5, #0]
90015f06:	f9b3 2000 	ldrsh.w	r2, [r3]
90015f0a:	f9bb 3000 	ldrsh.w	r3, [fp]
90015f0e:	4411      	add	r1, r2
90015f10:	6820      	ldr	r0, [r4, #0]
90015f12:	4299      	cmp	r1, r3
90015f14:	dd1a      	ble.n	90015f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015f16:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015f1a:	4402      	add	r2, r0
90015f1c:	440b      	add	r3, r1
90015f1e:	b21b      	sxth	r3, r3
90015f20:	429a      	cmp	r2, r3
90015f22:	dc13      	bgt.n	90015f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015f24:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015f26:	a912      	add	r1, sp, #72	@ 0x48
90015f28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015f2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015f2c:	681b      	ldr	r3, [r3, #0]
90015f2e:	9206      	str	r2, [sp, #24]
90015f30:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015f32:	9500      	str	r5, [sp, #0]
90015f34:	9205      	str	r2, [sp, #20]
90015f36:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015f38:	e9cd b203 	strd	fp, r2, [sp, #12]
90015f3c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015f3e:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015f42:	aa49      	add	r2, sp, #292	@ 0x124
90015f44:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015f48:	4623      	mov	r3, r4
90015f4a:	47c8      	blx	r9
90015f4c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015f50:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015f54:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015f58:	ee37 7a27 	vadd.f32	s14, s14, s15
90015f5c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015f60:	68a1      	ldr	r1, [r4, #8]
90015f62:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015f66:	ed94 6a08 	vldr	s12, [r4, #32]
90015f6a:	edd4 6a07 	vldr	s13, [r4, #28]
90015f6e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015f72:	ee76 6a86 	vadd.f32	s13, s13, s12
90015f76:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015f7a:	e9d4 2300 	ldrd	r2, r3, [r4]
90015f7e:	edc4 6a07 	vstr	s13, [r4, #28]
90015f82:	441a      	add	r2, r3
90015f84:	6963      	ldr	r3, [r4, #20]
90015f86:	3301      	adds	r3, #1
90015f88:	6022      	str	r2, [r4, #0]
90015f8a:	6163      	str	r3, [r4, #20]
90015f8c:	69a3      	ldr	r3, [r4, #24]
90015f8e:	3b01      	subs	r3, #1
90015f90:	61a3      	str	r3, [r4, #24]
90015f92:	6923      	ldr	r3, [r4, #16]
90015f94:	440b      	add	r3, r1
90015f96:	68e1      	ldr	r1, [r4, #12]
90015f98:	428b      	cmp	r3, r1
90015f9a:	6123      	str	r3, [r4, #16]
90015f9c:	db15      	blt.n	90015fca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90015f9e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015fa2:	3201      	adds	r2, #1
90015fa4:	1a5b      	subs	r3, r3, r1
90015fa6:	ee76 6a26 	vadd.f32	s13, s12, s13
90015faa:	6022      	str	r2, [r4, #0]
90015fac:	6123      	str	r3, [r4, #16]
90015fae:	edc4 6a07 	vstr	s13, [r4, #28]
90015fb2:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015fb6:	ee36 7a87 	vadd.f32	s14, s13, s14
90015fba:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015fbe:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015fc2:	ee77 7a27 	vadd.f32	s15, s14, s15
90015fc6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015fca:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015fce:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015fd2:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015fd6:	ee37 7a27 	vadd.f32	s14, s14, s15
90015fda:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015fde:	68a9      	ldr	r1, [r5, #8]
90015fe0:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015fe4:	ed95 6a08 	vldr	s12, [r5, #32]
90015fe8:	edd5 6a07 	vldr	s13, [r5, #28]
90015fec:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015ff0:	ee76 6a86 	vadd.f32	s13, s13, s12
90015ff4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015ff8:	e9d5 2300 	ldrd	r2, r3, [r5]
90015ffc:	edc5 6a07 	vstr	s13, [r5, #28]
90016000:	441a      	add	r2, r3
90016002:	696b      	ldr	r3, [r5, #20]
90016004:	3301      	adds	r3, #1
90016006:	602a      	str	r2, [r5, #0]
90016008:	616b      	str	r3, [r5, #20]
9001600a:	69ab      	ldr	r3, [r5, #24]
9001600c:	3b01      	subs	r3, #1
9001600e:	61ab      	str	r3, [r5, #24]
90016010:	692b      	ldr	r3, [r5, #16]
90016012:	440b      	add	r3, r1
90016014:	68e9      	ldr	r1, [r5, #12]
90016016:	428b      	cmp	r3, r1
90016018:	612b      	str	r3, [r5, #16]
9001601a:	db15      	blt.n	90016048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
9001601c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90016020:	3201      	adds	r2, #1
90016022:	1a5b      	subs	r3, r3, r1
90016024:	ee76 6a26 	vadd.f32	s13, s12, s13
90016028:	602a      	str	r2, [r5, #0]
9001602a:	612b      	str	r3, [r5, #16]
9001602c:	edc5 6a07 	vstr	s13, [r5, #28]
90016030:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90016034:	ee36 7a87 	vadd.f32	s14, s13, s14
90016038:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001603c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90016040:	ee77 7a27 	vadd.f32	s15, s14, s15
90016044:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016048:	3f01      	subs	r7, #1
9001604a:	e757      	b.n	90015efc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
9001604c:	4299      	cmp	r1, r3
9001604e:	dc13      	bgt.n	90016078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90016050:	429a      	cmp	r2, r3
90016052:	da14      	bge.n	9001607e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90016054:	2502      	movs	r5, #2
90016056:	2703      	movs	r7, #3
90016058:	f04f 0800 	mov.w	r8, #0
9001605c:	46a9      	mov	r9, r5
9001605e:	f04f 0a01 	mov.w	sl, #1
90016062:	e6ef      	b.n	90015e44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016064:	2501      	movs	r5, #1
90016066:	2700      	movs	r7, #0
90016068:	46a9      	mov	r9, r5
9001606a:	46b8      	mov	r8, r7
9001606c:	f04f 0a02 	mov.w	sl, #2
90016070:	e6e8      	b.n	90015e44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016072:	2501      	movs	r5, #1
90016074:	2702      	movs	r7, #2
90016076:	e6e1      	b.n	90015e3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90016078:	2500      	movs	r5, #0
9001607a:	2701      	movs	r7, #1
9001607c:	e7f4      	b.n	90016068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001607e:	2702      	movs	r7, #2
90016080:	2503      	movs	r5, #3
90016082:	f04f 0900 	mov.w	r9, #0
90016086:	46b8      	mov	r8, r7
90016088:	e7e9      	b.n	9001605e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
9001608a:	4613      	mov	r3, r2
9001608c:	e728      	b.n	90015ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001608e:	bf00      	nop
90016090:	24021d5c 	.word	0x24021d5c
90016094:	fffd8f01 	.word	0xfffd8f01
90016098:	00027100 	.word	0x00027100
9001609c:	0004e1ff 	.word	0x0004e1ff
900160a0:	0004e1fe 	.word	0x0004e1fe
900160a4:	24021d64 	.word	0x24021d64
900160a8:	4613      	mov	r3, r2
900160aa:	992b      	ldr	r1, [sp, #172]	@ 0xac
900160ac:	469e      	mov	lr, r3
900160ae:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
900160b0:	469c      	mov	ip, r3
900160b2:	9111      	str	r1, [sp, #68]	@ 0x44
900160b4:	f04f 0900 	mov.w	r9, #0
900160b8:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
900160bc:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
900160c0:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
900160c4:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
900160c8:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
900160cc:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
900160d0:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
900160d4:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
900160d8:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
900160dc:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
900160e0:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
900160e4:	f1bc 0f00 	cmp.w	ip, #0
900160e8:	d147      	bne.n	9001617a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900160ea:	eb03 0c07 	add.w	ip, r3, r7
900160ee:	1ad7      	subs	r7, r2, r3
900160f0:	f1b9 0f00 	cmp.w	r9, #0
900160f4:	d009      	beq.n	9001610a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900160f6:	9029      	str	r0, [sp, #164]	@ 0xa4
900160f8:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900160fc:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90016100:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90016104:	912d      	str	r1, [sp, #180]	@ 0xb4
90016106:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
9001610a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001610c:	f04f 0800 	mov.w	r8, #0
90016110:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90016114:	9111      	str	r1, [sp, #68]	@ 0x44
90016116:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001611a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001611e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90016122:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90016126:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001612a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001612e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90016132:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90016136:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001613a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001613e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90016142:	f1be 0f00 	cmp.w	lr, #0
90016146:	d031      	beq.n	900161ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90016148:	9e11      	ldr	r6, [sp, #68]	@ 0x44
9001614a:	4450      	add	r0, sl
9001614c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016150:	4431      	add	r1, r6
90016152:	ee37 7a04 	vadd.f32	s14, s14, s8
90016156:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001615a:	4549      	cmp	r1, r9
9001615c:	db08      	blt.n	90016170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001615e:	ee77 7a85 	vadd.f32	s15, s15, s10
90016162:	3001      	adds	r0, #1
90016164:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016168:	eba1 0109 	sub.w	r1, r1, r9
9001616c:	ee37 7a06 	vadd.f32	s14, s14, s12
90016170:	f10e 3eff 	add.w	lr, lr, #4294967295
90016174:	f04f 0801 	mov.w	r8, #1
90016178:	e7e3      	b.n	90016142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9001617a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
9001617c:	4450      	add	r0, sl
9001617e:	ee37 7a24 	vadd.f32	s14, s14, s9
90016182:	4431      	add	r1, r6
90016184:	ee77 7a84 	vadd.f32	s15, s15, s8
90016188:	ee76 6aa3 	vadd.f32	s13, s13, s7
9001618c:	4541      	cmp	r1, r8
9001618e:	db08      	blt.n	900161a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90016190:	ee76 6a85 	vadd.f32	s13, s13, s10
90016194:	3001      	adds	r0, #1
90016196:	ee37 7a25 	vadd.f32	s14, s14, s11
9001619a:	eba1 0108 	sub.w	r1, r1, r8
9001619e:	ee77 7a86 	vadd.f32	s15, s15, s12
900161a2:	f10c 3cff 	add.w	ip, ip, #4294967295
900161a6:	f04f 0901 	mov.w	r9, #1
900161aa:	e79b      	b.n	900160e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
900161ac:	449c      	add	ip, r3
900161ae:	1aff      	subs	r7, r7, r3
900161b0:	f1b8 0f00 	cmp.w	r8, #0
900161b4:	d009      	beq.n	900161ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900161b6:	9019      	str	r0, [sp, #100]	@ 0x64
900161b8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900161bc:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900161c0:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900161c4:	911d      	str	r1, [sp, #116]	@ 0x74
900161c6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900161ca:	1ad2      	subs	r2, r2, r3
900161cc:	e68b      	b.n	90015ee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900161ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900161d0:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
900161d2:	2b00      	cmp	r3, #0
900161d4:	f000 80d1 	beq.w	9001637a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900161d8:	ad19      	add	r5, sp, #100	@ 0x64
900161da:	ac39      	add	r4, sp, #228	@ 0xe4
900161dc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900161de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900161e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900161e6:	930c      	str	r3, [sp, #48]	@ 0x30
900161e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900161ea:	6963      	ldr	r3, [r4, #20]
900161ec:	440b      	add	r3, r1
900161ee:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900161f2:	4408      	add	r0, r1
900161f4:	b200      	sxth	r0, r0
900161f6:	4283      	cmp	r3, r0
900161f8:	900d      	str	r0, [sp, #52]	@ 0x34
900161fa:	f280 80c1 	bge.w	90016380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900161fe:	428b      	cmp	r3, r1
90016200:	da08      	bge.n	90016214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016202:	2a00      	cmp	r2, #0
90016204:	dd06      	ble.n	90016214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016206:	1acb      	subs	r3, r1, r3
90016208:	429a      	cmp	r2, r3
9001620a:	f2c0 80bb 	blt.w	90016384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
9001620e:	2b00      	cmp	r3, #0
90016210:	f300 80b9 	bgt.w	90016386 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90016214:	6967      	ldr	r7, [r4, #20]
90016216:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
9001621a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001621c:	443b      	add	r3, r7
9001621e:	461f      	mov	r7, r3
90016220:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016222:	1bdf      	subs	r7, r3, r7
90016224:	4297      	cmp	r7, r2
90016226:	bfa8      	it	ge
90016228:	4617      	movge	r7, r2
9001622a:	2f00      	cmp	r7, #0
9001622c:	f340 813c 	ble.w	900164a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90016230:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016232:	6829      	ldr	r1, [r5, #0]
90016234:	f9b3 2000 	ldrsh.w	r2, [r3]
90016238:	f9bb 3000 	ldrsh.w	r3, [fp]
9001623c:	4411      	add	r1, r2
9001623e:	6820      	ldr	r0, [r4, #0]
90016240:	4299      	cmp	r1, r3
90016242:	dd1a      	ble.n	9001627a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016244:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016248:	4402      	add	r2, r0
9001624a:	440b      	add	r3, r1
9001624c:	b21b      	sxth	r3, r3
9001624e:	429a      	cmp	r2, r3
90016250:	dc13      	bgt.n	9001627a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016252:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016254:	a912      	add	r1, sp, #72	@ 0x48
90016256:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016258:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001625a:	681b      	ldr	r3, [r3, #0]
9001625c:	9206      	str	r2, [sp, #24]
9001625e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90016260:	9500      	str	r5, [sp, #0]
90016262:	9205      	str	r2, [sp, #20]
90016264:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90016266:	e9cd b203 	strd	fp, r2, [sp, #12]
9001626a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
9001626c:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016270:	aa49      	add	r2, sp, #292	@ 0x124
90016272:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90016276:	4623      	mov	r3, r4
90016278:	47c8      	blx	r9
9001627a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001627e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90016282:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90016286:	ee37 7a27 	vadd.f32	s14, s14, s15
9001628a:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001628e:	68a1      	ldr	r1, [r4, #8]
90016290:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016294:	ed94 6a08 	vldr	s12, [r4, #32]
90016298:	edd4 6a07 	vldr	s13, [r4, #28]
9001629c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900162a0:	ee76 6a86 	vadd.f32	s13, s13, s12
900162a4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900162a8:	e9d4 2300 	ldrd	r2, r3, [r4]
900162ac:	edc4 6a07 	vstr	s13, [r4, #28]
900162b0:	441a      	add	r2, r3
900162b2:	6963      	ldr	r3, [r4, #20]
900162b4:	3301      	adds	r3, #1
900162b6:	6022      	str	r2, [r4, #0]
900162b8:	6163      	str	r3, [r4, #20]
900162ba:	69a3      	ldr	r3, [r4, #24]
900162bc:	3b01      	subs	r3, #1
900162be:	61a3      	str	r3, [r4, #24]
900162c0:	6923      	ldr	r3, [r4, #16]
900162c2:	440b      	add	r3, r1
900162c4:	68e1      	ldr	r1, [r4, #12]
900162c6:	428b      	cmp	r3, r1
900162c8:	6123      	str	r3, [r4, #16]
900162ca:	db15      	blt.n	900162f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900162cc:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900162d0:	3201      	adds	r2, #1
900162d2:	1a5b      	subs	r3, r3, r1
900162d4:	ee76 6a26 	vadd.f32	s13, s12, s13
900162d8:	6022      	str	r2, [r4, #0]
900162da:	6123      	str	r3, [r4, #16]
900162dc:	edc4 6a07 	vstr	s13, [r4, #28]
900162e0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900162e4:	ee36 7a87 	vadd.f32	s14, s13, s14
900162e8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900162ec:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900162f0:	ee77 7a27 	vadd.f32	s15, s14, s15
900162f4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900162f8:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900162fc:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90016300:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90016304:	ee37 7a27 	vadd.f32	s14, s14, s15
90016308:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
9001630c:	68a9      	ldr	r1, [r5, #8]
9001630e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016312:	ed95 6a08 	vldr	s12, [r5, #32]
90016316:	edd5 6a07 	vldr	s13, [r5, #28]
9001631a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001631e:	ee76 6a86 	vadd.f32	s13, s13, s12
90016322:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016326:	e9d5 2300 	ldrd	r2, r3, [r5]
9001632a:	edc5 6a07 	vstr	s13, [r5, #28]
9001632e:	441a      	add	r2, r3
90016330:	696b      	ldr	r3, [r5, #20]
90016332:	3301      	adds	r3, #1
90016334:	602a      	str	r2, [r5, #0]
90016336:	616b      	str	r3, [r5, #20]
90016338:	69ab      	ldr	r3, [r5, #24]
9001633a:	3b01      	subs	r3, #1
9001633c:	61ab      	str	r3, [r5, #24]
9001633e:	692b      	ldr	r3, [r5, #16]
90016340:	440b      	add	r3, r1
90016342:	68e9      	ldr	r1, [r5, #12]
90016344:	428b      	cmp	r3, r1
90016346:	612b      	str	r3, [r5, #16]
90016348:	db15      	blt.n	90016376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9001634a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001634e:	3201      	adds	r2, #1
90016350:	1a5b      	subs	r3, r3, r1
90016352:	ee76 6a26 	vadd.f32	s13, s12, s13
90016356:	602a      	str	r2, [r5, #0]
90016358:	612b      	str	r3, [r5, #16]
9001635a:	edc5 6a07 	vstr	s13, [r5, #28]
9001635e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90016362:	ee36 7a87 	vadd.f32	s14, s13, s14
90016366:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001636a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001636e:	ee77 7a27 	vadd.f32	s15, s14, s15
90016372:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016376:	3f01      	subs	r7, #1
90016378:	e757      	b.n	9001622a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9001637a:	ad39      	add	r5, sp, #228	@ 0xe4
9001637c:	ac19      	add	r4, sp, #100	@ 0x64
9001637e:	e72d      	b.n	900161dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90016380:	4613      	mov	r3, r2
90016382:	e744      	b.n	9001620e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90016384:	4613      	mov	r3, r2
90016386:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90016388:	469e      	mov	lr, r3
9001638a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001638e:	461f      	mov	r7, r3
90016390:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90016394:	f04f 0900 	mov.w	r9, #0
90016398:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
9001639c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
900163a0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
900163a4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
900163a8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
900163ac:	993d      	ldr	r1, [sp, #244]	@ 0xf4
900163ae:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
900163b2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900163b6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900163ba:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900163be:	960e      	str	r6, [sp, #56]	@ 0x38
900163c0:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900163c4:	2f00      	cmp	r7, #0
900163c6:	d146      	bne.n	90016456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900163c8:	449c      	add	ip, r3
900163ca:	1ad7      	subs	r7, r2, r3
900163cc:	f1b9 0f00 	cmp.w	r9, #0
900163d0:	d009      	beq.n	900163e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900163d2:	9039      	str	r0, [sp, #228]	@ 0xe4
900163d4:	913d      	str	r1, [sp, #244]	@ 0xf4
900163d6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900163da:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900163de:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900163e2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900163e6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900163e8:	f04f 0800 	mov.w	r8, #0
900163ec:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900163f0:	910e      	str	r1, [sp, #56]	@ 0x38
900163f2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900163f6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900163fa:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900163fe:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90016402:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90016406:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001640a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
9001640e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90016412:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90016416:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001641a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001641e:	f1be 0f00 	cmp.w	lr, #0
90016422:	d030      	beq.n	90016486 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90016424:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90016426:	4450      	add	r0, sl
90016428:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001642c:	4431      	add	r1, r6
9001642e:	ee37 7a04 	vadd.f32	s14, s14, s8
90016432:	ee77 7aa3 	vadd.f32	s15, s15, s7
90016436:	4549      	cmp	r1, r9
90016438:	db08      	blt.n	9001644c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9001643a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001643e:	3001      	adds	r0, #1
90016440:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016444:	eba1 0109 	sub.w	r1, r1, r9
90016448:	ee37 7a06 	vadd.f32	s14, s14, s12
9001644c:	f10e 3eff 	add.w	lr, lr, #4294967295
90016450:	f04f 0801 	mov.w	r8, #1
90016454:	e7e3      	b.n	9001641e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90016456:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90016458:	4450      	add	r0, sl
9001645a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001645e:	4431      	add	r1, r6
90016460:	ee77 7a84 	vadd.f32	s15, s15, s8
90016464:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016468:	4541      	cmp	r1, r8
9001646a:	db08      	blt.n	9001647e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
9001646c:	ee76 6a85 	vadd.f32	s13, s13, s10
90016470:	3001      	adds	r0, #1
90016472:	ee37 7a25 	vadd.f32	s14, s14, s11
90016476:	eba1 0108 	sub.w	r1, r1, r8
9001647a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001647e:	3f01      	subs	r7, #1
90016480:	f04f 0901 	mov.w	r9, #1
90016484:	e79e      	b.n	900163c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90016486:	449c      	add	ip, r3
90016488:	1aff      	subs	r7, r7, r3
9001648a:	f1b8 0f00 	cmp.w	r8, #0
9001648e:	d009      	beq.n	900164a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90016490:	9019      	str	r0, [sp, #100]	@ 0x64
90016492:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90016496:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
9001649a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001649e:	911d      	str	r1, [sp, #116]	@ 0x74
900164a0:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900164a4:	1ad2      	subs	r2, r2, r3
900164a6:	e6b5      	b.n	90016214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900164a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900164aa:	681b      	ldr	r3, [r3, #0]
900164ac:	b923      	cbnz	r3, 900164b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900164ae:	4b04      	ldr	r3, [pc, #16]	@ (900164c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900164b0:	6818      	ldr	r0, [r3, #0]
900164b2:	6803      	ldr	r3, [r0, #0]
900164b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900164b6:	4798      	blx	r3
900164b8:	b05b      	add	sp, #364	@ 0x16c
900164ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900164be:	bf00      	nop
900164c0:	24021d64 	.word	0x24021d64

900164c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900164c4:	b570      	push	{r4, r5, r6, lr}
900164c6:	4604      	mov	r4, r0
900164c8:	2500      	movs	r5, #0
900164ca:	9805      	ldr	r0, [sp, #20]
900164cc:	f89d 601c 	ldrb.w	r6, [sp, #28]
900164d0:	6061      	str	r1, [r4, #4]
900164d2:	8263      	strh	r3, [r4, #18]
900164d4:	f89d 1010 	ldrb.w	r1, [sp, #16]
900164d8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900164dc:	8025      	strh	r5, [r4, #0]
900164de:	7221      	strb	r1, [r4, #8]
900164e0:	7266      	strb	r6, [r4, #9]
900164e2:	60e0      	str	r0, [r4, #12]
900164e4:	8222      	strh	r2, [r4, #16]
900164e6:	82a3      	strh	r3, [r4, #20]
900164e8:	82e5      	strh	r5, [r4, #22]
900164ea:	8325      	strh	r5, [r4, #24]
900164ec:	8365      	strh	r5, [r4, #26]
900164ee:	83a5      	strh	r5, [r4, #28]
900164f0:	83e5      	strh	r5, [r4, #30]
900164f2:	8425      	strh	r5, [r4, #32]
900164f4:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900164f8:	b32e      	cbz	r6, 90016546 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900164fa:	6803      	ldr	r3, [r0, #0]
900164fc:	695b      	ldr	r3, [r3, #20]
900164fe:	4798      	blx	r3
90016500:	4606      	mov	r6, r0
90016502:	b300      	cbz	r0, 90016546 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016504:	68e0      	ldr	r0, [r4, #12]
90016506:	4631      	mov	r1, r6
90016508:	6803      	ldr	r3, [r0, #0]
9001650a:	68db      	ldr	r3, [r3, #12]
9001650c:	4798      	blx	r3
9001650e:	4605      	mov	r5, r0
90016510:	b1c8      	cbz	r0, 90016546 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016512:	7b43      	ldrb	r3, [r0, #13]
90016514:	7a82      	ldrb	r2, [r0, #10]
90016516:	005b      	lsls	r3, r3, #1
90016518:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001651c:	4313      	orrs	r3, r2
9001651e:	8423      	strh	r3, [r4, #32]
90016520:	7a63      	ldrb	r3, [r4, #9]
90016522:	2b06      	cmp	r3, #6
90016524:	d10f      	bne.n	90016546 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016526:	68e0      	ldr	r0, [r4, #12]
90016528:	462a      	mov	r2, r5
9001652a:	4631      	mov	r1, r6
9001652c:	6803      	ldr	r3, [r0, #0]
9001652e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016530:	4798      	blx	r3
90016532:	7b6b      	ldrb	r3, [r5, #13]
90016534:	005b      	lsls	r3, r3, #1
90016536:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001653a:	7aab      	ldrb	r3, [r5, #10]
9001653c:	4313      	orrs	r3, r2
9001653e:	4418      	add	r0, r3
90016540:	8c23      	ldrh	r3, [r4, #32]
90016542:	4418      	add	r0, r3
90016544:	8420      	strh	r0, [r4, #32]
90016546:	4620      	mov	r0, r4
90016548:	bd70      	pop	{r4, r5, r6, pc}

9001654a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001654a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001654e:	2400      	movs	r4, #0
90016550:	b085      	sub	sp, #20
90016552:	4681      	mov	r9, r0
90016554:	4688      	mov	r8, r1
90016556:	4692      	mov	sl, r2
90016558:	469b      	mov	fp, r3
9001655a:	4627      	mov	r7, r4
9001655c:	4625      	mov	r5, r4
9001655e:	4626      	mov	r6, r4
90016560:	4554      	cmp	r4, sl
90016562:	da2a      	bge.n	900165ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90016564:	2300      	movs	r3, #0
90016566:	9303      	str	r3, [sp, #12]
90016568:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001656c:	429d      	cmp	r5, r3
9001656e:	d004      	beq.n	9001657a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90016570:	f242 030b 	movw	r3, #8203	@ 0x200b
90016574:	429d      	cmp	r5, r3
90016576:	bf18      	it	ne
90016578:	462f      	movne	r7, r5
9001657a:	ab03      	add	r3, sp, #12
9001657c:	4642      	mov	r2, r8
9001657e:	4659      	mov	r1, fp
90016580:	4648      	mov	r0, r9
90016582:	f003 fd05 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016586:	4605      	mov	r5, r0
90016588:	b1b8      	cbz	r0, 900165ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001658a:	280a      	cmp	r0, #10
9001658c:	d015      	beq.n	900165ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001658e:	9a03      	ldr	r2, [sp, #12]
90016590:	b18a      	cbz	r2, 900165b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90016592:	7b50      	ldrb	r0, [r2, #13]
90016594:	4639      	mov	r1, r7
90016596:	7a93      	ldrb	r3, [r2, #10]
90016598:	0040      	lsls	r0, r0, #1
9001659a:	8895      	ldrh	r5, [r2, #4]
9001659c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900165a0:	4303      	orrs	r3, r0
900165a2:	4640      	mov	r0, r8
900165a4:	9301      	str	r3, [sp, #4]
900165a6:	f8d8 3000 	ldr.w	r3, [r8]
900165aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900165ac:	4798      	blx	r3
900165ae:	9b01      	ldr	r3, [sp, #4]
900165b0:	4418      	add	r0, r3
900165b2:	4406      	add	r6, r0
900165b4:	b2b6      	uxth	r6, r6
900165b6:	3401      	adds	r4, #1
900165b8:	e7d2      	b.n	90016560 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900165ba:	4630      	mov	r0, r6
900165bc:	b005      	add	sp, #20
900165be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900165c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900165c2:	2a02      	cmp	r2, #2
900165c4:	b530      	push	{r4, r5, lr}
900165c6:	d011      	beq.n	900165ec <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900165c8:	2a03      	cmp	r2, #3
900165ca:	d01c      	beq.n	90016606 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900165cc:	2a01      	cmp	r2, #1
900165ce:	d10c      	bne.n	900165ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900165d0:	888b      	ldrh	r3, [r1, #4]
900165d2:	8801      	ldrh	r1, [r0, #0]
900165d4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900165d8:	1a5b      	subs	r3, r3, r1
900165da:	8844      	ldrh	r4, [r0, #2]
900165dc:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900165e0:	1a9b      	subs	r3, r3, r2
900165e2:	8004      	strh	r4, [r0, #0]
900165e4:	8081      	strh	r1, [r0, #4]
900165e6:	8043      	strh	r3, [r0, #2]
900165e8:	80c2      	strh	r2, [r0, #6]
900165ea:	bd30      	pop	{r4, r5, pc}
900165ec:	88cb      	ldrh	r3, [r1, #6]
900165ee:	8842      	ldrh	r2, [r0, #2]
900165f0:	1a9b      	subs	r3, r3, r2
900165f2:	88c2      	ldrh	r2, [r0, #6]
900165f4:	1a9b      	subs	r3, r3, r2
900165f6:	888a      	ldrh	r2, [r1, #4]
900165f8:	8801      	ldrh	r1, [r0, #0]
900165fa:	8043      	strh	r3, [r0, #2]
900165fc:	1a52      	subs	r2, r2, r1
900165fe:	8881      	ldrh	r1, [r0, #4]
90016600:	1a52      	subs	r2, r2, r1
90016602:	8002      	strh	r2, [r0, #0]
90016604:	e7f1      	b.n	900165ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90016606:	88cb      	ldrh	r3, [r1, #6]
90016608:	8841      	ldrh	r1, [r0, #2]
9001660a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001660e:	1a5b      	subs	r3, r3, r1
90016610:	f9b0 5000 	ldrsh.w	r5, [r0]
90016614:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90016618:	1a9b      	subs	r3, r3, r2
9001661a:	8045      	strh	r5, [r0, #2]
9001661c:	8082      	strh	r2, [r0, #4]
9001661e:	8003      	strh	r3, [r0, #0]
90016620:	80c4      	strh	r4, [r0, #6]
90016622:	e7e2      	b.n	900165ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90016624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90016624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016628:	b09f      	sub	sp, #124	@ 0x7c
9001662a:	920f      	str	r2, [sp, #60]	@ 0x3c
9001662c:	9312      	str	r3, [sp, #72]	@ 0x48
9001662e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016630:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90016632:	8812      	ldrh	r2, [r2, #0]
90016634:	889b      	ldrh	r3, [r3, #4]
90016636:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90016638:	4413      	add	r3, r2
9001663a:	900e      	str	r0, [sp, #56]	@ 0x38
9001663c:	6828      	ldr	r0, [r5, #0]
9001663e:	b21b      	sxth	r3, r3
90016640:	9117      	str	r1, [sp, #92]	@ 0x5c
90016642:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90016646:	9311      	str	r3, [sp, #68]	@ 0x44
90016648:	6803      	ldr	r3, [r0, #0]
9001664a:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
9001664e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90016650:	4798      	blx	r3
90016652:	682b      	ldr	r3, [r5, #0]
90016654:	9013      	str	r0, [sp, #76]	@ 0x4c
90016656:	7b1a      	ldrb	r2, [r3, #12]
90016658:	7adb      	ldrb	r3, [r3, #11]
9001665a:	9215      	str	r2, [sp, #84]	@ 0x54
9001665c:	9316      	str	r3, [sp, #88]	@ 0x58
9001665e:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90016662:	2c00      	cmp	r4, #0
90016664:	d067      	beq.n	90016736 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90016666:	7c2b      	ldrb	r3, [r5, #16]
90016668:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
9001666a:	2b06      	cmp	r3, #6
9001666c:	bf14      	ite	ne
9001666e:	2301      	movne	r3, #1
90016670:	2302      	moveq	r3, #2
90016672:	4413      	add	r3, r2
90016674:	f04f 0900 	mov.w	r9, #0
90016678:	9310      	str	r3, [sp, #64]	@ 0x40
9001667a:	464c      	mov	r4, r9
9001667c:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90016680:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90016684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016686:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016688:	4293      	cmp	r3, r2
9001668a:	f280 808b 	bge.w	900167a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001668e:	2300      	movs	r3, #0
90016690:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90016694:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90016698:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001669c:	429c      	cmp	r4, r3
9001669e:	d006      	beq.n	900166ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
900166a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900166a2:	f242 020b 	movw	r2, #8203	@ 0x200b
900166a6:	4294      	cmp	r4, r2
900166a8:	bf18      	it	ne
900166aa:	4623      	movne	r3, r4
900166ac:	930c      	str	r3, [sp, #48]	@ 0x30
900166ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900166b0:	992d      	ldr	r1, [sp, #180]	@ 0xb4
900166b2:	682a      	ldr	r2, [r5, #0]
900166b4:	428b      	cmp	r3, r1
900166b6:	db40      	blt.n	9001673a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900166b8:	6813      	ldr	r3, [r2, #0]
900166ba:	4610      	mov	r0, r2
900166bc:	695b      	ldr	r3, [r3, #20]
900166be:	4798      	blx	r3
900166c0:	4604      	mov	r4, r0
900166c2:	6828      	ldr	r0, [r5, #0]
900166c4:	aa1d      	add	r2, sp, #116	@ 0x74
900166c6:	4621      	mov	r1, r4
900166c8:	6803      	ldr	r3, [r0, #0]
900166ca:	689f      	ldr	r7, [r3, #8]
900166cc:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900166d0:	47b8      	blx	r7
900166d2:	901c      	str	r0, [sp, #112]	@ 0x70
900166d4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900166d8:	429c      	cmp	r4, r3
900166da:	f000 80eb 	beq.w	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900166de:	f242 030b 	movw	r3, #8203	@ 0x200b
900166e2:	429c      	cmp	r4, r3
900166e4:	f000 80e6 	beq.w	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900166e8:	2c00      	cmp	r4, #0
900166ea:	f000 810d 	beq.w	90016908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900166ee:	2c0a      	cmp	r4, #10
900166f0:	d05e      	beq.n	900167b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900166f2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900166f4:	b36a      	cbz	r2, 90016752 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900166f6:	8894      	ldrh	r4, [r2, #4]
900166f8:	f1bb 0f00 	cmp.w	fp, #0
900166fc:	d03a      	beq.n	90016774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900166fe:	f892 900d 	ldrb.w	r9, [r2, #13]
90016702:	f1bb 0f01 	cmp.w	fp, #1
90016706:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001670a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
9001670e:	f892 900a 	ldrb.w	r9, [r2, #10]
90016712:	ea49 0903 	orr.w	r9, r9, r3
90016716:	d133      	bne.n	90016780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90016718:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001671a:	eba6 0609 	sub.w	r6, r6, r9
9001671e:	2b00      	cmp	r3, #0
90016720:	d14d      	bne.n	900167be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90016722:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90016724:	eb09 0306 	add.w	r3, r9, r6
90016728:	4413      	add	r3, r2
9001672a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9001672c:	f9b2 2000 	ldrsh.w	r2, [r2]
90016730:	4293      	cmp	r3, r2
90016732:	da4e      	bge.n	900167d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90016734:	e036      	b.n	900167a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90016736:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90016738:	e79c      	b.n	90016674 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
9001673a:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001673e:	4659      	mov	r1, fp
90016740:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90016742:	9301      	str	r3, [sp, #4]
90016744:	ab1d      	add	r3, sp, #116	@ 0x74
90016746:	9300      	str	r3, [sp, #0]
90016748:	ab1c      	add	r3, sp, #112	@ 0x70
9001674a:	f003 fc6a 	bl	9001a022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001674e:	4604      	mov	r4, r0
90016750:	e7c0      	b.n	900166d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90016752:	6828      	ldr	r0, [r5, #0]
90016754:	6803      	ldr	r3, [r0, #0]
90016756:	691b      	ldr	r3, [r3, #16]
90016758:	4798      	blx	r3
9001675a:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001675e:	4298      	cmp	r0, r3
90016760:	f000 80a8 	beq.w	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016764:	f242 030b 	movw	r3, #8203	@ 0x200b
90016768:	4298      	cmp	r0, r3
9001676a:	f000 80a3 	beq.w	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001676e:	f1bb 0f00 	cmp.w	fp, #0
90016772:	d100      	bne.n	90016776 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90016774:	444e      	add	r6, r9
90016776:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016778:	2a00      	cmp	r2, #0
9001677a:	d1c0      	bne.n	900166fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
9001677c:	4691      	mov	r9, r2
9001677e:	e099      	b.n	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016780:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016782:	2b00      	cmp	r3, #0
90016784:	f000 80c2 	beq.w	9001690c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90016788:	f1bb 0f00 	cmp.w	fp, #0
9001678c:	d117      	bne.n	900167be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001678e:	6828      	ldr	r0, [r5, #0]
90016790:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016792:	6803      	ldr	r3, [r0, #0]
90016794:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016796:	4798      	blx	r3
90016798:	4406      	add	r6, r0
9001679a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9001679c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001679e:	1af3      	subs	r3, r6, r3
900167a0:	4293      	cmp	r3, r2
900167a2:	dd16      	ble.n	900167d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900167a4:	2c00      	cmp	r4, #0
900167a6:	f000 80af 	beq.w	90016908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900167aa:	2c0a      	cmp	r4, #10
900167ac:	f040 809d 	bne.w	900168ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900167b0:	240a      	movs	r4, #10
900167b2:	fab4 f084 	clz	r0, r4
900167b6:	0940      	lsrs	r0, r0, #5
900167b8:	b01f      	add	sp, #124	@ 0x7c
900167ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167be:	6828      	ldr	r0, [r5, #0]
900167c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900167c2:	6803      	ldr	r3, [r0, #0]
900167c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900167c6:	4798      	blx	r3
900167c8:	f1bb 0f01 	cmp.w	fp, #1
900167cc:	eba6 0600 	sub.w	r6, r6, r0
900167d0:	d0a7      	beq.n	90016722 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900167d2:	981c      	ldr	r0, [sp, #112]	@ 0x70
900167d4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900167d6:	f990 1009 	ldrsb.w	r1, [r0, #9]
900167da:	f9b3 8000 	ldrsh.w	r8, [r3]
900167de:	7b43      	ldrb	r3, [r0, #13]
900167e0:	4431      	add	r1, r6
900167e2:	015b      	lsls	r3, r3, #5
900167e4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900167e8:	7983      	ldrb	r3, [r0, #6]
900167ea:	4313      	orrs	r3, r2
900167ec:	440b      	add	r3, r1
900167ee:	4543      	cmp	r3, r8
900167f0:	db60      	blt.n	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900167f2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900167f4:	4299      	cmp	r1, r3
900167f6:	da5d      	bge.n	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900167f8:	6828      	ldr	r0, [r5, #0]
900167fa:	45b0      	cmp	r8, r6
900167fc:	6803      	ldr	r3, [r0, #0]
900167fe:	bfcc      	ite	gt
90016800:	eba8 0806 	subgt.w	r8, r8, r6
90016804:	f04f 0800 	movle.w	r8, #0
90016808:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001680a:	bfc8      	it	gt
9001680c:	fa1f f888 	uxthgt.w	r8, r8
90016810:	4798      	blx	r3
90016812:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016814:	7b53      	ldrb	r3, [r2, #13]
90016816:	00d9      	lsls	r1, r3, #3
90016818:	f401 7780 	and.w	r7, r1, #256	@ 0x100
9001681c:	7a11      	ldrb	r1, [r2, #8]
9001681e:	4339      	orrs	r1, r7
90016820:	065f      	lsls	r7, r3, #25
90016822:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90016824:	bf48      	it	mi
90016826:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
9001682a:	4407      	add	r7, r0
9001682c:	bf48      	it	mi
9001682e:	b209      	sxthmi	r1, r1
90016830:	1a7f      	subs	r7, r7, r1
90016832:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90016834:	b2bf      	uxth	r7, r7
90016836:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9001683a:	fa0f fa87 	sxth.w	sl, r7
9001683e:	4551      	cmp	r1, sl
90016840:	dd3c      	ble.n	900168bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90016842:	011b      	lsls	r3, r3, #4
90016844:	79d0      	ldrb	r0, [r2, #7]
90016846:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001684a:	4303      	orrs	r3, r0
9001684c:	449a      	add	sl, r3
9001684e:	4551      	cmp	r1, sl
90016850:	dc30      	bgt.n	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016852:	1bcf      	subs	r7, r1, r7
90016854:	468a      	mov	sl, r1
90016856:	b23f      	sxth	r7, r7
90016858:	9219      	str	r2, [sp, #100]	@ 0x64
9001685a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001685c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9001685e:	6828      	ldr	r0, [r5, #0]
90016860:	2a00      	cmp	r2, #0
90016862:	d12d      	bne.n	900168c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90016864:	9318      	str	r3, [sp, #96]	@ 0x60
90016866:	b2bf      	uxth	r7, r7
90016868:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001686a:	6819      	ldr	r1, [r3, #0]
9001686c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
9001686e:	6801      	ldr	r1, [r0, #0]
90016870:	9314      	str	r3, [sp, #80]	@ 0x50
90016872:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90016874:	4788      	blx	r1
90016876:	79a9      	ldrb	r1, [r5, #6]
90016878:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001687a:	910b      	str	r1, [sp, #44]	@ 0x2c
9001687c:	7ba9      	ldrb	r1, [r5, #14]
9001687e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90016880:	910a      	str	r1, [sp, #40]	@ 0x28
90016882:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90016886:	9109      	str	r1, [sp, #36]	@ 0x24
90016888:	68a9      	ldr	r1, [r5, #8]
9001688a:	9306      	str	r3, [sp, #24]
9001688c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001688e:	9205      	str	r2, [sp, #20]
90016890:	9304      	str	r3, [sp, #16]
90016892:	f8cd a004 	str.w	sl, [sp, #4]
90016896:	e9cd 8702 	strd	r8, r7, [sp, #8]
9001689a:	44b0      	add	r8, r6
9001689c:	9f14      	ldr	r7, [sp, #80]	@ 0x50
9001689e:	fa0f f388 	sxth.w	r3, r8
900168a2:	9300      	str	r3, [sp, #0]
900168a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900168a6:	e9cd 0107 	strd	r0, r1, [sp, #28]
900168aa:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900168ac:	681a      	ldr	r2, [r3, #0]
900168ae:	980e      	ldr	r0, [sp, #56]	@ 0x38
900168b0:	685b      	ldr	r3, [r3, #4]
900168b2:	47b8      	blx	r7
900168b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900168b6:	3301      	adds	r3, #1
900168b8:	930d      	str	r3, [sp, #52]	@ 0x34
900168ba:	e6e3      	b.n	90016684 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900168bc:	2700      	movs	r7, #0
900168be:	e7cb      	b.n	90016858 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900168c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900168c2:	f8d2 c008 	ldr.w	ip, [r2, #8]
900168c6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900168c8:	f8dc 1000 	ldr.w	r1, [ip]
900168cc:	e9cd 6204 	strd	r6, r2, [sp, #16]
900168d0:	79aa      	ldrb	r2, [r5, #6]
900168d2:	9203      	str	r2, [sp, #12]
900168d4:	7baa      	ldrb	r2, [r5, #14]
900168d6:	9202      	str	r2, [sp, #8]
900168d8:	68aa      	ldr	r2, [r5, #8]
900168da:	e9cd 0200 	strd	r0, r2, [sp]
900168de:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900168e0:	4660      	mov	r0, ip
900168e2:	688f      	ldr	r7, [r1, #8]
900168e4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900168e6:	47b8      	blx	r7
900168e8:	e7e4      	b.n	900168b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900168ea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900168ec:	3501      	adds	r5, #1
900168ee:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900168f0:	429d      	cmp	r5, r3
900168f2:	f6bf af5e 	bge.w	900167b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900168f6:	4659      	mov	r1, fp
900168f8:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900168fa:	f7ef ff0b 	bl	90006714 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900168fe:	4604      	mov	r4, r0
90016900:	b110      	cbz	r0, 90016908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90016902:	280a      	cmp	r0, #10
90016904:	d1f2      	bne.n	900168ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90016906:	e753      	b.n	900167b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90016908:	2400      	movs	r4, #0
9001690a:	e752      	b.n	900167b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001690c:	f1bb 0f00 	cmp.w	fp, #0
90016910:	f43f af43 	beq.w	9001679a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90016914:	e75d      	b.n	900167d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90016916 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90016916:	b530      	push	{r4, r5, lr}
90016918:	8ac4      	ldrh	r4, [r0, #22]
9001691a:	8b45      	ldrh	r5, [r0, #26]
9001691c:	8343      	strh	r3, [r0, #26]
9001691e:	442c      	add	r4, r5
90016920:	1ae4      	subs	r4, r4, r3
90016922:	8b83      	ldrh	r3, [r0, #28]
90016924:	82c4      	strh	r4, [r0, #22]
90016926:	8b04      	ldrh	r4, [r0, #24]
90016928:	4422      	add	r2, r4
9001692a:	440c      	add	r4, r1
9001692c:	1a59      	subs	r1, r3, r1
9001692e:	83c2      	strh	r2, [r0, #30]
90016930:	8304      	strh	r4, [r0, #24]
90016932:	8381      	strh	r1, [r0, #28]
90016934:	bd30      	pop	{r4, r5, pc}

90016936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90016936:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001693a:	4604      	mov	r4, r0
9001693c:	8a47      	ldrh	r7, [r0, #18]
9001693e:	68c0      	ldr	r0, [r0, #12]
90016940:	b085      	sub	sp, #20
90016942:	6803      	ldr	r3, [r0, #0]
90016944:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016946:	4798      	blx	r3
90016948:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
9001694c:	7a63      	ldrb	r3, [r4, #9]
9001694e:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90016952:	3b01      	subs	r3, #1
90016954:	42b7      	cmp	r7, r6
90016956:	bfac      	ite	ge
90016958:	f04f 0900 	movge.w	r9, #0
9001695c:	f04f 0901 	movlt.w	r9, #1
90016960:	2b05      	cmp	r3, #5
90016962:	d804      	bhi.n	9001696e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90016964:	e8df f003 	tbb	[pc, r3]
90016968:	470f0854 	.word	0x470f0854
9001696c:	4c4c      	.short	0x4c4c
9001696e:	2500      	movs	r5, #0
90016970:	46a9      	mov	r9, r5
90016972:	462e      	mov	r6, r5
90016974:	462f      	mov	r7, r5
90016976:	e00e      	b.n	90016996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016978:	42b7      	cmp	r7, r6
9001697a:	f04f 0500 	mov.w	r5, #0
9001697e:	bfb4      	ite	lt
90016980:	2600      	movlt	r6, #0
90016982:	2601      	movge	r6, #1
90016984:	e7f6      	b.n	90016974 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016986:	42b7      	cmp	r7, r6
90016988:	464d      	mov	r5, r9
9001698a:	f04f 0900 	mov.w	r9, #0
9001698e:	bfb4      	ite	lt
90016990:	2600      	movlt	r6, #0
90016992:	2601      	movge	r6, #1
90016994:	464f      	mov	r7, r9
90016996:	f04f 0800 	mov.w	r8, #0
9001699a:	f8a4 8016 	strh.w	r8, [r4, #22]
9001699e:	f8a4 8018 	strh.w	r8, [r4, #24]
900169a2:	f8cd 8004 	str.w	r8, [sp, #4]
900169a6:	2300      	movs	r3, #0
900169a8:	9303      	str	r3, [sp, #12]
900169aa:	8823      	ldrh	r3, [r4, #0]
900169ac:	2b20      	cmp	r3, #32
900169ae:	d033      	beq.n	90016a18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900169b0:	f242 010b 	movw	r1, #8203	@ 0x200b
900169b4:	1a5a      	subs	r2, r3, r1
900169b6:	f1d2 0a00 	rsbs	sl, r2, #0
900169ba:	eb4a 0a02 	adc.w	sl, sl, r2
900169be:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900169c2:	4293      	cmp	r3, r2
900169c4:	d008      	beq.n	900169d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900169c6:	428b      	cmp	r3, r1
900169c8:	9a01      	ldr	r2, [sp, #4]
900169ca:	bf0e      	itee	eq
900169cc:	f04f 0a01 	moveq.w	sl, #1
900169d0:	461a      	movne	r2, r3
900169d2:	f04f 0a00 	movne.w	sl, #0
900169d6:	9201      	str	r2, [sp, #4]
900169d8:	ab03      	add	r3, sp, #12
900169da:	68e2      	ldr	r2, [r4, #12]
900169dc:	7a21      	ldrb	r1, [r4, #8]
900169de:	6860      	ldr	r0, [r4, #4]
900169e0:	f003 fad6 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900169e4:	8020      	strh	r0, [r4, #0]
900169e6:	b9d8      	cbnz	r0, 90016a20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900169e8:	8ba2      	ldrh	r2, [r4, #28]
900169ea:	2300      	movs	r3, #0
900169ec:	4611      	mov	r1, r2
900169ee:	4620      	mov	r0, r4
900169f0:	f7ff ff91 	bl	90016916 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900169f4:	e06e      	b.n	90016ad4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900169f6:	2500      	movs	r5, #0
900169f8:	2701      	movs	r7, #1
900169fa:	46a9      	mov	r9, r5
900169fc:	462e      	mov	r6, r5
900169fe:	e7ca      	b.n	90016996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016a00:	42b7      	cmp	r7, r6
90016a02:	f04f 0500 	mov.w	r5, #0
90016a06:	bfb4      	ite	lt
90016a08:	2700      	movlt	r7, #0
90016a0a:	2701      	movge	r7, #1
90016a0c:	462e      	mov	r6, r5
90016a0e:	e7c2      	b.n	90016996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016a10:	2500      	movs	r5, #0
90016a12:	2601      	movs	r6, #1
90016a14:	46a9      	mov	r9, r5
90016a16:	e7ad      	b.n	90016974 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016a18:	9301      	str	r3, [sp, #4]
90016a1a:	f04f 0a01 	mov.w	sl, #1
90016a1e:	e7db      	b.n	900169d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016a20:	8b63      	ldrh	r3, [r4, #26]
90016a22:	280a      	cmp	r0, #10
90016a24:	f103 0301 	add.w	r3, r3, #1
90016a28:	8363      	strh	r3, [r4, #26]
90016a2a:	d0dd      	beq.n	900169e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90016a2c:	9a03      	ldr	r2, [sp, #12]
90016a2e:	bb62      	cbnz	r2, 90016a8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90016a30:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016a34:	4298      	cmp	r0, r3
90016a36:	d003      	beq.n	90016a40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016a38:	f242 030b 	movw	r3, #8203	@ 0x200b
90016a3c:	4298      	cmp	r0, r3
90016a3e:	d1b2      	bne.n	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016a40:	8823      	ldrh	r3, [r4, #0]
90016a42:	8ba1      	ldrh	r1, [r4, #28]
90016a44:	2b20      	cmp	r3, #32
90016a46:	d003      	beq.n	90016a50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90016a48:	f242 000b 	movw	r0, #8203	@ 0x200b
90016a4c:	4283      	cmp	r3, r0
90016a4e:	d131      	bne.n	90016ab4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90016a50:	f1ba 0f00 	cmp.w	sl, #0
90016a54:	bf0a      	itet	eq
90016a56:	4688      	moveq	r8, r1
90016a58:	4650      	movne	r0, sl
90016a5a:	2001      	moveq	r0, #1
90016a5c:	440a      	add	r2, r1
90016a5e:	8b23      	ldrh	r3, [r4, #24]
90016a60:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90016a64:	b292      	uxth	r2, r2
90016a66:	83a2      	strh	r2, [r4, #28]
90016a68:	4413      	add	r3, r2
90016a6a:	f1b9 0f00 	cmp.w	r9, #0
90016a6e:	d102      	bne.n	90016a76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90016a70:	2d00      	cmp	r5, #0
90016a72:	d042      	beq.n	90016afa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90016a74:	b300      	cbz	r0, 90016ab8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90016a76:	8c21      	ldrh	r1, [r4, #32]
90016a78:	4419      	add	r1, r3
90016a7a:	458c      	cmp	ip, r1
90016a7c:	da37      	bge.n	90016aee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90016a7e:	8ae1      	ldrh	r1, [r4, #22]
90016a80:	2900      	cmp	r1, #0
90016a82:	d034      	beq.n	90016aee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90016a84:	4563      	cmp	r3, ip
90016a86:	dd8e      	ble.n	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016a88:	e01d      	b.n	90016ac6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90016a8a:	8893      	ldrh	r3, [r2, #4]
90016a8c:	9901      	ldr	r1, [sp, #4]
90016a8e:	8023      	strh	r3, [r4, #0]
90016a90:	f892 b00d 	ldrb.w	fp, [r2, #13]
90016a94:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90016a98:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90016a9c:	f892 b00a 	ldrb.w	fp, [r2, #10]
90016aa0:	ea4b 0b00 	orr.w	fp, fp, r0
90016aa4:	68e0      	ldr	r0, [r4, #12]
90016aa6:	6803      	ldr	r3, [r0, #0]
90016aa8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016aaa:	4798      	blx	r3
90016aac:	eb0b 0200 	add.w	r2, fp, r0
90016ab0:	b292      	uxth	r2, r2
90016ab2:	e7c5      	b.n	90016a40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016ab4:	2000      	movs	r0, #0
90016ab6:	e7d1      	b.n	90016a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90016ab8:	4563      	cmp	r3, ip
90016aba:	f77f af74 	ble.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016abe:	8ae3      	ldrh	r3, [r4, #22]
90016ac0:	2b00      	cmp	r3, #0
90016ac2:	f43f af70 	beq.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016ac6:	2301      	movs	r3, #1
90016ac8:	8c22      	ldrh	r2, [r4, #32]
90016aca:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90016ace:	8be3      	ldrh	r3, [r4, #30]
90016ad0:	4413      	add	r3, r2
90016ad2:	83e3      	strh	r3, [r4, #30]
90016ad4:	68e0      	ldr	r0, [r4, #12]
90016ad6:	6803      	ldr	r3, [r0, #0]
90016ad8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016ada:	4798      	blx	r3
90016adc:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90016ae0:	4418      	add	r0, r3
90016ae2:	8a63      	ldrh	r3, [r4, #18]
90016ae4:	1a18      	subs	r0, r3, r0
90016ae6:	8260      	strh	r0, [r4, #18]
90016ae8:	b005      	add	sp, #20
90016aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016aee:	2300      	movs	r3, #0
90016af0:	4611      	mov	r1, r2
90016af2:	4620      	mov	r0, r4
90016af4:	f7ff ff0f 	bl	90016916 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016af8:	e755      	b.n	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016afa:	4563      	cmp	r3, ip
90016afc:	dd14      	ble.n	90016b28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90016afe:	b117      	cbz	r7, 90016b06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90016b00:	2301      	movs	r3, #1
90016b02:	460a      	mov	r2, r1
90016b04:	e772      	b.n	900169ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90016b06:	2e00      	cmp	r6, #0
90016b08:	f43f af4d 	beq.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016b0c:	2800      	cmp	r0, #0
90016b0e:	f47f af4a 	bne.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016b12:	f1ba 0f00 	cmp.w	sl, #0
90016b16:	d002      	beq.n	90016b1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016b18:	2301      	movs	r3, #1
90016b1a:	4642      	mov	r2, r8
90016b1c:	e767      	b.n	900169ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90016b1e:	8ae3      	ldrh	r3, [r4, #22]
90016b20:	2b00      	cmp	r3, #0
90016b22:	f43f af40 	beq.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016b26:	e7d5      	b.n	90016ad4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016b28:	2800      	cmp	r0, #0
90016b2a:	f47f af3c 	bne.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016b2e:	f1ba 0f00 	cmp.w	sl, #0
90016b32:	f43f af38 	beq.w	900169a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016b36:	2301      	movs	r3, #1
90016b38:	4642      	mov	r2, r8
90016b3a:	e7da      	b.n	90016af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90016b3c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90016b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
90016b3e:	4605      	mov	r5, r0
90016b40:	b08f      	sub	sp, #60	@ 0x3c
90016b42:	4617      	mov	r7, r2
90016b44:	461c      	mov	r4, r3
90016b46:	460e      	mov	r6, r1
90016b48:	b1d1      	cbz	r1, 90016b80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90016b4a:	681b      	ldr	r3, [r3, #0]
90016b4c:	4620      	mov	r0, r4
90016b4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016b50:	4798      	blx	r3
90016b52:	4240      	negs	r0, r0
90016b54:	9603      	str	r6, [sp, #12]
90016b56:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90016b5a:	b200      	sxth	r0, r0
90016b5c:	9700      	str	r7, [sp, #0]
90016b5e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90016b62:	4629      	mov	r1, r5
90016b64:	e9cd 4001 	strd	r4, r0, [sp, #4]
90016b68:	2401      	movs	r4, #1
90016b6a:	a805      	add	r0, sp, #20
90016b6c:	f7ff fcaa 	bl	900164c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90016b70:	a805      	add	r0, sp, #20
90016b72:	f7ff fee0 	bl	90016936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016b76:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016b7a:	b163      	cbz	r3, 90016b96 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90016b7c:	3401      	adds	r4, #1
90016b7e:	e7f7      	b.n	90016b70 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90016b80:	2401      	movs	r4, #1
90016b82:	f003 fad1 	bl	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016b86:	280a      	cmp	r0, #10
90016b88:	4628      	mov	r0, r5
90016b8a:	bf08      	it	eq
90016b8c:	3401      	addeq	r4, #1
90016b8e:	f003 facb 	bl	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016b92:	2800      	cmp	r0, #0
90016b94:	d1f7      	bne.n	90016b86 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90016b96:	b2a0      	uxth	r0, r4
90016b98:	b00f      	add	sp, #60	@ 0x3c
90016b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016b9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90016b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016ba0:	b0e3      	sub	sp, #396	@ 0x18c
90016ba2:	461c      	mov	r4, r3
90016ba4:	4683      	mov	fp, r0
90016ba6:	4688      	mov	r8, r1
90016ba8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90016baa:	2b00      	cmp	r3, #0
90016bac:	f000 8112 	beq.w	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016bb0:	6823      	ldr	r3, [r4, #0]
90016bb2:	2b00      	cmp	r3, #0
90016bb4:	f000 810e 	beq.w	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016bb8:	7ba3      	ldrb	r3, [r4, #14]
90016bba:	2b00      	cmp	r3, #0
90016bbc:	f000 810a 	beq.w	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016bc0:	ad0a      	add	r5, sp, #40	@ 0x28
90016bc2:	6810      	ldr	r0, [r2, #0]
90016bc4:	6851      	ldr	r1, [r2, #4]
90016bc6:	462b      	mov	r3, r5
90016bc8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90016bcc:	c303      	stmia	r3!, {r0, r1}
90016bce:	2100      	movs	r1, #0
90016bd0:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016bd4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90016bd8:	4628      	mov	r0, r5
90016bda:	910c      	str	r1, [sp, #48]	@ 0x30
90016bdc:	a90c      	add	r1, sp, #48	@ 0x30
90016bde:	79a2      	ldrb	r2, [r4, #6]
90016be0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016be4:	f7ff fced 	bl	900165c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016be8:	a90c      	add	r1, sp, #48	@ 0x30
90016bea:	79a2      	ldrb	r2, [r4, #6]
90016bec:	4608      	mov	r0, r1
90016bee:	f7ff fce8 	bl	900165c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016bf2:	a817      	add	r0, sp, #92	@ 0x5c
90016bf4:	f002 fe3e 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
90016bf8:	6820      	ldr	r0, [r4, #0]
90016bfa:	6803      	ldr	r3, [r0, #0]
90016bfc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016bfe:	4798      	blx	r3
90016c00:	4606      	mov	r6, r0
90016c02:	6820      	ldr	r0, [r4, #0]
90016c04:	6803      	ldr	r3, [r0, #0]
90016c06:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016c08:	4798      	blx	r3
90016c0a:	4633      	mov	r3, r6
90016c0c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90016c0e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016c10:	9000      	str	r0, [sp, #0]
90016c12:	a817      	add	r0, sp, #92	@ 0x5c
90016c14:	f002 fe89 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016c18:	6820      	ldr	r0, [r4, #0]
90016c1a:	f894 a004 	ldrb.w	sl, [r4, #4]
90016c1e:	6803      	ldr	r3, [r0, #0]
90016c20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016c22:	4798      	blx	r3
90016c24:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016c28:	6823      	ldr	r3, [r4, #0]
90016c2a:	4607      	mov	r7, r0
90016c2c:	4406      	add	r6, r0
90016c2e:	a830      	add	r0, sp, #192	@ 0xc0
90016c30:	f893 9009 	ldrb.w	r9, [r3, #9]
90016c34:	f002 fe1e 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
90016c38:	7c23      	ldrb	r3, [r4, #16]
90016c3a:	b17b      	cbz	r3, 90016c5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90016c3c:	6820      	ldr	r0, [r4, #0]
90016c3e:	6803      	ldr	r3, [r0, #0]
90016c40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016c42:	4798      	blx	r3
90016c44:	9009      	str	r0, [sp, #36]	@ 0x24
90016c46:	6820      	ldr	r0, [r4, #0]
90016c48:	6802      	ldr	r2, [r0, #0]
90016c4a:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90016c4c:	4790      	blx	r2
90016c4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016c50:	9000      	str	r0, [sp, #0]
90016c52:	a830      	add	r0, sp, #192	@ 0xc0
90016c54:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90016c56:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016c58:	f002 fe67 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016c5c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90016c60:	a80e      	add	r0, sp, #56	@ 0x38
90016c62:	7be2      	ldrb	r2, [r4, #15]
90016c64:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016c68:	1a8a      	subs	r2, r1, r2
90016c6a:	7c21      	ldrb	r1, [r4, #16]
90016c6c:	9103      	str	r1, [sp, #12]
90016c6e:	b292      	uxth	r2, r2
90016c70:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90016c74:	9102      	str	r1, [sp, #8]
90016c76:	6821      	ldr	r1, [r4, #0]
90016c78:	9101      	str	r1, [sp, #4]
90016c7a:	7961      	ldrb	r1, [r4, #5]
90016c7c:	9100      	str	r1, [sp, #0]
90016c7e:	a930      	add	r1, sp, #192	@ 0xc0
90016c80:	f7ff fc20 	bl	900164c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90016c84:	2e00      	cmp	r6, #0
90016c86:	dc5b      	bgt.n	90016d40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90016c88:	af17      	add	r7, sp, #92	@ 0x5c
90016c8a:	f04f 0900 	mov.w	r9, #0
90016c8e:	7c23      	ldrb	r3, [r4, #16]
90016c90:	2b00      	cmp	r3, #0
90016c92:	f000 80b1 	beq.w	90016df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90016c96:	a80e      	add	r0, sp, #56	@ 0x38
90016c98:	f7ff fe4d 	bl	90016936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016c9c:	f1ba 0f00 	cmp.w	sl, #0
90016ca0:	f000 80a5 	beq.w	90016dee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016ca4:	7c23      	ldrb	r3, [r4, #16]
90016ca6:	2264      	movs	r2, #100	@ 0x64
90016ca8:	4639      	mov	r1, r7
90016caa:	a849      	add	r0, sp, #292	@ 0x124
90016cac:	9309      	str	r3, [sp, #36]	@ 0x24
90016cae:	f014 f956 	bl	9002af5e <memcpy>
90016cb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016cb4:	2b00      	cmp	r3, #0
90016cb6:	f000 80a7 	beq.w	90016e08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90016cba:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90016cbe:	7922      	ldrb	r2, [r4, #4]
90016cc0:	2a01      	cmp	r2, #1
90016cc2:	f040 808a 	bne.w	90016dda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90016cc6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90016cca:	1ac0      	subs	r0, r0, r3
90016ccc:	2302      	movs	r3, #2
90016cce:	fb90 f0f3 	sdiv	r0, r0, r3
90016cd2:	b200      	sxth	r0, r0
90016cd4:	7c23      	ldrb	r3, [r4, #16]
90016cd6:	2b00      	cmp	r3, #0
90016cd8:	f000 808b 	beq.w	90016df2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90016cdc:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90016ce0:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90016ce4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016ce8:	e9cd 2105 	strd	r2, r1, [sp, #20]
90016cec:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90016cf0:	2100      	movs	r1, #0
90016cf2:	4410      	add	r0, r2
90016cf4:	4642      	mov	r2, r8
90016cf6:	b200      	sxth	r0, r0
90016cf8:	e9cd 9703 	strd	r9, r7, [sp, #12]
90016cfc:	9000      	str	r0, [sp, #0]
90016cfe:	4658      	mov	r0, fp
90016d00:	e9cd 5401 	strd	r5, r4, [sp, #4]
90016d04:	f7ff fc8e 	bl	90016624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016d08:	2800      	cmp	r0, #0
90016d0a:	d163      	bne.n	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016d0c:	b2b2      	uxth	r2, r6
90016d0e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016d12:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016d16:	4413      	add	r3, r2
90016d18:	1a8a      	subs	r2, r1, r2
90016d1a:	b21b      	sxth	r3, r3
90016d1c:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016d20:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90016d24:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016d28:	2a00      	cmp	r2, #0
90016d2a:	d153      	bne.n	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016d2c:	6822      	ldr	r2, [r4, #0]
90016d2e:	8869      	ldrh	r1, [r5, #2]
90016d30:	7a12      	ldrb	r2, [r2, #8]
90016d32:	1a9b      	subs	r3, r3, r2
90016d34:	88ea      	ldrh	r2, [r5, #6]
90016d36:	440a      	add	r2, r1
90016d38:	b212      	sxth	r2, r2
90016d3a:	4293      	cmp	r3, r2
90016d3c:	dda7      	ble.n	90016c8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90016d3e:	e049      	b.n	90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016d40:	7c23      	ldrb	r3, [r4, #16]
90016d42:	444f      	add	r7, r9
90016d44:	b1c3      	cbz	r3, 90016d78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90016d46:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90016d4a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016d4e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016d52:	443b      	add	r3, r7
90016d54:	4293      	cmp	r3, r2
90016d56:	da97      	bge.n	90016c88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016d58:	a80e      	add	r0, sp, #56	@ 0x38
90016d5a:	f7ff fdec 	bl	90016936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016d5e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90016d62:	3b01      	subs	r3, #1
90016d64:	b29b      	uxth	r3, r3
90016d66:	454b      	cmp	r3, r9
90016d68:	9309      	str	r3, [sp, #36]	@ 0x24
90016d6a:	d021      	beq.n	90016db0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90016d6c:	7961      	ldrb	r1, [r4, #5]
90016d6e:	a817      	add	r0, sp, #92	@ 0x5c
90016d70:	f7ef fcd0 	bl	90006714 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016d74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016d76:	e7f4      	b.n	90016d62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90016d78:	fa1f f986 	uxth.w	r9, r6
90016d7c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016d80:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016d84:	443b      	add	r3, r7
90016d86:	4293      	cmp	r3, r2
90016d88:	f6bf af7e 	bge.w	90016c88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016d8c:	a817      	add	r0, sp, #92	@ 0x5c
90016d8e:	f003 f9cb 	bl	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016d92:	b1f8      	cbz	r0, 90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016d94:	280a      	cmp	r0, #10
90016d96:	d1f1      	bne.n	90016d7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016d98:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016d9c:	444b      	add	r3, r9
90016d9e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016da2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016da6:	eba3 0309 	sub.w	r3, r3, r9
90016daa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016dae:	e7e5      	b.n	90016d7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016db0:	b2b3      	uxth	r3, r6
90016db2:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90016db6:	441a      	add	r2, r3
90016db8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90016dbc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90016dc0:	1ad3      	subs	r3, r2, r3
90016dc2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016dc6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90016dca:	b11b      	cbz	r3, 90016dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016dcc:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90016dd0:	2b00      	cmp	r3, #0
90016dd2:	d0ba      	beq.n	90016d4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90016dd4:	b063      	add	sp, #396	@ 0x18c
90016dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016dda:	2a02      	cmp	r2, #2
90016ddc:	d105      	bne.n	90016dea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90016dde:	7be2      	ldrb	r2, [r4, #15]
90016de0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016de4:	1a80      	subs	r0, r0, r2
90016de6:	1ac0      	subs	r0, r0, r3
90016de8:	e773      	b.n	90016cd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90016dea:	2000      	movs	r0, #0
90016dec:	e772      	b.n	90016cd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016dee:	7be0      	ldrb	r0, [r4, #15]
90016df0:	e770      	b.n	90016cd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016df2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016df6:	e773      	b.n	90016ce0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016df8:	f1ba 0f00 	cmp.w	sl, #0
90016dfc:	d0f7      	beq.n	90016dee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016dfe:	2264      	movs	r2, #100	@ 0x64
90016e00:	4639      	mov	r1, r7
90016e02:	a849      	add	r0, sp, #292	@ 0x124
90016e04:	f014 f8ab 	bl	9002af5e <memcpy>
90016e08:	2300      	movs	r3, #0
90016e0a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016e0e:	6821      	ldr	r1, [r4, #0]
90016e10:	a849      	add	r0, sp, #292	@ 0x124
90016e12:	f7ff fb9a 	bl	9001654a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016e16:	b203      	sxth	r3, r0
90016e18:	e751      	b.n	90016cbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90016e1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90016e1a:	2b03      	cmp	r3, #3
90016e1c:	d818      	bhi.n	90016e50 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90016e1e:	e8df f003 	tbb	[pc, r3]
90016e22:	0602      	.short	0x0602
90016e24:	130d      	.short	0x130d
90016e26:	f9b0 2000 	ldrsh.w	r2, [r0]
90016e2a:	1850      	adds	r0, r2, r1
90016e2c:	4770      	bx	lr
90016e2e:	8803      	ldrh	r3, [r0, #0]
90016e30:	8880      	ldrh	r0, [r0, #4]
90016e32:	4418      	add	r0, r3
90016e34:	b200      	sxth	r0, r0
90016e36:	1a80      	subs	r0, r0, r2
90016e38:	3801      	subs	r0, #1
90016e3a:	4770      	bx	lr
90016e3c:	8803      	ldrh	r3, [r0, #0]
90016e3e:	8880      	ldrh	r0, [r0, #4]
90016e40:	4418      	add	r0, r3
90016e42:	b200      	sxth	r0, r0
90016e44:	1a40      	subs	r0, r0, r1
90016e46:	e7f7      	b.n	90016e38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016e48:	f9b0 0000 	ldrsh.w	r0, [r0]
90016e4c:	4410      	add	r0, r2
90016e4e:	4770      	bx	lr
90016e50:	2000      	movs	r0, #0
90016e52:	4770      	bx	lr

90016e54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90016e54:	2b03      	cmp	r3, #3
90016e56:	d817      	bhi.n	90016e88 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016e58:	e8df f003 	tbb	[pc, r3]
90016e5c:	10090602 	.word	0x10090602
90016e60:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016e64:	1850      	adds	r0, r2, r1
90016e66:	4770      	bx	lr
90016e68:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016e6c:	e7fa      	b.n	90016e64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90016e6e:	8843      	ldrh	r3, [r0, #2]
90016e70:	88c0      	ldrh	r0, [r0, #6]
90016e72:	4418      	add	r0, r3
90016e74:	b200      	sxth	r0, r0
90016e76:	1a80      	subs	r0, r0, r2
90016e78:	3801      	subs	r0, #1
90016e7a:	4770      	bx	lr
90016e7c:	8843      	ldrh	r3, [r0, #2]
90016e7e:	88c0      	ldrh	r0, [r0, #6]
90016e80:	4418      	add	r0, r3
90016e82:	b200      	sxth	r0, r0
90016e84:	1a40      	subs	r0, r0, r1
90016e86:	e7f7      	b.n	90016e78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90016e88:	2000      	movs	r0, #0
90016e8a:	4770      	bx	lr

90016e8c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90016e8c:	4b01      	ldr	r3, [pc, #4]	@ (90016e94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90016e8e:	2200      	movs	r2, #0
90016e90:	601a      	str	r2, [r3, #0]
90016e92:	4770      	bx	lr
90016e94:	24021d74 	.word	0x24021d74

90016e98 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90016e98:	4603      	mov	r3, r0
90016e9a:	b1c8      	cbz	r0, 90016ed0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90016e9c:	0c02      	lsrs	r2, r0, #16
90016e9e:	0412      	lsls	r2, r2, #16
90016ea0:	b9a2      	cbnz	r2, 90016ecc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90016ea2:	0403      	lsls	r3, r0, #16
90016ea4:	2010      	movs	r0, #16
90016ea6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90016eaa:	bf04      	itt	eq
90016eac:	021b      	lsleq	r3, r3, #8
90016eae:	3008      	addeq	r0, #8
90016eb0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90016eb4:	bf04      	itt	eq
90016eb6:	011b      	lsleq	r3, r3, #4
90016eb8:	3004      	addeq	r0, #4
90016eba:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90016ebe:	bf04      	itt	eq
90016ec0:	009b      	lsleq	r3, r3, #2
90016ec2:	3002      	addeq	r0, #2
90016ec4:	2b00      	cmp	r3, #0
90016ec6:	db04      	blt.n	90016ed2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90016ec8:	3001      	adds	r0, #1
90016eca:	4770      	bx	lr
90016ecc:	2000      	movs	r0, #0
90016ece:	e7ea      	b.n	90016ea6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90016ed0:	2020      	movs	r0, #32
90016ed2:	4770      	bx	lr

90016ed4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90016ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016ed8:	b087      	sub	sp, #28
90016eda:	460d      	mov	r5, r1
90016edc:	4616      	mov	r6, r2
90016ede:	4698      	mov	r8, r3
90016ee0:	4601      	mov	r1, r0
90016ee2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90016ee6:	b120      	cbz	r0, 90016ef2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016ee8:	b11a      	cbz	r2, 90016ef2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016eea:	2d1f      	cmp	r5, #31
90016eec:	d801      	bhi.n	90016ef2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016eee:	2b1f      	cmp	r3, #31
90016ef0:	d904      	bls.n	90016efc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90016ef2:	2000      	movs	r0, #0
90016ef4:	6038      	str	r0, [r7, #0]
90016ef6:	b007      	add	sp, #28
90016ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016efc:	b97d      	cbnz	r5, 90016f1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90016efe:	b143      	cbz	r3, 90016f12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016f00:	4602      	mov	r2, r0
90016f02:	462b      	mov	r3, r5
90016f04:	4641      	mov	r1, r8
90016f06:	4630      	mov	r0, r6
90016f08:	e9cd 4700 	strd	r4, r7, [sp]
90016f0c:	f7ff ffe2 	bl	90016ed4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016f10:	e7f1      	b.n	90016ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016f12:	f04f 33ff 	mov.w	r3, #4294967295
90016f16:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90016f1a:	603b      	str	r3, [r7, #0]
90016f1c:	e7eb      	b.n	90016ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016f1e:	fa32 fa05 	lsrs.w	sl, r2, r5
90016f22:	d106      	bne.n	90016f32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016f24:	4346      	muls	r6, r0
90016f26:	fbb6 f0f4 	udiv	r0, r6, r4
90016f2a:	fb04 6610 	mls	r6, r4, r0, r6
90016f2e:	603e      	str	r6, [r7, #0]
90016f30:	e7e1      	b.n	90016ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016f32:	2201      	movs	r2, #1
90016f34:	fa00 fb05 	lsl.w	fp, r0, r5
90016f38:	40aa      	lsls	r2, r5
90016f3a:	fbbb f9f4 	udiv	r9, fp, r4
90016f3e:	3a01      	subs	r2, #1
90016f40:	fb0a f309 	mul.w	r3, sl, r9
90016f44:	fb04 b919 	mls	r9, r4, r9, fp
90016f48:	4016      	ands	r6, r2
90016f4a:	9303      	str	r3, [sp, #12]
90016f4c:	4630      	mov	r0, r6
90016f4e:	f7ff ffa3 	bl	90016e98 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016f52:	462b      	mov	r3, r5
90016f54:	460a      	mov	r2, r1
90016f56:	4601      	mov	r1, r0
90016f58:	4630      	mov	r0, r6
90016f5a:	e9cd 4700 	strd	r4, r7, [sp]
90016f5e:	f7ff ffb9 	bl	90016ed4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016f62:	4606      	mov	r6, r0
90016f64:	4648      	mov	r0, r9
90016f66:	eb05 0108 	add.w	r1, r5, r8
90016f6a:	f7ff ff95 	bl	90016e98 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016f6e:	ab05      	add	r3, sp, #20
90016f70:	464a      	mov	r2, r9
90016f72:	e9cd 4300 	strd	r4, r3, [sp]
90016f76:	4603      	mov	r3, r0
90016f78:	4650      	mov	r0, sl
90016f7a:	f7ff ffab 	bl	90016ed4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016f7e:	6839      	ldr	r1, [r7, #0]
90016f80:	9a05      	ldr	r2, [sp, #20]
90016f82:	9b03      	ldr	r3, [sp, #12]
90016f84:	4411      	add	r1, r2
90016f86:	fbb1 f2f4 	udiv	r2, r1, r4
90016f8a:	18d3      	adds	r3, r2, r3
90016f8c:	fb04 1412 	mls	r4, r4, r2, r1
90016f90:	441e      	add	r6, r3
90016f92:	603c      	str	r4, [r7, #0]
90016f94:	4430      	add	r0, r6
90016f96:	e7ae      	b.n	90016ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90016f98 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90016f98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016f9c:	b085      	sub	sp, #20
90016f9e:	f1b0 0900 	subs.w	r9, r0, #0
90016fa2:	461d      	mov	r5, r3
90016fa4:	4617      	mov	r7, r2
90016fa6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90016fa8:	bfbb      	ittet	lt
90016faa:	f1c9 0900 	rsblt	r9, r9, #0
90016fae:	f04f 36ff 	movlt.w	r6, #4294967295
90016fb2:	2601      	movge	r6, #1
90016fb4:	6823      	ldrlt	r3, [r4, #0]
90016fb6:	bfbc      	itt	lt
90016fb8:	425b      	neglt	r3, r3
90016fba:	6023      	strlt	r3, [r4, #0]
90016fbc:	2a00      	cmp	r2, #0
90016fbe:	da04      	bge.n	90016fca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90016fc0:	6823      	ldr	r3, [r4, #0]
90016fc2:	4257      	negs	r7, r2
90016fc4:	4276      	negs	r6, r6
90016fc6:	425b      	negs	r3, r3
90016fc8:	6023      	str	r3, [r4, #0]
90016fca:	2d00      	cmp	r5, #0
90016fcc:	4638      	mov	r0, r7
90016fce:	bfba      	itte	lt
90016fd0:	426d      	neglt	r5, r5
90016fd2:	f04f 38ff 	movlt.w	r8, #4294967295
90016fd6:	f04f 0801 	movge.w	r8, #1
90016fda:	f7ff ff5d 	bl	90016e98 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016fde:	ab03      	add	r3, sp, #12
90016fe0:	463a      	mov	r2, r7
90016fe2:	e9cd 5300 	strd	r5, r3, [sp]
90016fe6:	4603      	mov	r3, r0
90016fe8:	4648      	mov	r0, r9
90016fea:	f7ff ff73 	bl	90016ed4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016fee:	6823      	ldr	r3, [r4, #0]
90016ff0:	9a03      	ldr	r2, [sp, #12]
90016ff2:	4546      	cmp	r6, r8
90016ff4:	441a      	add	r2, r3
90016ff6:	fb92 f3f5 	sdiv	r3, r2, r5
90016ffa:	4418      	add	r0, r3
90016ffc:	fb05 2313 	mls	r3, r5, r3, r2
90017000:	bf18      	it	ne
90017002:	4240      	negne	r0, r0
90017004:	1c72      	adds	r2, r6, #1
90017006:	6023      	str	r3, [r4, #0]
90017008:	d105      	bne.n	90017016 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
9001700a:	2b00      	cmp	r3, #0
9001700c:	f1c3 0200 	rsb	r2, r3, #0
90017010:	db0b      	blt.n	9001702a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017012:	6022      	str	r2, [r4, #0]
90017014:	e006      	b.n	90017024 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017016:	2e01      	cmp	r6, #1
90017018:	d104      	bne.n	90017024 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001701a:	2b00      	cmp	r3, #0
9001701c:	da02      	bge.n	90017024 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001701e:	442b      	add	r3, r5
90017020:	3801      	subs	r0, #1
90017022:	6023      	str	r3, [r4, #0]
90017024:	b005      	add	sp, #20
90017026:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001702a:	3801      	subs	r0, #1
9001702c:	1b52      	subs	r2, r2, r5
9001702e:	e7f0      	b.n	90017012 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90017030 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90017030:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90017034:	4c1c      	ldr	r4, [pc, #112]	@ (900170a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90017036:	4605      	mov	r5, r0
90017038:	6807      	ldr	r7, [r0, #0]
9001703a:	69a3      	ldr	r3, [r4, #24]
9001703c:	b92b      	cbnz	r3, 9001704a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001703e:	6840      	ldr	r0, [r0, #4]
90017040:	e9c5 7000 	strd	r7, r0, [r5]
90017044:	b004      	add	sp, #16
90017046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001704a:	f04f 0802 	mov.w	r8, #2
9001704e:	68a2      	ldr	r2, [r4, #8]
90017050:	ae04      	add	r6, sp, #16
90017052:	6820      	ldr	r0, [r4, #0]
90017054:	fb93 f1f8 	sdiv	r1, r3, r8
90017058:	440a      	add	r2, r1
9001705a:	69e1      	ldr	r1, [r4, #28]
9001705c:	f846 2d04 	str.w	r2, [r6, #-4]!
90017060:	463a      	mov	r2, r7
90017062:	9600      	str	r6, [sp, #0]
90017064:	f7ff ff98 	bl	90016f98 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017068:	69a3      	ldr	r3, [r4, #24]
9001706a:	4607      	mov	r7, r0
9001706c:	686a      	ldr	r2, [r5, #4]
9001706e:	6a21      	ldr	r1, [r4, #32]
90017070:	9600      	str	r6, [sp, #0]
90017072:	6860      	ldr	r0, [r4, #4]
90017074:	f7ff ff90 	bl	90016f98 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017078:	69a3      	ldr	r3, [r4, #24]
9001707a:	6962      	ldr	r2, [r4, #20]
9001707c:	4407      	add	r7, r0
9001707e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90017080:	9600      	str	r6, [sp, #0]
90017082:	68e0      	ldr	r0, [r4, #12]
90017084:	fb93 f8f8 	sdiv	r8, r3, r8
90017088:	4442      	add	r2, r8
9001708a:	9203      	str	r2, [sp, #12]
9001708c:	682a      	ldr	r2, [r5, #0]
9001708e:	f7ff ff83 	bl	90016f98 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017092:	4680      	mov	r8, r0
90017094:	9600      	str	r6, [sp, #0]
90017096:	69a3      	ldr	r3, [r4, #24]
90017098:	686a      	ldr	r2, [r5, #4]
9001709a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9001709c:	6920      	ldr	r0, [r4, #16]
9001709e:	f7ff ff7b 	bl	90016f98 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900170a2:	4440      	add	r0, r8
900170a4:	e7cc      	b.n	90017040 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900170a6:	bf00      	nop
900170a8:	24021d78 	.word	0x24021d78

900170ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900170ac:	4b07      	ldr	r3, [pc, #28]	@ (900170cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900170ae:	781b      	ldrb	r3, [r3, #0]
900170b0:	2b01      	cmp	r3, #1
900170b2:	d109      	bne.n	900170c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900170b4:	f9b1 3000 	ldrsh.w	r3, [r1]
900170b8:	f9b0 2000 	ldrsh.w	r2, [r0]
900170bc:	8003      	strh	r3, [r0, #0]
900170be:	4b04      	ldr	r3, [pc, #16]	@ (900170d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900170c0:	881b      	ldrh	r3, [r3, #0]
900170c2:	3b01      	subs	r3, #1
900170c4:	1a9b      	subs	r3, r3, r2
900170c6:	800b      	strh	r3, [r1, #0]
900170c8:	4770      	bx	lr
900170ca:	bf00      	nop
900170cc:	24021d5c 	.word	0x24021d5c
900170d0:	24021d58 	.word	0x24021d58

900170d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900170d4:	4b07      	ldr	r3, [pc, #28]	@ (900170f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900170d6:	b510      	push	{r4, lr}
900170d8:	781b      	ldrb	r3, [r3, #0]
900170da:	2b01      	cmp	r3, #1
900170dc:	d108      	bne.n	900170f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900170de:	4b06      	ldr	r3, [pc, #24]	@ (900170f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900170e0:	880c      	ldrh	r4, [r1, #0]
900170e2:	881b      	ldrh	r3, [r3, #0]
900170e4:	f9b0 2000 	ldrsh.w	r2, [r0]
900170e8:	3b01      	subs	r3, #1
900170ea:	1b1b      	subs	r3, r3, r4
900170ec:	8003      	strh	r3, [r0, #0]
900170ee:	800a      	strh	r2, [r1, #0]
900170f0:	bd10      	pop	{r4, pc}
900170f2:	bf00      	nop
900170f4:	24021d5c 	.word	0x24021d5c
900170f8:	24021d58 	.word	0x24021d58

900170fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900170fc:	4b0a      	ldr	r3, [pc, #40]	@ (90017128 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900170fe:	b510      	push	{r4, lr}
90017100:	781b      	ldrb	r3, [r3, #0]
90017102:	2b01      	cmp	r3, #1
90017104:	d10e      	bne.n	90017124 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90017106:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001710a:	8843      	ldrh	r3, [r0, #2]
9001710c:	f9b0 4000 	ldrsh.w	r4, [r0]
90017110:	18ca      	adds	r2, r1, r3
90017112:	4b06      	ldr	r3, [pc, #24]	@ (9001712c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90017114:	8044      	strh	r4, [r0, #2]
90017116:	881b      	ldrh	r3, [r3, #0]
90017118:	1a9b      	subs	r3, r3, r2
9001711a:	8003      	strh	r3, [r0, #0]
9001711c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017120:	8081      	strh	r1, [r0, #4]
90017122:	80c3      	strh	r3, [r0, #6]
90017124:	bd10      	pop	{r4, pc}
90017126:	bf00      	nop
90017128:	24021d5c 	.word	0x24021d5c
9001712c:	24021d58 	.word	0x24021d58

90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90017130:	4b08      	ldr	r3, [pc, #32]	@ (90017154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90017132:	781b      	ldrb	r3, [r3, #0]
90017134:	2b01      	cmp	r3, #1
90017136:	d10c      	bne.n	90017152 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90017138:	8803      	ldrh	r3, [r0, #0]
9001713a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001713e:	8842      	ldrh	r2, [r0, #2]
90017140:	8002      	strh	r2, [r0, #0]
90017142:	185a      	adds	r2, r3, r1
90017144:	4b04      	ldr	r3, [pc, #16]	@ (90017158 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90017146:	881b      	ldrh	r3, [r3, #0]
90017148:	1a9b      	subs	r3, r3, r2
9001714a:	8043      	strh	r3, [r0, #2]
9001714c:	88c3      	ldrh	r3, [r0, #6]
9001714e:	80c1      	strh	r1, [r0, #6]
90017150:	8083      	strh	r3, [r0, #4]
90017152:	4770      	bx	lr
90017154:	24021d5c 	.word	0x24021d5c
90017158:	24021d58 	.word	0x24021d58

9001715c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
9001715c:	4b07      	ldr	r3, [pc, #28]	@ (9001717c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001715e:	b510      	push	{r4, lr}
90017160:	781b      	ldrb	r3, [r3, #0]
90017162:	2b01      	cmp	r3, #1
90017164:	d108      	bne.n	90017178 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90017166:	f9b1 3000 	ldrsh.w	r3, [r1]
9001716a:	f9b0 4000 	ldrsh.w	r4, [r0]
9001716e:	8003      	strh	r3, [r0, #0]
90017170:	8893      	ldrh	r3, [r2, #4]
90017172:	3b01      	subs	r3, #1
90017174:	1b1b      	subs	r3, r3, r4
90017176:	800b      	strh	r3, [r1, #0]
90017178:	bd10      	pop	{r4, pc}
9001717a:	bf00      	nop
9001717c:	24021d5c 	.word	0x24021d5c

90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90017180:	4b0a      	ldr	r3, [pc, #40]	@ (900171ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90017182:	460a      	mov	r2, r1
90017184:	b510      	push	{r4, lr}
90017186:	781b      	ldrb	r3, [r3, #0]
90017188:	2b01      	cmp	r3, #1
9001718a:	d10d      	bne.n	900171a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
9001718c:	8881      	ldrh	r1, [r0, #4]
9001718e:	8803      	ldrh	r3, [r0, #0]
90017190:	440b      	add	r3, r1
90017192:	4601      	mov	r1, r0
90017194:	3b01      	subs	r3, #1
90017196:	f821 3b02 	strh.w	r3, [r1], #2
9001719a:	f7ff ffdf 	bl	9001715c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001719e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900171a2:	88c2      	ldrh	r2, [r0, #6]
900171a4:	80c3      	strh	r3, [r0, #6]
900171a6:	8082      	strh	r2, [r0, #4]
900171a8:	bd10      	pop	{r4, pc}
900171aa:	bf00      	nop
900171ac:	24021d5c 	.word	0x24021d5c

900171b0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900171b0:	4770      	bx	lr
	...

900171b4 <_ZN8touchgfx11Application13requestRedrawEv>:
900171b4:	4b06      	ldr	r3, [pc, #24]	@ (900171d0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900171b6:	2100      	movs	r1, #0
900171b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900171bc:	4b05      	ldr	r3, [pc, #20]	@ (900171d4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900171be:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
900171c2:	f9b3 3000 	ldrsh.w	r3, [r3]
900171c6:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
900171ca:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
900171ce:	4770      	bx	lr
900171d0:	24021d58 	.word	0x24021d58
900171d4:	24021d5a 	.word	0x24021d5a

900171d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900171d8:	4b03      	ldr	r3, [pc, #12]	@ (900171e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900171da:	6818      	ldr	r0, [r3, #0]
900171dc:	b110      	cbz	r0, 900171e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900171de:	6803      	ldr	r3, [r0, #0]
900171e0:	699b      	ldr	r3, [r3, #24]
900171e2:	4718      	bx	r3
900171e4:	4770      	bx	lr
900171e6:	bf00      	nop
900171e8:	24021da8 	.word	0x24021da8

900171ec <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900171ec:	4770      	bx	lr
	...

900171f0 <_ZN8touchgfx11Application4drawEv>:
900171f0:	4b09      	ldr	r3, [pc, #36]	@ (90017218 <_ZN8touchgfx11Application4drawEv+0x28>)
900171f2:	b507      	push	{r0, r1, r2, lr}
900171f4:	f9b3 2000 	ldrsh.w	r2, [r3]
900171f8:	2100      	movs	r1, #0
900171fa:	4b08      	ldr	r3, [pc, #32]	@ (9001721c <_ZN8touchgfx11Application4drawEv+0x2c>)
900171fc:	9100      	str	r1, [sp, #0]
900171fe:	4669      	mov	r1, sp
90017200:	f9b3 3000 	ldrsh.w	r3, [r3]
90017204:	f8ad 2004 	strh.w	r2, [sp, #4]
90017208:	f8ad 3006 	strh.w	r3, [sp, #6]
9001720c:	6803      	ldr	r3, [r0, #0]
9001720e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017210:	4798      	blx	r3
90017212:	b003      	add	sp, #12
90017214:	f85d fb04 	ldr.w	pc, [sp], #4
90017218:	24021d58 	.word	0x24021d58
9001721c:	24021d5a 	.word	0x24021d5a

90017220 <_ZN8touchgfx11Application10invalidateEv>:
90017220:	4b09      	ldr	r3, [pc, #36]	@ (90017248 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90017222:	b082      	sub	sp, #8
90017224:	2100      	movs	r1, #0
90017226:	f9b3 2000 	ldrsh.w	r2, [r3]
9001722a:	4b08      	ldr	r3, [pc, #32]	@ (9001724c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001722c:	f8ad 2004 	strh.w	r2, [sp, #4]
90017230:	aa02      	add	r2, sp, #8
90017232:	f9b3 3000 	ldrsh.w	r3, [r3]
90017236:	9100      	str	r1, [sp, #0]
90017238:	f8ad 3006 	strh.w	r3, [sp, #6]
9001723c:	6803      	ldr	r3, [r0, #0]
9001723e:	e912 0006 	ldmdb	r2, {r1, r2}
90017242:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017244:	b002      	add	sp, #8
90017246:	4718      	bx	r3
90017248:	24021d58 	.word	0x24021d58
9001724c:	24021d5a 	.word	0x24021d5a

90017250 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90017250:	4b03      	ldr	r3, [pc, #12]	@ (90017260 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90017252:	6818      	ldr	r0, [r3, #0]
90017254:	b110      	cbz	r0, 9001725c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90017256:	6803      	ldr	r3, [r0, #0]
90017258:	69db      	ldr	r3, [r3, #28]
9001725a:	4718      	bx	r3
9001725c:	4770      	bx	lr
9001725e:	bf00      	nop
90017260:	24021da8 	.word	0x24021da8

90017264 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90017264:	4b03      	ldr	r3, [pc, #12]	@ (90017274 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90017266:	6818      	ldr	r0, [r3, #0]
90017268:	b110      	cbz	r0, 90017270 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001726a:	6803      	ldr	r3, [r0, #0]
9001726c:	6a1b      	ldr	r3, [r3, #32]
9001726e:	4718      	bx	r3
90017270:	4770      	bx	lr
90017272:	bf00      	nop
90017274:	24021da8 	.word	0x24021da8

90017278 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90017278:	2300      	movs	r3, #0
9001727a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001727e:	4770      	bx	lr

90017280 <_ZN8touchgfx11Application14handleKeyEventEh>:
90017280:	4b03      	ldr	r3, [pc, #12]	@ (90017290 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90017282:	6818      	ldr	r0, [r3, #0]
90017284:	b110      	cbz	r0, 9001728c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90017286:	6803      	ldr	r3, [r0, #0]
90017288:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001728a:	4718      	bx	r3
9001728c:	4770      	bx	lr
9001728e:	bf00      	nop
90017290:	24021da8 	.word	0x24021da8

90017294 <_ZN8touchgfx11ApplicationD1Ev>:
90017294:	4770      	bx	lr

90017296 <_ZN8touchgfx11ApplicationD0Ev>:
90017296:	b510      	push	{r4, lr}
90017298:	4604      	mov	r4, r0
9001729a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001729e:	f012 ff51 	bl	9002a144 <_ZdlPvj>
900172a2:	4620      	mov	r0, r4
900172a4:	bd10      	pop	{r4, pc}

900172a6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
900172a6:	b510      	push	{r4, lr}
900172a8:	f9b1 4000 	ldrsh.w	r4, [r1]
900172ac:	888a      	ldrh	r2, [r1, #4]
900172ae:	f9b0 3000 	ldrsh.w	r3, [r0]
900172b2:	4422      	add	r2, r4
900172b4:	b212      	sxth	r2, r2
900172b6:	4293      	cmp	r3, r2
900172b8:	da15      	bge.n	900172e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900172ba:	8882      	ldrh	r2, [r0, #4]
900172bc:	4413      	add	r3, r2
900172be:	b21b      	sxth	r3, r3
900172c0:	429c      	cmp	r4, r3
900172c2:	da10      	bge.n	900172e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900172c4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900172c8:	88c9      	ldrh	r1, [r1, #6]
900172ca:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900172ce:	4419      	add	r1, r3
900172d0:	b209      	sxth	r1, r1
900172d2:	428a      	cmp	r2, r1
900172d4:	da07      	bge.n	900172e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900172d6:	88c0      	ldrh	r0, [r0, #6]
900172d8:	4410      	add	r0, r2
900172da:	b200      	sxth	r0, r0
900172dc:	4283      	cmp	r3, r0
900172de:	bfac      	ite	ge
900172e0:	2000      	movge	r0, #0
900172e2:	2001      	movlt	r0, #1
900172e4:	bd10      	pop	{r4, pc}
900172e6:	2000      	movs	r0, #0
900172e8:	e7fc      	b.n	900172e4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

900172ea <_ZN8touchgfx4Rect10restrictToEss>:
900172ea:	f9b0 3000 	ldrsh.w	r3, [r0]
900172ee:	2b00      	cmp	r3, #0
900172f0:	b510      	push	{r4, lr}
900172f2:	da04      	bge.n	900172fe <_ZN8touchgfx4Rect10restrictToEss+0x14>
900172f4:	8884      	ldrh	r4, [r0, #4]
900172f6:	4423      	add	r3, r4
900172f8:	8083      	strh	r3, [r0, #4]
900172fa:	2300      	movs	r3, #0
900172fc:	8003      	strh	r3, [r0, #0]
900172fe:	f9b0 4000 	ldrsh.w	r4, [r0]
90017302:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017306:	1b09      	subs	r1, r1, r4
90017308:	428b      	cmp	r3, r1
9001730a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001730e:	bfc8      	it	gt
90017310:	8081      	strhgt	r1, [r0, #4]
90017312:	2b00      	cmp	r3, #0
90017314:	da04      	bge.n	90017320 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90017316:	88c1      	ldrh	r1, [r0, #6]
90017318:	440b      	add	r3, r1
9001731a:	80c3      	strh	r3, [r0, #6]
9001731c:	2300      	movs	r3, #0
9001731e:	8043      	strh	r3, [r0, #2]
90017320:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017324:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90017328:	1a52      	subs	r2, r2, r1
9001732a:	4293      	cmp	r3, r2
9001732c:	bfc8      	it	gt
9001732e:	80c2      	strhgt	r2, [r0, #6]
90017330:	bd10      	pop	{r4, pc}
	...

90017334 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90017334:	4b10      	ldr	r3, [pc, #64]	@ (90017378 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90017336:	b510      	push	{r4, lr}
90017338:	460c      	mov	r4, r1
9001733a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001733e:	4b0f      	ldr	r3, [pc, #60]	@ (9001737c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90017340:	4620      	mov	r0, r4
90017342:	f9b3 1000 	ldrsh.w	r1, [r3]
90017346:	f7ff ffd0 	bl	900172ea <_ZN8touchgfx4Rect10restrictToEss>
9001734a:	4b0d      	ldr	r3, [pc, #52]	@ (90017380 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001734c:	6818      	ldr	r0, [r3, #0]
9001734e:	b190      	cbz	r0, 90017376 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90017350:	6803      	ldr	r3, [r0, #0]
90017352:	4621      	mov	r1, r4
90017354:	689b      	ldr	r3, [r3, #8]
90017356:	4798      	blx	r3
90017358:	4b0a      	ldr	r3, [pc, #40]	@ (90017384 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001735a:	6818      	ldr	r0, [r3, #0]
9001735c:	b118      	cbz	r0, 90017366 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001735e:	6803      	ldr	r3, [r0, #0]
90017360:	4621      	mov	r1, r4
90017362:	689b      	ldr	r3, [r3, #8]
90017364:	4798      	blx	r3
90017366:	4b08      	ldr	r3, [pc, #32]	@ (90017388 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90017368:	4621      	mov	r1, r4
9001736a:	6818      	ldr	r0, [r3, #0]
9001736c:	6803      	ldr	r3, [r0, #0]
9001736e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017372:	69db      	ldr	r3, [r3, #28]
90017374:	4718      	bx	r3
90017376:	bd10      	pop	{r4, pc}
90017378:	24021d5a 	.word	0x24021d5a
9001737c:	24021d58 	.word	0x24021d58
90017380:	24021da8 	.word	0x24021da8
90017384:	24021da4 	.word	0x24021da4
90017388:	24021d64 	.word	0x24021d64

9001738c <_ZNK8touchgfx4Rect8includesERKS0_>:
9001738c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001738e:	4606      	mov	r6, r0
90017390:	4608      	mov	r0, r1
90017392:	460f      	mov	r7, r1
90017394:	f7fa f8a5 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90017398:	b9e8      	cbnz	r0, 900173d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001739a:	f9b7 5000 	ldrsh.w	r5, [r7]
9001739e:	f9b6 4000 	ldrsh.w	r4, [r6]
900173a2:	42a5      	cmp	r5, r4
900173a4:	db17      	blt.n	900173d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900173a6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900173aa:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900173ae:	429a      	cmp	r2, r3
900173b0:	db11      	blt.n	900173d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900173b2:	88b9      	ldrh	r1, [r7, #4]
900173b4:	440d      	add	r5, r1
900173b6:	88b1      	ldrh	r1, [r6, #4]
900173b8:	440c      	add	r4, r1
900173ba:	b22d      	sxth	r5, r5
900173bc:	b224      	sxth	r4, r4
900173be:	42a5      	cmp	r5, r4
900173c0:	dc09      	bgt.n	900173d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900173c2:	88f8      	ldrh	r0, [r7, #6]
900173c4:	4410      	add	r0, r2
900173c6:	88f2      	ldrh	r2, [r6, #6]
900173c8:	4413      	add	r3, r2
900173ca:	b200      	sxth	r0, r0
900173cc:	b21b      	sxth	r3, r3
900173ce:	4298      	cmp	r0, r3
900173d0:	bfcc      	ite	gt
900173d2:	2000      	movgt	r0, #0
900173d4:	2001      	movle	r0, #1
900173d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900173d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900173d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900173da:	4604      	mov	r4, r0
900173dc:	4608      	mov	r0, r1
900173de:	460d      	mov	r5, r1
900173e0:	f7fa f87f 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
900173e4:	b978      	cbnz	r0, 90017406 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900173e6:	4620      	mov	r0, r4
900173e8:	f7fa f87b 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
900173ec:	f9b5 6000 	ldrsh.w	r6, [r5]
900173f0:	b150      	cbz	r0, 90017408 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900173f2:	8026      	strh	r6, [r4, #0]
900173f4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900173f8:	8063      	strh	r3, [r4, #2]
900173fa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900173fe:	80a3      	strh	r3, [r4, #4]
90017400:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90017404:	80e3      	strh	r3, [r4, #6]
90017406:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017408:	f9b4 1000 	ldrsh.w	r1, [r4]
9001740c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017410:	42b1      	cmp	r1, r6
90017412:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90017416:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001741a:	460f      	mov	r7, r1
9001741c:	88ed      	ldrh	r5, [r5, #6]
9001741e:	bfa8      	it	ge
90017420:	4637      	movge	r7, r6
90017422:	4293      	cmp	r3, r2
90017424:	4618      	mov	r0, r3
90017426:	4466      	add	r6, ip
90017428:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001742c:	bfa8      	it	ge
9001742e:	4610      	movge	r0, r2
90017430:	442a      	add	r2, r5
90017432:	88e5      	ldrh	r5, [r4, #6]
90017434:	4461      	add	r1, ip
90017436:	b236      	sxth	r6, r6
90017438:	8027      	strh	r7, [r4, #0]
9001743a:	442b      	add	r3, r5
9001743c:	b209      	sxth	r1, r1
9001743e:	b212      	sxth	r2, r2
90017440:	8060      	strh	r0, [r4, #2]
90017442:	b21b      	sxth	r3, r3
90017444:	428e      	cmp	r6, r1
90017446:	bfac      	ite	ge
90017448:	ebc7 0106 	rsbge	r1, r7, r6
9001744c:	ebc7 0101 	rsblt	r1, r7, r1
90017450:	429a      	cmp	r2, r3
90017452:	bfac      	ite	ge
90017454:	ebc0 0202 	rsbge	r2, r0, r2
90017458:	ebc0 0203 	rsblt	r2, r0, r3
9001745c:	80a1      	strh	r1, [r4, #4]
9001745e:	80e2      	strh	r2, [r4, #6]
90017460:	e7d1      	b.n	90017406 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90017464 <_ZN8touchgfx11Application11getInstanceEv>:
90017464:	4b01      	ldr	r3, [pc, #4]	@ (9001746c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90017466:	6818      	ldr	r0, [r3, #0]
90017468:	4770      	bx	lr
9001746a:	bf00      	nop
9001746c:	24021db8 	.word	0x24021db8

90017470 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90017470:	2300      	movs	r3, #0
90017472:	b510      	push	{r4, lr}
90017474:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90017478:	4604      	mov	r4, r0
9001747a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001747e:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90017482:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90017486:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
9001748a:	429a      	cmp	r2, r3
9001748c:	d90e      	bls.n	900174ac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001748e:	18e2      	adds	r2, r4, r3
90017490:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90017494:	b122      	cbz	r2, 900174a0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90017496:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001749a:	6803      	ldr	r3, [r0, #0]
9001749c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001749e:	4798      	blx	r3
900174a0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900174a4:	3301      	adds	r3, #1
900174a6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900174aa:	e7ea      	b.n	90017482 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900174ac:	bd10      	pop	{r4, pc}

900174ae <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
900174ae:	b530      	push	{r4, r5, lr}
900174b0:	2200      	movs	r2, #0
900174b2:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
900174b6:	b293      	uxth	r3, r2
900174b8:	429d      	cmp	r5, r3
900174ba:	d90e      	bls.n	900174da <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
900174bc:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
900174c0:	428b      	cmp	r3, r1
900174c2:	d10b      	bne.n	900174dc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
900174c4:	1884      	adds	r4, r0, r2
900174c6:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
900174ca:	b13b      	cbz	r3, 900174dc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
900174cc:	3b01      	subs	r3, #1
900174ce:	b2db      	uxtb	r3, r3
900174d0:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
900174d4:	b90b      	cbnz	r3, 900174da <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
900174d6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
900174da:	bd30      	pop	{r4, r5, pc}
900174dc:	3201      	adds	r2, #1
900174de:	e7ea      	b.n	900174b6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

900174e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900174e0:	2300      	movs	r3, #0
900174e2:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900174e6:	30a4      	adds	r0, #164	@ 0xa4
900174e8:	f820 3c24 	strh.w	r3, [r0, #-36]
900174ec:	f802 3b01 	strb.w	r3, [r2], #1
900174f0:	4282      	cmp	r2, r0
900174f2:	d1fb      	bne.n	900174ec <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900174f4:	4770      	bx	lr
	...

900174f8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900174f8:	b570      	push	{r4, r5, r6, lr}
900174fa:	4c0b      	ldr	r4, [pc, #44]	@ (90017528 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900174fc:	4605      	mov	r5, r0
900174fe:	460e      	mov	r6, r1
90017500:	6820      	ldr	r0, [r4, #0]
90017502:	b110      	cbz	r0, 9001750a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90017504:	6803      	ldr	r3, [r0, #0]
90017506:	695b      	ldr	r3, [r3, #20]
90017508:	4798      	blx	r3
9001750a:	1d28      	adds	r0, r5, #4
9001750c:	f7ff ffe8 	bl	900174e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90017510:	6026      	str	r6, [r4, #0]
90017512:	6833      	ldr	r3, [r6, #0]
90017514:	4630      	mov	r0, r6
90017516:	68db      	ldr	r3, [r3, #12]
90017518:	4798      	blx	r3
9001751a:	682b      	ldr	r3, [r5, #0]
9001751c:	4628      	mov	r0, r5
9001751e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017524:	4718      	bx	r3
90017526:	bf00      	nop
90017528:	24021da8 	.word	0x24021da8

9001752c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001752c:	2300      	movs	r3, #0
9001752e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90017532:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
90017536:	461a      	mov	r2, r3
90017538:	b5f0      	push	{r4, r5, r6, r7, lr}
9001753a:	461c      	mov	r4, r3
9001753c:	461d      	mov	r5, r3
9001753e:	459c      	cmp	ip, r3
90017540:	dd1a      	ble.n	90017578 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90017542:	18c6      	adds	r6, r0, r3
90017544:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90017548:	b16e      	cbz	r6, 90017566 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001754a:	429a      	cmp	r2, r3
9001754c:	d008      	beq.n	90017560 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001754e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90017552:	fa1f fe82 	uxth.w	lr, r2
90017556:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001755a:	1887      	adds	r7, r0, r2
9001755c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90017560:	3201      	adds	r2, #1
90017562:	3301      	adds	r3, #1
90017564:	e7eb      	b.n	9001753e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90017566:	4299      	cmp	r1, r3
90017568:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
9001756c:	bfa8      	it	ge
9001756e:	3501      	addge	r5, #1
90017570:	429e      	cmp	r6, r3
90017572:	bfc8      	it	gt
90017574:	3401      	addgt	r4, #1
90017576:	e7f4      	b.n	90017562 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90017578:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
9001757c:	1b49      	subs	r1, r1, r5
9001757e:	1b1b      	subs	r3, r3, r4
90017580:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
90017584:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90017588:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001758c:	4293      	cmp	r3, r2
9001758e:	dd03      	ble.n	90017598 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90017590:	3b01      	subs	r3, #1
90017592:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
90017596:	e7f7      	b.n	90017588 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90017598:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001759c <_ZN8touchgfx11Application15handleTickEventEv>:
9001759c:	b570      	push	{r4, r5, r6, lr}
9001759e:	4d16      	ldr	r5, [pc, #88]	@ (900175f8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900175a0:	4604      	mov	r4, r0
900175a2:	6828      	ldr	r0, [r5, #0]
900175a4:	b140      	cbz	r0, 900175b8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900175a6:	7a03      	ldrb	r3, [r0, #8]
900175a8:	b933      	cbnz	r3, 900175b8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900175aa:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900175ae:	6803      	ldr	r3, [r0, #0]
900175b0:	689b      	ldr	r3, [r3, #8]
900175b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900175b6:	4718      	bx	r3
900175b8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900175bc:	4e0f      	ldr	r6, [pc, #60]	@ (900175fc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900175be:	b973      	cbnz	r3, 900175de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900175c0:	b168      	cbz	r0, 900175de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900175c2:	7a03      	ldrb	r3, [r0, #8]
900175c4:	b15b      	cbz	r3, 900175de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900175c6:	6830      	ldr	r0, [r6, #0]
900175c8:	b110      	cbz	r0, 900175d0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900175ca:	6803      	ldr	r3, [r0, #0]
900175cc:	691b      	ldr	r3, [r3, #16]
900175ce:	4798      	blx	r3
900175d0:	6828      	ldr	r0, [r5, #0]
900175d2:	6803      	ldr	r3, [r0, #0]
900175d4:	68db      	ldr	r3, [r3, #12]
900175d6:	4798      	blx	r3
900175d8:	2301      	movs	r3, #1
900175da:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900175de:	3404      	adds	r4, #4
900175e0:	4620      	mov	r0, r4
900175e2:	f7ff ff45 	bl	90017470 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900175e6:	4620      	mov	r0, r4
900175e8:	f7ff ffa0 	bl	9001752c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900175ec:	6830      	ldr	r0, [r6, #0]
900175ee:	b110      	cbz	r0, 900175f6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900175f0:	6803      	ldr	r3, [r0, #0]
900175f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900175f4:	e7dd      	b.n	900175b2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900175f6:	bd70      	pop	{r4, r5, r6, pc}
900175f8:	24021dac 	.word	0x24021dac
900175fc:	24021da8 	.word	0x24021da8

90017600 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
90017600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017602:	2300      	movs	r3, #0
90017604:	4604      	mov	r4, r0
90017606:	460d      	mov	r5, r1
90017608:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
9001760c:	4618      	mov	r0, r3
9001760e:	b29a      	uxth	r2, r3
90017610:	4291      	cmp	r1, r2
90017612:	d912      	bls.n	9001763a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
90017614:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
90017618:	18e6      	adds	r6, r4, r3
9001761a:	42af      	cmp	r7, r5
9001761c:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
90017620:	d105      	bne.n	9001762e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
90017622:	2aff      	cmp	r2, #255	@ 0xff
90017624:	d002      	beq.n	9001762c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
90017626:	3201      	adds	r2, #1
90017628:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
9001762c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001762e:	2a00      	cmp	r2, #0
90017630:	f103 0301 	add.w	r3, r3, #1
90017634:	bf08      	it	eq
90017636:	2001      	moveq	r0, #1
90017638:	e7e9      	b.n	9001760e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
9001763a:	b120      	cbz	r0, 90017646 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
9001763c:	2920      	cmp	r1, #32
9001763e:	d102      	bne.n	90017646 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
90017640:	4620      	mov	r0, r4
90017642:	f7ff ff73 	bl	9001752c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90017646:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
9001764a:	2b1f      	cmp	r3, #31
9001764c:	d8ee      	bhi.n	9001762c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001764e:	18e2      	adds	r2, r4, r3
90017650:	2101      	movs	r1, #1
90017652:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
90017656:	185a      	adds	r2, r3, r1
90017658:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
9001765c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90017660:	e7e4      	b.n	9001762c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

90017662 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90017662:	4603      	mov	r3, r0
90017664:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90017668:	2200      	movs	r2, #0
9001766a:	801a      	strh	r2, [r3, #0]
9001766c:	3308      	adds	r3, #8
9001766e:	f823 2c06 	strh.w	r2, [r3, #-6]
90017672:	f823 2c04 	strh.w	r2, [r3, #-4]
90017676:	f823 2c02 	strh.w	r2, [r3, #-2]
9001767a:	428b      	cmp	r3, r1
9001767c:	d1f5      	bne.n	9001766a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001767e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90017682:	4770      	bx	lr

90017684 <_ZN8touchgfx11ApplicationC1Ev>:
90017684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017686:	4b1d      	ldr	r3, [pc, #116]	@ (900176fc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90017688:	4606      	mov	r6, r0
9001768a:	4604      	mov	r4, r0
9001768c:	2500      	movs	r5, #0
9001768e:	f846 3b04 	str.w	r3, [r6], #4
90017692:	22a8      	movs	r2, #168	@ 0xa8
90017694:	2100      	movs	r1, #0
90017696:	4630      	mov	r0, r6
90017698:	f013 fb80 	bl	9002ad9c <memset>
9001769c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900176a0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900176a4:	4f16      	ldr	r7, [pc, #88]	@ (90017700 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900176a6:	f7ff ffdc 	bl	90017662 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900176aa:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900176ae:	f7ff ffd8 	bl	90017662 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900176b2:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900176b6:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900176ba:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900176be:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900176c2:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900176c6:	490f      	ldr	r1, [pc, #60]	@ (90017704 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900176c8:	480f      	ldr	r0, [pc, #60]	@ (90017708 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900176ca:	f011 feab 	bl	90029424 <CRC_Lock>
900176ce:	4b0f      	ldr	r3, [pc, #60]	@ (9001770c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900176d0:	b158      	cbz	r0, 900176ea <_ZN8touchgfx11ApplicationC1Ev+0x66>
900176d2:	801d      	strh	r5, [r3, #0]
900176d4:	2300      	movs	r3, #0
900176d6:	4a0e      	ldr	r2, [pc, #56]	@ (90017710 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900176d8:	4630      	mov	r0, r6
900176da:	6013      	str	r3, [r2, #0]
900176dc:	4a0d      	ldr	r2, [pc, #52]	@ (90017714 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900176de:	603b      	str	r3, [r7, #0]
900176e0:	6013      	str	r3, [r2, #0]
900176e2:	f7ff fefd 	bl	900174e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900176e6:	4620      	mov	r0, r4
900176e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900176ea:	f44f 6280 	mov.w	r2, #1024	@ 0x400
900176ee:	2002      	movs	r0, #2
900176f0:	801a      	strh	r2, [r3, #0]
900176f2:	6038      	str	r0, [r7, #0]
900176f4:	f001 ff44 	bl	90019580 <_ZN8touchgfx6Screen4drawEv>
900176f8:	e7ec      	b.n	900176d4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900176fa:	bf00      	nop
900176fc:	9002e980 	.word	0x9002e980
90017700:	24021da8 	.word	0x24021da8
90017704:	b5e8b5cd 	.word	0xb5e8b5cd
90017708:	f407a5c2 	.word	0xf407a5c2
9001770c:	24000088 	.word	0x24000088
90017710:	24021db8 	.word	0x24021db8
90017714:	24021dac 	.word	0x24021dac

90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90017718:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
9001771c:	3b01      	subs	r3, #1
9001771e:	b29b      	uxth	r3, r3
90017720:	428b      	cmp	r3, r1
90017722:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
90017726:	b510      	push	{r4, lr}
90017728:	d908      	bls.n	9001773c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001772a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001772e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90017732:	681a      	ldr	r2, [r3, #0]
90017734:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90017738:	685a      	ldr	r2, [r3, #4]
9001773a:	6062      	str	r2, [r4, #4]
9001773c:	bd10      	pop	{r4, pc}
	...

90017740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90017740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017744:	b08f      	sub	sp, #60	@ 0x3c
90017746:	4b92      	ldr	r3, [pc, #584]	@ (90017990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
90017748:	4683      	mov	fp, r0
9001774a:	ac0a      	add	r4, sp, #40	@ 0x28
9001774c:	e884 0006 	stmia.w	r4, {r1, r2}
90017750:	f9b3 2000 	ldrsh.w	r2, [r3]
90017754:	4620      	mov	r0, r4
90017756:	4b8f      	ldr	r3, [pc, #572]	@ (90017994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
90017758:	f9b3 1000 	ldrsh.w	r1, [r3]
9001775c:	f7ff fdc5 	bl	900172ea <_ZN8touchgfx4Rect10restrictToEss>
90017760:	4620      	mov	r0, r4
90017762:	f7f9 febe 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90017766:	2800      	cmp	r0, #0
90017768:	d170      	bne.n	9001784c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001776a:	4b8b      	ldr	r3, [pc, #556]	@ (90017998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
9001776c:	681b      	ldr	r3, [r3, #0]
9001776e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90017772:	2b02      	cmp	r3, #2
90017774:	d06a      	beq.n	9001784c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017776:	9403      	str	r4, [sp, #12]
90017778:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
9001777c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90017780:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90017784:	9301      	str	r3, [sp, #4]
90017786:	35a4      	adds	r5, #164	@ 0xa4
90017788:	b15c      	cbz	r4, 900177a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
9001778a:	4629      	mov	r1, r5
9001778c:	9803      	ldr	r0, [sp, #12]
9001778e:	f7ff fdfd 	bl	9001738c <_ZNK8touchgfx4Rect8includesERKS0_>
90017792:	3c01      	subs	r4, #1
90017794:	b118      	cbz	r0, 9001779e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
90017796:	b2a1      	uxth	r1, r4
90017798:	9801      	ldr	r0, [sp, #4]
9001779a:	f7ff ffbd 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001779e:	3d08      	subs	r5, #8
900177a0:	e7f2      	b.n	90017788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900177a2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900177a6:	f10a 33ff 	add.w	r3, sl, #4294967295
900177aa:	f8cd a010 	str.w	sl, [sp, #16]
900177ae:	9302      	str	r3, [sp, #8]
900177b0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900177b4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900177b8:	9306      	str	r3, [sp, #24]
900177ba:	445c      	add	r4, fp
900177bc:	2500      	movs	r5, #0
900177be:	4626      	mov	r6, r4
900177c0:	f8cd a014 	str.w	sl, [sp, #20]
900177c4:	462f      	mov	r7, r5
900177c6:	9b05      	ldr	r3, [sp, #20]
900177c8:	2b00      	cmp	r3, #0
900177ca:	d073      	beq.n	900178b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
900177cc:	9903      	ldr	r1, [sp, #12]
900177ce:	4630      	mov	r0, r6
900177d0:	f7ff fd69 	bl	900172a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900177d4:	b350      	cbz	r0, 9001782c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900177d6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900177da:	f9b6 c000 	ldrsh.w	ip, [r6]
900177de:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900177e2:	45e6      	cmp	lr, ip
900177e4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900177e8:	db33      	blt.n	90017852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
900177ea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900177ee:	88b3      	ldrh	r3, [r6, #4]
900177f0:	4472      	add	r2, lr
900177f2:	4463      	add	r3, ip
900177f4:	b212      	sxth	r2, r2
900177f6:	b21b      	sxth	r3, r3
900177f8:	429a      	cmp	r2, r3
900177fa:	dc2a      	bgt.n	90017852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
900177fc:	fa1f f289 	uxth.w	r2, r9
90017800:	88f3      	ldrh	r3, [r6, #6]
90017802:	45c8      	cmp	r8, r9
90017804:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017808:	4413      	add	r3, r2
9001780a:	fa1f fc88 	uxth.w	ip, r8
9001780e:	b29b      	uxth	r3, r3
90017810:	fa0f fe83 	sxth.w	lr, r3
90017814:	db0f      	blt.n	90017836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
90017816:	eba3 030c 	sub.w	r3, r3, ip
9001781a:	1ac9      	subs	r1, r1, r3
9001781c:	b209      	sxth	r1, r1
9001781e:	2900      	cmp	r1, #0
90017820:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017824:	dd12      	ble.n	9001784c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017826:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
9001782a:	4605      	mov	r5, r0
9001782c:	9b05      	ldr	r3, [sp, #20]
9001782e:	3e08      	subs	r6, #8
90017830:	3b01      	subs	r3, #1
90017832:	9305      	str	r3, [sp, #20]
90017834:	e7c7      	b.n	900177c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
90017836:	4461      	add	r1, ip
90017838:	b209      	sxth	r1, r1
9001783a:	4571      	cmp	r1, lr
9001783c:	dc38      	bgt.n	900178b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001783e:	eba2 020c 	sub.w	r2, r2, ip
90017842:	b212      	sxth	r2, r2
90017844:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90017848:	2a00      	cmp	r2, #0
9001784a:	dcee      	bgt.n	9001782a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001784c:	b00f      	add	sp, #60	@ 0x3c
9001784e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017852:	45c8      	cmp	r8, r9
90017854:	db2c      	blt.n	900178b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90017856:	88f3      	ldrh	r3, [r6, #6]
90017858:	4499      	add	r9, r3
9001785a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
9001785e:	4498      	add	r8, r3
90017860:	fa0f f989 	sxth.w	r9, r9
90017864:	fa0f f888 	sxth.w	r8, r8
90017868:	45c1      	cmp	r9, r8
9001786a:	db21      	blt.n	900178b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001786c:	fa1f f28c 	uxth.w	r2, ip
90017870:	88b3      	ldrh	r3, [r6, #4]
90017872:	45e6      	cmp	lr, ip
90017874:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90017878:	4413      	add	r3, r2
9001787a:	fa1f f88e 	uxth.w	r8, lr
9001787e:	b29b      	uxth	r3, r3
90017880:	fa0f f983 	sxth.w	r9, r3
90017884:	db0a      	blt.n	9001789c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
90017886:	eba3 0308 	sub.w	r3, r3, r8
9001788a:	1ac9      	subs	r1, r1, r3
9001788c:	b209      	sxth	r1, r1
9001788e:	2900      	cmp	r1, #0
90017890:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90017894:	ddda      	ble.n	9001784c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017896:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001789a:	e7c6      	b.n	9001782a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001789c:	4441      	add	r1, r8
9001789e:	b209      	sxth	r1, r1
900178a0:	4549      	cmp	r1, r9
900178a2:	dc05      	bgt.n	900178b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900178a4:	eba2 0208 	sub.w	r2, r2, r8
900178a8:	b212      	sxth	r2, r2
900178aa:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900178ae:	e7cb      	b.n	90017848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
900178b0:	4607      	mov	r7, r0
900178b2:	e7bb      	b.n	9001782c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900178b4:	2d00      	cmp	r5, #0
900178b6:	d181      	bne.n	900177bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
900178b8:	2f00      	cmp	r7, #0
900178ba:	f000 81df 	beq.w	90017c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900178be:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900178c2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900178c6:	b2b3      	uxth	r3, r6
900178c8:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
900178cc:	9305      	str	r3, [sp, #20]
900178ce:	9a05      	ldr	r2, [sp, #20]
900178d0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
900178d4:	4413      	add	r3, r2
900178d6:	b2ba      	uxth	r2, r7
900178d8:	4492      	add	sl, r2
900178da:	b29b      	uxth	r3, r3
900178dc:	fa1f fa8a 	uxth.w	sl, sl
900178e0:	fa0f f883 	sxth.w	r8, r3
900178e4:	fa0f f98a 	sxth.w	r9, sl
900178e8:	e9cd 2307 	strd	r2, r3, [sp, #28]
900178ec:	9b04      	ldr	r3, [sp, #16]
900178ee:	2b00      	cmp	r3, #0
900178f0:	d054      	beq.n	9001799c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
900178f2:	9903      	ldr	r1, [sp, #12]
900178f4:	4620      	mov	r0, r4
900178f6:	f7ff fcd6 	bl	900172a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900178fa:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900178fe:	b1c0      	cbz	r0, 90017932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017900:	f9b4 e000 	ldrsh.w	lr, [r4]
90017904:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90017908:	4576      	cmp	r6, lr
9001790a:	dc22      	bgt.n	90017952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
9001790c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90017910:	44f4      	add	ip, lr
90017912:	fa0f fc8c 	sxth.w	ip, ip
90017916:	45e0      	cmp	r8, ip
90017918:	db1b      	blt.n	90017952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
9001791a:	428f      	cmp	r7, r1
9001791c:	fa1f fc81 	uxth.w	ip, r1
90017920:	88e1      	ldrh	r1, [r4, #6]
90017922:	dc0d      	bgt.n	90017940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
90017924:	ebaa 0c0c 	sub.w	ip, sl, ip
90017928:	f8a4 9002 	strh.w	r9, [r4, #2]
9001792c:	eba1 010c 	sub.w	r1, r1, ip
90017930:	80e1      	strh	r1, [r4, #6]
90017932:	4628      	mov	r0, r5
90017934:	9904      	ldr	r1, [sp, #16]
90017936:	3c08      	subs	r4, #8
90017938:	4605      	mov	r5, r0
9001793a:	3901      	subs	r1, #1
9001793c:	9104      	str	r1, [sp, #16]
9001793e:	e7d3      	b.n	900178e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90017940:	4461      	add	r1, ip
90017942:	b209      	sxth	r1, r1
90017944:	4549      	cmp	r1, r9
90017946:	dcf5      	bgt.n	90017934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017948:	eba2 0c0c 	sub.w	ip, r2, ip
9001794c:	f8a4 c006 	strh.w	ip, [r4, #6]
90017950:	e7ef      	b.n	90017932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017952:	428f      	cmp	r7, r1
90017954:	dcee      	bgt.n	90017934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017956:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001795a:	4461      	add	r1, ip
9001795c:	b209      	sxth	r1, r1
9001795e:	4589      	cmp	r9, r1
90017960:	dbe8      	blt.n	90017934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017962:	4576      	cmp	r6, lr
90017964:	fa1f fc8e 	uxth.w	ip, lr
90017968:	88a1      	ldrh	r1, [r4, #4]
9001796a:	dc07      	bgt.n	9001797c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
9001796c:	eba3 0c0c 	sub.w	ip, r3, ip
90017970:	f8a4 8000 	strh.w	r8, [r4]
90017974:	eba1 010c 	sub.w	r1, r1, ip
90017978:	80a1      	strh	r1, [r4, #4]
9001797a:	e7da      	b.n	90017932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001797c:	4461      	add	r1, ip
9001797e:	b209      	sxth	r1, r1
90017980:	4588      	cmp	r8, r1
90017982:	dbd7      	blt.n	90017934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017984:	9905      	ldr	r1, [sp, #20]
90017986:	eba1 0c0c 	sub.w	ip, r1, ip
9001798a:	f8a4 c004 	strh.w	ip, [r4, #4]
9001798e:	e7d0      	b.n	90017932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017990:	24021d5a 	.word	0x24021d5a
90017994:	24021d58 	.word	0x24021d58
90017998:	24021d64 	.word	0x24021d64
9001799c:	2d00      	cmp	r5, #0
9001799e:	f000 816d 	beq.w	90017c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900179a2:	9b06      	ldr	r3, [sp, #24]
900179a4:	445b      	add	r3, fp
900179a6:	461c      	mov	r4, r3
900179a8:	9b02      	ldr	r3, [sp, #8]
900179aa:	3301      	adds	r3, #1
900179ac:	f000 8166 	beq.w	90017c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900179b0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900179b4:	9803      	ldr	r0, [sp, #12]
900179b6:	4629      	mov	r1, r5
900179b8:	f7ff fce8 	bl	9001738c <_ZNK8touchgfx4Rect8includesERKS0_>
900179bc:	b120      	cbz	r0, 900179c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
900179be:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900179c2:	9801      	ldr	r0, [sp, #4]
900179c4:	f7ff fea8 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900179c8:	9903      	ldr	r1, [sp, #12]
900179ca:	4628      	mov	r0, r5
900179cc:	f7ff fc6b 	bl	900172a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900179d0:	2800      	cmp	r0, #0
900179d2:	f000 809c 	beq.w	90017b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
900179d6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
900179da:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900179de:	fa1f f189 	uxth.w	r1, r9
900179e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900179e6:	9309      	str	r3, [sp, #36]	@ 0x24
900179e8:	eb01 0c03 	add.w	ip, r1, r3
900179ec:	b283      	uxth	r3, r0
900179ee:	4548      	cmp	r0, r9
900179f0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
900179f4:	fa1f fa8c 	uxth.w	sl, ip
900179f8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
900179fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90017a00:	eb03 050c 	add.w	r5, r3, ip
90017a04:	b2ad      	uxth	r5, r5
90017a06:	9505      	str	r5, [sp, #20]
90017a08:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90017a0c:	9504      	str	r5, [sp, #16]
90017a0e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90017a12:	f340 8099 	ble.w	90017b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
90017a16:	1a5b      	subs	r3, r3, r1
90017a18:	4596      	cmp	lr, r2
90017a1a:	fa0f f08a 	sxth.w	r0, sl
90017a1e:	b29b      	uxth	r3, r3
90017a20:	b21e      	sxth	r6, r3
90017a22:	dd2e      	ble.n	90017a82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
90017a24:	9f02      	ldr	r7, [sp, #8]
90017a26:	fa1f fe8e 	uxth.w	lr, lr
90017a2a:	b292      	uxth	r2, r2
90017a2c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90017a30:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90017a34:	9f04      	ldr	r7, [sp, #16]
90017a36:	ebae 0102 	sub.w	r1, lr, r2
90017a3a:	44a6      	add	lr, r4
90017a3c:	1a3f      	subs	r7, r7, r0
90017a3e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90017a42:	b289      	uxth	r1, r1
90017a44:	4402      	add	r2, r0
90017a46:	fa0f fe8e 	sxth.w	lr, lr
90017a4a:	b20d      	sxth	r5, r1
90017a4c:	b212      	sxth	r2, r2
90017a4e:	436f      	muls	r7, r5
90017a50:	ebae 0202 	sub.w	r2, lr, r2
90017a54:	4372      	muls	r2, r6
90017a56:	4297      	cmp	r7, r2
90017a58:	db09      	blt.n	90017a6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
90017a5a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90017a5e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90017a62:	449c      	add	ip, r3
90017a64:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90017a68:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90017a6c:	e684      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017a6e:	4421      	add	r1, r4
90017a70:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90017a74:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90017a78:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017a7c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90017a80:	e67a      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017a82:	9f04      	ldr	r7, [sp, #16]
90017a84:	42b8      	cmp	r0, r7
90017a86:	da27      	bge.n	90017ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
90017a88:	9902      	ldr	r1, [sp, #8]
90017a8a:	1a3f      	subs	r7, r7, r0
90017a8c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90017a90:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90017a94:	eb05 010e 	add.w	r1, r5, lr
90017a98:	fa1f f881 	uxth.w	r8, r1
90017a9c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90017aa0:	4411      	add	r1, r2
90017aa2:	fa0f f988 	sxth.w	r9, r8
90017aa6:	eba2 020e 	sub.w	r2, r2, lr
90017aaa:	eba1 0108 	sub.w	r1, r1, r8
90017aae:	4372      	muls	r2, r6
90017ab0:	b289      	uxth	r1, r1
90017ab2:	fa0f f881 	sxth.w	r8, r1
90017ab6:	fb08 f707 	mul.w	r7, r8, r7
90017aba:	42ba      	cmp	r2, r7
90017abc:	dc06      	bgt.n	90017acc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
90017abe:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90017ac2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90017ac6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90017aca:	e7ca      	b.n	90017a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90017acc:	4429      	add	r1, r5
90017ace:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90017ad2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017ad6:	e64f      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017ad8:	9805      	ldr	r0, [sp, #20]
90017ada:	2d06      	cmp	r5, #6
90017adc:	ebaa 0000 	sub.w	r0, sl, r0
90017ae0:	b280      	uxth	r0, r0
90017ae2:	fa0f fe80 	sxth.w	lr, r0
90017ae6:	d817      	bhi.n	90017b18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90017ae8:	9b04      	ldr	r3, [sp, #16]
90017aea:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90017aee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90017af2:	1c6b      	adds	r3, r5, #1
90017af4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90017af8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017afc:	9b01      	ldr	r3, [sp, #4]
90017afe:	9801      	ldr	r0, [sp, #4]
90017b00:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017b04:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017b08:	805a      	strh	r2, [r3, #2]
90017b0a:	809e      	strh	r6, [r3, #4]
90017b0c:	80d9      	strh	r1, [r3, #6]
90017b0e:	9b02      	ldr	r3, [sp, #8]
90017b10:	3c08      	subs	r4, #8
90017b12:	3b01      	subs	r3, #1
90017b14:	9302      	str	r3, [sp, #8]
90017b16:	e747      	b.n	900179a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
90017b18:	9a02      	ldr	r2, [sp, #8]
90017b1a:	45b6      	cmp	lr, r6
90017b1c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017b20:	db0d      	blt.n	90017b3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
90017b22:	449c      	add	ip, r3
90017b24:	445a      	add	r2, fp
90017b26:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90017b2a:	fa1f fc8c 	uxth.w	ip, ip
90017b2e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90017b32:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90017b36:	448c      	add	ip, r1
90017b38:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90017b3c:	e61c      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017b3e:	445a      	add	r2, fp
90017b40:	4484      	add	ip, r0
90017b42:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90017b46:	e78f      	b.n	90017a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90017b48:	fa1f f18e 	uxth.w	r1, lr
90017b4c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90017b50:	b293      	uxth	r3, r2
90017b52:	4596      	cmp	lr, r2
90017b54:	eb01 0806 	add.w	r8, r1, r6
90017b58:	9306      	str	r3, [sp, #24]
90017b5a:	fa1f f888 	uxth.w	r8, r8
90017b5e:	9f06      	ldr	r7, [sp, #24]
90017b60:	fa0f f388 	sxth.w	r3, r8
90017b64:	9307      	str	r3, [sp, #28]
90017b66:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017b6a:	443b      	add	r3, r7
90017b6c:	b29b      	uxth	r3, r3
90017b6e:	9308      	str	r3, [sp, #32]
90017b70:	da24      	bge.n	90017bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
90017b72:	9905      	ldr	r1, [sp, #20]
90017b74:	eba3 0308 	sub.w	r3, r3, r8
90017b78:	eba2 020e 	sub.w	r2, r2, lr
90017b7c:	eba9 0000 	sub.w	r0, r9, r0
90017b80:	ebaa 0401 	sub.w	r4, sl, r1
90017b84:	b29b      	uxth	r3, r3
90017b86:	b2a4      	uxth	r4, r4
90017b88:	b219      	sxth	r1, r3
90017b8a:	b225      	sxth	r5, r4
90017b8c:	4348      	muls	r0, r1
90017b8e:	436a      	muls	r2, r5
90017b90:	4282      	cmp	r2, r0
90017b92:	9a02      	ldr	r2, [sp, #8]
90017b94:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017b98:	445a      	add	r2, fp
90017b9a:	dc06      	bgt.n	90017baa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
90017b9c:	9b07      	ldr	r3, [sp, #28]
90017b9e:	44a4      	add	ip, r4
90017ba0:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90017ba4:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90017ba8:	e75e      	b.n	90017a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90017baa:	9904      	ldr	r1, [sp, #16]
90017bac:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90017bb0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90017bb4:	4433      	add	r3, r6
90017bb6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017bba:	e5dd      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017bbc:	9f06      	ldr	r7, [sp, #24]
90017bbe:	9b04      	ldr	r3, [sp, #16]
90017bc0:	1bc9      	subs	r1, r1, r7
90017bc2:	fa0f f78a 	sxth.w	r7, sl
90017bc6:	b289      	uxth	r1, r1
90017bc8:	429f      	cmp	r7, r3
90017bca:	fa0f fe81 	sxth.w	lr, r1
90017bce:	dd23      	ble.n	90017c18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
90017bd0:	9a05      	ldr	r2, [sp, #20]
90017bd2:	eba9 0000 	sub.w	r0, r9, r0
90017bd6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017bda:	ebaa 0202 	sub.w	r2, sl, r2
90017bde:	9d07      	ldr	r5, [sp, #28]
90017be0:	fb0e f000 	mul.w	r0, lr, r0
90017be4:	b292      	uxth	r2, r2
90017be6:	eba5 0a03 	sub.w	sl, r5, r3
90017bea:	9b02      	ldr	r3, [sp, #8]
90017bec:	b214      	sxth	r4, r2
90017bee:	00db      	lsls	r3, r3, #3
90017bf0:	fb04 fa0a 	mul.w	sl, r4, sl
90017bf4:	445b      	add	r3, fp
90017bf6:	4550      	cmp	r0, sl
90017bf8:	db03      	blt.n	90017c02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90017bfa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90017bfe:	4494      	add	ip, r2
90017c00:	e732      	b.n	90017a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90017c02:	9a04      	ldr	r2, [sp, #16]
90017c04:	4431      	add	r1, r6
90017c06:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90017c0a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90017c0e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90017c12:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90017c16:	e75c      	b.n	90017ad2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
90017c18:	9b08      	ldr	r3, [sp, #32]
90017c1a:	2d06      	cmp	r5, #6
90017c1c:	eba3 0308 	sub.w	r3, r3, r8
90017c20:	b29b      	uxth	r3, r3
90017c22:	b218      	sxth	r0, r3
90017c24:	d813      	bhi.n	90017c4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
90017c26:	9b07      	ldr	r3, [sp, #28]
90017c28:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90017c2c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90017c30:	1c6b      	adds	r3, r5, #1
90017c32:	9901      	ldr	r1, [sp, #4]
90017c34:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017c38:	9b01      	ldr	r3, [sp, #4]
90017c3a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90017c3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017c42:	805a      	strh	r2, [r3, #2]
90017c44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017c46:	f8a3 e006 	strh.w	lr, [r3, #6]
90017c4a:	809a      	strh	r2, [r3, #4]
90017c4c:	e75f      	b.n	90017b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90017c4e:	9c02      	ldr	r4, [sp, #8]
90017c50:	4570      	cmp	r0, lr
90017c52:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90017c56:	db0d      	blt.n	90017c74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90017c58:	4431      	add	r1, r6
90017c5a:	9b06      	ldr	r3, [sp, #24]
90017c5c:	445c      	add	r4, fp
90017c5e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90017c62:	b289      	uxth	r1, r1
90017c64:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90017c68:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017c6c:	4419      	add	r1, r3
90017c6e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90017c72:	e581      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017c74:	445c      	add	r4, fp
90017c76:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90017c7a:	e79b      	b.n	90017bb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
90017c7c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90017c80:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90017c84:	1e65      	subs	r5, r4, #1
90017c86:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90017c8a:	b2ad      	uxth	r5, r5
90017c8c:	42b5      	cmp	r5, r6
90017c8e:	d044      	beq.n	90017d1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
90017c90:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90017c94:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90017c98:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90017c9c:	4282      	cmp	r2, r0
90017c9e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90017ca2:	d11f      	bne.n	90017ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90017ca4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90017ca8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017cac:	459c      	cmp	ip, r3
90017cae:	d119      	bne.n	90017ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90017cb0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90017cb4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90017cb8:	19d8      	adds	r0, r3, r7
90017cba:	b200      	sxth	r0, r0
90017cbc:	4288      	cmp	r0, r1
90017cbe:	d109      	bne.n	90017cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90017cc0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90017cc4:	4413      	add	r3, r2
90017cc6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90017cca:	4629      	mov	r1, r5
90017ccc:	9801      	ldr	r0, [sp, #4]
90017cce:	f7ff fd23 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017cd2:	e003      	b.n	90017cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017cd4:	4411      	add	r1, r2
90017cd6:	b209      	sxth	r1, r1
90017cd8:	42b9      	cmp	r1, r7
90017cda:	d0f3      	beq.n	90017cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90017cdc:	3d01      	subs	r5, #1
90017cde:	3c08      	subs	r4, #8
90017ce0:	b2ad      	uxth	r5, r5
90017ce2:	e7d3      	b.n	90017c8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
90017ce4:	42b9      	cmp	r1, r7
90017ce6:	d1f9      	bne.n	90017cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017ce8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90017cec:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017cf0:	4299      	cmp	r1, r3
90017cf2:	d1f3      	bne.n	90017cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017cf4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017cf8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017cfc:	181f      	adds	r7, r3, r0
90017cfe:	b23f      	sxth	r7, r7
90017d00:	42ba      	cmp	r2, r7
90017d02:	d105      	bne.n	90017d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
90017d04:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90017d08:	440b      	add	r3, r1
90017d0a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017d0e:	e7dc      	b.n	90017cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
90017d10:	440a      	add	r2, r1
90017d12:	b212      	sxth	r2, r2
90017d14:	4290      	cmp	r0, r2
90017d16:	d1e1      	bne.n	90017cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017d18:	e7f6      	b.n	90017d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
90017d1a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90017d1e:	2e07      	cmp	r6, #7
90017d20:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90017d24:	d812      	bhi.n	90017d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
90017d26:	1c75      	adds	r5, r6, #1
90017d28:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90017d2c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90017d30:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90017d34:	9d01      	ldr	r5, [sp, #4]
90017d36:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90017d3a:	442c      	add	r4, r5
90017d3c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90017d40:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90017d44:	8061      	strh	r1, [r4, #2]
90017d46:	80a2      	strh	r2, [r4, #4]
90017d48:	80e3      	strh	r3, [r4, #6]
90017d4a:	e57f      	b.n	9001784c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017d4c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90017d50:	3e01      	subs	r6, #1
90017d52:	445c      	add	r4, fp
90017d54:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90017d58:	f04f 37ff 	mov.w	r7, #4294967295
90017d5c:	2500      	movs	r5, #0
90017d5e:	9305      	str	r3, [sp, #20]
90017d60:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017d64:	1e72      	subs	r2, r6, #1
90017d66:	9302      	str	r3, [sp, #8]
90017d68:	4691      	mov	r9, r2
90017d6a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017d6e:	9304      	str	r3, [sp, #16]
90017d70:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90017d74:	f1b9 3fff 	cmp.w	r9, #4294967295
90017d78:	6818      	ldr	r0, [r3, #0]
90017d7a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017d7e:	9207      	str	r2, [sp, #28]
90017d80:	bf16      	itet	ne
90017d82:	9905      	ldrne	r1, [sp, #20]
90017d84:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017d88:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90017d8c:	9306      	str	r3, [sp, #24]
90017d8e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90017d92:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017d96:	fb18 f801 	smulbb	r8, r8, r1
90017d9a:	6859      	ldr	r1, [r3, #4]
90017d9c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90017da0:	4671      	mov	r1, lr
90017da2:	a80c      	add	r0, sp, #48	@ 0x30
90017da4:	f7ff fb18 	bl	900173d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017da8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90017dac:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90017db0:	f04f 0c08 	mov.w	ip, #8
90017db4:	9b04      	ldr	r3, [sp, #16]
90017db6:	9a02      	ldr	r2, [sp, #8]
90017db8:	fb10 f001 	smulbb	r0, r0, r1
90017dbc:	fb02 8803 	mla	r8, r2, r3, r8
90017dc0:	eba0 0108 	sub.w	r1, r0, r8
90017dc4:	fb90 f0fc 	sdiv	r0, r0, ip
90017dc8:	4288      	cmp	r0, r1
90017dca:	dc20      	bgt.n	90017e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90017dcc:	4551      	cmp	r1, sl
90017dce:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90017dd2:	da03      	bge.n	90017ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90017dd4:	b1d9      	cbz	r1, 90017e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90017dd6:	468a      	mov	sl, r1
90017dd8:	464f      	mov	r7, r9
90017dda:	4635      	mov	r5, r6
90017ddc:	f109 39ff 	add.w	r9, r9, #4294967295
90017de0:	f119 0f02 	cmn.w	r9, #2
90017de4:	d1c6      	bne.n	90017d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90017de6:	4616      	mov	r6, r2
90017de8:	3201      	adds	r2, #1
90017dea:	f1a4 0408 	sub.w	r4, r4, #8
90017dee:	d1b7      	bne.n	90017d60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90017df0:	9b01      	ldr	r3, [sp, #4]
90017df2:	b2ac      	uxth	r4, r5
90017df4:	00ed      	lsls	r5, r5, #3
90017df6:	1958      	adds	r0, r3, r5
90017df8:	1c7b      	adds	r3, r7, #1
90017dfa:	d10b      	bne.n	90017e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90017dfc:	4601      	mov	r1, r0
90017dfe:	9803      	ldr	r0, [sp, #12]
90017e00:	f7ff faea 	bl	900173d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017e04:	4621      	mov	r1, r4
90017e06:	9801      	ldr	r0, [sp, #4]
90017e08:	f7ff fc86 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017e0c:	e4b4      	b.n	90017778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017e0e:	464f      	mov	r7, r9
90017e10:	4635      	mov	r5, r6
90017e12:	e7ed      	b.n	90017df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90017e14:	9b01      	ldr	r3, [sp, #4]
90017e16:	00ff      	lsls	r7, r7, #3
90017e18:	445d      	add	r5, fp
90017e1a:	19d9      	adds	r1, r3, r7
90017e1c:	445f      	add	r7, fp
90017e1e:	f7ff fadb 	bl	900173d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017e22:	9b03      	ldr	r3, [sp, #12]
90017e24:	cb03      	ldmia	r3!, {r0, r1}
90017e26:	9b03      	ldr	r3, [sp, #12]
90017e28:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90017e2c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90017e30:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017e34:	6869      	ldr	r1, [r5, #4]
90017e36:	c303      	stmia	r3!, {r0, r1}
90017e38:	e7e4      	b.n	90017e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90017e3a:	bf00      	nop

90017e3c <_ZN8touchgfx11Application15drawCachedAreasEv>:
90017e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e40:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90017e44:	b0a1      	sub	sp, #132	@ 0x84
90017e46:	4604      	mov	r4, r0
90017e48:	4630      	mov	r0, r6
90017e4a:	f7f9 fb4a 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90017e4e:	4605      	mov	r5, r0
90017e50:	b948      	cbnz	r0, 90017e66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90017e52:	6823      	ldr	r3, [r4, #0]
90017e54:	4620      	mov	r0, r4
90017e56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017e58:	e896 0006 	ldmia.w	r6, {r1, r2}
90017e5c:	4798      	blx	r3
90017e5e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90017e62:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90017e66:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017e6a:	2b00      	cmp	r3, #0
90017e6c:	d149      	bne.n	90017f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90017e6e:	4bb2      	ldr	r3, [pc, #712]	@ (90018138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017e70:	681b      	ldr	r3, [r3, #0]
90017e72:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90017e76:	1ebb      	subs	r3, r7, #2
90017e78:	425f      	negs	r7, r3
90017e7a:	415f      	adcs	r7, r3
90017e7c:	4baf      	ldr	r3, [pc, #700]	@ (9001813c <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90017e7e:	681b      	ldr	r3, [r3, #0]
90017e80:	2b00      	cmp	r3, #0
90017e82:	d040      	beq.n	90017f06 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90017e84:	4dae      	ldr	r5, [pc, #696]	@ (90018140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90017e86:	4628      	mov	r0, r5
90017e88:	f7f9 fb2b 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90017e8c:	4606      	mov	r6, r0
90017e8e:	2800      	cmp	r0, #0
90017e90:	d139      	bne.n	90017f06 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90017e92:	4628      	mov	r0, r5
90017e94:	f7ff f932 	bl	900170fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017e98:	6823      	ldr	r3, [r4, #0]
90017e9a:	6829      	ldr	r1, [r5, #0]
90017e9c:	4620      	mov	r0, r4
90017e9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017ea0:	686a      	ldr	r2, [r5, #4]
90017ea2:	4798      	blx	r3
90017ea4:	802e      	strh	r6, [r5, #0]
90017ea6:	806e      	strh	r6, [r5, #2]
90017ea8:	80ae      	strh	r6, [r5, #4]
90017eaa:	80ee      	strh	r6, [r5, #6]
90017eac:	af0f      	add	r7, sp, #60	@ 0x3c
90017eae:	4ea5      	ldr	r6, [pc, #660]	@ (90018144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90017eb0:	4638      	mov	r0, r7
90017eb2:	f7ff fbd6 	bl	90017662 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90017eb6:	8835      	ldrh	r5, [r6, #0]
90017eb8:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90017ebc:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90017ec0:	462b      	mov	r3, r5
90017ec2:	4563      	cmp	r3, ip
90017ec4:	d224      	bcs.n	90017f10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90017ec6:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90017eca:	2907      	cmp	r1, #7
90017ecc:	d816      	bhi.n	90017efc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90017ece:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90017ed2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90017ed6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90017eda:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90017ede:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90017ee2:	1c4a      	adds	r2, r1, #1
90017ee4:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90017ee8:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90017eec:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90017ef0:	f8a2 a002 	strh.w	sl, [r2, #2]
90017ef4:	f8a2 8004 	strh.w	r8, [r2, #4]
90017ef8:	f8a2 e006 	strh.w	lr, [r2, #6]
90017efc:	3301      	adds	r3, #1
90017efe:	b29b      	uxth	r3, r3
90017f00:	e7df      	b.n	90017ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90017f02:	2701      	movs	r7, #1
90017f04:	e7ba      	b.n	90017e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90017f06:	2f00      	cmp	r7, #0
90017f08:	d1d0      	bne.n	90017eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90017f0a:	b021      	add	sp, #132	@ 0x84
90017f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017f10:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90017f14:	42ab      	cmp	r3, r5
90017f16:	d90c      	bls.n	90017f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90017f18:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90017f1c:	6822      	ldr	r2, [r4, #0]
90017f1e:	3501      	adds	r5, #1
90017f20:	4620      	mov	r0, r4
90017f22:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90017f24:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90017f28:	b2ad      	uxth	r5, r5
90017f2a:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90017f2e:	47b8      	blx	r7
90017f30:	e7ee      	b.n	90017f10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90017f32:	4d81      	ldr	r5, [pc, #516]	@ (90018138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017f34:	6828      	ldr	r0, [r5, #0]
90017f36:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90017f3a:	2b01      	cmp	r3, #1
90017f3c:	f040 813d 	bne.w	900181ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90017f40:	4a81      	ldr	r2, [pc, #516]	@ (90018148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90017f42:	8833      	ldrh	r3, [r6, #0]
90017f44:	7812      	ldrb	r2, [r2, #0]
90017f46:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90017f4a:	2a01      	cmp	r2, #1
90017f4c:	d014      	beq.n	90017f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90017f4e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90017f52:	f04f 0900 	mov.w	r9, #0
90017f56:	32ae      	adds	r2, #174	@ 0xae
90017f58:	4283      	cmp	r3, r0
90017f5a:	f102 0208 	add.w	r2, r2, #8
90017f5e:	f280 8083 	bge.w	90018068 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90017f62:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90017f66:	3301      	adds	r3, #1
90017f68:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90017f6c:	4439      	add	r1, r7
90017f6e:	b209      	sxth	r1, r1
90017f70:	4589      	cmp	r9, r1
90017f72:	bfb8      	it	lt
90017f74:	4689      	movlt	r9, r1
90017f76:	e7ef      	b.n	90017f58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90017f78:	4f74      	ldr	r7, [pc, #464]	@ (9001814c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90017f7a:	883a      	ldrh	r2, [r7, #0]
90017f7c:	4693      	mov	fp, r2
90017f7e:	4283      	cmp	r3, r0
90017f80:	da08      	bge.n	90017f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90017f82:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90017f86:	3301      	adds	r3, #1
90017f88:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90017f8c:	458b      	cmp	fp, r1
90017f8e:	bfa8      	it	ge
90017f90:	468b      	movge	fp, r1
90017f92:	e7f4      	b.n	90017f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90017f94:	2a0f      	cmp	r2, #15
90017f96:	f04f 0300 	mov.w	r3, #0
90017f9a:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90018150 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90017f9e:	bf8c      	ite	hi
90017fa0:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90017fa4:	f04f 0801 	movls.w	r8, #1
90017fa8:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90017fac:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017fb0:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90017fb4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017fb8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90017fbc:	6828      	ldr	r0, [r5, #0]
90017fbe:	455b      	cmp	r3, fp
90017fc0:	f340 80c8 	ble.w	90018154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017fc4:	6803      	ldr	r3, [r0, #0]
90017fc6:	f8b7 a000 	ldrh.w	sl, [r7]
90017fca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017fce:	4798      	blx	r3
90017fd0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90017fd4:	ebaa 0000 	sub.w	r0, sl, r0
90017fd8:	682b      	ldr	r3, [r5, #0]
90017fda:	ebac 0e08 	sub.w	lr, ip, r8
90017fde:	b280      	uxth	r0, r0
90017fe0:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90017fe4:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90017fe8:	4570      	cmp	r0, lr
90017fea:	dd05      	ble.n	90017ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017fec:	4558      	cmp	r0, fp
90017fee:	dd03      	ble.n	90017ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017ff0:	b901      	cbnz	r1, 90017ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017ff2:	b392      	cbz	r2, 9001805a <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90017ff4:	4658      	mov	r0, fp
90017ff6:	e006      	b.n	90018006 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90017ff8:	2900      	cmp	r1, #0
90017ffa:	d1fb      	bne.n	90017ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017ffc:	2a00      	cmp	r2, #0
90017ffe:	d1f9      	bne.n	90017ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90018000:	4558      	cmp	r0, fp
90018002:	bfb8      	it	lt
90018004:	4658      	movlt	r0, fp
90018006:	f9b9 3000 	ldrsh.w	r3, [r9]
9001800a:	2200      	movs	r2, #0
9001800c:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90018010:	ebac 0000 	sub.w	r0, ip, r0
90018014:	f8b6 a000 	ldrh.w	sl, [r6]
90018018:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001801c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90018020:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90018024:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018028:	4553      	cmp	r3, sl
9001802a:	ddc5      	ble.n	90017fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
9001802c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90018030:	ab0d      	add	r3, sp, #52	@ 0x34
90018032:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018036:	6851      	ldr	r1, [r2, #4]
90018038:	c303      	stmia	r3!, {r0, r1}
9001803a:	a80d      	add	r0, sp, #52	@ 0x34
9001803c:	a90b      	add	r1, sp, #44	@ 0x2c
9001803e:	f7f9 fa0d 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90018042:	a80d      	add	r0, sp, #52	@ 0x34
90018044:	f7f9 fa4d 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90018048:	b920      	cbnz	r0, 90018054 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
9001804a:	6823      	ldr	r3, [r4, #0]
9001804c:	a90d      	add	r1, sp, #52	@ 0x34
9001804e:	4620      	mov	r0, r4
90018050:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018052:	4798      	blx	r3
90018054:	f10a 0a01 	add.w	sl, sl, #1
90018058:	e7e4      	b.n	90018024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
9001805a:	681a      	ldr	r2, [r3, #0]
9001805c:	2101      	movs	r1, #1
9001805e:	4618      	mov	r0, r3
90018060:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90018064:	4790      	blx	r2
90018066:	e7a7      	b.n	90017fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90018068:	4b39      	ldr	r3, [pc, #228]	@ (90018150 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
9001806a:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 9001814c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
9001806e:	881f      	ldrh	r7, [r3, #0]
90018070:	2300      	movs	r3, #0
90018072:	2f0f      	cmp	r7, #15
90018074:	bf8c      	ite	hi
90018076:	08ff      	lsrhi	r7, r7, #3
90018078:	2701      	movls	r7, #1
9001807a:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
9001807e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018082:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90018086:	6828      	ldr	r0, [r5, #0]
90018088:	4413      	add	r3, r2
9001808a:	b21b      	sxth	r3, r3
9001808c:	454b      	cmp	r3, r9
9001808e:	da61      	bge.n	90018154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018090:	6803      	ldr	r3, [r0, #0]
90018092:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018096:	4798      	blx	r3
90018098:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
9001809c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900180a0:	682a      	ldr	r2, [r5, #0]
900180a2:	4473      	add	r3, lr
900180a4:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
900180a8:	b21b      	sxth	r3, r3
900180aa:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
900180ae:	eb03 0e07 	add.w	lr, r3, r7
900180b2:	4570      	cmp	r0, lr
900180b4:	da0d      	bge.n	900180d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
900180b6:	4548      	cmp	r0, r9
900180b8:	da0b      	bge.n	900180d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
900180ba:	f1bc 0f00 	cmp.w	ip, #0
900180be:	d138      	bne.n	90018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
900180c0:	2900      	cmp	r1, #0
900180c2:	d136      	bne.n	90018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
900180c4:	6813      	ldr	r3, [r2, #0]
900180c6:	2101      	movs	r1, #1
900180c8:	4610      	mov	r0, r2
900180ca:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
900180ce:	4798      	blx	r3
900180d0:	e7d5      	b.n	9001807e <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
900180d2:	f1bc 0f00 	cmp.w	ip, #0
900180d6:	d12c      	bne.n	90018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
900180d8:	bb59      	cbnz	r1, 90018132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
900180da:	4548      	cmp	r0, r9
900180dc:	bfa8      	it	ge
900180de:	4648      	movge	r0, r9
900180e0:	f9b8 2000 	ldrsh.w	r2, [r8]
900180e4:	2100      	movs	r1, #0
900180e6:	1ac0      	subs	r0, r0, r3
900180e8:	f8b6 a000 	ldrh.w	sl, [r6]
900180ec:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900180f0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900180f4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900180f8:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
900180fc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018100:	4553      	cmp	r3, sl
90018102:	ddbc      	ble.n	9001807e <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90018104:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90018108:	ab0d      	add	r3, sp, #52	@ 0x34
9001810a:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001810e:	6851      	ldr	r1, [r2, #4]
90018110:	c303      	stmia	r3!, {r0, r1}
90018112:	a80d      	add	r0, sp, #52	@ 0x34
90018114:	a90b      	add	r1, sp, #44	@ 0x2c
90018116:	f7f9 f9a1 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
9001811a:	a80d      	add	r0, sp, #52	@ 0x34
9001811c:	f7f9 f9e1 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90018120:	b920      	cbnz	r0, 9001812c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90018122:	6823      	ldr	r3, [r4, #0]
90018124:	a90d      	add	r1, sp, #52	@ 0x34
90018126:	4620      	mov	r0, r4
90018128:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001812a:	4798      	blx	r3
9001812c:	f10a 0a01 	add.w	sl, sl, #1
90018130:	e7e4      	b.n	900180fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90018132:	4648      	mov	r0, r9
90018134:	e7d4      	b.n	900180e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90018136:	bf00      	nop
90018138:	24021d64 	.word	0x24021d64
9001813c:	24021da4 	.word	0x24021da4
90018140:	24021db0 	.word	0x24021db0
90018144:	24000088 	.word	0x24000088
90018148:	24021d5c 	.word	0x24021d5c
9001814c:	24021d58 	.word	0x24021d58
90018150:	24021d5a 	.word	0x24021d5a
90018154:	6828      	ldr	r0, [r5, #0]
90018156:	6803      	ldr	r3, [r0, #0]
90018158:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001815a:	4798      	blx	r3
9001815c:	4ba4      	ldr	r3, [pc, #656]	@ (900183f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
9001815e:	781b      	ldrb	r3, [r3, #0]
90018160:	2b00      	cmp	r3, #0
90018162:	f43f aed2 	beq.w	90017f0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90018166:	2300      	movs	r3, #0
90018168:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
9001816c:	a80f      	add	r0, sp, #60	@ 0x3c
9001816e:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90018172:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90018176:	4b9f      	ldr	r3, [pc, #636]	@ (900183f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90018178:	881b      	ldrh	r3, [r3, #0]
9001817a:	42b3      	cmp	r3, r6
9001817c:	f4bf aec5 	bcs.w	90017f0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90018180:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90018184:	2907      	cmp	r1, #7
90018186:	d815      	bhi.n	900181b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90018188:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001818c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90018190:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90018194:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90018198:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
9001819c:	1c4a      	adds	r2, r1, #1
9001819e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
900181a2:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
900181a6:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
900181aa:	f8a2 e002 	strh.w	lr, [r2, #2]
900181ae:	f8a2 c004 	strh.w	ip, [r2, #4]
900181b2:	80d7      	strh	r7, [r2, #6]
900181b4:	3301      	adds	r3, #1
900181b6:	b29b      	uxth	r3, r3
900181b8:	e7df      	b.n	9001817a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
900181ba:	2b02      	cmp	r3, #2
900181bc:	f040 80ce 	bne.w	9001835c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
900181c0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900181c4:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
900181c8:	9308      	str	r3, [sp, #32]
900181ca:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
900181ce:	f10b 37ff 	add.w	r7, fp, #4294967295
900181d2:	9307      	str	r3, [sp, #28]
900181d4:	b2bf      	uxth	r7, r7
900181d6:	6803      	ldr	r3, [r0, #0]
900181d8:	fa0f f887 	sxth.w	r8, r7
900181dc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
900181e0:	4798      	blx	r3
900181e2:	4b85      	ldr	r3, [pc, #532]	@ (900183f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
900181e4:	4682      	mov	sl, r0
900181e6:	2000      	movs	r0, #0
900181e8:	881b      	ldrh	r3, [r3, #0]
900181ea:	9302      	str	r3, [sp, #8]
900181ec:	4b83      	ldr	r3, [pc, #524]	@ (900183fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
900181ee:	881e      	ldrh	r6, [r3, #0]
900181f0:	4b83      	ldr	r3, [pc, #524]	@ (90018400 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
900181f2:	781b      	ldrb	r3, [r3, #0]
900181f4:	2b01      	cmp	r3, #1
900181f6:	bf1e      	ittt	ne
900181f8:	9b02      	ldrne	r3, [sp, #8]
900181fa:	9602      	strne	r6, [sp, #8]
900181fc:	461e      	movne	r6, r3
900181fe:	f7e8 fd49 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90018202:	fb96 fbfb 	sdiv	fp, r6, fp
90018206:	fb0b f808 	mul.w	r8, fp, r8
9001820a:	45c2      	cmp	sl, r8
9001820c:	da0c      	bge.n	90018228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
9001820e:	6828      	ldr	r0, [r5, #0]
90018210:	210a      	movs	r1, #10
90018212:	6803      	ldr	r3, [r0, #0]
90018214:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90018218:	4798      	blx	r3
9001821a:	6828      	ldr	r0, [r5, #0]
9001821c:	6803      	ldr	r3, [r0, #0]
9001821e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018222:	4798      	blx	r3
90018224:	4682      	mov	sl, r0
90018226:	e7f0      	b.n	9001820a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90018228:	2000      	movs	r0, #0
9001822a:	f04f 0800 	mov.w	r8, #0
9001822e:	f7e8 fd65 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90018232:	fa1f f38b 	uxth.w	r3, fp
90018236:	4645      	mov	r5, r8
90018238:	fb17 f703 	smulbb	r7, r7, r3
9001823c:	9304      	str	r3, [sp, #16]
9001823e:	b2bb      	uxth	r3, r7
90018240:	4f70      	ldr	r7, [pc, #448]	@ (90018404 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90018242:	9305      	str	r3, [sp, #20]
90018244:	0973      	lsrs	r3, r6, #5
90018246:	9306      	str	r3, [sp, #24]
90018248:	42b5      	cmp	r5, r6
9001824a:	d087      	beq.n	9001815c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001824c:	6838      	ldr	r0, [r7, #0]
9001824e:	6803      	ldr	r3, [r0, #0]
90018250:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018254:	4798      	blx	r3
90018256:	4582      	cmp	sl, r0
90018258:	4681      	mov	r9, r0
9001825a:	d907      	bls.n	9001826c <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
9001825c:	f1b8 0f00 	cmp.w	r8, #0
90018260:	d007      	beq.n	90018272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90018262:	6838      	ldr	r0, [r7, #0]
90018264:	6803      	ldr	r3, [r0, #0]
90018266:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9001826a:	e776      	b.n	9001815a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
9001826c:	f1b8 0f00 	cmp.w	r8, #0
90018270:	d003      	beq.n	9001827a <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90018272:	454d      	cmp	r5, r9
90018274:	d3f5      	bcc.n	90018262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90018276:	f04f 0801 	mov.w	r8, #1
9001827a:	9a04      	ldr	r2, [sp, #16]
9001827c:	fb95 f3fb 	sdiv	r3, r5, fp
90018280:	9303      	str	r3, [sp, #12]
90018282:	3301      	adds	r3, #1
90018284:	fb13 f302 	smulbb	r3, r3, r2
90018288:	b299      	uxth	r1, r3
9001828a:	f1b8 0f00 	cmp.w	r8, #0
9001828e:	d04d      	beq.n	9001832c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90018290:	eb09 030b 	add.w	r3, r9, fp
90018294:	42b3      	cmp	r3, r6
90018296:	bfa8      	it	ge
90018298:	4633      	movge	r3, r6
9001829a:	b29b      	uxth	r3, r3
9001829c:	9807      	ldr	r0, [sp, #28]
9001829e:	428b      	cmp	r3, r1
900182a0:	bf94      	ite	ls
900182a2:	ebc5 0203 	rsbls	r2, r5, r3
900182a6:	ebc5 0201 	rsbhi	r2, r5, r1
900182aa:	4282      	cmp	r2, r0
900182ac:	bfa8      	it	ge
900182ae:	4602      	movge	r2, r0
900182b0:	9808      	ldr	r0, [sp, #32]
900182b2:	fa1f fa82 	uxth.w	sl, r2
900182b6:	4582      	cmp	sl, r0
900182b8:	d205      	bcs.n	900182c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
900182ba:	fa15 f082 	uxtah	r0, r5, r2
900182be:	4286      	cmp	r6, r0
900182c0:	d001      	beq.n	900182c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
900182c2:	4299      	cmp	r1, r3
900182c4:	d23f      	bcs.n	90018346 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
900182c6:	2001      	movs	r0, #1
900182c8:	9209      	str	r2, [sp, #36]	@ 0x24
900182ca:	f7e8 fce3 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900182ce:	6838      	ldr	r0, [r7, #0]
900182d0:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
900182d4:	6803      	ldr	r3, [r0, #0]
900182d6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
900182da:	4798      	blx	r3
900182dc:	4b48      	ldr	r3, [pc, #288]	@ (90018400 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
900182de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900182e0:	2000      	movs	r0, #0
900182e2:	781b      	ldrb	r3, [r3, #0]
900182e4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
900182e8:	b212      	sxth	r2, r2
900182ea:	2b01      	cmp	r3, #1
900182ec:	d122      	bne.n	90018334 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
900182ee:	1b73      	subs	r3, r6, r5
900182f0:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
900182f4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
900182f8:	eba3 030a 	sub.w	r3, r3, sl
900182fc:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90018300:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90018304:	6823      	ldr	r3, [r4, #0]
90018306:	a90d      	add	r1, sp, #52	@ 0x34
90018308:	4620      	mov	r0, r4
9001830a:	4455      	add	r5, sl
9001830c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001830e:	4798      	blx	r3
90018310:	6838      	ldr	r0, [r7, #0]
90018312:	9b03      	ldr	r3, [sp, #12]
90018314:	b2ad      	uxth	r5, r5
90018316:	4259      	negs	r1, r3
90018318:	6803      	ldr	r3, [r0, #0]
9001831a:	b209      	sxth	r1, r1
9001831c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90018320:	4798      	blx	r3
90018322:	2001      	movs	r0, #1
90018324:	f7e8 fcea 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90018328:	46ca      	mov	sl, r9
9001832a:	e78d      	b.n	90018248 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
9001832c:	9b05      	ldr	r3, [sp, #20]
9001832e:	eba9 0303 	sub.w	r3, r9, r3
90018332:	e7b2      	b.n	9001829a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90018334:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90018338:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
9001833c:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90018340:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90018344:	e7de      	b.n	90018304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90018346:	6838      	ldr	r0, [r7, #0]
90018348:	6803      	ldr	r3, [r0, #0]
9001834a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001834c:	4798      	blx	r3
9001834e:	6838      	ldr	r0, [r7, #0]
90018350:	9906      	ldr	r1, [sp, #24]
90018352:	6803      	ldr	r3, [r0, #0]
90018354:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90018358:	4798      	blx	r3
9001835a:	e7e5      	b.n	90018328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
9001835c:	2b03      	cmp	r3, #3
9001835e:	f040 8133 	bne.w	900185c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90018362:	4b27      	ldr	r3, [pc, #156]	@ (90018400 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90018364:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90018368:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
9001836c:	781b      	ldrb	r3, [r3, #0]
9001836e:	2b01      	cmp	r3, #1
90018370:	f000 8095 	beq.w	9001849e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90018374:	8832      	ldrh	r2, [r6, #0]
90018376:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
9001837a:	3201      	adds	r2, #1
9001837c:	b292      	uxth	r2, r2
9001837e:	2900      	cmp	r1, #0
90018380:	f43f aeec 	beq.w	9001815c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90018384:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90018388:	4694      	mov	ip, r2
9001838a:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
9001838e:	f04f 0800 	mov.w	r8, #0
90018392:	441d      	add	r5, r3
90018394:	b22d      	sxth	r5, r5
90018396:	fa1f f38c 	uxth.w	r3, ip
9001839a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001839e:	4299      	cmp	r1, r3
900183a0:	f240 80bc 	bls.w	9001851c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
900183a4:	4427      	add	r7, r4
900183a6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900183aa:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
900183ae:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
900183b2:	4283      	cmp	r3, r0
900183b4:	f340 809e 	ble.w	900184f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
900183b8:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
900183bc:	46e0      	mov	r8, ip
900183be:	4405      	add	r5, r0
900183c0:	b22d      	sxth	r5, r5
900183c2:	429d      	cmp	r5, r3
900183c4:	bfa8      	it	ge
900183c6:	461d      	movge	r5, r3
900183c8:	f10c 0c01 	add.w	ip, ip, #1
900183cc:	e7e3      	b.n	90018396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
900183ce:	d10a      	bne.n	900183e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
900183d0:	4562      	cmp	r2, ip
900183d2:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
900183d6:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
900183da:	bfb8      	it	lt
900183dc:	4662      	movlt	r2, ip
900183de:	4288      	cmp	r0, r1
900183e0:	bfb8      	it	lt
900183e2:	4698      	movlt	r8, r3
900183e4:	e084      	b.n	900184f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
900183e6:	428a      	cmp	r2, r1
900183e8:	bfb8      	it	lt
900183ea:	460a      	movlt	r2, r1
900183ec:	e080      	b.n	900184f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
900183ee:	bf00      	nop
900183f0:	24021d62 	.word	0x24021d62
900183f4:	24000088 	.word	0x24000088
900183f8:	24021d5a 	.word	0x24021d5a
900183fc:	24021d58 	.word	0x24021d58
90018400:	24021d5c 	.word	0x24021d5c
90018404:	24021d64 	.word	0x24021d64
90018408:	19e1      	adds	r1, r4, r7
9001840a:	ab0d      	add	r3, sp, #52	@ 0x34
9001840c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90018410:	6849      	ldr	r1, [r1, #4]
90018412:	c303      	stmia	r3!, {r0, r1}
90018414:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
90018418:	a80d      	add	r0, sp, #52	@ 0x34
9001841a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001841e:	454b      	cmp	r3, r9
90018420:	440b      	add	r3, r1
90018422:	bfb8      	it	lt
90018424:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
90018428:	1a9b      	subs	r3, r3, r2
9001842a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001842e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90018432:	f7fe fe7d 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90018436:	a80d      	add	r0, sp, #52	@ 0x34
90018438:	f7f9 f853 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
9001843c:	bb78      	cbnz	r0, 9001849e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
9001843e:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
90018442:	4427      	add	r7, r4
90018444:	6828      	ldr	r0, [r5, #0]
90018446:	45cc      	cmp	ip, r9
90018448:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001844c:	f8d0 e000 	ldr.w	lr, [r0]
90018450:	bfd8      	it	le
90018452:	fa1f fc8c 	uxthle.w	ip, ip
90018456:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
9001845a:	bfc8      	it	gt
9001845c:	fa1f fc89 	uxthgt.w	ip, r9
90018460:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90018464:	f8cd c000 	str.w	ip, [sp]
90018468:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
9001846c:	47d8      	blx	fp
9001846e:	4683      	mov	fp, r0
90018470:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018474:	a80d      	add	r0, sp, #52	@ 0x34
90018476:	f7fe fe41 	bl	900170fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001847a:	6823      	ldr	r3, [r4, #0]
9001847c:	4620      	mov	r0, r4
9001847e:	a90d      	add	r1, sp, #52	@ 0x34
90018480:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018482:	4798      	blx	r3
90018484:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
90018488:	eba0 000b 	sub.w	r0, r0, fp
9001848c:	b200      	sxth	r0, r0
9001848e:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
90018492:	b920      	cbnz	r0, 9001849e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90018494:	fa1f f188 	uxth.w	r1, r8
90018498:	4650      	mov	r0, sl
9001849a:	f7ff f93d 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001849e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900184a2:	f1bb 0f00 	cmp.w	fp, #0
900184a6:	f43f ae59 	beq.w	9001815c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900184aa:	8833      	ldrh	r3, [r6, #0]
900184ac:	f04f 0800 	mov.w	r8, #0
900184b0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900184b4:	3301      	adds	r3, #1
900184b6:	b29b      	uxth	r3, r3
900184b8:	b299      	uxth	r1, r3
900184ba:	ea4f 07c8 	mov.w	r7, r8, lsl #3
900184be:	458b      	cmp	fp, r1
900184c0:	d9a2      	bls.n	90018408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
900184c2:	4427      	add	r7, r4
900184c4:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900184c8:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
900184cc:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
900184d0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
900184d4:	4408      	add	r0, r1
900184d6:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
900184da:	4461      	add	r1, ip
900184dc:	b200      	sxth	r0, r0
900184de:	b209      	sxth	r1, r1
900184e0:	4288      	cmp	r0, r1
900184e2:	f6bf af74 	bge.w	900183ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
900184e6:	4584      	cmp	ip, r0
900184e8:	4662      	mov	r2, ip
900184ea:	4698      	mov	r8, r3
900184ec:	bfb8      	it	lt
900184ee:	4602      	movlt	r2, r0
900184f0:	3301      	adds	r3, #1
900184f2:	e7e1      	b.n	900184b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
900184f4:	d10e      	bne.n	90018514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
900184f6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
900184fa:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
900184fe:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90018502:	4473      	add	r3, lr
90018504:	b21b      	sxth	r3, r3
90018506:	429d      	cmp	r5, r3
90018508:	bfa8      	it	ge
9001850a:	461d      	movge	r5, r3
9001850c:	4287      	cmp	r7, r0
9001850e:	bfb8      	it	lt
90018510:	46e0      	movlt	r8, ip
90018512:	e759      	b.n	900183c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
90018514:	4285      	cmp	r5, r0
90018516:	bfa8      	it	ge
90018518:	4605      	movge	r5, r0
9001851a:	e755      	b.n	900183c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
9001851c:	eb0a 0007 	add.w	r0, sl, r7
90018520:	4427      	add	r7, r4
90018522:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
90018526:	45cb      	cmp	fp, r9
90018528:	bfbc      	itt	lt
9001852a:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
9001852e:	445d      	addlt	r5, fp
90018530:	e9cd 2102 	strd	r2, r1, [sp, #8]
90018534:	bfb8      	it	lt
90018536:	b22d      	sxthlt	r5, r5
90018538:	f7f8 ffd3 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
9001853c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90018540:	2800      	cmp	r0, #0
90018542:	f47f af1c 	bne.w	9001837e <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
90018546:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001854a:	fa1f fb8b 	uxth.w	fp, fp
9001854e:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018552:	1aad      	subs	r5, r5, r2
90018554:	4829      	ldr	r0, [pc, #164]	@ (900185fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
90018556:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001855a:	454d      	cmp	r5, r9
9001855c:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90018560:	6800      	ldr	r0, [r0, #0]
90018562:	bfa8      	it	ge
90018564:	464d      	movge	r5, r9
90018566:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
9001856a:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001856e:	b289      	uxth	r1, r1
90018570:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90018574:	b2ad      	uxth	r5, r5
90018576:	f8d0 c000 	ldr.w	ip, [r0]
9001857a:	b292      	uxth	r2, r2
9001857c:	455d      	cmp	r5, fp
9001857e:	bf94      	ite	ls
90018580:	9500      	strls	r5, [sp, #0]
90018582:	f8cd b000 	strhi.w	fp, [sp]
90018586:	b29b      	uxth	r3, r3
90018588:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
9001858c:	47a8      	blx	r5
9001858e:	6823      	ldr	r3, [r4, #0]
90018590:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018594:	a90d      	add	r1, sp, #52	@ 0x34
90018596:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018598:	4620      	mov	r0, r4
9001859a:	4798      	blx	r3
9001859c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
900185a0:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900185a4:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900185a8:	1a5b      	subs	r3, r3, r1
900185aa:	440a      	add	r2, r1
900185ac:	b21b      	sxth	r3, r3
900185ae:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900185b2:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900185b6:	2b00      	cmp	r3, #0
900185b8:	f47f aedc 	bne.w	90018374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900185bc:	fa1f f188 	uxth.w	r1, r8
900185c0:	4650      	mov	r0, sl
900185c2:	f7ff f8a9 	bl	90017718 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900185c6:	e6d5      	b.n	90018374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900185c8:	8835      	ldrh	r5, [r6, #0]
900185ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900185ce:	42ab      	cmp	r3, r5
900185d0:	f67f adc4 	bls.w	9001815c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900185d4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
900185d8:	ab0d      	add	r3, sp, #52	@ 0x34
900185da:	f852 0fac 	ldr.w	r0, [r2, #172]!
900185de:	6851      	ldr	r1, [r2, #4]
900185e0:	c303      	stmia	r3!, {r0, r1}
900185e2:	a80d      	add	r0, sp, #52	@ 0x34
900185e4:	f7f8 ff7d 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
900185e8:	b920      	cbnz	r0, 900185f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
900185ea:	6823      	ldr	r3, [r4, #0]
900185ec:	a90d      	add	r1, sp, #52	@ 0x34
900185ee:	4620      	mov	r0, r4
900185f0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900185f2:	4798      	blx	r3
900185f4:	3501      	adds	r5, #1
900185f6:	b2ad      	uxth	r5, r5
900185f8:	e7e7      	b.n	900185ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
900185fa:	bf00      	nop
900185fc:	24021d64 	.word	0x24021d64

90018600 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90018600:	4b03      	ldr	r3, [pc, #12]	@ (90018610 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90018602:	2200      	movs	r2, #0
90018604:	801a      	strh	r2, [r3, #0]
90018606:	805a      	strh	r2, [r3, #2]
90018608:	809a      	strh	r2, [r3, #4]
9001860a:	80da      	strh	r2, [r3, #6]
9001860c:	4770      	bx	lr
9001860e:	bf00      	nop
90018610:	24021db0 	.word	0x24021db0

90018614 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90018614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018618:	b09d      	sub	sp, #116	@ 0x74
9001861a:	4606      	mov	r6, r0
9001861c:	4614      	mov	r4, r2
9001861e:	468a      	mov	sl, r1
90018620:	a803      	add	r0, sp, #12
90018622:	461d      	mov	r5, r3
90018624:	f001 f926 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
90018628:	6833      	ldr	r3, [r6, #0]
9001862a:	4630      	mov	r0, r6
9001862c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90018630:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018632:	4798      	blx	r3
90018634:	6833      	ldr	r3, [r6, #0]
90018636:	4607      	mov	r7, r0
90018638:	4630      	mov	r0, r6
9001863a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001863c:	4798      	blx	r3
9001863e:	462a      	mov	r2, r5
90018640:	2500      	movs	r5, #0
90018642:	4621      	mov	r1, r4
90018644:	9000      	str	r0, [sp, #0]
90018646:	463b      	mov	r3, r7
90018648:	462c      	mov	r4, r5
9001864a:	46a9      	mov	r9, r5
9001864c:	46a8      	mov	r8, r5
9001864e:	a803      	add	r0, sp, #12
90018650:	f001 f96b 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018654:	2300      	movs	r3, #0
90018656:	9302      	str	r3, [sp, #8]
90018658:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001865c:	429c      	cmp	r4, r3
9001865e:	d002      	beq.n	90018666 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90018660:	455c      	cmp	r4, fp
90018662:	bf18      	it	ne
90018664:	4625      	movne	r5, r4
90018666:	ab02      	add	r3, sp, #8
90018668:	4632      	mov	r2, r6
9001866a:	4651      	mov	r1, sl
9001866c:	a803      	add	r0, sp, #12
9001866e:	f001 fc8f 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018672:	4604      	mov	r4, r0
90018674:	b108      	cbz	r0, 9001867a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90018676:	280a      	cmp	r0, #10
90018678:	d10a      	bne.n	90018690 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001867a:	45c1      	cmp	r9, r8
9001867c:	bf38      	it	cc
9001867e:	46c1      	movcc	r9, r8
90018680:	f04f 0800 	mov.w	r8, #0
90018684:	2c00      	cmp	r4, #0
90018686:	d1e5      	bne.n	90018654 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90018688:	4648      	mov	r0, r9
9001868a:	b01d      	add	sp, #116	@ 0x74
9001868c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018690:	9a02      	ldr	r2, [sp, #8]
90018692:	2a00      	cmp	r2, #0
90018694:	d0de      	beq.n	90018654 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90018696:	7b57      	ldrb	r7, [r2, #13]
90018698:	4629      	mov	r1, r5
9001869a:	6833      	ldr	r3, [r6, #0]
9001869c:	007f      	lsls	r7, r7, #1
9001869e:	8894      	ldrh	r4, [r2, #4]
900186a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900186a2:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900186a6:	7a97      	ldrb	r7, [r2, #10]
900186a8:	4307      	orrs	r7, r0
900186aa:	4630      	mov	r0, r6
900186ac:	4798      	blx	r3
900186ae:	4438      	add	r0, r7
900186b0:	4480      	add	r8, r0
900186b2:	fa1f f888 	uxth.w	r8, r8
900186b6:	e7e5      	b.n	90018684 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900186b8 <_ZNK8touchgfx4Font12getCharWidthEt>:
900186b8:	b508      	push	{r3, lr}
900186ba:	6803      	ldr	r3, [r0, #0]
900186bc:	68db      	ldr	r3, [r3, #12]
900186be:	4798      	blx	r3
900186c0:	b128      	cbz	r0, 900186ce <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900186c2:	7b43      	ldrb	r3, [r0, #13]
900186c4:	7a80      	ldrb	r0, [r0, #10]
900186c6:	005b      	lsls	r3, r3, #1
900186c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900186cc:	4318      	orrs	r0, r3
900186ce:	bd08      	pop	{r3, pc}

900186d0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900186d0:	b40e      	push	{r1, r2, r3}
900186d2:	b5f0      	push	{r4, r5, r6, r7, lr}
900186d4:	b09e      	sub	sp, #120	@ 0x78
900186d6:	4605      	mov	r5, r0
900186d8:	ab23      	add	r3, sp, #140	@ 0x8c
900186da:	a805      	add	r0, sp, #20
900186dc:	f853 4b04 	ldr.w	r4, [r3], #4
900186e0:	9303      	str	r3, [sp, #12]
900186e2:	f001 f8c7 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
900186e6:	682b      	ldr	r3, [r5, #0]
900186e8:	4628      	mov	r0, r5
900186ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900186ec:	4798      	blx	r3
900186ee:	682b      	ldr	r3, [r5, #0]
900186f0:	4606      	mov	r6, r0
900186f2:	4628      	mov	r0, r5
900186f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900186f6:	4798      	blx	r3
900186f8:	4633      	mov	r3, r6
900186fa:	4621      	mov	r1, r4
900186fc:	ae1e      	add	r6, sp, #120	@ 0x78
900186fe:	2400      	movs	r4, #0
90018700:	9000      	str	r0, [sp, #0]
90018702:	9a03      	ldr	r2, [sp, #12]
90018704:	a805      	add	r0, sp, #20
90018706:	f001 f910 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001870a:	f846 4d68 	str.w	r4, [r6, #-104]!
9001870e:	462a      	mov	r2, r5
90018710:	4633      	mov	r3, r6
90018712:	4621      	mov	r1, r4
90018714:	a805      	add	r0, sp, #20
90018716:	f001 fc3b 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001871a:	b300      	cbz	r0, 9001875e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001871c:	280a      	cmp	r0, #10
9001871e:	d01a      	beq.n	90018756 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90018720:	9f04      	ldr	r7, [sp, #16]
90018722:	b1c7      	cbz	r7, 90018756 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90018724:	7b78      	ldrb	r0, [r7, #13]
90018726:	7a3b      	ldrb	r3, [r7, #8]
90018728:	00c1      	lsls	r1, r0, #3
9001872a:	88ea      	ldrh	r2, [r5, #6]
9001872c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018730:	4319      	orrs	r1, r3
90018732:	0643      	lsls	r3, r0, #25
90018734:	ea4f 1000 	mov.w	r0, r0, lsl #4
90018738:	bf48      	it	mi
9001873a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001873e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90018742:	bf48      	it	mi
90018744:	b219      	sxthmi	r1, r3
90018746:	79fb      	ldrb	r3, [r7, #7]
90018748:	4303      	orrs	r3, r0
9001874a:	4413      	add	r3, r2
9001874c:	1a5b      	subs	r3, r3, r1
9001874e:	b21b      	sxth	r3, r3
90018750:	429c      	cmp	r4, r3
90018752:	bfb8      	it	lt
90018754:	461c      	movlt	r4, r3
90018756:	4633      	mov	r3, r6
90018758:	462a      	mov	r2, r5
9001875a:	2100      	movs	r1, #0
9001875c:	e7da      	b.n	90018714 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001875e:	b2a0      	uxth	r0, r4
90018760:	b01e      	add	sp, #120	@ 0x78
90018762:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90018766:	b003      	add	sp, #12
90018768:	4770      	bx	lr

9001876a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001876a:	7a43      	ldrb	r3, [r0, #9]
9001876c:	8880      	ldrh	r0, [r0, #4]
9001876e:	4418      	add	r0, r3
90018770:	b280      	uxth	r0, r0
90018772:	4770      	bx	lr

90018774 <_ZNK8touchgfx4Font13getFontHeightEv>:
90018774:	6803      	ldr	r3, [r0, #0]
90018776:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90018778:	4718      	bx	r3

9001877a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001877a:	b40e      	push	{r1, r2, r3}
9001877c:	b570      	push	{r4, r5, r6, lr}
9001877e:	b09d      	sub	sp, #116	@ 0x74
90018780:	4604      	mov	r4, r0
90018782:	ab21      	add	r3, sp, #132	@ 0x84
90018784:	a803      	add	r0, sp, #12
90018786:	f853 5b04 	ldr.w	r5, [r3], #4
9001878a:	9302      	str	r3, [sp, #8]
9001878c:	f001 f872 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
90018790:	6823      	ldr	r3, [r4, #0]
90018792:	4620      	mov	r0, r4
90018794:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018796:	4798      	blx	r3
90018798:	6823      	ldr	r3, [r4, #0]
9001879a:	4606      	mov	r6, r0
9001879c:	4620      	mov	r0, r4
9001879e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900187a0:	2401      	movs	r4, #1
900187a2:	4798      	blx	r3
900187a4:	4633      	mov	r3, r6
900187a6:	9000      	str	r0, [sp, #0]
900187a8:	4629      	mov	r1, r5
900187aa:	9a02      	ldr	r2, [sp, #8]
900187ac:	a803      	add	r0, sp, #12
900187ae:	f001 f8bc 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900187b2:	a803      	add	r0, sp, #12
900187b4:	f001 fcb8 	bl	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
900187b8:	b2a3      	uxth	r3, r4
900187ba:	b138      	cbz	r0, 900187cc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900187bc:	280a      	cmp	r0, #10
900187be:	a803      	add	r0, sp, #12
900187c0:	bf04      	itt	eq
900187c2:	3301      	addeq	r3, #1
900187c4:	b21c      	sxtheq	r4, r3
900187c6:	f001 fcaf 	bl	9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>
900187ca:	e7f5      	b.n	900187b8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900187cc:	4618      	mov	r0, r3
900187ce:	b01d      	add	sp, #116	@ 0x74
900187d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900187d4:	b003      	add	sp, #12
900187d6:	4770      	bx	lr

900187d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900187d8:	b40e      	push	{r1, r2, r3}
900187da:	b5f0      	push	{r4, r5, r6, r7, lr}
900187dc:	b09e      	sub	sp, #120	@ 0x78
900187de:	4604      	mov	r4, r0
900187e0:	ab23      	add	r3, sp, #140	@ 0x8c
900187e2:	a805      	add	r0, sp, #20
900187e4:	f853 5b04 	ldr.w	r5, [r3], #4
900187e8:	9303      	str	r3, [sp, #12]
900187ea:	f001 f843 	bl	90019874 <_ZN8touchgfx12TextProviderC1Ev>
900187ee:	6823      	ldr	r3, [r4, #0]
900187f0:	4620      	mov	r0, r4
900187f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900187f4:	4798      	blx	r3
900187f6:	6823      	ldr	r3, [r4, #0]
900187f8:	4606      	mov	r6, r0
900187fa:	4620      	mov	r0, r4
900187fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900187fe:	4798      	blx	r3
90018800:	4633      	mov	r3, r6
90018802:	4629      	mov	r1, r5
90018804:	9000      	str	r0, [sp, #0]
90018806:	9a03      	ldr	r2, [sp, #12]
90018808:	a805      	add	r0, sp, #20
9001880a:	f001 f88e 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001880e:	ad1e      	add	r5, sp, #120	@ 0x78
90018810:	2100      	movs	r1, #0
90018812:	f647 76ff 	movw	r6, #32767	@ 0x7fff
90018816:	4622      	mov	r2, r4
90018818:	a805      	add	r0, sp, #20
9001881a:	f845 1d68 	str.w	r1, [r5, #-104]!
9001881e:	462b      	mov	r3, r5
90018820:	f001 fbb6 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018824:	b1d8      	cbz	r0, 9001885e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90018826:	280a      	cmp	r0, #10
90018828:	d012      	beq.n	90018850 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001882a:	9804      	ldr	r0, [sp, #16]
9001882c:	b180      	cbz	r0, 90018850 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001882e:	7b47      	ldrb	r7, [r0, #13]
90018830:	88e2      	ldrh	r2, [r4, #6]
90018832:	00fb      	lsls	r3, r7, #3
90018834:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90018838:	7a03      	ldrb	r3, [r0, #8]
9001883a:	430b      	orrs	r3, r1
9001883c:	0679      	lsls	r1, r7, #25
9001883e:	bf44      	itt	mi
90018840:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018844:	b21b      	sxthmi	r3, r3
90018846:	1ad3      	subs	r3, r2, r3
90018848:	b21b      	sxth	r3, r3
9001884a:	429e      	cmp	r6, r3
9001884c:	bfa8      	it	ge
9001884e:	461e      	movge	r6, r3
90018850:	462b      	mov	r3, r5
90018852:	4622      	mov	r2, r4
90018854:	2100      	movs	r1, #0
90018856:	a805      	add	r0, sp, #20
90018858:	f001 fb9a 	bl	90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001885c:	e7e2      	b.n	90018824 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001885e:	4630      	mov	r0, r6
90018860:	b01e      	add	sp, #120	@ 0x78
90018862:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90018866:	b003      	add	sp, #12
90018868:	4770      	bx	lr

9001886a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001886a:	b513      	push	{r0, r1, r4, lr}
9001886c:	6803      	ldr	r3, [r0, #0]
9001886e:	2400      	movs	r4, #0
90018870:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90018874:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018878:	f8ad 1004 	strh.w	r1, [sp, #4]
9001887c:	4669      	mov	r1, sp
9001887e:	691b      	ldr	r3, [r3, #16]
90018880:	9400      	str	r4, [sp, #0]
90018882:	f8ad 2006 	strh.w	r2, [sp, #6]
90018886:	4798      	blx	r3
90018888:	b002      	add	sp, #8
9001888a:	bd10      	pop	{r4, pc}

9001888c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001888c:	b538      	push	{r3, r4, r5, lr}
9001888e:	680b      	ldr	r3, [r1, #0]
90018890:	460c      	mov	r4, r1
90018892:	4605      	mov	r5, r0
90018894:	68db      	ldr	r3, [r3, #12]
90018896:	4798      	blx	r3
90018898:	6823      	ldr	r3, [r4, #0]
9001889a:	4620      	mov	r0, r4
9001889c:	4629      	mov	r1, r5
9001889e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900188a0:	4798      	blx	r3
900188a2:	4628      	mov	r0, r5
900188a4:	bd38      	pop	{r3, r4, r5, pc}

900188a6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900188a6:	b410      	push	{r4}
900188a8:	880a      	ldrh	r2, [r1, #0]
900188aa:	8884      	ldrh	r4, [r0, #4]
900188ac:	4422      	add	r2, r4
900188ae:	800a      	strh	r2, [r1, #0]
900188b0:	884a      	ldrh	r2, [r1, #2]
900188b2:	88c4      	ldrh	r4, [r0, #6]
900188b4:	4422      	add	r2, r4
900188b6:	804a      	strh	r2, [r1, #2]
900188b8:	6940      	ldr	r0, [r0, #20]
900188ba:	b120      	cbz	r0, 900188c6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900188bc:	6803      	ldr	r3, [r0, #0]
900188be:	f85d 4b04 	ldr.w	r4, [sp], #4
900188c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900188c4:	4718      	bx	r3
900188c6:	f85d 4b04 	ldr.w	r4, [sp], #4
900188ca:	4770      	bx	lr

900188cc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900188cc:	b570      	push	{r4, r5, r6, lr}
900188ce:	8882      	ldrh	r2, [r0, #4]
900188d0:	460c      	mov	r4, r1
900188d2:	880b      	ldrh	r3, [r1, #0]
900188d4:	4605      	mov	r5, r0
900188d6:	4413      	add	r3, r2
900188d8:	800b      	strh	r3, [r1, #0]
900188da:	884b      	ldrh	r3, [r1, #2]
900188dc:	88c2      	ldrh	r2, [r0, #6]
900188de:	4413      	add	r3, r2
900188e0:	804b      	strh	r3, [r1, #2]
900188e2:	1d01      	adds	r1, r0, #4
900188e4:	4620      	mov	r0, r4
900188e6:	f7f8 fdb9 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
900188ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900188ee:	2b00      	cmp	r3, #0
900188f0:	dd0b      	ble.n	9001890a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900188f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900188f6:	2b00      	cmp	r3, #0
900188f8:	dd07      	ble.n	9001890a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900188fa:	6968      	ldr	r0, [r5, #20]
900188fc:	b128      	cbz	r0, 9001890a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900188fe:	6803      	ldr	r3, [r0, #0]
90018900:	4621      	mov	r1, r4
90018902:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018908:	4718      	bx	r3
9001890a:	bd70      	pop	{r4, r5, r6, pc}

9001890c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001890c:	b570      	push	{r4, r5, r6, lr}
9001890e:	8882      	ldrh	r2, [r0, #4]
90018910:	460c      	mov	r4, r1
90018912:	880b      	ldrh	r3, [r1, #0]
90018914:	4605      	mov	r5, r0
90018916:	4413      	add	r3, r2
90018918:	800b      	strh	r3, [r1, #0]
9001891a:	884b      	ldrh	r3, [r1, #2]
9001891c:	88c2      	ldrh	r2, [r0, #6]
9001891e:	4413      	add	r3, r2
90018920:	804b      	strh	r3, [r1, #2]
90018922:	1d01      	adds	r1, r0, #4
90018924:	4620      	mov	r0, r4
90018926:	f7f8 fd99 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
9001892a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001892e:	2b00      	cmp	r3, #0
90018930:	dd19      	ble.n	90018966 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90018932:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90018936:	2b00      	cmp	r3, #0
90018938:	dd15      	ble.n	90018966 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001893a:	6968      	ldr	r0, [r5, #20]
9001893c:	b128      	cbz	r0, 9001894a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001893e:	6803      	ldr	r3, [r0, #0]
90018940:	4621      	mov	r1, r4
90018942:	691b      	ldr	r3, [r3, #16]
90018944:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018948:	4718      	bx	r3
9001894a:	4b07      	ldr	r3, [pc, #28]	@ (90018968 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001894c:	681b      	ldr	r3, [r3, #0]
9001894e:	3304      	adds	r3, #4
90018950:	429d      	cmp	r5, r3
90018952:	d108      	bne.n	90018966 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90018954:	f7fe fd86 	bl	90017464 <_ZN8touchgfx11Application11getInstanceEv>
90018958:	6803      	ldr	r3, [r0, #0]
9001895a:	6821      	ldr	r1, [r4, #0]
9001895c:	6862      	ldr	r2, [r4, #4]
9001895e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018964:	4718      	bx	r3
90018966:	bd70      	pop	{r4, r5, r6, pc}
90018968:	24021da8 	.word	0x24021da8

9001896c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001896c:	b570      	push	{r4, r5, r6, lr}
9001896e:	4604      	mov	r4, r0
90018970:	4616      	mov	r6, r2
90018972:	460d      	mov	r5, r1
90018974:	b901      	cbnz	r1, 90018978 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90018976:	b192      	cbz	r2, 9001899e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90018978:	6823      	ldr	r3, [r4, #0]
9001897a:	4620      	mov	r0, r4
9001897c:	699b      	ldr	r3, [r3, #24]
9001897e:	4798      	blx	r3
90018980:	88e2      	ldrh	r2, [r4, #6]
90018982:	88a1      	ldrh	r1, [r4, #4]
90018984:	4620      	mov	r0, r4
90018986:	4432      	add	r2, r6
90018988:	4429      	add	r1, r5
9001898a:	b212      	sxth	r2, r2
9001898c:	b209      	sxth	r1, r1
9001898e:	f7f9 f849 	bl	90011a24 <_ZN8touchgfx8Drawable5setXYEss>
90018992:	6823      	ldr	r3, [r4, #0]
90018994:	4620      	mov	r0, r4
90018996:	699b      	ldr	r3, [r3, #24]
90018998:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001899c:	4718      	bx	r3
9001899e:	bd70      	pop	{r4, r5, r6, pc}

900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900189a0:	b510      	push	{r4, lr}
900189a2:	2300      	movs	r3, #0
900189a4:	4604      	mov	r4, r0
900189a6:	4608      	mov	r0, r1
900189a8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900189ac:	8023      	strh	r3, [r4, #0]
900189ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900189b2:	8063      	strh	r3, [r4, #2]
900189b4:	6803      	ldr	r3, [r0, #0]
900189b6:	80a1      	strh	r1, [r4, #4]
900189b8:	4621      	mov	r1, r4
900189ba:	80e2      	strh	r2, [r4, #6]
900189bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900189be:	4798      	blx	r3
900189c0:	4620      	mov	r0, r4
900189c2:	bd10      	pop	{r4, pc}

900189c4 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
900189c4:	4770      	bx	lr

900189c6 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
900189c6:	b510      	push	{r4, lr}
900189c8:	4604      	mov	r4, r0
900189ca:	211c      	movs	r1, #28
900189cc:	f011 fbba 	bl	9002a144 <_ZdlPvj>
900189d0:	4620      	mov	r0, r4
900189d2:	bd10      	pop	{r4, pc}

900189d4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
900189d4:	4a04      	ldr	r2, [pc, #16]	@ (900189e8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
900189d6:	6002      	str	r2, [r0, #0]
900189d8:	2200      	movs	r2, #0
900189da:	e9c0 2201 	strd	r2, r2, [r0, #4]
900189de:	e9c0 2203 	strd	r2, r2, [r0, #12]
900189e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
900189e6:	4770      	bx	lr
900189e8:	9002e9d4 	.word	0x9002e9d4

900189ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
900189ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900189f0:	4604      	mov	r4, r0
900189f2:	b087      	sub	sp, #28
900189f4:	8b45      	ldrh	r5, [r0, #26]
900189f6:	f8b2 c000 	ldrh.w	ip, [r2]
900189fa:	9105      	str	r1, [sp, #20]
900189fc:	1c68      	adds	r0, r5, #1
900189fe:	68e1      	ldr	r1, [r4, #12]
90018a00:	9203      	str	r2, [sp, #12]
90018a02:	b280      	uxth	r0, r0
90018a04:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90018a08:	f01c 0501 	ands.w	r5, ip, #1
90018a0c:	f9b3 2000 	ldrsh.w	r2, [r3]
90018a10:	9502      	str	r5, [sp, #8]
90018a12:	d07d      	beq.n	90018b10 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
90018a14:	ee07 2a90 	vmov	s15, r2
90018a18:	8360      	strh	r0, [r4, #26]
90018a1a:	f04f 0e00 	mov.w	lr, #0
90018a1e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
90018a22:	ee06 ea10 	vmov	s12, lr
90018a26:	edc1 6a00 	vstr	s13, [r1]
90018a2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90018a2e:	8b61      	ldrh	r1, [r4, #26]
90018a30:	ee07 2a10 	vmov	s14, r2
90018a34:	68e2      	ldr	r2, [r4, #12]
90018a36:	1c48      	adds	r0, r1, #1
90018a38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018a3c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90018a40:	8360      	strh	r0, [r4, #26]
90018a42:	ed82 7a00 	vstr	s14, [r2]
90018a46:	8b21      	ldrh	r1, [r4, #24]
90018a48:	2501      	movs	r5, #1
90018a4a:	68a2      	ldr	r2, [r4, #8]
90018a4c:	3304      	adds	r3, #4
90018a4e:	1c48      	adds	r0, r1, #1
90018a50:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90018a54:	9300      	str	r3, [sp, #0]
90018a56:	46aa      	mov	sl, r5
90018a58:	8320      	strh	r0, [r4, #24]
90018a5a:	462e      	mov	r6, r5
90018a5c:	5455      	strb	r5, [r2, r1]
90018a5e:	2200      	movs	r2, #0
90018a60:	ee07 2a90 	vmov	s15, r2
90018a64:	4613      	mov	r3, r2
90018a66:	4611      	mov	r1, r2
90018a68:	9201      	str	r2, [sp, #4]
90018a6a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90018a6e:	9805      	ldr	r0, [sp, #20]
90018a70:	f108 0701 	add.w	r7, r8, #1
90018a74:	f8d4 b008 	ldr.w	fp, [r4, #8]
90018a78:	42a8      	cmp	r0, r5
90018a7a:	b2bf      	uxth	r7, r7
90018a7c:	eb0b 0908 	add.w	r9, fp, r8
90018a80:	f340 80db 	ble.w	90018c3a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
90018a84:	fa4c f906 	asr.w	r9, ip, r6
90018a88:	f009 0901 	and.w	r9, r9, #1
90018a8c:	fa5f f389 	uxtb.w	r3, r9
90018a90:	9304      	str	r3, [sp, #16]
90018a92:	9b00      	ldr	r3, [sp, #0]
90018a94:	f9b3 1000 	ldrsh.w	r1, [r3]
90018a98:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90018a9c:	f1b9 0f00 	cmp.w	r9, #0
90018aa0:	d07d      	beq.n	90018b9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
90018aa2:	ee05 1a10 	vmov	s10, r1
90018aa6:	8327      	strh	r7, [r4, #24]
90018aa8:	eef8 4ac5 	vcvt.f32.s32	s9, s10
90018aac:	ee05 3a10 	vmov	s10, r3
90018ab0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90018ab4:	f1ba 0f00 	cmp.w	sl, #0
90018ab8:	d050      	beq.n	90018b5c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
90018aba:	f04f 0002 	mov.w	r0, #2
90018abe:	f80b 0008 	strb.w	r0, [fp, r8]
90018ac2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018ac6:	68e7      	ldr	r7, [r4, #12]
90018ac8:	f108 0901 	add.w	r9, r8, #1
90018acc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018ad0:	f8a4 901a 	strh.w	r9, [r4, #26]
90018ad4:	edc7 4a00 	vstr	s9, [r7]
90018ad8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018adc:	68e7      	ldr	r7, [r4, #12]
90018ade:	f108 0901 	add.w	r9, r8, #1
90018ae2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018ae6:	f8a4 901a 	strh.w	r9, [r4, #26]
90018aea:	ed87 5a00 	vstr	s10, [r7]
90018aee:	3601      	adds	r6, #1
90018af0:	2e10      	cmp	r6, #16
90018af2:	d106      	bne.n	90018b02 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
90018af4:	9e01      	ldr	r6, [sp, #4]
90018af6:	9803      	ldr	r0, [sp, #12]
90018af8:	3601      	adds	r6, #1
90018afa:	9601      	str	r6, [sp, #4]
90018afc:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
90018b00:	2600      	movs	r6, #0
90018b02:	9800      	ldr	r0, [sp, #0]
90018b04:	3501      	adds	r5, #1
90018b06:	f8dd a010 	ldr.w	sl, [sp, #16]
90018b0a:	3004      	adds	r0, #4
90018b0c:	9000      	str	r0, [sp, #0]
90018b0e:	e7ac      	b.n	90018a6a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
90018b10:	ee06 2a10 	vmov	s12, r2
90018b14:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
90018b18:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90018b1c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90018b20:	ee16 5a10 	vmov	r5, s12
90018b24:	442a      	add	r2, r5
90018b26:	ee06 2a90 	vmov	s13, r2
90018b2a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
90018b2e:	8360      	strh	r0, [r4, #26]
90018b30:	4472      	add	r2, lr
90018b32:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018b36:	ee07 2a10 	vmov	s14, r2
90018b3a:	ee66 6aa7 	vmul.f32	s13, s13, s15
90018b3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018b42:	edc1 6a00 	vstr	s13, [r1]
90018b46:	8b61      	ldrh	r1, [r4, #26]
90018b48:	ee27 7a27 	vmul.f32	s14, s14, s15
90018b4c:	68e2      	ldr	r2, [r4, #12]
90018b4e:	1c48      	adds	r0, r1, #1
90018b50:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90018b54:	8360      	strh	r0, [r4, #26]
90018b56:	ed82 7a00 	vstr	s14, [r2]
90018b5a:	e774      	b.n	90018a46 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
90018b5c:	f04f 0005 	mov.w	r0, #5
90018b60:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
90018b64:	f80b 0008 	strb.w	r0, [fp, r8]
90018b68:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018b6c:	68e7      	ldr	r7, [r4, #12]
90018b6e:	f108 0901 	add.w	r9, r8, #1
90018b72:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018b76:	f8a4 901a 	strh.w	r9, [r4, #26]
90018b7a:	ed87 4a00 	vstr	s8, [r7]
90018b7e:	ee04 2a10 	vmov	s8, r2
90018b82:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018b86:	68e7      	ldr	r7, [r4, #12]
90018b88:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
90018b8c:	f108 0901 	add.w	r9, r8, #1
90018b90:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018b94:	f8a4 901a 	strh.w	r9, [r4, #26]
90018b98:	ed87 4a00 	vstr	s8, [r7]
90018b9c:	e791      	b.n	90018ac2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
90018b9e:	f1ba 0f00 	cmp.w	sl, #0
90018ba2:	d146      	bne.n	90018c32 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
90018ba4:	f04f 0005 	mov.w	r0, #5
90018ba8:	8327      	strh	r7, [r4, #24]
90018baa:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90018bae:	f80b 0008 	strb.w	r0, [fp, r8]
90018bb2:	ee17 0a90 	vmov	r0, s15
90018bb6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018bba:	68e7      	ldr	r7, [r4, #12]
90018bbc:	4408      	add	r0, r1
90018bbe:	f108 0901 	add.w	r9, r8, #1
90018bc2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018bc6:	ee07 0a90 	vmov	s15, r0
90018bca:	f8a4 901a 	strh.w	r9, [r4, #26]
90018bce:	ed87 5a00 	vstr	s10, [r7]
90018bd2:	ee05 2a10 	vmov	s10, r2
90018bd6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018bde:	68e7      	ldr	r7, [r4, #12]
90018be0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90018be4:	f108 0901 	add.w	r9, r8, #1
90018be8:	441a      	add	r2, r3
90018bea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018bee:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018bf2:	f8a4 901a 	strh.w	r9, [r4, #26]
90018bf6:	ed87 5a00 	vstr	s10, [r7]
90018bfa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018bfe:	68e7      	ldr	r7, [r4, #12]
90018c00:	f108 0901 	add.w	r9, r8, #1
90018c04:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018c08:	f8a4 901a 	strh.w	r9, [r4, #26]
90018c0c:	edc7 7a00 	vstr	s15, [r7]
90018c10:	ee07 2a90 	vmov	s15, r2
90018c14:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018c18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018c1c:	68e7      	ldr	r7, [r4, #12]
90018c1e:	f108 0901 	add.w	r9, r8, #1
90018c22:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018c26:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018c2a:	f8a4 901a 	strh.w	r9, [r4, #26]
90018c2e:	edc7 7a00 	vstr	s15, [r7]
90018c32:	461a      	mov	r2, r3
90018c34:	ee07 1a90 	vmov	s15, r1
90018c38:	e759      	b.n	90018aee <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90018c3a:	f1ba 0f00 	cmp.w	sl, #0
90018c3e:	d045      	beq.n	90018ccc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90018c40:	ee05 1a90 	vmov	s11, r1
90018c44:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90018c48:	eef4 5a66 	vcmp.f32	s11, s13
90018c4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018c50:	d108      	bne.n	90018c64 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
90018c52:	ee05 3a90 	vmov	s11, r3
90018c56:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90018c5a:	eef4 5a47 	vcmp.f32	s11, s14
90018c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018c62:	d033      	beq.n	90018ccc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90018c64:	9b02      	ldr	r3, [sp, #8]
90018c66:	8327      	strh	r7, [r4, #24]
90018c68:	b1b3      	cbz	r3, 90018c98 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
90018c6a:	2302      	movs	r3, #2
90018c6c:	f889 3000 	strb.w	r3, [r9]
90018c70:	8b62      	ldrh	r2, [r4, #26]
90018c72:	68e3      	ldr	r3, [r4, #12]
90018c74:	1c51      	adds	r1, r2, #1
90018c76:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018c7a:	8361      	strh	r1, [r4, #26]
90018c7c:	edc3 6a00 	vstr	s13, [r3]
90018c80:	8b62      	ldrh	r2, [r4, #26]
90018c82:	68e3      	ldr	r3, [r4, #12]
90018c84:	1c51      	adds	r1, r2, #1
90018c86:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018c8a:	8361      	strh	r1, [r4, #26]
90018c8c:	ed83 7a00 	vstr	s14, [r3]
90018c90:	9800      	ldr	r0, [sp, #0]
90018c92:	b007      	add	sp, #28
90018c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018c98:	2305      	movs	r3, #5
90018c9a:	f889 3000 	strb.w	r3, [r9]
90018c9e:	8b62      	ldrh	r2, [r4, #26]
90018ca0:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90018ca4:	68e3      	ldr	r3, [r4, #12]
90018ca6:	ee07 ea90 	vmov	s15, lr
90018caa:	1c51      	adds	r1, r2, #1
90018cac:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018cb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018cb4:	8361      	strh	r1, [r4, #26]
90018cb6:	ed83 6a00 	vstr	s12, [r3]
90018cba:	8b62      	ldrh	r2, [r4, #26]
90018cbc:	68e3      	ldr	r3, [r4, #12]
90018cbe:	1c51      	adds	r1, r2, #1
90018cc0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018cc4:	8361      	strh	r1, [r4, #26]
90018cc6:	edc3 7a00 	vstr	s15, [r3]
90018cca:	e7d1      	b.n	90018c70 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90018ccc:	ee05 2a90 	vmov	s11, r2
90018cd0:	2305      	movs	r3, #5
90018cd2:	9902      	ldr	r1, [sp, #8]
90018cd4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90018cd8:	8327      	strh	r7, [r4, #24]
90018cda:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90018cde:	f889 3000 	strb.w	r3, [r9]
90018ce2:	b181      	cbz	r1, 90018d06 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
90018ce4:	8b62      	ldrh	r2, [r4, #26]
90018ce6:	68e3      	ldr	r3, [r4, #12]
90018ce8:	1c51      	adds	r1, r2, #1
90018cea:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018cee:	8361      	strh	r1, [r4, #26]
90018cf0:	ed83 5a00 	vstr	s10, [r3]
90018cf4:	8b62      	ldrh	r2, [r4, #26]
90018cf6:	68e3      	ldr	r3, [r4, #12]
90018cf8:	1c51      	adds	r1, r2, #1
90018cfa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018cfe:	8361      	strh	r1, [r4, #26]
90018d00:	edc3 5a00 	vstr	s11, [r3]
90018d04:	e7b4      	b.n	90018c70 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90018d06:	8b65      	ldrh	r5, [r4, #26]
90018d08:	ee17 0a90 	vmov	r0, s15
90018d0c:	68e1      	ldr	r1, [r4, #12]
90018d0e:	4472      	add	r2, lr
90018d10:	1c6e      	adds	r6, r5, #1
90018d12:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90018d16:	8366      	strh	r6, [r4, #26]
90018d18:	ed81 5a00 	vstr	s10, [r1]
90018d1c:	8b65      	ldrh	r5, [r4, #26]
90018d1e:	68e1      	ldr	r1, [r4, #12]
90018d20:	1c6e      	adds	r6, r5, #1
90018d22:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90018d26:	8366      	strh	r6, [r4, #26]
90018d28:	edc1 5a00 	vstr	s11, [r1]
90018d2c:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90018d30:	8b65      	ldrh	r5, [r4, #26]
90018d32:	68e1      	ldr	r1, [r4, #12]
90018d34:	1c6e      	adds	r6, r5, #1
90018d36:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90018d3a:	ee16 5a10 	vmov	r5, s12
90018d3e:	8366      	strh	r6, [r4, #26]
90018d40:	4428      	add	r0, r5
90018d42:	ee07 0a90 	vmov	s15, r0
90018d46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018d4a:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018d4e:	edc1 7a00 	vstr	s15, [r1]
90018d52:	ee07 2a90 	vmov	s15, r2
90018d56:	8b61      	ldrh	r1, [r4, #26]
90018d58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018d5c:	68e5      	ldr	r5, [r4, #12]
90018d5e:	1c4e      	adds	r6, r1, #1
90018d60:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90018d64:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018d68:	8366      	strh	r6, [r4, #26]
90018d6a:	edc1 7a00 	vstr	s15, [r1]
90018d6e:	8b22      	ldrh	r2, [r4, #24]
90018d70:	68a1      	ldr	r1, [r4, #8]
90018d72:	1c55      	adds	r5, r2, #1
90018d74:	8325      	strh	r5, [r4, #24]
90018d76:	548b      	strb	r3, [r1, r2]
90018d78:	e791      	b.n	90018c9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90018d7c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90018d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018d80:	4604      	mov	r4, r0
90018d82:	b08e      	sub	sp, #56	@ 0x38
90018d84:	4699      	mov	r9, r3
90018d86:	4688      	mov	r8, r1
90018d88:	4615      	mov	r5, r2
90018d8a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90018d8c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90018d90:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90018d92:	f7ea fbed 	bl	90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90018d96:	6060      	str	r0, [r4, #4]
90018d98:	f1b9 0f00 	cmp.w	r9, #0
90018d9c:	f000 80e8 	beq.w	90018f70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90018da0:	2800      	cmp	r0, #0
90018da2:	f000 80e5 	beq.w	90018f70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90018da6:	a805      	add	r0, sp, #20
90018da8:	f000 f8f9 	bl	90018f9e <_ZN8touchgfx9Matrix3x3C1Ev>
90018dac:	6833      	ldr	r3, [r6, #0]
90018dae:	4630      	mov	r0, r6
90018db0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90018db2:	4798      	blx	r3
90018db4:	a805      	add	r0, sp, #20
90018db6:	eef0 0a40 	vmov.f32	s1, s0
90018dba:	f000 f8f4 	bl	90018fa6 <_ZN8touchgfx9Matrix3x35scaleEff>
90018dbe:	6860      	ldr	r0, [r4, #4]
90018dc0:	f1ba 0f03 	cmp.w	sl, #3
90018dc4:	d83b      	bhi.n	90018e3e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90018dc6:	e8df f00a 	tbb	[pc, sl]
90018dca:	1002      	.short	0x1002
90018dcc:	9f71      	.short	0x9f71
90018dce:	6803      	ldr	r3, [r0, #0]
90018dd0:	462a      	mov	r2, r5
90018dd2:	4641      	mov	r1, r8
90018dd4:	689b      	ldr	r3, [r3, #8]
90018dd6:	4798      	blx	r3
90018dd8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018ddc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018de0:	ee07 7a90 	vmov	s15, r7
90018de4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90018de8:	e026      	b.n	90018e38 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90018dea:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90018dee:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018df2:	8869      	ldrh	r1, [r5, #2]
90018df4:	1a9b      	subs	r3, r3, r2
90018df6:	f8ad 2010 	strh.w	r2, [sp, #16]
90018dfa:	aa03      	add	r2, sp, #12
90018dfc:	1a5b      	subs	r3, r3, r1
90018dfe:	4641      	mov	r1, r8
90018e00:	f8ad 300c 	strh.w	r3, [sp, #12]
90018e04:	882b      	ldrh	r3, [r5, #0]
90018e06:	f8ad 300e 	strh.w	r3, [sp, #14]
90018e0a:	88ab      	ldrh	r3, [r5, #4]
90018e0c:	f8ad 3012 	strh.w	r3, [sp, #18]
90018e10:	6803      	ldr	r3, [r0, #0]
90018e12:	689b      	ldr	r3, [r3, #8]
90018e14:	4798      	blx	r3
90018e16:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90018f78 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90018e1a:	a805      	add	r0, sp, #20
90018e1c:	f000 f8e8 	bl	90018ff0 <_ZN8touchgfx9Matrix3x36rotateEf>
90018e20:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018e24:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018e26:	ee07 7a90 	vmov	s15, r7
90018e2a:	1a9b      	subs	r3, r3, r2
90018e2c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018e30:	ee00 3a10 	vmov	s0, r3
90018e34:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90018e38:	a805      	add	r0, sp, #20
90018e3a:	f000 f927 	bl	9001908c <_ZN8touchgfx9Matrix3x39translateEff>
90018e3e:	6860      	ldr	r0, [r4, #4]
90018e40:	a905      	add	r1, sp, #20
90018e42:	2500      	movs	r5, #0
90018e44:	f109 0602 	add.w	r6, r9, #2
90018e48:	6803      	ldr	r3, [r0, #0]
90018e4a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90018e4c:	4798      	blx	r3
90018e4e:	6860      	ldr	r0, [r4, #4]
90018e50:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018e52:	6803      	ldr	r3, [r0, #0]
90018e54:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90018e58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018e5a:	4798      	blx	r3
90018e5c:	6860      	ldr	r0, [r4, #4]
90018e5e:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90018e62:	6803      	ldr	r3, [r0, #0]
90018e64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018e66:	4798      	blx	r3
90018e68:	6860      	ldr	r0, [r4, #4]
90018e6a:	2101      	movs	r1, #1
90018e6c:	6803      	ldr	r3, [r0, #0]
90018e6e:	68db      	ldr	r3, [r3, #12]
90018e70:	4798      	blx	r3
90018e72:	f8b9 7000 	ldrh.w	r7, [r9]
90018e76:	f104 0310 	add.w	r3, r4, #16
90018e7a:	61a5      	str	r5, [r4, #24]
90018e7c:	f104 0208 	add.w	r2, r4, #8
90018e80:	f104 0114 	add.w	r1, r4, #20
90018e84:	f104 000c 	add.w	r0, r4, #12
90018e88:	f7ed fd0e 	bl	900068a8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90018e8c:	42af      	cmp	r7, r5
90018e8e:	dd60      	ble.n	90018f52 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90018e90:	8831      	ldrh	r1, [r6, #0]
90018e92:	1cb2      	adds	r2, r6, #2
90018e94:	4620      	mov	r0, r4
90018e96:	3501      	adds	r5, #1
90018e98:	f101 030f 	add.w	r3, r1, #15
90018e9c:	f3c3 1307 	ubfx	r3, r3, #4, #8
90018ea0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018ea4:	f7ff fda2 	bl	900189ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90018ea8:	4606      	mov	r6, r0
90018eaa:	e7ef      	b.n	90018e8c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90018eac:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90018eb0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018eb4:	8829      	ldrh	r1, [r5, #0]
90018eb6:	1a9b      	subs	r3, r3, r2
90018eb8:	f8ad 2010 	strh.w	r2, [sp, #16]
90018ebc:	aa03      	add	r2, sp, #12
90018ebe:	1a5b      	subs	r3, r3, r1
90018ec0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018ec4:	886d      	ldrh	r5, [r5, #2]
90018ec6:	f8ad 300c 	strh.w	r3, [sp, #12]
90018eca:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018ece:	f8ad 1012 	strh.w	r1, [sp, #18]
90018ed2:	1a5b      	subs	r3, r3, r1
90018ed4:	4641      	mov	r1, r8
90018ed6:	1b5b      	subs	r3, r3, r5
90018ed8:	f8ad 300e 	strh.w	r3, [sp, #14]
90018edc:	6803      	ldr	r3, [r0, #0]
90018ede:	689b      	ldr	r3, [r3, #8]
90018ee0:	4798      	blx	r3
90018ee2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90018f7c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90018ee6:	a805      	add	r0, sp, #20
90018ee8:	f000 f882 	bl	90018ff0 <_ZN8touchgfx9Matrix3x36rotateEf>
90018eec:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018ef0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018ef2:	1a9b      	subs	r3, r3, r2
90018ef4:	ee00 3a90 	vmov	s1, r3
90018ef8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018efc:	1bdb      	subs	r3, r3, r7
90018efe:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018f02:	ee00 3a10 	vmov	s0, r3
90018f06:	e795      	b.n	90018e34 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90018f08:	886b      	ldrh	r3, [r5, #2]
90018f0a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90018f0e:	f8ad 300c 	strh.w	r3, [sp, #12]
90018f12:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018f16:	8829      	ldrh	r1, [r5, #0]
90018f18:	1a9b      	subs	r3, r3, r2
90018f1a:	f8ad 2012 	strh.w	r2, [sp, #18]
90018f1e:	aa03      	add	r2, sp, #12
90018f20:	1a5b      	subs	r3, r3, r1
90018f22:	4641      	mov	r1, r8
90018f24:	f8ad 300e 	strh.w	r3, [sp, #14]
90018f28:	88eb      	ldrh	r3, [r5, #6]
90018f2a:	f8ad 3010 	strh.w	r3, [sp, #16]
90018f2e:	6803      	ldr	r3, [r0, #0]
90018f30:	689b      	ldr	r3, [r3, #8]
90018f32:	4798      	blx	r3
90018f34:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90018f80 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90018f38:	a805      	add	r0, sp, #20
90018f3a:	f000 f859 	bl	90018ff0 <_ZN8touchgfx9Matrix3x36rotateEf>
90018f3e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018f42:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018f46:	1bdb      	subs	r3, r3, r7
90018f48:	ee00 3a90 	vmov	s1, r3
90018f4c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018f50:	e748      	b.n	90018de4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90018f52:	6860      	ldr	r0, [r4, #4]
90018f54:	2100      	movs	r1, #0
90018f56:	8b22      	ldrh	r2, [r4, #24]
90018f58:	6803      	ldr	r3, [r0, #0]
90018f5a:	9101      	str	r1, [sp, #4]
90018f5c:	8b61      	ldrh	r1, [r4, #26]
90018f5e:	9100      	str	r1, [sp, #0]
90018f60:	6a1d      	ldr	r5, [r3, #32]
90018f62:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90018f66:	47a8      	blx	r5
90018f68:	6860      	ldr	r0, [r4, #4]
90018f6a:	6803      	ldr	r3, [r0, #0]
90018f6c:	69db      	ldr	r3, [r3, #28]
90018f6e:	4798      	blx	r3
90018f70:	b00e      	add	sp, #56	@ 0x38
90018f72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018f76:	bf00      	nop
90018f78:	42b40000 	.word	0x42b40000
90018f7c:	43340000 	.word	0x43340000
90018f80:	43870000 	.word	0x43870000

90018f84 <_ZN8touchgfx9Matrix3x35resetEv>:
90018f84:	2300      	movs	r3, #0
90018f86:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90018f8a:	6043      	str	r3, [r0, #4]
90018f8c:	6002      	str	r2, [r0, #0]
90018f8e:	6083      	str	r3, [r0, #8]
90018f90:	60c3      	str	r3, [r0, #12]
90018f92:	6102      	str	r2, [r0, #16]
90018f94:	6143      	str	r3, [r0, #20]
90018f96:	6183      	str	r3, [r0, #24]
90018f98:	61c3      	str	r3, [r0, #28]
90018f9a:	6202      	str	r2, [r0, #32]
90018f9c:	4770      	bx	lr

90018f9e <_ZN8touchgfx9Matrix3x3C1Ev>:
90018f9e:	b508      	push	{r3, lr}
90018fa0:	f7ff fff0 	bl	90018f84 <_ZN8touchgfx9Matrix3x35resetEv>
90018fa4:	bd08      	pop	{r3, pc}

90018fa6 <_ZN8touchgfx9Matrix3x35scaleEff>:
90018fa6:	edd0 7a00 	vldr	s15, [r0]
90018faa:	ee67 7a80 	vmul.f32	s15, s15, s0
90018fae:	edc0 7a00 	vstr	s15, [r0]
90018fb2:	edd0 7a01 	vldr	s15, [r0, #4]
90018fb6:	ee67 7a80 	vmul.f32	s15, s15, s0
90018fba:	edc0 7a01 	vstr	s15, [r0, #4]
90018fbe:	edd0 7a02 	vldr	s15, [r0, #8]
90018fc2:	ee27 0a80 	vmul.f32	s0, s15, s0
90018fc6:	edd0 7a03 	vldr	s15, [r0, #12]
90018fca:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018fce:	ed80 0a02 	vstr	s0, [r0, #8]
90018fd2:	edc0 7a03 	vstr	s15, [r0, #12]
90018fd6:	edd0 7a04 	vldr	s15, [r0, #16]
90018fda:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018fde:	edc0 7a04 	vstr	s15, [r0, #16]
90018fe2:	edd0 7a05 	vldr	s15, [r0, #20]
90018fe6:	ee67 0aa0 	vmul.f32	s1, s15, s1
90018fea:	edc0 0a05 	vstr	s1, [r0, #20]
90018fee:	4770      	bx	lr

90018ff0 <_ZN8touchgfx9Matrix3x36rotateEf>:
90018ff0:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90019084 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90018ff4:	ee20 0a27 	vmul.f32	s0, s0, s15
90018ff8:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90019088 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90018ffc:	b510      	push	{r4, lr}
90018ffe:	ed2d 8b02 	vpush	{d8}
90019002:	eec0 8a27 	vdiv.f32	s17, s0, s15
90019006:	4604      	mov	r4, r0
90019008:	eeb0 0a68 	vmov.f32	s0, s17
9001900c:	f011 f9d0 	bl	9002a3b0 <cosf>
90019010:	eeb0 8a40 	vmov.f32	s16, s0
90019014:	eeb0 0a68 	vmov.f32	s0, s17
90019018:	f011 f906 	bl	9002a228 <sinf>
9001901c:	edd4 6a03 	vldr	s13, [r4, #12]
90019020:	edd4 4a00 	vldr	s9, [r4]
90019024:	ee60 7a66 	vnmul.f32	s15, s0, s13
90019028:	ed94 7a04 	vldr	s14, [r4, #16]
9001902c:	ed94 5a01 	vldr	s10, [r4, #4]
90019030:	ee66 6a88 	vmul.f32	s13, s13, s16
90019034:	edd4 5a02 	vldr	s11, [r4, #8]
90019038:	eee8 7a24 	vfma.f32	s15, s16, s9
9001903c:	eee0 6a24 	vfma.f32	s13, s0, s9
90019040:	edc4 7a00 	vstr	s15, [r4]
90019044:	ee60 7a47 	vnmul.f32	s15, s0, s14
90019048:	ee27 7a08 	vmul.f32	s14, s14, s16
9001904c:	edc4 6a03 	vstr	s13, [r4, #12]
90019050:	eee8 7a05 	vfma.f32	s15, s16, s10
90019054:	eea0 7a05 	vfma.f32	s14, s0, s10
90019058:	edc4 7a01 	vstr	s15, [r4, #4]
9001905c:	edd4 7a05 	vldr	s15, [r4, #20]
90019060:	ed84 7a04 	vstr	s14, [r4, #16]
90019064:	ee20 6a67 	vnmul.f32	s12, s0, s15
90019068:	ee67 7a88 	vmul.f32	s15, s15, s16
9001906c:	eea8 6a25 	vfma.f32	s12, s16, s11
90019070:	eee0 7a25 	vfma.f32	s15, s0, s11
90019074:	ecbd 8b02 	vpop	{d8}
90019078:	ed84 6a02 	vstr	s12, [r4, #8]
9001907c:	edc4 7a05 	vstr	s15, [r4, #20]
90019080:	bd10      	pop	{r4, pc}
90019082:	bf00      	nop
90019084:	40490fdb 	.word	0x40490fdb
90019088:	43340000 	.word	0x43340000

9001908c <_ZN8touchgfx9Matrix3x39translateEff>:
9001908c:	ed90 6a06 	vldr	s12, [r0, #24]
90019090:	edd0 7a00 	vldr	s15, [r0]
90019094:	edd0 6a07 	vldr	s13, [r0, #28]
90019098:	eee6 7a00 	vfma.f32	s15, s12, s0
9001909c:	ed90 7a08 	vldr	s14, [r0, #32]
900190a0:	edc0 7a00 	vstr	s15, [r0]
900190a4:	edd0 7a01 	vldr	s15, [r0, #4]
900190a8:	eee6 7a80 	vfma.f32	s15, s13, s0
900190ac:	edc0 7a01 	vstr	s15, [r0, #4]
900190b0:	edd0 7a02 	vldr	s15, [r0, #8]
900190b4:	eee7 7a00 	vfma.f32	s15, s14, s0
900190b8:	edc0 7a02 	vstr	s15, [r0, #8]
900190bc:	edd0 7a03 	vldr	s15, [r0, #12]
900190c0:	eee6 7a20 	vfma.f32	s15, s12, s1
900190c4:	edc0 7a03 	vstr	s15, [r0, #12]
900190c8:	edd0 7a04 	vldr	s15, [r0, #16]
900190cc:	eee6 7aa0 	vfma.f32	s15, s13, s1
900190d0:	edc0 7a04 	vstr	s15, [r0, #16]
900190d4:	edd0 7a05 	vldr	s15, [r0, #20]
900190d8:	eee7 7a20 	vfma.f32	s15, s14, s1
900190dc:	edc0 7a05 	vstr	s15, [r0, #20]
900190e0:	4770      	bx	lr

900190e2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
900190e2:	edd0 6a01 	vldr	s13, [r0, #4]
900190e6:	b084      	sub	sp, #16
900190e8:	edd0 7a04 	vldr	s15, [r0, #16]
900190ec:	ed90 7a03 	vldr	s14, [r0, #12]
900190f0:	ee60 7aa7 	vmul.f32	s15, s1, s15
900190f4:	ee60 0aa6 	vmul.f32	s1, s1, s13
900190f8:	edd0 6a00 	vldr	s13, [r0]
900190fc:	eee7 7a00 	vfma.f32	s15, s14, s0
90019100:	ed90 7a05 	vldr	s14, [r0, #20]
90019104:	eee6 0a80 	vfma.f32	s1, s13, s0
90019108:	ed90 0a02 	vldr	s0, [r0, #8]
9001910c:	ee30 0a80 	vadd.f32	s0, s1, s0
90019110:	ee77 0a87 	vadd.f32	s1, s15, s14
90019114:	b004      	add	sp, #16
90019116:	4770      	bx	lr

90019118 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019118:	b530      	push	{r4, r5, lr}
9001911a:	8083      	strh	r3, [r0, #4]
9001911c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90019120:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019124:	80c3      	strh	r3, [r0, #6]
90019126:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001912a:	6141      	str	r1, [r0, #20]
9001912c:	7203      	strb	r3, [r0, #8]
9001912e:	f89d 3014 	ldrb.w	r3, [sp, #20]
90019132:	8302      	strh	r2, [r0, #24]
90019134:	7243      	strb	r3, [r0, #9]
90019136:	7a83      	ldrb	r3, [r0, #10]
90019138:	f365 0306 	bfi	r3, r5, #0, #7
9001913c:	f89d 501c 	ldrb.w	r5, [sp, #28]
90019140:	f365 13c7 	bfi	r3, r5, #7, #1
90019144:	7283      	strb	r3, [r0, #10]
90019146:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001914a:	72c3      	strb	r3, [r0, #11]
9001914c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90019150:	7303      	strb	r3, [r0, #12]
90019152:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90019156:	81c3      	strh	r3, [r0, #14]
90019158:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001915c:	8203      	strh	r3, [r0, #16]
9001915e:	4b01      	ldr	r3, [pc, #4]	@ (90019164 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90019160:	6003      	str	r3, [r0, #0]
90019162:	bd30      	pop	{r4, r5, pc}
90019164:	9002e9e8 	.word	0x9002e9e8

90019168 <_ZNK8touchgfx9ConstFont4findEt>:
90019168:	b5f0      	push	{r4, r5, r6, r7, lr}
9001916a:	6944      	ldr	r4, [r0, #20]
9001916c:	b3bc      	cbz	r4, 900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001916e:	88a3      	ldrh	r3, [r4, #4]
90019170:	8b02      	ldrh	r2, [r0, #24]
90019172:	1acb      	subs	r3, r1, r3
90019174:	f102 32ff 	add.w	r2, r2, #4294967295
90019178:	d431      	bmi.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001917a:	4293      	cmp	r3, r2
9001917c:	dd0c      	ble.n	90019198 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001917e:	230e      	movs	r3, #14
90019180:	fb03 4302 	mla	r3, r3, r2, r4
90019184:	889b      	ldrh	r3, [r3, #4]
90019186:	1a5b      	subs	r3, r3, r1
90019188:	1ad3      	subs	r3, r2, r3
9001918a:	429a      	cmp	r2, r3
9001918c:	db27      	blt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001918e:	2b00      	cmp	r3, #0
90019190:	bfbc      	itt	lt
90019192:	2302      	movlt	r3, #2
90019194:	fb92 f3f3 	sdivlt	r3, r2, r3
90019198:	2500      	movs	r5, #0
9001919a:	260e      	movs	r6, #14
9001919c:	4295      	cmp	r5, r2
9001919e:	dc1e      	bgt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
900191a0:	fb06 4003 	mla	r0, r6, r3, r4
900191a4:	8887      	ldrh	r7, [r0, #4]
900191a6:	42b9      	cmp	r1, r7
900191a8:	d01a      	beq.n	900191e0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
900191aa:	d20d      	bcs.n	900191c8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900191ac:	1e5a      	subs	r2, r3, #1
900191ae:	4295      	cmp	r5, r2
900191b0:	dc15      	bgt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
900191b2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900191b6:	1a5b      	subs	r3, r3, r1
900191b8:	1ad3      	subs	r3, r2, r3
900191ba:	429a      	cmp	r2, r3
900191bc:	db0f      	blt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
900191be:	429d      	cmp	r5, r3
900191c0:	ddec      	ble.n	9001919c <_ZNK8touchgfx9ConstFont4findEt+0x34>
900191c2:	1953      	adds	r3, r2, r5
900191c4:	105b      	asrs	r3, r3, #1
900191c6:	e7e9      	b.n	9001919c <_ZNK8touchgfx9ConstFont4findEt+0x34>
900191c8:	1c5d      	adds	r5, r3, #1
900191ca:	42aa      	cmp	r2, r5
900191cc:	db07      	blt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
900191ce:	8a43      	ldrh	r3, [r0, #18]
900191d0:	1acb      	subs	r3, r1, r3
900191d2:	442b      	add	r3, r5
900191d4:	429d      	cmp	r5, r3
900191d6:	dc02      	bgt.n	900191de <_ZNK8touchgfx9ConstFont4findEt+0x76>
900191d8:	429a      	cmp	r2, r3
900191da:	dadf      	bge.n	9001919c <_ZNK8touchgfx9ConstFont4findEt+0x34>
900191dc:	e7f1      	b.n	900191c2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
900191de:	2000      	movs	r0, #0
900191e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

900191e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
900191e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900191e4:	4604      	mov	r4, r0
900191e6:	4617      	mov	r7, r2
900191e8:	461e      	mov	r6, r3
900191ea:	b911      	cbnz	r1, 900191f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
900191ec:	2500      	movs	r5, #0
900191ee:	4628      	mov	r0, r5
900191f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900191f2:	290a      	cmp	r1, #10
900191f4:	d0fa      	beq.n	900191ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900191f6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900191fa:	4291      	cmp	r1, r2
900191fc:	d0f6      	beq.n	900191ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900191fe:	f242 020b 	movw	r2, #8203	@ 0x200b
90019202:	4291      	cmp	r1, r2
90019204:	d0f2      	beq.n	900191ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019206:	f7ff ffaf 	bl	90019168 <_ZNK8touchgfx9ConstFont4findEt>
9001920a:	4605      	mov	r5, r0
9001920c:	b950      	cbnz	r0, 90019224 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001920e:	6823      	ldr	r3, [r4, #0]
90019210:	4620      	mov	r0, r4
90019212:	691b      	ldr	r3, [r3, #16]
90019214:	4798      	blx	r3
90019216:	4601      	mov	r1, r0
90019218:	4620      	mov	r0, r4
9001921a:	f7ff ffa5 	bl	90019168 <_ZNK8touchgfx9ConstFont4findEt>
9001921e:	4605      	mov	r5, r0
90019220:	2800      	cmp	r0, #0
90019222:	d0e3      	beq.n	900191ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019224:	6823      	ldr	r3, [r4, #0]
90019226:	4629      	mov	r1, r5
90019228:	4620      	mov	r0, r4
9001922a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001922c:	4798      	blx	r3
9001922e:	6038      	str	r0, [r7, #0]
90019230:	6823      	ldr	r3, [r4, #0]
90019232:	4620      	mov	r0, r4
90019234:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90019236:	4798      	blx	r3
90019238:	7030      	strb	r0, [r6, #0]
9001923a:	e7d8      	b.n	900191ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001923c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
9001923c:	2000      	movs	r0, #0
9001923e:	4770      	bx	lr

90019240 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90019240:	2001      	movs	r0, #1
90019242:	4770      	bx	lr

90019244 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90019244:	2002      	movs	r0, #2
90019246:	4770      	bx	lr

90019248 <_ZN8touchgfx6ScreenD1Ev>:
90019248:	4770      	bx	lr

9001924a <_ZN8touchgfx6Screen11setupScreenEv>:
9001924a:	4770      	bx	lr

9001924c <_ZN8touchgfx12GestureEventD1Ev>:
9001924c:	4770      	bx	lr

9001924e <_ZN8touchgfx9DragEventD1Ev>:
9001924e:	4770      	bx	lr

90019250 <_ZN8touchgfx10ClickEventD1Ev>:
90019250:	4770      	bx	lr

90019252 <_ZN8touchgfx10ClickEventD0Ev>:
90019252:	b510      	push	{r4, lr}
90019254:	4604      	mov	r4, r0
90019256:	210c      	movs	r1, #12
90019258:	f010 ff74 	bl	9002a144 <_ZdlPvj>
9001925c:	4620      	mov	r0, r4
9001925e:	bd10      	pop	{r4, pc}

90019260 <_ZN8touchgfx9DragEventD0Ev>:
90019260:	b510      	push	{r4, lr}
90019262:	4604      	mov	r4, r0
90019264:	2110      	movs	r1, #16
90019266:	f010 ff6d 	bl	9002a144 <_ZdlPvj>
9001926a:	4620      	mov	r0, r4
9001926c:	bd10      	pop	{r4, pc}

9001926e <_ZN8touchgfx12GestureEventD0Ev>:
9001926e:	b510      	push	{r4, lr}
90019270:	4604      	mov	r4, r0
90019272:	210c      	movs	r1, #12
90019274:	f010 ff66 	bl	9002a144 <_ZdlPvj>
90019278:	4620      	mov	r0, r4
9001927a:	bd10      	pop	{r4, pc}

9001927c <_ZN8touchgfx6ScreenD0Ev>:
9001927c:	b510      	push	{r4, lr}
9001927e:	4604      	mov	r4, r0
90019280:	213c      	movs	r1, #60	@ 0x3c
90019282:	f010 ff5f 	bl	9002a144 <_ZdlPvj>
90019286:	4620      	mov	r0, r4
90019288:	bd10      	pop	{r4, pc}
	...

9001928c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001928c:	b530      	push	{r4, r5, lr}
9001928e:	460d      	mov	r5, r1
90019290:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90019292:	b087      	sub	sp, #28
90019294:	4604      	mov	r4, r0
90019296:	b301      	cbz	r1, 900192da <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90019298:	a801      	add	r0, sp, #4
9001929a:	f7ff fb81 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001929e:	892a      	ldrh	r2, [r5, #8]
900192a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900192a4:	7928      	ldrb	r0, [r5, #4]
900192a6:	1ad2      	subs	r2, r2, r3
900192a8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900192aa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900192ae:	441a      	add	r2, r3
900192b0:	896b      	ldrh	r3, [r5, #10]
900192b2:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900192b6:	f88d 0010 	strb.w	r0, [sp, #16]
900192ba:	1b5b      	subs	r3, r3, r5
900192bc:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
900192be:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900192c0:	442b      	add	r3, r5
900192c2:	4d07      	ldr	r5, [pc, #28]	@ (900192e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900192c4:	f8ad 1012 	strh.w	r1, [sp, #18]
900192c8:	a903      	add	r1, sp, #12
900192ca:	9503      	str	r5, [sp, #12]
900192cc:	f8ad 2014 	strh.w	r2, [sp, #20]
900192d0:	f8ad 3016 	strh.w	r3, [sp, #22]
900192d4:	6803      	ldr	r3, [r0, #0]
900192d6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900192d8:	4798      	blx	r3
900192da:	b007      	add	sp, #28
900192dc:	bd30      	pop	{r4, r5, pc}
900192de:	bf00      	nop
900192e0:	9002ea78 	.word	0x9002ea78

900192e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900192e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900192e8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
900192ea:	b08a      	sub	sp, #40	@ 0x28
900192ec:	4604      	mov	r4, r0
900192ee:	460d      	mov	r5, r1
900192f0:	b113      	cbz	r3, 900192f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
900192f2:	790b      	ldrb	r3, [r1, #4]
900192f4:	2b00      	cmp	r3, #0
900192f6:	d044      	beq.n	90019382 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900192f8:	f104 0804 	add.w	r8, r4, #4
900192fc:	a803      	add	r0, sp, #12
900192fe:	4641      	mov	r1, r8
90019300:	f7ff fb4e 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019304:	792b      	ldrb	r3, [r5, #4]
90019306:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001930a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001930e:	b983      	cbnz	r3, 90019332 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90019310:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90019314:	892a      	ldrh	r2, [r5, #8]
90019316:	88e9      	ldrh	r1, [r5, #6]
90019318:	4640      	mov	r0, r8
9001931a:	1b92      	subs	r2, r2, r6
9001931c:	9301      	str	r3, [sp, #4]
9001931e:	1bc9      	subs	r1, r1, r7
90019320:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90019324:	b212      	sxth	r2, r2
90019326:	9300      	str	r3, [sp, #0]
90019328:	b209      	sxth	r1, r1
9001932a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001932e:	f7f7 ffb3 	bl	90011298 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90019332:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90019334:	b329      	cbz	r1, 90019382 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019336:	a805      	add	r0, sp, #20
90019338:	f7ff fb32 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001933c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019340:	792b      	ldrb	r3, [r5, #4]
90019342:	a907      	add	r1, sp, #28
90019344:	1abf      	subs	r7, r7, r2
90019346:	88ea      	ldrh	r2, [r5, #6]
90019348:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001934a:	4417      	add	r7, r2
9001934c:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001934e:	f88d 3020 	strb.w	r3, [sp, #32]
90019352:	4417      	add	r7, r2
90019354:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90019358:	1ab6      	subs	r6, r6, r2
9001935a:	892a      	ldrh	r2, [r5, #8]
9001935c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90019360:	4416      	add	r6, r2
90019362:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019364:	4416      	add	r6, r2
90019366:	4a08      	ldr	r2, [pc, #32]	@ (90019388 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90019368:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001936c:	2600      	movs	r6, #0
9001936e:	9207      	str	r2, [sp, #28]
90019370:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90019374:	6803      	ldr	r3, [r0, #0]
90019376:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019378:	4798      	blx	r3
9001937a:	792b      	ldrb	r3, [r5, #4]
9001937c:	b10b      	cbz	r3, 90019382 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001937e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90019382:	b00a      	add	sp, #40	@ 0x28
90019384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019388:	9002ea50 	.word	0x9002ea50

9001938c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001938c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019390:	460c      	mov	r4, r1
90019392:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90019394:	b088      	sub	sp, #32
90019396:	4605      	mov	r5, r0
90019398:	2900      	cmp	r1, #0
9001939a:	d06d      	beq.n	90019478 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001939c:	4668      	mov	r0, sp
9001939e:	f7ff faff 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900193a2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
900193a4:	88e3      	ldrh	r3, [r4, #6]
900193a6:	f9bd 8000 	ldrsh.w	r8, [sp]
900193aa:	440b      	add	r3, r1
900193ac:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900193b0:	b21b      	sxth	r3, r3
900193b2:	4543      	cmp	r3, r8
900193b4:	db31      	blt.n	9001941a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900193b6:	f8bd c004 	ldrh.w	ip, [sp, #4]
900193ba:	44c4      	add	ip, r8
900193bc:	fa0f fc8c 	sxth.w	ip, ip
900193c0:	4563      	cmp	r3, ip
900193c2:	da2a      	bge.n	9001941a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900193c4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900193c6:	8926      	ldrh	r6, [r4, #8]
900193c8:	4416      	add	r6, r2
900193ca:	b236      	sxth	r6, r6
900193cc:	42be      	cmp	r6, r7
900193ce:	db24      	blt.n	9001941a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900193d0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900193d4:	4438      	add	r0, r7
900193d6:	b200      	sxth	r0, r0
900193d8:	4286      	cmp	r6, r0
900193da:	da1e      	bge.n	9001941a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900193dc:	8963      	ldrh	r3, [r4, #10]
900193de:	4419      	add	r1, r3
900193e0:	b209      	sxth	r1, r1
900193e2:	4541      	cmp	r1, r8
900193e4:	db08      	blt.n	900193f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900193e6:	4561      	cmp	r1, ip
900193e8:	da06      	bge.n	900193f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900193ea:	89a3      	ldrh	r3, [r4, #12]
900193ec:	441a      	add	r2, r3
900193ee:	b212      	sxth	r2, r2
900193f0:	42ba      	cmp	r2, r7
900193f2:	db01      	blt.n	900193f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900193f4:	4282      	cmp	r2, r0
900193f6:	db10      	blt.n	9001941a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900193f8:	4b21      	ldr	r3, [pc, #132]	@ (90019480 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
900193fa:	a904      	add	r1, sp, #16
900193fc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900193fe:	9304      	str	r3, [sp, #16]
90019400:	2302      	movs	r3, #2
90019402:	f88d 3014 	strb.w	r3, [sp, #20]
90019406:	2300      	movs	r3, #0
90019408:	f8ad 3016 	strh.w	r3, [sp, #22]
9001940c:	f8ad 3018 	strh.w	r3, [sp, #24]
90019410:	f8ad 301a 	strh.w	r3, [sp, #26]
90019414:	6803      	ldr	r3, [r0, #0]
90019416:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019418:	4798      	blx	r3
9001941a:	1d29      	adds	r1, r5, #4
9001941c:	a802      	add	r0, sp, #8
9001941e:	f7ff fabf 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019422:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019426:	88e0      	ldrh	r0, [r4, #6]
90019428:	eba3 0808 	sub.w	r8, r3, r8
9001942c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019430:	7921      	ldrb	r1, [r4, #4]
90019432:	fa1f f888 	uxth.w	r8, r8
90019436:	1bdf      	subs	r7, r3, r7
90019438:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001943c:	b2bb      	uxth	r3, r7
9001943e:	4440      	add	r0, r8
90019440:	8922      	ldrh	r2, [r4, #8]
90019442:	8967      	ldrh	r7, [r4, #10]
90019444:	4460      	add	r0, ip
90019446:	89a4      	ldrh	r4, [r4, #12]
90019448:	441a      	add	r2, r3
9001944a:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001944c:	44b8      	add	r8, r7
9001944e:	4423      	add	r3, r4
90019450:	f8ad 0016 	strh.w	r0, [sp, #22]
90019454:	4432      	add	r2, r6
90019456:	44e0      	add	r8, ip
90019458:	4433      	add	r3, r6
9001945a:	4c0a      	ldr	r4, [pc, #40]	@ (90019484 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001945c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001945e:	f88d 1014 	strb.w	r1, [sp, #20]
90019462:	a904      	add	r1, sp, #16
90019464:	9404      	str	r4, [sp, #16]
90019466:	f8ad 2018 	strh.w	r2, [sp, #24]
9001946a:	f8ad 801a 	strh.w	r8, [sp, #26]
9001946e:	f8ad 301c 	strh.w	r3, [sp, #28]
90019472:	6803      	ldr	r3, [r0, #0]
90019474:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90019476:	4798      	blx	r3
90019478:	b008      	add	sp, #32
9001947a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001947e:	bf00      	nop
90019480:	9002ea50 	.word	0x9002ea50
90019484:	9002ea64 	.word	0x9002ea64

90019488 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90019488:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001948a:	4604      	mov	r4, r0
9001948c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90019490:	3201      	adds	r2, #1
90019492:	d112      	bne.n	900194ba <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90019494:	2500      	movs	r5, #0
90019496:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001949a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001949e:	6803      	ldr	r3, [r0, #0]
900194a0:	9500      	str	r5, [sp, #0]
900194a2:	466d      	mov	r5, sp
900194a4:	f8ad 1004 	strh.w	r1, [sp, #4]
900194a8:	f8ad 2006 	strh.w	r2, [sp, #6]
900194ac:	4629      	mov	r1, r5
900194ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900194b0:	4798      	blx	r3
900194b2:	e895 0003 	ldmia.w	r5, {r0, r1}
900194b6:	e884 0003 	stmia.w	r4, {r0, r1}
900194ba:	4620      	mov	r0, r4
900194bc:	b003      	add	sp, #12
900194be:	bd30      	pop	{r4, r5, pc}

900194c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900194c0:	b513      	push	{r0, r1, r4, lr}
900194c2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900194c6:	4604      	mov	r4, r0
900194c8:	3301      	adds	r3, #1
900194ca:	d109      	bne.n	900194e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900194cc:	4601      	mov	r1, r0
900194ce:	4668      	mov	r0, sp
900194d0:	f7ff fa66 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900194d4:	f8bd 3000 	ldrh.w	r3, [sp]
900194d8:	8423      	strh	r3, [r4, #32]
900194da:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900194de:	8463      	strh	r3, [r4, #34]	@ 0x22
900194e0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900194e4:	b002      	add	sp, #8
900194e6:	bd10      	pop	{r4, pc}

900194e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
900194e8:	b513      	push	{r0, r1, r4, lr}
900194ea:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
900194ee:	4604      	mov	r4, r0
900194f0:	3301      	adds	r3, #1
900194f2:	d109      	bne.n	90019508 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
900194f4:	4601      	mov	r1, r0
900194f6:	4668      	mov	r0, sp
900194f8:	f7ff fa52 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900194fc:	f8bd 3000 	ldrh.w	r3, [sp]
90019500:	8423      	strh	r3, [r4, #32]
90019502:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019506:	8463      	strh	r3, [r4, #34]	@ 0x22
90019508:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001950c:	b002      	add	sp, #8
9001950e:	bd10      	pop	{r4, pc}

90019510 <_ZN8touchgfx6ScreenC1Ev>:
90019510:	b570      	push	{r4, r5, r6, lr}
90019512:	4b17      	ldr	r3, [pc, #92]	@ (90019570 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90019514:	4605      	mov	r5, r0
90019516:	4a17      	ldr	r2, [pc, #92]	@ (90019574 <_ZN8touchgfx6ScreenC1Ev+0x64>)
90019518:	2101      	movs	r1, #1
9001951a:	f845 3b04 	str.w	r3, [r5], #4
9001951e:	2300      	movs	r3, #0
90019520:	6042      	str	r2, [r0, #4]
90019522:	4604      	mov	r4, r0
90019524:	8103      	strh	r3, [r0, #8]
90019526:	8143      	strh	r3, [r0, #10]
90019528:	8183      	strh	r3, [r0, #12]
9001952a:	81c3      	strh	r3, [r0, #14]
9001952c:	8203      	strh	r3, [r0, #16]
9001952e:	8243      	strh	r3, [r0, #18]
90019530:	8283      	strh	r3, [r0, #20]
90019532:	82c3      	strh	r3, [r0, #22]
90019534:	6203      	str	r3, [r0, #32]
90019536:	8483      	strh	r3, [r0, #36]	@ 0x24
90019538:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001953a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001953e:	6343      	str	r3, [r0, #52]	@ 0x34
90019540:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90019544:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90019548:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001954c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90019550:	4b09      	ldr	r3, [pc, #36]	@ (90019578 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90019552:	4628      	mov	r0, r5
90019554:	f9b3 6000 	ldrsh.w	r6, [r3]
90019558:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001955a:	4a08      	ldr	r2, [pc, #32]	@ (9001957c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001955c:	f9b2 1000 	ldrsh.w	r1, [r2]
90019560:	4798      	blx	r3
90019562:	6863      	ldr	r3, [r4, #4]
90019564:	4628      	mov	r0, r5
90019566:	4631      	mov	r1, r6
90019568:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001956a:	4798      	blx	r3
9001956c:	4620      	mov	r0, r4
9001956e:	bd70      	pop	{r4, r5, r6, pc}
90019570:	9002ea8c 	.word	0x9002ea8c
90019574:	9002e52c 	.word	0x9002e52c
90019578:	24021d5a 	.word	0x24021d5a
9001957c:	24021d58 	.word	0x24021d58

90019580 <_ZN8touchgfx6Screen4drawEv>:
90019580:	4b09      	ldr	r3, [pc, #36]	@ (900195a8 <_ZN8touchgfx6Screen4drawEv+0x28>)
90019582:	b507      	push	{r0, r1, r2, lr}
90019584:	f9b3 2000 	ldrsh.w	r2, [r3]
90019588:	2100      	movs	r1, #0
9001958a:	4b08      	ldr	r3, [pc, #32]	@ (900195ac <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001958c:	9100      	str	r1, [sp, #0]
9001958e:	4669      	mov	r1, sp
90019590:	f9b3 3000 	ldrsh.w	r3, [r3]
90019594:	f8ad 2004 	strh.w	r2, [sp, #4]
90019598:	f8ad 3006 	strh.w	r3, [sp, #6]
9001959c:	6803      	ldr	r3, [r0, #0]
9001959e:	689b      	ldr	r3, [r3, #8]
900195a0:	4798      	blx	r3
900195a2:	b003      	add	sp, #12
900195a4:	f85d fb04 	ldr.w	pc, [sp], #4
900195a8:	24021d58 	.word	0x24021d58
900195ac:	24021d5a 	.word	0x24021d5a

900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900195b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900195b4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900195b8:	b089      	sub	sp, #36	@ 0x24
900195ba:	4680      	mov	r8, r0
900195bc:	460c      	mov	r4, r1
900195be:	2b00      	cmp	r3, #0
900195c0:	4615      	mov	r5, r2
900195c2:	dd0e      	ble.n	900195e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900195c4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900195c8:	2b00      	cmp	r3, #0
900195ca:	dd0a      	ble.n	900195e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900195cc:	4628      	mov	r0, r5
900195ce:	f7ff ff5b 	bl	90019488 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900195d2:	4621      	mov	r1, r4
900195d4:	f7fd fe67 	bl	900172a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900195d8:	69eb      	ldr	r3, [r5, #28]
900195da:	b928      	cbnz	r0, 900195e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900195dc:	461d      	mov	r5, r3
900195de:	2b00      	cmp	r3, #0
900195e0:	d1f4      	bne.n	900195cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900195e2:	b009      	add	sp, #36	@ 0x24
900195e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900195e8:	ae04      	add	r6, sp, #16
900195ea:	2b00      	cmp	r3, #0
900195ec:	f000 80b5 	beq.w	9001975a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900195f0:	682b      	ldr	r3, [r5, #0]
900195f2:	4629      	mov	r1, r5
900195f4:	a802      	add	r0, sp, #8
900195f6:	68db      	ldr	r3, [r3, #12]
900195f8:	4798      	blx	r3
900195fa:	4628      	mov	r0, r5
900195fc:	f7ff ff60 	bl	900194c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019600:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90019604:	4407      	add	r7, r0
90019606:	4628      	mov	r0, r5
90019608:	f7ff ff6e 	bl	900194e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001960c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019610:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90019614:	b23f      	sxth	r7, r7
90019616:	4418      	add	r0, r3
90019618:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001961c:	4621      	mov	r1, r4
9001961e:	f8ad 2014 	strh.w	r2, [sp, #20]
90019622:	f8ad 0012 	strh.w	r0, [sp, #18]
90019626:	4630      	mov	r0, r6
90019628:	f8ad 3016 	strh.w	r3, [sp, #22]
9001962c:	f8ad 7010 	strh.w	r7, [sp, #16]
90019630:	f7f7 ff14 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90019634:	4628      	mov	r0, r5
90019636:	f7ff ff27 	bl	90019488 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001963a:	ab06      	add	r3, sp, #24
9001963c:	4602      	mov	r2, r0
9001963e:	e896 0003 	ldmia.w	r6, {r0, r1}
90019642:	e883 0003 	stmia.w	r3, {r0, r1}
90019646:	4611      	mov	r1, r2
90019648:	4618      	mov	r0, r3
9001964a:	f7f7 ff07 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
9001964e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019652:	f9b4 1000 	ldrsh.w	r1, [r4]
90019656:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001965a:	4299      	cmp	r1, r3
9001965c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019660:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019664:	d10b      	bne.n	9001967e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019666:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001966a:	4552      	cmp	r2, sl
9001966c:	d107      	bne.n	9001967e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001966e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019672:	455a      	cmp	r2, fp
90019674:	d103      	bne.n	9001967e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019676:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001967a:	454a      	cmp	r2, r9
9001967c:	d06d      	beq.n	9001975a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001967e:	f1bb 0f00 	cmp.w	fp, #0
90019682:	dd65      	ble.n	90019750 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019684:	f1b9 0f00 	cmp.w	r9, #0
90019688:	dd62      	ble.n	90019750 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001968a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001968e:	fa1f f08a 	uxth.w	r0, sl
90019692:	4552      	cmp	r2, sl
90019694:	9000      	str	r0, [sp, #0]
90019696:	da12      	bge.n	900196be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019698:	9301      	str	r3, [sp, #4]
9001969a:	9b00      	ldr	r3, [sp, #0]
9001969c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900196a0:	f8ad 2012 	strh.w	r2, [sp, #18]
900196a4:	1a9a      	subs	r2, r3, r2
900196a6:	f8ad 1010 	strh.w	r1, [sp, #16]
900196aa:	4631      	mov	r1, r6
900196ac:	f8ad 0014 	strh.w	r0, [sp, #20]
900196b0:	4640      	mov	r0, r8
900196b2:	f8ad 2016 	strh.w	r2, [sp, #22]
900196b6:	69ea      	ldr	r2, [r5, #28]
900196b8:	f7ff ff7a 	bl	900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900196bc:	9b01      	ldr	r3, [sp, #4]
900196be:	f9b4 2000 	ldrsh.w	r2, [r4]
900196c2:	b29f      	uxth	r7, r3
900196c4:	429a      	cmp	r2, r3
900196c6:	da0d      	bge.n	900196e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900196c8:	f8ad 2010 	strh.w	r2, [sp, #16]
900196cc:	1aba      	subs	r2, r7, r2
900196ce:	f8ad a012 	strh.w	sl, [sp, #18]
900196d2:	4631      	mov	r1, r6
900196d4:	f8ad 2014 	strh.w	r2, [sp, #20]
900196d8:	4640      	mov	r0, r8
900196da:	f8ad 9016 	strh.w	r9, [sp, #22]
900196de:	69ea      	ldr	r2, [r5, #28]
900196e0:	f7ff ff66 	bl	900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900196e4:	8822      	ldrh	r2, [r4, #0]
900196e6:	445f      	add	r7, fp
900196e8:	88a3      	ldrh	r3, [r4, #4]
900196ea:	b2bf      	uxth	r7, r7
900196ec:	4413      	add	r3, r2
900196ee:	b23a      	sxth	r2, r7
900196f0:	b29b      	uxth	r3, r3
900196f2:	b219      	sxth	r1, r3
900196f4:	4291      	cmp	r1, r2
900196f6:	dd0d      	ble.n	90019714 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
900196f8:	1bdb      	subs	r3, r3, r7
900196fa:	f8ad 2010 	strh.w	r2, [sp, #16]
900196fe:	f8ad a012 	strh.w	sl, [sp, #18]
90019702:	4631      	mov	r1, r6
90019704:	f8ad 3014 	strh.w	r3, [sp, #20]
90019708:	4640      	mov	r0, r8
9001970a:	f8ad 9016 	strh.w	r9, [sp, #22]
9001970e:	69ea      	ldr	r2, [r5, #28]
90019710:	f7ff ff4e 	bl	900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019714:	88e2      	ldrh	r2, [r4, #6]
90019716:	8863      	ldrh	r3, [r4, #2]
90019718:	4413      	add	r3, r2
9001971a:	9a00      	ldr	r2, [sp, #0]
9001971c:	444a      	add	r2, r9
9001971e:	b29b      	uxth	r3, r3
90019720:	fa1f f982 	uxth.w	r9, r2
90019724:	b219      	sxth	r1, r3
90019726:	fa0f f289 	sxth.w	r2, r9
9001972a:	428a      	cmp	r2, r1
9001972c:	da15      	bge.n	9001975a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001972e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019732:	eba3 0309 	sub.w	r3, r3, r9
90019736:	f9b4 0000 	ldrsh.w	r0, [r4]
9001973a:	f8ad 1014 	strh.w	r1, [sp, #20]
9001973e:	4631      	mov	r1, r6
90019740:	f8ad 0010 	strh.w	r0, [sp, #16]
90019744:	f8ad 2012 	strh.w	r2, [sp, #18]
90019748:	f8ad 3016 	strh.w	r3, [sp, #22]
9001974c:	69ea      	ldr	r2, [r5, #28]
9001974e:	e001      	b.n	90019754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019750:	69ea      	ldr	r2, [r5, #28]
90019752:	4621      	mov	r1, r4
90019754:	4640      	mov	r0, r8
90019756:	f7ff ff2b 	bl	900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001975a:	4628      	mov	r0, r5
9001975c:	f7ff fe94 	bl	90019488 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019760:	6861      	ldr	r1, [r4, #4]
90019762:	4602      	mov	r2, r0
90019764:	4633      	mov	r3, r6
90019766:	6820      	ldr	r0, [r4, #0]
90019768:	c303      	stmia	r3!, {r0, r1}
9001976a:	4611      	mov	r1, r2
9001976c:	4630      	mov	r0, r6
9001976e:	f7f7 fe75 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90019772:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019776:	2b00      	cmp	r3, #0
90019778:	f77f af33 	ble.w	900195e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001977c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019780:	2b00      	cmp	r3, #0
90019782:	f77f af2e 	ble.w	900195e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019786:	4628      	mov	r0, r5
90019788:	f7ff fe9a 	bl	900194c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001978c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019790:	1a18      	subs	r0, r3, r0
90019792:	f8ad 0010 	strh.w	r0, [sp, #16]
90019796:	4628      	mov	r0, r5
90019798:	f7ff fea6 	bl	900194e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001979c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900197a0:	4631      	mov	r1, r6
900197a2:	1a18      	subs	r0, r3, r0
900197a4:	f8ad 0012 	strh.w	r0, [sp, #18]
900197a8:	4628      	mov	r0, r5
900197aa:	682b      	ldr	r3, [r5, #0]
900197ac:	689b      	ldr	r3, [r3, #8]
900197ae:	4798      	blx	r3
900197b0:	e717      	b.n	900195e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900197b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900197b2:	b570      	push	{r4, r5, r6, lr}
900197b4:	1d06      	adds	r6, r0, #4
900197b6:	b086      	sub	sp, #24
900197b8:	460c      	mov	r4, r1
900197ba:	2300      	movs	r3, #0
900197bc:	4631      	mov	r1, r6
900197be:	4605      	mov	r5, r0
900197c0:	a802      	add	r0, sp, #8
900197c2:	9301      	str	r3, [sp, #4]
900197c4:	f7ff f8ec 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900197c8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900197cc:	8822      	ldrh	r2, [r4, #0]
900197ce:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900197d2:	1ad2      	subs	r2, r2, r3
900197d4:	8863      	ldrh	r3, [r4, #2]
900197d6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900197da:	1a5b      	subs	r3, r3, r1
900197dc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900197e0:	f8ad 2010 	strh.w	r2, [sp, #16]
900197e4:	aa01      	add	r2, sp, #4
900197e6:	f8ad 0014 	strh.w	r0, [sp, #20]
900197ea:	4630      	mov	r0, r6
900197ec:	f8ad 1016 	strh.w	r1, [sp, #22]
900197f0:	a904      	add	r1, sp, #16
900197f2:	f8ad 3012 	strh.w	r3, [sp, #18]
900197f6:	f7f7 ff09 	bl	9001160c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
900197fa:	9a01      	ldr	r2, [sp, #4]
900197fc:	b11a      	cbz	r2, 90019806 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
900197fe:	4621      	mov	r1, r4
90019800:	4628      	mov	r0, r5
90019802:	f7ff fed5 	bl	900195b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019806:	b006      	add	sp, #24
90019808:	bd70      	pop	{r4, r5, r6, pc}

9001980a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001980a:	4602      	mov	r2, r0
9001980c:	b530      	push	{r4, r5, lr}
9001980e:	4604      	mov	r4, r0
90019810:	b085      	sub	sp, #20
90019812:	f852 0f08 	ldr.w	r0, [r2, #8]!
90019816:	460d      	mov	r5, r1
90019818:	466b      	mov	r3, sp
9001981a:	6851      	ldr	r1, [r2, #4]
9001981c:	c303      	stmia	r3!, {r0, r1}
9001981e:	4629      	mov	r1, r5
90019820:	4668      	mov	r0, sp
90019822:	f7f7 fe1b 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90019826:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001982a:	b12b      	cbz	r3, 90019838 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001982c:	4669      	mov	r1, sp
9001982e:	4620      	mov	r0, r4
90019830:	f7ff ffbf 	bl	900197b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019834:	b005      	add	sp, #20
90019836:	bd30      	pop	{r4, r5, pc}
90019838:	3404      	adds	r4, #4
9001983a:	a802      	add	r0, sp, #8
9001983c:	4621      	mov	r1, r4
9001983e:	f7ff f8af 	bl	900189a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019842:	f8bd 3000 	ldrh.w	r3, [sp]
90019846:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001984a:	4669      	mov	r1, sp
9001984c:	4620      	mov	r0, r4
9001984e:	1a9b      	subs	r3, r3, r2
90019850:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019854:	f8ad 3000 	strh.w	r3, [sp]
90019858:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001985c:	1a9b      	subs	r3, r3, r2
9001985e:	f8ad 3002 	strh.w	r3, [sp, #2]
90019862:	f7f7 fe9a 	bl	9001159a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019866:	e7e5      	b.n	90019834 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019868 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019868:	460b      	mov	r3, r1
9001986a:	680a      	ldr	r2, [r1, #0]
9001986c:	1d01      	adds	r1, r0, #4
9001986e:	6992      	ldr	r2, [r2, #24]
90019870:	4618      	mov	r0, r3
90019872:	4710      	bx	r2

90019874 <_ZN8touchgfx12TextProviderC1Ev>:
90019874:	b538      	push	{r3, r4, r5, lr}
90019876:	2500      	movs	r5, #0
90019878:	2302      	movs	r3, #2
9001987a:	4604      	mov	r4, r0
9001987c:	220e      	movs	r2, #14
9001987e:	7403      	strb	r3, [r0, #16]
90019880:	4629      	mov	r1, r5
90019882:	6145      	str	r5, [r0, #20]
90019884:	7605      	strb	r5, [r0, #24]
90019886:	83c5      	strh	r5, [r0, #30]
90019888:	8405      	strh	r5, [r0, #32]
9001988a:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001988c:	8705      	strh	r5, [r0, #56]	@ 0x38
9001988e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
90019890:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
90019894:	e9c0 5500 	strd	r5, r5, [r0]
90019898:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001989c:	304c      	adds	r0, #76	@ 0x4c
9001989e:	f011 fa7d 	bl	9002ad9c <memset>
900198a2:	2301      	movs	r3, #1
900198a4:	4620      	mov	r0, r4
900198a6:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900198aa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900198ae:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900198b2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900198b6:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
900198ba:	f7ec ff7b 	bl	900067b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
900198be:	4620      	mov	r0, r4
900198c0:	bd38      	pop	{r3, r4, r5, pc}

900198c2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
900198c2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
900198c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900198c8:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
900198ca:	fab0 f080 	clz	r0, r0
900198ce:	0940      	lsrs	r0, r0, #5
900198d0:	4770      	bx	lr

900198d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900198d2:	b530      	push	{r4, r5, lr}
900198d4:	2500      	movs	r5, #0
900198d6:	2401      	movs	r4, #1
900198d8:	6843      	ldr	r3, [r0, #4]
900198da:	b913      	cbnz	r3, 900198e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
900198dc:	6803      	ldr	r3, [r0, #0]
900198de:	b313      	cbz	r3, 90019926 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900198e0:	6043      	str	r3, [r0, #4]
900198e2:	7e03      	ldrb	r3, [r0, #24]
900198e4:	b143      	cbz	r3, 900198f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
900198e6:	6943      	ldr	r3, [r0, #20]
900198e8:	b12b      	cbz	r3, 900198f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900198ea:	881a      	ldrh	r2, [r3, #0]
900198ec:	b11a      	cbz	r2, 900198f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900198ee:	1c9a      	adds	r2, r3, #2
900198f0:	6142      	str	r2, [r0, #20]
900198f2:	8818      	ldrh	r0, [r3, #0]
900198f4:	bd30      	pop	{r4, r5, pc}
900198f6:	7605      	strb	r5, [r0, #24]
900198f8:	6843      	ldr	r3, [r0, #4]
900198fa:	8819      	ldrh	r1, [r3, #0]
900198fc:	b199      	cbz	r1, 90019926 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900198fe:	1c9a      	adds	r2, r3, #2
90019900:	2902      	cmp	r1, #2
90019902:	6042      	str	r2, [r0, #4]
90019904:	d1f5      	bne.n	900198f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90019906:	7c03      	ldrb	r3, [r0, #16]
90019908:	2b01      	cmp	r3, #1
9001990a:	d8e5      	bhi.n	900198d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001990c:	1c5a      	adds	r2, r3, #1
9001990e:	3302      	adds	r3, #2
90019910:	7402      	strb	r2, [r0, #16]
90019912:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90019916:	6143      	str	r3, [r0, #20]
90019918:	2b00      	cmp	r3, #0
9001991a:	d0dd      	beq.n	900198d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001991c:	881b      	ldrh	r3, [r3, #0]
9001991e:	2b00      	cmp	r3, #0
90019920:	d0da      	beq.n	900198d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019922:	7604      	strb	r4, [r0, #24]
90019924:	e7d8      	b.n	900198d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019926:	2000      	movs	r0, #0
90019928:	e7e4      	b.n	900198f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001992a:	6001      	str	r1, [r0, #0]
9001992c:	2100      	movs	r1, #0
9001992e:	b430      	push	{r4, r5}
90019930:	6041      	str	r1, [r0, #4]
90019932:	6815      	ldr	r5, [r2, #0]
90019934:	6085      	str	r5, [r0, #8]
90019936:	6852      	ldr	r2, [r2, #4]
90019938:	6443      	str	r3, [r0, #68]	@ 0x44
9001993a:	9b02      	ldr	r3, [sp, #8]
9001993c:	60c2      	str	r2, [r0, #12]
9001993e:	7401      	strb	r1, [r0, #16]
90019940:	6141      	str	r1, [r0, #20]
90019942:	7601      	strb	r1, [r0, #24]
90019944:	8701      	strh	r1, [r0, #56]	@ 0x38
90019946:	8401      	strh	r1, [r0, #32]
90019948:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001994c:	6483      	str	r3, [r0, #72]	@ 0x48
9001994e:	bc30      	pop	{r4, r5}
90019950:	f7ec bf30 	b.w	900067b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90019954 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90019954:	b408      	push	{r3}
90019956:	b510      	push	{r4, lr}
90019958:	b085      	sub	sp, #20
9001995a:	ac07      	add	r4, sp, #28
9001995c:	f854 3b04 	ldr.w	r3, [r4], #4
90019960:	9300      	str	r3, [sp, #0]
90019962:	4613      	mov	r3, r2
90019964:	4622      	mov	r2, r4
90019966:	9403      	str	r4, [sp, #12]
90019968:	f7ff ffdf 	bl	9001992a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001996c:	b005      	add	sp, #20
9001996e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019972:	b001      	add	sp, #4
90019974:	4770      	bx	lr

90019976 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90019976:	b5f0      	push	{r4, r5, r6, r7, lr}
90019978:	4605      	mov	r5, r0
9001997a:	4608      	mov	r0, r1
9001997c:	b1f1      	cbz	r1, 900199bc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001997e:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
90019982:	460b      	mov	r3, r1
90019984:	f101 0708 	add.w	r7, r1, #8
90019988:	4622      	mov	r2, r4
9001998a:	6818      	ldr	r0, [r3, #0]
9001998c:	3308      	adds	r3, #8
9001998e:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019992:	4626      	mov	r6, r4
90019994:	42bb      	cmp	r3, r7
90019996:	c603      	stmia	r6!, {r0, r1}
90019998:	4634      	mov	r4, r6
9001999a:	d1f6      	bne.n	9001998a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001999c:	6818      	ldr	r0, [r3, #0]
9001999e:	6030      	str	r0, [r6, #0]
900199a0:	4610      	mov	r0, r2
900199a2:	889b      	ldrh	r3, [r3, #4]
900199a4:	80b3      	strh	r3, [r6, #4]
900199a6:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900199aa:	015b      	lsls	r3, r3, #5
900199ac:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900199b0:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900199b4:	430b      	orrs	r3, r1
900199b6:	425b      	negs	r3, r3
900199b8:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900199bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

900199be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900199be:	b538      	push	{r3, r4, r5, lr}
900199c0:	460c      	mov	r4, r1
900199c2:	6811      	ldr	r1, [r2, #0]
900199c4:	4610      	mov	r0, r2
900199c6:	68cd      	ldr	r5, [r1, #12]
900199c8:	4619      	mov	r1, r3
900199ca:	47a8      	blx	r5
900199cc:	2800      	cmp	r0, #0
900199ce:	bf08      	it	eq
900199d0:	4620      	moveq	r0, r4
900199d2:	bd38      	pop	{r3, r4, r5, pc}

900199d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900199d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900199d8:	468c      	mov	ip, r1
900199da:	4605      	mov	r5, r0
900199dc:	4614      	mov	r4, r2
900199de:	b942      	cbnz	r2, 900199f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
900199e0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900199e4:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
900199e8:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
900199ec:	4620      	mov	r0, r4
900199ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900199f2:	7b50      	ldrb	r0, [r2, #13]
900199f4:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
900199f8:	8893      	ldrh	r3, [r2, #4]
900199fa:	0106      	lsls	r6, r0, #4
900199fc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90019a00:	79e6      	ldrb	r6, [r4, #7]
90019a02:	4316      	orrs	r6, r2
90019a04:	185a      	adds	r2, r3, r1
90019a06:	b291      	uxth	r1, r2
90019a08:	b2b7      	uxth	r7, r6
90019a0a:	291d      	cmp	r1, #29
90019a0c:	d87f      	bhi.n	90019b0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019a0e:	2201      	movs	r2, #1
90019a10:	10f6      	asrs	r6, r6, #3
90019a12:	408a      	lsls	r2, r1
90019a14:	498b      	ldr	r1, [pc, #556]	@ (90019c44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
90019a16:	420a      	tst	r2, r1
90019a18:	d12e      	bne.n	90019a78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90019a1a:	f412 7f60 	tst.w	r2, #896	@ 0x380
90019a1e:	d076      	beq.n	90019b0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019a20:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90019a24:	4623      	mov	r3, r4
90019a26:	f104 0e08 	add.w	lr, r4, #8
90019a2a:	4614      	mov	r4, r2
90019a2c:	6818      	ldr	r0, [r3, #0]
90019a2e:	3308      	adds	r3, #8
90019a30:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019a34:	4694      	mov	ip, r2
90019a36:	4573      	cmp	r3, lr
90019a38:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019a3c:	4662      	mov	r2, ip
90019a3e:	d1f5      	bne.n	90019a2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019a40:	6818      	ldr	r0, [r3, #0]
90019a42:	f8cc 0000 	str.w	r0, [ip]
90019a46:	889b      	ldrh	r3, [r3, #4]
90019a48:	f8ac 3004 	strh.w	r3, [ip, #4]
90019a4c:	b2b3      	uxth	r3, r6
90019a4e:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
90019a52:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
90019a56:	1aca      	subs	r2, r1, r3
90019a58:	1bcf      	subs	r7, r1, r7
90019a5a:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90019a5e:	b292      	uxth	r2, r2
90019a60:	1afb      	subs	r3, r7, r3
90019a62:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
90019a66:	10d2      	asrs	r2, r2, #3
90019a68:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90019a6c:	4302      	orrs	r2, r0
90019a6e:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
90019a72:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
90019a76:	e7b9      	b.n	900199ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90019a78:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90019a7c:	4623      	mov	r3, r4
90019a7e:	f104 0808 	add.w	r8, r4, #8
90019a82:	4614      	mov	r4, r2
90019a84:	6818      	ldr	r0, [r3, #0]
90019a86:	3308      	adds	r3, #8
90019a88:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019a8c:	4696      	mov	lr, r2
90019a8e:	4543      	cmp	r3, r8
90019a90:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019a94:	4672      	mov	r2, lr
90019a96:	d1f5      	bne.n	90019a84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
90019a98:	6818      	ldr	r0, [r3, #0]
90019a9a:	f8ce 0000 	str.w	r0, [lr]
90019a9e:	889b      	ldrh	r3, [r3, #4]
90019aa0:	f8ae 3004 	strh.w	r3, [lr, #4]
90019aa4:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
90019aa6:	eb05 0343 	add.w	r3, r5, r3, lsl #1
90019aaa:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
90019aac:	f640 6333 	movw	r3, #3635	@ 0xe33
90019ab0:	4299      	cmp	r1, r3
90019ab2:	d111      	bne.n	90019ad8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90019ab4:	f8dc 3000 	ldr.w	r3, [ip]
90019ab8:	4660      	mov	r0, ip
90019aba:	68db      	ldr	r3, [r3, #12]
90019abc:	4798      	blx	r3
90019abe:	7b41      	ldrb	r1, [r0, #13]
90019ac0:	00cb      	lsls	r3, r1, #3
90019ac2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019ac6:	7a03      	ldrb	r3, [r0, #8]
90019ac8:	4313      	orrs	r3, r2
90019aca:	064a      	lsls	r2, r1, #25
90019acc:	bf44      	itt	mi
90019ace:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019ad2:	b21b      	sxthmi	r3, r3
90019ad4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019ad8:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
90019adc:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
90019ae0:	443b      	add	r3, r7
90019ae2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019ae6:	4433      	add	r3, r6
90019ae8:	b29b      	uxth	r3, r3
90019aea:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019aee:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
90019af2:	10db      	asrs	r3, r3, #3
90019af4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019af8:	4313      	orrs	r3, r2
90019afa:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90019afe:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
90019b02:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
90019b06:	1a9b      	subs	r3, r3, r2
90019b08:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90019b0c:	e76e      	b.n	900199ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90019b0e:	f023 0204 	bic.w	r2, r3, #4
90019b12:	f640 611b 	movw	r1, #3611	@ 0xe1b
90019b16:	428a      	cmp	r2, r1
90019b18:	d003      	beq.n	90019b22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90019b1a:	f640 621d 	movw	r2, #3613	@ 0xe1d
90019b1e:	4293      	cmp	r3, r2
90019b20:	d138      	bne.n	90019b94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
90019b22:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
90019b26:	4622      	mov	r2, r4
90019b28:	f104 0808 	add.w	r8, r4, #8
90019b2c:	4634      	mov	r4, r6
90019b2e:	6810      	ldr	r0, [r2, #0]
90019b30:	3208      	adds	r2, #8
90019b32:	f852 1c04 	ldr.w	r1, [r2, #-4]
90019b36:	46b6      	mov	lr, r6
90019b38:	4542      	cmp	r2, r8
90019b3a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019b3e:	4676      	mov	r6, lr
90019b40:	d1f5      	bne.n	90019b2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
90019b42:	6810      	ldr	r0, [r2, #0]
90019b44:	3b01      	subs	r3, #1
90019b46:	4621      	mov	r1, r4
90019b48:	f8ce 0000 	str.w	r0, [lr]
90019b4c:	b29b      	uxth	r3, r3
90019b4e:	8892      	ldrh	r2, [r2, #4]
90019b50:	4628      	mov	r0, r5
90019b52:	f8ae 2004 	strh.w	r2, [lr, #4]
90019b56:	4662      	mov	r2, ip
90019b58:	f7ff ff31 	bl	900199be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90019b5c:	7b41      	ldrb	r1, [r0, #13]
90019b5e:	00cb      	lsls	r3, r1, #3
90019b60:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019b64:	7a03      	ldrb	r3, [r0, #8]
90019b66:	0648      	lsls	r0, r1, #25
90019b68:	ea43 0302 	orr.w	r3, r3, r2
90019b6c:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
90019b70:	bf44      	itt	mi
90019b72:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019b76:	b21b      	sxthmi	r3, r3
90019b78:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019b7c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
90019b80:	005b      	lsls	r3, r3, #1
90019b82:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019b86:	4313      	orrs	r3, r2
90019b88:	115a      	asrs	r2, r3, #5
90019b8a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90019b8e:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
90019b92:	e047      	b.n	90019c24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
90019b94:	00c2      	lsls	r2, r0, #3
90019b96:	f402 7180 	and.w	r1, r2, #256	@ 0x100
90019b9a:	7a22      	ldrb	r2, [r4, #8]
90019b9c:	430a      	orrs	r2, r1
90019b9e:	0641      	lsls	r1, r0, #25
90019ba0:	f640 6109 	movw	r1, #3593	@ 0xe09
90019ba4:	bf44      	itt	mi
90019ba6:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
90019baa:	b212      	sxthmi	r2, r2
90019bac:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
90019bb0:	f023 0210 	bic.w	r2, r3, #16
90019bb4:	428a      	cmp	r2, r1
90019bb6:	d003      	beq.n	90019bc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
90019bb8:	f640 6213 	movw	r2, #3603	@ 0xe13
90019bbc:	4293      	cmp	r3, r2
90019bbe:	d13e      	bne.n	90019c3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
90019bc0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90019bc4:	f104 0808 	add.w	r8, r4, #8
90019bc8:	4696      	mov	lr, r2
90019bca:	6820      	ldr	r0, [r4, #0]
90019bcc:	3408      	adds	r4, #8
90019bce:	f854 1c04 	ldr.w	r1, [r4, #-4]
90019bd2:	4616      	mov	r6, r2
90019bd4:	4544      	cmp	r4, r8
90019bd6:	c603      	stmia	r6!, {r0, r1}
90019bd8:	4632      	mov	r2, r6
90019bda:	d1f6      	bne.n	90019bca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90019bdc:	6820      	ldr	r0, [r4, #0]
90019bde:	6030      	str	r0, [r6, #0]
90019be0:	4628      	mov	r0, r5
90019be2:	88a1      	ldrh	r1, [r4, #4]
90019be4:	4674      	mov	r4, lr
90019be6:	80b1      	strh	r1, [r6, #4]
90019be8:	4671      	mov	r1, lr
90019bea:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90019bee:	0076      	lsls	r6, r6, #1
90019bf0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90019bf4:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
90019bf8:	4316      	orrs	r6, r2
90019bfa:	f640 6213 	movw	r2, #3603	@ 0xe13
90019bfe:	4293      	cmp	r3, r2
90019c00:	4662      	mov	r2, ip
90019c02:	bf16      	itet	ne
90019c04:	f103 33ff 	addne.w	r3, r3, #4294967295
90019c08:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90019c0c:	b29b      	uxthne	r3, r3
90019c0e:	f7ff fed6 	bl	900199be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90019c12:	7b43      	ldrb	r3, [r0, #13]
90019c14:	7a82      	ldrb	r2, [r0, #10]
90019c16:	005b      	lsls	r3, r3, #1
90019c18:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019c1c:	4313      	orrs	r3, r2
90019c1e:	1af6      	subs	r6, r6, r3
90019c20:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
90019c24:	7b61      	ldrb	r1, [r4, #13]
90019c26:	00cb      	lsls	r3, r1, #3
90019c28:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019c2c:	7a23      	ldrb	r3, [r4, #8]
90019c2e:	4313      	orrs	r3, r2
90019c30:	064a      	lsls	r2, r1, #25
90019c32:	bf44      	itt	mi
90019c34:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019c38:	b21b      	sxthmi	r3, r3
90019c3a:	1bdb      	subs	r3, r3, r7
90019c3c:	e719      	b.n	90019a72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90019c3e:	2300      	movs	r3, #0
90019c40:	e7a5      	b.n	90019b8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90019c42:	bf00      	nop
90019c44:	3fc00079 	.word	0x3fc00079

90019c48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90019c48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019c4c:	4604      	mov	r4, r0
90019c4e:	b942      	cbnz	r2, 90019c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90019c50:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90019c54:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90019c58:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90019c5c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90019c60:	e047      	b.n	90019cf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019c62:	7b51      	ldrb	r1, [r2, #13]
90019c64:	8893      	ldrh	r3, [r2, #4]
90019c66:	010d      	lsls	r5, r1, #4
90019c68:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90019c6c:	79d5      	ldrb	r5, [r2, #7]
90019c6e:	4305      	orrs	r5, r0
90019c70:	2d04      	cmp	r5, #4
90019c72:	bfcc      	ite	gt
90019c74:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90019c78:	f04f 0e01 	movle.w	lr, #1
90019c7c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90019c80:	f200 80ab 	bhi.w	90019dda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90019c84:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90019c88:	4283      	cmp	r3, r0
90019c8a:	d216      	bcs.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019c8c:	f240 605b 	movw	r0, #1627	@ 0x65b
90019c90:	4283      	cmp	r3, r0
90019c92:	d859      	bhi.n	90019d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90019c94:	f240 6057 	movw	r0, #1623	@ 0x657
90019c98:	4283      	cmp	r3, r0
90019c9a:	d20e      	bcs.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019c9c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90019ca0:	d24a      	bcs.n	90019d38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90019ca2:	f240 604e 	movw	r0, #1614	@ 0x64e
90019ca6:	4283      	cmp	r3, r0
90019ca8:	d207      	bcs.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019caa:	f240 601a 	movw	r0, #1562	@ 0x61a
90019cae:	4283      	cmp	r3, r0
90019cb0:	d02a      	beq.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019cb2:	d821      	bhi.n	90019cf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90019cb4:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90019cb8:	d35b      	bcc.n	90019d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019cba:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90019cbe:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019cc2:	f040 80d0 	bne.w	90019e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90019cc6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90019cca:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019cce:	f040 80ca 	bne.w	90019e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90019cd2:	00cb      	lsls	r3, r1, #3
90019cd4:	0649      	lsls	r1, r1, #25
90019cd6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019cda:	7a13      	ldrb	r3, [r2, #8]
90019cdc:	ea43 0300 	orr.w	r3, r3, r0
90019ce0:	bf44      	itt	mi
90019ce2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019ce6:	b21b      	sxthmi	r3, r3
90019ce8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019cec:	1b5d      	subs	r5, r3, r5
90019cee:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019cf2:	4610      	mov	r0, r2
90019cf4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019cf8:	f240 604b 	movw	r0, #1611	@ 0x64b
90019cfc:	4283      	cmp	r3, r0
90019cfe:	d338      	bcc.n	90019d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019d00:	f240 604c 	movw	r0, #1612	@ 0x64c
90019d04:	4283      	cmp	r3, r0
90019d06:	d9d8      	bls.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019d08:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90019d0c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90019d10:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019d14:	f040 80f3 	bne.w	90019efe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019d18:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019d1c:	f040 80ef 	bne.w	90019efe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019d20:	00cb      	lsls	r3, r1, #3
90019d22:	064e      	lsls	r6, r1, #25
90019d24:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019d28:	7a13      	ldrb	r3, [r2, #8]
90019d2a:	ea43 0300 	orr.w	r3, r3, r0
90019d2e:	bf44      	itt	mi
90019d30:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019d34:	b21b      	sxthmi	r3, r3
90019d36:	e7d9      	b.n	90019cec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90019d38:	f240 6054 	movw	r0, #1620	@ 0x654
90019d3c:	4283      	cmp	r3, r0
90019d3e:	d8e3      	bhi.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019d40:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90019d44:	d9e0      	bls.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019d46:	e7b8      	b.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019d48:	f240 6074 	movw	r0, #1652	@ 0x674
90019d4c:	4283      	cmp	r3, r0
90019d4e:	d0b4      	beq.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019d50:	d82d      	bhi.n	90019dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90019d52:	f240 605e 	movw	r0, #1630	@ 0x65e
90019d56:	4283      	cmp	r3, r0
90019d58:	d804      	bhi.n	90019d64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90019d5a:	f240 605d 	movw	r0, #1629	@ 0x65d
90019d5e:	4283      	cmp	r3, r0
90019d60:	d3d2      	bcc.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019d62:	e7aa      	b.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019d64:	f240 605f 	movw	r0, #1631	@ 0x65f
90019d68:	4283      	cmp	r3, r0
90019d6a:	d0cd      	beq.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019d6c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90019d70:	d0a3      	beq.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019d72:	00cb      	lsls	r3, r1, #3
90019d74:	0649      	lsls	r1, r1, #25
90019d76:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019d7a:	7a13      	ldrb	r3, [r2, #8]
90019d7c:	ea43 0300 	orr.w	r3, r3, r0
90019d80:	bf44      	itt	mi
90019d82:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019d86:	b21b      	sxthmi	r3, r3
90019d88:	1b5d      	subs	r5, r3, r5
90019d8a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019d8e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019d92:	7b53      	ldrb	r3, [r2, #13]
90019d94:	015b      	lsls	r3, r3, #5
90019d96:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90019d9a:	7993      	ldrb	r3, [r2, #6]
90019d9c:	430b      	orrs	r3, r1
90019d9e:	2105      	movs	r1, #5
90019da0:	005b      	lsls	r3, r3, #1
90019da2:	fb93 f3f1 	sdiv	r3, r3, r1
90019da6:	f992 1009 	ldrsb.w	r1, [r2, #9]
90019daa:	440b      	add	r3, r1
90019dac:	e756      	b.n	90019c5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90019dae:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90019db2:	4283      	cmp	r3, r0
90019db4:	d809      	bhi.n	90019dca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90019db6:	f240 60df 	movw	r0, #1759	@ 0x6df
90019dba:	4283      	cmp	r3, r0
90019dbc:	f4bf af7d 	bcs.w	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019dc0:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90019dc4:	2b05      	cmp	r3, #5
90019dc6:	d8d4      	bhi.n	90019d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019dc8:	e777      	b.n	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019dca:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90019dce:	4283      	cmp	r3, r0
90019dd0:	d09a      	beq.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019dd2:	f240 60e4 	movw	r0, #1764	@ 0x6e4
90019dd6:	4283      	cmp	r3, r0
90019dd8:	e7ca      	b.n	90019d70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90019dda:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90019dde:	d22b      	bcs.n	90019e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90019de0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90019de4:	4283      	cmp	r3, r0
90019de6:	d28f      	bcs.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019de8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90019dec:	4283      	cmp	r3, r0
90019dee:	d816      	bhi.n	90019e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90019df0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90019df4:	4283      	cmp	r3, r0
90019df6:	f4bf af60 	bcs.w	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019dfa:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90019dfe:	4283      	cmp	r3, r0
90019e00:	d80a      	bhi.n	90019e18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90019e02:	f240 60eb 	movw	r0, #1771	@ 0x6eb
90019e06:	4283      	cmp	r3, r0
90019e08:	f4bf af57 	bcs.w	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019e0c:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90019e10:	4283      	cmp	r3, r0
90019e12:	f43f af79 	beq.w	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019e16:	e7ac      	b.n	90019d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019e18:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90019e1c:	e7f8      	b.n	90019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90019e1e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90019e22:	4283      	cmp	r3, r0
90019e24:	d802      	bhi.n	90019e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90019e26:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90019e2a:	e798      	b.n	90019d5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90019e2c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90019e30:	4283      	cmp	r3, r0
90019e32:	f47f af42 	bne.w	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019e36:	e767      	b.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019e38:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90019e3c:	4283      	cmp	r3, r0
90019e3e:	f43f af63 	beq.w	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019e42:	d802      	bhi.n	90019e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90019e44:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90019e48:	e7f2      	b.n	90019e30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90019e4a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90019e4e:	4283      	cmp	r3, r0
90019e50:	d805      	bhi.n	90019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90019e52:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90019e56:	4283      	cmp	r3, r0
90019e58:	f4ff af2f 	bcc.w	90019cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019e5c:	e754      	b.n	90019d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019e5e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90019e62:	4283      	cmp	r3, r0
90019e64:	e7af      	b.n	90019dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90019e66:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019e6a:	4617      	mov	r7, r2
90019e6c:	f102 0808 	add.w	r8, r2, #8
90019e70:	4666      	mov	r6, ip
90019e72:	6838      	ldr	r0, [r7, #0]
90019e74:	3708      	adds	r7, #8
90019e76:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019e7a:	46e6      	mov	lr, ip
90019e7c:	4547      	cmp	r7, r8
90019e7e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019e82:	46f4      	mov	ip, lr
90019e84:	d1f5      	bne.n	90019e72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90019e86:	6838      	ldr	r0, [r7, #0]
90019e88:	f8ce 0000 	str.w	r0, [lr]
90019e8c:	88b9      	ldrh	r1, [r7, #4]
90019e8e:	f8ae 1004 	strh.w	r1, [lr, #4]
90019e92:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019e96:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019e9a:	d009      	beq.n	90019eb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90019e9c:	7b51      	ldrb	r1, [r2, #13]
90019e9e:	7992      	ldrb	r2, [r2, #6]
90019ea0:	0149      	lsls	r1, r1, #5
90019ea2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019ea6:	4311      	orrs	r1, r2
90019ea8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019eac:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019eb0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019eb4:	b2ad      	uxth	r5, r5
90019eb6:	d00d      	beq.n	90019ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90019eb8:	442b      	add	r3, r5
90019eba:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019ebe:	b29b      	uxth	r3, r3
90019ec0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019ec4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019ec8:	10db      	asrs	r3, r3, #3
90019eca:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019ece:	4313      	orrs	r3, r2
90019ed0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019ed4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019ed8:	00cb      	lsls	r3, r1, #3
90019eda:	064f      	lsls	r7, r1, #25
90019edc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019ee0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019ee4:	ea43 0302 	orr.w	r3, r3, r2
90019ee8:	bf44      	itt	mi
90019eea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019eee:	b21b      	sxthmi	r3, r3
90019ef0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019ef4:	1b5b      	subs	r3, r3, r5
90019ef6:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90019efa:	4632      	mov	r2, r6
90019efc:	e6f9      	b.n	90019cf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019efe:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019f02:	4617      	mov	r7, r2
90019f04:	f102 0908 	add.w	r9, r2, #8
90019f08:	4666      	mov	r6, ip
90019f0a:	6838      	ldr	r0, [r7, #0]
90019f0c:	3708      	adds	r7, #8
90019f0e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019f12:	46e0      	mov	r8, ip
90019f14:	454f      	cmp	r7, r9
90019f16:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90019f1a:	46c4      	mov	ip, r8
90019f1c:	d1f5      	bne.n	90019f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90019f1e:	6838      	ldr	r0, [r7, #0]
90019f20:	f8c8 0000 	str.w	r0, [r8]
90019f24:	88b9      	ldrh	r1, [r7, #4]
90019f26:	f8a8 1004 	strh.w	r1, [r8, #4]
90019f2a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019f2e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019f32:	d009      	beq.n	90019f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90019f34:	7b51      	ldrb	r1, [r2, #13]
90019f36:	7992      	ldrb	r2, [r2, #6]
90019f38:	0149      	lsls	r1, r1, #5
90019f3a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019f3e:	4311      	orrs	r1, r2
90019f40:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019f44:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019f48:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019f4c:	d00e      	beq.n	90019f6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019f4e:	eba3 030e 	sub.w	r3, r3, lr
90019f52:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019f56:	b29b      	uxth	r3, r3
90019f58:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019f5c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019f60:	10db      	asrs	r3, r3, #3
90019f62:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019f66:	4313      	orrs	r3, r2
90019f68:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019f6c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019f70:	00cb      	lsls	r3, r1, #3
90019f72:	0648      	lsls	r0, r1, #25
90019f74:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019f78:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019f7c:	ea43 0302 	orr.w	r3, r3, r2
90019f80:	bf44      	itt	mi
90019f82:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019f86:	b21b      	sxthmi	r3, r3
90019f88:	1b5d      	subs	r5, r3, r5
90019f8a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019f8e:	e7b4      	b.n	90019efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90019f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90019f90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019f94:	461e      	mov	r6, r3
90019f96:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019f98:	4604      	mov	r4, r0
90019f9a:	4617      	mov	r7, r2
90019f9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019fa0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019fa4:	f7ec fbb6 	bl	90006714 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019fa8:	4605      	mov	r5, r0
90019faa:	b918      	cbnz	r0, 90019fb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90019fac:	6030      	str	r0, [r6, #0]
90019fae:	4628      	mov	r0, r5
90019fb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019fb4:	683b      	ldr	r3, [r7, #0]
90019fb6:	4601      	mov	r1, r0
90019fb8:	4638      	mov	r0, r7
90019fba:	68db      	ldr	r3, [r3, #12]
90019fbc:	4798      	blx	r3
90019fbe:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019fc2:	4602      	mov	r2, r0
90019fc4:	6030      	str	r0, [r6, #0]
90019fc6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019fca:	d213      	bcs.n	90019ff4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90019fcc:	4643      	mov	r3, r8
90019fce:	4639      	mov	r1, r7
90019fd0:	4620      	mov	r0, r4
90019fd2:	f7ff fe39 	bl	90019c48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019fd6:	6030      	str	r0, [r6, #0]
90019fd8:	6833      	ldr	r3, [r6, #0]
90019fda:	b143      	cbz	r3, 90019fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90019fdc:	7b5a      	ldrb	r2, [r3, #13]
90019fde:	7a9b      	ldrb	r3, [r3, #10]
90019fe0:	0052      	lsls	r2, r2, #1
90019fe2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019fe6:	4313      	orrs	r3, r2
90019fe8:	bf0c      	ite	eq
90019fea:	2301      	moveq	r3, #1
90019fec:	2300      	movne	r3, #0
90019fee:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019ff2:	e7dc      	b.n	90019fae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90019ff4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019ff8:	b29b      	uxth	r3, r3
90019ffa:	2b7f      	cmp	r3, #127	@ 0x7f
90019ffc:	d804      	bhi.n	9001a008 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90019ffe:	4639      	mov	r1, r7
9001a000:	4620      	mov	r0, r4
9001a002:	f7ff fce7 	bl	900199d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a006:	e7e6      	b.n	90019fd6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001a008:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001a00c:	2b00      	cmp	r3, #0
9001a00e:	d0e3      	beq.n	90019fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a010:	f640 1302 	movw	r3, #2306	@ 0x902
9001a014:	429d      	cmp	r5, r3
9001a016:	d1df      	bne.n	90019fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a018:	4601      	mov	r1, r0
9001a01a:	4620      	mov	r0, r4
9001a01c:	f7ff fcab 	bl	90019976 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a020:	e7d9      	b.n	90019fd6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001a022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001a022:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001a026:	461e      	mov	r6, r3
9001a028:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001a02a:	4604      	mov	r4, r0
9001a02c:	4617      	mov	r7, r2
9001a02e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a032:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001a036:	f7ec fb6d 	bl	90006714 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a03a:	4605      	mov	r5, r0
9001a03c:	b918      	cbnz	r0, 9001a046 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001a03e:	6030      	str	r0, [r6, #0]
9001a040:	4628      	mov	r0, r5
9001a042:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001a046:	683b      	ldr	r3, [r7, #0]
9001a048:	4601      	mov	r1, r0
9001a04a:	4638      	mov	r0, r7
9001a04c:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001a050:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001a054:	47c8      	blx	r9
9001a056:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001a05a:	4602      	mov	r2, r0
9001a05c:	6030      	str	r0, [r6, #0]
9001a05e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001a062:	d213      	bcs.n	9001a08c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001a064:	4643      	mov	r3, r8
9001a066:	4639      	mov	r1, r7
9001a068:	4620      	mov	r0, r4
9001a06a:	f7ff fded 	bl	90019c48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a06e:	6030      	str	r0, [r6, #0]
9001a070:	6833      	ldr	r3, [r6, #0]
9001a072:	b143      	cbz	r3, 9001a086 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001a074:	7b5a      	ldrb	r2, [r3, #13]
9001a076:	7a9b      	ldrb	r3, [r3, #10]
9001a078:	0052      	lsls	r2, r2, #1
9001a07a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001a07e:	4313      	orrs	r3, r2
9001a080:	bf0c      	ite	eq
9001a082:	2301      	moveq	r3, #1
9001a084:	2300      	movne	r3, #0
9001a086:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001a08a:	e7d9      	b.n	9001a040 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001a08c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001a090:	b29b      	uxth	r3, r3
9001a092:	2b7f      	cmp	r3, #127	@ 0x7f
9001a094:	d804      	bhi.n	9001a0a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001a096:	4639      	mov	r1, r7
9001a098:	4620      	mov	r0, r4
9001a09a:	f7ff fc9b 	bl	900199d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a09e:	e7e6      	b.n	9001a06e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001a0a0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001a0a4:	2b00      	cmp	r3, #0
9001a0a6:	d0e3      	beq.n	9001a070 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a0a8:	f640 1302 	movw	r3, #2306	@ 0x902
9001a0ac:	429d      	cmp	r5, r3
9001a0ae:	d1df      	bne.n	9001a070 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a0b0:	4601      	mov	r1, r0
9001a0b2:	4620      	mov	r0, r4
9001a0b4:	f7ff fc5f 	bl	90019976 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a0b8:	e7d9      	b.n	9001a06e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001a0ba <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001a0ba:	b510      	push	{r4, lr}
9001a0bc:	4604      	mov	r4, r0
9001a0be:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001a0c2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001a0c4:	b1e1      	cbz	r1, 9001a100 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a0c6:	2b0a      	cmp	r3, #10
9001a0c8:	d02d      	beq.n	9001a126 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a0ca:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001a0cc:	3901      	subs	r1, #1
9001a0ce:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001a0d2:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001a0d4:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001a0d8:	1c51      	adds	r1, r2, #1
9001a0da:	b289      	uxth	r1, r1
9001a0dc:	2901      	cmp	r1, #1
9001a0de:	bf8a      	itet	hi
9001a0e0:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001a0e4:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001a0e6:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001a0e8:	1c5a      	adds	r2, r3, #1
9001a0ea:	8722      	strh	r2, [r4, #56]	@ 0x38
9001a0ec:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001a0ee:	4413      	add	r3, r2
9001a0f0:	b29b      	uxth	r3, r3
9001a0f2:	2b09      	cmp	r3, #9
9001a0f4:	bf88      	it	hi
9001a0f6:	3b0a      	subhi	r3, #10
9001a0f8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a0fc:	8458      	strh	r0, [r3, #34]	@ 0x22
9001a0fe:	e7de      	b.n	9001a0be <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001a100:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001a102:	2b0a      	cmp	r3, #10
9001a104:	d00f      	beq.n	9001a126 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a106:	4620      	mov	r0, r4
9001a108:	f7ff fbe3 	bl	900198d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001a10c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001a10e:	1c5a      	adds	r2, r3, #1
9001a110:	8722      	strh	r2, [r4, #56]	@ 0x38
9001a112:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001a114:	4413      	add	r3, r2
9001a116:	b29b      	uxth	r3, r3
9001a118:	2b09      	cmp	r3, #9
9001a11a:	bf88      	it	hi
9001a11c:	3b0a      	subhi	r3, #10
9001a11e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a122:	8458      	strh	r0, [r3, #34]	@ 0x22
9001a124:	e7ec      	b.n	9001a100 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a126:	bd10      	pop	{r4, pc}

9001a128 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001a128:	b538      	push	{r3, r4, r5, lr}
9001a12a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001a12c:	4604      	mov	r4, r0
9001a12e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001a132:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001a134:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001a136:	3a01      	subs	r2, #1
9001a138:	8702      	strh	r2, [r0, #56]	@ 0x38
9001a13a:	1c5a      	adds	r2, r3, #1
9001a13c:	b292      	uxth	r2, r2
9001a13e:	2a09      	cmp	r2, #9
9001a140:	bf8a      	itet	hi
9001a142:	3b09      	subhi	r3, #9
9001a144:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001a146:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001a148:	f7ff ffb7 	bl	9001a0ba <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001a14c:	8c23      	ldrh	r3, [r4, #32]
9001a14e:	2b01      	cmp	r3, #1
9001a150:	bf9c      	itt	ls
9001a152:	3301      	addls	r3, #1
9001a154:	8423      	strhls	r3, [r4, #32]
9001a156:	8be3      	ldrh	r3, [r4, #30]
9001a158:	b90b      	cbnz	r3, 9001a15e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001a15a:	2302      	movs	r3, #2
9001a15c:	83e3      	strh	r3, [r4, #30]
9001a15e:	8be3      	ldrh	r3, [r4, #30]
9001a160:	4628      	mov	r0, r5
9001a162:	3b01      	subs	r3, #1
9001a164:	b29b      	uxth	r3, r3
9001a166:	83e3      	strh	r3, [r4, #30]
9001a168:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a16c:	8365      	strh	r5, [r4, #26]
9001a16e:	bd38      	pop	{r3, r4, r5, pc}

9001a170 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001a170:	428a      	cmp	r2, r1
9001a172:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a176:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001a178:	d932      	bls.n	9001a1e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001a17a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001a17c:	1a54      	subs	r4, r2, r1
9001a17e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001a182:	19ee      	adds	r6, r5, r7
9001a184:	fa1f fe84 	uxth.w	lr, r4
9001a188:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001a18c:	3e01      	subs	r6, #1
9001a18e:	b2b4      	uxth	r4, r6
9001a190:	eba4 090e 	sub.w	r9, r4, lr
9001a194:	fa1f f989 	uxth.w	r9, r9
9001a198:	2c09      	cmp	r4, #9
9001a19a:	4626      	mov	r6, r4
9001a19c:	bf88      	it	hi
9001a19e:	f1a4 060a 	subhi.w	r6, r4, #10
9001a1a2:	f1bc 0f00 	cmp.w	ip, #0
9001a1a6:	f104 34ff 	add.w	r4, r4, #4294967295
9001a1aa:	bf08      	it	eq
9001a1ac:	f04f 0c02 	moveq.w	ip, #2
9001a1b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001a1b4:	b2a4      	uxth	r4, r4
9001a1b6:	f10c 3cff 	add.w	ip, ip, #4294967295
9001a1ba:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001a1be:	454c      	cmp	r4, r9
9001a1c0:	fa1f fc8c 	uxth.w	ip, ip
9001a1c4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001a1c8:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001a1cc:	d1e4      	bne.n	9001a198 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001a1ce:	eba5 050e 	sub.w	r5, r5, lr
9001a1d2:	eb0e 0408 	add.w	r4, lr, r8
9001a1d6:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001a1da:	8705      	strh	r5, [r0, #56]	@ 0x38
9001a1dc:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001a1e0:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001a1e2:	250a      	movs	r5, #10
9001a1e4:	1a64      	subs	r4, r4, r1
9001a1e6:	4439      	add	r1, r7
9001a1e8:	b289      	uxth	r1, r1
9001a1ea:	8704      	strh	r4, [r0, #56]	@ 0x38
9001a1ec:	2909      	cmp	r1, #9
9001a1ee:	bf88      	it	hi
9001a1f0:	390a      	subhi	r1, #10
9001a1f2:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001a1f4:	b18a      	cbz	r2, 9001a21a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001a1f6:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001a1f8:	3a01      	subs	r2, #1
9001a1fa:	3101      	adds	r1, #1
9001a1fc:	b292      	uxth	r2, r2
9001a1fe:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001a202:	8701      	strh	r1, [r0, #56]	@ 0x38
9001a204:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001a206:	b901      	cbnz	r1, 9001a20a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001a208:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001a20a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001a20c:	3901      	subs	r1, #1
9001a20e:	b289      	uxth	r1, r1
9001a210:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001a212:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001a216:	844c      	strh	r4, [r1, #34]	@ 0x22
9001a218:	e7ec      	b.n	9001a1f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001a21a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a21e:	f7ff bf4c 	b.w	9001a0ba <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001a222 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001a222:	b570      	push	{r4, r5, r6, lr}
9001a224:	2500      	movs	r5, #0
9001a226:	4295      	cmp	r5, r2
9001a228:	d011      	beq.n	9001a24e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001a22a:	8bc4      	ldrh	r4, [r0, #30]
9001a22c:	f831 6b02 	ldrh.w	r6, [r1], #2
9001a230:	4414      	add	r4, r2
9001a232:	3c01      	subs	r4, #1
9001a234:	1b64      	subs	r4, r4, r5
9001a236:	b2a4      	uxth	r4, r4
9001a238:	2c01      	cmp	r4, #1
9001a23a:	bf88      	it	hi
9001a23c:	3c02      	subhi	r4, #2
9001a23e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001a242:	8b64      	ldrh	r4, [r4, #26]
9001a244:	42b4      	cmp	r4, r6
9001a246:	d117      	bne.n	9001a278 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001a248:	3501      	adds	r5, #1
9001a24a:	b2ad      	uxth	r5, r5
9001a24c:	e7eb      	b.n	9001a226 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001a24e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001a252:	2400      	movs	r4, #0
9001a254:	4413      	add	r3, r2
9001a256:	b2a2      	uxth	r2, r4
9001a258:	429a      	cmp	r2, r3
9001a25a:	da0f      	bge.n	9001a27c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001a25c:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001a25e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001a262:	3401      	adds	r4, #1
9001a264:	4432      	add	r2, r6
9001a266:	b292      	uxth	r2, r2
9001a268:	2a09      	cmp	r2, #9
9001a26a:	bf88      	it	hi
9001a26c:	3a0a      	subhi	r2, #10
9001a26e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001a272:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001a274:	42aa      	cmp	r2, r5
9001a276:	d0ee      	beq.n	9001a256 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001a278:	2000      	movs	r0, #0
9001a27a:	bd70      	pop	{r4, r5, r6, pc}
9001a27c:	2001      	movs	r0, #1
9001a27e:	e7fc      	b.n	9001a27a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001a280 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001a280:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a284:	4605      	mov	r5, r0
9001a286:	4616      	mov	r6, r2
9001a288:	1c8c      	adds	r4, r1, #2
9001a28a:	8809      	ldrh	r1, [r1, #0]
9001a28c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001a290:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001a294:	42b3      	cmp	r3, r6
9001a296:	d124      	bne.n	9001a2e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001a298:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001a29c:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001a2a0:	f001 070f 	and.w	r7, r1, #15
9001a2a4:	4652      	mov	r2, sl
9001a2a6:	f8cd 8000 	str.w	r8, [sp]
9001a2aa:	464b      	mov	r3, r9
9001a2ac:	4621      	mov	r1, r4
9001a2ae:	4628      	mov	r0, r5
9001a2b0:	f7ff ffb7 	bl	9001a222 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001a2b4:	4683      	mov	fp, r0
9001a2b6:	b168      	cbz	r0, 9001a2d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001a2b8:	eb0a 0109 	add.w	r1, sl, r9
9001a2bc:	463a      	mov	r2, r7
9001a2be:	4628      	mov	r0, r5
9001a2c0:	4441      	add	r1, r8
9001a2c2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001a2c6:	4649      	mov	r1, r9
9001a2c8:	f7ff ff52 	bl	9001a170 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001a2cc:	4658      	mov	r0, fp
9001a2ce:	b003      	add	sp, #12
9001a2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a2d4:	eb07 010a 	add.w	r1, r7, sl
9001a2d8:	4449      	add	r1, r9
9001a2da:	4441      	add	r1, r8
9001a2dc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001a2e0:	e7d2      	b.n	9001a288 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001a2e2:	f04f 0b00 	mov.w	fp, #0
9001a2e6:	e7f1      	b.n	9001a2cc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001a2e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001a2e8:	b570      	push	{r4, r5, r6, lr}
9001a2ea:	8810      	ldrh	r0, [r2, #0]
9001a2ec:	4298      	cmp	r0, r3
9001a2ee:	d817      	bhi.n	9001a320 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a2f0:	1e48      	subs	r0, r1, #1
9001a2f2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001a2f6:	4298      	cmp	r0, r3
9001a2f8:	d312      	bcc.n	9001a320 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a2fa:	2400      	movs	r4, #0
9001a2fc:	428c      	cmp	r4, r1
9001a2fe:	d20f      	bcs.n	9001a320 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a300:	1860      	adds	r0, r4, r1
9001a302:	1040      	asrs	r0, r0, #1
9001a304:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001a308:	0085      	lsls	r5, r0, #2
9001a30a:	42b3      	cmp	r3, r6
9001a30c:	d902      	bls.n	9001a314 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001a30e:	3001      	adds	r0, #1
9001a310:	b284      	uxth	r4, r0
9001a312:	e7f3      	b.n	9001a2fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a314:	d201      	bcs.n	9001a31a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001a316:	b281      	uxth	r1, r0
9001a318:	e7f0      	b.n	9001a2fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a31a:	442a      	add	r2, r5
9001a31c:	8850      	ldrh	r0, [r2, #2]
9001a31e:	bd70      	pop	{r4, r5, r6, pc}
9001a320:	2000      	movs	r0, #0
9001a322:	e7fc      	b.n	9001a31e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001a324 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001a324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a328:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001a32a:	4604      	mov	r4, r0
9001a32c:	260b      	movs	r6, #11
9001a32e:	886f      	ldrh	r7, [r5, #2]
9001a330:	087f      	lsrs	r7, r7, #1
9001a332:	3e01      	subs	r6, #1
9001a334:	d013      	beq.n	9001a35e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a336:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001a338:	462a      	mov	r2, r5
9001a33a:	4639      	mov	r1, r7
9001a33c:	4620      	mov	r0, r4
9001a33e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a342:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001a346:	4643      	mov	r3, r8
9001a348:	f7ff ffce 	bl	9001a2e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001a34c:	b138      	cbz	r0, 9001a35e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a34e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001a352:	4642      	mov	r2, r8
9001a354:	4620      	mov	r0, r4
9001a356:	f7ff ff93 	bl	9001a280 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001a35a:	2800      	cmp	r0, #0
9001a35c:	d1e9      	bne.n	9001a332 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001a35e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001a364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001a364:	b570      	push	{r4, r5, r6, lr}
9001a366:	694a      	ldr	r2, [r1, #20]
9001a368:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001a36a:	684b      	ldr	r3, [r1, #4]
9001a36c:	1b54      	subs	r4, r2, r5
9001a36e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001a370:	f000 8106 	beq.w	9001a580 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001a374:	1b9b      	subs	r3, r3, r6
9001a376:	d003      	beq.n	9001a380 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a378:	4363      	muls	r3, r4
9001a37a:	2210      	movs	r2, #16
9001a37c:	fb93 f3f2 	sdiv	r3, r3, r2
9001a380:	680c      	ldr	r4, [r1, #0]
9001a382:	698a      	ldr	r2, [r1, #24]
9001a384:	1b65      	subs	r5, r4, r5
9001a386:	f000 80fd 	beq.w	9001a584 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001a38a:	1b92      	subs	r2, r2, r6
9001a38c:	d003      	beq.n	9001a396 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a38e:	436a      	muls	r2, r5
9001a390:	2410      	movs	r4, #16
9001a392:	fb92 f2f4 	sdiv	r2, r2, r4
9001a396:	1a9b      	subs	r3, r3, r2
9001a398:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001a5c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001a39c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a3a0:	460a      	mov	r2, r1
9001a3a2:	ee07 3a90 	vmov	s15, r3
9001a3a6:	f100 040c 	add.w	r4, r0, #12
9001a3aa:	4603      	mov	r3, r0
9001a3ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a3b0:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a3b4:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001a3b8:	eeb1 6a43 	vneg.f32	s12, s6
9001a3bc:	edd2 7a02 	vldr	s15, [r2, #8]
9001a3c0:	3214      	adds	r2, #20
9001a3c2:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001a3c6:	ece3 6a01 	vstmia	r3!, {s13}
9001a3ca:	429c      	cmp	r4, r3
9001a3cc:	ed52 7a02 	vldr	s15, [r2, #-8]
9001a3d0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a3d4:	edc3 7a02 	vstr	s15, [r3, #8]
9001a3d8:	ed52 7a01 	vldr	s15, [r2, #-4]
9001a3dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a3e0:	edc3 7a05 	vstr	s15, [r3, #20]
9001a3e4:	d1ea      	bne.n	9001a3bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001a3e6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a3e8:	698b      	ldr	r3, [r1, #24]
9001a3ea:	edd0 4a02 	vldr	s9, [r0, #8]
9001a3ee:	1a9b      	subs	r3, r3, r2
9001a3f0:	edd0 3a00 	vldr	s7, [r0]
9001a3f4:	edd0 6a01 	vldr	s13, [r0, #4]
9001a3f8:	ee07 3a90 	vmov	s15, r3
9001a3fc:	684b      	ldr	r3, [r1, #4]
9001a3fe:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001a402:	ed90 5a05 	vldr	s10, [r0, #20]
9001a406:	1a9b      	subs	r3, r3, r2
9001a408:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a40c:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001a410:	ed90 2a03 	vldr	s4, [r0, #12]
9001a414:	ee07 3a10 	vmov	s14, r3
9001a418:	edd0 5a04 	vldr	s11, [r0, #16]
9001a41c:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a420:	ed90 1a07 	vldr	s2, [r0, #28]
9001a424:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a428:	edd0 2a06 	vldr	s5, [r0, #24]
9001a42c:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001a430:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001a434:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a438:	ee32 5a45 	vsub.f32	s10, s4, s10
9001a43c:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a440:	ee67 7a83 	vmul.f32	s15, s15, s6
9001a444:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001a448:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a44a:	694a      	ldr	r2, [r1, #20]
9001a44c:	1b13      	subs	r3, r2, r4
9001a44e:	ee07 3a10 	vmov	s14, r3
9001a452:	680b      	ldr	r3, [r1, #0]
9001a454:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a458:	1b1b      	subs	r3, r3, r4
9001a45a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a45e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001a462:	ee07 3a10 	vmov	s14, r3
9001a466:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a46a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a46e:	eee6 4a87 	vfma.f32	s9, s13, s14
9001a472:	ee64 4a86 	vmul.f32	s9, s9, s12
9001a476:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001a47a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a47c:	698b      	ldr	r3, [r1, #24]
9001a47e:	1a9b      	subs	r3, r3, r2
9001a480:	ee06 3a90 	vmov	s13, r3
9001a484:	684b      	ldr	r3, [r1, #4]
9001a486:	1a9b      	subs	r3, r3, r2
9001a488:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a48c:	ee07 3a10 	vmov	s14, r3
9001a490:	ee66 6a84 	vmul.f32	s13, s13, s8
9001a494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a498:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001a49c:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a4a0:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a4a4:	ee66 6a83 	vmul.f32	s13, s13, s6
9001a4a8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001a4ac:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a4ae:	694a      	ldr	r2, [r1, #20]
9001a4b0:	1b13      	subs	r3, r2, r4
9001a4b2:	ee07 3a10 	vmov	s14, r3
9001a4b6:	680b      	ldr	r3, [r1, #0]
9001a4b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a4bc:	1b1b      	subs	r3, r3, r4
9001a4be:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a4c2:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001a4c6:	ee07 3a10 	vmov	s14, r3
9001a4ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a4ce:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a4d2:	eea5 5a87 	vfma.f32	s10, s11, s14
9001a4d6:	edd0 5a08 	vldr	s11, [r0, #32]
9001a4da:	ee31 1a65 	vsub.f32	s2, s2, s11
9001a4de:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001a4e2:	ee25 5a06 	vmul.f32	s10, s10, s12
9001a4e6:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001a4ea:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a4ec:	698b      	ldr	r3, [r1, #24]
9001a4ee:	1a9b      	subs	r3, r3, r2
9001a4f0:	ee07 3a10 	vmov	s14, r3
9001a4f4:	684b      	ldr	r3, [r1, #4]
9001a4f6:	1a9b      	subs	r3, r3, r2
9001a4f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a4fc:	ee01 3a90 	vmov	s3, r3
9001a500:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a504:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001a508:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001a50c:	ee61 1a84 	vmul.f32	s3, s3, s8
9001a510:	eea1 7a21 	vfma.f32	s14, s2, s3
9001a514:	ee27 7a03 	vmul.f32	s14, s14, s6
9001a518:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a51c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a51e:	694a      	ldr	r2, [r1, #20]
9001a520:	1b13      	subs	r3, r2, r4
9001a522:	ee03 3a10 	vmov	s6, r3
9001a526:	680b      	ldr	r3, [r1, #0]
9001a528:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a52c:	1b1b      	subs	r3, r3, r4
9001a52e:	ee23 3a04 	vmul.f32	s6, s6, s8
9001a532:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001a536:	ee03 3a10 	vmov	s6, r3
9001a53a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a53e:	ee23 4a04 	vmul.f32	s8, s6, s8
9001a542:	eee1 5a04 	vfma.f32	s11, s2, s8
9001a546:	ee25 6a86 	vmul.f32	s12, s11, s12
9001a54a:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001a54e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001a552:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001a556:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001a55a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a55e:	dd13      	ble.n	9001a588 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001a560:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a564:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001a568:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a56a:	eee3 7a87 	vfma.f32	s15, s7, s14
9001a56e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a576:	dd15      	ble.n	9001a5a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001a578:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a57c:	6403      	str	r3, [r0, #64]	@ 0x40
9001a57e:	bd70      	pop	{r4, r5, r6, pc}
9001a580:	4623      	mov	r3, r4
9001a582:	e6fd      	b.n	9001a380 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a584:	462a      	mov	r2, r5
9001a586:	e706      	b.n	9001a396 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a588:	d502      	bpl.n	9001a590 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001a58a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a58e:	e7e9      	b.n	9001a564 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001a590:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001a594:	eea3 2a85 	vfma.f32	s4, s7, s10
9001a598:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001a59c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a5a0:	dade      	bge.n	9001a560 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001a5a2:	e7f2      	b.n	9001a58a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001a5a4:	d502      	bpl.n	9001a5ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001a5a6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a5aa:	e7e7      	b.n	9001a57c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001a5ac:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001a5b0:	eee3 4a86 	vfma.f32	s9, s7, s12
9001a5b4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001a5b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a5bc:	dadc      	bge.n	9001a578 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001a5be:	e7f2      	b.n	9001a5a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001a5c0:	3d800000 	.word	0x3d800000

9001a5c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001a5c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a5c8:	2714      	movs	r7, #20
9001a5ca:	435f      	muls	r7, r3
9001a5cc:	eb02 0c07 	add.w	ip, r2, r7
9001a5d0:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001a5d4:	f115 0e0f 	adds.w	lr, r5, #15
9001a5d8:	f100 80a2 	bmi.w	9001a720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001a5dc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001a5e0:	9c08      	ldr	r4, [sp, #32]
9001a5e2:	2614      	movs	r6, #20
9001a5e4:	f8c0 e014 	str.w	lr, [r0, #20]
9001a5e8:	4366      	muls	r6, r4
9001a5ea:	eb02 0806 	add.w	r8, r2, r6
9001a5ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001a5f2:	f115 040f 	adds.w	r4, r5, #15
9001a5f6:	f100 809f 	bmi.w	9001a738 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001a5fa:	1124      	asrs	r4, r4, #4
9001a5fc:	eba4 040e 	sub.w	r4, r4, lr
9001a600:	6184      	str	r4, [r0, #24]
9001a602:	2c00      	cmp	r4, #0
9001a604:	f000 808a 	beq.w	9001a71c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001a608:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001a60c:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001a610:	5995      	ldr	r5, [r2, r6]
9001a612:	eba4 0809 	sub.w	r8, r4, r9
9001a616:	59d4      	ldr	r4, [r2, r7]
9001a618:	eba5 0a04 	sub.w	sl, r5, r4
9001a61c:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001a620:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001a624:	fb0e fe05 	mul.w	lr, lr, r5
9001a628:	fb0a ee19 	mls	lr, sl, r9, lr
9001a62c:	fb08 e404 	mla	r4, r8, r4, lr
9001a630:	3c01      	subs	r4, #1
9001a632:	19a4      	adds	r4, r4, r6
9001a634:	f100 808c 	bmi.w	9001a750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001a638:	fb94 fef6 	sdiv	lr, r4, r6
9001a63c:	fb06 441e 	mls	r4, r6, lr, r4
9001a640:	f8c0 e000 	str.w	lr, [r0]
9001a644:	6104      	str	r4, [r0, #16]
9001a646:	2d00      	cmp	r5, #0
9001a648:	f2c0 8095 	blt.w	9001a776 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001a64c:	fb95 f4f6 	sdiv	r4, r5, r6
9001a650:	fb06 5514 	mls	r5, r6, r4, r5
9001a654:	6044      	str	r4, [r0, #4]
9001a656:	6085      	str	r5, [r0, #8]
9001a658:	60c6      	str	r6, [r0, #12]
9001a65a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001a65e:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001a662:	6945      	ldr	r5, [r0, #20]
9001a664:	59d2      	ldr	r2, [r2, r7]
9001a666:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001a66a:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001a798 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001a66e:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a672:	ee07 4a10 	vmov	s14, r4
9001a676:	6804      	ldr	r4, [r0, #0]
9001a678:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001a67c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a680:	ee07 2a90 	vmov	s15, r2
9001a684:	ee27 7a26 	vmul.f32	s14, s14, s13
9001a688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a68c:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a690:	edd3 6a00 	vldr	s13, [r3]
9001a694:	eee6 6a07 	vfma.f32	s13, s12, s14
9001a698:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001a69c:	eee6 6a27 	vfma.f32	s13, s12, s15
9001a6a0:	edc0 6a07 	vstr	s13, [r0, #28]
9001a6a4:	edd0 6a01 	vldr	s13, [r0, #4]
9001a6a8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001a6ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a6b0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a6b4:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a6b8:	ed80 6a08 	vstr	s12, [r0, #32]
9001a6bc:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001a6be:	6242      	str	r2, [r0, #36]	@ 0x24
9001a6c0:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001a6c4:	ed93 6a03 	vldr	s12, [r3, #12]
9001a6c8:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a6cc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a6d0:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001a6d4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001a6d8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a6dc:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001a6e0:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a6e4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001a6e8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a6ea:	6302      	str	r2, [r0, #48]	@ 0x30
9001a6ec:	ed93 6a06 	vldr	s12, [r3, #24]
9001a6f0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001a6f4:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a6f8:	eeb0 7a46 	vmov.f32	s14, s12
9001a6fc:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001a700:	eea6 7a27 	vfma.f32	s14, s12, s15
9001a704:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a708:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001a70c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001a710:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a714:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001a718:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001a71a:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a71c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a720:	2410      	movs	r4, #16
9001a722:	f1c5 0501 	rsb	r5, r5, #1
9001a726:	fb9e fef4 	sdiv	lr, lr, r4
9001a72a:	f015 050f 	ands.w	r5, r5, #15
9001a72e:	bf18      	it	ne
9001a730:	2501      	movne	r5, #1
9001a732:	ebae 0e05 	sub.w	lr, lr, r5
9001a736:	e753      	b.n	9001a5e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001a738:	f04f 0910 	mov.w	r9, #16
9001a73c:	f1c5 0501 	rsb	r5, r5, #1
9001a740:	fb94 f4f9 	sdiv	r4, r4, r9
9001a744:	f015 050f 	ands.w	r5, r5, #15
9001a748:	bf18      	it	ne
9001a74a:	2501      	movne	r5, #1
9001a74c:	1b64      	subs	r4, r4, r5
9001a74e:	e755      	b.n	9001a5fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001a750:	4264      	negs	r4, r4
9001a752:	fb94 fef6 	sdiv	lr, r4, r6
9001a756:	f1ce 0800 	rsb	r8, lr, #0
9001a75a:	fb06 441e 	mls	r4, r6, lr, r4
9001a75e:	f8c0 8000 	str.w	r8, [r0]
9001a762:	6104      	str	r4, [r0, #16]
9001a764:	2c00      	cmp	r4, #0
9001a766:	f43f af6e 	beq.w	9001a646 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001a76a:	ea6f 0e0e 	mvn.w	lr, lr
9001a76e:	1b34      	subs	r4, r6, r4
9001a770:	f8c0 e000 	str.w	lr, [r0]
9001a774:	e766      	b.n	9001a644 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001a776:	426d      	negs	r5, r5
9001a778:	fb95 f4f6 	sdiv	r4, r5, r6
9001a77c:	f1c4 0e00 	rsb	lr, r4, #0
9001a780:	fb06 5514 	mls	r5, r6, r4, r5
9001a784:	f8c0 e004 	str.w	lr, [r0, #4]
9001a788:	6085      	str	r5, [r0, #8]
9001a78a:	2d00      	cmp	r5, #0
9001a78c:	f43f af64 	beq.w	9001a658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001a790:	43e4      	mvns	r4, r4
9001a792:	1b75      	subs	r5, r6, r5
9001a794:	6044      	str	r4, [r0, #4]
9001a796:	e75e      	b.n	9001a656 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001a798:	3d800000 	.word	0x3d800000

9001a79c <_ZN8touchgfx7Unicode6strlenEPKt>:
9001a79c:	4602      	mov	r2, r0
9001a79e:	b148      	cbz	r0, 9001a7b4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001a7a0:	2300      	movs	r3, #0
9001a7a2:	b298      	uxth	r0, r3
9001a7a4:	3301      	adds	r3, #1
9001a7a6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001a7aa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001a7ae:	2900      	cmp	r1, #0
9001a7b0:	d1f7      	bne.n	9001a7a2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001a7b2:	4770      	bx	lr
9001a7b4:	4770      	bx	lr

9001a7b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001a7b6:	b530      	push	{r4, r5, lr}
9001a7b8:	4604      	mov	r4, r0
9001a7ba:	b159      	cbz	r1, 9001a7d4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001a7bc:	b148      	cbz	r0, 9001a7d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a7be:	2300      	movs	r3, #0
9001a7c0:	b298      	uxth	r0, r3
9001a7c2:	4282      	cmp	r2, r0
9001a7c4:	d905      	bls.n	9001a7d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a7c6:	5ccd      	ldrb	r5, [r1, r3]
9001a7c8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001a7cc:	3301      	adds	r3, #1
9001a7ce:	2d00      	cmp	r5, #0
9001a7d0:	d1f6      	bne.n	9001a7c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001a7d2:	bd30      	pop	{r4, r5, pc}
9001a7d4:	4608      	mov	r0, r1
9001a7d6:	e7fc      	b.n	9001a7d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001a7d8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001a7d8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a7da:	b08b      	sub	sp, #44	@ 0x2c
9001a7dc:	468c      	mov	ip, r1
9001a7de:	4604      	mov	r4, r0
9001a7e0:	2100      	movs	r1, #0
9001a7e2:	261f      	movs	r6, #31
9001a7e4:	af01      	add	r7, sp, #4
9001a7e6:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a7ea:	1e71      	subs	r1, r6, #1
9001a7ec:	fb94 fef3 	sdiv	lr, r4, r3
9001a7f0:	fb03 441e 	mls	r4, r3, lr, r4
9001a7f4:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001a7f8:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001a7fc:	b2ec      	uxtb	r4, r5
9001a7fe:	2d09      	cmp	r5, #9
9001a800:	bfd4      	ite	le
9001a802:	3430      	addle	r4, #48	@ 0x30
9001a804:	3457      	addgt	r4, #87	@ 0x57
9001a806:	b2e4      	uxtb	r4, r4
9001a808:	55bc      	strb	r4, [r7, r6]
9001a80a:	4674      	mov	r4, lr
9001a80c:	b974      	cbnz	r4, 9001a82c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001a80e:	2800      	cmp	r0, #0
9001a810:	da05      	bge.n	9001a81e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001a812:	ab0a      	add	r3, sp, #40	@ 0x28
9001a814:	4419      	add	r1, r3
9001a816:	232d      	movs	r3, #45	@ 0x2d
9001a818:	f801 3c24 	strb.w	r3, [r1, #-36]
9001a81c:	1eb1      	subs	r1, r6, #2
9001a81e:	3101      	adds	r1, #1
9001a820:	4660      	mov	r0, ip
9001a822:	4439      	add	r1, r7
9001a824:	f7ff ffc7 	bl	9001a7b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a828:	b00b      	add	sp, #44	@ 0x2c
9001a82a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a82c:	460e      	mov	r6, r1
9001a82e:	e7dc      	b.n	9001a7ea <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001a830 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001a830:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a832:	468c      	mov	ip, r1
9001a834:	b08b      	sub	sp, #44	@ 0x2c
9001a836:	2100      	movs	r1, #0
9001a838:	ae01      	add	r6, sp, #4
9001a83a:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a83e:	211f      	movs	r1, #31
9001a840:	fbb0 f7f3 	udiv	r7, r0, r3
9001a844:	fb03 0517 	mls	r5, r3, r7, r0
9001a848:	4638      	mov	r0, r7
9001a84a:	b2ec      	uxtb	r4, r5
9001a84c:	2d09      	cmp	r5, #9
9001a84e:	bfd4      	ite	le
9001a850:	3430      	addle	r4, #48	@ 0x30
9001a852:	3457      	addgt	r4, #87	@ 0x57
9001a854:	b2e4      	uxtb	r4, r4
9001a856:	558c      	strb	r4, [r1, r6]
9001a858:	1e4c      	subs	r4, r1, #1
9001a85a:	b92f      	cbnz	r7, 9001a868 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001a85c:	4431      	add	r1, r6
9001a85e:	4660      	mov	r0, ip
9001a860:	f7ff ffa9 	bl	9001a7b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a864:	b00b      	add	sp, #44	@ 0x2c
9001a866:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a868:	4621      	mov	r1, r4
9001a86a:	e7e9      	b.n	9001a840 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001a86c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001a86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a870:	b085      	sub	sp, #20
9001a872:	4691      	mov	r9, r2
9001a874:	6802      	ldr	r2, [r0, #0]
9001a876:	4688      	mov	r8, r1
9001a878:	461c      	mov	r4, r3
9001a87a:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001a87e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001a882:	4683      	mov	fp, r0
9001a884:	4610      	mov	r0, r2
9001a886:	9103      	str	r1, [sp, #12]
9001a888:	9302      	str	r3, [sp, #8]
9001a88a:	9201      	str	r2, [sp, #4]
9001a88c:	f7ff ff86 	bl	9001a79c <_ZN8touchgfx7Unicode6strlenEPKt>
9001a890:	f1b8 0f00 	cmp.w	r8, #0
9001a894:	bf0c      	ite	eq
9001a896:	4684      	moveq	ip, r0
9001a898:	f100 0c01 	addne.w	ip, r0, #1
9001a89c:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001a8a0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001a8a4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001a8a6:	fa1f fc8c 	uxth.w	ip, ip
9001a8aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a8ac:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001a8b0:	9903      	ldr	r1, [sp, #12]
9001a8b2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001a8b6:	d041      	beq.n	9001a93c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a8b8:	d834      	bhi.n	9001a924 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001a8ba:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001a8be:	d059      	beq.n	9001a974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001a8c0:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001a8c4:	d03a      	beq.n	9001a93c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a8c6:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001a8ca:	d034      	beq.n	9001a936 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a8cc:	2400      	movs	r4, #0
9001a8ce:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001a8d2:	3a01      	subs	r2, #1
9001a8d4:	b169      	cbz	r1, 9001a8f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a8d6:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001a8d8:	458c      	cmp	ip, r1
9001a8da:	da09      	bge.n	9001a8f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a8dc:	eba1 010c 	sub.w	r1, r1, ip
9001a8e0:	b289      	uxth	r1, r1
9001a8e2:	b933      	cbnz	r3, 9001a8f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a8e4:	2e00      	cmp	r6, #0
9001a8e6:	d051      	beq.n	9001a98c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a8e8:	2800      	cmp	r0, #0
9001a8ea:	d04f      	beq.n	9001a98c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a8ec:	440c      	add	r4, r1
9001a8ee:	b2a4      	uxth	r4, r4
9001a8f0:	2100      	movs	r1, #0
9001a8f2:	682b      	ldr	r3, [r5, #0]
9001a8f4:	4293      	cmp	r3, r2
9001a8f6:	da07      	bge.n	9001a908 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a8f8:	f1b8 0f00 	cmp.w	r8, #0
9001a8fc:	d004      	beq.n	9001a908 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a8fe:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001a902:	682b      	ldr	r3, [r5, #0]
9001a904:	3301      	adds	r3, #1
9001a906:	602b      	str	r3, [r5, #0]
9001a908:	2730      	movs	r7, #48	@ 0x30
9001a90a:	2c00      	cmp	r4, #0
9001a90c:	d04e      	beq.n	9001a9ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a90e:	682e      	ldr	r6, [r5, #0]
9001a910:	3c01      	subs	r4, #1
9001a912:	42b2      	cmp	r2, r6
9001a914:	b2a4      	uxth	r4, r4
9001a916:	dd49      	ble.n	9001a9ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a918:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a91c:	682b      	ldr	r3, [r5, #0]
9001a91e:	3301      	adds	r3, #1
9001a920:	602b      	str	r3, [r5, #0]
9001a922:	e7f2      	b.n	9001a90a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001a924:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001a928:	d01d      	beq.n	9001a966 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001a92a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001a92e:	d002      	beq.n	9001a936 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a930:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001a934:	e7c9      	b.n	9001a8ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001a936:	4684      	mov	ip, r0
9001a938:	f04f 0800 	mov.w	r8, #0
9001a93c:	2c00      	cmp	r4, #0
9001a93e:	d0c6      	beq.n	9001a8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a940:	b947      	cbnz	r7, 9001a954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a942:	2801      	cmp	r0, #1
9001a944:	d106      	bne.n	9001a954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a946:	8814      	ldrh	r4, [r2, #0]
9001a948:	2c30      	cmp	r4, #48	@ 0x30
9001a94a:	bf02      	ittt	eq
9001a94c:	3202      	addeq	r2, #2
9001a94e:	4638      	moveq	r0, r7
9001a950:	f8cb 2000 	streq.w	r2, [fp]
9001a954:	45bc      	cmp	ip, r7
9001a956:	da14      	bge.n	9001a982 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001a958:	b2bf      	uxth	r7, r7
9001a95a:	eba7 040c 	sub.w	r4, r7, ip
9001a95e:	46bc      	mov	ip, r7
9001a960:	b2a4      	uxth	r4, r4
9001a962:	2600      	movs	r6, #0
9001a964:	e7b3      	b.n	9001a8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a966:	4684      	mov	ip, r0
9001a968:	b16c      	cbz	r4, 9001a986 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001a96a:	42b8      	cmp	r0, r7
9001a96c:	dd00      	ble.n	9001a970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001a96e:	b2b8      	uxth	r0, r7
9001a970:	2400      	movs	r4, #0
9001a972:	e003      	b.n	9001a97c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001a974:	f04f 0c01 	mov.w	ip, #1
9001a978:	2400      	movs	r4, #0
9001a97a:	4660      	mov	r0, ip
9001a97c:	4626      	mov	r6, r4
9001a97e:	46a0      	mov	r8, r4
9001a980:	e7a5      	b.n	9001a8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a982:	2400      	movs	r4, #0
9001a984:	e7ed      	b.n	9001a962 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001a986:	4626      	mov	r6, r4
9001a988:	46a0      	mov	r8, r4
9001a98a:	e7a0      	b.n	9001a8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a98c:	2900      	cmp	r1, #0
9001a98e:	d0b0      	beq.n	9001a8f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a990:	2720      	movs	r7, #32
9001a992:	682e      	ldr	r6, [r5, #0]
9001a994:	2900      	cmp	r1, #0
9001a996:	d0ac      	beq.n	9001a8f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a998:	3901      	subs	r1, #1
9001a99a:	4296      	cmp	r6, r2
9001a99c:	b289      	uxth	r1, r1
9001a99e:	daa7      	bge.n	9001a8f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a9a0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a9a4:	682b      	ldr	r3, [r5, #0]
9001a9a6:	3301      	adds	r3, #1
9001a9a8:	602b      	str	r3, [r5, #0]
9001a9aa:	e7f2      	b.n	9001a992 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001a9ac:	b188      	cbz	r0, 9001a9d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a9ae:	682b      	ldr	r3, [r5, #0]
9001a9b0:	3801      	subs	r0, #1
9001a9b2:	429a      	cmp	r2, r3
9001a9b4:	b280      	uxth	r0, r0
9001a9b6:	dd0c      	ble.n	9001a9d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a9b8:	f8db 3000 	ldr.w	r3, [fp]
9001a9bc:	1c9c      	adds	r4, r3, #2
9001a9be:	f8cb 4000 	str.w	r4, [fp]
9001a9c2:	881c      	ldrh	r4, [r3, #0]
9001a9c4:	682b      	ldr	r3, [r5, #0]
9001a9c6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001a9ca:	682b      	ldr	r3, [r5, #0]
9001a9cc:	3301      	adds	r3, #1
9001a9ce:	602b      	str	r3, [r5, #0]
9001a9d0:	e7ec      	b.n	9001a9ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a9d2:	2620      	movs	r6, #32
9001a9d4:	b151      	cbz	r1, 9001a9ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a9d6:	6828      	ldr	r0, [r5, #0]
9001a9d8:	3901      	subs	r1, #1
9001a9da:	4282      	cmp	r2, r0
9001a9dc:	b289      	uxth	r1, r1
9001a9de:	dd05      	ble.n	9001a9ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a9e0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001a9e4:	682b      	ldr	r3, [r5, #0]
9001a9e6:	3301      	adds	r3, #1
9001a9e8:	602b      	str	r3, [r5, #0]
9001a9ea:	e7f3      	b.n	9001a9d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001a9ec:	b005      	add	sp, #20
9001a9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a9f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001a9f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a9f6:	2400      	movs	r4, #0
9001a9f8:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001a9fc:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001aa00:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001aa04:	8014      	strh	r4, [r2, #0]
9001aa06:	701c      	strb	r4, [r3, #0]
9001aa08:	f888 4000 	strb.w	r4, [r8]
9001aa0c:	f88c 4000 	strb.w	r4, [ip]
9001aa10:	f88e 4000 	strb.w	r4, [lr]
9001aa14:	703c      	strb	r4, [r7, #0]
9001aa16:	6804      	ldr	r4, [r0, #0]
9001aa18:	b1a4      	cbz	r4, 9001aa44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001aa1a:	8824      	ldrh	r4, [r4, #0]
9001aa1c:	f04f 0901 	mov.w	r9, #1
9001aa20:	b314      	cbz	r4, 9001aa68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001aa22:	2c2b      	cmp	r4, #43	@ 0x2b
9001aa24:	d001      	beq.n	9001aa2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001aa26:	2c20      	cmp	r4, #32
9001aa28:	d110      	bne.n	9001aa4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001aa2a:	8014      	strh	r4, [r2, #0]
9001aa2c:	6804      	ldr	r4, [r0, #0]
9001aa2e:	b10c      	cbz	r4, 9001aa34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001aa30:	3402      	adds	r4, #2
9001aa32:	6004      	str	r4, [r0, #0]
9001aa34:	680c      	ldr	r4, [r1, #0]
9001aa36:	b10c      	cbz	r4, 9001aa3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001aa38:	3401      	adds	r4, #1
9001aa3a:	600c      	str	r4, [r1, #0]
9001aa3c:	6804      	ldr	r4, [r0, #0]
9001aa3e:	b17c      	cbz	r4, 9001aa60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001aa40:	8824      	ldrh	r4, [r4, #0]
9001aa42:	e7ed      	b.n	9001aa20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001aa44:	680c      	ldr	r4, [r1, #0]
9001aa46:	b17c      	cbz	r4, 9001aa68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001aa48:	7824      	ldrb	r4, [r4, #0]
9001aa4a:	e7e7      	b.n	9001aa1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001aa4c:	2c2d      	cmp	r4, #45	@ 0x2d
9001aa4e:	d102      	bne.n	9001aa56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001aa50:	f883 9000 	strb.w	r9, [r3]
9001aa54:	e7ea      	b.n	9001aa2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001aa56:	2c23      	cmp	r4, #35	@ 0x23
9001aa58:	d107      	bne.n	9001aa6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001aa5a:	f888 9000 	strb.w	r9, [r8]
9001aa5e:	e7e5      	b.n	9001aa2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001aa60:	680c      	ldr	r4, [r1, #0]
9001aa62:	b10c      	cbz	r4, 9001aa68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001aa64:	7824      	ldrb	r4, [r4, #0]
9001aa66:	e7db      	b.n	9001aa20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001aa68:	2400      	movs	r4, #0
9001aa6a:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001aa6e:	2b09      	cmp	r3, #9
9001aa70:	d901      	bls.n	9001aa76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001aa72:	2c2a      	cmp	r4, #42	@ 0x2a
9001aa74:	d122      	bne.n	9001aabc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001aa76:	2301      	movs	r3, #1
9001aa78:	2c30      	cmp	r4, #48	@ 0x30
9001aa7a:	f88e 3000 	strb.w	r3, [lr]
9001aa7e:	d10d      	bne.n	9001aa9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001aa80:	f88c 3000 	strb.w	r3, [ip]
9001aa84:	6803      	ldr	r3, [r0, #0]
9001aa86:	b10b      	cbz	r3, 9001aa8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001aa88:	3302      	adds	r3, #2
9001aa8a:	6003      	str	r3, [r0, #0]
9001aa8c:	680b      	ldr	r3, [r1, #0]
9001aa8e:	b10b      	cbz	r3, 9001aa94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001aa90:	3301      	adds	r3, #1
9001aa92:	600b      	str	r3, [r1, #0]
9001aa94:	6803      	ldr	r3, [r0, #0]
9001aa96:	2b00      	cmp	r3, #0
9001aa98:	d02f      	beq.n	9001aafa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001aa9a:	881c      	ldrh	r4, [r3, #0]
9001aa9c:	2c2a      	cmp	r4, #42	@ 0x2a
9001aa9e:	d135      	bne.n	9001ab0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001aaa0:	f04f 33ff 	mov.w	r3, #4294967295
9001aaa4:	6033      	str	r3, [r6, #0]
9001aaa6:	6803      	ldr	r3, [r0, #0]
9001aaa8:	b10b      	cbz	r3, 9001aaae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001aaaa:	3302      	adds	r3, #2
9001aaac:	6003      	str	r3, [r0, #0]
9001aaae:	680b      	ldr	r3, [r1, #0]
9001aab0:	b10b      	cbz	r3, 9001aab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001aab2:	3301      	adds	r3, #1
9001aab4:	600b      	str	r3, [r1, #0]
9001aab6:	6803      	ldr	r3, [r0, #0]
9001aab8:	b31b      	cbz	r3, 9001ab02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001aaba:	881c      	ldrh	r4, [r3, #0]
9001aabc:	2c2e      	cmp	r4, #46	@ 0x2e
9001aabe:	d11a      	bne.n	9001aaf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001aac0:	2301      	movs	r3, #1
9001aac2:	703b      	strb	r3, [r7, #0]
9001aac4:	6803      	ldr	r3, [r0, #0]
9001aac6:	b10b      	cbz	r3, 9001aacc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001aac8:	3302      	adds	r3, #2
9001aaca:	6003      	str	r3, [r0, #0]
9001aacc:	680b      	ldr	r3, [r1, #0]
9001aace:	b10b      	cbz	r3, 9001aad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001aad0:	3301      	adds	r3, #1
9001aad2:	600b      	str	r3, [r1, #0]
9001aad4:	6803      	ldr	r3, [r0, #0]
9001aad6:	2b00      	cmp	r3, #0
9001aad8:	d036      	beq.n	9001ab48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001aada:	881b      	ldrh	r3, [r3, #0]
9001aadc:	2b2a      	cmp	r3, #42	@ 0x2a
9001aade:	d137      	bne.n	9001ab50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001aae0:	f04f 33ff 	mov.w	r3, #4294967295
9001aae4:	602b      	str	r3, [r5, #0]
9001aae6:	6803      	ldr	r3, [r0, #0]
9001aae8:	b10b      	cbz	r3, 9001aaee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001aaea:	3302      	adds	r3, #2
9001aaec:	6003      	str	r3, [r0, #0]
9001aaee:	680b      	ldr	r3, [r1, #0]
9001aaf0:	b10b      	cbz	r3, 9001aaf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001aaf2:	3301      	adds	r3, #1
9001aaf4:	600b      	str	r3, [r1, #0]
9001aaf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001aafa:	680c      	ldr	r4, [r1, #0]
9001aafc:	b134      	cbz	r4, 9001ab0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001aafe:	7824      	ldrb	r4, [r4, #0]
9001ab00:	e7cc      	b.n	9001aa9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001ab02:	680b      	ldr	r3, [r1, #0]
9001ab04:	2b00      	cmp	r3, #0
9001ab06:	d0f6      	beq.n	9001aaf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001ab08:	781c      	ldrb	r4, [r3, #0]
9001ab0a:	e7d7      	b.n	9001aabc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001ab0c:	2300      	movs	r3, #0
9001ab0e:	220a      	movs	r2, #10
9001ab10:	6033      	str	r3, [r6, #0]
9001ab12:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001ab16:	fa1f f38c 	uxth.w	r3, ip
9001ab1a:	2b09      	cmp	r3, #9
9001ab1c:	d8ce      	bhi.n	9001aabc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001ab1e:	6833      	ldr	r3, [r6, #0]
9001ab20:	fb02 c303 	mla	r3, r2, r3, ip
9001ab24:	6033      	str	r3, [r6, #0]
9001ab26:	6803      	ldr	r3, [r0, #0]
9001ab28:	b10b      	cbz	r3, 9001ab2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001ab2a:	3302      	adds	r3, #2
9001ab2c:	6003      	str	r3, [r0, #0]
9001ab2e:	680b      	ldr	r3, [r1, #0]
9001ab30:	b10b      	cbz	r3, 9001ab36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001ab32:	3301      	adds	r3, #1
9001ab34:	600b      	str	r3, [r1, #0]
9001ab36:	6803      	ldr	r3, [r0, #0]
9001ab38:	b10b      	cbz	r3, 9001ab3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001ab3a:	881c      	ldrh	r4, [r3, #0]
9001ab3c:	e7e9      	b.n	9001ab12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001ab3e:	680c      	ldr	r4, [r1, #0]
9001ab40:	2c00      	cmp	r4, #0
9001ab42:	d0e6      	beq.n	9001ab12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001ab44:	7824      	ldrb	r4, [r4, #0]
9001ab46:	e7e4      	b.n	9001ab12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001ab48:	680b      	ldr	r3, [r1, #0]
9001ab4a:	b10b      	cbz	r3, 9001ab50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001ab4c:	781b      	ldrb	r3, [r3, #0]
9001ab4e:	e7c5      	b.n	9001aadc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001ab50:	2200      	movs	r2, #0
9001ab52:	240a      	movs	r4, #10
9001ab54:	602a      	str	r2, [r5, #0]
9001ab56:	3b30      	subs	r3, #48	@ 0x30
9001ab58:	682a      	ldr	r2, [r5, #0]
9001ab5a:	b29e      	uxth	r6, r3
9001ab5c:	2e09      	cmp	r6, #9
9001ab5e:	d813      	bhi.n	9001ab88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001ab60:	fb04 3302 	mla	r3, r4, r2, r3
9001ab64:	602b      	str	r3, [r5, #0]
9001ab66:	6803      	ldr	r3, [r0, #0]
9001ab68:	b10b      	cbz	r3, 9001ab6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001ab6a:	3302      	adds	r3, #2
9001ab6c:	6003      	str	r3, [r0, #0]
9001ab6e:	680b      	ldr	r3, [r1, #0]
9001ab70:	b10b      	cbz	r3, 9001ab76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001ab72:	3301      	adds	r3, #1
9001ab74:	600b      	str	r3, [r1, #0]
9001ab76:	6803      	ldr	r3, [r0, #0]
9001ab78:	b10b      	cbz	r3, 9001ab7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001ab7a:	881b      	ldrh	r3, [r3, #0]
9001ab7c:	e7eb      	b.n	9001ab56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001ab7e:	680b      	ldr	r3, [r1, #0]
9001ab80:	2b00      	cmp	r3, #0
9001ab82:	d0e8      	beq.n	9001ab56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001ab84:	781b      	ldrb	r3, [r3, #0]
9001ab86:	e7e6      	b.n	9001ab56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001ab88:	2a06      	cmp	r2, #6
9001ab8a:	bfa8      	it	ge
9001ab8c:	2206      	movge	r2, #6
9001ab8e:	602a      	str	r2, [r5, #0]
9001ab90:	e7b1      	b.n	9001aaf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001ab92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001ab92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ab96:	b0a3      	sub	sp, #140	@ 0x8c
9001ab98:	2600      	movs	r6, #0
9001ab9a:	4607      	mov	r7, r0
9001ab9c:	4688      	mov	r8, r1
9001ab9e:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001aba2:	4631      	mov	r1, r6
9001aba4:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001aba6:	4648      	mov	r0, r9
9001aba8:	960d      	str	r6, [sp, #52]	@ 0x34
9001abaa:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001abae:	2242      	movs	r2, #66	@ 0x42
9001abb0:	f010 f8f4 	bl	9002ad9c <memset>
9001abb4:	b15f      	cbz	r7, 9001abce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001abb6:	f108 3aff 	add.w	sl, r8, #4294967295
9001abba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001abbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001abbe:	b152      	cbz	r2, 9001abd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001abc0:	8812      	ldrh	r2, [r2, #0]
9001abc2:	b10a      	cbz	r2, 9001abc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001abc4:	459a      	cmp	sl, r3
9001abc6:	dc2e      	bgt.n	9001ac26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001abc8:	2200      	movs	r2, #0
9001abca:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001abce:	4638      	mov	r0, r7
9001abd0:	b023      	add	sp, #140	@ 0x8c
9001abd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001abd6:	9a08      	ldr	r2, [sp, #32]
9001abd8:	2a00      	cmp	r2, #0
9001abda:	d0f5      	beq.n	9001abc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001abdc:	7812      	ldrb	r2, [r2, #0]
9001abde:	e7f0      	b.n	9001abc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001abe0:	2d00      	cmp	r5, #0
9001abe2:	d0ea      	beq.n	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001abe4:	782a      	ldrb	r2, [r5, #0]
9001abe6:	b142      	cbz	r2, 9001abfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001abe8:	2a25      	cmp	r2, #37	@ 0x25
9001abea:	d001      	beq.n	9001abf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001abec:	459a      	cmp	sl, r3
9001abee:	dc08      	bgt.n	9001ac02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001abf0:	f1bb 0f00 	cmp.w	fp, #0
9001abf4:	d121      	bne.n	9001ac3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001abf6:	2d00      	cmp	r5, #0
9001abf8:	d0df      	beq.n	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001abfa:	782a      	ldrb	r2, [r5, #0]
9001abfc:	f04f 0b00 	mov.w	fp, #0
9001ac00:	e01d      	b.n	9001ac3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001ac02:	f1bb 0f00 	cmp.w	fp, #0
9001ac06:	d077      	beq.n	9001acf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001ac08:	f8bb 2000 	ldrh.w	r2, [fp]
9001ac0c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001ac10:	f1bb 0f00 	cmp.w	fp, #0
9001ac14:	d002      	beq.n	9001ac1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001ac16:	f10b 0202 	add.w	r2, fp, #2
9001ac1a:	9209      	str	r2, [sp, #36]	@ 0x24
9001ac1c:	b10d      	cbz	r5, 9001ac22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001ac1e:	3501      	adds	r5, #1
9001ac20:	9508      	str	r5, [sp, #32]
9001ac22:	3301      	adds	r3, #1
9001ac24:	930d      	str	r3, [sp, #52]	@ 0x34
9001ac26:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ac28:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001ac2c:	f1bb 0f00 	cmp.w	fp, #0
9001ac30:	d0d6      	beq.n	9001abe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001ac32:	f8bb 2000 	ldrh.w	r2, [fp]
9001ac36:	2a00      	cmp	r2, #0
9001ac38:	d1d6      	bne.n	9001abe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001ac3a:	f8bb 2000 	ldrh.w	r2, [fp]
9001ac3e:	2a00      	cmp	r2, #0
9001ac40:	d0bb      	beq.n	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ac42:	459a      	cmp	sl, r3
9001ac44:	ddb9      	ble.n	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ac46:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001ac4a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001ac4e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001ac52:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001ac56:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001ac5a:	960e      	str	r6, [sp, #56]	@ 0x38
9001ac5c:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001ac60:	960f      	str	r6, [sp, #60]	@ 0x3c
9001ac62:	f1bb 0f00 	cmp.w	fp, #0
9001ac66:	d002      	beq.n	9001ac6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001ac68:	f10b 0302 	add.w	r3, fp, #2
9001ac6c:	9309      	str	r3, [sp, #36]	@ 0x24
9001ac6e:	b10d      	cbz	r5, 9001ac74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001ac70:	1c6b      	adds	r3, r5, #1
9001ac72:	9308      	str	r3, [sp, #32]
9001ac74:	ab0f      	add	r3, sp, #60	@ 0x3c
9001ac76:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001ac7a:	a908      	add	r1, sp, #32
9001ac7c:	a809      	add	r0, sp, #36	@ 0x24
9001ac7e:	9305      	str	r3, [sp, #20]
9001ac80:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001ac84:	9304      	str	r3, [sp, #16]
9001ac86:	ab0e      	add	r3, sp, #56	@ 0x38
9001ac88:	9303      	str	r3, [sp, #12]
9001ac8a:	ab0c      	add	r3, sp, #48	@ 0x30
9001ac8c:	9302      	str	r3, [sp, #8]
9001ac8e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001ac92:	9301      	str	r3, [sp, #4]
9001ac94:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001ac98:	9300      	str	r3, [sp, #0]
9001ac9a:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001ac9e:	f7ff fea8 	bl	9001a9f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001aca2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aca4:	2b00      	cmp	r3, #0
9001aca6:	bfbf      	itttt	lt
9001aca8:	6823      	ldrlt	r3, [r4, #0]
9001acaa:	3404      	addlt	r4, #4
9001acac:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001acb0:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001acb2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001acb4:	2b00      	cmp	r3, #0
9001acb6:	bfbe      	ittt	lt
9001acb8:	6823      	ldrlt	r3, [r4, #0]
9001acba:	3404      	addlt	r4, #4
9001acbc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001acc0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001acc4:	bfb8      	it	lt
9001acc6:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001acc8:	b1d9      	cbz	r1, 9001ad02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001acca:	880b      	ldrh	r3, [r1, #0]
9001accc:	2b69      	cmp	r3, #105	@ 0x69
9001acce:	d01f      	beq.n	9001ad10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001acd0:	d82f      	bhi.n	9001ad32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001acd2:	2b58      	cmp	r3, #88	@ 0x58
9001acd4:	d01c      	beq.n	9001ad10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001acd6:	d818      	bhi.n	9001ad0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001acd8:	2b25      	cmp	r3, #37	@ 0x25
9001acda:	d034      	beq.n	9001ad46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001acdc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001acde:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001ace2:	f1bb 0f00 	cmp.w	fp, #0
9001ace6:	f000 80b7 	beq.w	9001ae58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001acea:	f8bb 5000 	ldrh.w	r5, [fp]
9001acee:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001acf2:	3301      	adds	r3, #1
9001acf4:	930d      	str	r3, [sp, #52]	@ 0x34
9001acf6:	e029      	b.n	9001ad4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001acf8:	b10d      	cbz	r5, 9001acfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001acfa:	782a      	ldrb	r2, [r5, #0]
9001acfc:	e786      	b.n	9001ac0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001acfe:	462a      	mov	r2, r5
9001ad00:	e784      	b.n	9001ac0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001ad02:	2a00      	cmp	r2, #0
9001ad04:	d0ea      	beq.n	9001acdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ad06:	7813      	ldrb	r3, [r2, #0]
9001ad08:	e7e0      	b.n	9001accc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001ad0a:	3b63      	subs	r3, #99	@ 0x63
9001ad0c:	2b01      	cmp	r3, #1
9001ad0e:	d8e5      	bhi.n	9001acdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ad10:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001ad14:	b329      	cbz	r1, 9001ad62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001ad16:	880b      	ldrh	r3, [r1, #0]
9001ad18:	2b69      	cmp	r3, #105	@ 0x69
9001ad1a:	d063      	beq.n	9001ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ad1c:	d825      	bhi.n	9001ad6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001ad1e:	2b63      	cmp	r3, #99	@ 0x63
9001ad20:	d038      	beq.n	9001ad94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001ad22:	2b64      	cmp	r3, #100	@ 0x64
9001ad24:	d05e      	beq.n	9001ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ad26:	2b58      	cmp	r3, #88	@ 0x58
9001ad28:	d07a      	beq.n	9001ae20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001ad2a:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001ad2e:	4625      	mov	r5, r4
9001ad30:	e036      	b.n	9001ada0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ad32:	2b73      	cmp	r3, #115	@ 0x73
9001ad34:	d0ec      	beq.n	9001ad10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ad36:	d802      	bhi.n	9001ad3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001ad38:	2b6f      	cmp	r3, #111	@ 0x6f
9001ad3a:	d1cf      	bne.n	9001acdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ad3c:	e7e8      	b.n	9001ad10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ad3e:	2b75      	cmp	r3, #117	@ 0x75
9001ad40:	d0e6      	beq.n	9001ad10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ad42:	2b78      	cmp	r3, #120	@ 0x78
9001ad44:	e7f9      	b.n	9001ad3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001ad46:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ad48:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001ad4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ad4e:	b10b      	cbz	r3, 9001ad54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001ad50:	3302      	adds	r3, #2
9001ad52:	9309      	str	r3, [sp, #36]	@ 0x24
9001ad54:	9b08      	ldr	r3, [sp, #32]
9001ad56:	2b00      	cmp	r3, #0
9001ad58:	f43f af2f 	beq.w	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ad5c:	3301      	adds	r3, #1
9001ad5e:	9308      	str	r3, [sp, #32]
9001ad60:	e72b      	b.n	9001abba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ad62:	2a00      	cmp	r2, #0
9001ad64:	d0e1      	beq.n	9001ad2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ad66:	7813      	ldrb	r3, [r2, #0]
9001ad68:	e7d6      	b.n	9001ad18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001ad6a:	2b73      	cmp	r3, #115	@ 0x73
9001ad6c:	d036      	beq.n	9001addc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001ad6e:	d807      	bhi.n	9001ad80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001ad70:	2b6f      	cmp	r3, #111	@ 0x6f
9001ad72:	d1da      	bne.n	9001ad2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ad74:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ad76:	1d25      	adds	r5, r4, #4
9001ad78:	2308      	movs	r3, #8
9001ad7a:	eba8 0202 	sub.w	r2, r8, r2
9001ad7e:	e049      	b.n	9001ae14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ad80:	2b75      	cmp	r3, #117	@ 0x75
9001ad82:	d042      	beq.n	9001ae0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001ad84:	2b78      	cmp	r3, #120	@ 0x78
9001ad86:	d1d0      	bne.n	9001ad2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ad88:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ad8a:	1d25      	adds	r5, r4, #4
9001ad8c:	2310      	movs	r3, #16
9001ad8e:	eba8 0202 	sub.w	r2, r8, r2
9001ad92:	e03f      	b.n	9001ae14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ad94:	6823      	ldr	r3, [r4, #0]
9001ad96:	1d25      	adds	r5, r4, #4
9001ad98:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001ad9c:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001ada0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ada2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001ada6:	2b00      	cmp	r3, #0
9001ada8:	d051      	beq.n	9001ae4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001adaa:	881a      	ldrh	r2, [r3, #0]
9001adac:	a80d      	add	r0, sp, #52	@ 0x34
9001adae:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001adb2:	462c      	mov	r4, r5
9001adb4:	9005      	str	r0, [sp, #20]
9001adb6:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001adba:	9004      	str	r0, [sp, #16]
9001adbc:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001adbe:	9003      	str	r0, [sp, #12]
9001adc0:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001adc4:	9002      	str	r0, [sp, #8]
9001adc6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001adc8:	9001      	str	r0, [sp, #4]
9001adca:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001adce:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001add2:	9000      	str	r0, [sp, #0]
9001add4:	a810      	add	r0, sp, #64	@ 0x40
9001add6:	f7ff fd49 	bl	9001a86c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001adda:	e7b7      	b.n	9001ad4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001addc:	1d25      	adds	r5, r4, #4
9001adde:	6823      	ldr	r3, [r4, #0]
9001ade0:	9310      	str	r3, [sp, #64]	@ 0x40
9001ade2:	e7dd      	b.n	9001ada0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ade4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ade6:	230a      	movs	r3, #10
9001ade8:	4649      	mov	r1, r9
9001adea:	6820      	ldr	r0, [r4, #0]
9001adec:	eba8 0202 	sub.w	r2, r8, r2
9001adf0:	1d25      	adds	r5, r4, #4
9001adf2:	b292      	uxth	r2, r2
9001adf4:	f7ff fcf0 	bl	9001a7d8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001adf8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001adfc:	2b2d      	cmp	r3, #45	@ 0x2d
9001adfe:	d1cf      	bne.n	9001ada0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ae00:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001ae04:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ae06:	3302      	adds	r3, #2
9001ae08:	e7ea      	b.n	9001ade0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001ae0a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ae0c:	1d25      	adds	r5, r4, #4
9001ae0e:	230a      	movs	r3, #10
9001ae10:	eba8 0202 	sub.w	r2, r8, r2
9001ae14:	b292      	uxth	r2, r2
9001ae16:	4649      	mov	r1, r9
9001ae18:	6820      	ldr	r0, [r4, #0]
9001ae1a:	f7ff fd09 	bl	9001a830 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001ae1e:	e7bf      	b.n	9001ada0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ae20:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ae22:	2310      	movs	r3, #16
9001ae24:	4649      	mov	r1, r9
9001ae26:	6820      	ldr	r0, [r4, #0]
9001ae28:	eba8 0202 	sub.w	r2, r8, r2
9001ae2c:	1d25      	adds	r5, r4, #4
9001ae2e:	b292      	uxth	r2, r2
9001ae30:	f7ff fcfe 	bl	9001a830 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001ae34:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001ae38:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001ae3c:	2b00      	cmp	r3, #0
9001ae3e:	d0af      	beq.n	9001ada0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ae40:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001ae44:	2919      	cmp	r1, #25
9001ae46:	d8f7      	bhi.n	9001ae38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001ae48:	3b20      	subs	r3, #32
9001ae4a:	8013      	strh	r3, [r2, #0]
9001ae4c:	e7f4      	b.n	9001ae38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001ae4e:	9a08      	ldr	r2, [sp, #32]
9001ae50:	2a00      	cmp	r2, #0
9001ae52:	d0ab      	beq.n	9001adac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ae54:	7812      	ldrb	r2, [r2, #0]
9001ae56:	e7a9      	b.n	9001adac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ae58:	2d00      	cmp	r5, #0
9001ae5a:	f43f af48 	beq.w	9001acee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001ae5e:	782d      	ldrb	r5, [r5, #0]
9001ae60:	e745      	b.n	9001acee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001ae62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001ae62:	b507      	push	{r0, r1, r2, lr}
9001ae64:	9300      	str	r3, [sp, #0]
9001ae66:	4613      	mov	r3, r2
9001ae68:	2200      	movs	r2, #0
9001ae6a:	f7ff fe92 	bl	9001ab92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001ae6e:	b003      	add	sp, #12
9001ae70:	f85d fb04 	ldr.w	pc, [sp], #4

9001ae74 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001ae74:	b40c      	push	{r2, r3}
9001ae76:	b507      	push	{r0, r1, r2, lr}
9001ae78:	ab04      	add	r3, sp, #16
9001ae7a:	f853 2b04 	ldr.w	r2, [r3], #4
9001ae7e:	9301      	str	r3, [sp, #4]
9001ae80:	f7ff ffef 	bl	9001ae62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001ae84:	b003      	add	sp, #12
9001ae86:	f85d eb04 	ldr.w	lr, [sp], #4
9001ae8a:	b002      	add	sp, #8
9001ae8c:	4770      	bx	lr
	...

9001ae90 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001ae90:	4b01      	ldr	r3, [pc, #4]	@ (9001ae98 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001ae92:	6018      	str	r0, [r3, #0]
9001ae94:	4770      	bx	lr
9001ae96:	bf00      	nop
9001ae98:	24021dcc 	.word	0x24021dcc

9001ae9c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001ae9c:	4b06      	ldr	r3, [pc, #24]	@ (9001aeb8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001ae9e:	881a      	ldrh	r2, [r3, #0]
9001aea0:	4282      	cmp	r2, r0
9001aea2:	d807      	bhi.n	9001aeb4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001aea4:	4b05      	ldr	r3, [pc, #20]	@ (9001aebc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001aea6:	881b      	ldrh	r3, [r3, #0]
9001aea8:	4413      	add	r3, r2
9001aeaa:	4298      	cmp	r0, r3
9001aeac:	bfac      	ite	ge
9001aeae:	2000      	movge	r0, #0
9001aeb0:	2001      	movlt	r0, #1
9001aeb2:	4770      	bx	lr
9001aeb4:	2000      	movs	r0, #0
9001aeb6:	4770      	bx	lr
9001aeb8:	24021dec 	.word	0x24021dec
9001aebc:	24021df0 	.word	0x24021df0

9001aec0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001aec0:	b508      	push	{r3, lr}
9001aec2:	4601      	mov	r1, r0
9001aec4:	f7ff ffea 	bl	9001ae9c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001aec8:	b118      	cbz	r0, 9001aed2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001aeca:	4b02      	ldr	r3, [pc, #8]	@ (9001aed4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001aecc:	681b      	ldr	r3, [r3, #0]
9001aece:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001aed2:	bd08      	pop	{r3, pc}
9001aed4:	24021dd0 	.word	0x24021dd0

9001aed8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001aed8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001aeda:	4c24      	ldr	r4, [pc, #144]	@ (9001af6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001aedc:	6823      	ldr	r3, [r4, #0]
9001aede:	2b00      	cmp	r3, #0
9001aee0:	d042      	beq.n	9001af68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001aee2:	4a23      	ldr	r2, [pc, #140]	@ (9001af70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001aee4:	4d23      	ldr	r5, [pc, #140]	@ (9001af74 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001aee6:	8811      	ldrh	r1, [r2, #0]
9001aee8:	f8b5 c000 	ldrh.w	ip, [r5]
9001aeec:	4822      	ldr	r0, [pc, #136]	@ (9001af78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001aeee:	4461      	add	r1, ip
9001aef0:	1c4a      	adds	r2, r1, #1
9001aef2:	008f      	lsls	r7, r1, #2
9001aef4:	f022 0201 	bic.w	r2, r2, #1
9001aef8:	19de      	adds	r6, r3, r7
9001aefa:	0412      	lsls	r2, r2, #16
9001aefc:	6006      	str	r6, [r0, #0]
9001aefe:	4e1f      	ldr	r6, [pc, #124]	@ (9001af7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001af00:	0c12      	lsrs	r2, r2, #16
9001af02:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001af06:	19da      	adds	r2, r3, r7
9001af08:	6032      	str	r2, [r6, #0]
9001af0a:	220e      	movs	r2, #14
9001af0c:	fb02 f20c 	mul.w	r2, r2, ip
9001af10:	3203      	adds	r2, #3
9001af12:	f022 0203 	bic.w	r2, r2, #3
9001af16:	443a      	add	r2, r7
9001af18:	4f19      	ldr	r7, [pc, #100]	@ (9001af80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001af1a:	4413      	add	r3, r2
9001af1c:	603b      	str	r3, [r7, #0]
9001af1e:	2300      	movs	r3, #0
9001af20:	4f18      	ldr	r7, [pc, #96]	@ (9001af84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001af22:	469c      	mov	ip, r3
9001af24:	803b      	strh	r3, [r7, #0]
9001af26:	4f18      	ldr	r7, [pc, #96]	@ (9001af88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001af28:	683f      	ldr	r7, [r7, #0]
9001af2a:	1aba      	subs	r2, r7, r2
9001af2c:	4f17      	ldr	r7, [pc, #92]	@ (9001af8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001af2e:	603a      	str	r2, [r7, #0]
9001af30:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001af34:	4a16      	ldr	r2, [pc, #88]	@ (9001af90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001af36:	8013      	strh	r3, [r2, #0]
9001af38:	428b      	cmp	r3, r1
9001af3a:	d10d      	bne.n	9001af58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001af3c:	882d      	ldrh	r5, [r5, #0]
9001af3e:	2300      	movs	r3, #0
9001af40:	6830      	ldr	r0, [r6, #0]
9001af42:	240e      	movs	r4, #14
9001af44:	429d      	cmp	r5, r3
9001af46:	d90f      	bls.n	9001af68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001af48:	fb04 0203 	mla	r2, r4, r3, r0
9001af4c:	3301      	adds	r3, #1
9001af4e:	7b11      	ldrb	r1, [r2, #12]
9001af50:	f36f 1145 	bfc	r1, #5, #1
9001af54:	7311      	strb	r1, [r2, #12]
9001af56:	e7f5      	b.n	9001af44 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001af58:	6822      	ldr	r2, [r4, #0]
9001af5a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001af5e:	6802      	ldr	r2, [r0, #0]
9001af60:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001af64:	3301      	adds	r3, #1
9001af66:	e7e7      	b.n	9001af38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001af68:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001af6a:	bf00      	nop
9001af6c:	24021dd0 	.word	0x24021dd0
9001af70:	24021dec 	.word	0x24021dec
9001af74:	24021df0 	.word	0x24021df0
9001af78:	24021de4 	.word	0x24021de4
9001af7c:	24021dd4 	.word	0x24021dd4
9001af80:	24021ddc 	.word	0x24021ddc
9001af84:	24021dee 	.word	0x24021dee
9001af88:	24021dd8 	.word	0x24021dd8
9001af8c:	24021de8 	.word	0x24021de8
9001af90:	24021de0 	.word	0x24021de0

9001af94 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001af94:	4b06      	ldr	r3, [pc, #24]	@ (9001afb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001af96:	681b      	ldr	r3, [r3, #0]
9001af98:	b943      	cbnz	r3, 9001afac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001af9a:	b139      	cbz	r1, 9001afac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001af9c:	4b05      	ldr	r3, [pc, #20]	@ (9001afb4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001af9e:	801a      	strh	r2, [r3, #0]
9001afa0:	4b05      	ldr	r3, [pc, #20]	@ (9001afb8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001afa2:	6019      	str	r1, [r3, #0]
9001afa4:	4b05      	ldr	r3, [pc, #20]	@ (9001afbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001afa6:	6018      	str	r0, [r3, #0]
9001afa8:	f7ff bf96 	b.w	9001aed8 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001afac:	4770      	bx	lr
9001afae:	bf00      	nop
9001afb0:	24021ddc 	.word	0x24021ddc
9001afb4:	24021df0 	.word	0x24021df0
9001afb8:	24021dd8 	.word	0x24021dd8
9001afbc:	24021dd0 	.word	0x24021dd0

9001afc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001afc0:	b470      	push	{r4, r5, r6}
9001afc2:	4c07      	ldr	r4, [pc, #28]	@ (9001afe0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001afc4:	4605      	mov	r5, r0
9001afc6:	4610      	mov	r0, r2
9001afc8:	9a03      	ldr	r2, [sp, #12]
9001afca:	6826      	ldr	r6, [r4, #0]
9001afcc:	b936      	cbnz	r6, 9001afdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001afce:	6025      	str	r5, [r4, #0]
9001afd0:	4c04      	ldr	r4, [pc, #16]	@ (9001afe4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001afd2:	8021      	strh	r1, [r4, #0]
9001afd4:	4619      	mov	r1, r3
9001afd6:	bc70      	pop	{r4, r5, r6}
9001afd8:	f7ff bfdc 	b.w	9001af94 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001afdc:	bc70      	pop	{r4, r5, r6}
9001afde:	4770      	bx	lr
9001afe0:	24021df4 	.word	0x24021df4
9001afe4:	24021dec 	.word	0x24021dec

9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001afe8:	4a12      	ldr	r2, [pc, #72]	@ (9001b034 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001afea:	8803      	ldrh	r3, [r0, #0]
9001afec:	8812      	ldrh	r2, [r2, #0]
9001afee:	4293      	cmp	r3, r2
9001aff0:	d207      	bcs.n	9001b002 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001aff2:	4a11      	ldr	r2, [pc, #68]	@ (9001b038 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001aff4:	2114      	movs	r1, #20
9001aff6:	6812      	ldr	r2, [r2, #0]
9001aff8:	fb01 2303 	mla	r3, r1, r3, r2
9001affc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001b000:	4770      	bx	lr
9001b002:	490e      	ldr	r1, [pc, #56]	@ (9001b03c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001b004:	8809      	ldrh	r1, [r1, #0]
9001b006:	4411      	add	r1, r2
9001b008:	428b      	cmp	r3, r1
9001b00a:	da04      	bge.n	9001b016 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001b00c:	1a9b      	subs	r3, r3, r2
9001b00e:	4a0c      	ldr	r2, [pc, #48]	@ (9001b040 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001b010:	210e      	movs	r1, #14
9001b012:	6812      	ldr	r2, [r2, #0]
9001b014:	e7f0      	b.n	9001aff8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001b016:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001b01a:	4293      	cmp	r3, r2
9001b01c:	d108      	bne.n	9001b030 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001b01e:	4b09      	ldr	r3, [pc, #36]	@ (9001b044 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001b020:	781b      	ldrb	r3, [r3, #0]
9001b022:	b91b      	cbnz	r3, 9001b02c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001b024:	4b08      	ldr	r3, [pc, #32]	@ (9001b048 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001b026:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b02a:	4770      	bx	lr
9001b02c:	4b07      	ldr	r3, [pc, #28]	@ (9001b04c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001b02e:	e7fa      	b.n	9001b026 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001b030:	2000      	movs	r0, #0
9001b032:	4770      	bx	lr
9001b034:	24021dec 	.word	0x24021dec
9001b038:	24021df4 	.word	0x24021df4
9001b03c:	24021df0 	.word	0x24021df0
9001b040:	24021dd4 	.word	0x24021dd4
9001b044:	24021d5c 	.word	0x24021d5c
9001b048:	24021d5e 	.word	0x24021d5e
9001b04c:	24021d60 	.word	0x24021d60

9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001b050:	4a12      	ldr	r2, [pc, #72]	@ (9001b09c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001b052:	8803      	ldrh	r3, [r0, #0]
9001b054:	8812      	ldrh	r2, [r2, #0]
9001b056:	4293      	cmp	r3, r2
9001b058:	d207      	bcs.n	9001b06a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001b05a:	4a11      	ldr	r2, [pc, #68]	@ (9001b0a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001b05c:	2114      	movs	r1, #20
9001b05e:	6812      	ldr	r2, [r2, #0]
9001b060:	fb01 2303 	mla	r3, r1, r3, r2
9001b064:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001b068:	4770      	bx	lr
9001b06a:	490e      	ldr	r1, [pc, #56]	@ (9001b0a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001b06c:	8809      	ldrh	r1, [r1, #0]
9001b06e:	4411      	add	r1, r2
9001b070:	428b      	cmp	r3, r1
9001b072:	da04      	bge.n	9001b07e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001b074:	1a9b      	subs	r3, r3, r2
9001b076:	4a0c      	ldr	r2, [pc, #48]	@ (9001b0a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001b078:	210e      	movs	r1, #14
9001b07a:	6812      	ldr	r2, [r2, #0]
9001b07c:	e7f0      	b.n	9001b060 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001b07e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001b082:	4293      	cmp	r3, r2
9001b084:	d108      	bne.n	9001b098 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001b086:	4b09      	ldr	r3, [pc, #36]	@ (9001b0ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001b088:	781b      	ldrb	r3, [r3, #0]
9001b08a:	b91b      	cbnz	r3, 9001b094 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001b08c:	4b08      	ldr	r3, [pc, #32]	@ (9001b0b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001b08e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b092:	4770      	bx	lr
9001b094:	4b07      	ldr	r3, [pc, #28]	@ (9001b0b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001b096:	e7fa      	b.n	9001b08e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001b098:	2000      	movs	r0, #0
9001b09a:	4770      	bx	lr
9001b09c:	24021dec 	.word	0x24021dec
9001b0a0:	24021df4 	.word	0x24021df4
9001b0a4:	24021df0 	.word	0x24021df0
9001b0a8:	24021dd4 	.word	0x24021dd4
9001b0ac:	24021d5c 	.word	0x24021d5c
9001b0b0:	24021d60 	.word	0x24021d60
9001b0b4:	24021d5e 	.word	0x24021d5e

9001b0b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001b0b8:	4a22      	ldr	r2, [pc, #136]	@ (9001b144 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001b0ba:	b530      	push	{r4, r5, lr}
9001b0bc:	880b      	ldrh	r3, [r1, #0]
9001b0be:	8812      	ldrh	r2, [r2, #0]
9001b0c0:	4293      	cmp	r3, r2
9001b0c2:	d213      	bcs.n	9001b0ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001b0c4:	4a20      	ldr	r2, [pc, #128]	@ (9001b148 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001b0c6:	2114      	movs	r1, #20
9001b0c8:	6812      	ldr	r2, [r2, #0]
9001b0ca:	fb01 2303 	mla	r3, r1, r3, r2
9001b0ce:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001b0d2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001b0d6:	8a1a      	ldrh	r2, [r3, #16]
9001b0d8:	8a5b      	ldrh	r3, [r3, #18]
9001b0da:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b0de:	8004      	strh	r4, [r0, #0]
9001b0e0:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001b0e4:	8041      	strh	r1, [r0, #2]
9001b0e6:	8082      	strh	r2, [r0, #4]
9001b0e8:	80c3      	strh	r3, [r0, #6]
9001b0ea:	e024      	b.n	9001b136 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001b0ec:	4917      	ldr	r1, [pc, #92]	@ (9001b14c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001b0ee:	8809      	ldrh	r1, [r1, #0]
9001b0f0:	4411      	add	r1, r2
9001b0f2:	428b      	cmp	r3, r1
9001b0f4:	da10      	bge.n	9001b118 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001b0f6:	1a9b      	subs	r3, r3, r2
9001b0f8:	220e      	movs	r2, #14
9001b0fa:	4353      	muls	r3, r2
9001b0fc:	4a14      	ldr	r2, [pc, #80]	@ (9001b150 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001b0fe:	6811      	ldr	r1, [r2, #0]
9001b100:	18ca      	adds	r2, r1, r3
9001b102:	5ecd      	ldrsh	r5, [r1, r3]
9001b104:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001b108:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001b10c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001b110:	8005      	strh	r5, [r0, #0]
9001b112:	8044      	strh	r4, [r0, #2]
9001b114:	8081      	strh	r1, [r0, #4]
9001b116:	e7e7      	b.n	9001b0e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001b118:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001b11c:	4293      	cmp	r3, r2
9001b11e:	d10b      	bne.n	9001b138 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001b120:	4b0c      	ldr	r3, [pc, #48]	@ (9001b154 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001b122:	f9b3 1000 	ldrsh.w	r1, [r3]
9001b126:	4b0c      	ldr	r3, [pc, #48]	@ (9001b158 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001b128:	8081      	strh	r1, [r0, #4]
9001b12a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b12e:	2300      	movs	r3, #0
9001b130:	80c2      	strh	r2, [r0, #6]
9001b132:	8003      	strh	r3, [r0, #0]
9001b134:	8043      	strh	r3, [r0, #2]
9001b136:	bd30      	pop	{r4, r5, pc}
9001b138:	2300      	movs	r3, #0
9001b13a:	8003      	strh	r3, [r0, #0]
9001b13c:	8043      	strh	r3, [r0, #2]
9001b13e:	8083      	strh	r3, [r0, #4]
9001b140:	e7d2      	b.n	9001b0e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001b142:	bf00      	nop
9001b144:	24021dec 	.word	0x24021dec
9001b148:	24021df4 	.word	0x24021df4
9001b14c:	24021df0 	.word	0x24021df0
9001b150:	24021dd4 	.word	0x24021dd4
9001b154:	24021d58 	.word	0x24021d58
9001b158:	24021d5a 	.word	0x24021d5a

9001b15c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001b15c:	4a17      	ldr	r2, [pc, #92]	@ (9001b1bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001b15e:	8803      	ldrh	r3, [r0, #0]
9001b160:	8812      	ldrh	r2, [r2, #0]
9001b162:	4293      	cmp	r3, r2
9001b164:	d213      	bcs.n	9001b18e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001b166:	4a16      	ldr	r2, [pc, #88]	@ (9001b1c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001b168:	2114      	movs	r1, #20
9001b16a:	6812      	ldr	r2, [r2, #0]
9001b16c:	fb01 2303 	mla	r3, r1, r3, r2
9001b170:	8a1a      	ldrh	r2, [r3, #16]
9001b172:	8919      	ldrh	r1, [r3, #8]
9001b174:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b178:	428a      	cmp	r2, r1
9001b17a:	db1d      	blt.n	9001b1b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b17c:	8a58      	ldrh	r0, [r3, #18]
9001b17e:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001b182:	895b      	ldrh	r3, [r3, #10]
9001b184:	4298      	cmp	r0, r3
9001b186:	bfac      	ite	ge
9001b188:	2000      	movge	r0, #0
9001b18a:	2001      	movlt	r0, #1
9001b18c:	4770      	bx	lr
9001b18e:	490d      	ldr	r1, [pc, #52]	@ (9001b1c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001b190:	8809      	ldrh	r1, [r1, #0]
9001b192:	4411      	add	r1, r2
9001b194:	428b      	cmp	r3, r1
9001b196:	da0d      	bge.n	9001b1b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001b198:	1a9b      	subs	r3, r3, r2
9001b19a:	4a0b      	ldr	r2, [pc, #44]	@ (9001b1c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001b19c:	210e      	movs	r1, #14
9001b19e:	6812      	ldr	r2, [r2, #0]
9001b1a0:	fb01 2303 	mla	r3, r1, r3, r2
9001b1a4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001b1a8:	891a      	ldrh	r2, [r3, #8]
9001b1aa:	4291      	cmp	r1, r2
9001b1ac:	db04      	blt.n	9001b1b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b1ae:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001b1b2:	e7e6      	b.n	9001b182 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001b1b4:	2000      	movs	r0, #0
9001b1b6:	4770      	bx	lr
9001b1b8:	2001      	movs	r0, #1
9001b1ba:	4770      	bx	lr
9001b1bc:	24021dec 	.word	0x24021dec
9001b1c0:	24021df4 	.word	0x24021df4
9001b1c4:	24021df0 	.word	0x24021df0
9001b1c8:	24021dd4 	.word	0x24021dd4

9001b1cc <_ZNK8touchgfx6Bitmap7getDataEv>:
9001b1cc:	4a12      	ldr	r2, [pc, #72]	@ (9001b218 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001b1ce:	8803      	ldrh	r3, [r0, #0]
9001b1d0:	8811      	ldrh	r1, [r2, #0]
9001b1d2:	428b      	cmp	r3, r1
9001b1d4:	d20b      	bcs.n	9001b1ee <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001b1d6:	4a11      	ldr	r2, [pc, #68]	@ (9001b21c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b1d8:	6812      	ldr	r2, [r2, #0]
9001b1da:	b112      	cbz	r2, 9001b1e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001b1dc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b1e0:	b9c0      	cbnz	r0, 9001b214 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001b1e2:	4a0f      	ldr	r2, [pc, #60]	@ (9001b220 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001b1e4:	6811      	ldr	r1, [r2, #0]
9001b1e6:	2214      	movs	r2, #20
9001b1e8:	4353      	muls	r3, r2
9001b1ea:	58c8      	ldr	r0, [r1, r3]
9001b1ec:	4770      	bx	lr
9001b1ee:	4a0d      	ldr	r2, [pc, #52]	@ (9001b224 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001b1f0:	8812      	ldrh	r2, [r2, #0]
9001b1f2:	440a      	add	r2, r1
9001b1f4:	4293      	cmp	r3, r2
9001b1f6:	da04      	bge.n	9001b202 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001b1f8:	4a08      	ldr	r2, [pc, #32]	@ (9001b21c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b1fa:	6812      	ldr	r2, [r2, #0]
9001b1fc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b200:	4770      	bx	lr
9001b202:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001b206:	4293      	cmp	r3, r2
9001b208:	d103      	bne.n	9001b212 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001b20a:	4b07      	ldr	r3, [pc, #28]	@ (9001b228 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001b20c:	681b      	ldr	r3, [r3, #0]
9001b20e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001b210:	4770      	bx	lr
9001b212:	2000      	movs	r0, #0
9001b214:	4770      	bx	lr
9001b216:	bf00      	nop
9001b218:	24021dec 	.word	0x24021dec
9001b21c:	24021dd0 	.word	0x24021dd0
9001b220:	24021df4 	.word	0x24021df4
9001b224:	24021df0 	.word	0x24021df0
9001b228:	24021d64 	.word	0x24021d64

9001b22c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001b22c:	4b24      	ldr	r3, [pc, #144]	@ (9001b2c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001b22e:	8802      	ldrh	r2, [r0, #0]
9001b230:	8818      	ldrh	r0, [r3, #0]
9001b232:	4282      	cmp	r2, r0
9001b234:	d221      	bcs.n	9001b27a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001b236:	4b23      	ldr	r3, [pc, #140]	@ (9001b2c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001b238:	6819      	ldr	r1, [r3, #0]
9001b23a:	2314      	movs	r3, #20
9001b23c:	fb03 1302 	mla	r3, r3, r2, r1
9001b240:	6858      	ldr	r0, [r3, #4]
9001b242:	2800      	cmp	r0, #0
9001b244:	d03a      	beq.n	9001b2bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b246:	4920      	ldr	r1, [pc, #128]	@ (9001b2c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b248:	6809      	ldr	r1, [r1, #0]
9001b24a:	2900      	cmp	r1, #0
9001b24c:	d036      	beq.n	9001b2bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b24e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001b252:	2900      	cmp	r1, #0
9001b254:	d032      	beq.n	9001b2bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b256:	891a      	ldrh	r2, [r3, #8]
9001b258:	8958      	ldrh	r0, [r3, #10]
9001b25a:	4350      	muls	r0, r2
9001b25c:	7c5a      	ldrb	r2, [r3, #17]
9001b25e:	7cdb      	ldrb	r3, [r3, #19]
9001b260:	0952      	lsrs	r2, r2, #5
9001b262:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001b266:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001b26a:	2b0b      	cmp	r3, #11
9001b26c:	bf18      	it	ne
9001b26e:	0040      	lslne	r0, r0, #1
9001b270:	3003      	adds	r0, #3
9001b272:	f020 0003 	bic.w	r0, r0, #3
9001b276:	4408      	add	r0, r1
9001b278:	4770      	bx	lr
9001b27a:	4b14      	ldr	r3, [pc, #80]	@ (9001b2cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001b27c:	881b      	ldrh	r3, [r3, #0]
9001b27e:	4403      	add	r3, r0
9001b280:	429a      	cmp	r2, r3
9001b282:	da1a      	bge.n	9001b2ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b284:	4b12      	ldr	r3, [pc, #72]	@ (9001b2d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001b286:	1a10      	subs	r0, r2, r0
9001b288:	210e      	movs	r1, #14
9001b28a:	681b      	ldr	r3, [r3, #0]
9001b28c:	fb01 3000 	mla	r0, r1, r0, r3
9001b290:	7b03      	ldrb	r3, [r0, #12]
9001b292:	f003 031f 	and.w	r3, r3, #31
9001b296:	2b0b      	cmp	r3, #11
9001b298:	d10b      	bne.n	9001b2b2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001b29a:	8903      	ldrh	r3, [r0, #8]
9001b29c:	8940      	ldrh	r0, [r0, #10]
9001b29e:	4358      	muls	r0, r3
9001b2a0:	4b09      	ldr	r3, [pc, #36]	@ (9001b2c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b2a2:	3003      	adds	r0, #3
9001b2a4:	6819      	ldr	r1, [r3, #0]
9001b2a6:	f020 0303 	bic.w	r3, r0, #3
9001b2aa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001b2ae:	4418      	add	r0, r3
9001b2b0:	4770      	bx	lr
9001b2b2:	2b0d      	cmp	r3, #13
9001b2b4:	d101      	bne.n	9001b2ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b2b6:	300d      	adds	r0, #13
9001b2b8:	4770      	bx	lr
9001b2ba:	2000      	movs	r0, #0
9001b2bc:	4770      	bx	lr
9001b2be:	bf00      	nop
9001b2c0:	24021dec 	.word	0x24021dec
9001b2c4:	24021df4 	.word	0x24021df4
9001b2c8:	24021dd0 	.word	0x24021dd0
9001b2cc:	24021df0 	.word	0x24021df0
9001b2d0:	24021dd4 	.word	0x24021dd4

9001b2d4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001b2d4:	4b1f      	ldr	r3, [pc, #124]	@ (9001b354 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001b2d6:	b510      	push	{r4, lr}
9001b2d8:	8802      	ldrh	r2, [r0, #0]
9001b2da:	881b      	ldrh	r3, [r3, #0]
9001b2dc:	429a      	cmp	r2, r3
9001b2de:	d21a      	bcs.n	9001b316 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001b2e0:	4b1d      	ldr	r3, [pc, #116]	@ (9001b358 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001b2e2:	2114      	movs	r1, #20
9001b2e4:	681b      	ldr	r3, [r3, #0]
9001b2e6:	fb01 3102 	mla	r1, r1, r2, r3
9001b2ea:	7c4b      	ldrb	r3, [r1, #17]
9001b2ec:	0958      	lsrs	r0, r3, #5
9001b2ee:	7ccb      	ldrb	r3, [r1, #19]
9001b2f0:	491a      	ldr	r1, [pc, #104]	@ (9001b35c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001b2f2:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001b2f6:	6809      	ldr	r1, [r1, #0]
9001b2f8:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001b2fc:	b2d8      	uxtb	r0, r3
9001b2fe:	b149      	cbz	r1, 9001b314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001b300:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001b304:	b132      	cbz	r2, 9001b314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001b306:	2b0e      	cmp	r3, #14
9001b308:	d021      	beq.n	9001b34e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001b30a:	280f      	cmp	r0, #15
9001b30c:	d01d      	beq.n	9001b34a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001b30e:	2810      	cmp	r0, #16
9001b310:	bf08      	it	eq
9001b312:	2002      	moveq	r0, #2
9001b314:	bd10      	pop	{r4, pc}
9001b316:	4912      	ldr	r1, [pc, #72]	@ (9001b360 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001b318:	8809      	ldrh	r1, [r1, #0]
9001b31a:	4419      	add	r1, r3
9001b31c:	428a      	cmp	r2, r1
9001b31e:	da09      	bge.n	9001b334 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001b320:	1ad3      	subs	r3, r2, r3
9001b322:	4a10      	ldr	r2, [pc, #64]	@ (9001b364 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001b324:	210e      	movs	r1, #14
9001b326:	6812      	ldr	r2, [r2, #0]
9001b328:	fb01 2303 	mla	r3, r1, r3, r2
9001b32c:	7b18      	ldrb	r0, [r3, #12]
9001b32e:	f000 001f 	and.w	r0, r0, #31
9001b332:	e7ef      	b.n	9001b314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001b334:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001b338:	429a      	cmp	r2, r3
9001b33a:	d108      	bne.n	9001b34e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001b33c:	f7f6 fb80 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
9001b340:	6803      	ldr	r3, [r0, #0]
9001b342:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001b346:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b348:	4718      	bx	r3
9001b34a:	2001      	movs	r0, #1
9001b34c:	e7e2      	b.n	9001b314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001b34e:	2000      	movs	r0, #0
9001b350:	e7e0      	b.n	9001b314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001b352:	bf00      	nop
9001b354:	24021dec 	.word	0x24021dec
9001b358:	24021df4 	.word	0x24021df4
9001b35c:	24021dd0 	.word	0x24021dd0
9001b360:	24021df0 	.word	0x24021df0
9001b364:	24021dd4 	.word	0x24021dd4

9001b368 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001b368:	2010      	movs	r0, #16
9001b36a:	4770      	bx	lr

9001b36c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001b36c:	4b02      	ldr	r3, [pc, #8]	@ (9001b378 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001b36e:	8818      	ldrh	r0, [r3, #0]
9001b370:	0040      	lsls	r0, r0, #1
9001b372:	b280      	uxth	r0, r0
9001b374:	4770      	bx	lr
9001b376:	bf00      	nop
9001b378:	24021d5e 	.word	0x24021d5e

9001b37c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001b37c:	2bff      	cmp	r3, #255	@ 0xff
9001b37e:	d05e      	beq.n	9001b43e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001b380:	2a0b      	cmp	r2, #11
9001b382:	d058      	beq.n	9001b436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001b384:	d80e      	bhi.n	9001b3a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001b386:	2a03      	cmp	r2, #3
9001b388:	d04d      	beq.n	9001b426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001b38a:	d804      	bhi.n	9001b396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001b38c:	2a01      	cmp	r2, #1
9001b38e:	d04c      	beq.n	9001b42a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001b390:	d94d      	bls.n	9001b42e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001b392:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001b394:	e031      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b396:	2a09      	cmp	r2, #9
9001b398:	d04d      	beq.n	9001b436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001b39a:	d84a      	bhi.n	9001b432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001b39c:	2a08      	cmp	r2, #8
9001b39e:	d048      	beq.n	9001b432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001b3a0:	2300      	movs	r3, #0
9001b3a2:	e02a      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b3a4:	2a2f      	cmp	r2, #47	@ 0x2f
9001b3a6:	d02c      	beq.n	9001b402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001b3a8:	d811      	bhi.n	9001b3ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001b3aa:	2a2d      	cmp	r2, #45	@ 0x2d
9001b3ac:	d018      	beq.n	9001b3e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001b3ae:	d831      	bhi.n	9001b414 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001b3b0:	2a2c      	cmp	r2, #44	@ 0x2c
9001b3b2:	d1f5      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3b4:	684a      	ldr	r2, [r1, #4]
9001b3b6:	7813      	ldrb	r3, [r2, #0]
9001b3b8:	7852      	ldrb	r2, [r2, #1]
9001b3ba:	2a00      	cmp	r2, #0
9001b3bc:	d1f0      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3be:	2b01      	cmp	r3, #1
9001b3c0:	d01d      	beq.n	9001b3fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001b3c2:	2b00      	cmp	r3, #0
9001b3c4:	d02d      	beq.n	9001b422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001b3c6:	2b02      	cmp	r3, #2
9001b3c8:	d1ea      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3ca:	68c3      	ldr	r3, [r0, #12]
9001b3cc:	e015      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b3ce:	2a31      	cmp	r2, #49	@ 0x31
9001b3d0:	d004      	beq.n	9001b3dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001b3d2:	d332      	bcc.n	9001b43a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001b3d4:	2a32      	cmp	r2, #50	@ 0x32
9001b3d6:	d030      	beq.n	9001b43a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001b3d8:	2a33      	cmp	r2, #51	@ 0x33
9001b3da:	d1e1      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3dc:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001b3de:	e00c      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b3e0:	684a      	ldr	r2, [r1, #4]
9001b3e2:	7813      	ldrb	r3, [r2, #0]
9001b3e4:	7852      	ldrb	r2, [r2, #1]
9001b3e6:	2a00      	cmp	r2, #0
9001b3e8:	d1da      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3ea:	2b01      	cmp	r3, #1
9001b3ec:	d004      	beq.n	9001b3f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001b3ee:	d30f      	bcc.n	9001b410 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001b3f0:	2b02      	cmp	r3, #2
9001b3f2:	d1d5      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b3f4:	6943      	ldr	r3, [r0, #20]
9001b3f6:	e000      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b3f8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001b3fa:	4618      	mov	r0, r3
9001b3fc:	4770      	bx	lr
9001b3fe:	69c3      	ldr	r3, [r0, #28]
9001b400:	e7fb      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b402:	684b      	ldr	r3, [r1, #4]
9001b404:	781a      	ldrb	r2, [r3, #0]
9001b406:	785b      	ldrb	r3, [r3, #1]
9001b408:	2b00      	cmp	r3, #0
9001b40a:	d1c9      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b40c:	2a00      	cmp	r2, #0
9001b40e:	d1f4      	bne.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b410:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001b412:	e7f2      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b414:	684b      	ldr	r3, [r1, #4]
9001b416:	781a      	ldrb	r2, [r3, #0]
9001b418:	785b      	ldrb	r3, [r3, #1]
9001b41a:	2b00      	cmp	r3, #0
9001b41c:	d1c0      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b41e:	2a00      	cmp	r2, #0
9001b420:	d1eb      	bne.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b422:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001b424:	e7e9      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b426:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001b428:	e7e7      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b42a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001b42c:	e7e5      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b42e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001b430:	e7e3      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b432:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001b434:	e7e1      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b436:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001b438:	e7df      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b43a:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001b43c:	e7dd      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b43e:	2a0b      	cmp	r2, #11
9001b440:	d059      	beq.n	9001b4f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001b442:	d80e      	bhi.n	9001b462 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001b444:	2a03      	cmp	r2, #3
9001b446:	d050      	beq.n	9001b4ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001b448:	d804      	bhi.n	9001b454 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001b44a:	2a01      	cmp	r2, #1
9001b44c:	d04f      	beq.n	9001b4ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001b44e:	d950      	bls.n	9001b4f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001b450:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001b452:	e7d2      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b454:	2a09      	cmp	r2, #9
9001b456:	d04e      	beq.n	9001b4f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001b458:	d801      	bhi.n	9001b45e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001b45a:	2a08      	cmp	r2, #8
9001b45c:	d1a0      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b45e:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001b460:	e7cb      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b462:	2a2f      	cmp	r2, #47	@ 0x2f
9001b464:	d02d      	beq.n	9001b4c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001b466:	d811      	bhi.n	9001b48c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001b468:	2a2d      	cmp	r2, #45	@ 0x2d
9001b46a:	d018      	beq.n	9001b49e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001b46c:	d833      	bhi.n	9001b4d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001b46e:	2a2c      	cmp	r2, #44	@ 0x2c
9001b470:	d196      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b472:	684a      	ldr	r2, [r1, #4]
9001b474:	7813      	ldrb	r3, [r2, #0]
9001b476:	7852      	ldrb	r2, [r2, #1]
9001b478:	2a00      	cmp	r2, #0
9001b47a:	d191      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b47c:	2b01      	cmp	r3, #1
9001b47e:	d01e      	beq.n	9001b4be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001b480:	2b00      	cmp	r3, #0
9001b482:	d030      	beq.n	9001b4e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001b484:	2b02      	cmp	r3, #2
9001b486:	d18b      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b488:	6903      	ldr	r3, [r0, #16]
9001b48a:	e7b6      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b48c:	2a31      	cmp	r2, #49	@ 0x31
9001b48e:	d004      	beq.n	9001b49a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001b490:	d333      	bcc.n	9001b4fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001b492:	2a32      	cmp	r2, #50	@ 0x32
9001b494:	d031      	beq.n	9001b4fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001b496:	2a33      	cmp	r2, #51	@ 0x33
9001b498:	d182      	bne.n	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b49a:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001b49c:	e7ad      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b49e:	684a      	ldr	r2, [r1, #4]
9001b4a0:	7813      	ldrb	r3, [r2, #0]
9001b4a2:	7852      	ldrb	r2, [r2, #1]
9001b4a4:	2a00      	cmp	r2, #0
9001b4a6:	f47f af7b 	bne.w	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b4aa:	2b01      	cmp	r3, #1
9001b4ac:	d005      	beq.n	9001b4ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001b4ae:	d310      	bcc.n	9001b4d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001b4b0:	2b02      	cmp	r3, #2
9001b4b2:	f47f af75 	bne.w	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b4b6:	6983      	ldr	r3, [r0, #24]
9001b4b8:	e79f      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4ba:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001b4bc:	e79d      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4be:	6a03      	ldr	r3, [r0, #32]
9001b4c0:	e79b      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4c2:	684b      	ldr	r3, [r1, #4]
9001b4c4:	781a      	ldrb	r2, [r3, #0]
9001b4c6:	785b      	ldrb	r3, [r3, #1]
9001b4c8:	2b00      	cmp	r3, #0
9001b4ca:	f47f af69 	bne.w	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b4ce:	2a00      	cmp	r2, #0
9001b4d0:	d193      	bne.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4d2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001b4d4:	e791      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4d6:	684b      	ldr	r3, [r1, #4]
9001b4d8:	781a      	ldrb	r2, [r3, #0]
9001b4da:	785b      	ldrb	r3, [r3, #1]
9001b4dc:	2b00      	cmp	r3, #0
9001b4de:	f47f af5f 	bne.w	9001b3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b4e2:	2a00      	cmp	r2, #0
9001b4e4:	d189      	bne.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4e6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001b4e8:	e787      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4ea:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001b4ec:	e785      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4ee:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001b4f0:	e783      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4f2:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001b4f4:	e781      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4f6:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001b4f8:	e77f      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b4fa:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001b4fc:	e77d      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001b4fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b4fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b502:	b087      	sub	sp, #28
9001b504:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b506:	9205      	str	r2, [sp, #20]
9001b508:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b50c:	9101      	str	r1, [sp, #4]
9001b50e:	9202      	str	r2, [sp, #8]
9001b510:	6841      	ldr	r1, [r0, #4]
9001b512:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b516:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b51a:	fb01 2404 	mla	r4, r1, r4, r2
9001b51e:	6802      	ldr	r2, [r0, #0]
9001b520:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b524:	f8de 2000 	ldr.w	r2, [lr]
9001b528:	9203      	str	r2, [sp, #12]
9001b52a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b52e:	3204      	adds	r2, #4
9001b530:	9204      	str	r2, [sp, #16]
9001b532:	9a02      	ldr	r2, [sp, #8]
9001b534:	43d6      	mvns	r6, r2
9001b536:	b2f6      	uxtb	r6, r6
9001b538:	9a01      	ldr	r2, [sp, #4]
9001b53a:	2a00      	cmp	r2, #0
9001b53c:	dc03      	bgt.n	9001b546 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b53e:	9a05      	ldr	r2, [sp, #20]
9001b540:	2a00      	cmp	r2, #0
9001b542:	f340 8129 	ble.w	9001b798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b546:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b548:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b54c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b550:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b552:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b556:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b55a:	2b00      	cmp	r3, #0
9001b55c:	dd0e      	ble.n	9001b57c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b55e:	1408      	asrs	r0, r1, #16
9001b560:	d405      	bmi.n	9001b56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b562:	4560      	cmp	r0, ip
9001b564:	da03      	bge.n	9001b56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b566:	1410      	asrs	r0, r2, #16
9001b568:	d401      	bmi.n	9001b56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b56a:	42b8      	cmp	r0, r7
9001b56c:	db07      	blt.n	9001b57e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b56e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b570:	3b01      	subs	r3, #1
9001b572:	3402      	adds	r4, #2
9001b574:	4401      	add	r1, r0
9001b576:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b578:	4402      	add	r2, r0
9001b57a:	e7ee      	b.n	9001b55a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b57c:	d071      	beq.n	9001b662 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b57e:	1e58      	subs	r0, r3, #1
9001b580:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b582:	fb05 1500 	mla	r5, r5, r0, r1
9001b586:	142d      	asrs	r5, r5, #16
9001b588:	d45f      	bmi.n	9001b64a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b58a:	4565      	cmp	r5, ip
9001b58c:	da5d      	bge.n	9001b64a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b58e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b590:	fb05 2000 	mla	r0, r5, r0, r2
9001b594:	1400      	asrs	r0, r0, #16
9001b596:	d458      	bmi.n	9001b64a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b598:	42b8      	cmp	r0, r7
9001b59a:	da56      	bge.n	9001b64a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b59c:	4699      	mov	r9, r3
9001b59e:	46a2      	mov	sl, r4
9001b5a0:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001b5a4:	f1b9 0f00 	cmp.w	r9, #0
9001b5a8:	dd57      	ble.n	9001b65a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001b5aa:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001b5ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b5b2:	9803      	ldr	r0, [sp, #12]
9001b5b4:	140d      	asrs	r5, r1, #16
9001b5b6:	f109 39ff 	add.w	r9, r9, #4294967295
9001b5ba:	fb07 000c 	mla	r0, r7, ip, r0
9001b5be:	5d40      	ldrb	r0, [r0, r5]
9001b5c0:	9d04      	ldr	r5, [sp, #16]
9001b5c2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b5c6:	f8ba 5000 	ldrh.w	r5, [sl]
9001b5ca:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b5ce:	122f      	asrs	r7, r5, #8
9001b5d0:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b5d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b5d8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b5dc:	00ed      	lsls	r5, r5, #3
9001b5de:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001b5e2:	fb17 f706 	smulbb	r7, r7, r6
9001b5e6:	b2ed      	uxtb	r5, r5
9001b5e8:	fb18 f806 	smulbb	r8, r8, r6
9001b5ec:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b5f0:	10c7      	asrs	r7, r0, #3
9001b5f2:	fb15 f506 	smulbb	r5, r5, r6
9001b5f6:	00c0      	lsls	r0, r0, #3
9001b5f8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b5fc:	fa1f fc8c 	uxth.w	ip, ip
9001b600:	b2c0      	uxtb	r0, r0
9001b602:	fb07 870b 	mla	r7, r7, fp, r8
9001b606:	fb00 500b 	mla	r0, r0, fp, r5
9001b60a:	f10c 0501 	add.w	r5, ip, #1
9001b60e:	b2bf      	uxth	r7, r7
9001b610:	b280      	uxth	r0, r0
9001b612:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b616:	f107 0801 	add.w	r8, r7, #1
9001b61a:	1c45      	adds	r5, r0, #1
9001b61c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b620:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b624:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b628:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b62a:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b62e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b632:	4401      	add	r1, r0
9001b634:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001b638:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b63a:	ea45 0c0c 	orr.w	ip, r5, ip
9001b63e:	4402      	add	r2, r0
9001b640:	ea4c 0c08 	orr.w	ip, ip, r8
9001b644:	f82a cb02 	strh.w	ip, [sl], #2
9001b648:	e7ac      	b.n	9001b5a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b64a:	f04f 0800 	mov.w	r8, #0
9001b64e:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001b652:	eb03 0008 	add.w	r0, r3, r8
9001b656:	2800      	cmp	r0, #0
9001b658:	dc41      	bgt.n	9001b6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001b65a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b65e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b662:	9b01      	ldr	r3, [sp, #4]
9001b664:	2b00      	cmp	r3, #0
9001b666:	f340 8097 	ble.w	9001b798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b66a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b66e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b670:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b674:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b678:	eef0 6a62 	vmov.f32	s13, s5
9001b67c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b680:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b684:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b688:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b68c:	eef0 6a43 	vmov.f32	s13, s6
9001b690:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b694:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b698:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b69c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b6a0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b6a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b6a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b6ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b6b0:	ee12 2a90 	vmov	r2, s5
9001b6b4:	eef0 2a47 	vmov.f32	s5, s14
9001b6b8:	fb92 f3f3 	sdiv	r3, r2, r3
9001b6bc:	ee13 2a10 	vmov	r2, s6
9001b6c0:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b6c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b6c4:	eeb0 3a67 	vmov.f32	s6, s15
9001b6c8:	fb92 f3f3 	sdiv	r3, r2, r3
9001b6cc:	9314      	str	r3, [sp, #80]	@ 0x50
9001b6ce:	9b01      	ldr	r3, [sp, #4]
9001b6d0:	9a05      	ldr	r2, [sp, #20]
9001b6d2:	3b01      	subs	r3, #1
9001b6d4:	9301      	str	r3, [sp, #4]
9001b6d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b6d8:	bf08      	it	eq
9001b6da:	4613      	moveq	r3, r2
9001b6dc:	e72c      	b.n	9001b538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001b6de:	140f      	asrs	r7, r1, #16
9001b6e0:	d453      	bmi.n	9001b78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b6e2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b6e6:	42bd      	cmp	r5, r7
9001b6e8:	dd4f      	ble.n	9001b78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b6ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b6ee:	d44c      	bmi.n	9001b78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b6f0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b6f4:	4560      	cmp	r0, ip
9001b6f6:	dd48      	ble.n	9001b78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b6f8:	9803      	ldr	r0, [sp, #12]
9001b6fa:	b22d      	sxth	r5, r5
9001b6fc:	fb0c 0505 	mla	r5, ip, r5, r0
9001b700:	5de8      	ldrb	r0, [r5, r7]
9001b702:	9d04      	ldr	r5, [sp, #16]
9001b704:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b708:	f06f 0501 	mvn.w	r5, #1
9001b70c:	fb05 fb08 	mul.w	fp, r5, r8
9001b710:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b714:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b718:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b71c:	122f      	asrs	r7, r5, #8
9001b71e:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b722:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b726:	00ed      	lsls	r5, r5, #3
9001b728:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b72c:	fb17 f706 	smulbb	r7, r7, r6
9001b730:	b2ed      	uxtb	r5, r5
9001b732:	fb19 f906 	smulbb	r9, r9, r6
9001b736:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b73a:	10c7      	asrs	r7, r0, #3
9001b73c:	fb15 f506 	smulbb	r5, r5, r6
9001b740:	00c0      	lsls	r0, r0, #3
9001b742:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b746:	fa1f fc8c 	uxth.w	ip, ip
9001b74a:	b2c0      	uxtb	r0, r0
9001b74c:	fb07 970a 	mla	r7, r7, sl, r9
9001b750:	fb00 500a 	mla	r0, r0, sl, r5
9001b754:	f10c 0501 	add.w	r5, ip, #1
9001b758:	b2bf      	uxth	r7, r7
9001b75a:	b280      	uxth	r0, r0
9001b75c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b760:	f107 0901 	add.w	r9, r7, #1
9001b764:	1c45      	adds	r5, r0, #1
9001b766:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b76a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b76e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b772:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b776:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b77a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b77e:	ea45 0c0c 	orr.w	ip, r5, ip
9001b782:	ea4c 0c09 	orr.w	ip, ip, r9
9001b786:	f824 c00b 	strh.w	ip, [r4, fp]
9001b78a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b78c:	f108 38ff 	add.w	r8, r8, #4294967295
9001b790:	4401      	add	r1, r0
9001b792:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b794:	4402      	add	r2, r0
9001b796:	e75c      	b.n	9001b652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001b798:	b007      	add	sp, #28
9001b79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b79e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b79e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b7a2:	b085      	sub	sp, #20
9001b7a4:	4693      	mov	fp, r2
9001b7a6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b7aa:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b7ac:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b7ae:	6870      	ldr	r0, [r6, #4]
9001b7b0:	9100      	str	r1, [sp, #0]
9001b7b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b7b6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001b7ba:	fb00 2404 	mla	r4, r0, r4, r2
9001b7be:	6832      	ldr	r2, [r6, #0]
9001b7c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b7c4:	682a      	ldr	r2, [r5, #0]
9001b7c6:	9201      	str	r2, [sp, #4]
9001b7c8:	686a      	ldr	r2, [r5, #4]
9001b7ca:	3204      	adds	r2, #4
9001b7cc:	9202      	str	r2, [sp, #8]
9001b7ce:	9a00      	ldr	r2, [sp, #0]
9001b7d0:	2a00      	cmp	r2, #0
9001b7d2:	dc03      	bgt.n	9001b7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b7d4:	f1bb 0f00 	cmp.w	fp, #0
9001b7d8:	f340 80a0 	ble.w	9001b91c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b7dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b7de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b7e2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b7e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b7e8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b7ec:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b7f0:	2b00      	cmp	r3, #0
9001b7f2:	dd0c      	ble.n	9001b80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b7f4:	1406      	asrs	r6, r0, #16
9001b7f6:	d405      	bmi.n	9001b804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b7f8:	454e      	cmp	r6, r9
9001b7fa:	da03      	bge.n	9001b804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b7fc:	1416      	asrs	r6, r2, #16
9001b7fe:	d401      	bmi.n	9001b804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b800:	4546      	cmp	r6, r8
9001b802:	db05      	blt.n	9001b810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b804:	4470      	add	r0, lr
9001b806:	4462      	add	r2, ip
9001b808:	3b01      	subs	r3, #1
9001b80a:	3402      	adds	r4, #2
9001b80c:	e7f0      	b.n	9001b7f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b80e:	d00f      	beq.n	9001b830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b810:	1e5e      	subs	r6, r3, #1
9001b812:	fb0e 0706 	mla	r7, lr, r6, r0
9001b816:	143f      	asrs	r7, r7, #16
9001b818:	d541      	bpl.n	9001b89e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001b81a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b81e:	4698      	mov	r8, r3
9001b820:	9603      	str	r6, [sp, #12]
9001b822:	f1b8 0f00 	cmp.w	r8, #0
9001b826:	dc59      	bgt.n	9001b8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b828:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b82c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b830:	9b00      	ldr	r3, [sp, #0]
9001b832:	2b00      	cmp	r3, #0
9001b834:	dd72      	ble.n	9001b91c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b836:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b83a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b83c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b840:	eeb0 6a62 	vmov.f32	s12, s5
9001b844:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b848:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b84c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b850:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b854:	eeb0 6a43 	vmov.f32	s12, s6
9001b858:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b85c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b860:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b864:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b868:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b86c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b870:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b874:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b878:	ee12 2a90 	vmov	r2, s5
9001b87c:	eef0 2a47 	vmov.f32	s5, s14
9001b880:	fb92 fef3 	sdiv	lr, r2, r3
9001b884:	ee13 2a10 	vmov	r2, s6
9001b888:	eeb0 3a67 	vmov.f32	s6, s15
9001b88c:	fb92 fcf3 	sdiv	ip, r2, r3
9001b890:	9b00      	ldr	r3, [sp, #0]
9001b892:	3b01      	subs	r3, #1
9001b894:	9300      	str	r3, [sp, #0]
9001b896:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b898:	bf08      	it	eq
9001b89a:	465b      	moveq	r3, fp
9001b89c:	e797      	b.n	9001b7ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b89e:	454f      	cmp	r7, r9
9001b8a0:	dabb      	bge.n	9001b81a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b8a2:	fb0c 2606 	mla	r6, ip, r6, r2
9001b8a6:	1436      	asrs	r6, r6, #16
9001b8a8:	d4b7      	bmi.n	9001b81a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b8aa:	4546      	cmp	r6, r8
9001b8ac:	dab5      	bge.n	9001b81a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b8ae:	461e      	mov	r6, r3
9001b8b0:	46a0      	mov	r8, r4
9001b8b2:	2e00      	cmp	r6, #0
9001b8b4:	ddb8      	ble.n	9001b828 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b8b6:	1417      	asrs	r7, r2, #16
9001b8b8:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b8bc:	9901      	ldr	r1, [sp, #4]
9001b8be:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b8c2:	4462      	add	r2, ip
9001b8c4:	4470      	add	r0, lr
9001b8c6:	fb0a 1707 	mla	r7, sl, r7, r1
9001b8ca:	9902      	ldr	r1, [sp, #8]
9001b8cc:	3e01      	subs	r6, #1
9001b8ce:	f817 7009 	ldrb.w	r7, [r7, r9]
9001b8d2:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b8d6:	f828 7b02 	strh.w	r7, [r8], #2
9001b8da:	e7ea      	b.n	9001b8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001b8dc:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b8e0:	d417      	bmi.n	9001b912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b8e2:	68ae      	ldr	r6, [r5, #8]
9001b8e4:	454e      	cmp	r6, r9
9001b8e6:	dd14      	ble.n	9001b912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b8e8:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b8ec:	d411      	bmi.n	9001b912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b8ee:	68ef      	ldr	r7, [r5, #12]
9001b8f0:	4557      	cmp	r7, sl
9001b8f2:	dd0e      	ble.n	9001b912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b8f4:	9f01      	ldr	r7, [sp, #4]
9001b8f6:	b236      	sxth	r6, r6
9001b8f8:	f06f 0101 	mvn.w	r1, #1
9001b8fc:	fb0a 7606 	mla	r6, sl, r6, r7
9001b900:	9f02      	ldr	r7, [sp, #8]
9001b902:	f816 6009 	ldrb.w	r6, [r6, r9]
9001b906:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b90a:	fb01 f608 	mul.w	r6, r1, r8
9001b90e:	9903      	ldr	r1, [sp, #12]
9001b910:	538f      	strh	r7, [r1, r6]
9001b912:	4470      	add	r0, lr
9001b914:	4462      	add	r2, ip
9001b916:	f108 38ff 	add.w	r8, r8, #4294967295
9001b91a:	e782      	b.n	9001b822 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b91c:	b005      	add	sp, #20
9001b91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b926:	b087      	sub	sp, #28
9001b928:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b92a:	9205      	str	r2, [sp, #20]
9001b92c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b930:	9102      	str	r1, [sp, #8]
9001b932:	9203      	str	r2, [sp, #12]
9001b934:	6861      	ldr	r1, [r4, #4]
9001b936:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b93a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b93e:	fb01 2000 	mla	r0, r1, r0, r2
9001b942:	6822      	ldr	r2, [r4, #0]
9001b944:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001b948:	9200      	str	r2, [sp, #0]
9001b94a:	f8dc 2000 	ldr.w	r2, [ip]
9001b94e:	9204      	str	r2, [sp, #16]
9001b950:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b954:	3204      	adds	r2, #4
9001b956:	9201      	str	r2, [sp, #4]
9001b958:	9a03      	ldr	r2, [sp, #12]
9001b95a:	43d5      	mvns	r5, r2
9001b95c:	b2ed      	uxtb	r5, r5
9001b95e:	9a02      	ldr	r2, [sp, #8]
9001b960:	2a00      	cmp	r2, #0
9001b962:	dc03      	bgt.n	9001b96c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001b964:	9a05      	ldr	r2, [sp, #20]
9001b966:	2a00      	cmp	r2, #0
9001b968:	f340 812c 	ble.w	9001bbc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b96c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b96e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001b972:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b976:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b978:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001b97c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b980:	2b00      	cmp	r3, #0
9001b982:	dd10      	ble.n	9001b9a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b984:	140c      	asrs	r4, r1, #16
9001b986:	d405      	bmi.n	9001b994 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b988:	4574      	cmp	r4, lr
9001b98a:	da03      	bge.n	9001b994 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b98c:	1414      	asrs	r4, r2, #16
9001b98e:	d401      	bmi.n	9001b994 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b990:	42bc      	cmp	r4, r7
9001b992:	db09      	blt.n	9001b9a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001b994:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b996:	3b01      	subs	r3, #1
9001b998:	9800      	ldr	r0, [sp, #0]
9001b99a:	4421      	add	r1, r4
9001b99c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b99e:	3002      	adds	r0, #2
9001b9a0:	4422      	add	r2, r4
9001b9a2:	9000      	str	r0, [sp, #0]
9001b9a4:	e7ec      	b.n	9001b980 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b9a6:	d071      	beq.n	9001ba8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001b9a8:	1e5c      	subs	r4, r3, #1
9001b9aa:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b9ac:	fb06 1604 	mla	r6, r6, r4, r1
9001b9b0:	1436      	asrs	r6, r6, #16
9001b9b2:	d45d      	bmi.n	9001ba70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b9b4:	4576      	cmp	r6, lr
9001b9b6:	da5b      	bge.n	9001ba70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b9b8:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001b9ba:	fb06 2404 	mla	r4, r6, r4, r2
9001b9be:	1424      	asrs	r4, r4, #16
9001b9c0:	d456      	bmi.n	9001ba70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b9c2:	42bc      	cmp	r4, r7
9001b9c4:	da54      	bge.n	9001ba70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b9c6:	4698      	mov	r8, r3
9001b9c8:	f8dd 9000 	ldr.w	r9, [sp]
9001b9cc:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001b9d0:	f1b8 0f00 	cmp.w	r8, #0
9001b9d4:	dd54      	ble.n	9001ba80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b9d6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b9da:	1414      	asrs	r4, r2, #16
9001b9dc:	9804      	ldr	r0, [sp, #16]
9001b9de:	140e      	asrs	r6, r1, #16
9001b9e0:	f108 38ff 	add.w	r8, r8, #4294967295
9001b9e4:	fb07 0404 	mla	r4, r7, r4, r0
9001b9e8:	9801      	ldr	r0, [sp, #4]
9001b9ea:	f814 e006 	ldrb.w	lr, [r4, r6]
9001b9ee:	f8b9 4000 	ldrh.w	r4, [r9]
9001b9f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b9f6:	1227      	asrs	r7, r4, #8
9001b9f8:	eb00 0b0e 	add.w	fp, r0, lr
9001b9fc:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001ba00:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ba04:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ba06:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001ba0a:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ba0e:	4401      	add	r1, r0
9001ba10:	fb16 f60a 	smulbb	r6, r6, sl
9001ba14:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ba16:	fb1b fb0a 	smulbb	fp, fp, sl
9001ba1a:	fb07 6705 	mla	r7, r7, r5, r6
9001ba1e:	10e6      	asrs	r6, r4, #3
9001ba20:	00e4      	lsls	r4, r4, #3
9001ba22:	4402      	add	r2, r0
9001ba24:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ba28:	b2bf      	uxth	r7, r7
9001ba2a:	b2e4      	uxtb	r4, r4
9001ba2c:	fb06 b605 	mla	r6, r6, r5, fp
9001ba30:	fb14 f405 	smulbb	r4, r4, r5
9001ba34:	b2b6      	uxth	r6, r6
9001ba36:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001ba3a:	1c7c      	adds	r4, r7, #1
9001ba3c:	f106 0b01 	add.w	fp, r6, #1
9001ba40:	fa1f fe8e 	uxth.w	lr, lr
9001ba44:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001ba48:	f10e 0401 	add.w	r4, lr, #1
9001ba4c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001ba50:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ba54:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001ba58:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ba5c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ba60:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ba64:	4327      	orrs	r7, r4
9001ba66:	ea47 070b 	orr.w	r7, r7, fp
9001ba6a:	f829 7b02 	strh.w	r7, [r9], #2
9001ba6e:	e7af      	b.n	9001b9d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ba70:	f04f 0e00 	mov.w	lr, #0
9001ba74:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001ba78:	eb03 040e 	add.w	r4, r3, lr
9001ba7c:	2c00      	cmp	r4, #0
9001ba7e:	dc43      	bgt.n	9001bb08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ba80:	9a00      	ldr	r2, [sp, #0]
9001ba82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ba86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ba8a:	9300      	str	r3, [sp, #0]
9001ba8c:	9b02      	ldr	r3, [sp, #8]
9001ba8e:	2b00      	cmp	r3, #0
9001ba90:	f340 8098 	ble.w	9001bbc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ba94:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ba98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba9a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ba9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001baa2:	eef0 6a62 	vmov.f32	s13, s5
9001baa6:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001baaa:	ee31 1a05 	vadd.f32	s2, s2, s10
9001baae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bab2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001bab6:	eef0 6a43 	vmov.f32	s13, s6
9001baba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001babe:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001bac2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bac6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001baca:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bace:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bad2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bada:	ee12 2a90 	vmov	r2, s5
9001bade:	eef0 2a47 	vmov.f32	s5, s14
9001bae2:	fb92 f3f3 	sdiv	r3, r2, r3
9001bae6:	ee13 2a10 	vmov	r2, s6
9001baea:	9313      	str	r3, [sp, #76]	@ 0x4c
9001baec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001baee:	eeb0 3a67 	vmov.f32	s6, s15
9001baf2:	fb92 f3f3 	sdiv	r3, r2, r3
9001baf6:	9314      	str	r3, [sp, #80]	@ 0x50
9001baf8:	9b02      	ldr	r3, [sp, #8]
9001bafa:	9a05      	ldr	r2, [sp, #20]
9001bafc:	3b01      	subs	r3, #1
9001bafe:	9302      	str	r3, [sp, #8]
9001bb00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bb02:	bf08      	it	eq
9001bb04:	4613      	moveq	r3, r2
9001bb06:	e72a      	b.n	9001b95e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bb08:	140f      	asrs	r7, r1, #16
9001bb0a:	d454      	bmi.n	9001bbb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bb0c:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001bb10:	42be      	cmp	r6, r7
9001bb12:	dd50      	ble.n	9001bbb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bb14:	ea5f 4822 	movs.w	r8, r2, asr #16
9001bb18:	d44d      	bmi.n	9001bbb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bb1a:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001bb1e:	4544      	cmp	r4, r8
9001bb20:	dd49      	ble.n	9001bbb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bb22:	9c04      	ldr	r4, [sp, #16]
9001bb24:	b236      	sxth	r6, r6
9001bb26:	f06f 0001 	mvn.w	r0, #1
9001bb2a:	fb08 4606 	mla	r6, r8, r6, r4
9001bb2e:	9c01      	ldr	r4, [sp, #4]
9001bb30:	fb00 fa0e 	mul.w	sl, r0, lr
9001bb34:	9800      	ldr	r0, [sp, #0]
9001bb36:	f816 8007 	ldrb.w	r8, [r6, r7]
9001bb3a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001bb3e:	eb04 0b08 	add.w	fp, r4, r8
9001bb42:	f830 400a 	ldrh.w	r4, [r0, sl]
9001bb46:	9801      	ldr	r0, [sp, #4]
9001bb48:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001bb4c:	1227      	asrs	r7, r4, #8
9001bb4e:	f89b b001 	ldrb.w	fp, [fp, #1]
9001bb52:	fb16 f609 	smulbb	r6, r6, r9
9001bb56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bb5a:	f810 8008 	ldrb.w	r8, [r0, r8]
9001bb5e:	fb1b fb09 	smulbb	fp, fp, r9
9001bb62:	fb07 6705 	mla	r7, r7, r5, r6
9001bb66:	10e6      	asrs	r6, r4, #3
9001bb68:	00e4      	lsls	r4, r4, #3
9001bb6a:	9800      	ldr	r0, [sp, #0]
9001bb6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bb70:	b2bf      	uxth	r7, r7
9001bb72:	b2e4      	uxtb	r4, r4
9001bb74:	fb06 b605 	mla	r6, r6, r5, fp
9001bb78:	fb14 f405 	smulbb	r4, r4, r5
9001bb7c:	b2b6      	uxth	r6, r6
9001bb7e:	fb08 4809 	mla	r8, r8, r9, r4
9001bb82:	1c7c      	adds	r4, r7, #1
9001bb84:	f106 0b01 	add.w	fp, r6, #1
9001bb88:	fa1f f888 	uxth.w	r8, r8
9001bb8c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001bb90:	f108 0401 	add.w	r4, r8, #1
9001bb94:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001bb98:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001bb9c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001bba0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001bba4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001bba8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001bbac:	4327      	orrs	r7, r4
9001bbae:	ea47 070b 	orr.w	r7, r7, fp
9001bbb2:	f820 700a 	strh.w	r7, [r0, sl]
9001bbb6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bbb8:	f10e 3eff 	add.w	lr, lr, #4294967295
9001bbbc:	4401      	add	r1, r0
9001bbbe:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001bbc0:	4402      	add	r2, r0
9001bbc2:	e759      	b.n	9001ba78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001bbc4:	b007      	add	sp, #28
9001bbc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001bbcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bbcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bbd0:	b085      	sub	sp, #20
9001bbd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bbd6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001bbd8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001bbda:	9203      	str	r2, [sp, #12]
9001bbdc:	6870      	ldr	r0, [r6, #4]
9001bbde:	686f      	ldr	r7, [r5, #4]
9001bbe0:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001bbe4:	3704      	adds	r7, #4
9001bbe6:	9101      	str	r1, [sp, #4]
9001bbe8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bbec:	fb00 2404 	mla	r4, r0, r4, r2
9001bbf0:	6832      	ldr	r2, [r6, #0]
9001bbf2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbf6:	682a      	ldr	r2, [r5, #0]
9001bbf8:	9202      	str	r2, [sp, #8]
9001bbfa:	9a01      	ldr	r2, [sp, #4]
9001bbfc:	2a00      	cmp	r2, #0
9001bbfe:	dc03      	bgt.n	9001bc08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bc00:	9a03      	ldr	r2, [sp, #12]
9001bc02:	2a00      	cmp	r2, #0
9001bc04:	f340 80cc 	ble.w	9001bda0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001bc08:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bc0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bc0e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001bc12:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bc14:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001bc18:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bc1c:	2b00      	cmp	r3, #0
9001bc1e:	dd0d      	ble.n	9001bc3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bc20:	1406      	asrs	r6, r0, #16
9001bc22:	d405      	bmi.n	9001bc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001bc24:	454e      	cmp	r6, r9
9001bc26:	da03      	bge.n	9001bc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001bc28:	1416      	asrs	r6, r2, #16
9001bc2a:	d401      	bmi.n	9001bc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001bc2c:	4546      	cmp	r6, r8
9001bc2e:	db06      	blt.n	9001bc3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bc30:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001bc32:	4460      	add	r0, ip
9001bc34:	3b01      	subs	r3, #1
9001bc36:	3402      	adds	r4, #2
9001bc38:	4432      	add	r2, r6
9001bc3a:	e7ef      	b.n	9001bc1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001bc3c:	d00f      	beq.n	9001bc5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001bc3e:	1e5e      	subs	r6, r3, #1
9001bc40:	fb0c 0e06 	mla	lr, ip, r6, r0
9001bc44:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001bc48:	d543      	bpl.n	9001bcd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001bc4a:	4698      	mov	r8, r3
9001bc4c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001bc50:	f1b8 0f00 	cmp.w	r8, #0
9001bc54:	dc71      	bgt.n	9001bd3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001bc56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc5e:	9b01      	ldr	r3, [sp, #4]
9001bc60:	2b00      	cmp	r3, #0
9001bc62:	f340 809d 	ble.w	9001bda0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001bc66:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bc6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc70:	eeb0 6a62 	vmov.f32	s12, s5
9001bc74:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc78:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc80:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bc84:	eeb0 6a43 	vmov.f32	s12, s6
9001bc88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc8c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bc90:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc94:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc98:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bca0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bca4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bca8:	ee12 2a90 	vmov	r2, s5
9001bcac:	eef0 2a47 	vmov.f32	s5, s14
9001bcb0:	fb92 fcf3 	sdiv	ip, r2, r3
9001bcb4:	ee13 2a10 	vmov	r2, s6
9001bcb8:	eeb0 3a67 	vmov.f32	s6, s15
9001bcbc:	fb92 f3f3 	sdiv	r3, r2, r3
9001bcc0:	9312      	str	r3, [sp, #72]	@ 0x48
9001bcc2:	9b01      	ldr	r3, [sp, #4]
9001bcc4:	9a03      	ldr	r2, [sp, #12]
9001bcc6:	3b01      	subs	r3, #1
9001bcc8:	9301      	str	r3, [sp, #4]
9001bcca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bccc:	bf08      	it	eq
9001bcce:	4613      	moveq	r3, r2
9001bcd0:	e793      	b.n	9001bbfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001bcd2:	45ce      	cmp	lr, r9
9001bcd4:	dab9      	bge.n	9001bc4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bcd6:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001bcd8:	fb01 2606 	mla	r6, r1, r6, r2
9001bcdc:	1436      	asrs	r6, r6, #16
9001bcde:	d4b4      	bmi.n	9001bc4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bce0:	4546      	cmp	r6, r8
9001bce2:	dab2      	bge.n	9001bc4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bce4:	4698      	mov	r8, r3
9001bce6:	46a2      	mov	sl, r4
9001bce8:	f1b8 0f00 	cmp.w	r8, #0
9001bcec:	ddb3      	ble.n	9001bc56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001bcee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bcf2:	1416      	asrs	r6, r2, #16
9001bcf4:	9902      	ldr	r1, [sp, #8]
9001bcf6:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001bcfa:	f108 38ff 	add.w	r8, r8, #4294967295
9001bcfe:	4460      	add	r0, ip
9001bd00:	fb09 1606 	mla	r6, r9, r6, r1
9001bd04:	4928      	ldr	r1, [pc, #160]	@ (9001bda8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001bd06:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001bd0a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001bd0e:	eb07 0b0e 	add.w	fp, r7, lr
9001bd12:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001bd16:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001bd1a:	00f6      	lsls	r6, r6, #3
9001bd1c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001bd20:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001bd22:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bd26:	440a      	add	r2, r1
9001bd28:	ea49 0606 	orr.w	r6, r9, r6
9001bd2c:	f817 900e 	ldrb.w	r9, [r7, lr]
9001bd30:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001bd34:	f82a 6b02 	strh.w	r6, [sl], #2
9001bd38:	e7d6      	b.n	9001bce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001bd3a:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bd3e:	d429      	bmi.n	9001bd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001bd40:	68ae      	ldr	r6, [r5, #8]
9001bd42:	454e      	cmp	r6, r9
9001bd44:	dd26      	ble.n	9001bd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001bd46:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001bd4a:	d423      	bmi.n	9001bd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001bd4c:	68e9      	ldr	r1, [r5, #12]
9001bd4e:	4559      	cmp	r1, fp
9001bd50:	dd20      	ble.n	9001bd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001bd52:	fa0f fe86 	sxth.w	lr, r6
9001bd56:	9902      	ldr	r1, [sp, #8]
9001bd58:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001bd5c:	f06f 0101 	mvn.w	r1, #1
9001bd60:	f81e e009 	ldrb.w	lr, [lr, r9]
9001bd64:	fb01 f908 	mul.w	r9, r1, r8
9001bd68:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001bd6c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001bd70:	eb07 060e 	add.w	r6, r7, lr
9001bd74:	f896 b002 	ldrb.w	fp, [r6, #2]
9001bd78:	7876      	ldrb	r6, [r6, #1]
9001bd7a:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001bd7e:	00f6      	lsls	r6, r6, #3
9001bd80:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bd84:	ea4b 0606 	orr.w	r6, fp, r6
9001bd88:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001bd8c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001bd90:	f82a 6009 	strh.w	r6, [sl, r9]
9001bd94:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001bd96:	4460      	add	r0, ip
9001bd98:	f108 38ff 	add.w	r8, r8, #4294967295
9001bd9c:	440a      	add	r2, r1
9001bd9e:	e757      	b.n	9001bc50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bda0:	b005      	add	sp, #20
9001bda2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bda6:	bf00      	nop
9001bda8:	fffff800 	.word	0xfffff800

9001bdac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bdac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bdb0:	b087      	sub	sp, #28
9001bdb2:	468b      	mov	fp, r1
9001bdb4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bdb8:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001bdba:	9204      	str	r2, [sp, #16]
9001bdbc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001bdc0:	6841      	ldr	r1, [r0, #4]
9001bdc2:	9205      	str	r2, [sp, #20]
9001bdc4:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001bdc8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001bdcc:	fb01 2404 	mla	r4, r1, r4, r2
9001bdd0:	6802      	ldr	r2, [r0, #0]
9001bdd2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bdd6:	f8dc 2000 	ldr.w	r2, [ip]
9001bdda:	9201      	str	r2, [sp, #4]
9001bddc:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001bde0:	3204      	adds	r2, #4
9001bde2:	9202      	str	r2, [sp, #8]
9001bde4:	f1bb 0f00 	cmp.w	fp, #0
9001bde8:	dc03      	bgt.n	9001bdf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001bdea:	9a04      	ldr	r2, [sp, #16]
9001bdec:	2a00      	cmp	r2, #0
9001bdee:	f340 8138 	ble.w	9001c062 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001bdf2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001bdf4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001bdf8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001bdfc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bdfe:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001be02:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001be06:	2b00      	cmp	r3, #0
9001be08:	dd0e      	ble.n	9001be28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001be0a:	1402      	asrs	r2, r0, #16
9001be0c:	d405      	bmi.n	9001be1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001be0e:	42ba      	cmp	r2, r7
9001be10:	da03      	bge.n	9001be1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001be12:	140a      	asrs	r2, r1, #16
9001be14:	d401      	bmi.n	9001be1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001be16:	42b2      	cmp	r2, r6
9001be18:	db07      	blt.n	9001be2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001be1a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001be1c:	3b01      	subs	r3, #1
9001be1e:	3402      	adds	r4, #2
9001be20:	4410      	add	r0, r2
9001be22:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001be24:	4411      	add	r1, r2
9001be26:	e7ee      	b.n	9001be06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001be28:	d019      	beq.n	9001be5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001be2a:	1e5a      	subs	r2, r3, #1
9001be2c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001be2e:	fb05 0502 	mla	r5, r5, r2, r0
9001be32:	142d      	asrs	r5, r5, #16
9001be34:	d409      	bmi.n	9001be4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001be36:	42bd      	cmp	r5, r7
9001be38:	da07      	bge.n	9001be4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001be3a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001be3c:	fb05 1202 	mla	r2, r5, r2, r1
9001be40:	1412      	asrs	r2, r2, #16
9001be42:	d402      	bmi.n	9001be4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001be44:	42b2      	cmp	r2, r6
9001be46:	f2c0 80ac 	blt.w	9001bfa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001be4a:	f04f 0e00 	mov.w	lr, #0
9001be4e:	eb03 020e 	add.w	r2, r3, lr
9001be52:	2a00      	cmp	r2, #0
9001be54:	dc3e      	bgt.n	9001bed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001be56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001be5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001be5e:	f1bb 0f00 	cmp.w	fp, #0
9001be62:	f340 80fe 	ble.w	9001c062 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001be66:	ee30 0a04 	vadd.f32	s0, s0, s8
9001be6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001be6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001be70:	f1bb 0b01 	subs.w	fp, fp, #1
9001be74:	eeb0 6a62 	vmov.f32	s12, s5
9001be78:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001be7c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001be80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001be84:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001be88:	eeb0 6a43 	vmov.f32	s12, s6
9001be8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001be90:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001be94:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001be98:	ee61 7a27 	vmul.f32	s15, s2, s15
9001be9c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bea0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bea4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bea8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001beac:	ee12 2a90 	vmov	r2, s5
9001beb0:	eef0 2a47 	vmov.f32	s5, s14
9001beb4:	fb92 f3f3 	sdiv	r3, r2, r3
9001beb8:	ee13 2a10 	vmov	r2, s6
9001bebc:	9313      	str	r3, [sp, #76]	@ 0x4c
9001bebe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bec0:	eeb0 3a67 	vmov.f32	s6, s15
9001bec4:	fb92 f3f3 	sdiv	r3, r2, r3
9001bec8:	9a04      	ldr	r2, [sp, #16]
9001beca:	9314      	str	r3, [sp, #80]	@ 0x50
9001becc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bece:	bf08      	it	eq
9001bed0:	4613      	moveq	r3, r2
9001bed2:	e787      	b.n	9001bde4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001bed4:	1406      	asrs	r6, r0, #16
9001bed6:	d45d      	bmi.n	9001bf94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001bed8:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001bedc:	42b5      	cmp	r5, r6
9001bede:	dd59      	ble.n	9001bf94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001bee0:	140f      	asrs	r7, r1, #16
9001bee2:	d457      	bmi.n	9001bf94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001bee4:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001bee8:	42ba      	cmp	r2, r7
9001beea:	dd53      	ble.n	9001bf94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001beec:	9a01      	ldr	r2, [sp, #4]
9001beee:	b22d      	sxth	r5, r5
9001bef0:	fb07 2505 	mla	r5, r7, r5, r2
9001bef4:	5daa      	ldrb	r2, [r5, r6]
9001bef6:	9d02      	ldr	r5, [sp, #8]
9001bef8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001befc:	0e2e      	lsrs	r6, r5, #24
9001befe:	d049      	beq.n	9001bf94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001bf00:	f06f 0201 	mvn.w	r2, #1
9001bf04:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001bf08:	fb02 f20e 	mul.w	r2, r2, lr
9001bf0c:	f834 8002 	ldrh.w	r8, [r4, r2]
9001bf10:	9203      	str	r2, [sp, #12]
9001bf12:	9a05      	ldr	r2, [sp, #20]
9001bf14:	ea4f 2728 	mov.w	r7, r8, asr #8
9001bf18:	4356      	muls	r6, r2
9001bf1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bf1e:	1c72      	adds	r2, r6, #1
9001bf20:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001bf24:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bf28:	b2ed      	uxtb	r5, r5
9001bf2a:	1212      	asrs	r2, r2, #8
9001bf2c:	fa1f f982 	uxth.w	r9, r2
9001bf30:	43d2      	mvns	r2, r2
9001bf32:	fb16 f609 	smulbb	r6, r6, r9
9001bf36:	b2d2      	uxtb	r2, r2
9001bf38:	fb15 f509 	smulbb	r5, r5, r9
9001bf3c:	fb07 6702 	mla	r7, r7, r2, r6
9001bf40:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001bf44:	fb1a fa09 	smulbb	sl, sl, r9
9001bf48:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bf4c:	b2bf      	uxth	r7, r7
9001bf4e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bf52:	fa5f f888 	uxtb.w	r8, r8
9001bf56:	fb06 a602 	mla	r6, r6, r2, sl
9001bf5a:	fb08 5502 	mla	r5, r8, r2, r5
9001bf5e:	1c7a      	adds	r2, r7, #1
9001bf60:	b2b6      	uxth	r6, r6
9001bf62:	b2ad      	uxth	r5, r5
9001bf64:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bf68:	9a03      	ldr	r2, [sp, #12]
9001bf6a:	f105 0a01 	add.w	sl, r5, #1
9001bf6e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001bf72:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bf76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bf7a:	ea4a 0707 	orr.w	r7, sl, r7
9001bf7e:	f106 0a01 	add.w	sl, r6, #1
9001bf82:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bf86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bf8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bf8e:	ea47 070a 	orr.w	r7, r7, sl
9001bf92:	52a7      	strh	r7, [r4, r2]
9001bf94:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bf96:	f10e 3eff 	add.w	lr, lr, #4294967295
9001bf9a:	4410      	add	r0, r2
9001bf9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bf9e:	4411      	add	r1, r2
9001bfa0:	e755      	b.n	9001be4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001bfa2:	f04f 0800 	mov.w	r8, #0
9001bfa6:	eba3 0208 	sub.w	r2, r3, r8
9001bfaa:	2a00      	cmp	r2, #0
9001bfac:	f77f af53 	ble.w	9001be56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001bfb0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001bfb4:	140a      	asrs	r2, r1, #16
9001bfb6:	9f01      	ldr	r7, [sp, #4]
9001bfb8:	1405      	asrs	r5, r0, #16
9001bfba:	fb06 7202 	mla	r2, r6, r2, r7
9001bfbe:	5d52      	ldrb	r2, [r2, r5]
9001bfc0:	9d02      	ldr	r5, [sp, #8]
9001bfc2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001bfc6:	0e2e      	lsrs	r6, r5, #24
9001bfc8:	d044      	beq.n	9001c054 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001bfca:	9a05      	ldr	r2, [sp, #20]
9001bfcc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001bfd0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001bfd4:	4356      	muls	r6, r2
9001bfd6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001bfda:	1c72      	adds	r2, r6, #1
9001bfdc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bfe0:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001bfe4:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bfe8:	b2ed      	uxtb	r5, r5
9001bfea:	1212      	asrs	r2, r2, #8
9001bfec:	fa1f f982 	uxth.w	r9, r2
9001bff0:	43d2      	mvns	r2, r2
9001bff2:	fb16 f609 	smulbb	r6, r6, r9
9001bff6:	b2d2      	uxtb	r2, r2
9001bff8:	fb15 f509 	smulbb	r5, r5, r9
9001bffc:	fb07 6702 	mla	r7, r7, r2, r6
9001c000:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c004:	fb1a fa09 	smulbb	sl, sl, r9
9001c008:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c00c:	b2bf      	uxth	r7, r7
9001c00e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c012:	fa5f fe8e 	uxtb.w	lr, lr
9001c016:	fb06 a602 	mla	r6, r6, r2, sl
9001c01a:	fb0e 5502 	mla	r5, lr, r2, r5
9001c01e:	1c7a      	adds	r2, r7, #1
9001c020:	b2b6      	uxth	r6, r6
9001c022:	b2ad      	uxth	r5, r5
9001c024:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c028:	f105 0a01 	add.w	sl, r5, #1
9001c02c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c030:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c034:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c038:	ea4a 0707 	orr.w	r7, sl, r7
9001c03c:	f106 0a01 	add.w	sl, r6, #1
9001c040:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c044:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c048:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c04c:	ea47 070a 	orr.w	r7, r7, sl
9001c050:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c054:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c056:	f108 0801 	add.w	r8, r8, #1
9001c05a:	4410      	add	r0, r2
9001c05c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c05e:	4411      	add	r1, r2
9001c060:	e7a1      	b.n	9001bfa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001c062:	b007      	add	sp, #28
9001c064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c06c:	b085      	sub	sp, #20
9001c06e:	468b      	mov	fp, r1
9001c070:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c074:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c076:	9203      	str	r2, [sp, #12]
9001c078:	6841      	ldr	r1, [r0, #4]
9001c07a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001c07e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c082:	fb01 2404 	mla	r4, r1, r4, r2
9001c086:	6802      	ldr	r2, [r0, #0]
9001c088:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c08c:	f8de 2000 	ldr.w	r2, [lr]
9001c090:	9200      	str	r2, [sp, #0]
9001c092:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c096:	3204      	adds	r2, #4
9001c098:	9201      	str	r2, [sp, #4]
9001c09a:	f1bb 0f00 	cmp.w	fp, #0
9001c09e:	dc03      	bgt.n	9001c0a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c0a0:	9a03      	ldr	r2, [sp, #12]
9001c0a2:	2a00      	cmp	r2, #0
9001c0a4:	f340 8153 	ble.w	9001c34e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c0a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c0aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c0ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c0b2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c0b4:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c0b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c0bc:	2b00      	cmp	r3, #0
9001c0be:	dd0e      	ble.n	9001c0de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c0c0:	1408      	asrs	r0, r1, #16
9001c0c2:	d405      	bmi.n	9001c0d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c0c4:	42b8      	cmp	r0, r7
9001c0c6:	da03      	bge.n	9001c0d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c0c8:	1410      	asrs	r0, r2, #16
9001c0ca:	d401      	bmi.n	9001c0d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c0cc:	42b0      	cmp	r0, r6
9001c0ce:	db07      	blt.n	9001c0e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c0d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c0d2:	3b01      	subs	r3, #1
9001c0d4:	3402      	adds	r4, #2
9001c0d6:	4401      	add	r1, r0
9001c0d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c0da:	4402      	add	r2, r0
9001c0dc:	e7ee      	b.n	9001c0bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c0de:	d017      	beq.n	9001c110 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c0e0:	1e58      	subs	r0, r3, #1
9001c0e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c0e4:	fb05 1500 	mla	r5, r5, r0, r1
9001c0e8:	142d      	asrs	r5, r5, #16
9001c0ea:	d409      	bmi.n	9001c100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c0ec:	42bd      	cmp	r5, r7
9001c0ee:	da07      	bge.n	9001c100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c0f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c0f2:	fb05 2000 	mla	r0, r5, r0, r2
9001c0f6:	1400      	asrs	r0, r0, #16
9001c0f8:	d402      	bmi.n	9001c100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c0fa:	42b0      	cmp	r0, r6
9001c0fc:	f2c0 80bc 	blt.w	9001c278 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001c100:	2600      	movs	r6, #0
9001c102:	1998      	adds	r0, r3, r6
9001c104:	2800      	cmp	r0, #0
9001c106:	dc3e      	bgt.n	9001c186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001c108:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c10c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c110:	f1bb 0f00 	cmp.w	fp, #0
9001c114:	f340 811b 	ble.w	9001c34e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c118:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c11c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c11e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c122:	f1bb 0b01 	subs.w	fp, fp, #1
9001c126:	eeb0 6a62 	vmov.f32	s12, s5
9001c12a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c12e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c132:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c136:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c13a:	eeb0 6a43 	vmov.f32	s12, s6
9001c13e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c142:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c146:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c14a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c14e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c152:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c156:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c15a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c15e:	ee12 2a90 	vmov	r2, s5
9001c162:	eef0 2a47 	vmov.f32	s5, s14
9001c166:	fb92 f3f3 	sdiv	r3, r2, r3
9001c16a:	ee13 2a10 	vmov	r2, s6
9001c16e:	9311      	str	r3, [sp, #68]	@ 0x44
9001c170:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c172:	eeb0 3a67 	vmov.f32	s6, s15
9001c176:	fb92 f3f3 	sdiv	r3, r2, r3
9001c17a:	9a03      	ldr	r2, [sp, #12]
9001c17c:	9312      	str	r3, [sp, #72]	@ 0x48
9001c17e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c180:	bf08      	it	eq
9001c182:	4613      	moveq	r3, r2
9001c184:	e789      	b.n	9001c09a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c186:	140f      	asrs	r7, r1, #16
9001c188:	d426      	bmi.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c18a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c18e:	42bd      	cmp	r5, r7
9001c190:	dd22      	ble.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c192:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c196:	d41f      	bmi.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c198:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c19c:	4560      	cmp	r0, ip
9001c19e:	dd1b      	ble.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c1a0:	9800      	ldr	r0, [sp, #0]
9001c1a2:	b22d      	sxth	r5, r5
9001c1a4:	fb0c 0505 	mla	r5, ip, r5, r0
9001c1a8:	5de8      	ldrb	r0, [r5, r7]
9001c1aa:	9d01      	ldr	r5, [sp, #4]
9001c1ac:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001c1b0:	0e07      	lsrs	r7, r0, #24
9001c1b2:	2fff      	cmp	r7, #255	@ 0xff
9001c1b4:	d116      	bne.n	9001c1e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c1b6:	f06f 0501 	mvn.w	r5, #1
9001c1ba:	fb05 f706 	mul.w	r7, r5, r6
9001c1be:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001c1c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c1c6:	0945      	lsrs	r5, r0, #5
9001c1c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c1cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c1d0:	ea4c 0505 	orr.w	r5, ip, r5
9001c1d4:	4305      	orrs	r5, r0
9001c1d6:	53e5      	strh	r5, [r4, r7]
9001c1d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c1da:	3e01      	subs	r6, #1
9001c1dc:	4401      	add	r1, r0
9001c1de:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c1e0:	4402      	add	r2, r0
9001c1e2:	e78e      	b.n	9001c102 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c1e4:	b2fd      	uxtb	r5, r7
9001c1e6:	2f00      	cmp	r7, #0
9001c1e8:	d0f6      	beq.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c1ea:	f06f 0701 	mvn.w	r7, #1
9001c1ee:	fa1f f985 	uxth.w	r9, r5
9001c1f2:	43ed      	mvns	r5, r5
9001c1f4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c1f8:	4377      	muls	r7, r6
9001c1fa:	fb1a fa09 	smulbb	sl, sl, r9
9001c1fe:	b2ed      	uxtb	r5, r5
9001c200:	f834 8007 	ldrh.w	r8, [r4, r7]
9001c204:	9702      	str	r7, [sp, #8]
9001c206:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c20a:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c20e:	fb17 f709 	smulbb	r7, r7, r9
9001c212:	b2c0      	uxtb	r0, r0
9001c214:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c218:	fb10 f009 	smulbb	r0, r0, r9
9001c21c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c220:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001c224:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c228:	fa1f fc8c 	uxth.w	ip, ip
9001c22c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c230:	fa5f f888 	uxtb.w	r8, r8
9001c234:	fb07 a705 	mla	r7, r7, r5, sl
9001c238:	fb08 0005 	mla	r0, r8, r5, r0
9001c23c:	f10c 0501 	add.w	r5, ip, #1
9001c240:	b2bf      	uxth	r7, r7
9001c242:	b280      	uxth	r0, r0
9001c244:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c248:	f100 0a01 	add.w	sl, r0, #1
9001c24c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c250:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c254:	9802      	ldr	r0, [sp, #8]
9001c256:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c25a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c25e:	f107 0a01 	add.w	sl, r7, #1
9001c262:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c266:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c26a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c26e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c272:	f824 c000 	strh.w	ip, [r4, r0]
9001c276:	e7af      	b.n	9001c1d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c278:	f04f 0800 	mov.w	r8, #0
9001c27c:	eba3 0008 	sub.w	r0, r3, r8
9001c280:	2800      	cmp	r0, #0
9001c282:	f77f af41 	ble.w	9001c108 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c286:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c28a:	1410      	asrs	r0, r2, #16
9001c28c:	9f00      	ldr	r7, [sp, #0]
9001c28e:	140d      	asrs	r5, r1, #16
9001c290:	fb06 7000 	mla	r0, r6, r0, r7
9001c294:	5d40      	ldrb	r0, [r0, r5]
9001c296:	9d01      	ldr	r5, [sp, #4]
9001c298:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c29c:	0e2e      	lsrs	r6, r5, #24
9001c29e:	2eff      	cmp	r6, #255	@ 0xff
9001c2a0:	d112      	bne.n	9001c2c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001c2a2:	482c      	ldr	r0, [pc, #176]	@ (9001c354 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001c2a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c2a8:	0968      	lsrs	r0, r5, #5
9001c2aa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c2ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001c2b2:	4330      	orrs	r0, r6
9001c2b4:	4328      	orrs	r0, r5
9001c2b6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001c2ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c2bc:	f108 0801 	add.w	r8, r8, #1
9001c2c0:	4401      	add	r1, r0
9001c2c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c2c4:	4402      	add	r2, r0
9001c2c6:	e7d9      	b.n	9001c27c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c2c8:	b2f0      	uxtb	r0, r6
9001c2ca:	2e00      	cmp	r6, #0
9001c2cc:	d0f5      	beq.n	9001c2ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c2ce:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001c2d2:	fa1f f980 	uxth.w	r9, r0
9001c2d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c2da:	43c0      	mvns	r0, r0
9001c2dc:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c2e0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c2e4:	fb16 f609 	smulbb	r6, r6, r9
9001c2e8:	b2c0      	uxtb	r0, r0
9001c2ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c2ee:	b2ed      	uxtb	r5, r5
9001c2f0:	fb1a fa09 	smulbb	sl, sl, r9
9001c2f4:	fb07 6700 	mla	r7, r7, r0, r6
9001c2f8:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c2fc:	fb15 f509 	smulbb	r5, r5, r9
9001c300:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c304:	b2bf      	uxth	r7, r7
9001c306:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c30a:	fa5f fc8c 	uxtb.w	ip, ip
9001c30e:	fb06 a600 	mla	r6, r6, r0, sl
9001c312:	fb0c 5500 	mla	r5, ip, r0, r5
9001c316:	1c78      	adds	r0, r7, #1
9001c318:	b2b6      	uxth	r6, r6
9001c31a:	b2ad      	uxth	r5, r5
9001c31c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c320:	f105 0a01 	add.w	sl, r5, #1
9001c324:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c328:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c32c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c330:	ea4a 0707 	orr.w	r7, sl, r7
9001c334:	f106 0a01 	add.w	sl, r6, #1
9001c338:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c33c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c340:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c344:	ea47 070a 	orr.w	r7, r7, sl
9001c348:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c34c:	e7b5      	b.n	9001c2ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c34e:	b005      	add	sp, #20
9001c350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c354:	fffff800 	.word	0xfffff800

9001c358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c35c:	b087      	sub	sp, #28
9001c35e:	468b      	mov	fp, r1
9001c360:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c364:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001c366:	9204      	str	r2, [sp, #16]
9001c368:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c36c:	6861      	ldr	r1, [r4, #4]
9001c36e:	9205      	str	r2, [sp, #20]
9001c370:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001c374:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001c378:	fb01 2000 	mla	r0, r1, r0, r2
9001c37c:	6822      	ldr	r2, [r4, #0]
9001c37e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c382:	f8de 2000 	ldr.w	r2, [lr]
9001c386:	9201      	str	r2, [sp, #4]
9001c388:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c38c:	9202      	str	r2, [sp, #8]
9001c38e:	f1bb 0f00 	cmp.w	fp, #0
9001c392:	dc03      	bgt.n	9001c39c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001c394:	9a04      	ldr	r2, [sp, #16]
9001c396:	2a00      	cmp	r2, #0
9001c398:	f340 8142 	ble.w	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c39c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c39e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c3a2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c3a6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c3a8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c3ac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c3b0:	2b00      	cmp	r3, #0
9001c3b2:	dd0e      	ble.n	9001c3d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001c3b4:	140c      	asrs	r4, r1, #16
9001c3b6:	d405      	bmi.n	9001c3c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c3b8:	42bc      	cmp	r4, r7
9001c3ba:	da03      	bge.n	9001c3c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c3bc:	1414      	asrs	r4, r2, #16
9001c3be:	d401      	bmi.n	9001c3c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c3c0:	42b4      	cmp	r4, r6
9001c3c2:	db07      	blt.n	9001c3d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c3c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c3c6:	3b01      	subs	r3, #1
9001c3c8:	3002      	adds	r0, #2
9001c3ca:	4421      	add	r1, r4
9001c3cc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c3ce:	4422      	add	r2, r4
9001c3d0:	e7ee      	b.n	9001c3b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001c3d2:	d019      	beq.n	9001c408 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c3d4:	1e5c      	subs	r4, r3, #1
9001c3d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c3d8:	fb05 1504 	mla	r5, r5, r4, r1
9001c3dc:	142d      	asrs	r5, r5, #16
9001c3de:	d409      	bmi.n	9001c3f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c3e0:	42bd      	cmp	r5, r7
9001c3e2:	da07      	bge.n	9001c3f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c3e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c3e6:	fb05 2404 	mla	r4, r5, r4, r2
9001c3ea:	1424      	asrs	r4, r4, #16
9001c3ec:	d402      	bmi.n	9001c3f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c3ee:	42b4      	cmp	r4, r6
9001c3f0:	f2c0 80b1 	blt.w	9001c556 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001c3f4:	f04f 0800 	mov.w	r8, #0
9001c3f8:	eb03 0408 	add.w	r4, r3, r8
9001c3fc:	2c00      	cmp	r4, #0
9001c3fe:	dc3e      	bgt.n	9001c47e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001c400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c404:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c408:	f1bb 0f00 	cmp.w	fp, #0
9001c40c:	f340 8108 	ble.w	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c410:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c414:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c416:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c41a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c41e:	eeb0 6a62 	vmov.f32	s12, s5
9001c422:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c426:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c42a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c42e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c432:	eeb0 6a43 	vmov.f32	s12, s6
9001c436:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c43a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c43e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c442:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c446:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c44a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c44e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c452:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c456:	ee12 2a90 	vmov	r2, s5
9001c45a:	eef0 2a47 	vmov.f32	s5, s14
9001c45e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c462:	ee13 2a10 	vmov	r2, s6
9001c466:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c468:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c46a:	eeb0 3a67 	vmov.f32	s6, s15
9001c46e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c472:	9a04      	ldr	r2, [sp, #16]
9001c474:	9314      	str	r3, [sp, #80]	@ 0x50
9001c476:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c478:	bf08      	it	eq
9001c47a:	4613      	moveq	r3, r2
9001c47c:	e787      	b.n	9001c38e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001c47e:	140e      	asrs	r6, r1, #16
9001c480:	d462      	bmi.n	9001c548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c482:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c486:	42b5      	cmp	r5, r6
9001c488:	dd5e      	ble.n	9001c548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c48a:	1417      	asrs	r7, r2, #16
9001c48c:	d45c      	bmi.n	9001c548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c48e:	f8de 400c 	ldr.w	r4, [lr, #12]
9001c492:	42bc      	cmp	r4, r7
9001c494:	dd58      	ble.n	9001c548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c496:	b22d      	sxth	r5, r5
9001c498:	9c02      	ldr	r4, [sp, #8]
9001c49a:	fb07 6505 	mla	r5, r7, r5, r6
9001c49e:	5d66      	ldrb	r6, [r4, r5]
9001c4a0:	2e00      	cmp	r6, #0
9001c4a2:	d051      	beq.n	9001c548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c4a4:	9c01      	ldr	r4, [sp, #4]
9001c4a6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001c4aa:	f06f 0401 	mvn.w	r4, #1
9001c4ae:	fb04 f408 	mul.w	r4, r4, r8
9001c4b2:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001c4b6:	5b05      	ldrh	r5, [r0, r4]
9001c4b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c4bc:	9403      	str	r4, [sp, #12]
9001c4be:	9c05      	ldr	r4, [sp, #20]
9001c4c0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c4c4:	4366      	muls	r6, r4
9001c4c6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c4ca:	1c74      	adds	r4, r6, #1
9001c4cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c4d0:	122e      	asrs	r6, r5, #8
9001c4d2:	1224      	asrs	r4, r4, #8
9001c4d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c4d8:	00ed      	lsls	r5, r5, #3
9001c4da:	b2a7      	uxth	r7, r4
9001c4dc:	43e4      	mvns	r4, r4
9001c4de:	b2ed      	uxtb	r5, r5
9001c4e0:	b2e4      	uxtb	r4, r4
9001c4e2:	fb16 f604 	smulbb	r6, r6, r4
9001c4e6:	fb15 f504 	smulbb	r5, r5, r4
9001c4ea:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c4ee:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001c4f2:	fb1a fa04 	smulbb	sl, sl, r4
9001c4f6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c4fa:	fa1f fc8c 	uxth.w	ip, ip
9001c4fe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c502:	fa5f f989 	uxtb.w	r9, r9
9001c506:	fb06 a607 	mla	r6, r6, r7, sl
9001c50a:	f10c 0401 	add.w	r4, ip, #1
9001c50e:	fb09 5507 	mla	r5, r9, r7, r5
9001c512:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c516:	9c03      	ldr	r4, [sp, #12]
9001c518:	b2ad      	uxth	r5, r5
9001c51a:	b2b6      	uxth	r6, r6
9001c51c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c520:	f105 0a01 	add.w	sl, r5, #1
9001c524:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c528:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c52c:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c530:	f106 0a01 	add.w	sl, r6, #1
9001c534:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c538:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c53c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c540:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c544:	f820 c004 	strh.w	ip, [r0, r4]
9001c548:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c54a:	f108 38ff 	add.w	r8, r8, #4294967295
9001c54e:	4421      	add	r1, r4
9001c550:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c552:	4422      	add	r2, r4
9001c554:	e750      	b.n	9001c3f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c556:	f04f 0900 	mov.w	r9, #0
9001c55a:	eba3 0409 	sub.w	r4, r3, r9
9001c55e:	2c00      	cmp	r4, #0
9001c560:	f77f af4e 	ble.w	9001c400 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c564:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c568:	140d      	asrs	r5, r1, #16
9001c56a:	1414      	asrs	r4, r2, #16
9001c56c:	fb06 5404 	mla	r4, r6, r4, r5
9001c570:	9d02      	ldr	r5, [sp, #8]
9001c572:	5d2e      	ldrb	r6, [r5, r4]
9001c574:	2e00      	cmp	r6, #0
9001c576:	d04c      	beq.n	9001c612 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001c578:	9d01      	ldr	r5, [sp, #4]
9001c57a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001c57e:	9c05      	ldr	r4, [sp, #20]
9001c580:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c584:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c588:	4366      	muls	r6, r4
9001c58a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c58e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c592:	1c74      	adds	r4, r6, #1
9001c594:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c598:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c59c:	122e      	asrs	r6, r5, #8
9001c59e:	1224      	asrs	r4, r4, #8
9001c5a0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c5a4:	00ed      	lsls	r5, r5, #3
9001c5a6:	b2a7      	uxth	r7, r4
9001c5a8:	43e4      	mvns	r4, r4
9001c5aa:	b2ed      	uxtb	r5, r5
9001c5ac:	b2e4      	uxtb	r4, r4
9001c5ae:	fb16 f604 	smulbb	r6, r6, r4
9001c5b2:	fb15 f504 	smulbb	r5, r5, r4
9001c5b6:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c5ba:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c5be:	fb1a fa04 	smulbb	sl, sl, r4
9001c5c2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c5c6:	fa1f fc8c 	uxth.w	ip, ip
9001c5ca:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c5ce:	fa5f f888 	uxtb.w	r8, r8
9001c5d2:	fb06 a607 	mla	r6, r6, r7, sl
9001c5d6:	f10c 0401 	add.w	r4, ip, #1
9001c5da:	fb08 5507 	mla	r5, r8, r7, r5
9001c5de:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c5e2:	b2ad      	uxth	r5, r5
9001c5e4:	b2b6      	uxth	r6, r6
9001c5e6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c5ea:	f105 0a01 	add.w	sl, r5, #1
9001c5ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c5f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c5f6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c5fa:	f106 0a01 	add.w	sl, r6, #1
9001c5fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c602:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c606:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c60a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c60e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c612:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c614:	f109 0901 	add.w	r9, r9, #1
9001c618:	4421      	add	r1, r4
9001c61a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c61c:	4422      	add	r2, r4
9001c61e:	e79c      	b.n	9001c55a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001c620:	b007      	add	sp, #28
9001c622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c626 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c626:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c62a:	b085      	sub	sp, #20
9001c62c:	468b      	mov	fp, r1
9001c62e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c632:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c634:	9203      	str	r2, [sp, #12]
9001c636:	6861      	ldr	r1, [r4, #4]
9001c638:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001c63c:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001c640:	fb01 2000 	mla	r0, r1, r0, r2
9001c644:	6822      	ldr	r2, [r4, #0]
9001c646:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c64a:	f8d8 2000 	ldr.w	r2, [r8]
9001c64e:	9200      	str	r2, [sp, #0]
9001c650:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001c654:	9201      	str	r2, [sp, #4]
9001c656:	f1bb 0f00 	cmp.w	fp, #0
9001c65a:	dc03      	bgt.n	9001c664 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c65c:	9a03      	ldr	r2, [sp, #12]
9001c65e:	2a00      	cmp	r2, #0
9001c660:	f340 8146 	ble.w	9001c8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c664:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c666:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c66a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c66e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c670:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c674:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c678:	2b00      	cmp	r3, #0
9001c67a:	dd0e      	ble.n	9001c69a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c67c:	140c      	asrs	r4, r1, #16
9001c67e:	d405      	bmi.n	9001c68c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c680:	42bc      	cmp	r4, r7
9001c682:	da03      	bge.n	9001c68c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c684:	1414      	asrs	r4, r2, #16
9001c686:	d401      	bmi.n	9001c68c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c688:	42b4      	cmp	r4, r6
9001c68a:	db07      	blt.n	9001c69c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c68c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c68e:	3b01      	subs	r3, #1
9001c690:	3002      	adds	r0, #2
9001c692:	4421      	add	r1, r4
9001c694:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c696:	4422      	add	r2, r4
9001c698:	e7ee      	b.n	9001c678 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c69a:	d017      	beq.n	9001c6cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c69c:	1e5c      	subs	r4, r3, #1
9001c69e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c6a0:	fb05 1504 	mla	r5, r5, r4, r1
9001c6a4:	142d      	asrs	r5, r5, #16
9001c6a6:	d409      	bmi.n	9001c6bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c6a8:	42bd      	cmp	r5, r7
9001c6aa:	da07      	bge.n	9001c6bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c6ac:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c6ae:	fb05 2404 	mla	r4, r5, r4, r2
9001c6b2:	1424      	asrs	r4, r4, #16
9001c6b4:	d402      	bmi.n	9001c6bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c6b6:	42b4      	cmp	r4, r6
9001c6b8:	f2c0 80b3 	blt.w	9001c822 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001c6bc:	2600      	movs	r6, #0
9001c6be:	199c      	adds	r4, r3, r6
9001c6c0:	2c00      	cmp	r4, #0
9001c6c2:	dc3e      	bgt.n	9001c742 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c6c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c6c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c6cc:	f1bb 0f00 	cmp.w	fp, #0
9001c6d0:	f340 810e 	ble.w	9001c8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c6d4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c6d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c6da:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c6de:	f1bb 0b01 	subs.w	fp, fp, #1
9001c6e2:	eeb0 6a62 	vmov.f32	s12, s5
9001c6e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c6ea:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c6ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c6f2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c6f6:	eeb0 6a43 	vmov.f32	s12, s6
9001c6fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c6fe:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c702:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c706:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c70a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c70e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c712:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c716:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c71a:	ee12 2a90 	vmov	r2, s5
9001c71e:	eef0 2a47 	vmov.f32	s5, s14
9001c722:	fb92 f3f3 	sdiv	r3, r2, r3
9001c726:	ee13 2a10 	vmov	r2, s6
9001c72a:	9311      	str	r3, [sp, #68]	@ 0x44
9001c72c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c72e:	eeb0 3a67 	vmov.f32	s6, s15
9001c732:	fb92 f3f3 	sdiv	r3, r2, r3
9001c736:	9a03      	ldr	r2, [sp, #12]
9001c738:	9312      	str	r3, [sp, #72]	@ 0x48
9001c73a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c73c:	bf08      	it	eq
9001c73e:	4613      	moveq	r3, r2
9001c740:	e789      	b.n	9001c656 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c742:	140f      	asrs	r7, r1, #16
9001c744:	d418      	bmi.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c746:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c74a:	42bd      	cmp	r5, r7
9001c74c:	dd14      	ble.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c74e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c752:	d411      	bmi.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c754:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001c758:	4564      	cmp	r4, ip
9001c75a:	dd0d      	ble.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c75c:	b22d      	sxth	r5, r5
9001c75e:	9c01      	ldr	r4, [sp, #4]
9001c760:	fb0c 7505 	mla	r5, ip, r5, r7
9001c764:	5d64      	ldrb	r4, [r4, r5]
9001c766:	2cff      	cmp	r4, #255	@ 0xff
9001c768:	d10c      	bne.n	9001c784 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c76a:	9c00      	ldr	r4, [sp, #0]
9001c76c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001c770:	f06f 0401 	mvn.w	r4, #1
9001c774:	4374      	muls	r4, r6
9001c776:	5305      	strh	r5, [r0, r4]
9001c778:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c77a:	3e01      	subs	r6, #1
9001c77c:	4421      	add	r1, r4
9001c77e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c780:	4422      	add	r2, r4
9001c782:	e79c      	b.n	9001c6be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c784:	2c00      	cmp	r4, #0
9001c786:	d0f7      	beq.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c788:	9f00      	ldr	r7, [sp, #0]
9001c78a:	fa1f fc84 	uxth.w	ip, r4
9001c78e:	43e4      	mvns	r4, r4
9001c790:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001c794:	f06f 0501 	mvn.w	r5, #1
9001c798:	b2e4      	uxtb	r4, r4
9001c79a:	4375      	muls	r5, r6
9001c79c:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001c7a0:	9502      	str	r5, [sp, #8]
9001c7a2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c7a6:	5b45      	ldrh	r5, [r0, r5]
9001c7a8:	122f      	asrs	r7, r5, #8
9001c7aa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c7ae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c7b2:	00ed      	lsls	r5, r5, #3
9001c7b4:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c7b8:	fb17 f704 	smulbb	r7, r7, r4
9001c7bc:	b2ed      	uxtb	r5, r5
9001c7be:	fb1a fa04 	smulbb	sl, sl, r4
9001c7c2:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001c7c6:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001c7ca:	fb15 f504 	smulbb	r5, r5, r4
9001c7ce:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c7d2:	fa1f fe8e 	uxth.w	lr, lr
9001c7d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c7da:	fa5f f989 	uxtb.w	r9, r9
9001c7de:	fb07 a70c 	mla	r7, r7, ip, sl
9001c7e2:	f10e 0401 	add.w	r4, lr, #1
9001c7e6:	fb09 550c 	mla	r5, r9, ip, r5
9001c7ea:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001c7ee:	9c02      	ldr	r4, [sp, #8]
9001c7f0:	b2ad      	uxth	r5, r5
9001c7f2:	b2bf      	uxth	r7, r7
9001c7f4:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c7f8:	f105 0a01 	add.w	sl, r5, #1
9001c7fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c800:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c804:	ea4a 0e0e 	orr.w	lr, sl, lr
9001c808:	f107 0a01 	add.w	sl, r7, #1
9001c80c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c810:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c814:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c818:	ea4e 0e0a 	orr.w	lr, lr, sl
9001c81c:	f820 e004 	strh.w	lr, [r0, r4]
9001c820:	e7aa      	b.n	9001c778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c822:	f04f 0900 	mov.w	r9, #0
9001c826:	eba3 0409 	sub.w	r4, r3, r9
9001c82a:	2c00      	cmp	r4, #0
9001c82c:	f77f af4a 	ble.w	9001c6c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c830:	1414      	asrs	r4, r2, #16
9001c832:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c836:	140d      	asrs	r5, r1, #16
9001c838:	fb06 5504 	mla	r5, r6, r4, r5
9001c83c:	9c01      	ldr	r4, [sp, #4]
9001c83e:	5d64      	ldrb	r4, [r4, r5]
9001c840:	2cff      	cmp	r4, #255	@ 0xff
9001c842:	d10b      	bne.n	9001c85c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c844:	9c00      	ldr	r4, [sp, #0]
9001c846:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001c84a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001c84e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c850:	f109 0901 	add.w	r9, r9, #1
9001c854:	4421      	add	r1, r4
9001c856:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c858:	4422      	add	r2, r4
9001c85a:	e7e4      	b.n	9001c826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001c85c:	2c00      	cmp	r4, #0
9001c85e:	d0f6      	beq.n	9001c84e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c860:	9e00      	ldr	r6, [sp, #0]
9001c862:	b2a7      	uxth	r7, r4
9001c864:	43e4      	mvns	r4, r4
9001c866:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001c86a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c86e:	b2e4      	uxtb	r4, r4
9001c870:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c874:	122e      	asrs	r6, r5, #8
9001c876:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c87a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c87e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c882:	00ed      	lsls	r5, r5, #3
9001c884:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c888:	fb16 f604 	smulbb	r6, r6, r4
9001c88c:	b2ed      	uxtb	r5, r5
9001c88e:	fb1a fa04 	smulbb	sl, sl, r4
9001c892:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c896:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c89a:	fb15 f504 	smulbb	r5, r5, r4
9001c89e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c8a2:	fa1f fc8c 	uxth.w	ip, ip
9001c8a6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c8aa:	fa5f fe8e 	uxtb.w	lr, lr
9001c8ae:	fb06 a607 	mla	r6, r6, r7, sl
9001c8b2:	f10c 0401 	add.w	r4, ip, #1
9001c8b6:	fb0e 5507 	mla	r5, lr, r7, r5
9001c8ba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c8be:	b2ad      	uxth	r5, r5
9001c8c0:	b2b6      	uxth	r6, r6
9001c8c2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c8c6:	f105 0a01 	add.w	sl, r5, #1
9001c8ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c8ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c8d2:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c8d6:	f106 0a01 	add.w	sl, r6, #1
9001c8da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c8de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c8e2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c8e6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c8ea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c8ee:	e7ae      	b.n	9001c84e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c8f0:	b005      	add	sp, #20
9001c8f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c8f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c8f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c8fa:	b085      	sub	sp, #20
9001c8fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c8fe:	9203      	str	r2, [sp, #12]
9001c900:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001c904:	9100      	str	r1, [sp, #0]
9001c906:	9201      	str	r2, [sp, #4]
9001c908:	6841      	ldr	r1, [r0, #4]
9001c90a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001c90e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c912:	fb01 2404 	mla	r4, r1, r4, r2
9001c916:	6802      	ldr	r2, [r0, #0]
9001c918:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c91c:	f8de 2000 	ldr.w	r2, [lr]
9001c920:	9202      	str	r2, [sp, #8]
9001c922:	9a01      	ldr	r2, [sp, #4]
9001c924:	43d6      	mvns	r6, r2
9001c926:	b2f6      	uxtb	r6, r6
9001c928:	9a00      	ldr	r2, [sp, #0]
9001c92a:	2a00      	cmp	r2, #0
9001c92c:	dc03      	bgt.n	9001c936 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c92e:	9a03      	ldr	r2, [sp, #12]
9001c930:	2a00      	cmp	r2, #0
9001c932:	f340 8124 	ble.w	9001cb7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c936:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c938:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c93c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c940:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c942:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c946:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c94a:	2b00      	cmp	r3, #0
9001c94c:	dd0e      	ble.n	9001c96c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c94e:	1408      	asrs	r0, r1, #16
9001c950:	d405      	bmi.n	9001c95e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c952:	4560      	cmp	r0, ip
9001c954:	da03      	bge.n	9001c95e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c956:	1410      	asrs	r0, r2, #16
9001c958:	d401      	bmi.n	9001c95e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c95a:	42b8      	cmp	r0, r7
9001c95c:	db07      	blt.n	9001c96e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c95e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c960:	3b01      	subs	r3, #1
9001c962:	3402      	adds	r4, #2
9001c964:	4401      	add	r1, r0
9001c966:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c968:	4402      	add	r2, r0
9001c96a:	e7ee      	b.n	9001c94a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c96c:	d06e      	beq.n	9001ca4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c96e:	1e58      	subs	r0, r3, #1
9001c970:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c972:	fb05 1500 	mla	r5, r5, r0, r1
9001c976:	142d      	asrs	r5, r5, #16
9001c978:	d45c      	bmi.n	9001ca34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c97a:	4565      	cmp	r5, ip
9001c97c:	da5a      	bge.n	9001ca34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c97e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c980:	fb05 2000 	mla	r0, r5, r0, r2
9001c984:	1400      	asrs	r0, r0, #16
9001c986:	d455      	bmi.n	9001ca34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c988:	42b8      	cmp	r0, r7
9001c98a:	da53      	bge.n	9001ca34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c98c:	4699      	mov	r9, r3
9001c98e:	46a2      	mov	sl, r4
9001c990:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001c994:	f1b9 0f00 	cmp.w	r9, #0
9001c998:	dd54      	ble.n	9001ca44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c99a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c99e:	140d      	asrs	r5, r1, #16
9001c9a0:	1410      	asrs	r0, r2, #16
9001c9a2:	f109 39ff 	add.w	r9, r9, #4294967295
9001c9a6:	fb07 5000 	mla	r0, r7, r0, r5
9001c9aa:	9d02      	ldr	r5, [sp, #8]
9001c9ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c9b0:	f8ba 5000 	ldrh.w	r5, [sl]
9001c9b4:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c9b8:	122f      	asrs	r7, r5, #8
9001c9ba:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c9be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c9c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c9c6:	00ed      	lsls	r5, r5, #3
9001c9c8:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001c9cc:	fb17 f706 	smulbb	r7, r7, r6
9001c9d0:	b2ed      	uxtb	r5, r5
9001c9d2:	fb18 f806 	smulbb	r8, r8, r6
9001c9d6:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c9da:	10c7      	asrs	r7, r0, #3
9001c9dc:	fb15 f506 	smulbb	r5, r5, r6
9001c9e0:	00c0      	lsls	r0, r0, #3
9001c9e2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c9e6:	fa1f fc8c 	uxth.w	ip, ip
9001c9ea:	b2c0      	uxtb	r0, r0
9001c9ec:	fb07 870b 	mla	r7, r7, fp, r8
9001c9f0:	fb00 500b 	mla	r0, r0, fp, r5
9001c9f4:	f10c 0501 	add.w	r5, ip, #1
9001c9f8:	b2bf      	uxth	r7, r7
9001c9fa:	b280      	uxth	r0, r0
9001c9fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ca00:	f107 0801 	add.w	r8, r7, #1
9001ca04:	1c45      	adds	r5, r0, #1
9001ca06:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001ca0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ca0e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ca12:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ca14:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ca18:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ca1c:	4401      	add	r1, r0
9001ca1e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001ca22:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ca24:	ea45 0c0c 	orr.w	ip, r5, ip
9001ca28:	4402      	add	r2, r0
9001ca2a:	ea4c 0c08 	orr.w	ip, ip, r8
9001ca2e:	f82a cb02 	strh.w	ip, [sl], #2
9001ca32:	e7af      	b.n	9001c994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca34:	f04f 0800 	mov.w	r8, #0
9001ca38:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001ca3c:	eb03 0008 	add.w	r0, r3, r8
9001ca40:	2800      	cmp	r0, #0
9001ca42:	dc41      	bgt.n	9001cac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001ca44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ca48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ca4c:	9b00      	ldr	r3, [sp, #0]
9001ca4e:	2b00      	cmp	r3, #0
9001ca50:	f340 8095 	ble.w	9001cb7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001ca54:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ca58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ca5a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ca5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ca62:	eef0 6a62 	vmov.f32	s13, s5
9001ca66:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ca6a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ca6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ca72:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001ca76:	eef0 6a43 	vmov.f32	s13, s6
9001ca7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ca7e:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001ca82:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ca86:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ca8a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ca8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ca92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ca96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ca9a:	ee12 2a90 	vmov	r2, s5
9001ca9e:	eef0 2a47 	vmov.f32	s5, s14
9001caa2:	fb92 f3f3 	sdiv	r3, r2, r3
9001caa6:	ee13 2a10 	vmov	r2, s6
9001caaa:	9311      	str	r3, [sp, #68]	@ 0x44
9001caac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001caae:	eeb0 3a67 	vmov.f32	s6, s15
9001cab2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cab6:	9312      	str	r3, [sp, #72]	@ 0x48
9001cab8:	9b00      	ldr	r3, [sp, #0]
9001caba:	9a03      	ldr	r2, [sp, #12]
9001cabc:	3b01      	subs	r3, #1
9001cabe:	9300      	str	r3, [sp, #0]
9001cac0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cac2:	bf08      	it	eq
9001cac4:	4613      	moveq	r3, r2
9001cac6:	e72f      	b.n	9001c928 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001cac8:	140f      	asrs	r7, r1, #16
9001caca:	d451      	bmi.n	9001cb70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cacc:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cad0:	42bd      	cmp	r5, r7
9001cad2:	dd4d      	ble.n	9001cb70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cad4:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cad8:	d44a      	bmi.n	9001cb70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cada:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cade:	4560      	cmp	r0, ip
9001cae0:	dd46      	ble.n	9001cb70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cae2:	b22d      	sxth	r5, r5
9001cae4:	9802      	ldr	r0, [sp, #8]
9001cae6:	fb0c 7505 	mla	r5, ip, r5, r7
9001caea:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001caee:	f06f 0501 	mvn.w	r5, #1
9001caf2:	fb05 fb08 	mul.w	fp, r5, r8
9001caf6:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cafa:	f834 500b 	ldrh.w	r5, [r4, fp]
9001cafe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cb02:	122f      	asrs	r7, r5, #8
9001cb04:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cb08:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cb0c:	00ed      	lsls	r5, r5, #3
9001cb0e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001cb12:	fb17 f706 	smulbb	r7, r7, r6
9001cb16:	b2ed      	uxtb	r5, r5
9001cb18:	fb19 f906 	smulbb	r9, r9, r6
9001cb1c:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001cb20:	10c7      	asrs	r7, r0, #3
9001cb22:	fb15 f506 	smulbb	r5, r5, r6
9001cb26:	00c0      	lsls	r0, r0, #3
9001cb28:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cb2c:	fa1f fc8c 	uxth.w	ip, ip
9001cb30:	b2c0      	uxtb	r0, r0
9001cb32:	fb07 970a 	mla	r7, r7, sl, r9
9001cb36:	fb00 500a 	mla	r0, r0, sl, r5
9001cb3a:	f10c 0501 	add.w	r5, ip, #1
9001cb3e:	b2bf      	uxth	r7, r7
9001cb40:	b280      	uxth	r0, r0
9001cb42:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cb46:	f107 0901 	add.w	r9, r7, #1
9001cb4a:	1c45      	adds	r5, r0, #1
9001cb4c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001cb50:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cb54:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cb58:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cb5c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cb60:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001cb64:	ea45 0c0c 	orr.w	ip, r5, ip
9001cb68:	ea4c 0c09 	orr.w	ip, ip, r9
9001cb6c:	f824 c00b 	strh.w	ip, [r4, fp]
9001cb70:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cb72:	f108 38ff 	add.w	r8, r8, #4294967295
9001cb76:	4401      	add	r1, r0
9001cb78:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cb7a:	4402      	add	r2, r0
9001cb7c:	e75e      	b.n	9001ca3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001cb7e:	b005      	add	sp, #20
9001cb80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cb84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb88:	b085      	sub	sp, #20
9001cb8a:	4693      	mov	fp, r2
9001cb8c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cb90:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001cb92:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001cb94:	6870      	ldr	r0, [r6, #4]
9001cb96:	9101      	str	r1, [sp, #4]
9001cb98:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cb9c:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001cba0:	fb00 2404 	mla	r4, r0, r4, r2
9001cba4:	6832      	ldr	r2, [r6, #0]
9001cba6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cbaa:	682a      	ldr	r2, [r5, #0]
9001cbac:	9202      	str	r2, [sp, #8]
9001cbae:	9a01      	ldr	r2, [sp, #4]
9001cbb0:	2a00      	cmp	r2, #0
9001cbb2:	dc03      	bgt.n	9001cbbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cbb4:	f1bb 0f00 	cmp.w	fp, #0
9001cbb8:	f340 809a 	ble.w	9001ccf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001cbbc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001cbbe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001cbc2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001cbc6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001cbc8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001cbcc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cbd0:	2b00      	cmp	r3, #0
9001cbd2:	dd0c      	ble.n	9001cbee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001cbd4:	1406      	asrs	r6, r0, #16
9001cbd6:	d405      	bmi.n	9001cbe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cbd8:	454e      	cmp	r6, r9
9001cbda:	da03      	bge.n	9001cbe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cbdc:	1416      	asrs	r6, r2, #16
9001cbde:	d401      	bmi.n	9001cbe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cbe0:	4546      	cmp	r6, r8
9001cbe2:	db05      	blt.n	9001cbf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cbe4:	4470      	add	r0, lr
9001cbe6:	4462      	add	r2, ip
9001cbe8:	3b01      	subs	r3, #1
9001cbea:	3402      	adds	r4, #2
9001cbec:	e7f0      	b.n	9001cbd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001cbee:	d00f      	beq.n	9001cc10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001cbf0:	1e5e      	subs	r6, r3, #1
9001cbf2:	fb0e 0706 	mla	r7, lr, r6, r0
9001cbf6:	143f      	asrs	r7, r7, #16
9001cbf8:	d541      	bpl.n	9001cc7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001cbfa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001cbfe:	4698      	mov	r8, r3
9001cc00:	9603      	str	r6, [sp, #12]
9001cc02:	f1b8 0f00 	cmp.w	r8, #0
9001cc06:	dc56      	bgt.n	9001ccb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001cc08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cc0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cc10:	9b01      	ldr	r3, [sp, #4]
9001cc12:	2b00      	cmp	r3, #0
9001cc14:	dd6c      	ble.n	9001ccf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001cc16:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cc1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cc20:	eeb0 6a62 	vmov.f32	s12, s5
9001cc24:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cc28:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cc2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cc30:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001cc34:	eeb0 6a43 	vmov.f32	s12, s6
9001cc38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cc3c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001cc40:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cc44:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cc48:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cc4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cc50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cc54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cc58:	ee12 2a90 	vmov	r2, s5
9001cc5c:	eef0 2a47 	vmov.f32	s5, s14
9001cc60:	fb92 fef3 	sdiv	lr, r2, r3
9001cc64:	ee13 2a10 	vmov	r2, s6
9001cc68:	eeb0 3a67 	vmov.f32	s6, s15
9001cc6c:	fb92 fcf3 	sdiv	ip, r2, r3
9001cc70:	9b01      	ldr	r3, [sp, #4]
9001cc72:	3b01      	subs	r3, #1
9001cc74:	9301      	str	r3, [sp, #4]
9001cc76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc78:	bf08      	it	eq
9001cc7a:	465b      	moveq	r3, fp
9001cc7c:	e797      	b.n	9001cbae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001cc7e:	454f      	cmp	r7, r9
9001cc80:	dabb      	bge.n	9001cbfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cc82:	fb0c 2606 	mla	r6, ip, r6, r2
9001cc86:	1436      	asrs	r6, r6, #16
9001cc88:	d4b7      	bmi.n	9001cbfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cc8a:	4546      	cmp	r6, r8
9001cc8c:	dab5      	bge.n	9001cbfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cc8e:	461e      	mov	r6, r3
9001cc90:	46a0      	mov	r8, r4
9001cc92:	2e00      	cmp	r6, #0
9001cc94:	ddb8      	ble.n	9001cc08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001cc96:	1417      	asrs	r7, r2, #16
9001cc98:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001cc9c:	ea4f 4920 	mov.w	r9, r0, asr #16
9001cca0:	9902      	ldr	r1, [sp, #8]
9001cca2:	4470      	add	r0, lr
9001cca4:	4462      	add	r2, ip
9001cca6:	fb0a 9707 	mla	r7, sl, r7, r9
9001ccaa:	3e01      	subs	r6, #1
9001ccac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001ccb0:	f828 7b02 	strh.w	r7, [r8], #2
9001ccb4:	e7ed      	b.n	9001cc92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001ccb6:	ea5f 4920 	movs.w	r9, r0, asr #16
9001ccba:	d414      	bmi.n	9001cce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ccbc:	68ae      	ldr	r6, [r5, #8]
9001ccbe:	454e      	cmp	r6, r9
9001ccc0:	dd11      	ble.n	9001cce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ccc2:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001ccc6:	d40e      	bmi.n	9001cce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ccc8:	68ef      	ldr	r7, [r5, #12]
9001ccca:	4557      	cmp	r7, sl
9001cccc:	dd0b      	ble.n	9001cce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ccce:	b236      	sxth	r6, r6
9001ccd0:	f06f 0101 	mvn.w	r1, #1
9001ccd4:	9f02      	ldr	r7, [sp, #8]
9001ccd6:	fb0a 9606 	mla	r6, sl, r6, r9
9001ccda:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001ccde:	fb01 f608 	mul.w	r6, r1, r8
9001cce2:	9903      	ldr	r1, [sp, #12]
9001cce4:	538f      	strh	r7, [r1, r6]
9001cce6:	4470      	add	r0, lr
9001cce8:	4462      	add	r2, ip
9001ccea:	f108 38ff 	add.w	r8, r8, #4294967295
9001ccee:	e788      	b.n	9001cc02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ccf0:	b005      	add	sp, #20
9001ccf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ccf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ccf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccfa:	b087      	sub	sp, #28
9001ccfc:	468b      	mov	fp, r1
9001ccfe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cd02:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001cd04:	9203      	str	r2, [sp, #12]
9001cd06:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cd0a:	6841      	ldr	r1, [r0, #4]
9001cd0c:	9204      	str	r2, [sp, #16]
9001cd0e:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001cd12:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001cd16:	fb01 2505 	mla	r5, r1, r5, r2
9001cd1a:	6802      	ldr	r2, [r0, #0]
9001cd1c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001cd20:	f8d9 2000 	ldr.w	r2, [r9]
9001cd24:	9201      	str	r2, [sp, #4]
9001cd26:	f1bb 0f00 	cmp.w	fp, #0
9001cd2a:	dc03      	bgt.n	9001cd34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001cd2c:	9a03      	ldr	r2, [sp, #12]
9001cd2e:	2a00      	cmp	r2, #0
9001cd30:	f340 8158 	ble.w	9001cfe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001cd34:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cd36:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001cd3a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001cd3e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cd40:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001cd44:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cd48:	2b00      	cmp	r3, #0
9001cd4a:	dd0e      	ble.n	9001cd6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001cd4c:	1402      	asrs	r2, r0, #16
9001cd4e:	d405      	bmi.n	9001cd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cd50:	42ba      	cmp	r2, r7
9001cd52:	da03      	bge.n	9001cd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cd54:	140a      	asrs	r2, r1, #16
9001cd56:	d401      	bmi.n	9001cd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cd58:	42b2      	cmp	r2, r6
9001cd5a:	db07      	blt.n	9001cd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cd5c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cd5e:	3b01      	subs	r3, #1
9001cd60:	3502      	adds	r5, #2
9001cd62:	4410      	add	r0, r2
9001cd64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cd66:	4411      	add	r1, r2
9001cd68:	e7ee      	b.n	9001cd48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001cd6a:	d017      	beq.n	9001cd9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001cd6c:	1e5a      	subs	r2, r3, #1
9001cd6e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001cd70:	fb04 0402 	mla	r4, r4, r2, r0
9001cd74:	1424      	asrs	r4, r4, #16
9001cd76:	d409      	bmi.n	9001cd8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd78:	42bc      	cmp	r4, r7
9001cd7a:	da07      	bge.n	9001cd8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd7c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001cd7e:	fb04 1202 	mla	r2, r4, r2, r1
9001cd82:	1412      	asrs	r2, r2, #16
9001cd84:	d402      	bmi.n	9001cd8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cd86:	42b2      	cmp	r2, r6
9001cd88:	f2c0 80bf 	blt.w	9001cf0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001cd8c:	2700      	movs	r7, #0
9001cd8e:	19da      	adds	r2, r3, r7
9001cd90:	2a00      	cmp	r2, #0
9001cd92:	dc3e      	bgt.n	9001ce12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001cd94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cd98:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001cd9c:	f1bb 0f00 	cmp.w	fp, #0
9001cda0:	f340 8120 	ble.w	9001cfe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001cda4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cda8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cdaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cdae:	f1bb 0b01 	subs.w	fp, fp, #1
9001cdb2:	eeb0 6a62 	vmov.f32	s12, s5
9001cdb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cdba:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cdbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cdc2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001cdc6:	eeb0 6a43 	vmov.f32	s12, s6
9001cdca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cdce:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001cdd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cdd6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cdda:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cdde:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cde2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cde6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cdea:	ee12 2a90 	vmov	r2, s5
9001cdee:	eef0 2a47 	vmov.f32	s5, s14
9001cdf2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cdf6:	ee13 2a10 	vmov	r2, s6
9001cdfa:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cdfc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cdfe:	eeb0 3a67 	vmov.f32	s6, s15
9001ce02:	fb92 f3f3 	sdiv	r3, r2, r3
9001ce06:	9a03      	ldr	r2, [sp, #12]
9001ce08:	9314      	str	r3, [sp, #80]	@ 0x50
9001ce0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ce0c:	bf08      	it	eq
9001ce0e:	4613      	moveq	r3, r2
9001ce10:	e789      	b.n	9001cd26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ce12:	1406      	asrs	r6, r0, #16
9001ce14:	d42d      	bmi.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce16:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001ce1a:	42b4      	cmp	r4, r6
9001ce1c:	dd29      	ble.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce1e:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001ce22:	d426      	bmi.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce24:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001ce28:	4562      	cmp	r2, ip
9001ce2a:	dd22      	ble.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce2c:	b224      	sxth	r4, r4
9001ce2e:	9a01      	ldr	r2, [sp, #4]
9001ce30:	fb0c 6404 	mla	r4, ip, r4, r6
9001ce34:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001ce38:	0e22      	lsrs	r2, r4, #24
9001ce3a:	d01a      	beq.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce3c:	9e04      	ldr	r6, [sp, #16]
9001ce3e:	4372      	muls	r2, r6
9001ce40:	1c56      	adds	r6, r2, #1
9001ce42:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ce46:	0a26      	lsrs	r6, r4, #8
9001ce48:	1212      	asrs	r2, r2, #8
9001ce4a:	9605      	str	r6, [sp, #20]
9001ce4c:	2aff      	cmp	r2, #255	@ 0xff
9001ce4e:	d116      	bne.n	9001ce7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001ce50:	f06f 0201 	mvn.w	r2, #1
9001ce54:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ce58:	fb02 fc07 	mul.w	ip, r2, r7
9001ce5c:	0962      	lsrs	r2, r4, #5
9001ce5e:	f026 0607 	bic.w	r6, r6, #7
9001ce62:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ce66:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ce6a:	4316      	orrs	r6, r2
9001ce6c:	4326      	orrs	r6, r4
9001ce6e:	f825 600c 	strh.w	r6, [r5, ip]
9001ce72:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ce74:	3f01      	subs	r7, #1
9001ce76:	4410      	add	r0, r2
9001ce78:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce7a:	4411      	add	r1, r2
9001ce7c:	e787      	b.n	9001cd8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ce7e:	f06f 0601 	mvn.w	r6, #1
9001ce82:	fa1f fa82 	uxth.w	sl, r2
9001ce86:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001ce8a:	43d2      	mvns	r2, r2
9001ce8c:	437e      	muls	r6, r7
9001ce8e:	b2e4      	uxtb	r4, r4
9001ce90:	fb1c fc0a 	smulbb	ip, ip, sl
9001ce94:	b2d2      	uxtb	r2, r2
9001ce96:	f835 8006 	ldrh.w	r8, [r5, r6]
9001ce9a:	fb14 f40a 	smulbb	r4, r4, sl
9001ce9e:	9602      	str	r6, [sp, #8]
9001cea0:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001cea4:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001cea8:	fb16 f60a 	smulbb	r6, r6, sl
9001ceac:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001ceb0:	fb0e ce02 	mla	lr, lr, r2, ip
9001ceb4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ceb8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cebc:	fa1f fe8e 	uxth.w	lr, lr
9001cec0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001cec4:	fa5f f888 	uxtb.w	r8, r8
9001cec8:	fb0c 6c02 	mla	ip, ip, r2, r6
9001cecc:	fb08 4402 	mla	r4, r8, r2, r4
9001ced0:	f10e 0201 	add.w	r2, lr, #1
9001ced4:	fa1f fc8c 	uxth.w	ip, ip
9001ced8:	b2a4      	uxth	r4, r4
9001ceda:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001cede:	9a02      	ldr	r2, [sp, #8]
9001cee0:	1c66      	adds	r6, r4, #1
9001cee2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001cee6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ceea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ceee:	ea46 0e0e 	orr.w	lr, r6, lr
9001cef2:	f10c 0601 	add.w	r6, ip, #1
9001cef6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001cefa:	0976      	lsrs	r6, r6, #5
9001cefc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cf00:	ea4e 0e06 	orr.w	lr, lr, r6
9001cf04:	f825 e002 	strh.w	lr, [r5, r2]
9001cf08:	e7b3      	b.n	9001ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001cf0a:	f04f 0800 	mov.w	r8, #0
9001cf0e:	eba3 0208 	sub.w	r2, r3, r8
9001cf12:	2a00      	cmp	r2, #0
9001cf14:	f77f af3e 	ble.w	9001cd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cf18:	1404      	asrs	r4, r0, #16
9001cf1a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001cf1e:	140a      	asrs	r2, r1, #16
9001cf20:	fb06 4202 	mla	r2, r6, r2, r4
9001cf24:	9c01      	ldr	r4, [sp, #4]
9001cf26:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001cf2a:	0e22      	lsrs	r2, r4, #24
9001cf2c:	d015      	beq.n	9001cf5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001cf2e:	9e04      	ldr	r6, [sp, #16]
9001cf30:	4372      	muls	r2, r6
9001cf32:	1c56      	adds	r6, r2, #1
9001cf34:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001cf38:	0a26      	lsrs	r6, r4, #8
9001cf3a:	1212      	asrs	r2, r2, #8
9001cf3c:	2aff      	cmp	r2, #255	@ 0xff
9001cf3e:	d113      	bne.n	9001cf68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001cf40:	0962      	lsrs	r2, r4, #5
9001cf42:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001cf46:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001cf4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cf4e:	f026 0607 	bic.w	r6, r6, #7
9001cf52:	4316      	orrs	r6, r2
9001cf54:	4326      	orrs	r6, r4
9001cf56:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001cf5a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cf5c:	f108 0801 	add.w	r8, r8, #1
9001cf60:	4410      	add	r0, r2
9001cf62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cf64:	4411      	add	r1, r2
9001cf66:	e7d2      	b.n	9001cf0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001cf68:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001cf6c:	fa1f fa82 	uxth.w	sl, r2
9001cf70:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001cf74:	43d2      	mvns	r2, r2
9001cf76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cf7a:	fb17 f70a 	smulbb	r7, r7, sl
9001cf7e:	b2d2      	uxtb	r2, r2
9001cf80:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cf84:	b2e4      	uxtb	r4, r4
9001cf86:	b2f6      	uxtb	r6, r6
9001cf88:	fb0c 7c02 	mla	ip, ip, r2, r7
9001cf8c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001cf90:	fb14 f40a 	smulbb	r4, r4, sl
9001cf94:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cf98:	fa1f fc8c 	uxth.w	ip, ip
9001cf9c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cfa0:	fb16 f60a 	smulbb	r6, r6, sl
9001cfa4:	fa5f fe8e 	uxtb.w	lr, lr
9001cfa8:	fb0e 4402 	mla	r4, lr, r2, r4
9001cfac:	fb07 6702 	mla	r7, r7, r2, r6
9001cfb0:	f10c 0201 	add.w	r2, ip, #1
9001cfb4:	b2a4      	uxth	r4, r4
9001cfb6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001cfba:	1c66      	adds	r6, r4, #1
9001cfbc:	b2bf      	uxth	r7, r7
9001cfbe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cfc2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001cfc6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001cfca:	ea46 0c0c 	orr.w	ip, r6, ip
9001cfce:	1c7e      	adds	r6, r7, #1
9001cfd0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001cfd4:	0976      	lsrs	r6, r6, #5
9001cfd6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cfda:	ea4c 0c06 	orr.w	ip, ip, r6
9001cfde:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001cfe2:	e7ba      	b.n	9001cf5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001cfe4:	b007      	add	sp, #28
9001cfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001cfec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cfec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cff0:	b085      	sub	sp, #20
9001cff2:	468b      	mov	fp, r1
9001cff4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cff8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cffa:	9203      	str	r2, [sp, #12]
9001cffc:	6841      	ldr	r1, [r0, #4]
9001cffe:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001d002:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d006:	fb01 2404 	mla	r4, r1, r4, r2
9001d00a:	6802      	ldr	r2, [r0, #0]
9001d00c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d010:	f8d8 2000 	ldr.w	r2, [r8]
9001d014:	9201      	str	r2, [sp, #4]
9001d016:	f1bb 0f00 	cmp.w	fp, #0
9001d01a:	dc03      	bgt.n	9001d024 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d01c:	9a03      	ldr	r2, [sp, #12]
9001d01e:	2a00      	cmp	r2, #0
9001d020:	f340 814f 	ble.w	9001d2c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d024:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d026:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d02a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d02e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d030:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d034:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d038:	2b00      	cmp	r3, #0
9001d03a:	dd0e      	ble.n	9001d05a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d03c:	1408      	asrs	r0, r1, #16
9001d03e:	d405      	bmi.n	9001d04c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d040:	42b8      	cmp	r0, r7
9001d042:	da03      	bge.n	9001d04c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d044:	1410      	asrs	r0, r2, #16
9001d046:	d401      	bmi.n	9001d04c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d048:	42b0      	cmp	r0, r6
9001d04a:	db07      	blt.n	9001d05c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d04c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d04e:	3b01      	subs	r3, #1
9001d050:	3402      	adds	r4, #2
9001d052:	4401      	add	r1, r0
9001d054:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d056:	4402      	add	r2, r0
9001d058:	e7ee      	b.n	9001d038 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d05a:	d017      	beq.n	9001d08c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d05c:	1e58      	subs	r0, r3, #1
9001d05e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d060:	fb05 1500 	mla	r5, r5, r0, r1
9001d064:	142d      	asrs	r5, r5, #16
9001d066:	d409      	bmi.n	9001d07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d068:	42bd      	cmp	r5, r7
9001d06a:	da07      	bge.n	9001d07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d06c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d06e:	fb05 2000 	mla	r0, r5, r0, r2
9001d072:	1400      	asrs	r0, r0, #16
9001d074:	d402      	bmi.n	9001d07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d076:	42b0      	cmp	r0, r6
9001d078:	f2c0 80ba 	blt.w	9001d1f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001d07c:	2600      	movs	r6, #0
9001d07e:	1998      	adds	r0, r3, r6
9001d080:	2800      	cmp	r0, #0
9001d082:	dc3e      	bgt.n	9001d102 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001d084:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d088:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d08c:	f1bb 0f00 	cmp.w	fp, #0
9001d090:	f340 8117 	ble.w	9001d2c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d094:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d098:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d09a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d09e:	f1bb 0b01 	subs.w	fp, fp, #1
9001d0a2:	eeb0 6a62 	vmov.f32	s12, s5
9001d0a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d0aa:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d0ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d0b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d0b6:	eeb0 6a43 	vmov.f32	s12, s6
9001d0ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d0be:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d0c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d0c6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d0ca:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d0ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d0d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d0d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d0da:	ee12 2a90 	vmov	r2, s5
9001d0de:	eef0 2a47 	vmov.f32	s5, s14
9001d0e2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d0e6:	ee13 2a10 	vmov	r2, s6
9001d0ea:	9311      	str	r3, [sp, #68]	@ 0x44
9001d0ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d0ee:	eeb0 3a67 	vmov.f32	s6, s15
9001d0f2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d0f6:	9a03      	ldr	r2, [sp, #12]
9001d0f8:	9312      	str	r3, [sp, #72]	@ 0x48
9001d0fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d0fc:	bf08      	it	eq
9001d0fe:	4613      	moveq	r3, r2
9001d100:	e789      	b.n	9001d016 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d102:	140f      	asrs	r7, r1, #16
9001d104:	d424      	bmi.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d106:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d10a:	42bd      	cmp	r5, r7
9001d10c:	dd20      	ble.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d10e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d112:	d41d      	bmi.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d114:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001d118:	4560      	cmp	r0, ip
9001d11a:	dd19      	ble.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d11c:	b22d      	sxth	r5, r5
9001d11e:	9801      	ldr	r0, [sp, #4]
9001d120:	fb0c 7505 	mla	r5, ip, r5, r7
9001d124:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001d128:	0e07      	lsrs	r7, r0, #24
9001d12a:	2fff      	cmp	r7, #255	@ 0xff
9001d12c:	d116      	bne.n	9001d15c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d12e:	f06f 0501 	mvn.w	r5, #1
9001d132:	fb05 f706 	mul.w	r7, r5, r6
9001d136:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001d13a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d13e:	0945      	lsrs	r5, r0, #5
9001d140:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d144:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d148:	ea4c 0505 	orr.w	r5, ip, r5
9001d14c:	4305      	orrs	r5, r0
9001d14e:	53e5      	strh	r5, [r4, r7]
9001d150:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d152:	3e01      	subs	r6, #1
9001d154:	4401      	add	r1, r0
9001d156:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d158:	4402      	add	r2, r0
9001d15a:	e790      	b.n	9001d07e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d15c:	b2fd      	uxtb	r5, r7
9001d15e:	2f00      	cmp	r7, #0
9001d160:	d0f6      	beq.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d162:	f06f 0701 	mvn.w	r7, #1
9001d166:	fa1f f985 	uxth.w	r9, r5
9001d16a:	43ed      	mvns	r5, r5
9001d16c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001d170:	4377      	muls	r7, r6
9001d172:	fb1a fa09 	smulbb	sl, sl, r9
9001d176:	b2ed      	uxtb	r5, r5
9001d178:	f834 e007 	ldrh.w	lr, [r4, r7]
9001d17c:	9702      	str	r7, [sp, #8]
9001d17e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001d182:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d186:	fb17 f709 	smulbb	r7, r7, r9
9001d18a:	b2c0      	uxtb	r0, r0
9001d18c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d190:	fb10 f009 	smulbb	r0, r0, r9
9001d194:	fb0c 7c05 	mla	ip, ip, r5, r7
9001d198:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d19c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d1a0:	fa1f fc8c 	uxth.w	ip, ip
9001d1a4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d1a8:	fa5f fe8e 	uxtb.w	lr, lr
9001d1ac:	fb07 a705 	mla	r7, r7, r5, sl
9001d1b0:	fb0e 0005 	mla	r0, lr, r5, r0
9001d1b4:	f10c 0501 	add.w	r5, ip, #1
9001d1b8:	b2bf      	uxth	r7, r7
9001d1ba:	b280      	uxth	r0, r0
9001d1bc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d1c0:	f100 0a01 	add.w	sl, r0, #1
9001d1c4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d1c8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001d1cc:	9802      	ldr	r0, [sp, #8]
9001d1ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d1d2:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d1d6:	f107 0a01 	add.w	sl, r7, #1
9001d1da:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d1de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d1e2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d1e6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d1ea:	f824 c000 	strh.w	ip, [r4, r0]
9001d1ee:	e7af      	b.n	9001d150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d1f0:	f04f 0e00 	mov.w	lr, #0
9001d1f4:	eba3 000e 	sub.w	r0, r3, lr
9001d1f8:	2800      	cmp	r0, #0
9001d1fa:	f77f af43 	ble.w	9001d084 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d1fe:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d202:	140d      	asrs	r5, r1, #16
9001d204:	1410      	asrs	r0, r2, #16
9001d206:	fb06 5000 	mla	r0, r6, r0, r5
9001d20a:	9d01      	ldr	r5, [sp, #4]
9001d20c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001d210:	0e2e      	lsrs	r6, r5, #24
9001d212:	2eff      	cmp	r6, #255	@ 0xff
9001d214:	d112      	bne.n	9001d23c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001d216:	482c      	ldr	r0, [pc, #176]	@ (9001d2c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001d218:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001d21c:	0968      	lsrs	r0, r5, #5
9001d21e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d222:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001d226:	4330      	orrs	r0, r6
9001d228:	4328      	orrs	r0, r5
9001d22a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001d22e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d230:	f10e 0e01 	add.w	lr, lr, #1
9001d234:	4401      	add	r1, r0
9001d236:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d238:	4402      	add	r2, r0
9001d23a:	e7db      	b.n	9001d1f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001d23c:	b2f0      	uxtb	r0, r6
9001d23e:	2e00      	cmp	r6, #0
9001d240:	d0f5      	beq.n	9001d22e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d242:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d246:	fa1f f980 	uxth.w	r9, r0
9001d24a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d24e:	43c0      	mvns	r0, r0
9001d250:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d254:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d258:	fb16 f609 	smulbb	r6, r6, r9
9001d25c:	b2c0      	uxtb	r0, r0
9001d25e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d262:	b2ed      	uxtb	r5, r5
9001d264:	fb1a fa09 	smulbb	sl, sl, r9
9001d268:	fb07 6700 	mla	r7, r7, r0, r6
9001d26c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d270:	fb15 f509 	smulbb	r5, r5, r9
9001d274:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d278:	b2bf      	uxth	r7, r7
9001d27a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d27e:	fa5f fc8c 	uxtb.w	ip, ip
9001d282:	fb06 a600 	mla	r6, r6, r0, sl
9001d286:	fb0c 5500 	mla	r5, ip, r0, r5
9001d28a:	1c78      	adds	r0, r7, #1
9001d28c:	b2b6      	uxth	r6, r6
9001d28e:	b2ad      	uxth	r5, r5
9001d290:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001d294:	f105 0a01 	add.w	sl, r5, #1
9001d298:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d29c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d2a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d2a4:	ea4a 0707 	orr.w	r7, sl, r7
9001d2a8:	f106 0a01 	add.w	sl, r6, #1
9001d2ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d2b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d2b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d2b8:	ea47 070a 	orr.w	r7, r7, sl
9001d2bc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001d2c0:	e7b5      	b.n	9001d22e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d2c2:	b005      	add	sp, #20
9001d2c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d2c8:	fffff800 	.word	0xfffff800

9001d2cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d2d0:	b087      	sub	sp, #28
9001d2d2:	468b      	mov	fp, r1
9001d2d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d2d8:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d2da:	9203      	str	r2, [sp, #12]
9001d2dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d2e0:	6841      	ldr	r1, [r0, #4]
9001d2e2:	9204      	str	r2, [sp, #16]
9001d2e4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001d2e8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d2ec:	fb01 2404 	mla	r4, r1, r4, r2
9001d2f0:	6802      	ldr	r2, [r0, #0]
9001d2f2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d2f6:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d2fa:	3201      	adds	r2, #1
9001d2fc:	f022 0201 	bic.w	r2, r2, #1
9001d300:	9200      	str	r2, [sp, #0]
9001d302:	f8d9 2000 	ldr.w	r2, [r9]
9001d306:	9201      	str	r2, [sp, #4]
9001d308:	f1bb 0f00 	cmp.w	fp, #0
9001d30c:	dc03      	bgt.n	9001d316 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d30e:	9a03      	ldr	r2, [sp, #12]
9001d310:	2a00      	cmp	r2, #0
9001d312:	f340 816a 	ble.w	9001d5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d316:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d318:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d31c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d320:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d322:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d326:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d32a:	2b00      	cmp	r3, #0
9001d32c:	dd0e      	ble.n	9001d34c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d32e:	1402      	asrs	r2, r0, #16
9001d330:	d405      	bmi.n	9001d33e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d332:	42ba      	cmp	r2, r7
9001d334:	da03      	bge.n	9001d33e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d336:	140a      	asrs	r2, r1, #16
9001d338:	d401      	bmi.n	9001d33e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d33a:	42b2      	cmp	r2, r6
9001d33c:	db07      	blt.n	9001d34e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001d33e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d340:	3b01      	subs	r3, #1
9001d342:	3402      	adds	r4, #2
9001d344:	4410      	add	r0, r2
9001d346:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d348:	4411      	add	r1, r2
9001d34a:	e7ee      	b.n	9001d32a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d34c:	d017      	beq.n	9001d37e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d34e:	1e5a      	subs	r2, r3, #1
9001d350:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d352:	fb05 0502 	mla	r5, r5, r2, r0
9001d356:	142d      	asrs	r5, r5, #16
9001d358:	d409      	bmi.n	9001d36e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d35a:	42bd      	cmp	r5, r7
9001d35c:	da07      	bge.n	9001d36e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d35e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d360:	fb05 1202 	mla	r2, r5, r2, r1
9001d364:	1412      	asrs	r2, r2, #16
9001d366:	d402      	bmi.n	9001d36e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d368:	42b2      	cmp	r2, r6
9001d36a:	f2c0 80c8 	blt.w	9001d4fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001d36e:	2700      	movs	r7, #0
9001d370:	19da      	adds	r2, r3, r7
9001d372:	2a00      	cmp	r2, #0
9001d374:	dc3e      	bgt.n	9001d3f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d376:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d37a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d37e:	f1bb 0f00 	cmp.w	fp, #0
9001d382:	f340 8132 	ble.w	9001d5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d386:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d38a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d38c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d390:	f1bb 0b01 	subs.w	fp, fp, #1
9001d394:	eeb0 6a62 	vmov.f32	s12, s5
9001d398:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d39c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d3a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d3a4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d3a8:	eeb0 6a43 	vmov.f32	s12, s6
9001d3ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d3b0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d3b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d3b8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d3bc:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d3c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d3c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d3c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d3cc:	ee12 2a90 	vmov	r2, s5
9001d3d0:	eef0 2a47 	vmov.f32	s5, s14
9001d3d4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d3d8:	ee13 2a10 	vmov	r2, s6
9001d3dc:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d3de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d3e0:	eeb0 3a67 	vmov.f32	s6, s15
9001d3e4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d3e8:	9a03      	ldr	r2, [sp, #12]
9001d3ea:	9314      	str	r3, [sp, #80]	@ 0x50
9001d3ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d3ee:	bf08      	it	eq
9001d3f0:	4613      	moveq	r3, r2
9001d3f2:	e789      	b.n	9001d308 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d3f4:	1405      	asrs	r5, r0, #16
9001d3f6:	d436      	bmi.n	9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d3f8:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d3fc:	42aa      	cmp	r2, r5
9001d3fe:	dd32      	ble.n	9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d400:	140e      	asrs	r6, r1, #16
9001d402:	d430      	bmi.n	9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d404:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d408:	42b2      	cmp	r2, r6
9001d40a:	dd2c      	ble.n	9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d40c:	9a00      	ldr	r2, [sp, #0]
9001d40e:	fb06 5502 	mla	r5, r6, r2, r5
9001d412:	9e01      	ldr	r6, [sp, #4]
9001d414:	086a      	lsrs	r2, r5, #1
9001d416:	5cb2      	ldrb	r2, [r6, r2]
9001d418:	07ee      	lsls	r6, r5, #31
9001d41a:	bf54      	ite	pl
9001d41c:	f002 020f 	andpl.w	r2, r2, #15
9001d420:	1112      	asrmi	r2, r2, #4
9001d422:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d426:	b2d2      	uxtb	r2, r2
9001d428:	b1ea      	cbz	r2, 9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d42a:	9d04      	ldr	r5, [sp, #16]
9001d42c:	436a      	muls	r2, r5
9001d42e:	1c55      	adds	r5, r2, #1
9001d430:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d434:	4d6e      	ldr	r5, [pc, #440]	@ (9001d5f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d436:	1212      	asrs	r2, r2, #8
9001d438:	682d      	ldr	r5, [r5, #0]
9001d43a:	2aff      	cmp	r2, #255	@ 0xff
9001d43c:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001d440:	9605      	str	r6, [sp, #20]
9001d442:	d116      	bne.n	9001d472 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001d444:	f06f 0201 	mvn.w	r2, #1
9001d448:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001d44c:	fb02 fc07 	mul.w	ip, r2, r7
9001d450:	096a      	lsrs	r2, r5, #5
9001d452:	f026 0607 	bic.w	r6, r6, #7
9001d456:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d45a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d45e:	4316      	orrs	r6, r2
9001d460:	432e      	orrs	r6, r5
9001d462:	f824 600c 	strh.w	r6, [r4, ip]
9001d466:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d468:	3f01      	subs	r7, #1
9001d46a:	4410      	add	r0, r2
9001d46c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d46e:	4411      	add	r1, r2
9001d470:	e77e      	b.n	9001d370 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001d472:	f06f 0601 	mvn.w	r6, #1
9001d476:	fa1f fa82 	uxth.w	sl, r2
9001d47a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001d47e:	43d2      	mvns	r2, r2
9001d480:	437e      	muls	r6, r7
9001d482:	b2ed      	uxtb	r5, r5
9001d484:	fb1c fc0a 	smulbb	ip, ip, sl
9001d488:	b2d2      	uxtb	r2, r2
9001d48a:	f834 8006 	ldrh.w	r8, [r4, r6]
9001d48e:	fb15 f50a 	smulbb	r5, r5, sl
9001d492:	9602      	str	r6, [sp, #8]
9001d494:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d498:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d49c:	fb16 f60a 	smulbb	r6, r6, sl
9001d4a0:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001d4a4:	fb0e ce02 	mla	lr, lr, r2, ip
9001d4a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d4ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d4b0:	fa1f fe8e 	uxth.w	lr, lr
9001d4b4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001d4b8:	fa5f f888 	uxtb.w	r8, r8
9001d4bc:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d4c0:	fb08 5502 	mla	r5, r8, r2, r5
9001d4c4:	f10e 0201 	add.w	r2, lr, #1
9001d4c8:	fa1f fc8c 	uxth.w	ip, ip
9001d4cc:	b2ad      	uxth	r5, r5
9001d4ce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d4d2:	9a02      	ldr	r2, [sp, #8]
9001d4d4:	1c6e      	adds	r6, r5, #1
9001d4d6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001d4da:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001d4de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d4e2:	ea46 0e0e 	orr.w	lr, r6, lr
9001d4e6:	f10c 0601 	add.w	r6, ip, #1
9001d4ea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d4ee:	0976      	lsrs	r6, r6, #5
9001d4f0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d4f4:	ea4e 0e06 	orr.w	lr, lr, r6
9001d4f8:	f824 e002 	strh.w	lr, [r4, r2]
9001d4fc:	e7b3      	b.n	9001d466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d4fe:	f04f 0800 	mov.w	r8, #0
9001d502:	eba3 0208 	sub.w	r2, r3, r8
9001d506:	2a00      	cmp	r2, #0
9001d508:	f77f af35 	ble.w	9001d376 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d50c:	1402      	asrs	r2, r0, #16
9001d50e:	9e00      	ldr	r6, [sp, #0]
9001d510:	140d      	asrs	r5, r1, #16
9001d512:	fb06 2505 	mla	r5, r6, r5, r2
9001d516:	9e01      	ldr	r6, [sp, #4]
9001d518:	086a      	lsrs	r2, r5, #1
9001d51a:	07ed      	lsls	r5, r5, #31
9001d51c:	5cb2      	ldrb	r2, [r6, r2]
9001d51e:	bf54      	ite	pl
9001d520:	f002 020f 	andpl.w	r2, r2, #15
9001d524:	1112      	asrmi	r2, r2, #4
9001d526:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d52a:	b2d2      	uxtb	r2, r2
9001d52c:	b1c2      	cbz	r2, 9001d560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d52e:	9d04      	ldr	r5, [sp, #16]
9001d530:	436a      	muls	r2, r5
9001d532:	1c55      	adds	r5, r2, #1
9001d534:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d538:	4d2d      	ldr	r5, [pc, #180]	@ (9001d5f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d53a:	1212      	asrs	r2, r2, #8
9001d53c:	682e      	ldr	r6, [r5, #0]
9001d53e:	2aff      	cmp	r2, #255	@ 0xff
9001d540:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001d544:	d113      	bne.n	9001d56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d546:	0972      	lsrs	r2, r6, #5
9001d548:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001d54c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001d550:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d554:	f025 0507 	bic.w	r5, r5, #7
9001d558:	4315      	orrs	r5, r2
9001d55a:	4335      	orrs	r5, r6
9001d55c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001d560:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d562:	f108 0801 	add.w	r8, r8, #1
9001d566:	4410      	add	r0, r2
9001d568:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d56a:	4411      	add	r1, r2
9001d56c:	e7c9      	b.n	9001d502 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d56e:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d572:	fa1f fa82 	uxth.w	sl, r2
9001d576:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001d57a:	43d2      	mvns	r2, r2
9001d57c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d580:	fb17 f70a 	smulbb	r7, r7, sl
9001d584:	b2d2      	uxtb	r2, r2
9001d586:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d58a:	b2f6      	uxtb	r6, r6
9001d58c:	b2ed      	uxtb	r5, r5
9001d58e:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d592:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d596:	fb16 f60a 	smulbb	r6, r6, sl
9001d59a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d59e:	fa1f fc8c 	uxth.w	ip, ip
9001d5a2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d5a6:	fb15 f50a 	smulbb	r5, r5, sl
9001d5aa:	fa5f fe8e 	uxtb.w	lr, lr
9001d5ae:	fb0e 6602 	mla	r6, lr, r2, r6
9001d5b2:	fb07 5702 	mla	r7, r7, r2, r5
9001d5b6:	f10c 0201 	add.w	r2, ip, #1
9001d5ba:	b2b6      	uxth	r6, r6
9001d5bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d5c0:	1c75      	adds	r5, r6, #1
9001d5c2:	b2bf      	uxth	r7, r7
9001d5c4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d5c8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d5cc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d5d0:	ea45 0c0c 	orr.w	ip, r5, ip
9001d5d4:	1c7d      	adds	r5, r7, #1
9001d5d6:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001d5da:	096d      	lsrs	r5, r5, #5
9001d5dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d5e0:	ea4c 0c05 	orr.w	ip, ip, r5
9001d5e4:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001d5e8:	e7ba      	b.n	9001d560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d5ea:	b007      	add	sp, #28
9001d5ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d5f0:	24021d74 	.word	0x24021d74

9001d5f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5f8:	b087      	sub	sp, #28
9001d5fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d5fe:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001d908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001d602:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d604:	9101      	str	r1, [sp, #4]
9001d606:	9205      	str	r2, [sp, #20]
9001d608:	6841      	ldr	r1, [r0, #4]
9001d60a:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001d60e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d612:	fb01 2404 	mla	r4, r1, r4, r2
9001d616:	6802      	ldr	r2, [r0, #0]
9001d618:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d61c:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d620:	3201      	adds	r2, #1
9001d622:	f022 0201 	bic.w	r2, r2, #1
9001d626:	9202      	str	r2, [sp, #8]
9001d628:	f8db 2000 	ldr.w	r2, [fp]
9001d62c:	9203      	str	r2, [sp, #12]
9001d62e:	9a01      	ldr	r2, [sp, #4]
9001d630:	2a00      	cmp	r2, #0
9001d632:	dc03      	bgt.n	9001d63c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001d634:	9a05      	ldr	r2, [sp, #20]
9001d636:	2a00      	cmp	r2, #0
9001d638:	f340 8162 	ble.w	9001d900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d63c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d63e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001d642:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d646:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d648:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001d64c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d650:	2b00      	cmp	r3, #0
9001d652:	dd0e      	ble.n	9001d672 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d654:	1402      	asrs	r2, r0, #16
9001d656:	d405      	bmi.n	9001d664 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d658:	42ba      	cmp	r2, r7
9001d65a:	da03      	bge.n	9001d664 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d65c:	140a      	asrs	r2, r1, #16
9001d65e:	d401      	bmi.n	9001d664 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d660:	42b2      	cmp	r2, r6
9001d662:	db07      	blt.n	9001d674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d664:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d666:	3b01      	subs	r3, #1
9001d668:	3402      	adds	r4, #2
9001d66a:	4410      	add	r0, r2
9001d66c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d66e:	4411      	add	r1, r2
9001d670:	e7ee      	b.n	9001d650 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001d672:	d017      	beq.n	9001d6a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001d674:	1e5a      	subs	r2, r3, #1
9001d676:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d678:	fb05 0502 	mla	r5, r5, r2, r0
9001d67c:	142d      	asrs	r5, r5, #16
9001d67e:	d409      	bmi.n	9001d694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d680:	42bd      	cmp	r5, r7
9001d682:	da07      	bge.n	9001d694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d684:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d686:	fb05 1202 	mla	r2, r5, r2, r1
9001d68a:	1412      	asrs	r2, r2, #16
9001d68c:	d402      	bmi.n	9001d694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d68e:	42b2      	cmp	r2, r6
9001d690:	f2c0 80c3 	blt.w	9001d81a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001d694:	2500      	movs	r5, #0
9001d696:	195a      	adds	r2, r3, r5
9001d698:	2a00      	cmp	r2, #0
9001d69a:	dc3f      	bgt.n	9001d71c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d69c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d6a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d6a4:	9b01      	ldr	r3, [sp, #4]
9001d6a6:	2b00      	cmp	r3, #0
9001d6a8:	f340 812a 	ble.w	9001d900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d6ac:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d6b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d6b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d6b6:	eeb0 6a62 	vmov.f32	s12, s5
9001d6ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d6be:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d6c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d6c6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d6ca:	eeb0 6a43 	vmov.f32	s12, s6
9001d6ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d6d2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d6d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d6da:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d6de:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d6e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d6e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d6ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d6ee:	ee12 2a90 	vmov	r2, s5
9001d6f2:	eef0 2a47 	vmov.f32	s5, s14
9001d6f6:	fb92 f3f3 	sdiv	r3, r2, r3
9001d6fa:	ee13 2a10 	vmov	r2, s6
9001d6fe:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d700:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d702:	eeb0 3a67 	vmov.f32	s6, s15
9001d706:	fb92 f3f3 	sdiv	r3, r2, r3
9001d70a:	9314      	str	r3, [sp, #80]	@ 0x50
9001d70c:	9b01      	ldr	r3, [sp, #4]
9001d70e:	9a05      	ldr	r2, [sp, #20]
9001d710:	3b01      	subs	r3, #1
9001d712:	9301      	str	r3, [sp, #4]
9001d714:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d716:	bf08      	it	eq
9001d718:	4613      	moveq	r3, r2
9001d71a:	e788      	b.n	9001d62e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001d71c:	1406      	asrs	r6, r0, #16
9001d71e:	d42c      	bmi.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d720:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d724:	42b2      	cmp	r2, r6
9001d726:	dd28      	ble.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d728:	140f      	asrs	r7, r1, #16
9001d72a:	d426      	bmi.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d72c:	f8db 200c 	ldr.w	r2, [fp, #12]
9001d730:	42ba      	cmp	r2, r7
9001d732:	dd22      	ble.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d734:	9a02      	ldr	r2, [sp, #8]
9001d736:	fb07 6602 	mla	r6, r7, r2, r6
9001d73a:	9f03      	ldr	r7, [sp, #12]
9001d73c:	0872      	lsrs	r2, r6, #1
9001d73e:	07f6      	lsls	r6, r6, #31
9001d740:	5cba      	ldrb	r2, [r7, r2]
9001d742:	bf54      	ite	pl
9001d744:	f002 020f 	andpl.w	r2, r2, #15
9001d748:	1112      	asrmi	r2, r2, #4
9001d74a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d74e:	b2d2      	uxtb	r2, r2
9001d750:	2aff      	cmp	r2, #255	@ 0xff
9001d752:	d118      	bne.n	9001d786 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001d754:	f06f 0601 	mvn.w	r6, #1
9001d758:	f8d8 2000 	ldr.w	r2, [r8]
9001d75c:	fb06 f705 	mul.w	r7, r6, r5
9001d760:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001d764:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001d768:	0956      	lsrs	r6, r2, #5
9001d76a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d76e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d772:	ea4c 0606 	orr.w	r6, ip, r6
9001d776:	4316      	orrs	r6, r2
9001d778:	53e6      	strh	r6, [r4, r7]
9001d77a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d77c:	3d01      	subs	r5, #1
9001d77e:	4410      	add	r0, r2
9001d780:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d782:	4411      	add	r1, r2
9001d784:	e787      	b.n	9001d696 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d786:	2a00      	cmp	r2, #0
9001d788:	d0f7      	beq.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d78a:	f06f 0601 	mvn.w	r6, #1
9001d78e:	f8d8 c000 	ldr.w	ip, [r8]
9001d792:	fa1f f982 	uxth.w	r9, r2
9001d796:	43d2      	mvns	r2, r2
9001d798:	436e      	muls	r6, r5
9001d79a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001d79e:	b2d2      	uxtb	r2, r2
9001d7a0:	f834 e006 	ldrh.w	lr, [r4, r6]
9001d7a4:	fb1a fa09 	smulbb	sl, sl, r9
9001d7a8:	9604      	str	r6, [sp, #16]
9001d7aa:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001d7ae:	ea4f 272e 	mov.w	r7, lr, asr #8
9001d7b2:	fb16 f609 	smulbb	r6, r6, r9
9001d7b6:	fa5f fc8c 	uxtb.w	ip, ip
9001d7ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d7be:	fb1c fc09 	smulbb	ip, ip, r9
9001d7c2:	fb07 6702 	mla	r7, r7, r2, r6
9001d7c6:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d7ca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d7ce:	b2bf      	uxth	r7, r7
9001d7d0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d7d4:	fa5f fe8e 	uxtb.w	lr, lr
9001d7d8:	fb06 a602 	mla	r6, r6, r2, sl
9001d7dc:	fb0e cc02 	mla	ip, lr, r2, ip
9001d7e0:	1c7a      	adds	r2, r7, #1
9001d7e2:	b2b6      	uxth	r6, r6
9001d7e4:	fa1f fc8c 	uxth.w	ip, ip
9001d7e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d7ec:	9a04      	ldr	r2, [sp, #16]
9001d7ee:	f10c 0a01 	add.w	sl, ip, #1
9001d7f2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d7f6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001d7fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d7fe:	ea4a 0707 	orr.w	r7, sl, r7
9001d802:	f106 0a01 	add.w	sl, r6, #1
9001d806:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d80a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d80e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d812:	ea47 070a 	orr.w	r7, r7, sl
9001d816:	52a7      	strh	r7, [r4, r2]
9001d818:	e7af      	b.n	9001d77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d81a:	f04f 0e00 	mov.w	lr, #0
9001d81e:	eba3 020e 	sub.w	r2, r3, lr
9001d822:	2a00      	cmp	r2, #0
9001d824:	f77f af3a 	ble.w	9001d69c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d828:	1402      	asrs	r2, r0, #16
9001d82a:	9e02      	ldr	r6, [sp, #8]
9001d82c:	140d      	asrs	r5, r1, #16
9001d82e:	fb06 2505 	mla	r5, r6, r5, r2
9001d832:	9e03      	ldr	r6, [sp, #12]
9001d834:	086a      	lsrs	r2, r5, #1
9001d836:	07ed      	lsls	r5, r5, #31
9001d838:	5cb2      	ldrb	r2, [r6, r2]
9001d83a:	bf54      	ite	pl
9001d83c:	f002 020f 	andpl.w	r2, r2, #15
9001d840:	1112      	asrmi	r2, r2, #4
9001d842:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d846:	b2d2      	uxtb	r2, r2
9001d848:	2aff      	cmp	r2, #255	@ 0xff
9001d84a:	d115      	bne.n	9001d878 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001d84c:	f8d8 5000 	ldr.w	r5, [r8]
9001d850:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001d854:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001d858:	096a      	lsrs	r2, r5, #5
9001d85a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d85e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d862:	4332      	orrs	r2, r6
9001d864:	432a      	orrs	r2, r5
9001d866:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001d86a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d86c:	f10e 0e01 	add.w	lr, lr, #1
9001d870:	4410      	add	r0, r2
9001d872:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d874:	4411      	add	r1, r2
9001d876:	e7d2      	b.n	9001d81e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001d878:	2a00      	cmp	r2, #0
9001d87a:	d0f6      	beq.n	9001d86a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d87c:	f8d8 7000 	ldr.w	r7, [r8]
9001d880:	fa1f f982 	uxth.w	r9, r2
9001d884:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d888:	43d2      	mvns	r2, r2
9001d88a:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001d88e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001d892:	ea4f 262c 	mov.w	r6, ip, asr #8
9001d896:	fb15 f509 	smulbb	r5, r5, r9
9001d89a:	b2d2      	uxtb	r2, r2
9001d89c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d8a0:	b2ff      	uxtb	r7, r7
9001d8a2:	fb1a fa09 	smulbb	sl, sl, r9
9001d8a6:	fb06 5602 	mla	r6, r6, r2, r5
9001d8aa:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d8ae:	fb17 f709 	smulbb	r7, r7, r9
9001d8b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d8b6:	b2b6      	uxth	r6, r6
9001d8b8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d8bc:	fa5f fc8c 	uxtb.w	ip, ip
9001d8c0:	fb05 a502 	mla	r5, r5, r2, sl
9001d8c4:	fb0c 7702 	mla	r7, ip, r2, r7
9001d8c8:	1c72      	adds	r2, r6, #1
9001d8ca:	b2ad      	uxth	r5, r5
9001d8cc:	b2bf      	uxth	r7, r7
9001d8ce:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001d8d2:	f107 0a01 	add.w	sl, r7, #1
9001d8d6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d8da:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d8de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d8e2:	ea4a 0606 	orr.w	r6, sl, r6
9001d8e6:	f105 0a01 	add.w	sl, r5, #1
9001d8ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d8ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d8f2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d8f6:	ea46 060a 	orr.w	r6, r6, sl
9001d8fa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001d8fe:	e7b4      	b.n	9001d86a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d900:	b007      	add	sp, #28
9001d902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d906:	bf00      	nop
9001d908:	24021d74 	.word	0x24021d74

9001d90c <_ZN8touchgfx8LCD16bppD1Ev>:
9001d90c:	4770      	bx	lr

9001d90e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001d90e:	4770      	bx	lr

9001d910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001d910:	4770      	bx	lr

9001d912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001d912:	4770      	bx	lr

9001d914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001d914:	4770      	bx	lr

9001d916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001d916:	4770      	bx	lr

9001d918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001d918:	4770      	bx	lr

9001d91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001d91a:	4770      	bx	lr

9001d91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001d91c:	4770      	bx	lr

9001d91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d91e:	4770      	bx	lr

9001d920 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d920:	4770      	bx	lr

9001d922 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d922:	4770      	bx	lr

9001d924 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d924:	4770      	bx	lr

9001d926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d926:	4770      	bx	lr

9001d928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d928:	4770      	bx	lr

9001d92a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d92a:	4770      	bx	lr

9001d92c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d92c:	4770      	bx	lr

9001d92e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d92e:	4770      	bx	lr

9001d930 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d930:	4770      	bx	lr

9001d932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d932:	4770      	bx	lr

9001d934 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d934:	4770      	bx	lr

9001d936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d936:	4770      	bx	lr

9001d938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d938:	4770      	bx	lr

9001d93a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d93a:	4770      	bx	lr

9001d93c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d93c:	4770      	bx	lr

9001d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d93e:	4770      	bx	lr

9001d940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001d940:	4770      	bx	lr

9001d942 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d942:	4770      	bx	lr

9001d944 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001d944:	4770      	bx	lr

9001d946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d946:	4770      	bx	lr

9001d948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d948:	4770      	bx	lr

9001d94a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d94a:	4770      	bx	lr

9001d94c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d94c:	4770      	bx	lr

9001d94e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001d94e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d952:	b088      	sub	sp, #32
9001d954:	4606      	mov	r6, r0
9001d956:	4688      	mov	r8, r1
9001d958:	4691      	mov	r9, r2
9001d95a:	ac08      	add	r4, sp, #32
9001d95c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001d960:	4620      	mov	r0, r4
9001d962:	f7fd fc33 	bl	9001b1cc <_ZNK8touchgfx6Bitmap7getDataEv>
9001d966:	6833      	ldr	r3, [r6, #0]
9001d968:	4605      	mov	r5, r0
9001d96a:	4620      	mov	r0, r4
9001d96c:	699f      	ldr	r7, [r3, #24]
9001d96e:	f7fd fb3b 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d972:	4682      	mov	sl, r0
9001d974:	4620      	mov	r0, r4
9001d976:	f7fd fb6b 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d97a:	9500      	str	r5, [sp, #0]
9001d97c:	464b      	mov	r3, r9
9001d97e:	4642      	mov	r2, r8
9001d980:	4631      	mov	r1, r6
9001d982:	e9cd a001 	strd	sl, r0, [sp, #4]
9001d986:	a806      	add	r0, sp, #24
9001d988:	47b8      	blx	r7
9001d98a:	4628      	mov	r0, r5
9001d98c:	b008      	add	sp, #32
9001d98e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001d994 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001d994:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001d998:	2300      	movs	r3, #0
9001d99a:	9300      	str	r3, [sp, #0]
9001d99c:	4b3d      	ldr	r3, [pc, #244]	@ (9001da94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001d99e:	781b      	ldrb	r3, [r3, #0]
9001d9a0:	2b00      	cmp	r3, #0
9001d9a2:	d137      	bne.n	9001da14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001d9a4:	4a3c      	ldr	r2, [pc, #240]	@ (9001da98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d9a6:	f9b2 2000 	ldrsh.w	r2, [r2]
9001d9aa:	f8ad 2004 	strh.w	r2, [sp, #4]
9001d9ae:	2b00      	cmp	r3, #0
9001d9b0:	d132      	bne.n	9001da18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001d9b2:	4b3a      	ldr	r3, [pc, #232]	@ (9001da9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d9b4:	f9b3 3000 	ldrsh.w	r3, [r3]
9001d9b8:	ac02      	add	r4, sp, #8
9001d9ba:	6808      	ldr	r0, [r1, #0]
9001d9bc:	f8ad 3006 	strh.w	r3, [sp, #6]
9001d9c0:	ab02      	add	r3, sp, #8
9001d9c2:	6849      	ldr	r1, [r1, #4]
9001d9c4:	4d36      	ldr	r5, [pc, #216]	@ (9001daa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001d9c6:	c303      	stmia	r3!, {r0, r1}
9001d9c8:	4669      	mov	r1, sp
9001d9ca:	4620      	mov	r0, r4
9001d9cc:	f7f9 fbd8 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d9d0:	4668      	mov	r0, sp
9001d9d2:	f7f9 fbad 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d9d6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001d9da:	f8bd 2000 	ldrh.w	r2, [sp]
9001d9de:	462f      	mov	r7, r5
9001d9e0:	6828      	ldr	r0, [r5, #0]
9001d9e2:	4413      	add	r3, r2
9001d9e4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001d9e8:	f8ad 3008 	strh.w	r3, [sp, #8]
9001d9ec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001d9f0:	4413      	add	r3, r2
9001d9f2:	f8ad 300a 	strh.w	r3, [sp, #10]
9001d9f6:	6803      	ldr	r3, [r0, #0]
9001d9f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d9fa:	4798      	blx	r3
9001d9fc:	f010 0f01 	tst.w	r0, #1
9001da00:	d00c      	beq.n	9001da1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001da02:	6828      	ldr	r0, [r5, #0]
9001da04:	6803      	ldr	r3, [r0, #0]
9001da06:	e894 0006 	ldmia.w	r4, {r1, r2}
9001da0a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001da0c:	4798      	blx	r3
9001da0e:	b004      	add	sp, #16
9001da10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001da14:	4a21      	ldr	r2, [pc, #132]	@ (9001da9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001da16:	e7c6      	b.n	9001d9a6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001da18:	4b1f      	ldr	r3, [pc, #124]	@ (9001da98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001da1a:	e7cb      	b.n	9001d9b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001da1c:	6838      	ldr	r0, [r7, #0]
9001da1e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001da22:	6803      	ldr	r3, [r0, #0]
9001da24:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001da28:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001da2c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001da2e:	4798      	blx	r3
9001da30:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001da34:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001da38:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001da3c:	fb16 3602 	smlabb	r6, r6, r2, r3
9001da40:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001da44:	6838      	ldr	r0, [r7, #0]
9001da46:	6803      	ldr	r3, [r0, #0]
9001da48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001da4a:	4798      	blx	r3
9001da4c:	4a12      	ldr	r2, [pc, #72]	@ (9001da98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001da4e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001da52:	8813      	ldrh	r3, [r2, #0]
9001da54:	4691      	mov	r9, r2
9001da56:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001da5a:	435d      	muls	r5, r3
9001da5c:	fb03 1404 	mla	r4, r3, r4, r1
9001da60:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001da64:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001da68:	6838      	ldr	r0, [r7, #0]
9001da6a:	42ac      	cmp	r4, r5
9001da6c:	6803      	ldr	r3, [r0, #0]
9001da6e:	d20e      	bcs.n	9001da8e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001da70:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001da74:	4632      	mov	r2, r6
9001da76:	4643      	mov	r3, r8
9001da78:	4621      	mov	r1, r4
9001da7a:	47d0      	blx	sl
9001da7c:	f8b9 3000 	ldrh.w	r3, [r9]
9001da80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001da84:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001da88:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001da8c:	e7ec      	b.n	9001da68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001da8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001da90:	4798      	blx	r3
9001da92:	e7bc      	b.n	9001da0e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001da94:	24021d5c 	.word	0x24021d5c
9001da98:	24021d5e 	.word	0x24021d5e
9001da9c:	24021d60 	.word	0x24021d60
9001daa0:	24021d64 	.word	0x24021d64

9001daa4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001daa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001daa8:	b08b      	sub	sp, #44	@ 0x2c
9001daaa:	460f      	mov	r7, r1
9001daac:	4616      	mov	r6, r2
9001daae:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001dab2:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001dab6:	f1bb 0f00 	cmp.w	fp, #0
9001daba:	d04a      	beq.n	9001db52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001dabc:	6810      	ldr	r0, [r2, #0]
9001dabe:	ad06      	add	r5, sp, #24
9001dac0:	6851      	ldr	r1, [r2, #4]
9001dac2:	c503      	stmia	r5!, {r0, r1}
9001dac4:	6818      	ldr	r0, [r3, #0]
9001dac6:	ad08      	add	r5, sp, #32
9001dac8:	6859      	ldr	r1, [r3, #4]
9001daca:	c503      	stmia	r5!, {r0, r1}
9001dacc:	a806      	add	r0, sp, #24
9001dace:	f7f9 fb2f 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dad2:	4631      	mov	r1, r6
9001dad4:	a808      	add	r0, sp, #32
9001dad6:	f7f9 fb53 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dada:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001dade:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001dae2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001dae6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001daea:	fb16 2103 	smlabb	r1, r6, r3, r2
9001daee:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001daf2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001daf6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001dafa:	4f5f      	ldr	r7, [pc, #380]	@ (9001dc78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001dafc:	440a      	add	r2, r1
9001dafe:	6838      	ldr	r0, [r7, #0]
9001db00:	46b9      	mov	r9, r7
9001db02:	f8ad 2020 	strh.w	r2, [sp, #32]
9001db06:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001db0a:	4413      	add	r3, r2
9001db0c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001db10:	6803      	ldr	r3, [r0, #0]
9001db12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001db14:	4798      	blx	r3
9001db16:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001db1a:	d11d      	bne.n	9001db58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001db1c:	b9fc      	cbnz	r4, 9001db5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001db1e:	f010 0f01 	tst.w	r0, #1
9001db22:	d01c      	beq.n	9001db5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001db24:	f8d9 0000 	ldr.w	r0, [r9]
9001db28:	2700      	movs	r7, #0
9001db2a:	b2ad      	uxth	r5, r5
9001db2c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001db30:	6801      	ldr	r1, [r0, #0]
9001db32:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001db36:	f8cd b00c 	str.w	fp, [sp, #12]
9001db3a:	9501      	str	r5, [sp, #4]
9001db3c:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001db40:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001db44:	9402      	str	r4, [sp, #8]
9001db46:	fa1f f488 	uxth.w	r4, r8
9001db4a:	9400      	str	r4, [sp, #0]
9001db4c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001db4e:	4631      	mov	r1, r6
9001db50:	47a0      	blx	r4
9001db52:	b00b      	add	sp, #44	@ 0x2c
9001db54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001db58:	f010 0f04 	tst.w	r0, #4
9001db5c:	e7e1      	b.n	9001db22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001db5e:	f8d9 0000 	ldr.w	r0, [r9]
9001db62:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001db66:	6803      	ldr	r3, [r0, #0]
9001db68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001db6a:	4798      	blx	r3
9001db6c:	4b43      	ldr	r3, [pc, #268]	@ (9001dc7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001db6e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001db72:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001db76:	881a      	ldrh	r2, [r3, #0]
9001db78:	469a      	mov	sl, r3
9001db7a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001db7e:	fb05 f502 	mul.w	r5, r5, r2
9001db82:	fb02 1404 	mla	r4, r2, r4, r1
9001db86:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001db8a:	d059      	beq.n	9001dc40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001db8c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001db90:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001db94:	fa1f f28b 	uxth.w	r2, fp
9001db98:	469e      	mov	lr, r3
9001db9a:	fa1f f989 	uxth.w	r9, r9
9001db9e:	42ac      	cmp	r4, r5
9001dba0:	d264      	bcs.n	9001dc6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001dba2:	eb04 0a07 	add.w	sl, r4, r7
9001dba6:	4554      	cmp	r4, sl
9001dba8:	d23d      	bcs.n	9001dc26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001dbaa:	8821      	ldrh	r1, [r4, #0]
9001dbac:	f836 3b02 	ldrh.w	r3, [r6], #2
9001dbb0:	1208      	asrs	r0, r1, #8
9001dbb2:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001dbb6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001dbba:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001dbbe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dbc2:	00c9      	lsls	r1, r1, #3
9001dbc4:	fb10 f009 	smulbb	r0, r0, r9
9001dbc8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001dbcc:	b2c9      	uxtb	r1, r1
9001dbce:	fb0c 0c02 	mla	ip, ip, r2, r0
9001dbd2:	10d8      	asrs	r0, r3, #3
9001dbd4:	fb1b fb09 	smulbb	fp, fp, r9
9001dbd8:	00db      	lsls	r3, r3, #3
9001dbda:	fa1f fc8c 	uxth.w	ip, ip
9001dbde:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001dbe2:	fb11 f109 	smulbb	r1, r1, r9
9001dbe6:	b2db      	uxtb	r3, r3
9001dbe8:	fb00 b002 	mla	r0, r0, r2, fp
9001dbec:	f10c 0b01 	add.w	fp, ip, #1
9001dbf0:	fb03 1302 	mla	r3, r3, r2, r1
9001dbf4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001dbf8:	b29b      	uxth	r3, r3
9001dbfa:	b280      	uxth	r0, r0
9001dbfc:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001dc00:	f103 0c01 	add.w	ip, r3, #1
9001dc04:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001dc08:	1c43      	adds	r3, r0, #1
9001dc0a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001dc0e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001dc12:	0940      	lsrs	r0, r0, #5
9001dc14:	ea4c 0c0b 	orr.w	ip, ip, fp
9001dc18:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001dc1c:	ea4c 0c00 	orr.w	ip, ip, r0
9001dc20:	f824 cb02 	strh.w	ip, [r4], #2
9001dc24:	e7bf      	b.n	9001dba6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001dc26:	f8be 3000 	ldrh.w	r3, [lr]
9001dc2a:	eba3 0308 	sub.w	r3, r3, r8
9001dc2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dc32:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001dc36:	eba3 0308 	sub.w	r3, r3, r8
9001dc3a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001dc3e:	e7ae      	b.n	9001db9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001dc40:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001dc44:	f8d9 0000 	ldr.w	r0, [r9]
9001dc48:	42ac      	cmp	r4, r5
9001dc4a:	6803      	ldr	r3, [r0, #0]
9001dc4c:	d20e      	bcs.n	9001dc6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001dc4e:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001dc52:	4632      	mov	r2, r6
9001dc54:	463b      	mov	r3, r7
9001dc56:	4621      	mov	r1, r4
9001dc58:	47c0      	blx	r8
9001dc5a:	f8ba 3000 	ldrh.w	r3, [sl]
9001dc5e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dc62:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001dc66:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001dc6a:	e7eb      	b.n	9001dc44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001dc6c:	4b02      	ldr	r3, [pc, #8]	@ (9001dc78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001dc6e:	6818      	ldr	r0, [r3, #0]
9001dc70:	6803      	ldr	r3, [r0, #0]
9001dc72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001dc74:	4798      	blx	r3
9001dc76:	e76c      	b.n	9001db52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001dc78:	24021d64 	.word	0x24021d64
9001dc7c:	24021d5e 	.word	0x24021d5e

9001dc80 <_ZN8touchgfx8LCD16bppD0Ev>:
9001dc80:	b510      	push	{r4, lr}
9001dc82:	4604      	mov	r4, r0
9001dc84:	218c      	movs	r1, #140	@ 0x8c
9001dc86:	f00c fa5d 	bl	9002a144 <_ZdlPvj>
9001dc8a:	4620      	mov	r0, r4
9001dc8c:	bd10      	pop	{r4, pc}

9001dc8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001dc8e:	b510      	push	{r4, lr}
9001dc90:	4604      	mov	r4, r0
9001dc92:	2104      	movs	r1, #4
9001dc94:	f00c fa56 	bl	9002a144 <_ZdlPvj>
9001dc98:	4620      	mov	r0, r4
9001dc9a:	bd10      	pop	{r4, pc}

9001dc9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001dc9c:	b510      	push	{r4, lr}
9001dc9e:	4604      	mov	r4, r0
9001dca0:	2104      	movs	r1, #4
9001dca2:	f00c fa4f 	bl	9002a144 <_ZdlPvj>
9001dca6:	4620      	mov	r0, r4
9001dca8:	bd10      	pop	{r4, pc}

9001dcaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001dcaa:	b510      	push	{r4, lr}
9001dcac:	4604      	mov	r4, r0
9001dcae:	f640 0144 	movw	r1, #2116	@ 0x844
9001dcb2:	f00c fa47 	bl	9002a144 <_ZdlPvj>
9001dcb6:	4620      	mov	r0, r4
9001dcb8:	bd10      	pop	{r4, pc}

9001dcba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001dcba:	b510      	push	{r4, lr}
9001dcbc:	4604      	mov	r4, r0
9001dcbe:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001dcc2:	f00c fa3f 	bl	9002a144 <_ZdlPvj>
9001dcc6:	4620      	mov	r0, r4
9001dcc8:	bd10      	pop	{r4, pc}

9001dcca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001dcca:	b510      	push	{r4, lr}
9001dccc:	4604      	mov	r4, r0
9001dcce:	2104      	movs	r1, #4
9001dcd0:	f00c fa38 	bl	9002a144 <_ZdlPvj>
9001dcd4:	4620      	mov	r0, r4
9001dcd6:	bd10      	pop	{r4, pc}

9001dcd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001dcd8:	b510      	push	{r4, lr}
9001dcda:	4604      	mov	r4, r0
9001dcdc:	2104      	movs	r1, #4
9001dcde:	f00c fa31 	bl	9002a144 <_ZdlPvj>
9001dce2:	4620      	mov	r0, r4
9001dce4:	bd10      	pop	{r4, pc}

9001dce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001dce6:	b510      	push	{r4, lr}
9001dce8:	4604      	mov	r4, r0
9001dcea:	2104      	movs	r1, #4
9001dcec:	f00c fa2a 	bl	9002a144 <_ZdlPvj>
9001dcf0:	4620      	mov	r0, r4
9001dcf2:	bd10      	pop	{r4, pc}

9001dcf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001dcf4:	b510      	push	{r4, lr}
9001dcf6:	4604      	mov	r4, r0
9001dcf8:	2104      	movs	r1, #4
9001dcfa:	f00c fa23 	bl	9002a144 <_ZdlPvj>
9001dcfe:	4620      	mov	r0, r4
9001dd00:	bd10      	pop	{r4, pc}

9001dd02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001dd02:	b510      	push	{r4, lr}
9001dd04:	4604      	mov	r4, r0
9001dd06:	2104      	movs	r1, #4
9001dd08:	f00c fa1c 	bl	9002a144 <_ZdlPvj>
9001dd0c:	4620      	mov	r0, r4
9001dd0e:	bd10      	pop	{r4, pc}

9001dd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001dd10:	b510      	push	{r4, lr}
9001dd12:	4604      	mov	r4, r0
9001dd14:	2104      	movs	r1, #4
9001dd16:	f00c fa15 	bl	9002a144 <_ZdlPvj>
9001dd1a:	4620      	mov	r0, r4
9001dd1c:	bd10      	pop	{r4, pc}

9001dd1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001dd1e:	b510      	push	{r4, lr}
9001dd20:	4604      	mov	r4, r0
9001dd22:	2104      	movs	r1, #4
9001dd24:	f00c fa0e 	bl	9002a144 <_ZdlPvj>
9001dd28:	4620      	mov	r0, r4
9001dd2a:	bd10      	pop	{r4, pc}

9001dd2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001dd2c:	b510      	push	{r4, lr}
9001dd2e:	4604      	mov	r4, r0
9001dd30:	2104      	movs	r1, #4
9001dd32:	f00c fa07 	bl	9002a144 <_ZdlPvj>
9001dd36:	4620      	mov	r0, r4
9001dd38:	bd10      	pop	{r4, pc}

9001dd3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001dd3a:	b510      	push	{r4, lr}
9001dd3c:	4604      	mov	r4, r0
9001dd3e:	2104      	movs	r1, #4
9001dd40:	f00c fa00 	bl	9002a144 <_ZdlPvj>
9001dd44:	4620      	mov	r0, r4
9001dd46:	bd10      	pop	{r4, pc}

9001dd48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001dd48:	b510      	push	{r4, lr}
9001dd4a:	4604      	mov	r4, r0
9001dd4c:	2104      	movs	r1, #4
9001dd4e:	f00c f9f9 	bl	9002a144 <_ZdlPvj>
9001dd52:	4620      	mov	r0, r4
9001dd54:	bd10      	pop	{r4, pc}

9001dd56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001dd56:	b510      	push	{r4, lr}
9001dd58:	4604      	mov	r4, r0
9001dd5a:	2104      	movs	r1, #4
9001dd5c:	f00c f9f2 	bl	9002a144 <_ZdlPvj>
9001dd60:	4620      	mov	r0, r4
9001dd62:	bd10      	pop	{r4, pc}

9001dd64 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001dd64:	b510      	push	{r4, lr}
9001dd66:	4604      	mov	r4, r0
9001dd68:	2104      	movs	r1, #4
9001dd6a:	f00c f9eb 	bl	9002a144 <_ZdlPvj>
9001dd6e:	4620      	mov	r0, r4
9001dd70:	bd10      	pop	{r4, pc}

9001dd72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001dd72:	b510      	push	{r4, lr}
9001dd74:	4604      	mov	r4, r0
9001dd76:	2104      	movs	r1, #4
9001dd78:	f00c f9e4 	bl	9002a144 <_ZdlPvj>
9001dd7c:	4620      	mov	r0, r4
9001dd7e:	bd10      	pop	{r4, pc}

9001dd80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001dd80:	b510      	push	{r4, lr}
9001dd82:	4604      	mov	r4, r0
9001dd84:	2104      	movs	r1, #4
9001dd86:	f00c f9dd 	bl	9002a144 <_ZdlPvj>
9001dd8a:	4620      	mov	r0, r4
9001dd8c:	bd10      	pop	{r4, pc}

9001dd8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001dd8e:	b510      	push	{r4, lr}
9001dd90:	4604      	mov	r4, r0
9001dd92:	2104      	movs	r1, #4
9001dd94:	f00c f9d6 	bl	9002a144 <_ZdlPvj>
9001dd98:	4620      	mov	r0, r4
9001dd9a:	bd10      	pop	{r4, pc}

9001dd9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001dd9c:	b510      	push	{r4, lr}
9001dd9e:	4604      	mov	r4, r0
9001dda0:	2104      	movs	r1, #4
9001dda2:	f00c f9cf 	bl	9002a144 <_ZdlPvj>
9001dda6:	4620      	mov	r0, r4
9001dda8:	bd10      	pop	{r4, pc}

9001ddaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ddaa:	b510      	push	{r4, lr}
9001ddac:	4604      	mov	r4, r0
9001ddae:	2104      	movs	r1, #4
9001ddb0:	f00c f9c8 	bl	9002a144 <_ZdlPvj>
9001ddb4:	4620      	mov	r0, r4
9001ddb6:	bd10      	pop	{r4, pc}

9001ddb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ddb8:	b510      	push	{r4, lr}
9001ddba:	4604      	mov	r4, r0
9001ddbc:	2104      	movs	r1, #4
9001ddbe:	f00c f9c1 	bl	9002a144 <_ZdlPvj>
9001ddc2:	4620      	mov	r0, r4
9001ddc4:	bd10      	pop	{r4, pc}

9001ddc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ddc6:	b510      	push	{r4, lr}
9001ddc8:	4604      	mov	r4, r0
9001ddca:	2104      	movs	r1, #4
9001ddcc:	f00c f9ba 	bl	9002a144 <_ZdlPvj>
9001ddd0:	4620      	mov	r0, r4
9001ddd2:	bd10      	pop	{r4, pc}

9001ddd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ddd4:	b510      	push	{r4, lr}
9001ddd6:	4604      	mov	r4, r0
9001ddd8:	2104      	movs	r1, #4
9001ddda:	f00c f9b3 	bl	9002a144 <_ZdlPvj>
9001ddde:	4620      	mov	r0, r4
9001dde0:	bd10      	pop	{r4, pc}

9001dde2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001dde2:	b510      	push	{r4, lr}
9001dde4:	4604      	mov	r4, r0
9001dde6:	2104      	movs	r1, #4
9001dde8:	f00c f9ac 	bl	9002a144 <_ZdlPvj>
9001ddec:	4620      	mov	r0, r4
9001ddee:	bd10      	pop	{r4, pc}

9001ddf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ddf0:	b510      	push	{r4, lr}
9001ddf2:	4604      	mov	r4, r0
9001ddf4:	2104      	movs	r1, #4
9001ddf6:	f00c f9a5 	bl	9002a144 <_ZdlPvj>
9001ddfa:	4620      	mov	r0, r4
9001ddfc:	bd10      	pop	{r4, pc}

9001ddfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ddfe:	b510      	push	{r4, lr}
9001de00:	4604      	mov	r4, r0
9001de02:	2104      	movs	r1, #4
9001de04:	f00c f99e 	bl	9002a144 <_ZdlPvj>
9001de08:	4620      	mov	r0, r4
9001de0a:	bd10      	pop	{r4, pc}

9001de0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001de0c:	b510      	push	{r4, lr}
9001de0e:	4604      	mov	r4, r0
9001de10:	2104      	movs	r1, #4
9001de12:	f00c f997 	bl	9002a144 <_ZdlPvj>
9001de16:	4620      	mov	r0, r4
9001de18:	bd10      	pop	{r4, pc}

9001de1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001de1a:	b510      	push	{r4, lr}
9001de1c:	4604      	mov	r4, r0
9001de1e:	2104      	movs	r1, #4
9001de20:	f00c f990 	bl	9002a144 <_ZdlPvj>
9001de24:	4620      	mov	r0, r4
9001de26:	bd10      	pop	{r4, pc}

9001de28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001de28:	b510      	push	{r4, lr}
9001de2a:	4604      	mov	r4, r0
9001de2c:	2104      	movs	r1, #4
9001de2e:	f00c f989 	bl	9002a144 <_ZdlPvj>
9001de32:	4620      	mov	r0, r4
9001de34:	bd10      	pop	{r4, pc}

9001de36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001de36:	b510      	push	{r4, lr}
9001de38:	4604      	mov	r4, r0
9001de3a:	2104      	movs	r1, #4
9001de3c:	f00c f982 	bl	9002a144 <_ZdlPvj>
9001de40:	4620      	mov	r0, r4
9001de42:	bd10      	pop	{r4, pc}

9001de44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001de44:	b510      	push	{r4, lr}
9001de46:	4604      	mov	r4, r0
9001de48:	2104      	movs	r1, #4
9001de4a:	f00c f97b 	bl	9002a144 <_ZdlPvj>
9001de4e:	4620      	mov	r0, r4
9001de50:	bd10      	pop	{r4, pc}
	...

9001de54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001de54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de58:	b08f      	sub	sp, #60	@ 0x3c
9001de5a:	4616      	mov	r6, r2
9001de5c:	4682      	mov	sl, r0
9001de5e:	460d      	mov	r5, r1
9001de60:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001de64:	9205      	str	r2, [sp, #20]
9001de66:	2a00      	cmp	r2, #0
9001de68:	f000 82b7 	beq.w	9001e3da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001de6c:	6830      	ldr	r0, [r6, #0]
9001de6e:	ac0a      	add	r4, sp, #40	@ 0x28
9001de70:	6871      	ldr	r1, [r6, #4]
9001de72:	c403      	stmia	r4!, {r0, r1}
9001de74:	6818      	ldr	r0, [r3, #0]
9001de76:	ac0c      	add	r4, sp, #48	@ 0x30
9001de78:	6859      	ldr	r1, [r3, #4]
9001de7a:	c403      	stmia	r4!, {r0, r1}
9001de7c:	a80a      	add	r0, sp, #40	@ 0x28
9001de7e:	f7f9 f957 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de82:	4631      	mov	r1, r6
9001de84:	a80c      	add	r0, sp, #48	@ 0x30
9001de86:	f7f9 f97b 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de8a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001de8e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001de92:	bfdb      	ittet	le
9001de94:	b293      	uxthle	r3, r2
9001de96:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001de9a:	2301      	movgt	r3, #1
9001de9c:	fb91 f3f3 	sdivle	r3, r1, r3
9001dea0:	9300      	str	r3, [sp, #0]
9001dea2:	f105 0308 	add.w	r3, r5, #8
9001dea6:	9900      	ldr	r1, [sp, #0]
9001dea8:	9306      	str	r3, [sp, #24]
9001deaa:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001deae:	440b      	add	r3, r1
9001deb0:	3b01      	subs	r3, #1
9001deb2:	fb93 f3f1 	sdiv	r3, r3, r1
9001deb6:	3b01      	subs	r3, #1
9001deb8:	9906      	ldr	r1, [sp, #24]
9001deba:	b29b      	uxth	r3, r3
9001debc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001dec0:	9900      	ldr	r1, [sp, #0]
9001dec2:	9307      	str	r3, [sp, #28]
9001dec4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001dec8:	fb93 f0f1 	sdiv	r0, r3, r1
9001decc:	b284      	uxth	r4, r0
9001dece:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001ded2:	9402      	str	r4, [sp, #8]
9001ded4:	9d02      	ldr	r5, [sp, #8]
9001ded6:	9c00      	ldr	r4, [sp, #0]
9001ded8:	fb05 3414 	mls	r4, r5, r4, r3
9001dedc:	fb14 f402 	smulbb	r4, r4, r2
9001dee0:	440c      	add	r4, r1
9001dee2:	b2a4      	uxth	r4, r4
9001dee4:	2d00      	cmp	r5, #0
9001dee6:	d06c      	beq.n	9001dfc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001dee8:	1e6a      	subs	r2, r5, #1
9001deea:	9806      	ldr	r0, [sp, #24]
9001deec:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001def0:	9a07      	ldr	r2, [sp, #28]
9001def2:	ba36      	rev	r6, r6
9001def4:	4416      	add	r6, r2
9001def6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001defa:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001defe:	4411      	add	r1, r2
9001df00:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001df04:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001e234 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001df08:	4413      	add	r3, r2
9001df0a:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001df0e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001df12:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001df16:	9301      	str	r3, [sp, #4]
9001df18:	4bc4      	ldr	r3, [pc, #784]	@ (9001e22c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001df1a:	6818      	ldr	r0, [r3, #0]
9001df1c:	6803      	ldr	r3, [r0, #0]
9001df1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001df20:	4798      	blx	r3
9001df22:	4bc3      	ldr	r3, [pc, #780]	@ (9001e230 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001df24:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001df28:	881b      	ldrh	r3, [r3, #0]
9001df2a:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001df2e:	fb03 2808 	mla	r8, r3, r8, r2
9001df32:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001df36:	436b      	muls	r3, r5
9001df38:	2500      	movs	r5, #0
9001df3a:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001df3e:	4629      	mov	r1, r5
9001df40:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001df44:	9309      	str	r3, [sp, #36]	@ 0x24
9001df46:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001df4a:	fb94 f3f3 	sdiv	r3, r4, r3
9001df4e:	9304      	str	r3, [sp, #16]
9001df50:	f10a 0304 	add.w	r3, sl, #4
9001df54:	4618      	mov	r0, r3
9001df56:	9308      	str	r3, [sp, #32]
9001df58:	f00c ff20 	bl	9002ad9c <memset>
9001df5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001df5e:	4543      	cmp	r3, r8
9001df60:	f240 8236 	bls.w	9001e3d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001df64:	2203      	movs	r2, #3
9001df66:	2107      	movs	r1, #7
9001df68:	200b      	movs	r0, #11
9001df6a:	2c00      	cmp	r4, #0
9001df6c:	f000 8131 	beq.w	9001e1d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001df70:	7833      	ldrb	r3, [r6, #0]
9001df72:	b2db      	uxtb	r3, r3
9001df74:	2bfe      	cmp	r3, #254	@ 0xfe
9001df76:	d126      	bne.n	9001dfc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001df78:	f896 e001 	ldrb.w	lr, [r6, #1]
9001df7c:	3c01      	subs	r4, #1
9001df7e:	f896 c002 	ldrb.w	ip, [r6, #2]
9001df82:	1d37      	adds	r7, r6, #4
9001df84:	fa5f fe8e 	uxtb.w	lr, lr
9001df88:	f896 b003 	ldrb.w	fp, [r6, #3]
9001df8c:	fa5f fc8c 	uxtb.w	ip, ip
9001df90:	f36e 0507 	bfi	r5, lr, #0, #8
9001df94:	fa5f fb8b 	uxtb.w	fp, fp
9001df98:	b2a4      	uxth	r4, r4
9001df9a:	f36c 250f 	bfi	r5, ip, #8, #8
9001df9e:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001dfa2:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001dfa6:	f36b 4517 	bfi	r5, fp, #16, #8
9001dfaa:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001dfae:	0e2b      	lsrs	r3, r5, #24
9001dfb0:	fb10 c303 	smlabb	r3, r0, r3, ip
9001dfb4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dfb8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dfbc:	605d      	str	r5, [r3, #4]
9001dfbe:	463e      	mov	r6, r7
9001dfc0:	e7d3      	b.n	9001df6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001dfc2:	9e07      	ldr	r6, [sp, #28]
9001dfc4:	e797      	b.n	9001def6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001dfc6:	2bff      	cmp	r3, #255	@ 0xff
9001dfc8:	d127      	bne.n	9001e01a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001dfca:	f896 c001 	ldrb.w	ip, [r6, #1]
9001dfce:	3c01      	subs	r4, #1
9001dfd0:	78b3      	ldrb	r3, [r6, #2]
9001dfd2:	1d77      	adds	r7, r6, #5
9001dfd4:	fa5f fc8c 	uxtb.w	ip, ip
9001dfd8:	f896 e003 	ldrb.w	lr, [r6, #3]
9001dfdc:	b2db      	uxtb	r3, r3
9001dfde:	f896 b004 	ldrb.w	fp, [r6, #4]
9001dfe2:	f36c 0507 	bfi	r5, ip, #0, #8
9001dfe6:	fa5f fe8e 	uxtb.w	lr, lr
9001dfea:	fa5f fb8b 	uxtb.w	fp, fp
9001dfee:	f363 250f 	bfi	r5, r3, #8, #8
9001dff2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001dff6:	b2a4      	uxth	r4, r4
9001dff8:	fb12 330e 	smlabb	r3, r2, lr, r3
9001dffc:	f36e 4517 	bfi	r5, lr, #16, #8
9001e000:	fb11 330c 	smlabb	r3, r1, ip, r3
9001e004:	f36b 651f 	bfi	r5, fp, #24, #8
9001e008:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001e00c:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001e010:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001e014:	f8cb 5004 	str.w	r5, [fp, #4]
9001e018:	e7d1      	b.n	9001dfbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001e01a:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001e01e:	f106 0701 	add.w	r7, r6, #1
9001e022:	d107      	bne.n	9001e034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001e024:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e028:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001e02c:	685d      	ldr	r5, [r3, #4]
9001e02e:	3c01      	subs	r4, #1
9001e030:	b2a4      	uxth	r4, r4
9001e032:	e7c4      	b.n	9001dfbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001e034:	f1bc 0f01 	cmp.w	ip, #1
9001e038:	d12c      	bne.n	9001e094 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001e03a:	f003 0e03 	and.w	lr, r3, #3
9001e03e:	f003 0c0c 	and.w	ip, r3, #12
9001e042:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e046:	f1ae 0e02 	sub.w	lr, lr, #2
9001e04a:	f1ac 0c08 	sub.w	ip, ip, #8
9001e04e:	3b02      	subs	r3, #2
9001e050:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001e054:	fa5f fe8e 	uxtb.w	lr, lr
9001e058:	f36e 0507 	bfi	r5, lr, #0, #8
9001e05c:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e060:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001e064:	f36c 250f 	bfi	r5, ip, #8, #8
9001e068:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001e06c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001e070:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001e074:	b2db      	uxtb	r3, r3
9001e076:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001e07a:	f363 4517 	bfi	r5, r3, #16, #8
9001e07e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001e082:	0e2e      	lsrs	r6, r5, #24
9001e084:	fb10 c606 	smlabb	r6, r0, r6, ip
9001e088:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001e08c:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001e090:	6075      	str	r5, [r6, #4]
9001e092:	e7cc      	b.n	9001e02e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001e094:	f1bc 0f02 	cmp.w	ip, #2
9001e098:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e09c:	d12a      	bne.n	9001e0f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001e09e:	1cb7      	adds	r7, r6, #2
9001e0a0:	7876      	ldrb	r6, [r6, #1]
9001e0a2:	3b20      	subs	r3, #32
9001e0a4:	b2f6      	uxtb	r6, r6
9001e0a6:	f006 0c0f 	and.w	ip, r6, #15
9001e0aa:	1136      	asrs	r6, r6, #4
9001e0ac:	f1ac 0c08 	sub.w	ip, ip, #8
9001e0b0:	3e08      	subs	r6, #8
9001e0b2:	449c      	add	ip, r3
9001e0b4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001e0b8:	fa5f fc8c 	uxtb.w	ip, ip
9001e0bc:	f36c 0507 	bfi	r5, ip, #0, #8
9001e0c0:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001e0c4:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001e0c8:	4433      	add	r3, r6
9001e0ca:	fa5f fe8e 	uxtb.w	lr, lr
9001e0ce:	f36e 250f 	bfi	r5, lr, #8, #8
9001e0d2:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001e0d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001e0da:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001e0de:	b2db      	uxtb	r3, r3
9001e0e0:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001e0e4:	f363 4517 	bfi	r5, r3, #16, #8
9001e0e8:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001e0ec:	0e2e      	lsrs	r6, r5, #24
9001e0ee:	fb10 e606 	smlabb	r6, r0, r6, lr
9001e0f2:	e7c9      	b.n	9001e088 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001e0f4:	1c5e      	adds	r6, r3, #1
9001e0f6:	42a6      	cmp	r6, r4
9001e0f8:	dd4e      	ble.n	9001e198 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001e0fa:	1b36      	subs	r6, r6, r4
9001e0fc:	2e00      	cmp	r6, #0
9001e0fe:	dc4e      	bgt.n	9001e19e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001e100:	f8dd b004 	ldr.w	fp, [sp, #4]
9001e104:	2400      	movs	r4, #0
9001e106:	f1bb 0f00 	cmp.w	fp, #0
9001e10a:	f340 8122 	ble.w	9001e352 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001e10e:	1c7b      	adds	r3, r7, #1
9001e110:	9303      	str	r3, [sp, #12]
9001e112:	783b      	ldrb	r3, [r7, #0]
9001e114:	b2db      	uxtb	r3, r3
9001e116:	2bfe      	cmp	r3, #254	@ 0xfe
9001e118:	d160      	bne.n	9001e1dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001e11a:	7879      	ldrb	r1, [r7, #1]
9001e11c:	1d3b      	adds	r3, r7, #4
9001e11e:	78ba      	ldrb	r2, [r7, #2]
9001e120:	b2c9      	uxtb	r1, r1
9001e122:	78f8      	ldrb	r0, [r7, #3]
9001e124:	b2d2      	uxtb	r2, r2
9001e126:	9303      	str	r3, [sp, #12]
9001e128:	f361 0507 	bfi	r5, r1, #0, #8
9001e12c:	b2c0      	uxtb	r0, r0
9001e12e:	2303      	movs	r3, #3
9001e130:	f362 250f 	bfi	r5, r2, #8, #8
9001e134:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e138:	fb13 2200 	smlabb	r2, r3, r0, r2
9001e13c:	f360 4517 	bfi	r5, r0, #16, #8
9001e140:	2307      	movs	r3, #7
9001e142:	0e2e      	lsrs	r6, r5, #24
9001e144:	fb13 2101 	smlabb	r1, r3, r1, r2
9001e148:	230b      	movs	r3, #11
9001e14a:	fb13 1306 	smlabb	r3, r3, r6, r1
9001e14e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e152:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001e156:	605d      	str	r5, [r3, #4]
9001e158:	2601      	movs	r6, #1
9001e15a:	4637      	mov	r7, r6
9001e15c:	0e2b      	lsrs	r3, r5, #24
9001e15e:	ebab 0b07 	sub.w	fp, fp, r7
9001e162:	eba6 0607 	sub.w	r6, r6, r7
9001e166:	f040 80d3 	bne.w	9001e310 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001e16a:	b18c      	cbz	r4, 9001e190 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001e16c:	4648      	mov	r0, r9
9001e16e:	00a1      	lsls	r1, r4, #2
9001e170:	f7e4 fbfc 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001e174:	9b05      	ldr	r3, [sp, #20]
9001e176:	4622      	mov	r2, r4
9001e178:	4649      	mov	r1, r9
9001e17a:	4640      	mov	r0, r8
9001e17c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e180:	f7e4 fc62 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001e184:	4b2b      	ldr	r3, [pc, #172]	@ (9001e234 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001e186:	4a2c      	ldr	r2, [pc, #176]	@ (9001e238 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001e188:	4599      	cmp	r9, r3
9001e18a:	bf08      	it	eq
9001e18c:	4613      	moveq	r3, r2
9001e18e:	4699      	mov	r9, r3
9001e190:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001e194:	2400      	movs	r4, #0
9001e196:	e0da      	b.n	9001e34e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001e198:	1ba6      	subs	r6, r4, r6
9001e19a:	b2b4      	uxth	r4, r6
9001e19c:	e70f      	b.n	9001dfbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001e19e:	9b01      	ldr	r3, [sp, #4]
9001e1a0:	9a01      	ldr	r2, [sp, #4]
9001e1a2:	42b3      	cmp	r3, r6
9001e1a4:	bfa8      	it	ge
9001e1a6:	4633      	movge	r3, r6
9001e1a8:	0e2c      	lsrs	r4, r5, #24
9001e1aa:	eba2 0b03 	sub.w	fp, r2, r3
9001e1ae:	eba6 0603 	sub.w	r6, r6, r3
9001e1b2:	d00b      	beq.n	9001e1cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001e1b4:	f1a9 0104 	sub.w	r1, r9, #4
9001e1b8:	461a      	mov	r2, r3
9001e1ba:	2a00      	cmp	r2, #0
9001e1bc:	dc02      	bgt.n	9001e1c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001e1be:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001e1c2:	e7a0      	b.n	9001e106 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001e1c4:	f841 5f04 	str.w	r5, [r1, #4]!
9001e1c8:	3a01      	subs	r2, #1
9001e1ca:	e7f6      	b.n	9001e1ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001e1cc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001e1d0:	e799      	b.n	9001e106 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001e1d2:	4637      	mov	r7, r6
9001e1d4:	f8dd b004 	ldr.w	fp, [sp, #4]
9001e1d8:	4626      	mov	r6, r4
9001e1da:	e794      	b.n	9001e106 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001e1dc:	2bff      	cmp	r3, #255	@ 0xff
9001e1de:	d11d      	bne.n	9001e21c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001e1e0:	7878      	ldrb	r0, [r7, #1]
9001e1e2:	1d7b      	adds	r3, r7, #5
9001e1e4:	78ba      	ldrb	r2, [r7, #2]
9001e1e6:	b2c0      	uxtb	r0, r0
9001e1e8:	78fe      	ldrb	r6, [r7, #3]
9001e1ea:	b2d2      	uxtb	r2, r2
9001e1ec:	9303      	str	r3, [sp, #12]
9001e1ee:	f360 0507 	bfi	r5, r0, #0, #8
9001e1f2:	793b      	ldrb	r3, [r7, #4]
9001e1f4:	b2f6      	uxtb	r6, r6
9001e1f6:	b2d9      	uxtb	r1, r3
9001e1f8:	f362 250f 	bfi	r5, r2, #8, #8
9001e1fc:	2303      	movs	r3, #3
9001e1fe:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e202:	f366 4517 	bfi	r5, r6, #16, #8
9001e206:	fb13 2206 	smlabb	r2, r3, r6, r2
9001e20a:	2307      	movs	r3, #7
9001e20c:	f361 651f 	bfi	r5, r1, #24, #8
9001e210:	fb13 2000 	smlabb	r0, r3, r0, r2
9001e214:	230b      	movs	r3, #11
9001e216:	fb13 0301 	smlabb	r3, r3, r1, r0
9001e21a:	e798      	b.n	9001e14e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001e21c:	119e      	asrs	r6, r3, #6
9001e21e:	d10d      	bne.n	9001e23c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001e220:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e224:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001e228:	685d      	ldr	r5, [r3, #4]
9001e22a:	e795      	b.n	9001e158 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001e22c:	24021d64 	.word	0x24021d64
9001e230:	24021d5e 	.word	0x24021d5e
9001e234:	24005b80 	.word	0x24005b80
9001e238:	24005c80 	.word	0x24005c80
9001e23c:	2e01      	cmp	r6, #1
9001e23e:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001e242:	d12b      	bne.n	9001e29c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001e244:	f003 0003 	and.w	r0, r3, #3
9001e248:	f003 020c 	and.w	r2, r3, #12
9001e24c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e250:	3802      	subs	r0, #2
9001e252:	3a08      	subs	r2, #8
9001e254:	1e9f      	subs	r7, r3, #2
9001e256:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001e25a:	b2c0      	uxtb	r0, r0
9001e25c:	f360 0507 	bfi	r5, r0, #0, #8
9001e260:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001e264:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001e268:	f362 250f 	bfi	r5, r2, #8, #8
9001e26c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e270:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001e274:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001e278:	2703      	movs	r7, #3
9001e27a:	b2db      	uxtb	r3, r3
9001e27c:	fb17 2203 	smlabb	r2, r7, r3, r2
9001e280:	2707      	movs	r7, #7
9001e282:	f363 4517 	bfi	r5, r3, #16, #8
9001e286:	230b      	movs	r3, #11
9001e288:	fb17 2000 	smlabb	r0, r7, r0, r2
9001e28c:	fb13 0101 	smlabb	r1, r3, r1, r0
9001e290:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001e294:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001e298:	604d      	str	r5, [r1, #4]
9001e29a:	e75e      	b.n	9001e15a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001e29c:	2e02      	cmp	r6, #2
9001e29e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e2a2:	d12f      	bne.n	9001e304 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001e2a4:	7878      	ldrb	r0, [r7, #1]
9001e2a6:	1cba      	adds	r2, r7, #2
9001e2a8:	3b20      	subs	r3, #32
9001e2aa:	b2c0      	uxtb	r0, r0
9001e2ac:	9203      	str	r2, [sp, #12]
9001e2ae:	f000 020f 	and.w	r2, r0, #15
9001e2b2:	1100      	asrs	r0, r0, #4
9001e2b4:	3a08      	subs	r2, #8
9001e2b6:	3808      	subs	r0, #8
9001e2b8:	441a      	add	r2, r3
9001e2ba:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001e2be:	b2d2      	uxtb	r2, r2
9001e2c0:	f362 0507 	bfi	r5, r2, #0, #8
9001e2c4:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001e2c8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001e2cc:	4403      	add	r3, r0
9001e2ce:	b2f6      	uxtb	r6, r6
9001e2d0:	f366 250f 	bfi	r5, r6, #8, #8
9001e2d4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001e2d8:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001e2dc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001e2e0:	2003      	movs	r0, #3
9001e2e2:	b2db      	uxtb	r3, r3
9001e2e4:	fb10 6603 	smlabb	r6, r0, r3, r6
9001e2e8:	2007      	movs	r0, #7
9001e2ea:	f363 4517 	bfi	r5, r3, #16, #8
9001e2ee:	230b      	movs	r3, #11
9001e2f0:	fb10 6202 	smlabb	r2, r0, r2, r6
9001e2f4:	fb13 2101 	smlabb	r1, r3, r1, r2
9001e2f8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001e2fc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001e300:	604d      	str	r5, [r1, #4]
9001e302:	e729      	b.n	9001e158 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001e304:	1c5e      	adds	r6, r3, #1
9001e306:	465f      	mov	r7, fp
9001e308:	45b3      	cmp	fp, r6
9001e30a:	bfa8      	it	ge
9001e30c:	4637      	movge	r7, r6
9001e30e:	e725      	b.n	9001e15c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001e310:	193b      	adds	r3, r7, r4
9001e312:	2b40      	cmp	r3, #64	@ 0x40
9001e314:	dd13      	ble.n	9001e33e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001e316:	4648      	mov	r0, r9
9001e318:	00a1      	lsls	r1, r4, #2
9001e31a:	f7e4 fb27 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001e31e:	4649      	mov	r1, r9
9001e320:	9b05      	ldr	r3, [sp, #20]
9001e322:	4622      	mov	r2, r4
9001e324:	4640      	mov	r0, r8
9001e326:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e32a:	f7e4 fb8d 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001e32e:	4b2c      	ldr	r3, [pc, #176]	@ (9001e3e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001e330:	2400      	movs	r4, #0
9001e332:	4599      	cmp	r9, r3
9001e334:	bf0c      	ite	eq
9001e336:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001e3ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001e33a:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001e3e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001e33e:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001e342:	463b      	mov	r3, r7
9001e344:	3b01      	subs	r3, #1
9001e346:	f842 5b04 	str.w	r5, [r2], #4
9001e34a:	d1fb      	bne.n	9001e344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001e34c:	443c      	add	r4, r7
9001e34e:	9f03      	ldr	r7, [sp, #12]
9001e350:	e6d9      	b.n	9001e106 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001e352:	b15c      	cbz	r4, 9001e36c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001e354:	00a1      	lsls	r1, r4, #2
9001e356:	4648      	mov	r0, r9
9001e358:	f7e4 fb08 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001e35c:	4640      	mov	r0, r8
9001e35e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e362:	9b05      	ldr	r3, [sp, #20]
9001e364:	4622      	mov	r2, r4
9001e366:	4649      	mov	r1, r9
9001e368:	f7e4 fb6e 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001e36c:	4b1d      	ldr	r3, [pc, #116]	@ (9001e3e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001e36e:	9a01      	ldr	r2, [sp, #4]
9001e370:	881b      	ldrh	r3, [r3, #0]
9001e372:	1a9b      	subs	r3, r3, r2
9001e374:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001e378:	9b04      	ldr	r3, [sp, #16]
9001e37a:	3301      	adds	r3, #1
9001e37c:	9304      	str	r3, [sp, #16]
9001e37e:	9a04      	ldr	r2, [sp, #16]
9001e380:	9b00      	ldr	r3, [sp, #0]
9001e382:	4293      	cmp	r3, r2
9001e384:	d11d      	bne.n	9001e3c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001e386:	9b02      	ldr	r3, [sp, #8]
9001e388:	2500      	movs	r5, #0
9001e38a:	9a02      	ldr	r2, [sp, #8]
9001e38c:	f103 0b01 	add.w	fp, r3, #1
9001e390:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001e394:	9b06      	ldr	r3, [sp, #24]
9001e396:	4629      	mov	r1, r5
9001e398:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001e39c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001e3a0:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001e3a4:	1ba4      	subs	r4, r4, r6
9001e3a6:	9b07      	ldr	r3, [sp, #28]
9001e3a8:	ba3f      	rev	r7, r7
9001e3aa:	9808      	ldr	r0, [sp, #32]
9001e3ac:	b2a4      	uxth	r4, r4
9001e3ae:	441f      	add	r7, r3
9001e3b0:	f00c fcf4 	bl	9002ad9c <memset>
9001e3b4:	f8cd b008 	str.w	fp, [sp, #8]
9001e3b8:	9504      	str	r5, [sp, #16]
9001e3ba:	f7e4 facd 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001e3be:	463e      	mov	r6, r7
9001e3c0:	e5cc      	b.n	9001df5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001e3c2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e3c6:	9b01      	ldr	r3, [sp, #4]
9001e3c8:	1ae4      	subs	r4, r4, r3
9001e3ca:	1ba4      	subs	r4, r4, r6
9001e3cc:	b2a4      	uxth	r4, r4
9001e3ce:	e7f4      	b.n	9001e3ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001e3d0:	4b05      	ldr	r3, [pc, #20]	@ (9001e3e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001e3d2:	6818      	ldr	r0, [r3, #0]
9001e3d4:	6803      	ldr	r3, [r0, #0]
9001e3d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e3d8:	4798      	blx	r3
9001e3da:	b00f      	add	sp, #60	@ 0x3c
9001e3dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e3e0:	24005b80 	.word	0x24005b80
9001e3e4:	24021d5e 	.word	0x24021d5e
9001e3e8:	24021d64 	.word	0x24021d64
9001e3ec:	24005c80 	.word	0x24005c80

9001e3f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e3f4:	b08f      	sub	sp, #60	@ 0x3c
9001e3f6:	461c      	mov	r4, r3
9001e3f8:	9205      	str	r2, [sp, #20]
9001e3fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e3fe:	9100      	str	r1, [sp, #0]
9001e400:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001e402:	9201      	str	r2, [sp, #4]
9001e404:	2a00      	cmp	r2, #0
9001e406:	f000 8116 	beq.w	9001e636 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001e40a:	6820      	ldr	r0, [r4, #0]
9001e40c:	aa0a      	add	r2, sp, #40	@ 0x28
9001e40e:	6861      	ldr	r1, [r4, #4]
9001e410:	c203      	stmia	r2!, {r0, r1}
9001e412:	6818      	ldr	r0, [r3, #0]
9001e414:	aa0c      	add	r2, sp, #48	@ 0x30
9001e416:	6859      	ldr	r1, [r3, #4]
9001e418:	c203      	stmia	r2!, {r0, r1}
9001e41a:	a80a      	add	r0, sp, #40	@ 0x28
9001e41c:	f7f8 fe88 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e420:	4621      	mov	r1, r4
9001e422:	a80c      	add	r0, sp, #48	@ 0x30
9001e424:	f7f8 feac 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e428:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001e42c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001e430:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e434:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001e438:	bfdb      	ittet	le
9001e43a:	b2b3      	uxthle	r3, r6
9001e43c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e440:	2301      	movgt	r3, #1
9001e442:	fb92 f3f3 	sdivle	r3, r2, r3
9001e446:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e44a:	441d      	add	r5, r3
9001e44c:	fb92 f1f3 	sdiv	r1, r2, r3
9001e450:	fa1f fc81 	uxth.w	ip, r1
9001e454:	3d01      	subs	r5, #1
9001e456:	fb0c 2413 	mls	r4, ip, r3, r2
9001e45a:	4661      	mov	r1, ip
9001e45c:	fb14 f406 	smulbb	r4, r4, r6
9001e460:	4404      	add	r4, r0
9001e462:	fb95 f5f3 	sdiv	r5, r5, r3
9001e466:	b2a4      	uxth	r4, r4
9001e468:	b131      	cbz	r1, 9001e478 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001e46a:	9b05      	ldr	r3, [sp, #20]
9001e46c:	9900      	ldr	r1, [sp, #0]
9001e46e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e472:	ba1b      	rev	r3, r3
9001e474:	4419      	add	r1, r3
9001e476:	9100      	str	r1, [sp, #0]
9001e478:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001e47c:	b2ad      	uxth	r5, r5
9001e47e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001e482:	4418      	add	r0, r3
9001e484:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001e488:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001e48c:	00ad      	lsls	r5, r5, #2
9001e48e:	441a      	add	r2, r3
9001e490:	4b6a      	ldr	r3, [pc, #424]	@ (9001e63c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e492:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001e496:	6818      	ldr	r0, [r3, #0]
9001e498:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001e49c:	6803      	ldr	r3, [r0, #0]
9001e49e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e4a0:	4798      	blx	r3
9001e4a2:	4967      	ldr	r1, [pc, #412]	@ (9001e640 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001e4a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e4a8:	2c00      	cmp	r4, #0
9001e4aa:	880b      	ldrh	r3, [r1, #0]
9001e4ac:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001e4b0:	bf0c      	ite	eq
9001e4b2:	46c6      	moveq	lr, r8
9001e4b4:	f04f 0e00 	movne.w	lr, #0
9001e4b8:	9109      	str	r1, [sp, #36]	@ 0x24
9001e4ba:	fb03 c202 	mla	r2, r3, r2, ip
9001e4be:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e4c2:	4373      	muls	r3, r6
9001e4c4:	fa1f fe8e 	uxth.w	lr, lr
9001e4c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e4cc:	9103      	str	r1, [sp, #12]
9001e4ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e4d2:	9306      	str	r3, [sp, #24]
9001e4d4:	1d2b      	adds	r3, r5, #4
9001e4d6:	9307      	str	r3, [sp, #28]
9001e4d8:	9b01      	ldr	r3, [sp, #4]
9001e4da:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001e4de:	2300      	movs	r3, #0
9001e4e0:	b292      	uxth	r2, r2
9001e4e2:	9302      	str	r3, [sp, #8]
9001e4e4:	9204      	str	r2, [sp, #16]
9001e4e6:	9a06      	ldr	r2, [sp, #24]
9001e4e8:	4282      	cmp	r2, r0
9001e4ea:	f240 809f 	bls.w	9001e62c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e4ee:	b963      	cbnz	r3, 9001e50a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e4f0:	9b00      	ldr	r3, [sp, #0]
9001e4f2:	781a      	ldrb	r2, [r3, #0]
9001e4f4:	0993      	lsrs	r3, r2, #6
9001e4f6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e4fa:	9202      	str	r2, [sp, #8]
9001e4fc:	1e5a      	subs	r2, r3, #1
9001e4fe:	2a02      	cmp	r2, #2
9001e500:	d815      	bhi.n	9001e52e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e502:	9a00      	ldr	r2, [sp, #0]
9001e504:	b29b      	uxth	r3, r3
9001e506:	3201      	adds	r2, #1
9001e508:	9200      	str	r2, [sp, #0]
9001e50a:	b1b4      	cbz	r4, 9001e53a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e50c:	429c      	cmp	r4, r3
9001e50e:	bf91      	iteee	ls
9001e510:	1b1c      	subls	r4, r3, r4
9001e512:	1ae4      	subhi	r4, r4, r3
9001e514:	4671      	movhi	r1, lr
9001e516:	f04f 0a00 	movhi.w	sl, #0
9001e51a:	bf9b      	ittet	ls
9001e51c:	fa1f fa84 	uxthls.w	sl, r4
9001e520:	2400      	movls	r4, #0
9001e522:	b2a4      	uxthhi	r4, r4
9001e524:	fa1f f188 	uxthls.w	r1, r8
9001e528:	4653      	mov	r3, sl
9001e52a:	468e      	mov	lr, r1
9001e52c:	e7db      	b.n	9001e4e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e52e:	9a00      	ldr	r2, [sp, #0]
9001e530:	9b00      	ldr	r3, [sp, #0]
9001e532:	3202      	adds	r2, #2
9001e534:	785b      	ldrb	r3, [r3, #1]
9001e536:	9200      	str	r2, [sp, #0]
9001e538:	e7e7      	b.n	9001e50a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e53a:	2202      	movs	r2, #2
9001e53c:	9907      	ldr	r1, [sp, #28]
9001e53e:	4573      	cmp	r3, lr
9001e540:	4615      	mov	r5, r2
9001e542:	9a02      	ldr	r2, [sp, #8]
9001e544:	bf24      	itt	cs
9001e546:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e54a:	46f1      	movcs	r9, lr
9001e54c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e550:	9905      	ldr	r1, [sp, #20]
9001e552:	bf34      	ite	cc
9001e554:	4699      	movcc	r9, r3
9001e556:	fa1f fa8a 	uxthcs.w	sl, sl
9001e55a:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e55e:	bf38      	it	cc
9001e560:	ebae 0103 	subcc.w	r1, lr, r3
9001e564:	9a01      	ldr	r2, [sp, #4]
9001e566:	bf2e      	itee	cs
9001e568:	4621      	movcs	r1, r4
9001e56a:	b289      	uxthcc	r1, r1
9001e56c:	46a2      	movcc	sl, r4
9001e56e:	2aff      	cmp	r2, #255	@ 0xff
9001e570:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e574:	d105      	bne.n	9001e582 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e576:	4481      	add	r9, r0
9001e578:	4581      	cmp	r9, r0
9001e57a:	d045      	beq.n	9001e608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e57c:	f820 cb02 	strh.w	ip, [r0], #2
9001e580:	e7fa      	b.n	9001e578 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e582:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e586:	9d03      	ldr	r5, [sp, #12]
9001e588:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e58c:	4481      	add	r9, r0
9001e58e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e592:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001e596:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001e59a:	fa5f fc8c 	uxtb.w	ip, ip
9001e59e:	436a      	muls	r2, r5
9001e5a0:	fb0b fb05 	mul.w	fp, fp, r5
9001e5a4:	fb0c fc05 	mul.w	ip, ip, r5
9001e5a8:	9208      	str	r2, [sp, #32]
9001e5aa:	4581      	cmp	r9, r0
9001e5ac:	d02c      	beq.n	9001e608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e5ae:	8802      	ldrh	r2, [r0, #0]
9001e5b0:	9d04      	ldr	r5, [sp, #16]
9001e5b2:	1216      	asrs	r6, r2, #8
9001e5b4:	9f04      	ldr	r7, [sp, #16]
9001e5b6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e5ba:	fb16 f605 	smulbb	r6, r6, r5
9001e5be:	9d08      	ldr	r5, [sp, #32]
9001e5c0:	442e      	add	r6, r5
9001e5c2:	10d5      	asrs	r5, r2, #3
9001e5c4:	00d2      	lsls	r2, r2, #3
9001e5c6:	b2b6      	uxth	r6, r6
9001e5c8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e5cc:	b2d2      	uxtb	r2, r2
9001e5ce:	fb15 f507 	smulbb	r5, r5, r7
9001e5d2:	fb12 f207 	smulbb	r2, r2, r7
9001e5d6:	1c77      	adds	r7, r6, #1
9001e5d8:	445d      	add	r5, fp
9001e5da:	4462      	add	r2, ip
9001e5dc:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e5e0:	b2ad      	uxth	r5, r5
9001e5e2:	b292      	uxth	r2, r2
9001e5e4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e5e8:	1c57      	adds	r7, r2, #1
9001e5ea:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e5ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e5f2:	4316      	orrs	r6, r2
9001e5f4:	1c6a      	adds	r2, r5, #1
9001e5f6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e5fa:	096d      	lsrs	r5, r5, #5
9001e5fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e600:	432e      	orrs	r6, r5
9001e602:	f820 6b02 	strh.w	r6, [r0], #2
9001e606:	e7d0      	b.n	9001e5aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e608:	4573      	cmp	r3, lr
9001e60a:	d38d      	bcc.n	9001e528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e60c:	fa1f f188 	uxth.w	r1, r8
9001e610:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e614:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e616:	1a64      	subs	r4, r4, r1
9001e618:	881b      	ldrh	r3, [r3, #0]
9001e61a:	b2a4      	uxth	r4, r4
9001e61c:	eba3 0308 	sub.w	r3, r3, r8
9001e620:	2c00      	cmp	r4, #0
9001e622:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e626:	bf18      	it	ne
9001e628:	2100      	movne	r1, #0
9001e62a:	e77d      	b.n	9001e528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e62c:	4b03      	ldr	r3, [pc, #12]	@ (9001e63c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e62e:	6818      	ldr	r0, [r3, #0]
9001e630:	6803      	ldr	r3, [r0, #0]
9001e632:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e634:	4798      	blx	r3
9001e636:	b00f      	add	sp, #60	@ 0x3c
9001e638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e63c:	24021d64 	.word	0x24021d64
9001e640:	24021d5e 	.word	0x24021d5e

9001e644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e648:	b09f      	sub	sp, #124	@ 0x7c
9001e64a:	461d      	mov	r5, r3
9001e64c:	4604      	mov	r4, r0
9001e64e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001e650:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001e654:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001e658:	9209      	str	r2, [sp, #36]	@ 0x24
9001e65a:	2a00      	cmp	r2, #0
9001e65c:	f000 81ed 	beq.w	9001ea3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e660:	6828      	ldr	r0, [r5, #0]
9001e662:	aa1a      	add	r2, sp, #104	@ 0x68
9001e664:	6869      	ldr	r1, [r5, #4]
9001e666:	c203      	stmia	r2!, {r0, r1}
9001e668:	6818      	ldr	r0, [r3, #0]
9001e66a:	aa1c      	add	r2, sp, #112	@ 0x70
9001e66c:	6859      	ldr	r1, [r3, #4]
9001e66e:	c203      	stmia	r2!, {r0, r1}
9001e670:	a81a      	add	r0, sp, #104	@ 0x68
9001e672:	f7f8 fd5d 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e676:	4629      	mov	r1, r5
9001e678:	a81c      	add	r0, sp, #112	@ 0x70
9001e67a:	f7f8 fd81 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e67e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e682:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001e686:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e68a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001e68e:	bfdb      	ittet	le
9001e690:	b29a      	uxthle	r2, r3
9001e692:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e696:	2201      	movgt	r2, #1
9001e698:	fb91 f2f2 	sdivle	r2, r1, r2
9001e69c:	9202      	str	r2, [sp, #8]
9001e69e:	9802      	ldr	r0, [sp, #8]
9001e6a0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001e6a4:	9902      	ldr	r1, [sp, #8]
9001e6a6:	fb92 f0f0 	sdiv	r0, r2, r0
9001e6aa:	b280      	uxth	r0, r0
9001e6ac:	4488      	add	r8, r1
9001e6ae:	9010      	str	r0, [sp, #64]	@ 0x40
9001e6b0:	f108 38ff 	add.w	r8, r8, #4294967295
9001e6b4:	9802      	ldr	r0, [sp, #8]
9001e6b6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001e6b8:	fb05 2510 	mls	r5, r5, r0, r2
9001e6bc:	fb98 f8f1 	sdiv	r8, r8, r1
9001e6c0:	fb15 f503 	smulbb	r5, r5, r3
9001e6c4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001e6c8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001e6cc:	f108 0801 	add.w	r8, r8, #1
9001e6d0:	440d      	add	r5, r1
9001e6d2:	4419      	add	r1, r3
9001e6d4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001e6d8:	fa1f f888 	uxth.w	r8, r8
9001e6dc:	441a      	add	r2, r3
9001e6de:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001e6e2:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001e6e6:	b2ad      	uxth	r5, r5
9001e6e8:	9304      	str	r3, [sp, #16]
9001e6ea:	4b94      	ldr	r3, [pc, #592]	@ (9001e93c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e6ec:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001e6f0:	6818      	ldr	r0, [r3, #0]
9001e6f2:	6803      	ldr	r3, [r0, #0]
9001e6f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e6f6:	4798      	blx	r3
9001e6f8:	4b91      	ldr	r3, [pc, #580]	@ (9001e940 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e6fa:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001e6fe:	2d00      	cmp	r5, #0
9001e700:	881a      	ldrh	r2, [r3, #0]
9001e702:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001e706:	fb02 f606 	mul.w	r6, r2, r6
9001e70a:	fb02 7101 	mla	r1, r2, r1, r7
9001e70e:	9318      	str	r3, [sp, #96]	@ 0x60
9001e710:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e714:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001e718:	f04f 0100 	mov.w	r1, #0
9001e71c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e720:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e722:	4b88      	ldr	r3, [pc, #544]	@ (9001e944 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e724:	920a      	str	r2, [sp, #40]	@ 0x28
9001e726:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e728:	eba3 0304 	sub.w	r3, r3, r4
9001e72c:	910d      	str	r1, [sp, #52]	@ 0x34
9001e72e:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e732:	9319      	str	r3, [sp, #100]	@ 0x64
9001e734:	f108 0204 	add.w	r2, r8, #4
9001e738:	9211      	str	r2, [sp, #68]	@ 0x44
9001e73a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e73c:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001e740:	9215      	str	r2, [sp, #84]	@ 0x54
9001e742:	9a04      	ldr	r2, [sp, #16]
9001e744:	bf18      	it	ne
9001e746:	2200      	movne	r2, #0
9001e748:	b292      	uxth	r2, r2
9001e74a:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001e74c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e74e:	fa11 f383 	uxtah	r3, r1, r3
9001e752:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001e754:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e758:	3304      	adds	r3, #4
9001e75a:	9306      	str	r3, [sp, #24]
9001e75c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e75e:	4283      	cmp	r3, r0
9001e760:	f240 8166 	bls.w	9001ea30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e764:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001e768:	f04f 0a01 	mov.w	sl, #1
9001e76c:	9902      	ldr	r1, [sp, #8]
9001e76e:	9e06      	ldr	r6, [sp, #24]
9001e770:	46d3      	mov	fp, sl
9001e772:	4657      	mov	r7, sl
9001e774:	7836      	ldrb	r6, [r6, #0]
9001e776:	fbb5 f3f3 	udiv	r3, r5, r3
9001e77a:	1acb      	subs	r3, r1, r3
9001e77c:	9612      	str	r6, [sp, #72]	@ 0x48
9001e77e:	3601      	adds	r6, #1
9001e780:	b29b      	uxth	r3, r3
9001e782:	9605      	str	r6, [sp, #20]
9001e784:	9316      	str	r3, [sp, #88]	@ 0x58
9001e786:	9b06      	ldr	r3, [sp, #24]
9001e788:	7859      	ldrb	r1, [r3, #1]
9001e78a:	789b      	ldrb	r3, [r3, #2]
9001e78c:	021b      	lsls	r3, r3, #8
9001e78e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e792:	9906      	ldr	r1, [sp, #24]
9001e794:	78c9      	ldrb	r1, [r1, #3]
9001e796:	430b      	orrs	r3, r1
9001e798:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001e79a:	4419      	add	r1, r3
9001e79c:	1c4e      	adds	r6, r1, #1
9001e79e:	7849      	ldrb	r1, [r1, #1]
9001e7a0:	9603      	str	r6, [sp, #12]
9001e7a2:	0209      	lsls	r1, r1, #8
9001e7a4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e7a6:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001e7aa:	5cf3      	ldrb	r3, [r6, r3]
9001e7ac:	4319      	orrs	r1, r3
9001e7ae:	b28b      	uxth	r3, r1
9001e7b0:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001e7b4:	930c      	str	r3, [sp, #48]	@ 0x30
9001e7b6:	2300      	movs	r3, #0
9001e7b8:	9307      	str	r3, [sp, #28]
9001e7ba:	469c      	mov	ip, r3
9001e7bc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001e7c0:	930e      	str	r3, [sp, #56]	@ 0x38
9001e7c2:	2d00      	cmp	r5, #0
9001e7c4:	d07e      	beq.n	9001e8c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e7c6:	42af      	cmp	r7, r5
9001e7c8:	d26e      	bcs.n	9001e8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e7ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e7cc:	1bed      	subs	r5, r5, r7
9001e7ce:	9201      	str	r2, [sp, #4]
9001e7d0:	4283      	cmp	r3, r0
9001e7d2:	b2ad      	uxth	r5, r5
9001e7d4:	d802      	bhi.n	9001e7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e7d6:	e073      	b.n	9001e8c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e7d8:	2b00      	cmp	r3, #0
9001e7da:	d15f      	bne.n	9001e89c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e7dc:	9b03      	ldr	r3, [sp, #12]
9001e7de:	f1cb 0207 	rsb	r2, fp, #7
9001e7e2:	785b      	ldrb	r3, [r3, #1]
9001e7e4:	4093      	lsls	r3, r2
9001e7e6:	005b      	lsls	r3, r3, #1
9001e7e8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e7ec:	9b03      	ldr	r3, [sp, #12]
9001e7ee:	781b      	ldrb	r3, [r3, #0]
9001e7f0:	fa43 f30b 	asr.w	r3, r3, fp
9001e7f4:	b2db      	uxtb	r3, r3
9001e7f6:	4313      	orrs	r3, r2
9001e7f8:	f10b 0201 	add.w	r2, fp, #1
9001e7fc:	fa5f fb82 	uxtb.w	fp, r2
9001e800:	9a03      	ldr	r2, [sp, #12]
9001e802:	b29f      	uxth	r7, r3
9001e804:	f1bb 0f08 	cmp.w	fp, #8
9001e808:	bf13      	iteet	ne
9001e80a:	3201      	addne	r2, #1
9001e80c:	3202      	addeq	r2, #2
9001e80e:	f04f 0b00 	moveq.w	fp, #0
9001e812:	9203      	strne	r2, [sp, #12]
9001e814:	bf08      	it	eq
9001e816:	9203      	streq	r2, [sp, #12]
9001e818:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e81a:	42ba      	cmp	r2, r7
9001e81c:	d309      	bcc.n	9001e832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e81e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001e822:	2301      	movs	r3, #1
9001e824:	9a05      	ldr	r2, [sp, #20]
9001e826:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001e82a:	d30e      	bcc.n	9001e84a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e82c:	469a      	mov	sl, r3
9001e82e:	2600      	movs	r6, #0
9001e830:	e035      	b.n	9001e89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e832:	9b05      	ldr	r3, [sp, #20]
9001e834:	429f      	cmp	r7, r3
9001e836:	d318      	bcc.n	9001e86a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e838:	eb04 030a 	add.w	r3, r4, sl
9001e83c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001e840:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001e844:	f10a 0301 	add.w	r3, sl, #1
9001e848:	b29b      	uxth	r3, r3
9001e84a:	9a05      	ldr	r2, [sp, #20]
9001e84c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001e850:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e854:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001e856:	7116      	strb	r6, [r2, #4]
9001e858:	f10a 0601 	add.w	r6, sl, #1
9001e85c:	80d1      	strh	r1, [r2, #6]
9001e85e:	7156      	strb	r6, [r2, #5]
9001e860:	9a05      	ldr	r2, [sp, #20]
9001e862:	3201      	adds	r2, #1
9001e864:	b292      	uxth	r2, r2
9001e866:	9205      	str	r2, [sp, #20]
9001e868:	e7e0      	b.n	9001e82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e86a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e86e:	463a      	mov	r2, r7
9001e870:	795b      	ldrb	r3, [r3, #5]
9001e872:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001e876:	4426      	add	r6, r4
9001e878:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001e87a:	eb01 0c06 	add.w	ip, r1, r6
9001e87e:	f1bc 0f00 	cmp.w	ip, #0
9001e882:	dd07      	ble.n	9001e894 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e884:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e888:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e88c:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e890:	88d2      	ldrh	r2, [r2, #6]
9001e892:	e7f1      	b.n	9001e878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e894:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001e898:	b29b      	uxth	r3, r3
9001e89a:	e7c3      	b.n	9001e824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e89c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e89e:	970c      	str	r7, [sp, #48]	@ 0x30
9001e8a0:	46b4      	mov	ip, r6
9001e8a2:	9a01      	ldr	r2, [sp, #4]
9001e8a4:	461f      	mov	r7, r3
9001e8a6:	e78c      	b.n	9001e7c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e8a8:	1b7b      	subs	r3, r7, r5
9001e8aa:	eb0c 0605 	add.w	r6, ip, r5
9001e8ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e8b2:	b29b      	uxth	r3, r3
9001e8b4:	b2b6      	uxth	r6, r6
9001e8b6:	9201      	str	r2, [sp, #4]
9001e8b8:	2500      	movs	r5, #0
9001e8ba:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e8bc:	4282      	cmp	r2, r0
9001e8be:	d88b      	bhi.n	9001e7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e8c0:	9a01      	ldr	r2, [sp, #4]
9001e8c2:	e74b      	b.n	9001e75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e8c4:	4297      	cmp	r7, r2
9001e8c6:	d332      	bcc.n	9001e92e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e8c8:	1abb      	subs	r3, r7, r2
9001e8ca:	9208      	str	r2, [sp, #32]
9001e8cc:	9501      	str	r5, [sp, #4]
9001e8ce:	b29b      	uxth	r3, r3
9001e8d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e8d2:	29ff      	cmp	r1, #255	@ 0xff
9001e8d4:	9908      	ldr	r1, [sp, #32]
9001e8d6:	eb0c 0601 	add.w	r6, ip, r1
9001e8da:	d135      	bne.n	9001e948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e8dc:	f1a0 0e02 	sub.w	lr, r0, #2
9001e8e0:	b2b6      	uxth	r6, r6
9001e8e2:	45b4      	cmp	ip, r6
9001e8e4:	f040 808c 	bne.w	9001ea00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e8e8:	9908      	ldr	r1, [sp, #32]
9001e8ea:	4297      	cmp	r7, r2
9001e8ec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e8f0:	d3e2      	bcc.n	9001e8b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e8f2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001e8f4:	9904      	ldr	r1, [sp, #16]
9001e8f6:	8812      	ldrh	r2, [r2, #0]
9001e8f8:	1a52      	subs	r2, r2, r1
9001e8fa:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001e8fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e900:	9a07      	ldr	r2, [sp, #28]
9001e902:	3201      	adds	r2, #1
9001e904:	428a      	cmp	r2, r1
9001e906:	9207      	str	r2, [sp, #28]
9001e908:	f040 8087 	bne.w	9001ea1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e90c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001e910:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001e914:	9b04      	ldr	r3, [sp, #16]
9001e916:	1bed      	subs	r5, r5, r7
9001e918:	b2ad      	uxth	r5, r5
9001e91a:	2d00      	cmp	r5, #0
9001e91c:	bf08      	it	eq
9001e91e:	461a      	moveq	r2, r3
9001e920:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e922:	bf18      	it	ne
9001e924:	2200      	movne	r2, #0
9001e926:	3301      	adds	r3, #1
9001e928:	b292      	uxth	r2, r2
9001e92a:	930d      	str	r3, [sp, #52]	@ 0x34
9001e92c:	e70d      	b.n	9001e74a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e92e:	1bd1      	subs	r1, r2, r7
9001e930:	9708      	str	r7, [sp, #32]
9001e932:	b28b      	uxth	r3, r1
9001e934:	9301      	str	r3, [sp, #4]
9001e936:	462b      	mov	r3, r5
9001e938:	e7ca      	b.n	9001e8d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e93a:	bf00      	nop
9001e93c:	24021d64 	.word	0x24021d64
9001e940:	24021d5e 	.word	0x24021d5e
9001e944:	fffff7fb 	.word	0xfffff7fb
9001e948:	b2b6      	uxth	r6, r6
9001e94a:	900b      	str	r0, [sp, #44]	@ 0x2c
9001e94c:	45b4      	cmp	ip, r6
9001e94e:	d0cb      	beq.n	9001e8e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001e950:	f10c 0101 	add.w	r1, ip, #1
9001e954:	44a4      	add	ip, r4
9001e956:	9117      	str	r1, [sp, #92]	@ 0x5c
9001e958:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001e95c:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e95e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e962:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e964:	ea4f 2825 	mov.w	r8, r5, asr #8
9001e968:	f8b1 c000 	ldrh.w	ip, [r1]
9001e96c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e96e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001e972:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001e976:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001e97a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e97e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e982:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e986:	fb1e fe01 	smulbb	lr, lr, r1
9001e98a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e98c:	fa5f fc8c 	uxtb.w	ip, ip
9001e990:	fb08 e801 	mla	r8, r8, r1, lr
9001e994:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001e998:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e99a:	00ed      	lsls	r5, r5, #3
9001e99c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e9a0:	fa1f f888 	uxth.w	r8, r8
9001e9a4:	fb19 f901 	smulbb	r9, r9, r1
9001e9a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e9aa:	b2ed      	uxtb	r5, r5
9001e9ac:	fb0e 9e01 	mla	lr, lr, r1, r9
9001e9b0:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e9b2:	fb1c fc01 	smulbb	ip, ip, r1
9001e9b6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e9b8:	fa1f fe8e 	uxth.w	lr, lr
9001e9bc:	fb05 c501 	mla	r5, r5, r1, ip
9001e9c0:	f108 0c01 	add.w	ip, r8, #1
9001e9c4:	f10e 0901 	add.w	r9, lr, #1
9001e9c8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e9ca:	b2ad      	uxth	r5, r5
9001e9cc:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001e9d0:	f105 0c01 	add.w	ip, r5, #1
9001e9d4:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001e9d8:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001e9dc:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e9e0:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e9e4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e9e8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e9ec:	ea4c 0808 	orr.w	r8, ip, r8
9001e9f0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001e9f4:	ea48 0809 	orr.w	r8, r8, r9
9001e9f8:	f821 8b02 	strh.w	r8, [r1], #2
9001e9fc:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e9fe:	e7a5      	b.n	9001e94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001ea00:	f10c 0801 	add.w	r8, ip, #1
9001ea04:	44a4      	add	ip, r4
9001ea06:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001ea08:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001ea0c:	fa1f fc88 	uxth.w	ip, r8
9001ea10:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001ea14:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001ea18:	e763      	b.n	9001e8e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001ea1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ea1e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001ea22:	1aad      	subs	r5, r5, r2
9001ea24:	b2ad      	uxth	r5, r5
9001ea26:	2d00      	cmp	r5, #0
9001ea28:	bf18      	it	ne
9001ea2a:	2200      	movne	r2, #0
9001ea2c:	9201      	str	r2, [sp, #4]
9001ea2e:	e744      	b.n	9001e8ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001ea30:	4b03      	ldr	r3, [pc, #12]	@ (9001ea40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001ea32:	6818      	ldr	r0, [r3, #0]
9001ea34:	6803      	ldr	r3, [r0, #0]
9001ea36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ea38:	4798      	blx	r3
9001ea3a:	b01f      	add	sp, #124	@ 0x7c
9001ea3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ea40:	24021d64 	.word	0x24021d64

9001ea44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001ea44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ea48:	b093      	sub	sp, #76	@ 0x4c
9001ea4a:	4616      	mov	r6, r2
9001ea4c:	460d      	mov	r5, r1
9001ea4e:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001ea52:	9003      	str	r0, [sp, #12]
9001ea54:	9201      	str	r2, [sp, #4]
9001ea56:	2a00      	cmp	r2, #0
9001ea58:	f000 8303 	beq.w	9001f062 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001ea5c:	6830      	ldr	r0, [r6, #0]
9001ea5e:	ac0e      	add	r4, sp, #56	@ 0x38
9001ea60:	6871      	ldr	r1, [r6, #4]
9001ea62:	c403      	stmia	r4!, {r0, r1}
9001ea64:	6818      	ldr	r0, [r3, #0]
9001ea66:	ac10      	add	r4, sp, #64	@ 0x40
9001ea68:	6859      	ldr	r1, [r3, #4]
9001ea6a:	c403      	stmia	r4!, {r0, r1}
9001ea6c:	a80e      	add	r0, sp, #56	@ 0x38
9001ea6e:	f7f8 fb5f 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ea72:	4631      	mov	r1, r6
9001ea74:	a810      	add	r0, sp, #64	@ 0x40
9001ea76:	f7f8 fb83 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ea7a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001ea7e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001ea82:	bfdb      	ittet	le
9001ea84:	b293      	uxthle	r3, r2
9001ea86:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ea8a:	2301      	movgt	r3, #1
9001ea8c:	fb91 f3f3 	sdivle	r3, r1, r3
9001ea90:	9304      	str	r3, [sp, #16]
9001ea92:	f105 0308 	add.w	r3, r5, #8
9001ea96:	9904      	ldr	r1, [sp, #16]
9001ea98:	9308      	str	r3, [sp, #32]
9001ea9a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001ea9e:	440b      	add	r3, r1
9001eaa0:	3b01      	subs	r3, #1
9001eaa2:	fb93 f3f1 	sdiv	r3, r3, r1
9001eaa6:	3b01      	subs	r3, #1
9001eaa8:	9908      	ldr	r1, [sp, #32]
9001eaaa:	b29b      	uxth	r3, r3
9001eaac:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001eab0:	9904      	ldr	r1, [sp, #16]
9001eab2:	9309      	str	r3, [sp, #36]	@ 0x24
9001eab4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001eab8:	fb93 f0f1 	sdiv	r0, r3, r1
9001eabc:	b284      	uxth	r4, r0
9001eabe:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001eac2:	9405      	str	r4, [sp, #20]
9001eac4:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001eac8:	fb05 3914 	mls	r9, r5, r4, r3
9001eacc:	fb19 f902 	smulbb	r9, r9, r2
9001ead0:	4489      	add	r9, r1
9001ead2:	fa1f f989 	uxth.w	r9, r9
9001ead6:	2d00      	cmp	r5, #0
9001ead8:	d05d      	beq.n	9001eb96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001eada:	1e6a      	subs	r2, r5, #1
9001eadc:	9808      	ldr	r0, [sp, #32]
9001eade:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001eae2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001eae4:	fa9a fa8a 	rev.w	sl, sl
9001eae8:	4492      	add	sl, r2
9001eaea:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001eaee:	f04f 0600 	mov.w	r6, #0
9001eaf2:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001eaf6:	4411      	add	r1, r2
9001eaf8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001eafc:	4413      	add	r3, r2
9001eafe:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001eb02:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001eb06:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001eb0a:	9302      	str	r3, [sp, #8]
9001eb0c:	4bca      	ldr	r3, [pc, #808]	@ (9001ee38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001eb0e:	6818      	ldr	r0, [r3, #0]
9001eb10:	6803      	ldr	r3, [r0, #0]
9001eb12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001eb14:	4798      	blx	r3
9001eb16:	4bc9      	ldr	r3, [pc, #804]	@ (9001ee3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001eb18:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001eb1c:	2100      	movs	r1, #0
9001eb1e:	881b      	ldrh	r3, [r3, #0]
9001eb20:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001eb24:	fb03 2404 	mla	r4, r3, r4, r2
9001eb28:	2280      	movs	r2, #128	@ 0x80
9001eb2a:	436b      	muls	r3, r5
9001eb2c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001eb30:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001eb34:	930d      	str	r3, [sp, #52]	@ 0x34
9001eb36:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001eb3a:	fb99 f3f3 	sdiv	r3, r9, r3
9001eb3e:	9306      	str	r3, [sp, #24]
9001eb40:	9b01      	ldr	r3, [sp, #4]
9001eb42:	43db      	mvns	r3, r3
9001eb44:	b2db      	uxtb	r3, r3
9001eb46:	930a      	str	r3, [sp, #40]	@ 0x28
9001eb48:	9b03      	ldr	r3, [sp, #12]
9001eb4a:	3304      	adds	r3, #4
9001eb4c:	4618      	mov	r0, r3
9001eb4e:	930b      	str	r3, [sp, #44]	@ 0x2c
9001eb50:	f00c f924 	bl	9002ad9c <memset>
9001eb54:	4bba      	ldr	r3, [pc, #744]	@ (9001ee40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001eb56:	9300      	str	r3, [sp, #0]
9001eb58:	2300      	movs	r3, #0
9001eb5a:	9307      	str	r3, [sp, #28]
9001eb5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001eb5e:	42a3      	cmp	r3, r4
9001eb60:	f240 827a 	bls.w	9001f058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001eb64:	f04f 0e07 	mov.w	lr, #7
9001eb68:	f1b9 0f00 	cmp.w	r9, #0
9001eb6c:	f000 8159 	beq.w	9001ee22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001eb70:	f89a 5000 	ldrb.w	r5, [sl]
9001eb74:	f10a 0701 	add.w	r7, sl, #1
9001eb78:	b2ed      	uxtb	r5, r5
9001eb7a:	11aa      	asrs	r2, r5, #6
9001eb7c:	d10e      	bne.n	9001eb9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001eb7e:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001eb82:	9b03      	ldr	r3, [sp, #12]
9001eb84:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001eb88:	88ae      	ldrh	r6, [r5, #4]
9001eb8a:	f109 39ff 	add.w	r9, r9, #4294967295
9001eb8e:	fa1f f989 	uxth.w	r9, r9
9001eb92:	46ba      	mov	sl, r7
9001eb94:	e7e8      	b.n	9001eb68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001eb96:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001eb9a:	e7a6      	b.n	9001eaea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001eb9c:	2a01      	cmp	r2, #1
9001eb9e:	d129      	bne.n	9001ebf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001eba0:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001eba4:	f005 0203 	and.w	r2, r5, #3
9001eba8:	2103      	movs	r1, #3
9001ebaa:	3b02      	subs	r3, #2
9001ebac:	4413      	add	r3, r2
9001ebae:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001ebb2:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001ebb6:	f003 031f 	and.w	r3, r3, #31
9001ebba:	3a02      	subs	r2, #2
9001ebbc:	3d02      	subs	r5, #2
9001ebbe:	f363 0604 	bfi	r6, r3, #0, #5
9001ebc2:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001ebc6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ebca:	f362 164a 	bfi	r6, r2, #5, #6
9001ebce:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001ebd2:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001ebd6:	f005 051f 	and.w	r5, r5, #31
9001ebda:	fb11 2205 	smlabb	r2, r1, r5, r2
9001ebde:	f365 26cf 	bfi	r6, r5, #11, #5
9001ebe2:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001ebe6:	9a03      	ldr	r2, [sp, #12]
9001ebe8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ebec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ebf0:	809e      	strh	r6, [r3, #4]
9001ebf2:	e7ca      	b.n	9001eb8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001ebf4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001ebf8:	2a02      	cmp	r2, #2
9001ebfa:	b2ab      	uxth	r3, r5
9001ebfc:	d136      	bne.n	9001ec6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001ebfe:	2101      	movs	r1, #1
9001ec00:	fb12 1205 	smlabb	r2, r2, r5, r1
9001ec04:	4492      	add	sl, r2
9001ec06:	463a      	mov	r2, r7
9001ec08:	4552      	cmp	r2, sl
9001ec0a:	d01c      	beq.n	9001ec46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001ec0c:	4694      	mov	ip, r2
9001ec0e:	f04f 0b03 	mov.w	fp, #3
9001ec12:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001ec16:	7852      	ldrb	r2, [r2, #1]
9001ec18:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001ec1c:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001ec20:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001ec24:	f001 021f 	and.w	r2, r1, #31
9001ec28:	460e      	mov	r6, r1
9001ec2a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ec2e:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001ec32:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001ec36:	9a03      	ldr	r2, [sp, #12]
9001ec38:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ec3c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ec40:	4662      	mov	r2, ip
9001ec42:	8081      	strh	r1, [r0, #4]
9001ec44:	e7e0      	b.n	9001ec08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001ec46:	4599      	cmp	r9, r3
9001ec48:	d20b      	bcs.n	9001ec62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001ec4a:	eba5 0509 	sub.w	r5, r5, r9
9001ec4e:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001ec52:	2d00      	cmp	r5, #0
9001ec54:	f300 8208 	bgt.w	9001f068 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001ec58:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001ec5c:	2301      	movs	r3, #1
9001ec5e:	9307      	str	r3, [sp, #28]
9001ec60:	e00c      	b.n	9001ec7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001ec62:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001ec66:	eba9 0903 	sub.w	r9, r9, r3
9001ec6a:	e790      	b.n	9001eb8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001ec6c:	4599      	cmp	r9, r3
9001ec6e:	d2fa      	bcs.n	9001ec66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001ec70:	eba5 0509 	sub.w	r5, r5, r9
9001ec74:	2d00      	cmp	r5, #0
9001ec76:	dc1d      	bgt.n	9001ecb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001ec78:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001ec7c:	f04f 0b00 	mov.w	fp, #0
9001ec80:	f1b8 0f00 	cmp.w	r8, #0
9001ec84:	f340 81a0 	ble.w	9001efc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001ec88:	783b      	ldrb	r3, [r7, #0]
9001ec8a:	f107 0a01 	add.w	sl, r7, #1
9001ec8e:	b2db      	uxtb	r3, r3
9001ec90:	119a      	asrs	r2, r3, #6
9001ec92:	f040 80d7 	bne.w	9001ee44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001ec96:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ec9a:	9a03      	ldr	r2, [sp, #12]
9001ec9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001eca0:	889e      	ldrh	r6, [r3, #4]
9001eca2:	9b01      	ldr	r3, [sp, #4]
9001eca4:	2bff      	cmp	r3, #255	@ 0xff
9001eca6:	f040 81e8 	bne.w	9001f07a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001ecaa:	8026      	strh	r6, [r4, #0]
9001ecac:	f108 38ff 	add.w	r8, r8, #4294967295
9001ecb0:	3402      	adds	r4, #2
9001ecb2:	e0be      	b.n	9001ee32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001ecb4:	9b02      	ldr	r3, [sp, #8]
9001ecb6:	9a02      	ldr	r2, [sp, #8]
9001ecb8:	42ab      	cmp	r3, r5
9001ecba:	bfa8      	it	ge
9001ecbc:	462b      	movge	r3, r5
9001ecbe:	eba2 0803 	sub.w	r8, r2, r3
9001ecc2:	9a07      	ldr	r2, [sp, #28]
9001ecc4:	1aed      	subs	r5, r5, r3
9001ecc6:	2a00      	cmp	r2, #0
9001ecc8:	d05a      	beq.n	9001ed80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001ecca:	9a01      	ldr	r2, [sp, #4]
9001eccc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ecd0:	2aff      	cmp	r2, #255	@ 0xff
9001ecd2:	d049      	beq.n	9001ed68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001ecd4:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001ecd8:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001ecdc:	42a3      	cmp	r3, r4
9001ecde:	f240 80a5 	bls.w	9001ee2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001ece2:	46bc      	mov	ip, r7
9001ece4:	8820      	ldrh	r0, [r4, #0]
9001ece6:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001ecea:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001ecee:	7879      	ldrb	r1, [r7, #1]
9001ecf0:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001ecf4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001ecf8:	fb1a fa09 	smulbb	sl, sl, r9
9001ecfc:	b212      	sxth	r2, r2
9001ecfe:	b291      	uxth	r1, r2
9001ed00:	00d2      	lsls	r2, r2, #3
9001ed02:	120f      	asrs	r7, r1, #8
9001ed04:	10c9      	asrs	r1, r1, #3
9001ed06:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ed0a:	b2d2      	uxtb	r2, r2
9001ed0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001ed10:	fb07 a70e 	mla	r7, r7, lr, sl
9001ed14:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001ed18:	00c0      	lsls	r0, r0, #3
9001ed1a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001ed1e:	b2bf      	uxth	r7, r7
9001ed20:	b2c0      	uxtb	r0, r0
9001ed22:	fb1a fa09 	smulbb	sl, sl, r9
9001ed26:	fb10 f009 	smulbb	r0, r0, r9
9001ed2a:	fb01 a10e 	mla	r1, r1, lr, sl
9001ed2e:	fb02 020e 	mla	r2, r2, lr, r0
9001ed32:	1c78      	adds	r0, r7, #1
9001ed34:	b289      	uxth	r1, r1
9001ed36:	b292      	uxth	r2, r2
9001ed38:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ed3c:	f101 0a01 	add.w	sl, r1, #1
9001ed40:	1c50      	adds	r0, r2, #1
9001ed42:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001ed46:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ed4a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001ed4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ed52:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001ed56:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ed5a:	4307      	orrs	r7, r0
9001ed5c:	ea47 070a 	orr.w	r7, r7, sl
9001ed60:	f824 7b02 	strh.w	r7, [r4], #2
9001ed64:	4667      	mov	r7, ip
9001ed66:	e7b9      	b.n	9001ecdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001ed68:	42a3      	cmp	r3, r4
9001ed6a:	d95f      	bls.n	9001ee2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001ed6c:	463a      	mov	r2, r7
9001ed6e:	f812 1b02 	ldrb.w	r1, [r2], #2
9001ed72:	7878      	ldrb	r0, [r7, #1]
9001ed74:	4617      	mov	r7, r2
9001ed76:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001ed7a:	f824 1b02 	strh.w	r1, [r4], #2
9001ed7e:	e7f3      	b.n	9001ed68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001ed80:	9901      	ldr	r1, [sp, #4]
9001ed82:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ed86:	b2b2      	uxth	r2, r6
9001ed88:	29ff      	cmp	r1, #255	@ 0xff
9001ed8a:	d044      	beq.n	9001ee16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001ed8c:	ea4f 2922 	mov.w	r9, r2, asr #8
9001ed90:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ed94:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001ed98:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001ed9c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001eda0:	4608      	mov	r0, r1
9001eda2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001eda6:	fb09 f901 	mul.w	r9, r9, r1
9001edaa:	fb0e fe01 	mul.w	lr, lr, r1
9001edae:	00d1      	lsls	r1, r2, #3
9001edb0:	b2c9      	uxtb	r1, r1
9001edb2:	4341      	muls	r1, r0
9001edb4:	429c      	cmp	r4, r3
9001edb6:	f4bf af61 	bcs.w	9001ec7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001edba:	8822      	ldrh	r2, [r4, #0]
9001edbc:	1210      	asrs	r0, r2, #8
9001edbe:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001edc2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001edc6:	00d2      	lsls	r2, r2, #3
9001edc8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001edcc:	fb00 900a 	mla	r0, r0, sl, r9
9001edd0:	b2d2      	uxtb	r2, r2
9001edd2:	fb0c ec0a 	mla	ip, ip, sl, lr
9001edd6:	b280      	uxth	r0, r0
9001edd8:	fb02 120a 	mla	r2, r2, sl, r1
9001eddc:	fa1f fc8c 	uxth.w	ip, ip
9001ede0:	b292      	uxth	r2, r2
9001ede2:	f100 0b01 	add.w	fp, r0, #1
9001ede6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001edea:	1c50      	adds	r0, r2, #1
9001edec:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001edf0:	f10c 0201 	add.w	r2, ip, #1
9001edf4:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001edf8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001edfc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001ee00:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001ee04:	ea40 0b0b 	orr.w	fp, r0, fp
9001ee08:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001ee0c:	ea4b 0b0c 	orr.w	fp, fp, ip
9001ee10:	f824 bb02 	strh.w	fp, [r4], #2
9001ee14:	e7ce      	b.n	9001edb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001ee16:	429c      	cmp	r4, r3
9001ee18:	f4bf af30 	bcs.w	9001ec7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001ee1c:	f824 2b02 	strh.w	r2, [r4], #2
9001ee20:	e7f9      	b.n	9001ee16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001ee22:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001ee26:	4657      	mov	r7, sl
9001ee28:	464d      	mov	r5, r9
9001ee2a:	e727      	b.n	9001ec7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001ee2c:	2300      	movs	r3, #0
9001ee2e:	e716      	b.n	9001ec5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001ee30:	44bb      	add	fp, r7
9001ee32:	4657      	mov	r7, sl
9001ee34:	e724      	b.n	9001ec80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001ee36:	bf00      	nop
9001ee38:	24021d64 	.word	0x24021d64
9001ee3c:	24021d5e 	.word	0x24021d5e
9001ee40:	24005b80 	.word	0x24005b80
9001ee44:	2a01      	cmp	r2, #1
9001ee46:	d12a      	bne.n	9001ee9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001ee48:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001ee4c:	f003 0203 	and.w	r2, r3, #3
9001ee50:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001ee54:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001ee58:	3902      	subs	r1, #2
9001ee5a:	3802      	subs	r0, #2
9001ee5c:	3b02      	subs	r3, #2
9001ee5e:	4411      	add	r1, r2
9001ee60:	f001 011f 	and.w	r1, r1, #31
9001ee64:	f361 0604 	bfi	r6, r1, #0, #5
9001ee68:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001ee6c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ee70:	f360 164a 	bfi	r6, r0, #5, #6
9001ee74:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ee78:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001ee7c:	f002 031f 	and.w	r3, r2, #31
9001ee80:	2203      	movs	r2, #3
9001ee82:	f363 26cf 	bfi	r6, r3, #11, #5
9001ee86:	fb12 0303 	smlabb	r3, r2, r3, r0
9001ee8a:	2207      	movs	r2, #7
9001ee8c:	fb12 3301 	smlabb	r3, r2, r1, r3
9001ee90:	9a03      	ldr	r2, [sp, #12]
9001ee92:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ee96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ee9a:	809e      	strh	r6, [r3, #4]
9001ee9c:	e701      	b.n	9001eca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001ee9e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001eea2:	4647      	mov	r7, r8
9001eea4:	45a8      	cmp	r8, r5
9001eea6:	bfa8      	it	ge
9001eea8:	462f      	movge	r7, r5
9001eeaa:	2a02      	cmp	r2, #2
9001eeac:	d154      	bne.n	9001ef58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001eeae:	9b01      	ldr	r3, [sp, #4]
9001eeb0:	2bff      	cmp	r3, #255	@ 0xff
9001eeb2:	d01a      	beq.n	9001eeea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001eeb4:	eb0b 0307 	add.w	r3, fp, r7
9001eeb8:	2b40      	cmp	r3, #64	@ 0x40
9001eeba:	dd16      	ble.n	9001eeea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001eebc:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001eec0:	9800      	ldr	r0, [sp, #0]
9001eec2:	4649      	mov	r1, r9
9001eec4:	f7e3 fd52 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001eec8:	465a      	mov	r2, fp
9001eeca:	9b01      	ldr	r3, [sp, #4]
9001eecc:	4620      	mov	r0, r4
9001eece:	9900      	ldr	r1, [sp, #0]
9001eed0:	444c      	add	r4, r9
9001eed2:	f7e3 fd91 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001eed6:	9b00      	ldr	r3, [sp, #0]
9001eed8:	f04f 0b00 	mov.w	fp, #0
9001eedc:	461a      	mov	r2, r3
9001eede:	4b6a      	ldr	r3, [pc, #424]	@ (9001f088 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eee0:	429a      	cmp	r2, r3
9001eee2:	bf0c      	ite	eq
9001eee4:	4b69      	ldreq	r3, [pc, #420]	@ (9001f08c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001eee6:	4b68      	ldrne	r3, [pc, #416]	@ (9001f088 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eee8:	9300      	str	r3, [sp, #0]
9001eeea:	4652      	mov	r2, sl
9001eeec:	2100      	movs	r1, #0
9001eeee:	42a9      	cmp	r1, r5
9001eef0:	da2c      	bge.n	9001ef4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001eef2:	4694      	mov	ip, r2
9001eef4:	f04f 0903 	mov.w	r9, #3
9001eef8:	42b9      	cmp	r1, r7
9001eefa:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001eefe:	7852      	ldrb	r2, [r2, #1]
9001ef00:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001ef04:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001ef08:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001ef0c:	f003 021f 	and.w	r2, r3, #31
9001ef10:	461e      	mov	r6, r3
9001ef12:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ef16:	fb19 000e 	smlabb	r0, r9, lr, r0
9001ef1a:	f04f 0e07 	mov.w	lr, #7
9001ef1e:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001ef22:	9a03      	ldr	r2, [sp, #12]
9001ef24:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ef28:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ef2c:	8083      	strh	r3, [r0, #4]
9001ef2e:	da0a      	bge.n	9001ef46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001ef30:	9a01      	ldr	r2, [sp, #4]
9001ef32:	2aff      	cmp	r2, #255	@ 0xff
9001ef34:	bf13      	iteet	ne
9001ef36:	9a00      	ldrne	r2, [sp, #0]
9001ef38:	8023      	strheq	r3, [r4, #0]
9001ef3a:	3402      	addeq	r4, #2
9001ef3c:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001ef40:	bf18      	it	ne
9001ef42:	f10b 0b01 	addne.w	fp, fp, #1
9001ef46:	3101      	adds	r1, #1
9001ef48:	4662      	mov	r2, ip
9001ef4a:	e7d0      	b.n	9001eeee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001ef4c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001ef50:	eba8 0807 	sub.w	r8, r8, r7
9001ef54:	1bed      	subs	r5, r5, r7
9001ef56:	e76c      	b.n	9001ee32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001ef58:	9b01      	ldr	r3, [sp, #4]
9001ef5a:	eba8 0807 	sub.w	r8, r8, r7
9001ef5e:	1bed      	subs	r5, r5, r7
9001ef60:	fa1f f986 	uxth.w	r9, r6
9001ef64:	2bff      	cmp	r3, #255	@ 0xff
9001ef66:	d027      	beq.n	9001efb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001ef68:	eb0b 0307 	add.w	r3, fp, r7
9001ef6c:	2b40      	cmp	r3, #64	@ 0x40
9001ef6e:	dd18      	ble.n	9001efa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001ef70:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001ef74:	9800      	ldr	r0, [sp, #0]
9001ef76:	4619      	mov	r1, r3
9001ef78:	930c      	str	r3, [sp, #48]	@ 0x30
9001ef7a:	f7e3 fcf7 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001ef7e:	465a      	mov	r2, fp
9001ef80:	9b01      	ldr	r3, [sp, #4]
9001ef82:	4620      	mov	r0, r4
9001ef84:	9900      	ldr	r1, [sp, #0]
9001ef86:	f04f 0b00 	mov.w	fp, #0
9001ef8a:	f7e3 fd35 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001ef8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001ef90:	441c      	add	r4, r3
9001ef92:	9b00      	ldr	r3, [sp, #0]
9001ef94:	461a      	mov	r2, r3
9001ef96:	4b3c      	ldr	r3, [pc, #240]	@ (9001f088 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ef98:	429a      	cmp	r2, r3
9001ef9a:	bf0c      	ite	eq
9001ef9c:	4b3b      	ldreq	r3, [pc, #236]	@ (9001f08c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001ef9e:	4b3a      	ldrne	r3, [pc, #232]	@ (9001f088 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001efa0:	9300      	str	r3, [sp, #0]
9001efa2:	9b00      	ldr	r3, [sp, #0]
9001efa4:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001efa8:	463b      	mov	r3, r7
9001efaa:	2b00      	cmp	r3, #0
9001efac:	f43f af40 	beq.w	9001ee30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001efb0:	f822 9b02 	strh.w	r9, [r2], #2
9001efb4:	3b01      	subs	r3, #1
9001efb6:	e7f8      	b.n	9001efaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001efb8:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001efbc:	42a7      	cmp	r7, r4
9001efbe:	f67f af38 	bls.w	9001ee32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001efc2:	f824 9b02 	strh.w	r9, [r4], #2
9001efc6:	e7f9      	b.n	9001efbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001efc8:	f1bb 0f00 	cmp.w	fp, #0
9001efcc:	d00c      	beq.n	9001efe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001efce:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001efd2:	9800      	ldr	r0, [sp, #0]
9001efd4:	4641      	mov	r1, r8
9001efd6:	f7e3 fcc9 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001efda:	4620      	mov	r0, r4
9001efdc:	4444      	add	r4, r8
9001efde:	9b01      	ldr	r3, [sp, #4]
9001efe0:	465a      	mov	r2, fp
9001efe2:	9900      	ldr	r1, [sp, #0]
9001efe4:	f7e3 fd08 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001efe8:	4b29      	ldr	r3, [pc, #164]	@ (9001f090 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001efea:	9a02      	ldr	r2, [sp, #8]
9001efec:	881b      	ldrh	r3, [r3, #0]
9001efee:	1a9b      	subs	r3, r3, r2
9001eff0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eff4:	9b06      	ldr	r3, [sp, #24]
9001eff6:	3301      	adds	r3, #1
9001eff8:	9306      	str	r3, [sp, #24]
9001effa:	9a06      	ldr	r2, [sp, #24]
9001effc:	9b04      	ldr	r3, [sp, #16]
9001effe:	4293      	cmp	r3, r2
9001f000:	d120      	bne.n	9001f044 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001f002:	9b05      	ldr	r3, [sp, #20]
9001f004:	2100      	movs	r1, #0
9001f006:	9a05      	ldr	r2, [sp, #20]
9001f008:	f04f 0600 	mov.w	r6, #0
9001f00c:	f103 0801 	add.w	r8, r3, #1
9001f010:	9b08      	ldr	r3, [sp, #32]
9001f012:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001f016:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001f01a:	2280      	movs	r2, #128	@ 0x80
9001f01c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001f020:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f022:	ba3f      	rev	r7, r7
9001f024:	eba9 0905 	sub.w	r9, r9, r5
9001f028:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f02a:	441f      	add	r7, r3
9001f02c:	f00b feb6 	bl	9002ad9c <memset>
9001f030:	fa1f f989 	uxth.w	r9, r9
9001f034:	2300      	movs	r3, #0
9001f036:	f8cd 8014 	str.w	r8, [sp, #20]
9001f03a:	9306      	str	r3, [sp, #24]
9001f03c:	f7e3 fc8c 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001f040:	46ba      	mov	sl, r7
9001f042:	e58b      	b.n	9001eb5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001f044:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001f048:	9b02      	ldr	r3, [sp, #8]
9001f04a:	eba9 0903 	sub.w	r9, r9, r3
9001f04e:	eba9 0505 	sub.w	r5, r9, r5
9001f052:	fa1f f985 	uxth.w	r9, r5
9001f056:	e7f1      	b.n	9001f03c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001f058:	4b0e      	ldr	r3, [pc, #56]	@ (9001f094 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001f05a:	6818      	ldr	r0, [r3, #0]
9001f05c:	6803      	ldr	r3, [r0, #0]
9001f05e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f060:	4798      	blx	r3
9001f062:	b013      	add	sp, #76	@ 0x4c
9001f064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f068:	9b02      	ldr	r3, [sp, #8]
9001f06a:	9a02      	ldr	r2, [sp, #8]
9001f06c:	42ab      	cmp	r3, r5
9001f06e:	bfa8      	it	ge
9001f070:	462b      	movge	r3, r5
9001f072:	eba2 0803 	sub.w	r8, r2, r3
9001f076:	1aed      	subs	r5, r5, r3
9001f078:	e627      	b.n	9001ecca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001f07a:	f108 38ff 	add.w	r8, r8, #4294967295
9001f07e:	fa1f f986 	uxth.w	r9, r6
9001f082:	2500      	movs	r5, #0
9001f084:	2701      	movs	r7, #1
9001f086:	e76f      	b.n	9001ef68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001f088:	24005b80 	.word	0x24005b80
9001f08c:	24005c80 	.word	0x24005c80
9001f090:	24021d5e 	.word	0x24021d5e
9001f094:	24021d64 	.word	0x24021d64

9001f098 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f09c:	b08f      	sub	sp, #60	@ 0x3c
9001f09e:	461c      	mov	r4, r3
9001f0a0:	460f      	mov	r7, r1
9001f0a2:	9203      	str	r2, [sp, #12]
9001f0a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001f0a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001f0aa:	9202      	str	r2, [sp, #8]
9001f0ac:	2a00      	cmp	r2, #0
9001f0ae:	f000 8128 	beq.w	9001f302 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001f0b2:	6820      	ldr	r0, [r4, #0]
9001f0b4:	aa0a      	add	r2, sp, #40	@ 0x28
9001f0b6:	6861      	ldr	r1, [r4, #4]
9001f0b8:	c203      	stmia	r2!, {r0, r1}
9001f0ba:	6818      	ldr	r0, [r3, #0]
9001f0bc:	aa0c      	add	r2, sp, #48	@ 0x30
9001f0be:	6859      	ldr	r1, [r3, #4]
9001f0c0:	c203      	stmia	r2!, {r0, r1}
9001f0c2:	a80a      	add	r0, sp, #40	@ 0x28
9001f0c4:	f7f8 f834 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f0c8:	4621      	mov	r1, r4
9001f0ca:	a80c      	add	r0, sp, #48	@ 0x30
9001f0cc:	f7f8 f858 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f0d0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f0d4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001f0d8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001f0dc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001f0e0:	bfdb      	ittet	le
9001f0e2:	b2b3      	uxthle	r3, r6
9001f0e4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001f0e8:	2301      	movgt	r3, #1
9001f0ea:	fb92 f3f3 	sdivle	r3, r2, r3
9001f0ee:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f0f2:	441d      	add	r5, r3
9001f0f4:	fb92 f1f3 	sdiv	r1, r2, r3
9001f0f8:	fa1f fc81 	uxth.w	ip, r1
9001f0fc:	3d01      	subs	r5, #1
9001f0fe:	fb0c 2413 	mls	r4, ip, r3, r2
9001f102:	4661      	mov	r1, ip
9001f104:	fb14 f406 	smulbb	r4, r4, r6
9001f108:	4404      	add	r4, r0
9001f10a:	fb95 f5f3 	sdiv	r5, r5, r3
9001f10e:	b2a4      	uxth	r4, r4
9001f110:	b121      	cbz	r1, 9001f11c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001f112:	9b03      	ldr	r3, [sp, #12]
9001f114:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f118:	ba1b      	rev	r3, r3
9001f11a:	441f      	add	r7, r3
9001f11c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f120:	b2ad      	uxth	r5, r5
9001f122:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001f126:	4418      	add	r0, r3
9001f128:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f12c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f130:	00ad      	lsls	r5, r5, #2
9001f132:	441a      	add	r2, r3
9001f134:	4b74      	ldr	r3, [pc, #464]	@ (9001f308 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f136:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001f13a:	6818      	ldr	r0, [r3, #0]
9001f13c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001f140:	6803      	ldr	r3, [r0, #0]
9001f142:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f144:	4798      	blx	r3
9001f146:	4a71      	ldr	r2, [pc, #452]	@ (9001f30c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001f148:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001f14c:	2c00      	cmp	r4, #0
9001f14e:	8813      	ldrh	r3, [r2, #0]
9001f150:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001f154:	bf0c      	ite	eq
9001f156:	46c8      	moveq	r8, r9
9001f158:	f04f 0800 	movne.w	r8, #0
9001f15c:	9209      	str	r2, [sp, #36]	@ 0x24
9001f15e:	fb03 c101 	mla	r1, r3, r1, ip
9001f162:	4373      	muls	r3, r6
9001f164:	fa1f f888 	uxth.w	r8, r8
9001f168:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f16c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f170:	9304      	str	r3, [sp, #16]
9001f172:	1d2b      	adds	r3, r5, #4
9001f174:	9305      	str	r3, [sp, #20]
9001f176:	2300      	movs	r3, #0
9001f178:	9301      	str	r3, [sp, #4]
9001f17a:	9a04      	ldr	r2, [sp, #16]
9001f17c:	4282      	cmp	r2, r0
9001f17e:	f240 80bb 	bls.w	9001f2f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001f182:	b95b      	cbnz	r3, 9001f19c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001f184:	783a      	ldrb	r2, [r7, #0]
9001f186:	0993      	lsrs	r3, r2, #6
9001f188:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f18c:	9201      	str	r2, [sp, #4]
9001f18e:	1e5a      	subs	r2, r3, #1
9001f190:	2a02      	cmp	r2, #2
9001f192:	bf8d      	iteet	hi
9001f194:	787b      	ldrbhi	r3, [r7, #1]
9001f196:	3701      	addls	r7, #1
9001f198:	b29b      	uxthls	r3, r3
9001f19a:	3702      	addhi	r7, #2
9001f19c:	b184      	cbz	r4, 9001f1c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001f19e:	429c      	cmp	r4, r3
9001f1a0:	bf91      	iteee	ls
9001f1a2:	1b1c      	subls	r4, r3, r4
9001f1a4:	1ae4      	subhi	r4, r4, r3
9001f1a6:	46c4      	movhi	ip, r8
9001f1a8:	f04f 0a00 	movhi.w	sl, #0
9001f1ac:	bf9b      	ittet	ls
9001f1ae:	fa1f fa84 	uxthls.w	sl, r4
9001f1b2:	2400      	movls	r4, #0
9001f1b4:	b2a4      	uxthhi	r4, r4
9001f1b6:	fa1f fc89 	uxthls.w	ip, r9
9001f1ba:	4653      	mov	r3, sl
9001f1bc:	46e0      	mov	r8, ip
9001f1be:	e7dc      	b.n	9001f17a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001f1c0:	2204      	movs	r2, #4
9001f1c2:	9905      	ldr	r1, [sp, #20]
9001f1c4:	4543      	cmp	r3, r8
9001f1c6:	4615      	mov	r5, r2
9001f1c8:	9a01      	ldr	r2, [sp, #4]
9001f1ca:	bf24      	itt	cs
9001f1cc:	eba3 0a08 	subcs.w	sl, r3, r8
9001f1d0:	46c6      	movcs	lr, r8
9001f1d2:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f1d6:	9903      	ldr	r1, [sp, #12]
9001f1d8:	bf3c      	itt	cc
9001f1da:	eba8 0c03 	subcc.w	ip, r8, r3
9001f1de:	469e      	movcc	lr, r3
9001f1e0:	588a      	ldr	r2, [r1, r2]
9001f1e2:	bf26      	itte	cs
9001f1e4:	fa1f fa8a 	uxthcs.w	sl, sl
9001f1e8:	46a4      	movcs	ip, r4
9001f1ea:	fa1f fc8c 	uxthcc.w	ip, ip
9001f1ee:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001f1f2:	bf38      	it	cc
9001f1f4:	46a2      	movcc	sl, r4
9001f1f6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001f1fa:	2900      	cmp	r1, #0
9001f1fc:	d066      	beq.n	9001f2cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001f1fe:	29ff      	cmp	r1, #255	@ 0xff
9001f200:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001f204:	d114      	bne.n	9001f230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f206:	9d02      	ldr	r5, [sp, #8]
9001f208:	2dff      	cmp	r5, #255	@ 0xff
9001f20a:	d111      	bne.n	9001f230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f20c:	0951      	lsrs	r1, r2, #5
9001f20e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001f212:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f216:	4486      	add	lr, r0
9001f218:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f21c:	f026 0607 	bic.w	r6, r6, #7
9001f220:	430e      	orrs	r6, r1
9001f222:	4316      	orrs	r6, r2
9001f224:	b2b6      	uxth	r6, r6
9001f226:	4586      	cmp	lr, r0
9001f228:	d051      	beq.n	9001f2ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f22a:	f820 6b02 	strh.w	r6, [r0], #2
9001f22e:	e7fa      	b.n	9001f226 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001f230:	9d02      	ldr	r5, [sp, #8]
9001f232:	b2f6      	uxtb	r6, r6
9001f234:	4486      	add	lr, r0
9001f236:	4369      	muls	r1, r5
9001f238:	1c4d      	adds	r5, r1, #1
9001f23a:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001f23e:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001f242:	b2d2      	uxtb	r2, r2
9001f244:	122d      	asrs	r5, r5, #8
9001f246:	ea6f 0b05 	mvn.w	fp, r5
9001f24a:	b2ad      	uxth	r5, r5
9001f24c:	fb11 f105 	smulbb	r1, r1, r5
9001f250:	fa5f fb8b 	uxtb.w	fp, fp
9001f254:	fb16 f605 	smulbb	r6, r6, r5
9001f258:	fb12 f205 	smulbb	r2, r2, r5
9001f25c:	b289      	uxth	r1, r1
9001f25e:	b2b6      	uxth	r6, r6
9001f260:	b292      	uxth	r2, r2
9001f262:	9106      	str	r1, [sp, #24]
9001f264:	9607      	str	r6, [sp, #28]
9001f266:	9208      	str	r2, [sp, #32]
9001f268:	4586      	cmp	lr, r0
9001f26a:	d030      	beq.n	9001f2ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f26c:	8802      	ldrh	r2, [r0, #0]
9001f26e:	9906      	ldr	r1, [sp, #24]
9001f270:	1216      	asrs	r6, r2, #8
9001f272:	10d5      	asrs	r5, r2, #3
9001f274:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f278:	00d2      	lsls	r2, r2, #3
9001f27a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f27e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f282:	b2d2      	uxtb	r2, r2
9001f284:	fb06 160b 	mla	r6, r6, fp, r1
9001f288:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f28c:	9907      	ldr	r1, [sp, #28]
9001f28e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f292:	b2b6      	uxth	r6, r6
9001f294:	fb05 150b 	mla	r5, r5, fp, r1
9001f298:	9908      	ldr	r1, [sp, #32]
9001f29a:	fb02 120b 	mla	r2, r2, fp, r1
9001f29e:	1c71      	adds	r1, r6, #1
9001f2a0:	b2ad      	uxth	r5, r5
9001f2a2:	b292      	uxth	r2, r2
9001f2a4:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001f2a8:	1c51      	adds	r1, r2, #1
9001f2aa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f2ae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001f2b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f2b6:	4316      	orrs	r6, r2
9001f2b8:	1c6a      	adds	r2, r5, #1
9001f2ba:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001f2be:	096d      	lsrs	r5, r5, #5
9001f2c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f2c4:	432e      	orrs	r6, r5
9001f2c6:	f820 6b02 	strh.w	r6, [r0], #2
9001f2ca:	e7cd      	b.n	9001f268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001f2cc:	4470      	add	r0, lr
9001f2ce:	4543      	cmp	r3, r8
9001f2d0:	f4ff af73 	bcc.w	9001f1ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f2d4:	fa1f fc89 	uxth.w	ip, r9
9001f2d8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001f2dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f2de:	eba4 040c 	sub.w	r4, r4, ip
9001f2e2:	881b      	ldrh	r3, [r3, #0]
9001f2e4:	b2a4      	uxth	r4, r4
9001f2e6:	eba3 0309 	sub.w	r3, r3, r9
9001f2ea:	2c00      	cmp	r4, #0
9001f2ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f2f0:	bf18      	it	ne
9001f2f2:	f04f 0c00 	movne.w	ip, #0
9001f2f6:	e760      	b.n	9001f1ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f2f8:	4b03      	ldr	r3, [pc, #12]	@ (9001f308 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f2fa:	6818      	ldr	r0, [r3, #0]
9001f2fc:	6803      	ldr	r3, [r0, #0]
9001f2fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f300:	4798      	blx	r3
9001f302:	b00f      	add	sp, #60	@ 0x3c
9001f304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f308:	24021d64 	.word	0x24021d64
9001f30c:	24021d5e 	.word	0x24021d5e

9001f310 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f314:	b093      	sub	sp, #76	@ 0x4c
9001f316:	461c      	mov	r4, r3
9001f318:	9205      	str	r2, [sp, #20]
9001f31a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001f31e:	9101      	str	r1, [sp, #4]
9001f320:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001f322:	9202      	str	r2, [sp, #8]
9001f324:	2a00      	cmp	r2, #0
9001f326:	f000 812e 	beq.w	9001f586 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001f32a:	6820      	ldr	r0, [r4, #0]
9001f32c:	aa0e      	add	r2, sp, #56	@ 0x38
9001f32e:	6861      	ldr	r1, [r4, #4]
9001f330:	c203      	stmia	r2!, {r0, r1}
9001f332:	6818      	ldr	r0, [r3, #0]
9001f334:	aa10      	add	r2, sp, #64	@ 0x40
9001f336:	6859      	ldr	r1, [r3, #4]
9001f338:	c203      	stmia	r2!, {r0, r1}
9001f33a:	a80e      	add	r0, sp, #56	@ 0x38
9001f33c:	f7f7 fef8 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f340:	4621      	mov	r1, r4
9001f342:	a810      	add	r0, sp, #64	@ 0x40
9001f344:	f7f7 ff1c 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f348:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001f34c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001f350:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001f354:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001f358:	bfdb      	ittet	le
9001f35a:	b2b3      	uxthle	r3, r6
9001f35c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001f360:	2301      	movgt	r3, #1
9001f362:	fb92 f3f3 	sdivle	r3, r2, r3
9001f366:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f36a:	441d      	add	r5, r3
9001f36c:	fb92 f1f3 	sdiv	r1, r2, r3
9001f370:	fa1f fc81 	uxth.w	ip, r1
9001f374:	3d01      	subs	r5, #1
9001f376:	fb0c 2413 	mls	r4, ip, r3, r2
9001f37a:	4661      	mov	r1, ip
9001f37c:	fb14 f406 	smulbb	r4, r4, r6
9001f380:	4404      	add	r4, r0
9001f382:	fb95 f5f3 	sdiv	r5, r5, r3
9001f386:	b2a4      	uxth	r4, r4
9001f388:	b131      	cbz	r1, 9001f398 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001f38a:	9b05      	ldr	r3, [sp, #20]
9001f38c:	9901      	ldr	r1, [sp, #4]
9001f38e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f392:	ba1b      	rev	r3, r3
9001f394:	4419      	add	r1, r3
9001f396:	9101      	str	r1, [sp, #4]
9001f398:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001f39c:	b2ad      	uxth	r5, r5
9001f39e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001f3a2:	4418      	add	r0, r3
9001f3a4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001f3a8:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001f3ac:	00ad      	lsls	r5, r5, #2
9001f3ae:	441a      	add	r2, r3
9001f3b0:	4b76      	ldr	r3, [pc, #472]	@ (9001f58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f3b2:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001f3b6:	6818      	ldr	r0, [r3, #0]
9001f3b8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001f3bc:	6803      	ldr	r3, [r0, #0]
9001f3be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f3c0:	4798      	blx	r3
9001f3c2:	4973      	ldr	r1, [pc, #460]	@ (9001f590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001f3c4:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001f3c8:	2c00      	cmp	r4, #0
9001f3ca:	880b      	ldrh	r3, [r1, #0]
9001f3cc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f3d0:	910d      	str	r1, [sp, #52]	@ 0x34
9001f3d2:	fb03 c202 	mla	r2, r3, r2, ip
9001f3d6:	bf08      	it	eq
9001f3d8:	46dc      	moveq	ip, fp
9001f3da:	fb03 f306 	mul.w	r3, r3, r6
9001f3de:	bf18      	it	ne
9001f3e0:	f04f 0c00 	movne.w	ip, #0
9001f3e4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f3e8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f3ec:	fa1f fc8c 	uxth.w	ip, ip
9001f3f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f3f4:	9106      	str	r1, [sp, #24]
9001f3f6:	9308      	str	r3, [sp, #32]
9001f3f8:	1d2b      	adds	r3, r5, #4
9001f3fa:	9309      	str	r3, [sp, #36]	@ 0x24
9001f3fc:	9b02      	ldr	r3, [sp, #8]
9001f3fe:	43da      	mvns	r2, r3
9001f400:	2300      	movs	r3, #0
9001f402:	b2d2      	uxtb	r2, r2
9001f404:	9303      	str	r3, [sp, #12]
9001f406:	9207      	str	r2, [sp, #28]
9001f408:	9a08      	ldr	r2, [sp, #32]
9001f40a:	4282      	cmp	r2, r0
9001f40c:	f240 80b6 	bls.w	9001f57c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001f410:	b963      	cbnz	r3, 9001f42c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f412:	9b01      	ldr	r3, [sp, #4]
9001f414:	781a      	ldrb	r2, [r3, #0]
9001f416:	0993      	lsrs	r3, r2, #6
9001f418:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f41c:	9203      	str	r2, [sp, #12]
9001f41e:	1e5a      	subs	r2, r3, #1
9001f420:	2a02      	cmp	r2, #2
9001f422:	d815      	bhi.n	9001f450 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001f424:	9a01      	ldr	r2, [sp, #4]
9001f426:	b29b      	uxth	r3, r3
9001f428:	3201      	adds	r2, #1
9001f42a:	9201      	str	r2, [sp, #4]
9001f42c:	b1b4      	cbz	r4, 9001f45c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001f42e:	429c      	cmp	r4, r3
9001f430:	bf91      	iteee	ls
9001f432:	1b1c      	subls	r4, r3, r4
9001f434:	1ae4      	subhi	r4, r4, r3
9001f436:	4666      	movhi	r6, ip
9001f438:	f04f 0800 	movhi.w	r8, #0
9001f43c:	bf9b      	ittet	ls
9001f43e:	fa1f f884 	uxthls.w	r8, r4
9001f442:	2400      	movls	r4, #0
9001f444:	b2a4      	uxthhi	r4, r4
9001f446:	fa1f f68b 	uxthls.w	r6, fp
9001f44a:	4643      	mov	r3, r8
9001f44c:	46b4      	mov	ip, r6
9001f44e:	e7db      	b.n	9001f408 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001f450:	9a01      	ldr	r2, [sp, #4]
9001f452:	9b01      	ldr	r3, [sp, #4]
9001f454:	3202      	adds	r2, #2
9001f456:	785b      	ldrb	r3, [r3, #1]
9001f458:	9201      	str	r2, [sp, #4]
9001f45a:	e7e7      	b.n	9001f42c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f45c:	2203      	movs	r2, #3
9001f45e:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001f460:	4563      	cmp	r3, ip
9001f462:	4615      	mov	r5, r2
9001f464:	9a03      	ldr	r2, [sp, #12]
9001f466:	bf2c      	ite	cs
9001f468:	eba3 080c 	subcs.w	r8, r3, ip
9001f46c:	ebac 0603 	subcc.w	r6, ip, r3
9001f470:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f474:	9905      	ldr	r1, [sp, #20]
9001f476:	bf24      	itt	cs
9001f478:	fa1f f888 	uxthcs.w	r8, r8
9001f47c:	46e1      	movcs	r9, ip
9001f47e:	eb01 0502 	add.w	r5, r1, r2
9001f482:	9902      	ldr	r1, [sp, #8]
9001f484:	bf2f      	iteee	cs
9001f486:	4626      	movcs	r6, r4
9001f488:	b2b6      	uxthcc	r6, r6
9001f48a:	4699      	movcc	r9, r3
9001f48c:	46a0      	movcc	r8, r4
9001f48e:	29ff      	cmp	r1, #255	@ 0xff
9001f490:	d04a      	beq.n	9001f528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001f492:	9f06      	ldr	r7, [sp, #24]
9001f494:	46ca      	mov	sl, r9
9001f496:	78a9      	ldrb	r1, [r5, #2]
9001f498:	9004      	str	r0, [sp, #16]
9001f49a:	4379      	muls	r1, r7
9001f49c:	910a      	str	r1, [sp, #40]	@ 0x28
9001f49e:	7869      	ldrb	r1, [r5, #1]
9001f4a0:	4379      	muls	r1, r7
9001f4a2:	910b      	str	r1, [sp, #44]	@ 0x2c
9001f4a4:	9905      	ldr	r1, [sp, #20]
9001f4a6:	5c8a      	ldrb	r2, [r1, r2]
9001f4a8:	437a      	muls	r2, r7
9001f4aa:	920c      	str	r2, [sp, #48]	@ 0x30
9001f4ac:	f1ba 0f00 	cmp.w	sl, #0
9001f4b0:	d03d      	beq.n	9001f52e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001f4b2:	9a04      	ldr	r2, [sp, #16]
9001f4b4:	f10a 3aff 	add.w	sl, sl, #4294967295
9001f4b8:	9f07      	ldr	r7, [sp, #28]
9001f4ba:	8812      	ldrh	r2, [r2, #0]
9001f4bc:	fa1f fa8a 	uxth.w	sl, sl
9001f4c0:	46be      	mov	lr, r7
9001f4c2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001f4c4:	1215      	asrs	r5, r2, #8
9001f4c6:	10d1      	asrs	r1, r2, #3
9001f4c8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f4cc:	00d2      	lsls	r2, r2, #3
9001f4ce:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f4d2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f4d6:	b2d2      	uxtb	r2, r2
9001f4d8:	fb05 750e 	mla	r5, r5, lr, r7
9001f4dc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f4e0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001f4e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f4e6:	b2ad      	uxth	r5, r5
9001f4e8:	fb01 710e 	mla	r1, r1, lr, r7
9001f4ec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001f4ee:	fb02 720e 	mla	r2, r2, lr, r7
9001f4f2:	f105 0e01 	add.w	lr, r5, #1
9001f4f6:	b289      	uxth	r1, r1
9001f4f8:	b292      	uxth	r2, r2
9001f4fa:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f4fe:	f102 0e01 	add.w	lr, r2, #1
9001f502:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f506:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001f50a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f50e:	4315      	orrs	r5, r2
9001f510:	1c4a      	adds	r2, r1, #1
9001f512:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f516:	9a04      	ldr	r2, [sp, #16]
9001f518:	0949      	lsrs	r1, r1, #5
9001f51a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f51e:	430d      	orrs	r5, r1
9001f520:	f822 5b02 	strh.w	r5, [r2], #2
9001f524:	9204      	str	r2, [sp, #16]
9001f526:	e7c1      	b.n	9001f4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001f528:	4649      	mov	r1, r9
9001f52a:	4686      	mov	lr, r0
9001f52c:	b999      	cbnz	r1, 9001f556 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001f52e:	4563      	cmp	r3, ip
9001f530:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001f534:	d389      	bcc.n	9001f44a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f536:	fa1f f68b 	uxth.w	r6, fp
9001f53a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001f53e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f540:	1ba4      	subs	r4, r4, r6
9001f542:	881b      	ldrh	r3, [r3, #0]
9001f544:	b2a4      	uxth	r4, r4
9001f546:	eba3 030b 	sub.w	r3, r3, fp
9001f54a:	2c00      	cmp	r4, #0
9001f54c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f550:	bf18      	it	ne
9001f552:	2600      	movne	r6, #0
9001f554:	e779      	b.n	9001f44a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f556:	78aa      	ldrb	r2, [r5, #2]
9001f558:	3901      	subs	r1, #1
9001f55a:	4f0e      	ldr	r7, [pc, #56]	@ (9001f594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001f55c:	b289      	uxth	r1, r1
9001f55e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001f562:	786a      	ldrb	r2, [r5, #1]
9001f564:	00d2      	lsls	r2, r2, #3
9001f566:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f56a:	ea4a 0202 	orr.w	r2, sl, r2
9001f56e:	f895 a000 	ldrb.w	sl, [r5]
9001f572:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001f576:	f82e 2b02 	strh.w	r2, [lr], #2
9001f57a:	e7d7      	b.n	9001f52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001f57c:	4b03      	ldr	r3, [pc, #12]	@ (9001f58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f57e:	6818      	ldr	r0, [r3, #0]
9001f580:	6803      	ldr	r3, [r0, #0]
9001f582:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f584:	4798      	blx	r3
9001f586:	b013      	add	sp, #76	@ 0x4c
9001f588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f58c:	24021d64 	.word	0x24021d64
9001f590:	24021d5e 	.word	0x24021d5e
9001f594:	fffff800 	.word	0xfffff800

9001f598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f59c:	b09d      	sub	sp, #116	@ 0x74
9001f59e:	461c      	mov	r4, r3
9001f5a0:	4683      	mov	fp, r0
9001f5a2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f5a4:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001f5a8:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001f5ac:	920e      	str	r2, [sp, #56]	@ 0x38
9001f5ae:	2a00      	cmp	r2, #0
9001f5b0:	f000 81e4 	beq.w	9001f97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f5b4:	6820      	ldr	r0, [r4, #0]
9001f5b6:	aa18      	add	r2, sp, #96	@ 0x60
9001f5b8:	6861      	ldr	r1, [r4, #4]
9001f5ba:	c203      	stmia	r2!, {r0, r1}
9001f5bc:	6818      	ldr	r0, [r3, #0]
9001f5be:	aa1a      	add	r2, sp, #104	@ 0x68
9001f5c0:	6859      	ldr	r1, [r3, #4]
9001f5c2:	c203      	stmia	r2!, {r0, r1}
9001f5c4:	a818      	add	r0, sp, #96	@ 0x60
9001f5c6:	f7f7 fdb3 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f5ca:	4621      	mov	r1, r4
9001f5cc:	a81a      	add	r0, sp, #104	@ 0x68
9001f5ce:	f7f7 fdd7 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f5d2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001f5d6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001f5da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f5de:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f5e2:	bfdb      	ittet	le
9001f5e4:	b29a      	uxthle	r2, r3
9001f5e6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f5ea:	2201      	movgt	r2, #1
9001f5ec:	fb91 f2f2 	sdivle	r2, r1, r2
9001f5f0:	9202      	str	r2, [sp, #8]
9001f5f2:	9802      	ldr	r0, [sp, #8]
9001f5f4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001f5f8:	9902      	ldr	r1, [sp, #8]
9001f5fa:	fb92 f0f0 	sdiv	r0, r2, r0
9001f5fe:	b280      	uxth	r0, r0
9001f600:	440c      	add	r4, r1
9001f602:	900f      	str	r0, [sp, #60]	@ 0x3c
9001f604:	3c01      	subs	r4, #1
9001f606:	9802      	ldr	r0, [sp, #8]
9001f608:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001f60a:	fb05 2510 	mls	r5, r5, r0, r2
9001f60e:	fb94 f4f1 	sdiv	r4, r4, r1
9001f612:	fb15 f503 	smulbb	r5, r5, r3
9001f616:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001f61a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001f61e:	3401      	adds	r4, #1
9001f620:	440d      	add	r5, r1
9001f622:	4419      	add	r1, r3
9001f624:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001f628:	b2a4      	uxth	r4, r4
9001f62a:	441a      	add	r2, r3
9001f62c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f630:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001f634:	00a4      	lsls	r4, r4, #2
9001f636:	9306      	str	r3, [sp, #24]
9001f638:	b2ad      	uxth	r5, r5
9001f63a:	4bb3      	ldr	r3, [pc, #716]	@ (9001f908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f63c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001f640:	6818      	ldr	r0, [r3, #0]
9001f642:	6803      	ldr	r3, [r0, #0]
9001f644:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f646:	4798      	blx	r3
9001f648:	4bb0      	ldr	r3, [pc, #704]	@ (9001f90c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f64a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001f64e:	2d00      	cmp	r5, #0
9001f650:	881a      	ldrh	r2, [r3, #0]
9001f652:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001f656:	fb02 f606 	mul.w	r6, r2, r6
9001f65a:	fb02 7101 	mla	r1, r2, r1, r7
9001f65e:	9316      	str	r3, [sp, #88]	@ 0x58
9001f660:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f664:	4baa      	ldr	r3, [pc, #680]	@ (9001f910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f666:	bf18      	it	ne
9001f668:	2100      	movne	r1, #0
9001f66a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f66e:	eba3 030b 	sub.w	r3, r3, fp
9001f672:	920a      	str	r2, [sp, #40]	@ 0x28
9001f674:	f104 0204 	add.w	r2, r4, #4
9001f678:	9317      	str	r3, [sp, #92]	@ 0x5c
9001f67a:	9213      	str	r2, [sp, #76]	@ 0x4c
9001f67c:	9a06      	ldr	r2, [sp, #24]
9001f67e:	bf08      	it	eq
9001f680:	4611      	moveq	r1, r2
9001f682:	2200      	movs	r2, #0
9001f684:	b289      	uxth	r1, r1
9001f686:	920d      	str	r2, [sp, #52]	@ 0x34
9001f688:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f68a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f68c:	fa12 f383 	uxtah	r3, r2, r3
9001f690:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f692:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f696:	3304      	adds	r3, #4
9001f698:	9308      	str	r3, [sp, #32]
9001f69a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f69c:	4543      	cmp	r3, r8
9001f69e:	f240 8168 	bls.w	9001f972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f6a2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001f6a6:	f04f 0e01 	mov.w	lr, #1
9001f6aa:	9a02      	ldr	r2, [sp, #8]
9001f6ac:	9808      	ldr	r0, [sp, #32]
9001f6ae:	fbb5 f3f3 	udiv	r3, r5, r3
9001f6b2:	1ad3      	subs	r3, r2, r3
9001f6b4:	7800      	ldrb	r0, [r0, #0]
9001f6b6:	b29b      	uxth	r3, r3
9001f6b8:	9010      	str	r0, [sp, #64]	@ 0x40
9001f6ba:	3001      	adds	r0, #1
9001f6bc:	9314      	str	r3, [sp, #80]	@ 0x50
9001f6be:	9b08      	ldr	r3, [sp, #32]
9001f6c0:	9007      	str	r0, [sp, #28]
9001f6c2:	785a      	ldrb	r2, [r3, #1]
9001f6c4:	789b      	ldrb	r3, [r3, #2]
9001f6c6:	021b      	lsls	r3, r3, #8
9001f6c8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f6cc:	9a08      	ldr	r2, [sp, #32]
9001f6ce:	78d2      	ldrb	r2, [r2, #3]
9001f6d0:	4313      	orrs	r3, r2
9001f6d2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f6d4:	441a      	add	r2, r3
9001f6d6:	1c50      	adds	r0, r2, #1
9001f6d8:	7852      	ldrb	r2, [r2, #1]
9001f6da:	9005      	str	r0, [sp, #20]
9001f6dc:	0212      	lsls	r2, r2, #8
9001f6de:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f6e0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f6e4:	5cc3      	ldrb	r3, [r0, r3]
9001f6e6:	431a      	orrs	r2, r3
9001f6e8:	b293      	uxth	r3, r2
9001f6ea:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001f6ee:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f6f0:	2300      	movs	r3, #0
9001f6f2:	9309      	str	r3, [sp, #36]	@ 0x24
9001f6f4:	2301      	movs	r3, #1
9001f6f6:	9301      	str	r3, [sp, #4]
9001f6f8:	9304      	str	r3, [sp, #16]
9001f6fa:	2300      	movs	r3, #0
9001f6fc:	9303      	str	r3, [sp, #12]
9001f6fe:	2d00      	cmp	r5, #0
9001f700:	d07d      	beq.n	9001f7fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f702:	45ae      	cmp	lr, r5
9001f704:	d26c      	bcs.n	9001f7e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f706:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f708:	eba5 050e 	sub.w	r5, r5, lr
9001f70c:	460c      	mov	r4, r1
9001f70e:	4543      	cmp	r3, r8
9001f710:	b2ad      	uxth	r5, r5
9001f712:	d802      	bhi.n	9001f71a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f714:	e071      	b.n	9001f7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f716:	2b00      	cmp	r3, #0
9001f718:	d15d      	bne.n	9001f7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f71a:	9b05      	ldr	r3, [sp, #20]
9001f71c:	9a04      	ldr	r2, [sp, #16]
9001f71e:	785b      	ldrb	r3, [r3, #1]
9001f720:	f1c2 0207 	rsb	r2, r2, #7
9001f724:	9904      	ldr	r1, [sp, #16]
9001f726:	4093      	lsls	r3, r2
9001f728:	005b      	lsls	r3, r3, #1
9001f72a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f72e:	9b05      	ldr	r3, [sp, #20]
9001f730:	781b      	ldrb	r3, [r3, #0]
9001f732:	410b      	asrs	r3, r1
9001f734:	3101      	adds	r1, #1
9001f736:	b2c9      	uxtb	r1, r1
9001f738:	b2db      	uxtb	r3, r3
9001f73a:	2908      	cmp	r1, #8
9001f73c:	9104      	str	r1, [sp, #16]
9001f73e:	9905      	ldr	r1, [sp, #20]
9001f740:	ea43 0302 	orr.w	r3, r3, r2
9001f744:	bf0c      	ite	eq
9001f746:	3102      	addeq	r1, #2
9001f748:	3101      	addne	r1, #1
9001f74a:	b29a      	uxth	r2, r3
9001f74c:	bf05      	ittet	eq
9001f74e:	9105      	streq	r1, [sp, #20]
9001f750:	2100      	moveq	r1, #0
9001f752:	9105      	strne	r1, [sp, #20]
9001f754:	9104      	streq	r1, [sp, #16]
9001f756:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001f758:	4291      	cmp	r1, r2
9001f75a:	d30a      	bcc.n	9001f772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f75c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001f760:	2301      	movs	r3, #1
9001f762:	9907      	ldr	r1, [sp, #28]
9001f764:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f768:	d30f      	bcc.n	9001f78a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f76a:	2100      	movs	r1, #0
9001f76c:	9301      	str	r3, [sp, #4]
9001f76e:	9103      	str	r1, [sp, #12]
9001f770:	e032      	b.n	9001f7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f772:	9b07      	ldr	r3, [sp, #28]
9001f774:	429a      	cmp	r2, r3
9001f776:	d318      	bcc.n	9001f7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f778:	9b01      	ldr	r3, [sp, #4]
9001f77a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001f77e:	445b      	add	r3, fp
9001f780:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f784:	9b01      	ldr	r3, [sp, #4]
9001f786:	3301      	adds	r3, #1
9001f788:	b29b      	uxth	r3, r3
9001f78a:	9907      	ldr	r1, [sp, #28]
9001f78c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001f790:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f794:	7108      	strb	r0, [r1, #4]
9001f796:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f798:	80c8      	strh	r0, [r1, #6]
9001f79a:	9801      	ldr	r0, [sp, #4]
9001f79c:	3001      	adds	r0, #1
9001f79e:	7148      	strb	r0, [r1, #5]
9001f7a0:	9907      	ldr	r1, [sp, #28]
9001f7a2:	3101      	adds	r1, #1
9001f7a4:	b289      	uxth	r1, r1
9001f7a6:	9107      	str	r1, [sp, #28]
9001f7a8:	e7df      	b.n	9001f76a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f7aa:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f7ae:	4611      	mov	r1, r2
9001f7b0:	795b      	ldrb	r3, [r3, #5]
9001f7b2:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001f7b6:	4458      	add	r0, fp
9001f7b8:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001f7ba:	4406      	add	r6, r0
9001f7bc:	2e00      	cmp	r6, #0
9001f7be:	dd06      	ble.n	9001f7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f7c0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f7c4:	790e      	ldrb	r6, [r1, #4]
9001f7c6:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f7ca:	88c9      	ldrh	r1, [r1, #6]
9001f7cc:	e7f4      	b.n	9001f7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f7ce:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001f7d2:	b29b      	uxth	r3, r3
9001f7d4:	e7c5      	b.n	9001f762 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f7d6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f7d8:	4621      	mov	r1, r4
9001f7da:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f7dc:	469e      	mov	lr, r3
9001f7de:	e78e      	b.n	9001f6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f7e0:	9a03      	ldr	r2, [sp, #12]
9001f7e2:	ebae 0305 	sub.w	r3, lr, r5
9001f7e6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f7ea:	442a      	add	r2, r5
9001f7ec:	b29b      	uxth	r3, r3
9001f7ee:	b292      	uxth	r2, r2
9001f7f0:	9203      	str	r2, [sp, #12]
9001f7f2:	2500      	movs	r5, #0
9001f7f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f7f6:	4542      	cmp	r2, r8
9001f7f8:	d88d      	bhi.n	9001f716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f7fa:	4621      	mov	r1, r4
9001f7fc:	e74d      	b.n	9001f69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f7fe:	458e      	cmp	lr, r1
9001f800:	f04f 0900 	mov.w	r9, #0
9001f804:	bf2b      	itete	cs
9001f806:	ebae 0301 	subcs.w	r3, lr, r1
9001f80a:	eba1 040e 	subcc.w	r4, r1, lr
9001f80e:	462c      	movcs	r4, r5
9001f810:	462b      	movcc	r3, r5
9001f812:	bf27      	ittee	cs
9001f814:	b29b      	uxthcs	r3, r3
9001f816:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001f818:	b2a4      	uxthcc	r4, r4
9001f81a:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001f81e:	9a03      	ldr	r2, [sp, #12]
9001f820:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001f822:	444a      	add	r2, r9
9001f824:	4548      	cmp	r0, r9
9001f826:	b292      	uxth	r2, r2
9001f828:	d074      	beq.n	9001f914 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f82a:	2004      	movs	r0, #4
9001f82c:	445a      	add	r2, fp
9001f82e:	4605      	mov	r5, r0
9001f830:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001f834:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f836:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f83a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f83c:	5880      	ldr	r0, [r0, r2]
9001f83e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f842:	d014      	beq.n	9001f86e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f844:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f848:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f84c:	d112      	bne.n	9001f874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f84e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f850:	2aff      	cmp	r2, #255	@ 0xff
9001f852:	d10f      	bne.n	9001f874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f854:	0942      	lsrs	r2, r0, #5
9001f856:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001f85a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f85e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f862:	f025 0507 	bic.w	r5, r5, #7
9001f866:	4315      	orrs	r5, r2
9001f868:	4305      	orrs	r5, r0
9001f86a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f86e:	f109 0901 	add.w	r9, r9, #1
9001f872:	e7d4      	b.n	9001f81e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f874:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f878:	b2ed      	uxtb	r5, r5
9001f87a:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f87e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f882:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001f886:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f88a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f88e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f892:	9215      	str	r2, [sp, #84]	@ 0x54
9001f894:	fa5f fc8c 	uxtb.w	ip, ip
9001f898:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f89a:	b2c0      	uxtb	r0, r0
9001f89c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f8a0:	fb02 fa0a 	mul.w	sl, r2, sl
9001f8a4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f8a8:	f10a 0201 	add.w	r2, sl, #1
9001f8ac:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f8b0:	1212      	asrs	r2, r2, #8
9001f8b2:	fa1f fa82 	uxth.w	sl, r2
9001f8b6:	43d2      	mvns	r2, r2
9001f8b8:	fb16 f60a 	smulbb	r6, r6, sl
9001f8bc:	b2d2      	uxtb	r2, r2
9001f8be:	fb10 f00a 	smulbb	r0, r0, sl
9001f8c2:	fb07 6702 	mla	r7, r7, r2, r6
9001f8c6:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001f8c8:	fb0c 0002 	mla	r0, ip, r2, r0
9001f8cc:	fb15 f50a 	smulbb	r5, r5, sl
9001f8d0:	b2bf      	uxth	r7, r7
9001f8d2:	b280      	uxth	r0, r0
9001f8d4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f8d8:	fb06 5602 	mla	r6, r6, r2, r5
9001f8dc:	1c7a      	adds	r2, r7, #1
9001f8de:	1c45      	adds	r5, r0, #1
9001f8e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f8e4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f8e8:	b2b6      	uxth	r6, r6
9001f8ea:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f8ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f8f2:	432f      	orrs	r7, r5
9001f8f4:	1c75      	adds	r5, r6, #1
9001f8f6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f8fa:	096d      	lsrs	r5, r5, #5
9001f8fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f900:	432f      	orrs	r7, r5
9001f902:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f906:	e7b2      	b.n	9001f86e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f908:	24021d64 	.word	0x24021d64
9001f90c:	24021d5e 	.word	0x24021d5e
9001f910:	fffff7fb 	.word	0xfffff7fb
9001f914:	9203      	str	r2, [sp, #12]
9001f916:	458e      	cmp	lr, r1
9001f918:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f91a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f91e:	f4ff af68 	bcc.w	9001f7f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f922:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001f924:	9906      	ldr	r1, [sp, #24]
9001f926:	8812      	ldrh	r2, [r2, #0]
9001f928:	1a52      	subs	r2, r2, r1
9001f92a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001f92c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f930:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f932:	3201      	adds	r2, #1
9001f934:	428a      	cmp	r2, r1
9001f936:	9209      	str	r2, [sp, #36]	@ 0x24
9001f938:	d111      	bne.n	9001f95e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f93a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001f93e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001f942:	9b06      	ldr	r3, [sp, #24]
9001f944:	eba5 0509 	sub.w	r5, r5, r9
9001f948:	b2ad      	uxth	r5, r5
9001f94a:	2d00      	cmp	r5, #0
9001f94c:	bf08      	it	eq
9001f94e:	4619      	moveq	r1, r3
9001f950:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f952:	bf18      	it	ne
9001f954:	2100      	movne	r1, #0
9001f956:	3301      	adds	r3, #1
9001f958:	b289      	uxth	r1, r1
9001f95a:	930d      	str	r3, [sp, #52]	@ 0x34
9001f95c:	e694      	b.n	9001f688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f95e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f962:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001f966:	1b2d      	subs	r5, r5, r4
9001f968:	b2ad      	uxth	r5, r5
9001f96a:	2d00      	cmp	r5, #0
9001f96c:	bf18      	it	ne
9001f96e:	2400      	movne	r4, #0
9001f970:	e740      	b.n	9001f7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f972:	4b04      	ldr	r3, [pc, #16]	@ (9001f984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f974:	6818      	ldr	r0, [r3, #0]
9001f976:	6803      	ldr	r3, [r0, #0]
9001f978:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f97a:	4798      	blx	r3
9001f97c:	b01d      	add	sp, #116	@ 0x74
9001f97e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f982:	bf00      	nop
9001f984:	24021d64 	.word	0x24021d64

9001f988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f98c:	b09f      	sub	sp, #124	@ 0x7c
9001f98e:	461d      	mov	r5, r3
9001f990:	4604      	mov	r4, r0
9001f992:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f994:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001f998:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001f99c:	920a      	str	r2, [sp, #40]	@ 0x28
9001f99e:	2a00      	cmp	r2, #0
9001f9a0:	f000 81fe 	beq.w	9001fda0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f9a4:	6828      	ldr	r0, [r5, #0]
9001f9a6:	aa1a      	add	r2, sp, #104	@ 0x68
9001f9a8:	6869      	ldr	r1, [r5, #4]
9001f9aa:	c203      	stmia	r2!, {r0, r1}
9001f9ac:	6818      	ldr	r0, [r3, #0]
9001f9ae:	aa1c      	add	r2, sp, #112	@ 0x70
9001f9b0:	6859      	ldr	r1, [r3, #4]
9001f9b2:	c203      	stmia	r2!, {r0, r1}
9001f9b4:	a81a      	add	r0, sp, #104	@ 0x68
9001f9b6:	f7f7 fbbb 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f9ba:	4629      	mov	r1, r5
9001f9bc:	a81c      	add	r0, sp, #112	@ 0x70
9001f9be:	f7f7 fbdf 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f9c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f9c6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f9ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f9ce:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001f9d2:	bfdb      	ittet	le
9001f9d4:	b29a      	uxthle	r2, r3
9001f9d6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f9da:	2201      	movgt	r2, #1
9001f9dc:	fb91 f2f2 	sdivle	r2, r1, r2
9001f9e0:	9201      	str	r2, [sp, #4]
9001f9e2:	9801      	ldr	r0, [sp, #4]
9001f9e4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001f9e8:	9901      	ldr	r1, [sp, #4]
9001f9ea:	fb92 f0f0 	sdiv	r0, r2, r0
9001f9ee:	b280      	uxth	r0, r0
9001f9f0:	440e      	add	r6, r1
9001f9f2:	9010      	str	r0, [sp, #64]	@ 0x40
9001f9f4:	3e01      	subs	r6, #1
9001f9f6:	9801      	ldr	r0, [sp, #4]
9001f9f8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001f9fa:	fb05 2510 	mls	r5, r5, r0, r2
9001f9fe:	fb96 f6f1 	sdiv	r6, r6, r1
9001fa02:	fb15 f503 	smulbb	r5, r5, r3
9001fa06:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001fa0a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001fa0e:	3601      	adds	r6, #1
9001fa10:	440d      	add	r5, r1
9001fa12:	4419      	add	r1, r3
9001fa14:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001fa18:	b2b6      	uxth	r6, r6
9001fa1a:	441a      	add	r2, r3
9001fa1c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001fa20:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001fa24:	b2ad      	uxth	r5, r5
9001fa26:	9304      	str	r3, [sp, #16]
9001fa28:	4b96      	ldr	r3, [pc, #600]	@ (9001fc84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001fa2a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001fa2e:	6818      	ldr	r0, [r3, #0]
9001fa30:	6803      	ldr	r3, [r0, #0]
9001fa32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fa34:	4798      	blx	r3
9001fa36:	4b94      	ldr	r3, [pc, #592]	@ (9001fc88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001fa38:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001fa3c:	2d00      	cmp	r5, #0
9001fa3e:	881a      	ldrh	r2, [r3, #0]
9001fa40:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001fa44:	fb02 f707 	mul.w	r7, r2, r7
9001fa48:	fb02 c101 	mla	r1, r2, r1, ip
9001fa4c:	9318      	str	r3, [sp, #96]	@ 0x60
9001fa4e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001fa52:	4b8e      	ldr	r3, [pc, #568]	@ (9001fc8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001fa54:	bf18      	it	ne
9001fa56:	2100      	movne	r1, #0
9001fa58:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001fa5c:	eba3 0304 	sub.w	r3, r3, r4
9001fa60:	920b      	str	r2, [sp, #44]	@ 0x2c
9001fa62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001fa64:	9319      	str	r3, [sp, #100]	@ 0x64
9001fa66:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001fa6a:	f106 0204 	add.w	r2, r6, #4
9001fa6e:	9206      	str	r2, [sp, #24]
9001fa70:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001fa72:	ea6f 0202 	mvn.w	r2, r2
9001fa76:	b2d2      	uxtb	r2, r2
9001fa78:	9215      	str	r2, [sp, #84]	@ 0x54
9001fa7a:	9a04      	ldr	r2, [sp, #16]
9001fa7c:	bf08      	it	eq
9001fa7e:	4611      	moveq	r1, r2
9001fa80:	2200      	movs	r2, #0
9001fa82:	b289      	uxth	r1, r1
9001fa84:	920d      	str	r2, [sp, #52]	@ 0x34
9001fa86:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001fa88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fa8a:	fa12 f383 	uxtah	r3, r2, r3
9001fa8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001fa90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001fa94:	3304      	adds	r3, #4
9001fa96:	9307      	str	r3, [sp, #28]
9001fa98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fa9a:	455b      	cmp	r3, fp
9001fa9c:	f240 817b 	bls.w	9001fd96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001faa0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001faa4:	f04f 0801 	mov.w	r8, #1
9001faa8:	9a01      	ldr	r2, [sp, #4]
9001faaa:	9807      	ldr	r0, [sp, #28]
9001faac:	46c4      	mov	ip, r8
9001faae:	f8cd 8008 	str.w	r8, [sp, #8]
9001fab2:	7800      	ldrb	r0, [r0, #0]
9001fab4:	fbb5 f3f3 	udiv	r3, r5, r3
9001fab8:	1ad3      	subs	r3, r2, r3
9001faba:	9011      	str	r0, [sp, #68]	@ 0x44
9001fabc:	3001      	adds	r0, #1
9001fabe:	b29b      	uxth	r3, r3
9001fac0:	9005      	str	r0, [sp, #20]
9001fac2:	9316      	str	r3, [sp, #88]	@ 0x58
9001fac4:	9b07      	ldr	r3, [sp, #28]
9001fac6:	785a      	ldrb	r2, [r3, #1]
9001fac8:	789b      	ldrb	r3, [r3, #2]
9001faca:	021b      	lsls	r3, r3, #8
9001facc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001fad0:	9a07      	ldr	r2, [sp, #28]
9001fad2:	78d2      	ldrb	r2, [r2, #3]
9001fad4:	4313      	orrs	r3, r2
9001fad6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001fad8:	441a      	add	r2, r3
9001fada:	1c50      	adds	r0, r2, #1
9001fadc:	7852      	ldrb	r2, [r2, #1]
9001fade:	9003      	str	r0, [sp, #12]
9001fae0:	0212      	lsls	r2, r2, #8
9001fae2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001fae4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001fae8:	5cc3      	ldrb	r3, [r0, r3]
9001faea:	431a      	orrs	r2, r3
9001faec:	b293      	uxth	r3, r2
9001faee:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001faf2:	930c      	str	r3, [sp, #48]	@ 0x30
9001faf4:	2300      	movs	r3, #0
9001faf6:	9308      	str	r3, [sp, #32]
9001faf8:	461a      	mov	r2, r3
9001fafa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001fafe:	930e      	str	r3, [sp, #56]	@ 0x38
9001fb00:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001fb04:	930f      	str	r3, [sp, #60]	@ 0x3c
9001fb06:	2d00      	cmp	r5, #0
9001fb08:	d07d      	beq.n	9001fc06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001fb0a:	45ac      	cmp	ip, r5
9001fb0c:	d26d      	bcs.n	9001fbea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001fb0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fb10:	eba5 050c 	sub.w	r5, r5, ip
9001fb14:	4608      	mov	r0, r1
9001fb16:	455b      	cmp	r3, fp
9001fb18:	b2ad      	uxth	r5, r5
9001fb1a:	d802      	bhi.n	9001fb22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001fb1c:	e071      	b.n	9001fc02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001fb1e:	2b00      	cmp	r3, #0
9001fb20:	d15d      	bne.n	9001fbde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001fb22:	9b03      	ldr	r3, [sp, #12]
9001fb24:	9a02      	ldr	r2, [sp, #8]
9001fb26:	785b      	ldrb	r3, [r3, #1]
9001fb28:	f1c2 0207 	rsb	r2, r2, #7
9001fb2c:	9902      	ldr	r1, [sp, #8]
9001fb2e:	4093      	lsls	r3, r2
9001fb30:	005b      	lsls	r3, r3, #1
9001fb32:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001fb36:	9b03      	ldr	r3, [sp, #12]
9001fb38:	781b      	ldrb	r3, [r3, #0]
9001fb3a:	410b      	asrs	r3, r1
9001fb3c:	3101      	adds	r1, #1
9001fb3e:	b2c9      	uxtb	r1, r1
9001fb40:	b2db      	uxtb	r3, r3
9001fb42:	2908      	cmp	r1, #8
9001fb44:	9102      	str	r1, [sp, #8]
9001fb46:	9903      	ldr	r1, [sp, #12]
9001fb48:	ea43 0302 	orr.w	r3, r3, r2
9001fb4c:	bf0c      	ite	eq
9001fb4e:	3102      	addeq	r1, #2
9001fb50:	3101      	addne	r1, #1
9001fb52:	b29a      	uxth	r2, r3
9001fb54:	bf05      	ittet	eq
9001fb56:	9103      	streq	r1, [sp, #12]
9001fb58:	2100      	moveq	r1, #0
9001fb5a:	9103      	strne	r1, [sp, #12]
9001fb5c:	9102      	streq	r1, [sp, #8]
9001fb5e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001fb60:	4291      	cmp	r1, r2
9001fb62:	d30a      	bcc.n	9001fb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001fb64:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001fb68:	2301      	movs	r3, #1
9001fb6a:	9905      	ldr	r1, [sp, #20]
9001fb6c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001fb70:	d30f      	bcc.n	9001fb92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001fb72:	2100      	movs	r1, #0
9001fb74:	4698      	mov	r8, r3
9001fb76:	9100      	str	r1, [sp, #0]
9001fb78:	e032      	b.n	9001fbe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001fb7a:	9b05      	ldr	r3, [sp, #20]
9001fb7c:	429a      	cmp	r2, r3
9001fb7e:	d318      	bcc.n	9001fbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001fb80:	eb04 0308 	add.w	r3, r4, r8
9001fb84:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001fb88:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001fb8c:	f108 0301 	add.w	r3, r8, #1
9001fb90:	b29b      	uxth	r3, r3
9001fb92:	9905      	ldr	r1, [sp, #20]
9001fb94:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001fb98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fb9c:	710e      	strb	r6, [r1, #4]
9001fb9e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001fba0:	80ce      	strh	r6, [r1, #6]
9001fba2:	f108 0601 	add.w	r6, r8, #1
9001fba6:	714e      	strb	r6, [r1, #5]
9001fba8:	9905      	ldr	r1, [sp, #20]
9001fbaa:	3101      	adds	r1, #1
9001fbac:	b289      	uxth	r1, r1
9001fbae:	9105      	str	r1, [sp, #20]
9001fbb0:	e7df      	b.n	9001fb72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001fbb2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001fbb6:	4611      	mov	r1, r2
9001fbb8:	795b      	ldrb	r3, [r3, #5]
9001fbba:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001fbbe:	4426      	add	r6, r4
9001fbc0:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001fbc2:	4437      	add	r7, r6
9001fbc4:	2f00      	cmp	r7, #0
9001fbc6:	dd06      	ble.n	9001fbd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001fbc8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fbcc:	790f      	ldrb	r7, [r1, #4]
9001fbce:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001fbd2:	88c9      	ldrh	r1, [r1, #6]
9001fbd4:	e7f4      	b.n	9001fbc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001fbd6:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001fbda:	b29b      	uxth	r3, r3
9001fbdc:	e7c5      	b.n	9001fb6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001fbde:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001fbe0:	920c      	str	r2, [sp, #48]	@ 0x30
9001fbe2:	4601      	mov	r1, r0
9001fbe4:	9a00      	ldr	r2, [sp, #0]
9001fbe6:	469c      	mov	ip, r3
9001fbe8:	e78d      	b.n	9001fb06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001fbea:	ebac 0305 	sub.w	r3, ip, r5
9001fbee:	1957      	adds	r7, r2, r5
9001fbf0:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fbf4:	b2ba      	uxth	r2, r7
9001fbf6:	b29b      	uxth	r3, r3
9001fbf8:	9200      	str	r2, [sp, #0]
9001fbfa:	2500      	movs	r5, #0
9001fbfc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001fbfe:	455a      	cmp	r2, fp
9001fc00:	d88d      	bhi.n	9001fb1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001fc02:	4601      	mov	r1, r0
9001fc04:	e748      	b.n	9001fa98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001fc06:	458c      	cmp	ip, r1
9001fc08:	bf27      	ittee	cs
9001fc0a:	ebac 0301 	subcs.w	r3, ip, r1
9001fc0e:	4628      	movcs	r0, r5
9001fc10:	eba1 000c 	subcc.w	r0, r1, ip
9001fc14:	462b      	movcc	r3, r5
9001fc16:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001fc18:	bf27      	ittee	cs
9001fc1a:	b29b      	uxthcs	r3, r3
9001fc1c:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001fc1e:	b280      	uxthcc	r0, r0
9001fc20:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001fc24:	2dff      	cmp	r5, #255	@ 0xff
9001fc26:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001fc28:	eb02 0705 	add.w	r7, r2, r5
9001fc2c:	b2bd      	uxth	r5, r7
9001fc2e:	9500      	str	r5, [sp, #0]
9001fc30:	d12e      	bne.n	9001fc90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001fc32:	465e      	mov	r6, fp
9001fc34:	9d00      	ldr	r5, [sp, #0]
9001fc36:	42aa      	cmp	r2, r5
9001fc38:	f040 8083 	bne.w	9001fd42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001fc3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001fc3e:	458c      	cmp	ip, r1
9001fc40:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fc44:	d3d9      	bcc.n	9001fbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001fc46:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001fc48:	9904      	ldr	r1, [sp, #16]
9001fc4a:	8812      	ldrh	r2, [r2, #0]
9001fc4c:	1a52      	subs	r2, r2, r1
9001fc4e:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001fc50:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fc54:	9a08      	ldr	r2, [sp, #32]
9001fc56:	3201      	adds	r2, #1
9001fc58:	428a      	cmp	r2, r1
9001fc5a:	9208      	str	r2, [sp, #32]
9001fc5c:	f040 8091 	bne.w	9001fd82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001fc60:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001fc64:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001fc68:	9b04      	ldr	r3, [sp, #16]
9001fc6a:	eba5 050c 	sub.w	r5, r5, ip
9001fc6e:	b2ad      	uxth	r5, r5
9001fc70:	2d00      	cmp	r5, #0
9001fc72:	bf08      	it	eq
9001fc74:	4619      	moveq	r1, r3
9001fc76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fc78:	bf18      	it	ne
9001fc7a:	2100      	movne	r1, #0
9001fc7c:	3301      	adds	r3, #1
9001fc7e:	b289      	uxth	r1, r1
9001fc80:	930d      	str	r3, [sp, #52]	@ 0x34
9001fc82:	e700      	b.n	9001fa86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001fc84:	24021d64 	.word	0x24021d64
9001fc88:	24021d5e 	.word	0x24021d5e
9001fc8c:	fffff7fb 	.word	0xfffff7fb
9001fc90:	46d9      	mov	r9, fp
9001fc92:	9d00      	ldr	r5, [sp, #0]
9001fc94:	42aa      	cmp	r2, r5
9001fc96:	d0d1      	beq.n	9001fc3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001fc98:	1c55      	adds	r5, r2, #1
9001fc9a:	4422      	add	r2, r4
9001fc9c:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001fca0:	9a06      	ldr	r2, [sp, #24]
9001fca2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001fca6:	9517      	str	r5, [sp, #92]	@ 0x5c
9001fca8:	4472      	add	r2, lr
9001fcaa:	9212      	str	r2, [sp, #72]	@ 0x48
9001fcac:	f8b9 2000 	ldrh.w	r2, [r9]
9001fcb0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001fcb2:	1216      	asrs	r6, r2, #8
9001fcb4:	f897 a002 	ldrb.w	sl, [r7, #2]
9001fcb8:	10d5      	asrs	r5, r2, #3
9001fcba:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fcbc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fcc0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fcc4:	00d2      	lsls	r2, r2, #3
9001fcc6:	fb1a fa07 	smulbb	sl, sl, r7
9001fcca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fcce:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fcd0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fcd4:	b2d2      	uxtb	r2, r2
9001fcd6:	fb06 a607 	mla	r6, r6, r7, sl
9001fcda:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001fcdc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fce0:	f897 a001 	ldrb.w	sl, [r7, #1]
9001fce4:	b2b6      	uxth	r6, r6
9001fce6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fce8:	fb1a fa07 	smulbb	sl, sl, r7
9001fcec:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fcee:	fb05 a507 	mla	r5, r5, r7, sl
9001fcf2:	9f06      	ldr	r7, [sp, #24]
9001fcf4:	f106 0a01 	add.w	sl, r6, #1
9001fcf8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001fcfc:	b2ad      	uxth	r5, r5
9001fcfe:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fd00:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001fd04:	f105 0a01 	add.w	sl, r5, #1
9001fd08:	fb1e fe07 	smulbb	lr, lr, r7
9001fd0c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fd0e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fd12:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001fd16:	fb02 e207 	mla	r2, r2, r7, lr
9001fd1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fd1e:	b292      	uxth	r2, r2
9001fd20:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fd24:	f102 0e01 	add.w	lr, r2, #1
9001fd28:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001fd2c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001fd30:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001fd34:	ea4e 0606 	orr.w	r6, lr, r6
9001fd38:	ea46 060a 	orr.w	r6, r6, sl
9001fd3c:	f829 6b02 	strh.w	r6, [r9], #2
9001fd40:	e7a7      	b.n	9001fc92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001fd42:	f102 0e01 	add.w	lr, r2, #1
9001fd46:	4422      	add	r2, r4
9001fd48:	9f06      	ldr	r7, [sp, #24]
9001fd4a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001fd4e:	9a06      	ldr	r2, [sp, #24]
9001fd50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001fd54:	eb02 0a05 	add.w	sl, r2, r5
9001fd58:	4a13      	ldr	r2, [pc, #76]	@ (9001fda8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001fd5a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001fd5e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001fd62:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fd66:	00d2      	lsls	r2, r2, #3
9001fd68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001fd6c:	ea49 0202 	orr.w	r2, r9, r2
9001fd70:	f817 9005 	ldrb.w	r9, [r7, r5]
9001fd74:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001fd78:	f826 2b02 	strh.w	r2, [r6], #2
9001fd7c:	fa1f f28e 	uxth.w	r2, lr
9001fd80:	e758      	b.n	9001fc34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001fd82:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fd86:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001fd8a:	1a2d      	subs	r5, r5, r0
9001fd8c:	b2ad      	uxth	r5, r5
9001fd8e:	2d00      	cmp	r5, #0
9001fd90:	bf18      	it	ne
9001fd92:	2000      	movne	r0, #0
9001fd94:	e732      	b.n	9001fbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001fd96:	4b05      	ldr	r3, [pc, #20]	@ (9001fdac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001fd98:	6818      	ldr	r0, [r3, #0]
9001fd9a:	6803      	ldr	r3, [r0, #0]
9001fd9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fd9e:	4798      	blx	r3
9001fda0:	b01f      	add	sp, #124	@ 0x7c
9001fda2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fda6:	bf00      	nop
9001fda8:	fffff800 	.word	0xfffff800
9001fdac:	24021d64 	.word	0x24021d64

9001fdb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001fdb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fdb4:	b091      	sub	sp, #68	@ 0x44
9001fdb6:	469b      	mov	fp, r3
9001fdb8:	4616      	mov	r6, r2
9001fdba:	f9b3 2000 	ldrsh.w	r2, [r3]
9001fdbe:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001fdc2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001fdc6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001fdca:	4604      	mov	r4, r0
9001fdcc:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001fdd0:	4640      	mov	r0, r8
9001fdd2:	460d      	mov	r5, r1
9001fdd4:	4659      	mov	r1, fp
9001fdd6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001fdda:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001fdde:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001fde2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001fde6:	f7f1 fb39 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
9001fdea:	4631      	mov	r1, r6
9001fdec:	4640      	mov	r0, r8
9001fdee:	f7f1 fb35 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
9001fdf2:	4b74      	ldr	r3, [pc, #464]	@ (9001ffc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001fdf4:	8818      	ldrh	r0, [r3, #0]
9001fdf6:	4b74      	ldr	r3, [pc, #464]	@ (9001ffc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001fdf8:	b202      	sxth	r2, r0
9001fdfa:	8819      	ldrh	r1, [r3, #0]
9001fdfc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001fe00:	b20e      	sxth	r6, r1
9001fe02:	2b00      	cmp	r3, #0
9001fe04:	da07      	bge.n	9001fe16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001fe06:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001fe0a:	4463      	add	r3, ip
9001fe0c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001fe10:	2300      	movs	r3, #0
9001fe12:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001fe16:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001fe1a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001fe1e:	1ad2      	subs	r2, r2, r3
9001fe20:	4594      	cmp	ip, r2
9001fe22:	bfc4      	itt	gt
9001fe24:	1ac2      	subgt	r2, r0, r3
9001fe26:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001fe2a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fe2e:	2a00      	cmp	r2, #0
9001fe30:	da07      	bge.n	9001fe42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001fe32:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001fe36:	4462      	add	r2, ip
9001fe38:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001fe3c:	2200      	movs	r2, #0
9001fe3e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001fe42:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001fe46:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001fe4a:	eba6 060a 	sub.w	r6, r6, sl
9001fe4e:	42b2      	cmp	r2, r6
9001fe50:	bfc4      	itt	gt
9001fe52:	eba1 020a 	subgt.w	r2, r1, sl
9001fe56:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001fe5a:	4a5c      	ldr	r2, [pc, #368]	@ (9001ffcc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001fe5c:	7812      	ldrb	r2, [r2, #0]
9001fe5e:	b9a2      	cbnz	r2, 9001fe8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001fe60:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001fe64:	4286      	cmp	r6, r0
9001fe66:	4640      	mov	r0, r8
9001fe68:	9303      	str	r3, [sp, #12]
9001fe6a:	bf14      	ite	ne
9001fe6c:	2600      	movne	r6, #0
9001fe6e:	2601      	moveq	r6, #1
9001fe70:	f7f1 fb37 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
9001fe74:	9b03      	ldr	r3, [sp, #12]
9001fe76:	b160      	cbz	r0, 9001fe92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001fe78:	2300      	movs	r3, #0
9001fe7a:	8023      	strh	r3, [r4, #0]
9001fe7c:	8063      	strh	r3, [r4, #2]
9001fe7e:	80a3      	strh	r3, [r4, #4]
9001fe80:	4620      	mov	r0, r4
9001fe82:	80e3      	strh	r3, [r4, #6]
9001fe84:	b011      	add	sp, #68	@ 0x44
9001fe86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe8a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001fe8e:	428e      	cmp	r6, r1
9001fe90:	e7e9      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001fe92:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001fe96:	a90e      	add	r1, sp, #56	@ 0x38
9001fe98:	900e      	str	r0, [sp, #56]	@ 0x38
9001fe9a:	a80c      	add	r0, sp, #48	@ 0x30
9001fe9c:	9205      	str	r2, [sp, #20]
9001fe9e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001fea2:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001fea6:	9206      	str	r2, [sp, #24]
9001fea8:	f8bb 2000 	ldrh.w	r2, [fp]
9001feac:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001feb0:	1a9b      	subs	r3, r3, r2
9001feb2:	b21b      	sxth	r3, r3
9001feb4:	9303      	str	r3, [sp, #12]
9001feb6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001feba:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001ffd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001febe:	ebaa 0a03 	sub.w	sl, sl, r3
9001fec2:	fa0f f38a 	sxth.w	r3, sl
9001fec6:	9304      	str	r3, [sp, #16]
9001fec8:	9b03      	ldr	r3, [sp, #12]
9001feca:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001fece:	9b04      	ldr	r3, [sp, #16]
9001fed0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001fed4:	9b05      	ldr	r3, [sp, #20]
9001fed6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001feda:	9b06      	ldr	r3, [sp, #24]
9001fedc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001fee0:	f7f7 f94e 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fee4:	4640      	mov	r0, r8
9001fee6:	f7f7 f923 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001feea:	a80e      	add	r0, sp, #56	@ 0x38
9001feec:	f7f7 f920 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fef0:	4b37      	ldr	r3, [pc, #220]	@ (9001ffd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001fef2:	4628      	mov	r0, r5
9001fef4:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001fef8:	881b      	ldrh	r3, [r3, #0]
9001fefa:	9307      	str	r3, [sp, #28]
9001fefc:	682b      	ldr	r3, [r5, #0]
9001fefe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ff00:	4798      	blx	r3
9001ff02:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001ff06:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001ff0a:	4681      	mov	r9, r0
9001ff0c:	f8db 0000 	ldr.w	r0, [fp]
9001ff10:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001ff14:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001ff16:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ff1a:	6803      	ldr	r3, [r0, #0]
9001ff1c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001ff1e:	4798      	blx	r3
9001ff20:	4607      	mov	r7, r0
9001ff22:	f8db 0000 	ldr.w	r0, [fp]
9001ff26:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001ff2a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ff2e:	6803      	ldr	r3, [r0, #0]
9001ff30:	9109      	str	r1, [sp, #36]	@ 0x24
9001ff32:	9208      	str	r2, [sp, #32]
9001ff34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ff36:	4798      	blx	r3
9001ff38:	f010 0f01 	tst.w	r0, #1
9001ff3c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001ff40:	d012      	beq.n	9001ff68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001ff42:	f8db 0000 	ldr.w	r0, [fp]
9001ff46:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001ff4a:	6803      	ldr	r3, [r0, #0]
9001ff4c:	9200      	str	r2, [sp, #0]
9001ff4e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001ff50:	462b      	mov	r3, r5
9001ff52:	e898 0006 	ldmia.w	r8, {r1, r2}
9001ff56:	47b0      	blx	r6
9001ff58:	9b03      	ldr	r3, [sp, #12]
9001ff5a:	8023      	strh	r3, [r4, #0]
9001ff5c:	9b04      	ldr	r3, [sp, #16]
9001ff5e:	8063      	strh	r3, [r4, #2]
9001ff60:	9b05      	ldr	r3, [sp, #20]
9001ff62:	80a3      	strh	r3, [r4, #4]
9001ff64:	9b06      	ldr	r3, [sp, #24]
9001ff66:	e78b      	b.n	9001fe80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001ff68:	fb09 f202 	mul.w	r2, r9, r2
9001ff6c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001ff70:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001ff74:	440f      	add	r7, r1
9001ff76:	b166      	cbz	r6, 9001ff92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ff78:	9a07      	ldr	r2, [sp, #28]
9001ff7a:	4592      	cmp	sl, r2
9001ff7c:	d109      	bne.n	9001ff92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ff7e:	f8db 0000 	ldr.w	r0, [fp]
9001ff82:	fb09 f303 	mul.w	r3, r9, r3
9001ff86:	4629      	mov	r1, r5
9001ff88:	6802      	ldr	r2, [r0, #0]
9001ff8a:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001ff8c:	463a      	mov	r2, r7
9001ff8e:	47b0      	blx	r6
9001ff90:	e7e2      	b.n	9001ff58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ff92:	fb0a f303 	mul.w	r3, sl, r3
9001ff96:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001ff9a:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001ffd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ff9e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001ffa2:	4545      	cmp	r5, r8
9001ffa4:	d2d8      	bcs.n	9001ff58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ffa6:	f8db 0000 	ldr.w	r0, [fp]
9001ffaa:	4629      	mov	r1, r5
9001ffac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001ffb0:	4435      	add	r5, r6
9001ffb2:	6802      	ldr	r2, [r0, #0]
9001ffb4:	005b      	lsls	r3, r3, #1
9001ffb6:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001ffba:	463a      	mov	r2, r7
9001ffbc:	47d0      	blx	sl
9001ffbe:	444f      	add	r7, r9
9001ffc0:	e7ef      	b.n	9001ffa2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001ffc2:	bf00      	nop
9001ffc4:	24021d58 	.word	0x24021d58
9001ffc8:	24021d5a 	.word	0x24021d5a
9001ffcc:	24021d5c 	.word	0x24021d5c
9001ffd0:	24021d5e 	.word	0x24021d5e
9001ffd4:	24021d64 	.word	0x24021d64

9001ffd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001ffd8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ffda:	4606      	mov	r6, r0
9001ffdc:	b087      	sub	sp, #28
9001ffde:	460c      	mov	r4, r1
9001ffe0:	4617      	mov	r7, r2
9001ffe2:	461d      	mov	r5, r3
9001ffe4:	b333      	cbz	r3, 90020034 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ffe6:	4608      	mov	r0, r1
9001ffe8:	f7f1 fa7b 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
9001ffec:	bb10      	cbnz	r0, 90020034 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ffee:	6820      	ldr	r0, [r4, #0]
9001fff0:	ab04      	add	r3, sp, #16
9001fff2:	6861      	ldr	r1, [r4, #4]
9001fff4:	4c1b      	ldr	r4, [pc, #108]	@ (90020064 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001fff6:	c303      	stmia	r3!, {r0, r1}
9001fff8:	a804      	add	r0, sp, #16
9001fffa:	f7f7 f899 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fffe:	6820      	ldr	r0, [r4, #0]
90020000:	6803      	ldr	r3, [r0, #0]
90020002:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020004:	4798      	blx	r3
90020006:	2dff      	cmp	r5, #255	@ 0xff
90020008:	d016      	beq.n	90020038 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9002000a:	f010 0f08 	tst.w	r0, #8
9002000e:	6820      	ldr	r0, [r4, #0]
90020010:	d015      	beq.n	9002003e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
90020012:	2400      	movs	r4, #0
90020014:	6801      	ldr	r1, [r0, #0]
90020016:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9002001a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9002001e:	e9cd 5402 	strd	r5, r4, [sp, #8]
90020022:	f8bd 4016 	ldrh.w	r4, [sp, #22]
90020026:	9401      	str	r4, [sp, #4]
90020028:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9002002c:	9400      	str	r4, [sp, #0]
9002002e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
90020030:	4639      	mov	r1, r7
90020032:	47a0      	blx	r4
90020034:	b007      	add	sp, #28
90020036:	bdf0      	pop	{r4, r5, r6, r7, pc}
90020038:	f010 0f02 	tst.w	r0, #2
9002003c:	e7e7      	b.n	9002000e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9002003e:	6803      	ldr	r3, [r0, #0]
90020040:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020042:	4798      	blx	r3
90020044:	4b08      	ldr	r3, [pc, #32]	@ (90020068 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
90020046:	4601      	mov	r1, r0
90020048:	4630      	mov	r0, r6
9002004a:	881a      	ldrh	r2, [r3, #0]
9002004c:	6833      	ldr	r3, [r6, #0]
9002004e:	e9cd 7500 	strd	r7, r5, [sp]
90020052:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
90020054:	ab04      	add	r3, sp, #16
90020056:	47a8      	blx	r5
90020058:	6820      	ldr	r0, [r4, #0]
9002005a:	6803      	ldr	r3, [r0, #0]
9002005c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002005e:	4798      	blx	r3
90020060:	e7e8      	b.n	90020034 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020062:	bf00      	nop
90020064:	24021d64 	.word	0x24021d64
90020068:	24021d5e 	.word	0x24021d5e

9002006c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9002006c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020070:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
90020074:	4688      	mov	r8, r1
90020076:	4614      	mov	r4, r2
90020078:	461d      	mov	r5, r3
9002007a:	9e08      	ldr	r6, [sp, #32]
9002007c:	2f00      	cmp	r7, #0
9002007e:	f000 80ab 	beq.w	900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020082:	4618      	mov	r0, r3
90020084:	f7f1 fa2d 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
90020088:	2800      	cmp	r0, #0
9002008a:	f040 80a5 	bne.w	900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002008e:	f9b5 1000 	ldrsh.w	r1, [r5]
90020092:	2fff      	cmp	r7, #255	@ 0xff
90020094:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90020098:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9002009c:	fb04 1303 	mla	r3, r4, r3, r1
900200a0:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
900200a4:	eba4 0200 	sub.w	r2, r4, r0
900200a8:	eb08 0143 	add.w	r1, r8, r3, lsl #1
900200ac:	fb04 f505 	mul.w	r5, r4, r5
900200b0:	ea4f 2816 	mov.w	r8, r6, lsr #8
900200b4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
900200b8:	d04a      	beq.n	90020150 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
900200ba:	b2bc      	uxth	r4, r7
900200bc:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
900200c0:	f3c6 4e07 	ubfx	lr, r6, #16, #8
900200c4:	fa5f f788 	uxtb.w	r7, r8
900200c8:	b2f3      	uxtb	r3, r6
900200ca:	0040      	lsls	r0, r0, #1
900200cc:	fb0e fe04 	mul.w	lr, lr, r4
900200d0:	4367      	muls	r7, r4
900200d2:	ea4f 0842 	mov.w	r8, r2, lsl #1
900200d6:	4363      	muls	r3, r4
900200d8:	fa1f fc8c 	uxth.w	ip, ip
900200dc:	42a9      	cmp	r1, r5
900200de:	d27b      	bcs.n	900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900200e0:	eb01 0900 	add.w	r9, r1, r0
900200e4:	4549      	cmp	r1, r9
900200e6:	d231      	bcs.n	9002014c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
900200e8:	880a      	ldrh	r2, [r1, #0]
900200ea:	1214      	asrs	r4, r2, #8
900200ec:	10d6      	asrs	r6, r2, #3
900200ee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900200f2:	00d2      	lsls	r2, r2, #3
900200f4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900200f8:	b2d2      	uxtb	r2, r2
900200fa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900200fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020102:	fb14 f40c 	smulbb	r4, r4, ip
90020106:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002010a:	fb12 f20c 	smulbb	r2, r2, ip
9002010e:	fb16 f60c 	smulbb	r6, r6, ip
90020112:	4474      	add	r4, lr
90020114:	441a      	add	r2, r3
90020116:	b2a4      	uxth	r4, r4
90020118:	443e      	add	r6, r7
9002011a:	b292      	uxth	r2, r2
9002011c:	f104 0a01 	add.w	sl, r4, #1
90020120:	b2b6      	uxth	r6, r6
90020122:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020126:	f102 0a01 	add.w	sl, r2, #1
9002012a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9002012e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90020132:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020136:	4322      	orrs	r2, r4
90020138:	1c74      	adds	r4, r6, #1
9002013a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9002013e:	0976      	lsrs	r6, r6, #5
90020140:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020144:	4332      	orrs	r2, r6
90020146:	f821 2b02 	strh.w	r2, [r1], #2
9002014a:	e7cb      	b.n	900200e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9002014c:	4441      	add	r1, r8
9002014e:	e7c5      	b.n	900200dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90020150:	0973      	lsrs	r3, r6, #5
90020152:	4f22      	ldr	r7, [pc, #136]	@ (900201dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90020154:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90020158:	ea08 0707 	and.w	r7, r8, r7
9002015c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020160:	433b      	orrs	r3, r7
90020162:	07e7      	lsls	r7, r4, #31
90020164:	ea43 0306 	orr.w	r3, r3, r6
90020168:	b29b      	uxth	r3, r3
9002016a:	d50b      	bpl.n	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9002016c:	0040      	lsls	r0, r0, #1
9002016e:	0052      	lsls	r2, r2, #1
90020170:	42a9      	cmp	r1, r5
90020172:	d231      	bcs.n	900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020174:	180c      	adds	r4, r1, r0
90020176:	42a1      	cmp	r1, r4
90020178:	d202      	bcs.n	90020180 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9002017a:	f821 3b02 	strh.w	r3, [r1], #2
9002017e:	e7fa      	b.n	90020176 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90020180:	4411      	add	r1, r2
90020182:	e7f5      	b.n	90020170 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90020184:	078e      	lsls	r6, r1, #30
90020186:	d008      	beq.n	9002019a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90020188:	0066      	lsls	r6, r4, #1
9002018a:	460a      	mov	r2, r1
9002018c:	42aa      	cmp	r2, r5
9002018e:	d202      	bcs.n	90020196 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90020190:	8013      	strh	r3, [r2, #0]
90020192:	4432      	add	r2, r6
90020194:	e7fa      	b.n	9002018c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
90020196:	3102      	adds	r1, #2
90020198:	3801      	subs	r0, #1
9002019a:	07c2      	lsls	r2, r0, #31
9002019c:	d50b      	bpl.n	900201b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9002019e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
900201a2:	0066      	lsls	r6, r4, #1
900201a4:	3a01      	subs	r2, #1
900201a6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
900201aa:	42aa      	cmp	r2, r5
900201ac:	d202      	bcs.n	900201b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
900201ae:	8013      	strh	r3, [r2, #0]
900201b0:	4432      	add	r2, r6
900201b2:	e7fa      	b.n	900201aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
900201b4:	3801      	subs	r0, #1
900201b6:	b178      	cbz	r0, 900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900201b8:	1040      	asrs	r0, r0, #1
900201ba:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
900201be:	0080      	lsls	r0, r0, #2
900201c0:	0064      	lsls	r4, r4, #1
900201c2:	42a9      	cmp	r1, r5
900201c4:	d208      	bcs.n	900201d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900201c6:	180e      	adds	r6, r1, r0
900201c8:	460a      	mov	r2, r1
900201ca:	42b2      	cmp	r2, r6
900201cc:	d202      	bcs.n	900201d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
900201ce:	f842 3b04 	str.w	r3, [r2], #4
900201d2:	e7fa      	b.n	900201ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
900201d4:	4421      	add	r1, r4
900201d6:	e7f4      	b.n	900201c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
900201d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900201dc:	00fff800 	.word	0x00fff800

900201e0 <_ZN8touchgfx8LCD16bppC1Ev>:
900201e0:	2200      	movs	r2, #0
900201e2:	4912      	ldr	r1, [pc, #72]	@ (9002022c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
900201e4:	e9c0 2201 	strd	r2, r2, [r0, #4]
900201e8:	6001      	str	r1, [r0, #0]
900201ea:	e9c0 2203 	strd	r2, r2, [r0, #12]
900201ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
900201f2:	e9c0 2207 	strd	r2, r2, [r0, #28]
900201f6:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
900201fa:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
900201fe:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
90020202:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90020206:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9002020a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9002020e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90020212:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90020216:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9002021a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9002021e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
90020222:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
90020226:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9002022a:	4770      	bx	lr
9002022c:	9002ed5c 	.word	0x9002ed5c

90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90020230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020234:	b08d      	sub	sp, #52	@ 0x34
90020236:	460d      	mov	r5, r1
90020238:	4604      	mov	r4, r0
9002023a:	4699      	mov	r9, r3
9002023c:	6808      	ldr	r0, [r1, #0]
9002023e:	ab08      	add	r3, sp, #32
90020240:	6849      	ldr	r1, [r1, #4]
90020242:	c303      	stmia	r3!, {r0, r1}
90020244:	6810      	ldr	r0, [r2, #0]
90020246:	ab0a      	add	r3, sp, #40	@ 0x28
90020248:	6851      	ldr	r1, [r2, #4]
9002024a:	c303      	stmia	r3!, {r0, r1}
9002024c:	a808      	add	r0, sp, #32
9002024e:	f7f6 ff6f 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020252:	4629      	mov	r1, r5
90020254:	a80a      	add	r0, sp, #40	@ 0x28
90020256:	4d67      	ldr	r5, [pc, #412]	@ (900203f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020258:	f7f6 ff92 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002025c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90020260:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90020264:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90020268:	6828      	ldr	r0, [r5, #0]
9002026a:	fb11 2103 	smlabb	r1, r1, r3, r2
9002026e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
90020272:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90020276:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9002027a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9002027e:	440a      	add	r2, r1
90020280:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90020284:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90020288:	4413      	add	r3, r2
9002028a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9002028e:	6803      	ldr	r3, [r0, #0]
90020290:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020292:	4798      	blx	r3
90020294:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90020298:	d119      	bne.n	900202ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9002029a:	f010 0f20 	tst.w	r0, #32
9002029e:	6828      	ldr	r0, [r5, #0]
900202a0:	d018      	beq.n	900202d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
900202a2:	2500      	movs	r5, #0
900202a4:	6801      	ldr	r1, [r0, #0]
900202a6:	b2b6      	uxth	r6, r6
900202a8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900202ac:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
900202b0:	9601      	str	r6, [sp, #4]
900202b2:	e9cd 9503 	strd	r9, r5, [sp, #12]
900202b6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
900202ba:	9502      	str	r5, [sp, #8]
900202bc:	fa1f f588 	uxth.w	r5, r8
900202c0:	9500      	str	r5, [sp, #0]
900202c2:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
900202c4:	4621      	mov	r1, r4
900202c6:	47a8      	blx	r5
900202c8:	b00d      	add	sp, #52	@ 0x34
900202ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900202ce:	f010 0f40 	tst.w	r0, #64	@ 0x40
900202d2:	e7e4      	b.n	9002029e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
900202d4:	6803      	ldr	r3, [r0, #0]
900202d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900202d8:	4798      	blx	r3
900202da:	4947      	ldr	r1, [pc, #284]	@ (900203f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
900202dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900202e0:	880b      	ldrh	r3, [r1, #0]
900202e2:	468a      	mov	sl, r1
900202e4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
900202e8:	fb03 5202 	mla	r2, r3, r2, r5
900202ec:	4373      	muls	r3, r6
900202ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900202f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900202f6:	9307      	str	r3, [sp, #28]
900202f8:	ea4f 0348 	mov.w	r3, r8, lsl #1
900202fc:	9306      	str	r3, [sp, #24]
900202fe:	9b07      	ldr	r3, [sp, #28]
90020300:	4298      	cmp	r0, r3
90020302:	d270      	bcs.n	900203e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90020304:	9b06      	ldr	r3, [sp, #24]
90020306:	4621      	mov	r1, r4
90020308:	eb00 0b03 	add.w	fp, r0, r3
9002030c:	4558      	cmp	r0, fp
9002030e:	d25d      	bcs.n	900203cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90020310:	f851 4b04 	ldr.w	r4, [r1], #4
90020314:	0e23      	lsrs	r3, r4, #24
90020316:	d014      	beq.n	90020342 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020318:	2bff      	cmp	r3, #255	@ 0xff
9002031a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9002031e:	d112      	bne.n	90020346 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90020320:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90020324:	d10f      	bne.n	90020346 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90020326:	0963      	lsrs	r3, r4, #5
90020328:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9002032c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90020330:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020334:	f02c 0c07 	bic.w	ip, ip, #7
90020338:	ea43 0c0c 	orr.w	ip, r3, ip
9002033c:	ea4c 0404 	orr.w	r4, ip, r4
90020340:	8004      	strh	r4, [r0, #0]
90020342:	3002      	adds	r0, #2
90020344:	e7e2      	b.n	9002030c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
90020346:	fb09 f303 	mul.w	r3, r9, r3
9002034a:	8807      	ldrh	r7, [r0, #0]
9002034c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90020350:	fa5f fc8c 	uxtb.w	ip, ip
90020354:	1c5a      	adds	r2, r3, #1
90020356:	123e      	asrs	r6, r7, #8
90020358:	10fd      	asrs	r5, r7, #3
9002035a:	eb02 2223 	add.w	r2, r2, r3, asr #8
9002035e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020362:	00ff      	lsls	r7, r7, #3
90020364:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020368:	1212      	asrs	r2, r2, #8
9002036a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002036e:	b293      	uxth	r3, r2
90020370:	43d2      	mvns	r2, r2
90020372:	b2ff      	uxtb	r7, r7
90020374:	fb1e fe03 	smulbb	lr, lr, r3
90020378:	b2d2      	uxtb	r2, r2
9002037a:	fb1c fc03 	smulbb	ip, ip, r3
9002037e:	b2e4      	uxtb	r4, r4
90020380:	fb06 e602 	mla	r6, r6, r2, lr
90020384:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020388:	fb14 f403 	smulbb	r4, r4, r3
9002038c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90020390:	b2b6      	uxth	r6, r6
90020392:	fb05 c502 	mla	r5, r5, r2, ip
90020396:	fb07 4702 	mla	r7, r7, r2, r4
9002039a:	f106 0e01 	add.w	lr, r6, #1
9002039e:	b2ad      	uxth	r5, r5
900203a0:	b2bf      	uxth	r7, r7
900203a2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
900203a6:	f105 0c01 	add.w	ip, r5, #1
900203aa:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
900203ae:	1c7e      	adds	r6, r7, #1
900203b0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900203b4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
900203b8:	096d      	lsrs	r5, r5, #5
900203ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
900203be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900203c2:	ea46 060e 	orr.w	r6, r6, lr
900203c6:	432e      	orrs	r6, r5
900203c8:	8006      	strh	r6, [r0, #0]
900203ca:	e7ba      	b.n	90020342 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
900203cc:	f8ba 3000 	ldrh.w	r3, [sl]
900203d0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
900203d4:	eba3 0308 	sub.w	r3, r3, r8
900203d8:	eba4 0408 	sub.w	r4, r4, r8
900203dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900203e0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
900203e4:	e78b      	b.n	900202fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
900203e6:	4b03      	ldr	r3, [pc, #12]	@ (900203f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
900203e8:	6818      	ldr	r0, [r3, #0]
900203ea:	6803      	ldr	r3, [r0, #0]
900203ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900203ee:	4798      	blx	r3
900203f0:	e76a      	b.n	900202c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
900203f2:	bf00      	nop
900203f4:	24021d64 	.word	0x24021d64
900203f8:	24021d5e 	.word	0x24021d5e

900203fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
900203fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90020400:	b085      	sub	sp, #20
90020402:	6810      	ldr	r0, [r2, #0]
90020404:	460c      	mov	r4, r1
90020406:	6851      	ldr	r1, [r2, #4]
90020408:	466d      	mov	r5, sp
9002040a:	4616      	mov	r6, r2
9002040c:	c503      	stmia	r5!, {r0, r1}
9002040e:	6818      	ldr	r0, [r3, #0]
90020410:	6859      	ldr	r1, [r3, #4]
90020412:	c503      	stmia	r5!, {r0, r1}
90020414:	4668      	mov	r0, sp
90020416:	4d2e      	ldr	r5, [pc, #184]	@ (900204d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90020418:	f7f6 fe8a 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002041c:	4631      	mov	r1, r6
9002041e:	a802      	add	r0, sp, #8
90020420:	4e2c      	ldr	r6, [pc, #176]	@ (900204d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
90020422:	f7f6 fead 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020426:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9002042a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9002042e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90020432:	6828      	ldr	r0, [r5, #0]
90020434:	fb11 2103 	smlabb	r1, r1, r3, r2
90020438:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9002043c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90020440:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90020444:	f8bd 1000 	ldrh.w	r1, [sp]
90020448:	440a      	add	r2, r1
9002044a:	f8ad 2008 	strh.w	r2, [sp, #8]
9002044e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90020452:	4413      	add	r3, r2
90020454:	f8ad 300a 	strh.w	r3, [sp, #10]
90020458:	6803      	ldr	r3, [r0, #0]
9002045a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002045c:	4798      	blx	r3
9002045e:	8833      	ldrh	r3, [r6, #0]
90020460:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90020464:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90020468:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9002046c:	f8df e068 	ldr.w	lr, [pc, #104]	@ 900204d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
90020470:	fb03 1202 	mla	r2, r3, r2, r1
90020474:	fb08 f303 	mul.w	r3, r8, r3
90020478:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002047c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020480:	4298      	cmp	r0, r3
90020482:	d21d      	bcs.n	900204c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90020484:	eb00 080c 	add.w	r8, r0, ip
90020488:	4540      	cmp	r0, r8
9002048a:	d20f      	bcs.n	900204ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9002048c:	f854 1b04 	ldr.w	r1, [r4], #4
90020490:	ea4f 1951 	mov.w	r9, r1, lsr #5
90020494:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90020498:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002049c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900204a0:	ea42 0209 	orr.w	r2, r2, r9
900204a4:	430a      	orrs	r2, r1
900204a6:	f820 2b02 	strh.w	r2, [r0], #2
900204aa:	e7ed      	b.n	90020488 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
900204ac:	8832      	ldrh	r2, [r6, #0]
900204ae:	1bd2      	subs	r2, r2, r7
900204b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900204b4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
900204b8:	1bd2      	subs	r2, r2, r7
900204ba:	eb04 0482 	add.w	r4, r4, r2, lsl #2
900204be:	e7df      	b.n	90020480 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
900204c0:	6828      	ldr	r0, [r5, #0]
900204c2:	6803      	ldr	r3, [r0, #0]
900204c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900204c6:	4798      	blx	r3
900204c8:	b005      	add	sp, #20
900204ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900204ce:	bf00      	nop
900204d0:	24021d64 	.word	0x24021d64
900204d4:	24021d5e 	.word	0x24021d5e
900204d8:	fffff800 	.word	0xfffff800

900204dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
900204dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900204e0:	b08e      	sub	sp, #56	@ 0x38
900204e2:	460e      	mov	r6, r1
900204e4:	4604      	mov	r4, r0
900204e6:	461d      	mov	r5, r3
900204e8:	6808      	ldr	r0, [r1, #0]
900204ea:	ab0a      	add	r3, sp, #40	@ 0x28
900204ec:	6849      	ldr	r1, [r1, #4]
900204ee:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 900206c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
900204f2:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 900206c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
900204f6:	c303      	stmia	r3!, {r0, r1}
900204f8:	6810      	ldr	r0, [r2, #0]
900204fa:	ab0c      	add	r3, sp, #48	@ 0x30
900204fc:	6851      	ldr	r1, [r2, #4]
900204fe:	c303      	stmia	r3!, {r0, r1}
90020500:	a80a      	add	r0, sp, #40	@ 0x28
90020502:	f7f6 fe15 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020506:	4631      	mov	r1, r6
90020508:	a80c      	add	r0, sp, #48	@ 0x30
9002050a:	f7f6 fe39 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002050e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90020512:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90020516:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9002051a:	f8d8 0000 	ldr.w	r0, [r8]
9002051e:	fb11 2103 	smlabb	r1, r1, r3, r2
90020522:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
90020526:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9002052a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002052e:	440c      	add	r4, r1
90020530:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90020534:	440a      	add	r2, r1
90020536:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002053a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9002053e:	4413      	add	r3, r2
90020540:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90020544:	6803      	ldr	r3, [r0, #0]
90020546:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020548:	4798      	blx	r3
9002054a:	2dff      	cmp	r5, #255	@ 0xff
9002054c:	d124      	bne.n	90020598 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9002054e:	f010 0f01 	tst.w	r0, #1
90020552:	f8d8 0000 	ldr.w	r0, [r8]
90020556:	d022      	beq.n	9002059e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90020558:	2100      	movs	r1, #0
9002055a:	f04f 0e01 	mov.w	lr, #1
9002055e:	f8d0 c000 	ldr.w	ip, [r0]
90020562:	b2b6      	uxth	r6, r6
90020564:	f8cd e018 	str.w	lr, [sp, #24]
90020568:	b2bf      	uxth	r7, r7
9002056a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9002056e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90020572:	e9cd 1107 	strd	r1, r1, [sp, #28]
90020576:	f8b9 e000 	ldrh.w	lr, [r9]
9002057a:	9503      	str	r5, [sp, #12]
9002057c:	9601      	str	r6, [sp, #4]
9002057e:	9700      	str	r7, [sp, #0]
90020580:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90020584:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90020588:	9102      	str	r1, [sp, #8]
9002058a:	4621      	mov	r1, r4
9002058c:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
90020590:	47a8      	blx	r5
90020592:	b00e      	add	sp, #56	@ 0x38
90020594:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020598:	f010 0f04 	tst.w	r0, #4
9002059c:	e7d9      	b.n	90020552 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9002059e:	6803      	ldr	r3, [r0, #0]
900205a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900205a2:	4798      	blx	r3
900205a4:	f8b9 3000 	ldrh.w	r3, [r9]
900205a8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
900205ac:	ea4f 0e47 	mov.w	lr, r7, lsl #1
900205b0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
900205b4:	435e      	muls	r6, r3
900205b6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
900205ba:	2dff      	cmp	r5, #255	@ 0xff
900205bc:	fb03 1202 	mla	r2, r3, r2, r1
900205c0:	ebac 0c07 	sub.w	ip, ip, r7
900205c4:	eba3 0707 	sub.w	r7, r3, r7
900205c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900205cc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900205d0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900205d4:	ea4f 0747 	mov.w	r7, r7, lsl #1
900205d8:	d049      	beq.n	9002066e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
900205da:	43eb      	mvns	r3, r5
900205dc:	fa1f f985 	uxth.w	r9, r5
900205e0:	b2db      	uxtb	r3, r3
900205e2:	42b0      	cmp	r0, r6
900205e4:	d266      	bcs.n	900206b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900205e6:	eb00 0a0e 	add.w	sl, r0, lr
900205ea:	4550      	cmp	r0, sl
900205ec:	4621      	mov	r1, r4
900205ee:	f104 0403 	add.w	r4, r4, #3
900205f2:	d25b      	bcs.n	900206ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
900205f4:	8802      	ldrh	r2, [r0, #0]
900205f6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900205fa:	ea4f 2822 	mov.w	r8, r2, asr #8
900205fe:	fb11 f109 	smulbb	r1, r1, r9
90020602:	10d5      	asrs	r5, r2, #3
90020604:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90020608:	00d2      	lsls	r2, r2, #3
9002060a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002060e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
90020612:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020616:	fb08 1803 	mla	r8, r8, r3, r1
9002061a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9002061e:	b2d2      	uxtb	r2, r2
90020620:	fb11 f109 	smulbb	r1, r1, r9
90020624:	fa1f f888 	uxth.w	r8, r8
90020628:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002062c:	fb05 1503 	mla	r5, r5, r3, r1
90020630:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90020634:	fb11 f109 	smulbb	r1, r1, r9
90020638:	b2ad      	uxth	r5, r5
9002063a:	fb02 1203 	mla	r2, r2, r3, r1
9002063e:	f108 0101 	add.w	r1, r8, #1
90020642:	b292      	uxth	r2, r2
90020644:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90020648:	1c51      	adds	r1, r2, #1
9002064a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9002064e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90020652:	1c69      	adds	r1, r5, #1
90020654:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90020658:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002065c:	096d      	lsrs	r5, r5, #5
9002065e:	ea42 0208 	orr.w	r2, r2, r8
90020662:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020666:	432a      	orrs	r2, r5
90020668:	f820 2b02 	strh.w	r2, [r0], #2
9002066c:	e7bd      	b.n	900205ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9002066e:	4a14      	ldr	r2, [pc, #80]	@ (900206c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90020670:	42b0      	cmp	r0, r6
90020672:	d21f      	bcs.n	900206b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90020674:	eb00 050e 	add.w	r5, r0, lr
90020678:	42a8      	cmp	r0, r5
9002067a:	4621      	mov	r1, r4
9002067c:	f104 0403 	add.w	r4, r4, #3
90020680:	d210      	bcs.n	900206a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90020682:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90020686:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9002068a:	00db      	lsls	r3, r3, #3
9002068c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90020690:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020694:	430b      	orrs	r3, r1
90020696:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002069a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9002069e:	f820 3b02 	strh.w	r3, [r0], #2
900206a2:	e7e9      	b.n	90020678 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
900206a4:	4438      	add	r0, r7
900206a6:	eb01 040c 	add.w	r4, r1, ip
900206aa:	e7e1      	b.n	90020670 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
900206ac:	4438      	add	r0, r7
900206ae:	eb01 040c 	add.w	r4, r1, ip
900206b2:	e796      	b.n	900205e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
900206b4:	4b03      	ldr	r3, [pc, #12]	@ (900206c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
900206b6:	6818      	ldr	r0, [r3, #0]
900206b8:	6803      	ldr	r3, [r0, #0]
900206ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900206bc:	4798      	blx	r3
900206be:	e768      	b.n	90020592 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
900206c0:	fffff800 	.word	0xfffff800
900206c4:	24021d64 	.word	0x24021d64
900206c8:	24021d5e 	.word	0x24021d5e

900206cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
900206cc:	b4f0      	push	{r4, r5, r6, r7}
900206ce:	4616      	mov	r6, r2
900206d0:	461c      	mov	r4, r3
900206d2:	460d      	mov	r5, r1
900206d4:	9a04      	ldr	r2, [sp, #16]
900206d6:	2e01      	cmp	r6, #1
900206d8:	f89d 3014 	ldrb.w	r3, [sp, #20]
900206dc:	f89d 7018 	ldrb.w	r7, [sp, #24]
900206e0:	d012      	beq.n	90020708 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
900206e2:	d303      	bcc.n	900206ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
900206e4:	2e02      	cmp	r6, #2
900206e6:	d00a      	beq.n	900206fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
900206e8:	bcf0      	pop	{r4, r5, r6, r7}
900206ea:	4770      	bx	lr
900206ec:	6805      	ldr	r5, [r0, #0]
900206ee:	e9cd 3704 	strd	r3, r7, [sp, #16]
900206f2:	68ed      	ldr	r5, [r5, #12]
900206f4:	4613      	mov	r3, r2
900206f6:	4622      	mov	r2, r4
900206f8:	46ac      	mov	ip, r5
900206fa:	bcf0      	pop	{r4, r5, r6, r7}
900206fc:	4760      	bx	ip
900206fe:	4621      	mov	r1, r4
90020700:	4628      	mov	r0, r5
90020702:	bcf0      	pop	{r4, r5, r6, r7}
90020704:	f7ff bd94 	b.w	90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020708:	4621      	mov	r1, r4
9002070a:	4628      	mov	r0, r5
9002070c:	bcf0      	pop	{r4, r5, r6, r7}
9002070e:	f7ff bee5 	b.w	900204dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90020714 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90020714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020718:	b093      	sub	sp, #76	@ 0x4c
9002071a:	4681      	mov	r9, r0
9002071c:	4688      	mov	r8, r1
9002071e:	6810      	ldr	r0, [r2, #0]
90020720:	6851      	ldr	r1, [r2, #4]
90020722:	ac0e      	add	r4, sp, #56	@ 0x38
90020724:	4616      	mov	r6, r2
90020726:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9002072a:	4f6b      	ldr	r7, [pc, #428]	@ (900208d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9002072c:	c403      	stmia	r4!, {r0, r1}
9002072e:	6818      	ldr	r0, [r3, #0]
90020730:	ac10      	add	r4, sp, #64	@ 0x40
90020732:	6859      	ldr	r1, [r3, #4]
90020734:	c403      	stmia	r4!, {r0, r1}
90020736:	a80e      	add	r0, sp, #56	@ 0x38
90020738:	f7f6 fcfa 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002073c:	4631      	mov	r1, r6
9002073e:	a810      	add	r0, sp, #64	@ 0x40
90020740:	4e66      	ldr	r6, [pc, #408]	@ (900208dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020742:	f7f6 fd1d 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020746:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9002074a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9002074e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
90020752:	6830      	ldr	r0, [r6, #0]
90020754:	fb11 2103 	smlabb	r1, r1, r3, r2
90020758:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9002075c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90020760:	4489      	add	r9, r1
90020762:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
90020766:	440a      	add	r2, r1
90020768:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9002076c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020770:	4413      	add	r3, r2
90020772:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
90020776:	6803      	ldr	r3, [r0, #0]
90020778:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002077a:	4798      	blx	r3
9002077c:	f010 0f80 	tst.w	r0, #128	@ 0x80
90020780:	6830      	ldr	r0, [r6, #0]
90020782:	d01d      	beq.n	900207c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90020784:	2200      	movs	r2, #0
90020786:	6801      	ldr	r1, [r0, #0]
90020788:	b2a4      	uxth	r4, r4
9002078a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9002078e:	b2ad      	uxth	r5, r5
90020790:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020794:	220b      	movs	r2, #11
90020796:	9207      	str	r2, [sp, #28]
90020798:	883a      	ldrh	r2, [r7, #0]
9002079a:	9502      	str	r5, [sp, #8]
9002079c:	9206      	str	r2, [sp, #24]
9002079e:	2201      	movs	r2, #1
900207a0:	9401      	str	r4, [sp, #4]
900207a2:	e9cd a204 	strd	sl, r2, [sp, #16]
900207a6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
900207aa:	9203      	str	r2, [sp, #12]
900207ac:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
900207b0:	9200      	str	r2, [sp, #0]
900207b2:	4642      	mov	r2, r8
900207b4:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
900207b6:	4649      	mov	r1, r9
900207b8:	47a0      	blx	r4
900207ba:	b013      	add	sp, #76	@ 0x4c
900207bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900207c0:	6803      	ldr	r3, [r0, #0]
900207c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900207c4:	4798      	blx	r3
900207c6:	883b      	ldrh	r3, [r7, #0]
900207c8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
900207cc:	f04f 0e04 	mov.w	lr, #4
900207d0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
900207d4:	435d      	muls	r5, r3
900207d6:	fb03 1202 	mla	r2, r3, r2, r1
900207da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900207de:	eb00 0245 	add.w	r2, r0, r5, lsl #1
900207e2:	920c      	str	r2, [sp, #48]	@ 0x30
900207e4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
900207e8:	1b12      	subs	r2, r2, r4
900207ea:	920d      	str	r2, [sp, #52]	@ 0x34
900207ec:	0062      	lsls	r2, r4, #1
900207ee:	1b1c      	subs	r4, r3, r4
900207f0:	920a      	str	r2, [sp, #40]	@ 0x28
900207f2:	0063      	lsls	r3, r4, #1
900207f4:	930b      	str	r3, [sp, #44]	@ 0x2c
900207f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900207f8:	4298      	cmp	r0, r3
900207fa:	d266      	bcs.n	900208ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
900207fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900207fe:	eb00 0b03 	add.w	fp, r0, r3
90020802:	4558      	cmp	r0, fp
90020804:	d25c      	bcs.n	900208c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
90020806:	f819 3b01 	ldrb.w	r3, [r9], #1
9002080a:	fb1e e303 	smlabb	r3, lr, r3, lr
9002080e:	f858 2003 	ldr.w	r2, [r8, r3]
90020812:	0e11      	lsrs	r1, r2, #24
90020814:	d012      	beq.n	9002083c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90020816:	29ff      	cmp	r1, #255	@ 0xff
90020818:	ea4f 2712 	mov.w	r7, r2, lsr #8
9002081c:	d110      	bne.n	90020840 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002081e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90020822:	d10d      	bne.n	90020840 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020824:	0953      	lsrs	r3, r2, #5
90020826:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9002082a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002082e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020832:	f027 0707 	bic.w	r7, r7, #7
90020836:	431f      	orrs	r7, r3
90020838:	433a      	orrs	r2, r7
9002083a:	8002      	strh	r2, [r0, #0]
9002083c:	3002      	adds	r0, #2
9002083e:	e7e0      	b.n	90020802 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020840:	fb0a f101 	mul.w	r1, sl, r1
90020844:	8806      	ldrh	r6, [r0, #0]
90020846:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9002084a:	b2d2      	uxtb	r2, r2
9002084c:	1c4b      	adds	r3, r1, #1
9002084e:	1235      	asrs	r5, r6, #8
90020850:	10f4      	asrs	r4, r6, #3
90020852:	eb03 2321 	add.w	r3, r3, r1, asr #8
90020856:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002085a:	00f6      	lsls	r6, r6, #3
9002085c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90020860:	121b      	asrs	r3, r3, #8
90020862:	b2f6      	uxtb	r6, r6
90020864:	b299      	uxth	r1, r3
90020866:	43db      	mvns	r3, r3
90020868:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9002086c:	fb1c fc01 	smulbb	ip, ip, r1
90020870:	b2db      	uxtb	r3, r3
90020872:	fb12 f201 	smulbb	r2, r2, r1
90020876:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002087a:	fb05 c503 	mla	r5, r5, r3, ip
9002087e:	b2ff      	uxtb	r7, r7
90020880:	fb06 2203 	mla	r2, r6, r3, r2
90020884:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
90020888:	fb17 f701 	smulbb	r7, r7, r1
9002088c:	b2ad      	uxth	r5, r5
9002088e:	b292      	uxth	r2, r2
90020890:	fb04 7403 	mla	r4, r4, r3, r7
90020894:	f105 0c01 	add.w	ip, r5, #1
90020898:	1c57      	adds	r7, r2, #1
9002089a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002089e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900208a2:	b2a4      	uxth	r4, r4
900208a4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900208a8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900208ac:	433d      	orrs	r5, r7
900208ae:	1c67      	adds	r7, r4, #1
900208b0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900208b4:	0964      	lsrs	r4, r4, #5
900208b6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900208ba:	4325      	orrs	r5, r4
900208bc:	8005      	strh	r5, [r0, #0]
900208be:	e7bd      	b.n	9002083c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900208c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900208c2:	4418      	add	r0, r3
900208c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900208c6:	4499      	add	r9, r3
900208c8:	e795      	b.n	900207f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900208ca:	4b04      	ldr	r3, [pc, #16]	@ (900208dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900208cc:	6818      	ldr	r0, [r3, #0]
900208ce:	6803      	ldr	r3, [r0, #0]
900208d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900208d2:	4798      	blx	r3
900208d4:	e771      	b.n	900207ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900208d6:	bf00      	nop
900208d8:	24021d5e 	.word	0x24021d5e
900208dc:	24021d64 	.word	0x24021d64

900208e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900208e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900208e4:	b087      	sub	sp, #28
900208e6:	4680      	mov	r8, r0
900208e8:	460d      	mov	r5, r1
900208ea:	4614      	mov	r4, r2
900208ec:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
900208f0:	2e00      	cmp	r6, #0
900208f2:	f000 80b9 	beq.w	90020a68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900208f6:	6810      	ldr	r0, [r2, #0]
900208f8:	af02      	add	r7, sp, #8
900208fa:	6851      	ldr	r1, [r2, #4]
900208fc:	c703      	stmia	r7!, {r0, r1}
900208fe:	6818      	ldr	r0, [r3, #0]
90020900:	af04      	add	r7, sp, #16
90020902:	6859      	ldr	r1, [r3, #4]
90020904:	c703      	stmia	r7!, {r0, r1}
90020906:	a802      	add	r0, sp, #8
90020908:	f7f6 fc12 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002090c:	4621      	mov	r1, r4
9002090e:	a804      	add	r0, sp, #16
90020910:	f7f6 fc36 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020914:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020918:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002091c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020920:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90020924:	fb14 2103 	smlabb	r1, r4, r3, r2
90020928:	eb08 0401 	add.w	r4, r8, r1
9002092c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020930:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020934:	440a      	add	r2, r1
90020936:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002093a:	f8ad 2010 	strh.w	r2, [sp, #16]
9002093e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020942:	4413      	add	r3, r2
90020944:	f8ad 3012 	strh.w	r3, [sp, #18]
90020948:	4b49      	ldr	r3, [pc, #292]	@ (90020a70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002094a:	6818      	ldr	r0, [r3, #0]
9002094c:	6803      	ldr	r3, [r0, #0]
9002094e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020950:	4798      	blx	r3
90020952:	4b48      	ldr	r3, [pc, #288]	@ (90020a74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90020954:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90020958:	2eff      	cmp	r6, #255	@ 0xff
9002095a:	881a      	ldrh	r2, [r3, #0]
9002095c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90020960:	fb02 c101 	mla	r1, r2, r1, ip
90020964:	fb02 f207 	mul.w	r2, r2, r7
90020968:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9002096c:	f105 0104 	add.w	r1, r5, #4
90020970:	461d      	mov	r5, r3
90020972:	d05a      	beq.n	90020a2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90020974:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
90020978:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9002097c:	b2b6      	uxth	r6, r6
9002097e:	9301      	str	r3, [sp, #4]
90020980:	fa1f fe8e 	uxth.w	lr, lr
90020984:	4282      	cmp	r2, r0
90020986:	d96a      	bls.n	90020a5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020988:	eb00 0b0a 	add.w	fp, r0, sl
9002098c:	4583      	cmp	fp, r0
9002098e:	d940      	bls.n	90020a12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90020990:	8805      	ldrh	r5, [r0, #0]
90020992:	f814 3b01 	ldrb.w	r3, [r4], #1
90020996:	122f      	asrs	r7, r5, #8
90020998:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002099c:	ea4f 09e5 	mov.w	r9, r5, asr #3
900209a0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900209a4:	00ed      	lsls	r5, r5, #3
900209a6:	ea4f 2c23 	mov.w	ip, r3, asr #8
900209aa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900209ae:	fb17 f70e 	smulbb	r7, r7, lr
900209b2:	b2ed      	uxtb	r5, r5
900209b4:	fb19 f90e 	smulbb	r9, r9, lr
900209b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900209bc:	fb15 f50e 	smulbb	r5, r5, lr
900209c0:	fb0c 7c06 	mla	ip, ip, r6, r7
900209c4:	10df      	asrs	r7, r3, #3
900209c6:	00db      	lsls	r3, r3, #3
900209c8:	fa1f fc8c 	uxth.w	ip, ip
900209cc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900209d0:	b2db      	uxtb	r3, r3
900209d2:	fb07 9706 	mla	r7, r7, r6, r9
900209d6:	f10c 0901 	add.w	r9, ip, #1
900209da:	fb03 5306 	mla	r3, r3, r6, r5
900209de:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900209e2:	b29b      	uxth	r3, r3
900209e4:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
900209e8:	b2bf      	uxth	r7, r7
900209ea:	f103 0c01 	add.w	ip, r3, #1
900209ee:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900209f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900209f6:	ea4c 0c09 	orr.w	ip, ip, r9
900209fa:	f107 0901 	add.w	r9, r7, #1
900209fe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90020a02:	097f      	lsrs	r7, r7, #5
90020a04:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90020a08:	ea4c 0c07 	orr.w	ip, ip, r7
90020a0c:	f820 cb02 	strh.w	ip, [r0], #2
90020a10:	e7bc      	b.n	9002098c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
90020a12:	9b01      	ldr	r3, [sp, #4]
90020a14:	881b      	ldrh	r3, [r3, #0]
90020a16:	eba3 0308 	sub.w	r3, r3, r8
90020a1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020a1e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020a22:	eba3 0308 	sub.w	r3, r3, r8
90020a26:	441c      	add	r4, r3
90020a28:	e7ac      	b.n	90020984 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90020a2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020a2e:	4282      	cmp	r2, r0
90020a30:	d915      	bls.n	90020a5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020a32:	eb00 060a 	add.w	r6, r0, sl
90020a36:	4286      	cmp	r6, r0
90020a38:	d906      	bls.n	90020a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90020a3a:	f814 3b01 	ldrb.w	r3, [r4], #1
90020a3e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020a42:	f820 3b02 	strh.w	r3, [r0], #2
90020a46:	e7f6      	b.n	90020a36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90020a48:	882b      	ldrh	r3, [r5, #0]
90020a4a:	eba3 0308 	sub.w	r3, r3, r8
90020a4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020a52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020a56:	eba3 0308 	sub.w	r3, r3, r8
90020a5a:	441c      	add	r4, r3
90020a5c:	e7e7      	b.n	90020a2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020a5e:	4b04      	ldr	r3, [pc, #16]	@ (90020a70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020a60:	6818      	ldr	r0, [r3, #0]
90020a62:	6803      	ldr	r3, [r0, #0]
90020a64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020a66:	4798      	blx	r3
90020a68:	b007      	add	sp, #28
90020a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020a6e:	bf00      	nop
90020a70:	24021d64 	.word	0x24021d64
90020a74:	24021d5e 	.word	0x24021d5e

90020a78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90020a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020a7c:	b091      	sub	sp, #68	@ 0x44
90020a7e:	4680      	mov	r8, r0
90020a80:	460f      	mov	r7, r1
90020a82:	4614      	mov	r4, r2
90020a84:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
90020a88:	2d00      	cmp	r5, #0
90020a8a:	d051      	beq.n	90020b30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020a8c:	6810      	ldr	r0, [r2, #0]
90020a8e:	ae0c      	add	r6, sp, #48	@ 0x30
90020a90:	6851      	ldr	r1, [r2, #4]
90020a92:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90020c94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90020a96:	c603      	stmia	r6!, {r0, r1}
90020a98:	6818      	ldr	r0, [r3, #0]
90020a9a:	ae0e      	add	r6, sp, #56	@ 0x38
90020a9c:	6859      	ldr	r1, [r3, #4]
90020a9e:	c603      	stmia	r6!, {r0, r1}
90020aa0:	a80c      	add	r0, sp, #48	@ 0x30
90020aa2:	f7f6 fb45 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020aa6:	4621      	mov	r1, r4
90020aa8:	a80e      	add	r0, sp, #56	@ 0x38
90020aaa:	f7f6 fb69 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020aae:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
90020ab2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020ab6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90020aba:	f8d9 0000 	ldr.w	r0, [r9]
90020abe:	fb11 2103 	smlabb	r1, r1, r3, r2
90020ac2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90020ac6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90020aca:	eb08 0401 	add.w	r4, r8, r1
90020ace:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
90020ad2:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90020c98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
90020ad6:	440a      	add	r2, r1
90020ad8:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90020adc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90020ae0:	4413      	add	r3, r2
90020ae2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
90020ae6:	6803      	ldr	r3, [r0, #0]
90020ae8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020aea:	4798      	blx	r3
90020aec:	f010 0f80 	tst.w	r0, #128	@ 0x80
90020af0:	f8d9 0000 	ldr.w	r0, [r9]
90020af4:	d01f      	beq.n	90020b36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
90020af6:	2200      	movs	r2, #0
90020af8:	6801      	ldr	r1, [r0, #0]
90020afa:	b2b6      	uxth	r6, r6
90020afc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020b00:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020b04:	220b      	movs	r2, #11
90020b06:	9207      	str	r2, [sp, #28]
90020b08:	f8b8 2000 	ldrh.w	r2, [r8]
90020b0c:	9601      	str	r6, [sp, #4]
90020b0e:	9206      	str	r2, [sp, #24]
90020b10:	2201      	movs	r2, #1
90020b12:	e9cd 5204 	strd	r5, r2, [sp, #16]
90020b16:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90020b1a:	9203      	str	r2, [sp, #12]
90020b1c:	fa1f f28a 	uxth.w	r2, sl
90020b20:	9202      	str	r2, [sp, #8]
90020b22:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020b26:	9200      	str	r2, [sp, #0]
90020b28:	463a      	mov	r2, r7
90020b2a:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
90020b2c:	4621      	mov	r1, r4
90020b2e:	47a8      	blx	r5
90020b30:	b011      	add	sp, #68	@ 0x44
90020b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b36:	6803      	ldr	r3, [r0, #0]
90020b38:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020b3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020b3e:	4798      	blx	r3
90020b40:	f8b8 2000 	ldrh.w	r2, [r8]
90020b44:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020b48:	2dff      	cmp	r5, #255	@ 0xff
90020b4a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90020b4e:	fb0a fa02 	mul.w	sl, sl, r2
90020b52:	fb02 1303 	mla	r3, r2, r3, r1
90020b56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020b5a:	d062      	beq.n	90020c22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020b5c:	ea6f 0c05 	mvn.w	ip, r5
90020b60:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020b64:	b2ad      	uxth	r5, r5
90020b66:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90020b6a:	fa5f fc8c 	uxtb.w	ip, ip
90020b6e:	930a      	str	r3, [sp, #40]	@ 0x28
90020b70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020b72:	4298      	cmp	r0, r3
90020b74:	f080 8085 	bcs.w	90020c82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020b78:	eb00 0b09 	add.w	fp, r0, r9
90020b7c:	4558      	cmp	r0, fp
90020b7e:	d246      	bcs.n	90020c0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90020b80:	f814 eb01 	ldrb.w	lr, [r4], #1
90020b84:	2303      	movs	r3, #3
90020b86:	2204      	movs	r2, #4
90020b88:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020b8c:	8803      	ldrh	r3, [r0, #0]
90020b8e:	eb07 0a0e 	add.w	sl, r7, lr
90020b92:	1219      	asrs	r1, r3, #8
90020b94:	10da      	asrs	r2, r3, #3
90020b96:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020b9a:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020b9e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020ba2:	00db      	lsls	r3, r3, #3
90020ba4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020ba8:	fb18 f805 	smulbb	r8, r8, r5
90020bac:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020bb0:	fb1e fe05 	smulbb	lr, lr, r5
90020bb4:	b2db      	uxtb	r3, r3
90020bb6:	fb01 810c 	mla	r1, r1, ip, r8
90020bba:	f89a 8001 	ldrb.w	r8, [sl, #1]
90020bbe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90020bc2:	fb18 f805 	smulbb	r8, r8, r5
90020bc6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90020bca:	b289      	uxth	r1, r1
90020bcc:	fb02 820c 	mla	r2, r2, ip, r8
90020bd0:	fb03 e30c 	mla	r3, r3, ip, lr
90020bd4:	f101 0801 	add.w	r8, r1, #1
90020bd8:	b292      	uxth	r2, r2
90020bda:	b29b      	uxth	r3, r3
90020bdc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020be0:	f102 0801 	add.w	r8, r2, #1
90020be4:	f103 0e01 	add.w	lr, r3, #1
90020be8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020bec:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020bf0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90020bf4:	ea4f 1858 	mov.w	r8, r8, lsr #5
90020bf8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020bfc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90020c00:	ea4e 0101 	orr.w	r1, lr, r1
90020c04:	ea41 0108 	orr.w	r1, r1, r8
90020c08:	f820 1b02 	strh.w	r1, [r0], #2
90020c0c:	e7b6      	b.n	90020b7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020c0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020c10:	881b      	ldrh	r3, [r3, #0]
90020c12:	1b9b      	subs	r3, r3, r6
90020c14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020c18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020c1c:	1b9b      	subs	r3, r3, r6
90020c1e:	441c      	add	r4, r3
90020c20:	e7a6      	b.n	90020b70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020c22:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90020c26:	2203      	movs	r2, #3
90020c28:	2504      	movs	r5, #4
90020c2a:	4919      	ldr	r1, [pc, #100]	@ (90020c90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020c2c:	4550      	cmp	r0, sl
90020c2e:	d228      	bcs.n	90020c82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020c30:	eb00 0c09 	add.w	ip, r0, r9
90020c34:	4560      	cmp	r0, ip
90020c36:	4623      	mov	r3, r4
90020c38:	d219      	bcs.n	90020c6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020c3a:	f893 e000 	ldrb.w	lr, [r3]
90020c3e:	3401      	adds	r4, #1
90020c40:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020c44:	eb07 0b0e 	add.w	fp, r7, lr
90020c48:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020c4c:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020c50:	f89b b001 	ldrb.w	fp, [fp, #1]
90020c54:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020c58:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020c5c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020c60:	ea43 030b 	orr.w	r3, r3, fp
90020c64:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020c68:	f820 3b02 	strh.w	r3, [r0], #2
90020c6c:	e7e2      	b.n	90020c34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020c6e:	f8b8 3000 	ldrh.w	r3, [r8]
90020c72:	1b9b      	subs	r3, r3, r6
90020c74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020c78:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020c7c:	1b9b      	subs	r3, r3, r6
90020c7e:	441c      	add	r4, r3
90020c80:	e7d4      	b.n	90020c2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90020c82:	4b04      	ldr	r3, [pc, #16]	@ (90020c94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020c84:	6818      	ldr	r0, [r3, #0]
90020c86:	6803      	ldr	r3, [r0, #0]
90020c88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020c8a:	4798      	blx	r3
90020c8c:	e750      	b.n	90020b30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020c8e:	bf00      	nop
90020c90:	fffff800 	.word	0xfffff800
90020c94:	24021d64 	.word	0x24021d64
90020c98:	24021d5e 	.word	0x24021d5e

90020c9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020c9c:	b4f0      	push	{r4, r5, r6, r7}
90020c9e:	460c      	mov	r4, r1
90020ca0:	4611      	mov	r1, r2
90020ca2:	f89d 5014 	ldrb.w	r5, [sp, #20]
90020ca6:	461a      	mov	r2, r3
90020ca8:	780f      	ldrb	r7, [r1, #0]
90020caa:	9b04      	ldr	r3, [sp, #16]
90020cac:	2f01      	cmp	r7, #1
90020cae:	784e      	ldrb	r6, [r1, #1]
90020cb0:	d038      	beq.n	90020d24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
90020cb2:	d31f      	bcc.n	90020cf4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
90020cb4:	2f02      	cmp	r7, #2
90020cb6:	d14d      	bne.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cb8:	2e03      	cmp	r6, #3
90020cba:	d84b      	bhi.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cbc:	e8df f006 	tbb	[pc, r6]
90020cc0:	17140702 	.word	0x17140702
90020cc4:	9504      	str	r5, [sp, #16]
90020cc6:	4620      	mov	r0, r4
90020cc8:	bcf0      	pop	{r4, r5, r6, r7}
90020cca:	f7ff be09 	b.w	900208e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90020cce:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020cd0:	2800      	cmp	r0, #0
90020cd2:	d03f      	beq.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cd4:	6806      	ldr	r6, [r0, #0]
90020cd6:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020cda:	68b5      	ldr	r5, [r6, #8]
90020cdc:	4613      	mov	r3, r2
90020cde:	46ac      	mov	ip, r5
90020ce0:	460a      	mov	r2, r1
90020ce2:	4621      	mov	r1, r4
90020ce4:	bcf0      	pop	{r4, r5, r6, r7}
90020ce6:	4760      	bx	ip
90020ce8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020cec:	e7f0      	b.n	90020cd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020cee:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020cf2:	e7ed      	b.n	90020cd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020cf4:	2e03      	cmp	r6, #3
90020cf6:	d82d      	bhi.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cf8:	e8df f006 	tbb	[pc, r6]
90020cfc:	110e0702 	.word	0x110e0702
90020d00:	9504      	str	r5, [sp, #16]
90020d02:	4620      	mov	r0, r4
90020d04:	bcf0      	pop	{r4, r5, r6, r7}
90020d06:	f7ff bd05 	b.w	90020714 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90020d0a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020d0c:	b310      	cbz	r0, 90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d0e:	6806      	ldr	r6, [r0, #0]
90020d10:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020d14:	68f5      	ldr	r5, [r6, #12]
90020d16:	e7e1      	b.n	90020cdc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020d18:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020d1c:	e7f6      	b.n	90020d0c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020d1e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020d22:	e7f3      	b.n	90020d0c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020d24:	2e03      	cmp	r6, #3
90020d26:	d815      	bhi.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d28:	e8df f006 	tbb	[pc, r6]
90020d2c:	110e0702 	.word	0x110e0702
90020d30:	9504      	str	r5, [sp, #16]
90020d32:	4620      	mov	r0, r4
90020d34:	bcf0      	pop	{r4, r5, r6, r7}
90020d36:	f7ff be9f 	b.w	90020a78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020d3a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020d3c:	b150      	cbz	r0, 90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d3e:	6806      	ldr	r6, [r0, #0]
90020d40:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020d44:	6935      	ldr	r5, [r6, #16]
90020d46:	e7c9      	b.n	90020cdc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020d48:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020d4c:	e7f6      	b.n	90020d3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020d4e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020d52:	e7f3      	b.n	90020d3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020d54:	bcf0      	pop	{r4, r5, r6, r7}
90020d56:	4770      	bx	lr

90020d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d5c:	b087      	sub	sp, #28
90020d5e:	4604      	mov	r4, r0
90020d60:	460e      	mov	r6, r1
90020d62:	6810      	ldr	r0, [r2, #0]
90020d64:	6851      	ldr	r1, [r2, #4]
90020d66:	ad02      	add	r5, sp, #8
90020d68:	4617      	mov	r7, r2
90020d6a:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90020d6e:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90020fa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90020d72:	c503      	stmia	r5!, {r0, r1}
90020d74:	6818      	ldr	r0, [r3, #0]
90020d76:	ad04      	add	r5, sp, #16
90020d78:	6859      	ldr	r1, [r3, #4]
90020d7a:	c503      	stmia	r5!, {r0, r1}
90020d7c:	a802      	add	r0, sp, #8
90020d7e:	f7f6 f9d7 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020d82:	4639      	mov	r1, r7
90020d84:	a804      	add	r0, sp, #16
90020d86:	f7f6 f9fb 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020d8a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020d8e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020d92:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020d96:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020d9a:	fb11 2103 	smlabb	r1, r1, r3, r2
90020d9e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020da2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020da6:	440e      	add	r6, r1
90020da8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020dac:	440a      	add	r2, r1
90020dae:	f8ad 2010 	strh.w	r2, [sp, #16]
90020db2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020db6:	4413      	add	r3, r2
90020db8:	f8ad 3012 	strh.w	r3, [sp, #18]
90020dbc:	4b77      	ldr	r3, [pc, #476]	@ (90020f9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020dbe:	6818      	ldr	r0, [r3, #0]
90020dc0:	6803      	ldr	r3, [r0, #0]
90020dc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020dc4:	4798      	blx	r3
90020dc6:	f8b9 b000 	ldrh.w	fp, [r9]
90020dca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020dce:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90020dd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020dd6:	fb05 f50b 	mul.w	r5, r5, fp
90020dda:	fb0b 2303 	mla	r3, fp, r3, r2
90020dde:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020de2:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020de6:	9300      	str	r3, [sp, #0]
90020de8:	d069      	beq.n	90020ebe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90020dea:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90020dee:	4558      	cmp	r0, fp
90020df0:	f080 80cc 	bcs.w	90020f8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020df4:	9b00      	ldr	r3, [sp, #0]
90020df6:	4631      	mov	r1, r6
90020df8:	18c3      	adds	r3, r0, r3
90020dfa:	9301      	str	r3, [sp, #4]
90020dfc:	9b01      	ldr	r3, [sp, #4]
90020dfe:	4298      	cmp	r0, r3
90020e00:	d24f      	bcs.n	90020ea2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90020e02:	f811 2b01 	ldrb.w	r2, [r1], #1
90020e06:	2a00      	cmp	r2, #0
90020e08:	d048      	beq.n	90020e9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020e0a:	fb0a f202 	mul.w	r2, sl, r2
90020e0e:	1c53      	adds	r3, r2, #1
90020e10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020e14:	121b      	asrs	r3, r3, #8
90020e16:	d041      	beq.n	90020e9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020e18:	8802      	ldrh	r2, [r0, #0]
90020e1a:	b29e      	uxth	r6, r3
90020e1c:	f8b4 c000 	ldrh.w	ip, [r4]
90020e20:	43db      	mvns	r3, r3
90020e22:	1215      	asrs	r5, r2, #8
90020e24:	b2db      	uxtb	r3, r3
90020e26:	ea4f 272c 	mov.w	r7, ip, asr #8
90020e2a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020e2e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020e32:	fb15 f503 	smulbb	r5, r5, r3
90020e36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020e3a:	00d2      	lsls	r2, r2, #3
90020e3c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020e40:	fb07 5706 	mla	r7, r7, r6, r5
90020e44:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020e48:	b2d2      	uxtb	r2, r2
90020e4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020e4e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020e52:	fb1e fe03 	smulbb	lr, lr, r3
90020e56:	b2bf      	uxth	r7, r7
90020e58:	fb12 f203 	smulbb	r2, r2, r3
90020e5c:	fa5f fc8c 	uxtb.w	ip, ip
90020e60:	fb05 e506 	mla	r5, r5, r6, lr
90020e64:	f107 0e01 	add.w	lr, r7, #1
90020e68:	fb0c 2c06 	mla	ip, ip, r6, r2
90020e6c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020e70:	fa1f fc8c 	uxth.w	ip, ip
90020e74:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90020e78:	b2ad      	uxth	r5, r5
90020e7a:	f10c 0701 	add.w	r7, ip, #1
90020e7e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020e82:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020e86:	ea47 070e 	orr.w	r7, r7, lr
90020e8a:	f105 0e01 	add.w	lr, r5, #1
90020e8e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020e92:	096d      	lsrs	r5, r5, #5
90020e94:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020e98:	432f      	orrs	r7, r5
90020e9a:	8007      	strh	r7, [r0, #0]
90020e9c:	3002      	adds	r0, #2
90020e9e:	3402      	adds	r4, #2
90020ea0:	e7ac      	b.n	90020dfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020ea2:	f8b9 3000 	ldrh.w	r3, [r9]
90020ea6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020eaa:	eba3 0308 	sub.w	r3, r3, r8
90020eae:	eba6 0608 	sub.w	r6, r6, r8
90020eb2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020eb6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020eba:	440e      	add	r6, r1
90020ebc:	e797      	b.n	90020dee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90020ebe:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90020ec2:	42a8      	cmp	r0, r5
90020ec4:	d262      	bcs.n	90020f8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020ec6:	9b00      	ldr	r3, [sp, #0]
90020ec8:	4631      	mov	r1, r6
90020eca:	eb00 0b03 	add.w	fp, r0, r3
90020ece:	4558      	cmp	r0, fp
90020ed0:	d24e      	bcs.n	90020f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90020ed2:	f811 3b01 	ldrb.w	r3, [r1], #1
90020ed6:	b12b      	cbz	r3, 90020ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020ed8:	2bff      	cmp	r3, #255	@ 0xff
90020eda:	f8b4 e000 	ldrh.w	lr, [r4]
90020ede:	d104      	bne.n	90020eea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020ee0:	f8a0 e000 	strh.w	lr, [r0]
90020ee4:	3002      	adds	r0, #2
90020ee6:	3402      	adds	r4, #2
90020ee8:	e7f1      	b.n	90020ece <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90020eea:	8802      	ldrh	r2, [r0, #0]
90020eec:	b29f      	uxth	r7, r3
90020eee:	43db      	mvns	r3, r3
90020ef0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020ef4:	1216      	asrs	r6, r2, #8
90020ef6:	b2db      	uxtb	r3, r3
90020ef8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020efc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020f00:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020f04:	00d2      	lsls	r2, r2, #3
90020f06:	fb16 f603 	smulbb	r6, r6, r3
90020f0a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020f0e:	b2d2      	uxtb	r2, r2
90020f10:	fb0c 6c07 	mla	ip, ip, r7, r6
90020f14:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020f18:	fb1a fa03 	smulbb	sl, sl, r3
90020f1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020f20:	fa1f fc8c 	uxth.w	ip, ip
90020f24:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020f28:	fb12 f303 	smulbb	r3, r2, r3
90020f2c:	fa5f fe8e 	uxtb.w	lr, lr
90020f30:	fb06 a607 	mla	r6, r6, r7, sl
90020f34:	f10c 0201 	add.w	r2, ip, #1
90020f38:	fb0e 3307 	mla	r3, lr, r7, r3
90020f3c:	b2b6      	uxth	r6, r6
90020f3e:	b29b      	uxth	r3, r3
90020f40:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020f44:	f106 0a01 	add.w	sl, r6, #1
90020f48:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020f4c:	f103 0c01 	add.w	ip, r3, #1
90020f50:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020f54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020f58:	0976      	lsrs	r6, r6, #5
90020f5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020f5e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020f62:	ea4c 0c02 	orr.w	ip, ip, r2
90020f66:	ea4c 0c06 	orr.w	ip, ip, r6
90020f6a:	f8a0 c000 	strh.w	ip, [r0]
90020f6e:	e7b9      	b.n	90020ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020f70:	f8b9 3000 	ldrh.w	r3, [r9]
90020f74:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020f78:	eba3 0308 	sub.w	r3, r3, r8
90020f7c:	eba6 0608 	sub.w	r6, r6, r8
90020f80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020f84:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020f88:	440e      	add	r6, r1
90020f8a:	e79a      	b.n	90020ec2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020f8c:	4b03      	ldr	r3, [pc, #12]	@ (90020f9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020f8e:	6818      	ldr	r0, [r3, #0]
90020f90:	6803      	ldr	r3, [r0, #0]
90020f92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020f94:	4798      	blx	r3
90020f96:	b007      	add	sp, #28
90020f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020f9c:	24021d64 	.word	0x24021d64
90020fa0:	24021d5e 	.word	0x24021d5e

90020fa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020fa8:	b089      	sub	sp, #36	@ 0x24
90020faa:	4607      	mov	r7, r0
90020fac:	4688      	mov	r8, r1
90020fae:	4692      	mov	sl, r2
90020fb0:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90020fb4:	4699      	mov	r9, r3
90020fb6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020fb8:	2e00      	cmp	r6, #0
90020fba:	d048      	beq.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020fbc:	4608      	mov	r0, r1
90020fbe:	f7fa f813 	bl	9001afe8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90020fc2:	4605      	mov	r5, r0
90020fc4:	4640      	mov	r0, r8
90020fc6:	f7fa f843 	bl	9001b050 <_ZNK8touchgfx6Bitmap9getHeightEv>
90020fca:	f8ad 000e 	strh.w	r0, [sp, #14]
90020fce:	4640      	mov	r0, r8
90020fd0:	f8ad a008 	strh.w	sl, [sp, #8]
90020fd4:	f8ad 500c 	strh.w	r5, [sp, #12]
90020fd8:	f8ad 900a 	strh.w	r9, [sp, #10]
90020fdc:	f7fa f8f6 	bl	9001b1cc <_ZNK8touchgfx6Bitmap7getDataEv>
90020fe0:	4605      	mov	r5, r0
90020fe2:	4640      	mov	r0, r8
90020fe4:	f7fa f922 	bl	9001b22c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90020fe8:	4682      	mov	sl, r0
90020fea:	4640      	mov	r0, r8
90020fec:	f7fa f972 	bl	9001b2d4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90020ff0:	2810      	cmp	r0, #16
90020ff2:	d82c      	bhi.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020ff4:	e8df f010 	tbh	[pc, r0, lsl #1]
90020ff8:	00ba00ca 	.word	0x00ba00ca
90020ffc:	002b0011 	.word	0x002b0011
90021000:	002b002b 	.word	0x002b002b
90021004:	002b002b 	.word	0x002b002b
90021008:	002b002b 	.word	0x002b002b
9002100c:	00c1002b 	.word	0x00c1002b
90021010:	002b002b 	.word	0x002b002b
90021014:	002b0180 	.word	0x002b0180
90021018:	0173      	.short	0x0173
9002101a:	4bbc      	ldr	r3, [pc, #752]	@ (9002130c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9002101c:	6818      	ldr	r0, [r3, #0]
9002101e:	6803      	ldr	r3, [r0, #0]
90021020:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021022:	4798      	blx	r3
90021024:	2eff      	cmp	r6, #255	@ 0xff
90021026:	d101      	bne.n	9002102c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90021028:	0683      	lsls	r3, r0, #26
9002102a:	d506      	bpl.n	9002103a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9002102c:	4633      	mov	r3, r6
9002102e:	4622      	mov	r2, r4
90021030:	a902      	add	r1, sp, #8
90021032:	4628      	mov	r0, r5
90021034:	f7ff f8fc 	bl	90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021038:	e009      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002103a:	4640      	mov	r0, r8
9002103c:	f7fa f88e 	bl	9001b15c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021040:	b940      	cbnz	r0, 90021054 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
90021042:	4623      	mov	r3, r4
90021044:	aa02      	add	r2, sp, #8
90021046:	4629      	mov	r1, r5
90021048:	4638      	mov	r0, r7
9002104a:	f7ff f9d7 	bl	900203fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9002104e:	b009      	add	sp, #36	@ 0x24
90021050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021054:	f10d 0918 	add.w	r9, sp, #24
90021058:	4641      	mov	r1, r8
9002105a:	f10d 0810 	add.w	r8, sp, #16
9002105e:	4648      	mov	r0, r9
90021060:	f7fa f82a 	bl	9001b0b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021064:	e899 0003 	ldmia.w	r9, {r0, r1}
90021068:	e888 0003 	stmia.w	r8, {r0, r1}
9002106c:	4640      	mov	r0, r8
9002106e:	4621      	mov	r1, r4
90021070:	f7f0 f9f4 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
90021074:	4640      	mov	r0, r8
90021076:	f7f0 fa34 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
9002107a:	2800      	cmp	r0, #0
9002107c:	d1d6      	bne.n	9002102c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9002107e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021082:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021086:	4293      	cmp	r3, r2
90021088:	dd12      	ble.n	900210b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9002108a:	1a9b      	subs	r3, r3, r2
9002108c:	f9b4 0000 	ldrsh.w	r0, [r4]
90021090:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021094:	f8ad 0018 	strh.w	r0, [sp, #24]
90021098:	4628      	mov	r0, r5
9002109a:	f8ad 201a 	strh.w	r2, [sp, #26]
9002109e:	464a      	mov	r2, r9
900210a0:	f8ad 101c 	strh.w	r1, [sp, #28]
900210a4:	a902      	add	r1, sp, #8
900210a6:	f8ad 301e 	strh.w	r3, [sp, #30]
900210aa:	4633      	mov	r3, r6
900210ac:	f7ff f8c0 	bl	90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900210b0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900210b4:	f9b4 2000 	ldrsh.w	r2, [r4]
900210b8:	4293      	cmp	r3, r2
900210ba:	dd12      	ble.n	900210e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
900210bc:	1a9b      	subs	r3, r3, r2
900210be:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900210c2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900210c6:	f8ad 2018 	strh.w	r2, [sp, #24]
900210ca:	464a      	mov	r2, r9
900210cc:	f8ad 001a 	strh.w	r0, [sp, #26]
900210d0:	4628      	mov	r0, r5
900210d2:	f8ad 301c 	strh.w	r3, [sp, #28]
900210d6:	23ff      	movs	r3, #255	@ 0xff
900210d8:	f8ad 101e 	strh.w	r1, [sp, #30]
900210dc:	a902      	add	r1, sp, #8
900210de:	f7ff f8a7 	bl	90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900210e2:	4643      	mov	r3, r8
900210e4:	aa02      	add	r2, sp, #8
900210e6:	4629      	mov	r1, r5
900210e8:	4638      	mov	r0, r7
900210ea:	f7ff f987 	bl	900203fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900210ee:	88a2      	ldrh	r2, [r4, #4]
900210f0:	8823      	ldrh	r3, [r4, #0]
900210f2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900210f6:	4413      	add	r3, r2
900210f8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900210fc:	440a      	add	r2, r1
900210fe:	b29b      	uxth	r3, r3
90021100:	b292      	uxth	r2, r2
90021102:	b218      	sxth	r0, r3
90021104:	b211      	sxth	r1, r2
90021106:	4288      	cmp	r0, r1
90021108:	dd12      	ble.n	90021130 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9002110a:	1a9b      	subs	r3, r3, r2
9002110c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021110:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90021114:	464a      	mov	r2, r9
90021116:	f8ad 1018 	strh.w	r1, [sp, #24]
9002111a:	a902      	add	r1, sp, #8
9002111c:	f8ad 301c 	strh.w	r3, [sp, #28]
90021120:	23ff      	movs	r3, #255	@ 0xff
90021122:	f8ad 001e 	strh.w	r0, [sp, #30]
90021126:	4628      	mov	r0, r5
90021128:	f8ad 601a 	strh.w	r6, [sp, #26]
9002112c:	f7ff f880 	bl	90020230 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021130:	88e2      	ldrh	r2, [r4, #6]
90021132:	8863      	ldrh	r3, [r4, #2]
90021134:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90021138:	4413      	add	r3, r2
9002113a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9002113e:	440a      	add	r2, r1
90021140:	b29b      	uxth	r3, r3
90021142:	b292      	uxth	r2, r2
90021144:	b218      	sxth	r0, r3
90021146:	b211      	sxth	r1, r2
90021148:	4288      	cmp	r0, r1
9002114a:	dd80      	ble.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002114c:	1a9b      	subs	r3, r3, r2
9002114e:	f9b4 6000 	ldrsh.w	r6, [r4]
90021152:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90021156:	464a      	mov	r2, r9
90021158:	f8ad 301e 	strh.w	r3, [sp, #30]
9002115c:	23ff      	movs	r3, #255	@ 0xff
9002115e:	f8ad 6018 	strh.w	r6, [sp, #24]
90021162:	f8ad 101a 	strh.w	r1, [sp, #26]
90021166:	f8ad 001c 	strh.w	r0, [sp, #28]
9002116a:	e761      	b.n	90021030 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9002116c:	4633      	mov	r3, r6
9002116e:	4622      	mov	r2, r4
90021170:	a902      	add	r1, sp, #8
90021172:	4628      	mov	r0, r5
90021174:	f7ff f9b2 	bl	900204dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90021178:	e769      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002117a:	e9cd 4600 	strd	r4, r6, [sp]
9002117e:	ab02      	add	r3, sp, #8
90021180:	4652      	mov	r2, sl
90021182:	4629      	mov	r1, r5
90021184:	4638      	mov	r0, r7
90021186:	f7ff fd89 	bl	90020c9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9002118a:	e760      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002118c:	4640      	mov	r0, r8
9002118e:	f7f9 ffe5 	bl	9001b15c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021192:	b948      	cbnz	r0, 900211a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90021194:	683b      	ldr	r3, [r7, #0]
90021196:	aa02      	add	r2, sp, #8
90021198:	4629      	mov	r1, r5
9002119a:	e9cd 6000 	strd	r6, r0, [sp]
9002119e:	4638      	mov	r0, r7
900211a0:	68de      	ldr	r6, [r3, #12]
900211a2:	4623      	mov	r3, r4
900211a4:	47b0      	blx	r6
900211a6:	e752      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900211a8:	f10d 0918 	add.w	r9, sp, #24
900211ac:	4641      	mov	r1, r8
900211ae:	f10d 0810 	add.w	r8, sp, #16
900211b2:	4648      	mov	r0, r9
900211b4:	f7f9 ff80 	bl	9001b0b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900211b8:	e899 0003 	ldmia.w	r9, {r0, r1}
900211bc:	e888 0003 	stmia.w	r8, {r0, r1}
900211c0:	4640      	mov	r0, r8
900211c2:	4621      	mov	r1, r4
900211c4:	f7f0 f94a 	bl	9001145c <_ZN8touchgfx4RectaNERKS0_>
900211c8:	4640      	mov	r0, r8
900211ca:	f7f0 f98a 	bl	900114e2 <_ZNK8touchgfx4Rect7isEmptyEv>
900211ce:	b138      	cbz	r0, 900211e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
900211d0:	4623      	mov	r3, r4
900211d2:	9600      	str	r6, [sp, #0]
900211d4:	aa02      	add	r2, sp, #8
900211d6:	4651      	mov	r1, sl
900211d8:	4628      	mov	r0, r5
900211da:	f7ff fdbd 	bl	90020d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900211de:	e736      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900211e0:	683b      	ldr	r3, [r7, #0]
900211e2:	aa02      	add	r2, sp, #8
900211e4:	4629      	mov	r1, r5
900211e6:	e9cd 6000 	strd	r6, r0, [sp]
900211ea:	4638      	mov	r0, r7
900211ec:	f8d3 b00c 	ldr.w	fp, [r3, #12]
900211f0:	4643      	mov	r3, r8
900211f2:	47d8      	blx	fp
900211f4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900211f8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900211fc:	4293      	cmp	r3, r2
900211fe:	dd13      	ble.n	90021228 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90021200:	f9b4 0000 	ldrsh.w	r0, [r4]
90021204:	1a9b      	subs	r3, r3, r2
90021206:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002120a:	f8ad 0018 	strh.w	r0, [sp, #24]
9002120e:	4628      	mov	r0, r5
90021210:	f8ad 201a 	strh.w	r2, [sp, #26]
90021214:	aa02      	add	r2, sp, #8
90021216:	f8ad 101c 	strh.w	r1, [sp, #28]
9002121a:	4651      	mov	r1, sl
9002121c:	f8ad 301e 	strh.w	r3, [sp, #30]
90021220:	464b      	mov	r3, r9
90021222:	9600      	str	r6, [sp, #0]
90021224:	f7ff fd98 	bl	90020d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021228:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9002122c:	f9b4 2000 	ldrsh.w	r2, [r4]
90021230:	4293      	cmp	r3, r2
90021232:	dd13      	ble.n	9002125c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90021234:	1a9b      	subs	r3, r3, r2
90021236:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9002123a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002123e:	f8ad 2018 	strh.w	r2, [sp, #24]
90021242:	aa02      	add	r2, sp, #8
90021244:	f8ad 001a 	strh.w	r0, [sp, #26]
90021248:	4628      	mov	r0, r5
9002124a:	f8ad 301c 	strh.w	r3, [sp, #28]
9002124e:	464b      	mov	r3, r9
90021250:	f8ad 101e 	strh.w	r1, [sp, #30]
90021254:	4651      	mov	r1, sl
90021256:	9600      	str	r6, [sp, #0]
90021258:	f7ff fd7e 	bl	90020d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002125c:	88a2      	ldrh	r2, [r4, #4]
9002125e:	8823      	ldrh	r3, [r4, #0]
90021260:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021264:	4413      	add	r3, r2
90021266:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9002126a:	440a      	add	r2, r1
9002126c:	b29b      	uxth	r3, r3
9002126e:	b292      	uxth	r2, r2
90021270:	b218      	sxth	r0, r3
90021272:	b211      	sxth	r1, r2
90021274:	4288      	cmp	r0, r1
90021276:	dd13      	ble.n	900212a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90021278:	1a9b      	subs	r3, r3, r2
9002127a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9002127e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90021282:	aa02      	add	r2, sp, #8
90021284:	f8ad 1018 	strh.w	r1, [sp, #24]
90021288:	4651      	mov	r1, sl
9002128a:	f8ad 301c 	strh.w	r3, [sp, #28]
9002128e:	464b      	mov	r3, r9
90021290:	f8ad 001e 	strh.w	r0, [sp, #30]
90021294:	4628      	mov	r0, r5
90021296:	9600      	str	r6, [sp, #0]
90021298:	f8ad 701a 	strh.w	r7, [sp, #26]
9002129c:	f7ff fd5c 	bl	90020d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900212a0:	88e2      	ldrh	r2, [r4, #6]
900212a2:	8863      	ldrh	r3, [r4, #2]
900212a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900212a8:	4413      	add	r3, r2
900212aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900212ae:	440a      	add	r2, r1
900212b0:	b29b      	uxth	r3, r3
900212b2:	b292      	uxth	r2, r2
900212b4:	b218      	sxth	r0, r3
900212b6:	b211      	sxth	r1, r2
900212b8:	4288      	cmp	r0, r1
900212ba:	f77f aec8 	ble.w	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900212be:	f9b4 7000 	ldrsh.w	r7, [r4]
900212c2:	1a9b      	subs	r3, r3, r2
900212c4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900212c8:	f8ad 301e 	strh.w	r3, [sp, #30]
900212cc:	464b      	mov	r3, r9
900212ce:	f8ad 7018 	strh.w	r7, [sp, #24]
900212d2:	f8ad 101a 	strh.w	r1, [sp, #26]
900212d6:	f8ad 001c 	strh.w	r0, [sp, #28]
900212da:	9600      	str	r6, [sp, #0]
900212dc:	e77a      	b.n	900211d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
900212de:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900212e2:	2800      	cmp	r0, #0
900212e4:	f43f aeb3 	beq.w	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900212e8:	6803      	ldr	r3, [r0, #0]
900212ea:	9600      	str	r6, [sp, #0]
900212ec:	68de      	ldr	r6, [r3, #12]
900212ee:	4623      	mov	r3, r4
900212f0:	aa02      	add	r2, sp, #8
900212f2:	4629      	mov	r1, r5
900212f4:	47b0      	blx	r6
900212f6:	e6aa      	b.n	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900212f8:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900212fc:	2800      	cmp	r0, #0
900212fe:	f43f aea6 	beq.w	9002104e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021302:	6803      	ldr	r3, [r0, #0]
90021304:	9600      	str	r6, [sp, #0]
90021306:	689e      	ldr	r6, [r3, #8]
90021308:	e7f1      	b.n	900212ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
9002130a:	bf00      	nop
9002130c:	24021d64 	.word	0x24021d64

90021310 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90021310:	b180      	cbz	r0, 90021334 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90021312:	2903      	cmp	r1, #3
90021314:	d81c      	bhi.n	90021350 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90021316:	e8df f001 	tbb	[pc, r1]
9002131a:	1d02      	.short	0x1d02
9002131c:	1f08      	.short	0x1f08
9002131e:	4b10      	ldr	r3, [pc, #64]	@ (90021360 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021320:	8818      	ldrh	r0, [r3, #0]
90021322:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021326:	4240      	negs	r0, r0
90021328:	4770      	bx	lr
9002132a:	4b0d      	ldr	r3, [pc, #52]	@ (90021360 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9002132c:	8818      	ldrh	r0, [r3, #0]
9002132e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021332:	4770      	bx	lr
90021334:	2903      	cmp	r1, #3
90021336:	d80b      	bhi.n	90021350 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90021338:	a301      	add	r3, pc, #4	@ (adr r3, 90021340 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9002133a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002133e:	bf00      	nop
90021340:	90021355 	.word	0x90021355
90021344:	9002132b 	.word	0x9002132b
90021348:	90021359 	.word	0x90021359
9002134c:	9002131f 	.word	0x9002131f
90021350:	2000      	movs	r0, #0
90021352:	4770      	bx	lr
90021354:	2001      	movs	r0, #1
90021356:	4770      	bx	lr
90021358:	f04f 30ff 	mov.w	r0, #4294967295
9002135c:	4770      	bx	lr
9002135e:	bf00      	nop
90021360:	24021d5e 	.word	0x24021d5e

90021364 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90021364:	b180      	cbz	r0, 90021388 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90021366:	2903      	cmp	r1, #3
90021368:	d81c      	bhi.n	900213a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9002136a:	e8df f001 	tbb	[pc, r1]
9002136e:	021d      	.short	0x021d
90021370:	071f      	.short	0x071f
90021372:	4b10      	ldr	r3, [pc, #64]	@ (900213b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90021374:	8818      	ldrh	r0, [r3, #0]
90021376:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002137a:	4770      	bx	lr
9002137c:	4b0d      	ldr	r3, [pc, #52]	@ (900213b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9002137e:	8818      	ldrh	r0, [r3, #0]
90021380:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021384:	4240      	negs	r0, r0
90021386:	4770      	bx	lr
90021388:	2903      	cmp	r1, #3
9002138a:	d80b      	bhi.n	900213a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9002138c:	a301      	add	r3, pc, #4	@ (adr r3, 90021394 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9002138e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90021392:	bf00      	nop
90021394:	90021373 	.word	0x90021373
90021398:	900213ad 	.word	0x900213ad
9002139c:	9002137d 	.word	0x9002137d
900213a0:	900213a9 	.word	0x900213a9
900213a4:	2000      	movs	r0, #0
900213a6:	4770      	bx	lr
900213a8:	2001      	movs	r0, #1
900213aa:	4770      	bx	lr
900213ac:	f04f 30ff 	mov.w	r0, #4294967295
900213b0:	4770      	bx	lr
900213b2:	bf00      	nop
900213b4:	24021d5e 	.word	0x24021d5e

900213b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900213b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900213bc:	b099      	sub	sp, #100	@ 0x64
900213be:	910d      	str	r1, [sp, #52]	@ 0x34
900213c0:	a914      	add	r1, sp, #80	@ 0x50
900213c2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900213c6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900213ca:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900213ce:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
900213d0:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
900213d4:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900213d8:	e881 000c 	stmia.w	r1, {r2, r3}
900213dc:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900213e0:	930b      	str	r3, [sp, #44]	@ 0x2c
900213e2:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900213e6:	9310      	str	r3, [sp, #64]	@ 0x40
900213e8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
900213ec:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900213f0:	9308      	str	r3, [sp, #32]
900213f2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
900213f6:	9309      	str	r3, [sp, #36]	@ 0x24
900213f8:	7b4b      	ldrb	r3, [r1, #13]
900213fa:	ea4f 1843 	mov.w	r8, r3, lsl #5
900213fe:	f408 7080 	and.w	r0, r8, #256	@ 0x100
90021402:	f891 8006 	ldrb.w	r8, [r1, #6]
90021406:	ea58 0800 	orrs.w	r8, r8, r0
9002140a:	f000 81d0 	beq.w	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002140e:	011b      	lsls	r3, r3, #4
90021410:	79c8      	ldrb	r0, [r1, #7]
90021412:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90021416:	4303      	orrs	r3, r0
90021418:	930c      	str	r3, [sp, #48]	@ 0x30
9002141a:	f000 81c8 	beq.w	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002141e:	f991 3009 	ldrsb.w	r3, [r1, #9]
90021422:	b29b      	uxth	r3, r3
90021424:	2d00      	cmp	r5, #0
90021426:	f000 812d 	beq.w	90021684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
9002142a:	1aed      	subs	r5, r5, r3
9002142c:	b2ad      	uxth	r5, r5
9002142e:	0429      	lsls	r1, r5, #16
90021430:	d502      	bpl.n	90021438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
90021432:	1b64      	subs	r4, r4, r5
90021434:	2500      	movs	r5, #0
90021436:	b224      	sxth	r4, r4
90021438:	f9b2 0000 	ldrsh.w	r0, [r2]
9002143c:	8891      	ldrh	r1, [r2, #4]
9002143e:	4284      	cmp	r4, r0
90021440:	b283      	uxth	r3, r0
90021442:	bfb8      	it	lt
90021444:	18ed      	addlt	r5, r5, r3
90021446:	440b      	add	r3, r1
90021448:	b21b      	sxth	r3, r3
9002144a:	bfb8      	it	lt
9002144c:	1b2c      	sublt	r4, r5, r4
9002144e:	930a      	str	r3, [sp, #40]	@ 0x28
90021450:	bfb8      	it	lt
90021452:	b2a5      	uxthlt	r5, r4
90021454:	88d3      	ldrh	r3, [r2, #6]
90021456:	bfb8      	it	lt
90021458:	4604      	movlt	r4, r0
9002145a:	8852      	ldrh	r2, [r2, #2]
9002145c:	a814      	add	r0, sp, #80	@ 0x50
9002145e:	4621      	mov	r1, r4
90021460:	4413      	add	r3, r2
90021462:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021464:	b21b      	sxth	r3, r3
90021466:	930f      	str	r3, [sp, #60]	@ 0x3c
90021468:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002146a:	930e      	str	r3, [sp, #56]	@ 0x38
9002146c:	4bb2      	ldr	r3, [pc, #712]	@ (90021738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
9002146e:	f893 b000 	ldrb.w	fp, [r3]
90021472:	4653      	mov	r3, sl
90021474:	f7f5 fcd1 	bl	90016e1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90021478:	4621      	mov	r1, r4
9002147a:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9002147e:	4653      	mov	r3, sl
90021480:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021482:	a814      	add	r0, sp, #80	@ 0x50
90021484:	f7f5 fce6 	bl	90016e54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90021488:	a918      	add	r1, sp, #96	@ 0x60
9002148a:	f821 0d02 	strh.w	r0, [r1, #-2]!
9002148e:	a817      	add	r0, sp, #92	@ 0x5c
90021490:	f7f5 fe0c 	bl	900170ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90021494:	f1ba 0f00 	cmp.w	sl, #0
90021498:	f040 80f7 	bne.w	9002168a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
9002149c:	f1bb 0f01 	cmp.w	fp, #1
900214a0:	f040 80fb 	bne.w	9002169a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
900214a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900214a6:	2b00      	cmp	r3, #0
900214a8:	f040 81a9 	bne.w	900217fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
900214ac:	fa1f f288 	uxth.w	r2, r8
900214b0:	b905      	cbnz	r5, 900214b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
900214b2:	b15e      	cbz	r6, 900214cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
900214b4:	fb06 5302 	mla	r3, r6, r2, r5
900214b8:	9808      	ldr	r0, [sp, #32]
900214ba:	4631      	mov	r1, r6
900214bc:	4343      	muls	r3, r0
900214be:	f003 0607 	and.w	r6, r3, #7
900214c2:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
900214c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900214c8:	1a5b      	subs	r3, r3, r1
900214ca:	930e      	str	r3, [sp, #56]	@ 0x38
900214cc:	f10b 31ff 	add.w	r1, fp, #4294967295
900214d0:	424b      	negs	r3, r1
900214d2:	414b      	adcs	r3, r1
900214d4:	4651      	mov	r1, sl
900214d6:	4618      	mov	r0, r3
900214d8:	930c      	str	r3, [sp, #48]	@ 0x30
900214da:	f7ff ff19 	bl	90021310 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900214de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900214e0:	4683      	mov	fp, r0
900214e2:	4618      	mov	r0, r3
900214e4:	f7ff ff3e 	bl	90021364 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
900214e8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900214ea:	4603      	mov	r3, r0
900214ec:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900214ee:	eba1 0a00 	sub.w	sl, r1, r0
900214f2:	990e      	ldr	r1, [sp, #56]	@ 0x38
900214f4:	458a      	cmp	sl, r1
900214f6:	bfa8      	it	ge
900214f8:	468a      	movge	sl, r1
900214fa:	f1ba 0f00 	cmp.w	sl, #0
900214fe:	f340 8156 	ble.w	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021502:	1b64      	subs	r4, r4, r5
90021504:	990a      	ldr	r1, [sp, #40]	@ 0x28
90021506:	1b0c      	subs	r4, r1, r4
90021508:	4544      	cmp	r4, r8
9002150a:	bfd4      	ite	le
9002150c:	ebc5 0504 	rsble	r5, r5, r4
90021510:	ebc5 0508 	rsbgt	r5, r5, r8
90021514:	2d00      	cmp	r5, #0
90021516:	f340 814a 	ble.w	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002151a:	1b52      	subs	r2, r2, r5
9002151c:	9908      	ldr	r1, [sp, #32]
9002151e:	434a      	muls	r2, r1
90021520:	920e      	str	r2, [sp, #56]	@ 0x38
90021522:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90021524:	2a00      	cmp	r2, #0
90021526:	f040 8176 	bne.w	90021816 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
9002152a:	4a84      	ldr	r2, [pc, #528]	@ (9002173c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
9002152c:	930a      	str	r3, [sp, #40]	@ 0x28
9002152e:	6810      	ldr	r0, [r2, #0]
90021530:	6802      	ldr	r2, [r0, #0]
90021532:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90021534:	4790      	blx	r2
90021536:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021538:	9908      	ldr	r1, [sp, #32]
9002153a:	2201      	movs	r2, #1
9002153c:	408a      	lsls	r2, r1
9002153e:	4980      	ldr	r1, [pc, #512]	@ (90021740 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90021540:	3a01      	subs	r2, #1
90021542:	880c      	ldrh	r4, [r1, #0]
90021544:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
90021548:	b2d2      	uxtb	r2, r2
9002154a:	920c      	str	r2, [sp, #48]	@ 0x30
9002154c:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90021550:	fb04 1202 	mla	r2, r4, r2, r1
90021554:	ea4f 2419 	mov.w	r4, r9, lsr #8
90021558:	ea4f 1159 	mov.w	r1, r9, lsr #5
9002155c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021560:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021564:	920a      	str	r2, [sp, #40]	@ 0x28
90021566:	f3c9 4207 	ubfx	r2, r9, #16, #8
9002156a:	9212      	str	r2, [sp, #72]	@ 0x48
9002156c:	b2e2      	uxtb	r2, r4
9002156e:	9211      	str	r2, [sp, #68]	@ 0x44
90021570:	fa5f f289 	uxtb.w	r2, r9
90021574:	f3c9 09c4 	ubfx	r9, r9, #3, #5
90021578:	9210      	str	r2, [sp, #64]	@ 0x40
9002157a:	4a72      	ldr	r2, [pc, #456]	@ (90021744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
9002157c:	4022      	ands	r2, r4
9002157e:	430a      	orrs	r2, r1
90021580:	ea4f 014b 	mov.w	r1, fp, lsl #1
90021584:	fb05 3b1b 	mls	fp, r5, fp, r3
90021588:	ea42 0209 	orr.w	r2, r2, r9
9002158c:	460b      	mov	r3, r1
9002158e:	910b      	str	r1, [sp, #44]	@ 0x2c
90021590:	b292      	uxth	r2, r2
90021592:	436b      	muls	r3, r5
90021594:	920f      	str	r2, [sp, #60]	@ 0x3c
90021596:	eb03 034b 	add.w	r3, r3, fp, lsl #1
9002159a:	783a      	ldrb	r2, [r7, #0]
9002159c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002159e:	4132      	asrs	r2, r6
900215a0:	b2d2      	uxtb	r2, r2
900215a2:	f11a 3aff 	adds.w	sl, sl, #4294967295
900215a6:	f0c0 814a 	bcc.w	9002183e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
900215aa:	46a9      	mov	r9, r5
900215ac:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900215b0:	f119 39ff 	adds.w	r9, r9, #4294967295
900215b4:	f0c0 8133 	bcc.w	9002181e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
900215b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900215ba:	4013      	ands	r3, r2
900215bc:	d054      	beq.n	90021668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
900215be:	20ff      	movs	r0, #255	@ 0xff
900215c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900215c2:	fb90 f1f1 	sdiv	r1, r0, r1
900215c6:	434b      	muls	r3, r1
900215c8:	2bfe      	cmp	r3, #254	@ 0xfe
900215ca:	dd03      	ble.n	900215d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
900215cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
900215ce:	4281      	cmp	r1, r0
900215d0:	f000 8123 	beq.w	9002181a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
900215d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900215d6:	f8b8 4000 	ldrh.w	r4, [r8]
900215da:	fb11 f303 	smulbb	r3, r1, r3
900215de:	9812      	ldr	r0, [sp, #72]	@ 0x48
900215e0:	ea4f 0ce4 	mov.w	ip, r4, asr #3
900215e4:	b29b      	uxth	r3, r3
900215e6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
900215ea:	1c59      	adds	r1, r3, #1
900215ec:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
900215f0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900215f4:	1221      	asrs	r1, r4, #8
900215f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900215fa:	00e4      	lsls	r4, r4, #3
900215fc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021600:	fa1f fe83 	uxth.w	lr, r3
90021604:	43db      	mvns	r3, r3
90021606:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9002160a:	fb10 fb0e 	smulbb	fp, r0, lr
9002160e:	b2db      	uxtb	r3, r3
90021610:	9811      	ldr	r0, [sp, #68]	@ 0x44
90021612:	b2e4      	uxtb	r4, r4
90021614:	fb01 b103 	mla	r1, r1, r3, fp
90021618:	fb10 fb0e 	smulbb	fp, r0, lr
9002161c:	9810      	ldr	r0, [sp, #64]	@ 0x40
9002161e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90021622:	fb10 fe0e 	smulbb	lr, r0, lr
90021626:	b289      	uxth	r1, r1
90021628:	fb0c bc03 	mla	ip, ip, r3, fp
9002162c:	fb04 e403 	mla	r4, r4, r3, lr
90021630:	1c4b      	adds	r3, r1, #1
90021632:	fa1f fc8c 	uxth.w	ip, ip
90021636:	b2a4      	uxth	r4, r4
90021638:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002163c:	f104 0b01 	add.w	fp, r4, #1
90021640:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90021644:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
90021648:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002164c:	ea4b 0101 	orr.w	r1, fp, r1
90021650:	f10c 0b01 	add.w	fp, ip, #1
90021654:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
90021658:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9002165c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90021660:	ea41 010b 	orr.w	r1, r1, fp
90021664:	f8a8 1000 	strh.w	r1, [r8]
90021668:	9b08      	ldr	r3, [sp, #32]
9002166a:	441e      	add	r6, r3
9002166c:	b2b6      	uxth	r6, r6
9002166e:	2e07      	cmp	r6, #7
90021670:	bf98      	it	ls
90021672:	411a      	asrls	r2, r3
90021674:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021676:	bf85      	ittet	hi
90021678:	787a      	ldrbhi	r2, [r7, #1]
9002167a:	2600      	movhi	r6, #0
9002167c:	b2d2      	uxtbls	r2, r2
9002167e:	3701      	addhi	r7, #1
90021680:	4498      	add	r8, r3
90021682:	e795      	b.n	900215b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
90021684:	441c      	add	r4, r3
90021686:	b224      	sxth	r4, r4
90021688:	e6d6      	b.n	90021438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9002168a:	f1ba 0f01 	cmp.w	sl, #1
9002168e:	f47f af09 	bne.w	900214a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90021692:	f1bb 0f01 	cmp.w	fp, #1
90021696:	f47f af05 	bne.w	900214a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002169a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002169c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002169e:	1a99      	subs	r1, r3, r2
900216a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900216a2:	1b9b      	subs	r3, r3, r6
900216a4:	4299      	cmp	r1, r3
900216a6:	bfa8      	it	ge
900216a8:	4619      	movge	r1, r3
900216aa:	2900      	cmp	r1, #0
900216ac:	9112      	str	r1, [sp, #72]	@ 0x48
900216ae:	dd7e      	ble.n	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900216b0:	4a22      	ldr	r2, [pc, #136]	@ (9002173c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
900216b2:	6810      	ldr	r0, [r2, #0]
900216b4:	9211      	str	r2, [sp, #68]	@ 0x44
900216b6:	6803      	ldr	r3, [r0, #0]
900216b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900216ba:	4798      	blx	r3
900216bc:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900216c0:	9912      	ldr	r1, [sp, #72]	@ 0x48
900216c2:	d006      	beq.n	900216d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900216c4:	9b08      	ldr	r3, [sp, #32]
900216c6:	2b04      	cmp	r3, #4
900216c8:	d133      	bne.n	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
900216ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900216cc:	3300      	adds	r3, #0
900216ce:	bf18      	it	ne
900216d0:	2301      	movne	r3, #1
900216d2:	0582      	lsls	r2, r0, #22
900216d4:	fa1f fc88 	uxth.w	ip, r8
900216d8:	f140 80ba 	bpl.w	90021850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900216dc:	9808      	ldr	r0, [sp, #32]
900216de:	2808      	cmp	r0, #8
900216e0:	f040 80b6 	bne.w	90021850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900216e4:	2b00      	cmp	r3, #0
900216e6:	d065      	beq.n	900217b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
900216e8:	f10c 0c01 	add.w	ip, ip, #1
900216ec:	f02c 0301 	bic.w	r3, ip, #1
900216f0:	b29b      	uxth	r3, r3
900216f2:	bb4d      	cbnz	r5, 90021748 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
900216f4:	eb08 0004 	add.w	r0, r8, r4
900216f8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900216fa:	4290      	cmp	r0, r2
900216fc:	dc24      	bgt.n	90021748 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
900216fe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90021700:	b289      	uxth	r1, r1
90021702:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
90021706:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
9002170a:	6810      	ldr	r0, [r2, #0]
9002170c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021710:	6804      	ldr	r4, [r0, #0]
90021712:	9506      	str	r5, [sp, #24]
90021714:	f44f 7580 	mov.w	r5, #256	@ 0x100
90021718:	9302      	str	r3, [sp, #8]
9002171a:	9505      	str	r5, [sp, #20]
9002171c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002171e:	e9cd 3100 	strd	r3, r1, [sp]
90021722:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021726:	4673      	mov	r3, lr
90021728:	6da4      	ldr	r4, [r4, #88]	@ 0x58
9002172a:	fb06 710c 	mla	r1, r6, ip, r7
9002172e:	47a0      	blx	r4
90021730:	e03d      	b.n	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021732:	2300      	movs	r3, #0
90021734:	e7cd      	b.n	900216d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
90021736:	bf00      	nop
90021738:	24021d5c 	.word	0x24021d5c
9002173c:	24021d64 	.word	0x24021d64
90021740:	24021d5e 	.word	0x24021d5e
90021744:	00fff800 	.word	0x00fff800
90021748:	eba4 0e05 	sub.w	lr, r4, r5
9002174c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002174e:	eba2 0e0e 	sub.w	lr, r2, lr
90021752:	45c6      	cmp	lr, r8
90021754:	bfd4      	ite	le
90021756:	ebc5 0e0e 	rsble	lr, r5, lr
9002175a:	ebc5 0e08 	rsbgt	lr, r5, r8
9002175e:	f1be 0f00 	cmp.w	lr, #0
90021762:	d024      	beq.n	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021764:	07e8      	lsls	r0, r5, #31
90021766:	f53f ae9d 	bmi.w	900214a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002176a:	f01e 0001 	ands.w	r0, lr, #1
9002176e:	f47f ae99 	bne.w	900214a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90021772:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90021774:	086d      	lsrs	r5, r5, #1
90021776:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
9002177a:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
9002177e:	6814      	ldr	r4, [r2, #0]
90021780:	b289      	uxth	r1, r1
90021782:	fb06 560c 	mla	r6, r6, ip, r5
90021786:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9002178a:	6825      	ldr	r5, [r4, #0]
9002178c:	9006      	str	r0, [sp, #24]
9002178e:	f44f 7080 	mov.w	r0, #256	@ 0x100
90021792:	9302      	str	r3, [sp, #8]
90021794:	fa1f f38e 	uxth.w	r3, lr
90021798:	9005      	str	r0, [sp, #20]
9002179a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002179c:	9101      	str	r1, [sp, #4]
9002179e:	19b9      	adds	r1, r7, r6
900217a0:	9300      	str	r3, [sp, #0]
900217a2:	4643      	mov	r3, r8
900217a4:	e9cd 9003 	strd	r9, r0, [sp, #12]
900217a8:	4620      	mov	r0, r4
900217aa:	6dad      	ldr	r5, [r5, #88]	@ 0x58
900217ac:	47a8      	blx	r5
900217ae:	b019      	add	sp, #100	@ 0x64
900217b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900217b4:	4a28      	ldr	r2, [pc, #160]	@ (90021858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
900217b6:	1b64      	subs	r4, r4, r5
900217b8:	fb06 5608 	mla	r6, r6, r8, r5
900217bc:	b289      	uxth	r1, r1
900217be:	6810      	ldr	r0, [r2, #0]
900217c0:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900217c4:	f8d0 a000 	ldr.w	sl, [r0]
900217c8:	9306      	str	r3, [sp, #24]
900217ca:	f44f 7300 	mov.w	r3, #512	@ 0x200
900217ce:	9101      	str	r1, [sp, #4]
900217d0:	19b9      	adds	r1, r7, r6
900217d2:	9305      	str	r3, [sp, #20]
900217d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900217d6:	f8cd c008 	str.w	ip, [sp, #8]
900217da:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900217de:	e9cd 9303 	strd	r9, r3, [sp, #12]
900217e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900217e4:	1b1c      	subs	r4, r3, r4
900217e6:	4673      	mov	r3, lr
900217e8:	4544      	cmp	r4, r8
900217ea:	bfd4      	ite	le
900217ec:	ebc5 0504 	rsble	r5, r5, r4
900217f0:	ebc5 0508 	rsbgt	r5, r5, r8
900217f4:	b2ad      	uxth	r5, r5
900217f6:	9500      	str	r5, [sp, #0]
900217f8:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
900217fc:	e797      	b.n	9002172e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900217fe:	2208      	movs	r2, #8
90021800:	9b08      	ldr	r3, [sp, #32]
90021802:	fb92 f3f3 	sdiv	r3, r2, r3
90021806:	1e5a      	subs	r2, r3, #1
90021808:	4442      	add	r2, r8
9002180a:	fb92 f2f3 	sdiv	r2, r2, r3
9002180e:	fb12 f203 	smulbb	r2, r2, r3
90021812:	b292      	uxth	r2, r2
90021814:	e64c      	b.n	900214b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90021816:	980d      	ldr	r0, [sp, #52]	@ 0x34
90021818:	e68e      	b.n	90021538 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
9002181a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002181c:	e722      	b.n	90021664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
9002181e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021820:	b143      	cbz	r3, 90021834 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
90021822:	441e      	add	r6, r3
90021824:	b2b6      	uxth	r6, r6
90021826:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
9002182a:	f006 0607 	and.w	r6, r6, #7
9002182e:	783a      	ldrb	r2, [r7, #0]
90021830:	4132      	asrs	r2, r6
90021832:	b2d2      	uxtb	r2, r2
90021834:	990a      	ldr	r1, [sp, #40]	@ 0x28
90021836:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021838:	4419      	add	r1, r3
9002183a:	910a      	str	r1, [sp, #40]	@ 0x28
9002183c:	e6b1      	b.n	900215a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
9002183e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021840:	2b00      	cmp	r3, #0
90021842:	d1b4      	bne.n	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021844:	4b04      	ldr	r3, [pc, #16]	@ (90021858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
90021846:	6818      	ldr	r0, [r3, #0]
90021848:	6803      	ldr	r3, [r0, #0]
9002184a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002184c:	4798      	blx	r3
9002184e:	e7ae      	b.n	900217ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021850:	2b00      	cmp	r3, #0
90021852:	f47f af49 	bne.w	900216e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
90021856:	e625      	b.n	900214a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90021858:	24021d64 	.word	0x24021d64

9002185c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9002185c:	b538      	push	{r3, r4, r5, lr}
9002185e:	4c15      	ldr	r4, [pc, #84]	@ (900218b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90021860:	4605      	mov	r5, r0
90021862:	7823      	ldrb	r3, [r4, #0]
90021864:	f3bf 8f5b 	dmb	ish
90021868:	07da      	lsls	r2, r3, #31
9002186a:	d40b      	bmi.n	90021884 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9002186c:	4620      	mov	r0, r4
9002186e:	f008 fc6b 	bl	9002a148 <__cxa_guard_acquire>
90021872:	b138      	cbz	r0, 90021884 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021874:	4620      	mov	r0, r4
90021876:	f008 fc73 	bl	9002a160 <__cxa_guard_release>
9002187a:	4a0f      	ldr	r2, [pc, #60]	@ (900218b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9002187c:	490f      	ldr	r1, [pc, #60]	@ (900218bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9002187e:	4810      	ldr	r0, [pc, #64]	@ (900218c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021880:	f008 fc5b 	bl	9002a13a <__aeabi_atexit>
90021884:	4c0f      	ldr	r4, [pc, #60]	@ (900218c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90021886:	7823      	ldrb	r3, [r4, #0]
90021888:	f3bf 8f5b 	dmb	ish
9002188c:	07db      	lsls	r3, r3, #31
9002188e:	d40b      	bmi.n	900218a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021890:	4620      	mov	r0, r4
90021892:	f008 fc59 	bl	9002a148 <__cxa_guard_acquire>
90021896:	b138      	cbz	r0, 900218a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021898:	4620      	mov	r0, r4
9002189a:	f008 fc61 	bl	9002a160 <__cxa_guard_release>
9002189e:	4a06      	ldr	r2, [pc, #24]	@ (900218b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900218a0:	4909      	ldr	r1, [pc, #36]	@ (900218c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900218a2:	480a      	ldr	r0, [pc, #40]	@ (900218cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900218a4:	f008 fc49 	bl	9002a13a <__aeabi_atexit>
900218a8:	4b05      	ldr	r3, [pc, #20]	@ (900218c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900218aa:	616b      	str	r3, [r5, #20]
900218ac:	4b07      	ldr	r3, [pc, #28]	@ (900218cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900218ae:	61ab      	str	r3, [r5, #24]
900218b0:	bd38      	pop	{r3, r4, r5, pc}
900218b2:	bf00      	nop
900218b4:	24021e48 	.word	0x24021e48
900218b8:	24000000 	.word	0x24000000
900218bc:	9001d949 	.word	0x9001d949
900218c0:	240000d4 	.word	0x240000d4
900218c4:	24021e4c 	.word	0x24021e4c
900218c8:	9001d947 	.word	0x9001d947
900218cc:	240000d8 	.word	0x240000d8

900218d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
900218d0:	b538      	push	{r3, r4, r5, lr}
900218d2:	4c15      	ldr	r4, [pc, #84]	@ (90021928 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
900218d4:	4605      	mov	r5, r0
900218d6:	7823      	ldrb	r3, [r4, #0]
900218d8:	f3bf 8f5b 	dmb	ish
900218dc:	07da      	lsls	r2, r3, #31
900218de:	d40b      	bmi.n	900218f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900218e0:	4620      	mov	r0, r4
900218e2:	f008 fc31 	bl	9002a148 <__cxa_guard_acquire>
900218e6:	b138      	cbz	r0, 900218f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900218e8:	4620      	mov	r0, r4
900218ea:	f008 fc39 	bl	9002a160 <__cxa_guard_release>
900218ee:	4a0f      	ldr	r2, [pc, #60]	@ (9002192c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900218f0:	490f      	ldr	r1, [pc, #60]	@ (90021930 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
900218f2:	4810      	ldr	r0, [pc, #64]	@ (90021934 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900218f4:	f008 fc21 	bl	9002a13a <__aeabi_atexit>
900218f8:	4c0f      	ldr	r4, [pc, #60]	@ (90021938 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
900218fa:	7823      	ldrb	r3, [r4, #0]
900218fc:	f3bf 8f5b 	dmb	ish
90021900:	07db      	lsls	r3, r3, #31
90021902:	d40b      	bmi.n	9002191c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021904:	4620      	mov	r0, r4
90021906:	f008 fc1f 	bl	9002a148 <__cxa_guard_acquire>
9002190a:	b138      	cbz	r0, 9002191c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002190c:	4620      	mov	r0, r4
9002190e:	f008 fc27 	bl	9002a160 <__cxa_guard_release>
90021912:	4a06      	ldr	r2, [pc, #24]	@ (9002192c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021914:	4909      	ldr	r1, [pc, #36]	@ (9002193c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90021916:	480a      	ldr	r0, [pc, #40]	@ (90021940 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021918:	f008 fc0f 	bl	9002a13a <__aeabi_atexit>
9002191c:	4b05      	ldr	r3, [pc, #20]	@ (90021934 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002191e:	60eb      	str	r3, [r5, #12]
90021920:	4b07      	ldr	r3, [pc, #28]	@ (90021940 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021922:	612b      	str	r3, [r5, #16]
90021924:	bd38      	pop	{r3, r4, r5, pc}
90021926:	bf00      	nop
90021928:	24021e20 	.word	0x24021e20
9002192c:	24000000 	.word	0x24000000
90021930:	9001d94d 	.word	0x9001d94d
90021934:	240000ac 	.word	0x240000ac
90021938:	24021e24 	.word	0x24021e24
9002193c:	9001d94b 	.word	0x9001d94b
90021940:	240000b0 	.word	0x240000b0

90021944 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90021944:	b510      	push	{r4, lr}
90021946:	4604      	mov	r4, r0
90021948:	f7ff ff88 	bl	9002185c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9002194c:	4620      	mov	r0, r4
9002194e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021952:	f7ff bfbd 	b.w	900218d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90021958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90021958:	b538      	push	{r3, r4, r5, lr}
9002195a:	4c15      	ldr	r4, [pc, #84]	@ (900219b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9002195c:	4605      	mov	r5, r0
9002195e:	7823      	ldrb	r3, [r4, #0]
90021960:	f3bf 8f5b 	dmb	ish
90021964:	07da      	lsls	r2, r3, #31
90021966:	d40b      	bmi.n	90021980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021968:	4620      	mov	r0, r4
9002196a:	f008 fbed 	bl	9002a148 <__cxa_guard_acquire>
9002196e:	b138      	cbz	r0, 90021980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021970:	4620      	mov	r0, r4
90021972:	f008 fbf5 	bl	9002a160 <__cxa_guard_release>
90021976:	4a0f      	ldr	r2, [pc, #60]	@ (900219b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021978:	490f      	ldr	r1, [pc, #60]	@ (900219b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9002197a:	4810      	ldr	r0, [pc, #64]	@ (900219bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9002197c:	f008 fbdd 	bl	9002a13a <__aeabi_atexit>
90021980:	4c0f      	ldr	r4, [pc, #60]	@ (900219c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90021982:	7823      	ldrb	r3, [r4, #0]
90021984:	f3bf 8f5b 	dmb	ish
90021988:	07db      	lsls	r3, r3, #31
9002198a:	d40b      	bmi.n	900219a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9002198c:	4620      	mov	r0, r4
9002198e:	f008 fbdb 	bl	9002a148 <__cxa_guard_acquire>
90021992:	b138      	cbz	r0, 900219a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021994:	4620      	mov	r0, r4
90021996:	f008 fbe3 	bl	9002a160 <__cxa_guard_release>
9002199a:	4a06      	ldr	r2, [pc, #24]	@ (900219b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9002199c:	4909      	ldr	r1, [pc, #36]	@ (900219c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9002199e:	480a      	ldr	r0, [pc, #40]	@ (900219c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900219a0:	f008 fbcb 	bl	9002a13a <__aeabi_atexit>
900219a4:	4b05      	ldr	r3, [pc, #20]	@ (900219bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900219a6:	626b      	str	r3, [r5, #36]	@ 0x24
900219a8:	4b07      	ldr	r3, [pc, #28]	@ (900219c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900219aa:	62ab      	str	r3, [r5, #40]	@ 0x28
900219ac:	bd38      	pop	{r3, r4, r5, pc}
900219ae:	bf00      	nop
900219b0:	24021e50 	.word	0x24021e50
900219b4:	24000000 	.word	0x24000000
900219b8:	9001d941 	.word	0x9001d941
900219bc:	240000dc 	.word	0x240000dc
900219c0:	24021e54 	.word	0x24021e54
900219c4:	9001d93f 	.word	0x9001d93f
900219c8:	240000e0 	.word	0x240000e0

900219cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900219cc:	b538      	push	{r3, r4, r5, lr}
900219ce:	4c15      	ldr	r4, [pc, #84]	@ (90021a24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900219d0:	4605      	mov	r5, r0
900219d2:	7823      	ldrb	r3, [r4, #0]
900219d4:	f3bf 8f5b 	dmb	ish
900219d8:	07da      	lsls	r2, r3, #31
900219da:	d40b      	bmi.n	900219f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900219dc:	4620      	mov	r0, r4
900219de:	f008 fbb3 	bl	9002a148 <__cxa_guard_acquire>
900219e2:	b138      	cbz	r0, 900219f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900219e4:	4620      	mov	r0, r4
900219e6:	f008 fbbb 	bl	9002a160 <__cxa_guard_release>
900219ea:	4a0f      	ldr	r2, [pc, #60]	@ (90021a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900219ec:	490f      	ldr	r1, [pc, #60]	@ (90021a2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
900219ee:	4810      	ldr	r0, [pc, #64]	@ (90021a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900219f0:	f008 fba3 	bl	9002a13a <__aeabi_atexit>
900219f4:	4c0f      	ldr	r4, [pc, #60]	@ (90021a34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
900219f6:	7823      	ldrb	r3, [r4, #0]
900219f8:	f3bf 8f5b 	dmb	ish
900219fc:	07db      	lsls	r3, r3, #31
900219fe:	d40b      	bmi.n	90021a18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021a00:	4620      	mov	r0, r4
90021a02:	f008 fba1 	bl	9002a148 <__cxa_guard_acquire>
90021a06:	b138      	cbz	r0, 90021a18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021a08:	4620      	mov	r0, r4
90021a0a:	f008 fba9 	bl	9002a160 <__cxa_guard_release>
90021a0e:	4a06      	ldr	r2, [pc, #24]	@ (90021a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021a10:	4909      	ldr	r1, [pc, #36]	@ (90021a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90021a12:	480a      	ldr	r0, [pc, #40]	@ (90021a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021a14:	f008 fb91 	bl	9002a13a <__aeabi_atexit>
90021a18:	4b05      	ldr	r3, [pc, #20]	@ (90021a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021a1a:	61eb      	str	r3, [r5, #28]
90021a1c:	4b07      	ldr	r3, [pc, #28]	@ (90021a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021a1e:	622b      	str	r3, [r5, #32]
90021a20:	bd38      	pop	{r3, r4, r5, pc}
90021a22:	bf00      	nop
90021a24:	24021e28 	.word	0x24021e28
90021a28:	24000000 	.word	0x24000000
90021a2c:	9001d945 	.word	0x9001d945
90021a30:	240000b4 	.word	0x240000b4
90021a34:	24021e2c 	.word	0x24021e2c
90021a38:	9001d943 	.word	0x9001d943
90021a3c:	240000b8 	.word	0x240000b8

90021a40 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90021a40:	b510      	push	{r4, lr}
90021a42:	4604      	mov	r4, r0
90021a44:	f7ff ff88 	bl	90021958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021a48:	4620      	mov	r0, r4
90021a4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021a4e:	f7ff bfbd 	b.w	900219cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90021a54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90021a54:	b538      	push	{r3, r4, r5, lr}
90021a56:	4c15      	ldr	r4, [pc, #84]	@ (90021aac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021a58:	4605      	mov	r5, r0
90021a5a:	7823      	ldrb	r3, [r4, #0]
90021a5c:	f3bf 8f5b 	dmb	ish
90021a60:	07da      	lsls	r2, r3, #31
90021a62:	d40b      	bmi.n	90021a7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021a64:	4620      	mov	r0, r4
90021a66:	f008 fb6f 	bl	9002a148 <__cxa_guard_acquire>
90021a6a:	b138      	cbz	r0, 90021a7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021a6c:	4620      	mov	r0, r4
90021a6e:	f008 fb77 	bl	9002a160 <__cxa_guard_release>
90021a72:	4a0f      	ldr	r2, [pc, #60]	@ (90021ab0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021a74:	490f      	ldr	r1, [pc, #60]	@ (90021ab4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90021a76:	4810      	ldr	r0, [pc, #64]	@ (90021ab8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021a78:	f008 fb5f 	bl	9002a13a <__aeabi_atexit>
90021a7c:	4c0f      	ldr	r4, [pc, #60]	@ (90021abc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90021a7e:	7823      	ldrb	r3, [r4, #0]
90021a80:	f3bf 8f5b 	dmb	ish
90021a84:	07db      	lsls	r3, r3, #31
90021a86:	d40b      	bmi.n	90021aa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021a88:	4620      	mov	r0, r4
90021a8a:	f008 fb5d 	bl	9002a148 <__cxa_guard_acquire>
90021a8e:	b138      	cbz	r0, 90021aa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021a90:	4620      	mov	r0, r4
90021a92:	f008 fb65 	bl	9002a160 <__cxa_guard_release>
90021a96:	4a06      	ldr	r2, [pc, #24]	@ (90021ab0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021a98:	4909      	ldr	r1, [pc, #36]	@ (90021ac0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021a9a:	480a      	ldr	r0, [pc, #40]	@ (90021ac4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021a9c:	f008 fb4d 	bl	9002a13a <__aeabi_atexit>
90021aa0:	4b05      	ldr	r3, [pc, #20]	@ (90021ab8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021aa2:	636b      	str	r3, [r5, #52]	@ 0x34
90021aa4:	4b07      	ldr	r3, [pc, #28]	@ (90021ac4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021aa6:	63ab      	str	r3, [r5, #56]	@ 0x38
90021aa8:	bd38      	pop	{r3, r4, r5, pc}
90021aaa:	bf00      	nop
90021aac:	24021e60 	.word	0x24021e60
90021ab0:	24000000 	.word	0x24000000
90021ab4:	9001d939 	.word	0x9001d939
90021ab8:	240000ec 	.word	0x240000ec
90021abc:	24021e64 	.word	0x24021e64
90021ac0:	9001d937 	.word	0x9001d937
90021ac4:	240000f0 	.word	0x240000f0

90021ac8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90021ac8:	b538      	push	{r3, r4, r5, lr}
90021aca:	4c15      	ldr	r4, [pc, #84]	@ (90021b20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90021acc:	4605      	mov	r5, r0
90021ace:	7823      	ldrb	r3, [r4, #0]
90021ad0:	f3bf 8f5b 	dmb	ish
90021ad4:	07da      	lsls	r2, r3, #31
90021ad6:	d40b      	bmi.n	90021af0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021ad8:	4620      	mov	r0, r4
90021ada:	f008 fb35 	bl	9002a148 <__cxa_guard_acquire>
90021ade:	b138      	cbz	r0, 90021af0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021ae0:	4620      	mov	r0, r4
90021ae2:	f008 fb3d 	bl	9002a160 <__cxa_guard_release>
90021ae6:	4a0f      	ldr	r2, [pc, #60]	@ (90021b24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021ae8:	490f      	ldr	r1, [pc, #60]	@ (90021b28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90021aea:	4810      	ldr	r0, [pc, #64]	@ (90021b2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021aec:	f008 fb25 	bl	9002a13a <__aeabi_atexit>
90021af0:	4c0f      	ldr	r4, [pc, #60]	@ (90021b30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90021af2:	7823      	ldrb	r3, [r4, #0]
90021af4:	f3bf 8f5b 	dmb	ish
90021af8:	07db      	lsls	r3, r3, #31
90021afa:	d40b      	bmi.n	90021b14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021afc:	4620      	mov	r0, r4
90021afe:	f008 fb23 	bl	9002a148 <__cxa_guard_acquire>
90021b02:	b138      	cbz	r0, 90021b14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021b04:	4620      	mov	r0, r4
90021b06:	f008 fb2b 	bl	9002a160 <__cxa_guard_release>
90021b0a:	4a06      	ldr	r2, [pc, #24]	@ (90021b24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021b0c:	4909      	ldr	r1, [pc, #36]	@ (90021b34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90021b0e:	480a      	ldr	r0, [pc, #40]	@ (90021b38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021b10:	f008 fb13 	bl	9002a13a <__aeabi_atexit>
90021b14:	4b05      	ldr	r3, [pc, #20]	@ (90021b2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021b16:	62eb      	str	r3, [r5, #44]	@ 0x2c
90021b18:	4b07      	ldr	r3, [pc, #28]	@ (90021b38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021b1a:	632b      	str	r3, [r5, #48]	@ 0x30
90021b1c:	bd38      	pop	{r3, r4, r5, pc}
90021b1e:	bf00      	nop
90021b20:	24021e30 	.word	0x24021e30
90021b24:	24000000 	.word	0x24000000
90021b28:	9001d93d 	.word	0x9001d93d
90021b2c:	240000bc 	.word	0x240000bc
90021b30:	24021e34 	.word	0x24021e34
90021b34:	9001d93b 	.word	0x9001d93b
90021b38:	240000c0 	.word	0x240000c0

90021b3c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021b3c:	b510      	push	{r4, lr}
90021b3e:	4604      	mov	r4, r0
90021b40:	f7ff ff88 	bl	90021a54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90021b44:	4620      	mov	r0, r4
90021b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021b4a:	f7ff bfbd 	b.w	90021ac8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90021b50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90021b50:	b538      	push	{r3, r4, r5, lr}
90021b52:	4c15      	ldr	r4, [pc, #84]	@ (90021ba8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021b54:	4605      	mov	r5, r0
90021b56:	7823      	ldrb	r3, [r4, #0]
90021b58:	f3bf 8f5b 	dmb	ish
90021b5c:	07da      	lsls	r2, r3, #31
90021b5e:	d40b      	bmi.n	90021b78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021b60:	4620      	mov	r0, r4
90021b62:	f008 faf1 	bl	9002a148 <__cxa_guard_acquire>
90021b66:	b138      	cbz	r0, 90021b78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021b68:	4620      	mov	r0, r4
90021b6a:	f008 faf9 	bl	9002a160 <__cxa_guard_release>
90021b6e:	4a0f      	ldr	r2, [pc, #60]	@ (90021bac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021b70:	490f      	ldr	r1, [pc, #60]	@ (90021bb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90021b72:	4810      	ldr	r0, [pc, #64]	@ (90021bb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021b74:	f008 fae1 	bl	9002a13a <__aeabi_atexit>
90021b78:	4c0f      	ldr	r4, [pc, #60]	@ (90021bb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021b7a:	7823      	ldrb	r3, [r4, #0]
90021b7c:	f3bf 8f5b 	dmb	ish
90021b80:	07db      	lsls	r3, r3, #31
90021b82:	d40b      	bmi.n	90021b9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021b84:	4620      	mov	r0, r4
90021b86:	f008 fadf 	bl	9002a148 <__cxa_guard_acquire>
90021b8a:	b138      	cbz	r0, 90021b9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021b8c:	4620      	mov	r0, r4
90021b8e:	f008 fae7 	bl	9002a160 <__cxa_guard_release>
90021b92:	4a06      	ldr	r2, [pc, #24]	@ (90021bac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021b94:	4909      	ldr	r1, [pc, #36]	@ (90021bbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021b96:	480a      	ldr	r0, [pc, #40]	@ (90021bc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021b98:	f008 facf 	bl	9002a13a <__aeabi_atexit>
90021b9c:	4b05      	ldr	r3, [pc, #20]	@ (90021bb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021b9e:	656b      	str	r3, [r5, #84]	@ 0x54
90021ba0:	4b07      	ldr	r3, [pc, #28]	@ (90021bc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021ba2:	65ab      	str	r3, [r5, #88]	@ 0x58
90021ba4:	bd38      	pop	{r3, r4, r5, pc}
90021ba6:	bf00      	nop
90021ba8:	24021e68 	.word	0x24021e68
90021bac:	24000000 	.word	0x24000000
90021bb0:	9001d929 	.word	0x9001d929
90021bb4:	240000f4 	.word	0x240000f4
90021bb8:	24021e6c 	.word	0x24021e6c
90021bbc:	9001d927 	.word	0x9001d927
90021bc0:	240000f8 	.word	0x240000f8

90021bc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90021bc4:	b538      	push	{r3, r4, r5, lr}
90021bc6:	4c15      	ldr	r4, [pc, #84]	@ (90021c1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90021bc8:	4605      	mov	r5, r0
90021bca:	7823      	ldrb	r3, [r4, #0]
90021bcc:	f3bf 8f5b 	dmb	ish
90021bd0:	07da      	lsls	r2, r3, #31
90021bd2:	d40b      	bmi.n	90021bec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021bd4:	4620      	mov	r0, r4
90021bd6:	f008 fab7 	bl	9002a148 <__cxa_guard_acquire>
90021bda:	b138      	cbz	r0, 90021bec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021bdc:	4620      	mov	r0, r4
90021bde:	f008 fabf 	bl	9002a160 <__cxa_guard_release>
90021be2:	4a0f      	ldr	r2, [pc, #60]	@ (90021c20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021be4:	490f      	ldr	r1, [pc, #60]	@ (90021c24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90021be6:	4810      	ldr	r0, [pc, #64]	@ (90021c28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021be8:	f008 faa7 	bl	9002a13a <__aeabi_atexit>
90021bec:	4c0f      	ldr	r4, [pc, #60]	@ (90021c2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90021bee:	7823      	ldrb	r3, [r4, #0]
90021bf0:	f3bf 8f5b 	dmb	ish
90021bf4:	07db      	lsls	r3, r3, #31
90021bf6:	d40b      	bmi.n	90021c10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021bf8:	4620      	mov	r0, r4
90021bfa:	f008 faa5 	bl	9002a148 <__cxa_guard_acquire>
90021bfe:	b138      	cbz	r0, 90021c10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021c00:	4620      	mov	r0, r4
90021c02:	f008 faad 	bl	9002a160 <__cxa_guard_release>
90021c06:	4a06      	ldr	r2, [pc, #24]	@ (90021c20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021c08:	4909      	ldr	r1, [pc, #36]	@ (90021c30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90021c0a:	480a      	ldr	r0, [pc, #40]	@ (90021c34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021c0c:	f008 fa95 	bl	9002a13a <__aeabi_atexit>
90021c10:	4b05      	ldr	r3, [pc, #20]	@ (90021c28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021c12:	64eb      	str	r3, [r5, #76]	@ 0x4c
90021c14:	4b07      	ldr	r3, [pc, #28]	@ (90021c34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021c16:	652b      	str	r3, [r5, #80]	@ 0x50
90021c18:	bd38      	pop	{r3, r4, r5, pc}
90021c1a:	bf00      	nop
90021c1c:	24021e70 	.word	0x24021e70
90021c20:	24000000 	.word	0x24000000
90021c24:	9001d92d 	.word	0x9001d92d
90021c28:	240000fc 	.word	0x240000fc
90021c2c:	24021e74 	.word	0x24021e74
90021c30:	9001d92b 	.word	0x9001d92b
90021c34:	24000100 	.word	0x24000100

90021c38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021c38:	b538      	push	{r3, r4, r5, lr}
90021c3a:	4c15      	ldr	r4, [pc, #84]	@ (90021c90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021c3c:	4605      	mov	r5, r0
90021c3e:	7823      	ldrb	r3, [r4, #0]
90021c40:	f3bf 8f5b 	dmb	ish
90021c44:	07da      	lsls	r2, r3, #31
90021c46:	d40b      	bmi.n	90021c60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021c48:	4620      	mov	r0, r4
90021c4a:	f008 fa7d 	bl	9002a148 <__cxa_guard_acquire>
90021c4e:	b138      	cbz	r0, 90021c60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021c50:	4620      	mov	r0, r4
90021c52:	f008 fa85 	bl	9002a160 <__cxa_guard_release>
90021c56:	4a0f      	ldr	r2, [pc, #60]	@ (90021c94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021c58:	490f      	ldr	r1, [pc, #60]	@ (90021c98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021c5a:	4810      	ldr	r0, [pc, #64]	@ (90021c9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021c5c:	f008 fa6d 	bl	9002a13a <__aeabi_atexit>
90021c60:	4c0f      	ldr	r4, [pc, #60]	@ (90021ca0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90021c62:	7823      	ldrb	r3, [r4, #0]
90021c64:	f3bf 8f5b 	dmb	ish
90021c68:	07db      	lsls	r3, r3, #31
90021c6a:	d40b      	bmi.n	90021c84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021c6c:	4620      	mov	r0, r4
90021c6e:	f008 fa6b 	bl	9002a148 <__cxa_guard_acquire>
90021c72:	b138      	cbz	r0, 90021c84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021c74:	4620      	mov	r0, r4
90021c76:	f008 fa73 	bl	9002a160 <__cxa_guard_release>
90021c7a:	4a06      	ldr	r2, [pc, #24]	@ (90021c94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021c7c:	4909      	ldr	r1, [pc, #36]	@ (90021ca4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90021c7e:	480a      	ldr	r0, [pc, #40]	@ (90021ca8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021c80:	f008 fa5b 	bl	9002a13a <__aeabi_atexit>
90021c84:	4b05      	ldr	r3, [pc, #20]	@ (90021c9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021c86:	646b      	str	r3, [r5, #68]	@ 0x44
90021c88:	4b07      	ldr	r3, [pc, #28]	@ (90021ca8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021c8a:	64ab      	str	r3, [r5, #72]	@ 0x48
90021c8c:	bd38      	pop	{r3, r4, r5, pc}
90021c8e:	bf00      	nop
90021c90:	24021e38 	.word	0x24021e38
90021c94:	24000000 	.word	0x24000000
90021c98:	9001d931 	.word	0x9001d931
90021c9c:	240000c4 	.word	0x240000c4
90021ca0:	24021e3c 	.word	0x24021e3c
90021ca4:	9001d92f 	.word	0x9001d92f
90021ca8:	240000c8 	.word	0x240000c8

90021cac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021cac:	b538      	push	{r3, r4, r5, lr}
90021cae:	4c15      	ldr	r4, [pc, #84]	@ (90021d04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90021cb0:	4605      	mov	r5, r0
90021cb2:	7823      	ldrb	r3, [r4, #0]
90021cb4:	f3bf 8f5b 	dmb	ish
90021cb8:	07da      	lsls	r2, r3, #31
90021cba:	d40b      	bmi.n	90021cd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021cbc:	4620      	mov	r0, r4
90021cbe:	f008 fa43 	bl	9002a148 <__cxa_guard_acquire>
90021cc2:	b138      	cbz	r0, 90021cd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021cc4:	4620      	mov	r0, r4
90021cc6:	f008 fa4b 	bl	9002a160 <__cxa_guard_release>
90021cca:	4a0f      	ldr	r2, [pc, #60]	@ (90021d08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021ccc:	490f      	ldr	r1, [pc, #60]	@ (90021d0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90021cce:	4810      	ldr	r0, [pc, #64]	@ (90021d10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021cd0:	f008 fa33 	bl	9002a13a <__aeabi_atexit>
90021cd4:	4c0f      	ldr	r4, [pc, #60]	@ (90021d14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90021cd6:	7823      	ldrb	r3, [r4, #0]
90021cd8:	f3bf 8f5b 	dmb	ish
90021cdc:	07db      	lsls	r3, r3, #31
90021cde:	d40b      	bmi.n	90021cf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021ce0:	4620      	mov	r0, r4
90021ce2:	f008 fa31 	bl	9002a148 <__cxa_guard_acquire>
90021ce6:	b138      	cbz	r0, 90021cf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021ce8:	4620      	mov	r0, r4
90021cea:	f008 fa39 	bl	9002a160 <__cxa_guard_release>
90021cee:	4a06      	ldr	r2, [pc, #24]	@ (90021d08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021cf0:	4909      	ldr	r1, [pc, #36]	@ (90021d18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90021cf2:	480a      	ldr	r0, [pc, #40]	@ (90021d1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021cf4:	f008 fa21 	bl	9002a13a <__aeabi_atexit>
90021cf8:	4b05      	ldr	r3, [pc, #20]	@ (90021d10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021cfa:	63eb      	str	r3, [r5, #60]	@ 0x3c
90021cfc:	4b07      	ldr	r3, [pc, #28]	@ (90021d1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021cfe:	642b      	str	r3, [r5, #64]	@ 0x40
90021d00:	bd38      	pop	{r3, r4, r5, pc}
90021d02:	bf00      	nop
90021d04:	24021e58 	.word	0x24021e58
90021d08:	24000000 	.word	0x24000000
90021d0c:	9001d935 	.word	0x9001d935
90021d10:	240000e4 	.word	0x240000e4
90021d14:	24021e5c 	.word	0x24021e5c
90021d18:	9001d933 	.word	0x9001d933
90021d1c:	240000e8 	.word	0x240000e8

90021d20 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90021d20:	b510      	push	{r4, lr}
90021d22:	4604      	mov	r4, r0
90021d24:	f7ff ff14 	bl	90021b50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021d28:	4620      	mov	r0, r4
90021d2a:	f7ff ff85 	bl	90021c38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90021d2e:	4620      	mov	r0, r4
90021d30:	f7ff ff48 	bl	90021bc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021d34:	4620      	mov	r0, r4
90021d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021d3a:	f7ff bfb7 	b.w	90021cac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90021d40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90021d40:	b538      	push	{r3, r4, r5, lr}
90021d42:	4c15      	ldr	r4, [pc, #84]	@ (90021d98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021d44:	4605      	mov	r5, r0
90021d46:	7823      	ldrb	r3, [r4, #0]
90021d48:	f3bf 8f5b 	dmb	ish
90021d4c:	07da      	lsls	r2, r3, #31
90021d4e:	d40b      	bmi.n	90021d68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021d50:	4620      	mov	r0, r4
90021d52:	f008 f9f9 	bl	9002a148 <__cxa_guard_acquire>
90021d56:	b138      	cbz	r0, 90021d68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021d58:	4620      	mov	r0, r4
90021d5a:	f008 fa01 	bl	9002a160 <__cxa_guard_release>
90021d5e:	4a0f      	ldr	r2, [pc, #60]	@ (90021d9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021d60:	490f      	ldr	r1, [pc, #60]	@ (90021da0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90021d62:	4810      	ldr	r0, [pc, #64]	@ (90021da4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021d64:	f008 f9e9 	bl	9002a13a <__aeabi_atexit>
90021d68:	4c0f      	ldr	r4, [pc, #60]	@ (90021da8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021d6a:	7823      	ldrb	r3, [r4, #0]
90021d6c:	f3bf 8f5b 	dmb	ish
90021d70:	07db      	lsls	r3, r3, #31
90021d72:	d40b      	bmi.n	90021d8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021d74:	4620      	mov	r0, r4
90021d76:	f008 f9e7 	bl	9002a148 <__cxa_guard_acquire>
90021d7a:	b138      	cbz	r0, 90021d8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021d7c:	4620      	mov	r0, r4
90021d7e:	f008 f9ef 	bl	9002a160 <__cxa_guard_release>
90021d82:	4a06      	ldr	r2, [pc, #24]	@ (90021d9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021d84:	4909      	ldr	r1, [pc, #36]	@ (90021dac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021d86:	480a      	ldr	r0, [pc, #40]	@ (90021db0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021d88:	f008 f9d7 	bl	9002a13a <__aeabi_atexit>
90021d8c:	4b05      	ldr	r3, [pc, #20]	@ (90021da4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021d8e:	666b      	str	r3, [r5, #100]	@ 0x64
90021d90:	4b07      	ldr	r3, [pc, #28]	@ (90021db0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021d92:	66ab      	str	r3, [r5, #104]	@ 0x68
90021d94:	bd38      	pop	{r3, r4, r5, pc}
90021d96:	bf00      	nop
90021d98:	24021e40 	.word	0x24021e40
90021d9c:	24000000 	.word	0x24000000
90021da0:	9001d921 	.word	0x9001d921
90021da4:	240000cc 	.word	0x240000cc
90021da8:	24021e44 	.word	0x24021e44
90021dac:	9001d91f 	.word	0x9001d91f
90021db0:	240000d0 	.word	0x240000d0

90021db4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90021db4:	b538      	push	{r3, r4, r5, lr}
90021db6:	4c15      	ldr	r4, [pc, #84]	@ (90021e0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90021db8:	4605      	mov	r5, r0
90021dba:	7823      	ldrb	r3, [r4, #0]
90021dbc:	f3bf 8f5b 	dmb	ish
90021dc0:	07da      	lsls	r2, r3, #31
90021dc2:	d40b      	bmi.n	90021ddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021dc4:	4620      	mov	r0, r4
90021dc6:	f008 f9bf 	bl	9002a148 <__cxa_guard_acquire>
90021dca:	b138      	cbz	r0, 90021ddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021dcc:	4620      	mov	r0, r4
90021dce:	f008 f9c7 	bl	9002a160 <__cxa_guard_release>
90021dd2:	4a0f      	ldr	r2, [pc, #60]	@ (90021e10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021dd4:	490f      	ldr	r1, [pc, #60]	@ (90021e14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90021dd6:	4810      	ldr	r0, [pc, #64]	@ (90021e18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021dd8:	f008 f9af 	bl	9002a13a <__aeabi_atexit>
90021ddc:	4c0f      	ldr	r4, [pc, #60]	@ (90021e1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021dde:	7823      	ldrb	r3, [r4, #0]
90021de0:	f3bf 8f5b 	dmb	ish
90021de4:	07db      	lsls	r3, r3, #31
90021de6:	d40b      	bmi.n	90021e00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021de8:	4620      	mov	r0, r4
90021dea:	f008 f9ad 	bl	9002a148 <__cxa_guard_acquire>
90021dee:	b138      	cbz	r0, 90021e00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021df0:	4620      	mov	r0, r4
90021df2:	f008 f9b5 	bl	9002a160 <__cxa_guard_release>
90021df6:	4a06      	ldr	r2, [pc, #24]	@ (90021e10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021df8:	4909      	ldr	r1, [pc, #36]	@ (90021e20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021dfa:	480a      	ldr	r0, [pc, #40]	@ (90021e24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021dfc:	f008 f99d 	bl	9002a13a <__aeabi_atexit>
90021e00:	4b05      	ldr	r3, [pc, #20]	@ (90021e18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021e02:	65eb      	str	r3, [r5, #92]	@ 0x5c
90021e04:	4b07      	ldr	r3, [pc, #28]	@ (90021e24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021e06:	662b      	str	r3, [r5, #96]	@ 0x60
90021e08:	bd38      	pop	{r3, r4, r5, pc}
90021e0a:	bf00      	nop
90021e0c:	24021e18 	.word	0x24021e18
90021e10:	24000000 	.word	0x24000000
90021e14:	9001d925 	.word	0x9001d925
90021e18:	240000a4 	.word	0x240000a4
90021e1c:	24021e1c 	.word	0x24021e1c
90021e20:	9001d923 	.word	0x9001d923
90021e24:	240000a8 	.word	0x240000a8

90021e28 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021e28:	b510      	push	{r4, lr}
90021e2a:	4604      	mov	r4, r0
90021e2c:	f7ff ff88 	bl	90021d40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90021e30:	4620      	mov	r0, r4
90021e32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021e36:	f7ff bfbd 	b.w	90021db4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021e3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021e3c:	b538      	push	{r3, r4, r5, lr}
90021e3e:	4c15      	ldr	r4, [pc, #84]	@ (90021e94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90021e40:	4605      	mov	r5, r0
90021e42:	7823      	ldrb	r3, [r4, #0]
90021e44:	f3bf 8f5b 	dmb	ish
90021e48:	07da      	lsls	r2, r3, #31
90021e4a:	d40b      	bmi.n	90021e64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021e4c:	4620      	mov	r0, r4
90021e4e:	f008 f97b 	bl	9002a148 <__cxa_guard_acquire>
90021e52:	b138      	cbz	r0, 90021e64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021e54:	4620      	mov	r0, r4
90021e56:	f008 f983 	bl	9002a160 <__cxa_guard_release>
90021e5a:	4a0f      	ldr	r2, [pc, #60]	@ (90021e98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021e5c:	490f      	ldr	r1, [pc, #60]	@ (90021e9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90021e5e:	4810      	ldr	r0, [pc, #64]	@ (90021ea0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021e60:	f008 f96b 	bl	9002a13a <__aeabi_atexit>
90021e64:	4c0f      	ldr	r4, [pc, #60]	@ (90021ea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021e66:	7823      	ldrb	r3, [r4, #0]
90021e68:	f3bf 8f5b 	dmb	ish
90021e6c:	07db      	lsls	r3, r3, #31
90021e6e:	d40b      	bmi.n	90021e88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021e70:	4620      	mov	r0, r4
90021e72:	f008 f969 	bl	9002a148 <__cxa_guard_acquire>
90021e76:	b138      	cbz	r0, 90021e88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021e78:	4620      	mov	r0, r4
90021e7a:	f008 f971 	bl	9002a160 <__cxa_guard_release>
90021e7e:	4a06      	ldr	r2, [pc, #24]	@ (90021e98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021e80:	4909      	ldr	r1, [pc, #36]	@ (90021ea8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90021e82:	480a      	ldr	r0, [pc, #40]	@ (90021eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021e84:	f008 f959 	bl	9002a13a <__aeabi_atexit>
90021e88:	4b05      	ldr	r3, [pc, #20]	@ (90021ea0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021e8a:	676b      	str	r3, [r5, #116]	@ 0x74
90021e8c:	4b07      	ldr	r3, [pc, #28]	@ (90021eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021e8e:	67ab      	str	r3, [r5, #120]	@ 0x78
90021e90:	bd38      	pop	{r3, r4, r5, pc}
90021e92:	bf00      	nop
90021e94:	24021e10 	.word	0x24021e10
90021e98:	24000000 	.word	0x24000000
90021e9c:	9001d919 	.word	0x9001d919
90021ea0:	2400009c 	.word	0x2400009c
90021ea4:	24021e14 	.word	0x24021e14
90021ea8:	9001d917 	.word	0x9001d917
90021eac:	240000a0 	.word	0x240000a0

90021eb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90021eb0:	b538      	push	{r3, r4, r5, lr}
90021eb2:	4c15      	ldr	r4, [pc, #84]	@ (90021f08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90021eb4:	4605      	mov	r5, r0
90021eb6:	7823      	ldrb	r3, [r4, #0]
90021eb8:	f3bf 8f5b 	dmb	ish
90021ebc:	07da      	lsls	r2, r3, #31
90021ebe:	d40b      	bmi.n	90021ed8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021ec0:	4620      	mov	r0, r4
90021ec2:	f008 f941 	bl	9002a148 <__cxa_guard_acquire>
90021ec6:	b138      	cbz	r0, 90021ed8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021ec8:	4620      	mov	r0, r4
90021eca:	f008 f949 	bl	9002a160 <__cxa_guard_release>
90021ece:	4a0f      	ldr	r2, [pc, #60]	@ (90021f0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021ed0:	490f      	ldr	r1, [pc, #60]	@ (90021f10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90021ed2:	4810      	ldr	r0, [pc, #64]	@ (90021f14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021ed4:	f008 f931 	bl	9002a13a <__aeabi_atexit>
90021ed8:	4c0f      	ldr	r4, [pc, #60]	@ (90021f18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021eda:	7823      	ldrb	r3, [r4, #0]
90021edc:	f3bf 8f5b 	dmb	ish
90021ee0:	07db      	lsls	r3, r3, #31
90021ee2:	d40b      	bmi.n	90021efc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021ee4:	4620      	mov	r0, r4
90021ee6:	f008 f92f 	bl	9002a148 <__cxa_guard_acquire>
90021eea:	b138      	cbz	r0, 90021efc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021eec:	4620      	mov	r0, r4
90021eee:	f008 f937 	bl	9002a160 <__cxa_guard_release>
90021ef2:	4a06      	ldr	r2, [pc, #24]	@ (90021f0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021ef4:	4909      	ldr	r1, [pc, #36]	@ (90021f1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90021ef6:	480a      	ldr	r0, [pc, #40]	@ (90021f20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021ef8:	f008 f91f 	bl	9002a13a <__aeabi_atexit>
90021efc:	4b05      	ldr	r3, [pc, #20]	@ (90021f14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021efe:	66eb      	str	r3, [r5, #108]	@ 0x6c
90021f00:	4b07      	ldr	r3, [pc, #28]	@ (90021f20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021f02:	672b      	str	r3, [r5, #112]	@ 0x70
90021f04:	bd38      	pop	{r3, r4, r5, pc}
90021f06:	bf00      	nop
90021f08:	24021e08 	.word	0x24021e08
90021f0c:	24000000 	.word	0x24000000
90021f10:	9001d91d 	.word	0x9001d91d
90021f14:	24000094 	.word	0x24000094
90021f18:	24021e0c 	.word	0x24021e0c
90021f1c:	9001d91b 	.word	0x9001d91b
90021f20:	24000098 	.word	0x24000098

90021f24 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021f24:	b510      	push	{r4, lr}
90021f26:	4604      	mov	r4, r0
90021f28:	f7ff ff88 	bl	90021e3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021f2c:	4620      	mov	r0, r4
90021f2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021f32:	f7ff bfbd 	b.w	90021eb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021f36 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021f36:	b510      	push	{r4, lr}
90021f38:	4604      	mov	r4, r0
90021f3a:	f7ff fff3 	bl	90021f24 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90021f3e:	4620      	mov	r0, r4
90021f40:	f7ff ff72 	bl	90021e28 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021f44:	4620      	mov	r0, r4
90021f46:	f7ff fdf9 	bl	90021b3c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021f4a:	4620      	mov	r0, r4
90021f4c:	f7ff fcfa 	bl	90021944 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90021f50:	4620      	mov	r0, r4
90021f52:	f7ff fd75 	bl	90021a40 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021f56:	4620      	mov	r0, r4
90021f58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021f5c:	f7ff bee0 	b.w	90021d20 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90021f60 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90021f60:	b538      	push	{r3, r4, r5, lr}
90021f62:	4c0b      	ldr	r4, [pc, #44]	@ (90021f90 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021f64:	4605      	mov	r5, r0
90021f66:	7823      	ldrb	r3, [r4, #0]
90021f68:	f3bf 8f5b 	dmb	ish
90021f6c:	07db      	lsls	r3, r3, #31
90021f6e:	d40b      	bmi.n	90021f88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021f70:	4620      	mov	r0, r4
90021f72:	f008 f8e9 	bl	9002a148 <__cxa_guard_acquire>
90021f76:	b138      	cbz	r0, 90021f88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021f78:	4620      	mov	r0, r4
90021f7a:	f008 f8f1 	bl	9002a160 <__cxa_guard_release>
90021f7e:	4a05      	ldr	r2, [pc, #20]	@ (90021f94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90021f80:	4905      	ldr	r1, [pc, #20]	@ (90021f98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90021f82:	4806      	ldr	r0, [pc, #24]	@ (90021f9c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021f84:	f008 f8d9 	bl	9002a13a <__aeabi_atexit>
90021f88:	4b04      	ldr	r3, [pc, #16]	@ (90021f9c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021f8a:	67eb      	str	r3, [r5, #124]	@ 0x7c
90021f8c:	bd38      	pop	{r3, r4, r5, pc}
90021f8e:	bf00      	nop
90021f90:	24021dfc 	.word	0x24021dfc
90021f94:	24000000 	.word	0x24000000
90021f98:	9001d915 	.word	0x9001d915
90021f9c:	2400008c 	.word	0x2400008c

90021fa0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90021fa0:	b538      	push	{r3, r4, r5, lr}
90021fa2:	4c0b      	ldr	r4, [pc, #44]	@ (90021fd0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021fa4:	4605      	mov	r5, r0
90021fa6:	7823      	ldrb	r3, [r4, #0]
90021fa8:	f3bf 8f5b 	dmb	ish
90021fac:	07db      	lsls	r3, r3, #31
90021fae:	d40b      	bmi.n	90021fc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021fb0:	4620      	mov	r0, r4
90021fb2:	f008 f8c9 	bl	9002a148 <__cxa_guard_acquire>
90021fb6:	b138      	cbz	r0, 90021fc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021fb8:	4620      	mov	r0, r4
90021fba:	f008 f8d1 	bl	9002a160 <__cxa_guard_release>
90021fbe:	4a05      	ldr	r2, [pc, #20]	@ (90021fd4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90021fc0:	4905      	ldr	r1, [pc, #20]	@ (90021fd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90021fc2:	4806      	ldr	r0, [pc, #24]	@ (90021fdc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021fc4:	f008 f8b9 	bl	9002a13a <__aeabi_atexit>
90021fc8:	4b04      	ldr	r3, [pc, #16]	@ (90021fdc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021fca:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90021fce:	bd38      	pop	{r3, r4, r5, pc}
90021fd0:	24021e00 	.word	0x24021e00
90021fd4:	24000000 	.word	0x24000000
90021fd8:	9001d913 	.word	0x9001d913
90021fdc:	24000090 	.word	0x24000090

90021fe0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021fe0:	b570      	push	{r4, r5, r6, lr}
90021fe2:	4d0d      	ldr	r5, [pc, #52]	@ (90022018 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021fe4:	4606      	mov	r6, r0
90021fe6:	4c0d      	ldr	r4, [pc, #52]	@ (9002201c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021fe8:	782b      	ldrb	r3, [r5, #0]
90021fea:	f3bf 8f5b 	dmb	ish
90021fee:	f013 0f01 	tst.w	r3, #1
90021ff2:	d10d      	bne.n	90022010 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021ff4:	4628      	mov	r0, r5
90021ff6:	f008 f8a7 	bl	9002a148 <__cxa_guard_acquire>
90021ffa:	b148      	cbz	r0, 90022010 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021ffc:	4b08      	ldr	r3, [pc, #32]	@ (90022020 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021ffe:	4628      	mov	r0, r5
90022000:	6023      	str	r3, [r4, #0]
90022002:	f008 f8ad 	bl	9002a160 <__cxa_guard_release>
90022006:	4a07      	ldr	r2, [pc, #28]	@ (90022024 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90022008:	4620      	mov	r0, r4
9002200a:	4907      	ldr	r1, [pc, #28]	@ (90022028 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9002200c:	f008 f895 	bl	9002a13a <__aeabi_atexit>
90022010:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90022014:	bd70      	pop	{r4, r5, r6, pc}
90022016:	bf00      	nop
90022018:	24021e04 	.word	0x24021e04
9002201c:	24021f7c 	.word	0x24021f7c
90022020:	9002eaf8 	.word	0x9002eaf8
90022024:	24000000 	.word	0x24000000
90022028:	9001d911 	.word	0x9001d911

9002202c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9002202c:	b510      	push	{r4, lr}
9002202e:	4604      	mov	r4, r0
90022030:	f7ff ff96 	bl	90021f60 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90022034:	4620      	mov	r0, r4
90022036:	f7ff ffb3 	bl	90021fa0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9002203a:	4620      	mov	r0, r4
9002203c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022040:	f7ff bfce 	b.w	90021fe0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90022044 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90022044:	b570      	push	{r4, r5, r6, lr}
90022046:	4d0d      	ldr	r5, [pc, #52]	@ (9002207c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90022048:	4606      	mov	r6, r0
9002204a:	4c0d      	ldr	r4, [pc, #52]	@ (90022080 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
9002204c:	782b      	ldrb	r3, [r5, #0]
9002204e:	f3bf 8f5b 	dmb	ish
90022052:	f013 0f01 	tst.w	r3, #1
90022056:	d10d      	bne.n	90022074 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90022058:	4628      	mov	r0, r5
9002205a:	f008 f875 	bl	9002a148 <__cxa_guard_acquire>
9002205e:	b148      	cbz	r0, 90022074 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90022060:	4b08      	ldr	r3, [pc, #32]	@ (90022084 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90022062:	4628      	mov	r0, r5
90022064:	6023      	str	r3, [r4, #0]
90022066:	f008 f87b 	bl	9002a160 <__cxa_guard_release>
9002206a:	4a07      	ldr	r2, [pc, #28]	@ (90022088 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
9002206c:	4620      	mov	r0, r4
9002206e:	4907      	ldr	r1, [pc, #28]	@ (9002208c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90022070:	f008 f863 	bl	9002a13a <__aeabi_atexit>
90022074:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90022078:	bd70      	pop	{r4, r5, r6, pc}
9002207a:	bf00      	nop
9002207c:	24021df8 	.word	0x24021df8
90022080:	24021e78 	.word	0x24021e78
90022084:	9002eb14 	.word	0x9002eb14
90022088:	24000000 	.word	0x24000000
9002208c:	9001d90f 	.word	0x9001d90f

90022090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90022090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022094:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90022098:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
9002209c:	2d00      	cmp	r5, #0
9002209e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
900220a2:	fb05 4c0e 	mla	ip, r5, lr, r4
900220a6:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
900220aa:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
900220ae:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
900220b2:	eb02 0a0c 	add.w	sl, r2, ip
900220b6:	8808      	ldrh	r0, [r1, #0]
900220b8:	f2c0 80b0 	blt.w	9002221c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900220bc:	45ab      	cmp	fp, r5
900220be:	f340 80ad 	ble.w	9002221c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900220c2:	2c00      	cmp	r4, #0
900220c4:	f2c0 80a8 	blt.w	90022218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900220c8:	45a6      	cmp	lr, r4
900220ca:	f340 80a5 	ble.w	90022218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900220ce:	f812 200c 	ldrb.w	r2, [r2, ip]
900220d2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
900220d6:	1c62      	adds	r2, r4, #1
900220d8:	f100 80a3 	bmi.w	90022222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900220dc:	4596      	cmp	lr, r2
900220de:	f340 80a0 	ble.w	90022222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900220e2:	f1b9 0f00 	cmp.w	r9, #0
900220e6:	f000 809c 	beq.w	90022222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900220ea:	f89a 2001 	ldrb.w	r2, [sl, #1]
900220ee:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900220f2:	3501      	adds	r5, #1
900220f4:	f100 8099 	bmi.w	9002222a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900220f8:	45ab      	cmp	fp, r5
900220fa:	f340 8096 	ble.w	9002222a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900220fe:	2f00      	cmp	r7, #0
90022100:	f000 8093 	beq.w	9002222a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022104:	2c00      	cmp	r4, #0
90022106:	f2c0 808e 	blt.w	90022226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9002210a:	45a6      	cmp	lr, r4
9002210c:	f340 808b 	ble.w	90022226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022110:	f81a 200e 	ldrb.w	r2, [sl, lr]
90022114:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90022118:	3401      	adds	r4, #1
9002211a:	f100 8089 	bmi.w	90022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002211e:	45a6      	cmp	lr, r4
90022120:	f340 8086 	ble.w	90022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022124:	f1b9 0f00 	cmp.w	r9, #0
90022128:	f000 8082 	beq.w	90022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002212c:	44d6      	add	lr, sl
9002212e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022132:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90022136:	ea4f 4408 	mov.w	r4, r8, lsl #16
9002213a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9002213e:	fb19 fe07 	smulbb	lr, r9, r7
90022142:	f1c7 0210 	rsb	r2, r7, #16
90022146:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002214a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002214e:	eba2 0209 	sub.w	r2, r2, r9
90022152:	ea44 0808 	orr.w	r8, r4, r8
90022156:	ea4f 440c 	mov.w	r4, ip, lsl #16
9002215a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002215e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022162:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022166:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9002216a:	ea44 0c0c 	orr.w	ip, r4, ip
9002216e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90022172:	fb04 f40c 	mul.w	r4, r4, ip
90022176:	fb02 4808 	mla	r8, r2, r8, r4
9002217a:	041a      	lsls	r2, r3, #16
9002217c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022180:	b2b4      	uxth	r4, r6
90022182:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022186:	43f6      	mvns	r6, r6
90022188:	4313      	orrs	r3, r2
9002218a:	042a      	lsls	r2, r5, #16
9002218c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022190:	b2f6      	uxtb	r6, r6
90022192:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022196:	fb0e 8303 	mla	r3, lr, r3, r8
9002219a:	432a      	orrs	r2, r5
9002219c:	fb07 3202 	mla	r2, r7, r2, r3
900221a0:	10c7      	asrs	r7, r0, #3
900221a2:	0d53      	lsrs	r3, r2, #21
900221a4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900221a8:	0952      	lsrs	r2, r2, #5
900221aa:	fb17 f706 	smulbb	r7, r7, r6
900221ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900221b2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900221b6:	431a      	orrs	r2, r3
900221b8:	b293      	uxth	r3, r2
900221ba:	1202      	asrs	r2, r0, #8
900221bc:	121d      	asrs	r5, r3, #8
900221be:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900221c2:	00c0      	lsls	r0, r0, #3
900221c4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900221c8:	fb12 f206 	smulbb	r2, r2, r6
900221cc:	b2c0      	uxtb	r0, r0
900221ce:	fb05 2504 	mla	r5, r5, r4, r2
900221d2:	10da      	asrs	r2, r3, #3
900221d4:	fb10 f006 	smulbb	r0, r0, r6
900221d8:	00db      	lsls	r3, r3, #3
900221da:	b2ad      	uxth	r5, r5
900221dc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900221e0:	b2db      	uxtb	r3, r3
900221e2:	fb02 7204 	mla	r2, r2, r4, r7
900221e6:	fb03 0004 	mla	r0, r3, r4, r0
900221ea:	1c6b      	adds	r3, r5, #1
900221ec:	b292      	uxth	r2, r2
900221ee:	b280      	uxth	r0, r0
900221f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900221f4:	1c43      	adds	r3, r0, #1
900221f6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900221fa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900221fe:	1c50      	adds	r0, r2, #1
90022200:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022204:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022208:	0952      	lsrs	r2, r2, #5
9002220a:	432b      	orrs	r3, r5
9002220c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022210:	4313      	orrs	r3, r2
90022212:	800b      	strh	r3, [r1, #0]
90022214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022218:	4680      	mov	r8, r0
9002221a:	e75c      	b.n	900220d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9002221c:	4684      	mov	ip, r0
9002221e:	4680      	mov	r8, r0
90022220:	e767      	b.n	900220f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022222:	4684      	mov	ip, r0
90022224:	e765      	b.n	900220f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022226:	4605      	mov	r5, r0
90022228:	e776      	b.n	90022118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9002222a:	4603      	mov	r3, r0
9002222c:	4605      	mov	r5, r0
9002222e:	e782      	b.n	90022136 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90022230:	4603      	mov	r3, r0
90022232:	e780      	b.n	90022136 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90022234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022238:	b099      	sub	sp, #100	@ 0x64
9002223a:	9215      	str	r2, [sp, #84]	@ 0x54
9002223c:	9309      	str	r3, [sp, #36]	@ 0x24
9002223e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90022240:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90022244:	9016      	str	r0, [sp, #88]	@ 0x58
90022246:	930d      	str	r3, [sp, #52]	@ 0x34
90022248:	6850      	ldr	r0, [r2, #4]
9002224a:	910c      	str	r1, [sp, #48]	@ 0x30
9002224c:	6812      	ldr	r2, [r2, #0]
9002224e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90022252:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90022256:	fb00 1303 	mla	r3, r0, r3, r1
9002225a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9002225e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022260:	681b      	ldr	r3, [r3, #0]
90022262:	930b      	str	r3, [sp, #44]	@ 0x2c
90022264:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022266:	685e      	ldr	r6, [r3, #4]
90022268:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002226a:	3604      	adds	r6, #4
9002226c:	43db      	mvns	r3, r3
9002226e:	b2db      	uxtb	r3, r3
90022270:	930a      	str	r3, [sp, #40]	@ 0x28
90022272:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022274:	2b00      	cmp	r3, #0
90022276:	dc03      	bgt.n	90022280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90022278:	9b15      	ldr	r3, [sp, #84]	@ 0x54
9002227a:	2b00      	cmp	r3, #0
9002227c:	f340 8225 	ble.w	900226ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90022280:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022282:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022286:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002228a:	1e48      	subs	r0, r1, #1
9002228c:	1e57      	subs	r7, r2, #1
9002228e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022290:	2b00      	cmp	r3, #0
90022292:	f340 80e3 	ble.w	9002245c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90022296:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9002229a:	ea4f 4325 	mov.w	r3, r5, asr #16
9002229e:	d406      	bmi.n	900222ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900222a0:	4584      	cmp	ip, r0
900222a2:	da04      	bge.n	900222ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900222a4:	2b00      	cmp	r3, #0
900222a6:	db02      	blt.n	900222ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900222a8:	42bb      	cmp	r3, r7
900222aa:	f2c0 80d8 	blt.w	9002245e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900222ae:	f11c 0c01 	adds.w	ip, ip, #1
900222b2:	f100 80c9 	bmi.w	90022448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900222b6:	4561      	cmp	r1, ip
900222b8:	f2c0 80c6 	blt.w	90022448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900222bc:	3301      	adds	r3, #1
900222be:	f100 80c3 	bmi.w	90022448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900222c2:	429a      	cmp	r2, r3
900222c4:	f2c0 80c0 	blt.w	90022448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900222c8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900222cc:	4647      	mov	r7, r8
900222ce:	f1bb 0f00 	cmp.w	fp, #0
900222d2:	f340 80e3 	ble.w	9002249c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900222d6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900222d8:	ea4f 4c25 	mov.w	ip, r5, asr #16
900222dc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900222de:	f3ca 3003 	ubfx	r0, sl, #12, #4
900222e2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900222e6:	ea5f 422a 	movs.w	r2, sl, asr #16
900222ea:	f3c5 3103 	ubfx	r1, r5, #12, #4
900222ee:	689b      	ldr	r3, [r3, #8]
900222f0:	f100 8121 	bmi.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900222f4:	f103 39ff 	add.w	r9, r3, #4294967295
900222f8:	454a      	cmp	r2, r9
900222fa:	f280 811c 	bge.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900222fe:	f1bc 0f00 	cmp.w	ip, #0
90022302:	f2c0 8118 	blt.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022306:	f10e 39ff 	add.w	r9, lr, #4294967295
9002230a:	45cc      	cmp	ip, r9
9002230c:	f280 8113 	bge.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022310:	b21b      	sxth	r3, r3
90022312:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022314:	fb0c 2203 	mla	r2, ip, r3, r2
90022318:	eb04 0902 	add.w	r9, r4, r2
9002231c:	5ca2      	ldrb	r2, [r4, r2]
9002231e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90022322:	2800      	cmp	r0, #0
90022324:	f000 80fe 	beq.w	90022524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90022328:	f899 2001 	ldrb.w	r2, [r9, #1]
9002232c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90022330:	9211      	str	r2, [sp, #68]	@ 0x44
90022332:	b151      	cbz	r1, 9002234a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022334:	eb09 0203 	add.w	r2, r9, r3
90022338:	f819 3003 	ldrb.w	r3, [r9, r3]
9002233c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022340:	930f      	str	r3, [sp, #60]	@ 0x3c
90022342:	7853      	ldrb	r3, [r2, #1]
90022344:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022348:	9312      	str	r3, [sp, #72]	@ 0x48
9002234a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002234c:	fb10 f201 	smulbb	r2, r0, r1
90022350:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022352:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022356:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002235a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9002235e:	10d2      	asrs	r2, r2, #3
90022360:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022364:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90022368:	ea4c 0c03 	orr.w	ip, ip, r3
9002236c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002236e:	041b      	lsls	r3, r3, #16
90022370:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022374:	4323      	orrs	r3, r4
90022376:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022378:	4353      	muls	r3, r2
9002237a:	fb09 330c 	mla	r3, r9, ip, r3
9002237e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90022382:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022386:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002238a:	ea4c 0e0e 	orr.w	lr, ip, lr
9002238e:	f1c1 0c10 	rsb	ip, r1, #16
90022392:	ebac 0c00 	sub.w	ip, ip, r0
90022396:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002239a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002239e:	fb0c 3c0e 	mla	ip, ip, lr, r3
900223a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900223a4:	0418      	lsls	r0, r3, #16
900223a6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900223aa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900223ae:	4318      	orrs	r0, r3
900223b0:	fb02 c200 	mla	r2, r2, r0, ip
900223b4:	8838      	ldrh	r0, [r7, #0]
900223b6:	0d53      	lsrs	r3, r2, #21
900223b8:	0952      	lsrs	r2, r2, #5
900223ba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900223be:	1201      	asrs	r1, r0, #8
900223c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900223c4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900223c8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900223cc:	00c0      	lsls	r0, r0, #3
900223ce:	431a      	orrs	r2, r3
900223d0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900223d4:	fb11 f104 	smulbb	r1, r1, r4
900223d8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900223dc:	b292      	uxth	r2, r2
900223de:	fb1e fe04 	smulbb	lr, lr, r4
900223e2:	b2c0      	uxtb	r0, r0
900223e4:	ea4f 2c22 	mov.w	ip, r2, asr #8
900223e8:	fb10 f004 	smulbb	r0, r0, r4
900223ec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900223f0:	fb0c 1c03 	mla	ip, ip, r3, r1
900223f4:	10d1      	asrs	r1, r2, #3
900223f6:	00d2      	lsls	r2, r2, #3
900223f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900223fc:	fa1f fc8c 	uxth.w	ip, ip
90022400:	b2d2      	uxtb	r2, r2
90022402:	fb01 e103 	mla	r1, r1, r3, lr
90022406:	fb02 0303 	mla	r3, r2, r3, r0
9002240a:	b289      	uxth	r1, r1
9002240c:	b29a      	uxth	r2, r3
9002240e:	f10c 0301 	add.w	r3, ip, #1
90022412:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022416:	1c53      	adds	r3, r2, #1
90022418:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002241c:	1c4a      	adds	r2, r1, #1
9002241e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90022422:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022426:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002242a:	0949      	lsrs	r1, r1, #5
9002242c:	ea43 030c 	orr.w	r3, r3, ip
90022430:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022434:	430b      	orrs	r3, r1
90022436:	803b      	strh	r3, [r7, #0]
90022438:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002243a:	3702      	adds	r7, #2
9002243c:	f10b 3bff 	add.w	fp, fp, #4294967295
90022440:	449a      	add	sl, r3
90022442:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022444:	441d      	add	r5, r3
90022446:	e742      	b.n	900222ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022448:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002244a:	f108 0802 	add.w	r8, r8, #2
9002244e:	449a      	add	sl, r3
90022450:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022452:	441d      	add	r5, r3
90022454:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022456:	3b01      	subs	r3, #1
90022458:	9309      	str	r3, [sp, #36]	@ 0x24
9002245a:	e718      	b.n	9002228e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9002245c:	d023      	beq.n	900224a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002245e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022460:	9825      	ldr	r0, [sp, #148]	@ 0x94
90022462:	3b01      	subs	r3, #1
90022464:	fb00 a003 	mla	r0, r0, r3, sl
90022468:	1400      	asrs	r0, r0, #16
9002246a:	f53f af2d 	bmi.w	900222c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002246e:	3901      	subs	r1, #1
90022470:	4288      	cmp	r0, r1
90022472:	f6bf af29 	bge.w	900222c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022476:	9926      	ldr	r1, [sp, #152]	@ 0x98
90022478:	fb01 5303 	mla	r3, r1, r3, r5
9002247c:	141b      	asrs	r3, r3, #16
9002247e:	f53f af23 	bmi.w	900222c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022482:	3a01      	subs	r2, #1
90022484:	4293      	cmp	r3, r2
90022486:	f6bf af1f 	bge.w	900222c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002248a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9002248e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90022492:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90022496:	f1be 0f00 	cmp.w	lr, #0
9002249a:	dc6c      	bgt.n	90022576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002249c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002249e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900224a2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900224a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900224a8:	2b00      	cmp	r3, #0
900224aa:	f340 810e 	ble.w	900226ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900224ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900224b2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900224b4:	ee30 0a04 	vadd.f32	s0, s0, s8
900224b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900224bc:	eef0 6a62 	vmov.f32	s13, s5
900224c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900224c4:	ee31 1a05 	vadd.f32	s2, s2, s10
900224c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900224cc:	ee16 aa90 	vmov	sl, s13
900224d0:	eef0 6a43 	vmov.f32	s13, s6
900224d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900224d8:	ee16 5a90 	vmov	r5, s13
900224dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
900224e0:	ee61 7a27 	vmul.f32	s15, s2, s15
900224e4:	ee77 2a62 	vsub.f32	s5, s14, s5
900224e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900224ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900224f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900224f4:	ee12 2a90 	vmov	r2, s5
900224f8:	eef0 2a47 	vmov.f32	s5, s14
900224fc:	fb92 f3f3 	sdiv	r3, r2, r3
90022500:	ee13 2a10 	vmov	r2, s6
90022504:	9325      	str	r3, [sp, #148]	@ 0x94
90022506:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022508:	eeb0 3a67 	vmov.f32	s6, s15
9002250c:	fb92 f3f3 	sdiv	r3, r2, r3
90022510:	9326      	str	r3, [sp, #152]	@ 0x98
90022512:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022514:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90022516:	3b01      	subs	r3, #1
90022518:	930c      	str	r3, [sp, #48]	@ 0x30
9002251a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002251c:	bf08      	it	eq
9002251e:	4613      	moveq	r3, r2
90022520:	9309      	str	r3, [sp, #36]	@ 0x24
90022522:	e6a6      	b.n	90022272 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90022524:	2900      	cmp	r1, #0
90022526:	f43f af10 	beq.w	9002234a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002252a:	f819 3003 	ldrb.w	r3, [r9, r3]
9002252e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022532:	930f      	str	r3, [sp, #60]	@ 0x3c
90022534:	e709      	b.n	9002234a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022536:	f112 0901 	adds.w	r9, r2, #1
9002253a:	f53f af7d 	bmi.w	90022438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002253e:	454b      	cmp	r3, r9
90022540:	f6ff af7a 	blt.w	90022438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022544:	f11c 0901 	adds.w	r9, ip, #1
90022548:	f53f af76 	bmi.w	90022438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002254c:	45ce      	cmp	lr, r9
9002254e:	f6ff af73 	blt.w	90022438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022552:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022554:	b21b      	sxth	r3, r3
90022556:	9202      	str	r2, [sp, #8]
90022558:	fa0f f28e 	sxth.w	r2, lr
9002255c:	9300      	str	r3, [sp, #0]
9002255e:	4633      	mov	r3, r6
90022560:	9201      	str	r2, [sp, #4]
90022562:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90022564:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022568:	e9cd c003 	strd	ip, r0, [sp, #12]
9002256c:	4639      	mov	r1, r7
9002256e:	9816      	ldr	r0, [sp, #88]	@ 0x58
90022570:	f7ff fd8e 	bl	90022090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90022574:	e760      	b.n	90022438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022576:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022578:	ea4f 422a 	mov.w	r2, sl, asr #16
9002257c:	1429      	asrs	r1, r5, #16
9002257e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022580:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022584:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90022588:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002258c:	fb03 2101 	mla	r1, r3, r1, r2
90022590:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90022592:	440a      	add	r2, r1
90022594:	5c61      	ldrb	r1, [r4, r1]
90022596:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9002259a:	f1bc 0f00 	cmp.w	ip, #0
9002259e:	f000 808c 	beq.w	900226ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900225a2:	7857      	ldrb	r7, [r2, #1]
900225a4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900225a8:	9413      	str	r4, [sp, #76]	@ 0x4c
900225aa:	b140      	cbz	r0, 900225be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900225ac:	18d7      	adds	r7, r2, r3
900225ae:	5cd3      	ldrb	r3, [r2, r3]
900225b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900225b4:	9310      	str	r3, [sp, #64]	@ 0x40
900225b6:	787b      	ldrb	r3, [r7, #1]
900225b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900225bc:	9314      	str	r3, [sp, #80]	@ 0x50
900225be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900225c0:	fb1c f200 	smulbb	r2, ip, r0
900225c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900225c6:	f10e 3eff 	add.w	lr, lr, #4294967295
900225ca:	041f      	lsls	r7, r3, #16
900225cc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900225d0:	10d2      	asrs	r2, r2, #3
900225d2:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900225d6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
900225da:	431f      	orrs	r7, r3
900225dc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900225e0:	9317      	str	r3, [sp, #92]	@ 0x5c
900225e2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900225e4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900225e6:	041b      	lsls	r3, r3, #16
900225e8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900225ec:	ea43 030b 	orr.w	r3, r3, fp
900225f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900225f4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900225f8:	4353      	muls	r3, r2
900225fa:	fb04 3707 	mla	r7, r4, r7, r3
900225fe:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90022602:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022604:	ea43 0b01 	orr.w	fp, r3, r1
90022608:	f1c0 0110 	rsb	r1, r0, #16
9002260c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002260e:	eba1 0c0c 	sub.w	ip, r1, ip
90022612:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022616:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002261a:	fb0c 770b 	mla	r7, ip, fp, r7
9002261e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022622:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90022626:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002262a:	ea4c 0c0b 	orr.w	ip, ip, fp
9002262e:	fb02 770c 	mla	r7, r2, ip, r7
90022632:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90022634:	0d79      	lsrs	r1, r7, #21
90022636:	8812      	ldrh	r2, [r2, #0]
90022638:	097f      	lsrs	r7, r7, #5
9002263a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002263e:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022642:	430f      	orrs	r7, r1
90022644:	1211      	asrs	r1, r2, #8
90022646:	b2bb      	uxth	r3, r7
90022648:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002264c:	10d7      	asrs	r7, r2, #3
9002264e:	fb11 f104 	smulbb	r1, r1, r4
90022652:	1218      	asrs	r0, r3, #8
90022654:	00d2      	lsls	r2, r2, #3
90022656:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002265a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002265e:	fb17 f704 	smulbb	r7, r7, r4
90022662:	b2d2      	uxtb	r2, r2
90022664:	fb00 1009 	mla	r0, r0, r9, r1
90022668:	10d9      	asrs	r1, r3, #3
9002266a:	fb12 f204 	smulbb	r2, r2, r4
9002266e:	00db      	lsls	r3, r3, #3
90022670:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022674:	b280      	uxth	r0, r0
90022676:	b2db      	uxtb	r3, r3
90022678:	fb01 7109 	mla	r1, r1, r9, r7
9002267c:	fb03 2309 	mla	r3, r3, r9, r2
90022680:	1c42      	adds	r2, r0, #1
90022682:	b289      	uxth	r1, r1
90022684:	b29b      	uxth	r3, r3
90022686:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002268a:	1c4f      	adds	r7, r1, #1
9002268c:	1c5a      	adds	r2, r3, #1
9002268e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90022692:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90022696:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002269a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002269c:	0949      	lsrs	r1, r1, #5
9002269e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900226a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900226a6:	4310      	orrs	r0, r2
900226a8:	4308      	orrs	r0, r1
900226aa:	f823 0b02 	strh.w	r0, [r3], #2
900226ae:	930e      	str	r3, [sp, #56]	@ 0x38
900226b0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900226b2:	449a      	add	sl, r3
900226b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900226b6:	441d      	add	r5, r3
900226b8:	e6ed      	b.n	90022496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900226ba:	2800      	cmp	r0, #0
900226bc:	f43f af7f 	beq.w	900225be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900226c0:	5cd3      	ldrb	r3, [r2, r3]
900226c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900226c6:	9310      	str	r3, [sp, #64]	@ 0x40
900226c8:	e779      	b.n	900225be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900226ca:	b019      	add	sp, #100	@ 0x64
900226cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900226d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900226d4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
900226d8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900226dc:	f1b8 0f00 	cmp.w	r8, #0
900226e0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
900226e4:	fb08 470e 	mla	r7, r8, lr, r4
900226e8:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
900226ec:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900226f0:	eb02 0907 	add.w	r9, r2, r7
900226f4:	8808      	ldrh	r0, [r1, #0]
900226f6:	db67      	blt.n	900227c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900226f8:	45c2      	cmp	sl, r8
900226fa:	dd65      	ble.n	900227c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900226fc:	2c00      	cmp	r4, #0
900226fe:	db61      	blt.n	900227c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022700:	45a6      	cmp	lr, r4
90022702:	dd5f      	ble.n	900227c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022704:	5dd2      	ldrb	r2, [r2, r7]
90022706:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002270a:	1c62      	adds	r2, r4, #1
9002270c:	d45f      	bmi.n	900227ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002270e:	4596      	cmp	lr, r2
90022710:	dd5d      	ble.n	900227ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022712:	2d00      	cmp	r5, #0
90022714:	d05b      	beq.n	900227ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022716:	f899 2001 	ldrb.w	r2, [r9, #1]
9002271a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002271e:	f118 0801 	adds.w	r8, r8, #1
90022722:	d458      	bmi.n	900227d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022724:	45c2      	cmp	sl, r8
90022726:	dd56      	ble.n	900227d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022728:	2e00      	cmp	r6, #0
9002272a:	d054      	beq.n	900227d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002272c:	2c00      	cmp	r4, #0
9002272e:	db50      	blt.n	900227d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022730:	45a6      	cmp	lr, r4
90022732:	dd4e      	ble.n	900227d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022734:	f819 200e 	ldrb.w	r2, [r9, lr]
90022738:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9002273c:	3401      	adds	r4, #1
9002273e:	d407      	bmi.n	90022750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022740:	45a6      	cmp	lr, r4
90022742:	dd05      	ble.n	90022750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022744:	b125      	cbz	r5, 90022750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022746:	44ce      	add	lr, r9
90022748:	f89e 0001 	ldrb.w	r0, [lr, #1]
9002274c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90022750:	fb15 f406 	smulbb	r4, r5, r6
90022754:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022758:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002275c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022760:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022764:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022768:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002276c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022770:	ea43 0c0c 	orr.w	ip, r3, ip
90022774:	f1c6 0310 	rsb	r3, r6, #16
90022778:	ea4e 0707 	orr.w	r7, lr, r7
9002277c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022780:	1b5b      	subs	r3, r3, r5
90022782:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90022786:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002278a:	437d      	muls	r5, r7
9002278c:	fb03 5c0c 	mla	ip, r3, ip, r5
90022790:	0403      	lsls	r3, r0, #16
90022792:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022796:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002279a:	4318      	orrs	r0, r3
9002279c:	0413      	lsls	r3, r2, #16
9002279e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900227a2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900227a6:	fb04 c000 	mla	r0, r4, r0, ip
900227aa:	4313      	orrs	r3, r2
900227ac:	fb06 0003 	mla	r0, r6, r3, r0
900227b0:	0d43      	lsrs	r3, r0, #21
900227b2:	0940      	lsrs	r0, r0, #5
900227b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900227b8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900227bc:	4318      	orrs	r0, r3
900227be:	8008      	strh	r0, [r1, #0]
900227c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900227c4:	4684      	mov	ip, r0
900227c6:	e7a0      	b.n	9002270a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900227c8:	4607      	mov	r7, r0
900227ca:	4684      	mov	ip, r0
900227cc:	e7a7      	b.n	9002271e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900227ce:	4607      	mov	r7, r0
900227d0:	e7a5      	b.n	9002271e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900227d2:	4602      	mov	r2, r0
900227d4:	e7b2      	b.n	9002273c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900227d6:	4602      	mov	r2, r0
900227d8:	e7ba      	b.n	90022750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900227da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900227da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900227de:	b093      	sub	sp, #76	@ 0x4c
900227e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900227e4:	920f      	str	r2, [sp, #60]	@ 0x3c
900227e6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900227e8:	9010      	str	r0, [sp, #64]	@ 0x40
900227ea:	9108      	str	r1, [sp, #32]
900227ec:	6850      	ldr	r0, [r2, #4]
900227ee:	9306      	str	r3, [sp, #24]
900227f0:	6812      	ldr	r2, [r2, #0]
900227f2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900227f6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900227fa:	fb00 1303 	mla	r3, r0, r3, r1
900227fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90022802:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022804:	681b      	ldr	r3, [r3, #0]
90022806:	9307      	str	r3, [sp, #28]
90022808:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002280a:	685f      	ldr	r7, [r3, #4]
9002280c:	3704      	adds	r7, #4
9002280e:	9b08      	ldr	r3, [sp, #32]
90022810:	2b00      	cmp	r3, #0
90022812:	dc03      	bgt.n	9002281c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90022814:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022816:	2b00      	cmp	r3, #0
90022818:	f340 81b2 	ble.w	90022b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002281c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002281e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022822:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022826:	1e48      	subs	r0, r1, #1
90022828:	f102 3cff 	add.w	ip, r2, #4294967295
9002282c:	9b06      	ldr	r3, [sp, #24]
9002282e:	2b00      	cmp	r3, #0
90022830:	f340 80a9 	ble.w	90022986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022834:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022838:	ea4f 4326 	mov.w	r3, r6, asr #16
9002283c:	d406      	bmi.n	9002284c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002283e:	4586      	cmp	lr, r0
90022840:	da04      	bge.n	9002284c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022842:	2b00      	cmp	r3, #0
90022844:	db02      	blt.n	9002284c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022846:	4563      	cmp	r3, ip
90022848:	f2c0 809e 	blt.w	90022988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9002284c:	f11e 0e01 	adds.w	lr, lr, #1
90022850:	f100 808f 	bmi.w	90022972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022854:	4571      	cmp	r1, lr
90022856:	f2c0 808c 	blt.w	90022972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002285a:	3301      	adds	r3, #1
9002285c:	f100 8089 	bmi.w	90022972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022860:	429a      	cmp	r2, r3
90022862:	f2c0 8086 	blt.w	90022972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022866:	f8dd b018 	ldr.w	fp, [sp, #24]
9002286a:	46c8      	mov	r8, r9
9002286c:	f1bb 0f00 	cmp.w	fp, #0
90022870:	f340 80a6 	ble.w	900229c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90022874:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90022876:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002287a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002287c:	f3c4 3003 	ubfx	r0, r4, #12, #4
90022880:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90022884:	1422      	asrs	r2, r4, #16
90022886:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002288a:	689b      	ldr	r3, [r3, #8]
9002288c:	f100 80e3 	bmi.w	90022a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022890:	f103 3aff 	add.w	sl, r3, #4294967295
90022894:	4552      	cmp	r2, sl
90022896:	f280 80de 	bge.w	90022a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002289a:	f1bc 0f00 	cmp.w	ip, #0
9002289e:	f2c0 80da 	blt.w	90022a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900228a2:	f10e 3aff 	add.w	sl, lr, #4294967295
900228a6:	45d4      	cmp	ip, sl
900228a8:	f280 80d5 	bge.w	90022a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900228ac:	b21b      	sxth	r3, r3
900228ae:	9d07      	ldr	r5, [sp, #28]
900228b0:	fb0c 2203 	mla	r2, ip, r3, r2
900228b4:	eb05 0a02 	add.w	sl, r5, r2
900228b8:	5caa      	ldrb	r2, [r5, r2]
900228ba:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900228be:	2800      	cmp	r0, #0
900228c0:	f000 80c0 	beq.w	90022a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900228c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
900228c8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900228cc:	920b      	str	r2, [sp, #44]	@ 0x2c
900228ce:	b151      	cbz	r1, 900228e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900228d0:	eb0a 0203 	add.w	r2, sl, r3
900228d4:	f81a 3003 	ldrb.w	r3, [sl, r3]
900228d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900228dc:	9309      	str	r3, [sp, #36]	@ 0x24
900228de:	7853      	ldrb	r3, [r2, #1]
900228e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900228e4:	930c      	str	r3, [sp, #48]	@ 0x30
900228e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900228e8:	fb10 f201 	smulbb	r2, r0, r1
900228ec:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900228ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900228f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900228f6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900228fa:	10d2      	asrs	r2, r2, #3
900228fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022900:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90022904:	ea4c 0c03 	orr.w	ip, ip, r3
90022908:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002290a:	041b      	lsls	r3, r3, #16
9002290c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022910:	432b      	orrs	r3, r5
90022912:	4353      	muls	r3, r2
90022914:	fb0a 330c 	mla	r3, sl, ip, r3
90022918:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002291c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022920:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022924:	ea4c 0e0e 	orr.w	lr, ip, lr
90022928:	f1c1 0c10 	rsb	ip, r1, #16
9002292c:	ebac 0c00 	sub.w	ip, ip, r0
90022930:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022934:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90022938:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002293c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002293e:	0418      	lsls	r0, r3, #16
90022940:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022944:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022948:	4318      	orrs	r0, r3
9002294a:	fb02 c200 	mla	r2, r2, r0, ip
9002294e:	0d53      	lsrs	r3, r2, #21
90022950:	0952      	lsrs	r2, r2, #5
90022952:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022956:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002295a:	431a      	orrs	r2, r3
9002295c:	f8a8 2000 	strh.w	r2, [r8]
90022960:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022962:	f108 0802 	add.w	r8, r8, #2
90022966:	f10b 3bff 	add.w	fp, fp, #4294967295
9002296a:	441c      	add	r4, r3
9002296c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002296e:	441e      	add	r6, r3
90022970:	e77c      	b.n	9002286c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022972:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022974:	f109 0902 	add.w	r9, r9, #2
90022978:	441c      	add	r4, r3
9002297a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002297c:	441e      	add	r6, r3
9002297e:	9b06      	ldr	r3, [sp, #24]
90022980:	3b01      	subs	r3, #1
90022982:	9306      	str	r3, [sp, #24]
90022984:	e752      	b.n	9002282c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90022986:	d020      	beq.n	900229ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90022988:	9b06      	ldr	r3, [sp, #24]
9002298a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002298c:	3b01      	subs	r3, #1
9002298e:	fb00 4003 	mla	r0, r0, r3, r4
90022992:	1400      	asrs	r0, r0, #16
90022994:	f53f af67 	bmi.w	90022866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022998:	3901      	subs	r1, #1
9002299a:	4288      	cmp	r0, r1
9002299c:	f6bf af63 	bge.w	90022866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900229a0:	9920      	ldr	r1, [sp, #128]	@ 0x80
900229a2:	fb01 6303 	mla	r3, r1, r3, r6
900229a6:	141b      	asrs	r3, r3, #16
900229a8:	f53f af5d 	bmi.w	90022866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900229ac:	3a01      	subs	r2, #1
900229ae:	4293      	cmp	r3, r2
900229b0:	f6bf af59 	bge.w	90022866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900229b4:	f8dd 8018 	ldr.w	r8, [sp, #24]
900229b8:	46ca      	mov	sl, r9
900229ba:	f1b8 0f00 	cmp.w	r8, #0
900229be:	dc67      	bgt.n	90022a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900229c0:	9b06      	ldr	r3, [sp, #24]
900229c2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900229c6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900229ca:	9b08      	ldr	r3, [sp, #32]
900229cc:	2b00      	cmp	r3, #0
900229ce:	f340 80d7 	ble.w	90022b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900229d2:	ee30 0a04 	vadd.f32	s0, s0, s8
900229d6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900229d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900229dc:	eeb0 6a62 	vmov.f32	s12, s5
900229e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
900229e4:	ee31 1a05 	vadd.f32	s2, s2, s10
900229e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900229ec:	ee16 4a10 	vmov	r4, s12
900229f0:	eeb0 6a43 	vmov.f32	s12, s6
900229f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900229f8:	ee16 6a10 	vmov	r6, s12
900229fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022a00:	ee61 7a27 	vmul.f32	s15, s2, s15
90022a04:	ee77 2a62 	vsub.f32	s5, s14, s5
90022a08:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022a0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022a10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022a14:	ee12 2a90 	vmov	r2, s5
90022a18:	eef0 2a47 	vmov.f32	s5, s14
90022a1c:	fb92 f3f3 	sdiv	r3, r2, r3
90022a20:	ee13 2a10 	vmov	r2, s6
90022a24:	931f      	str	r3, [sp, #124]	@ 0x7c
90022a26:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022a28:	eeb0 3a67 	vmov.f32	s6, s15
90022a2c:	fb92 f3f3 	sdiv	r3, r2, r3
90022a30:	9320      	str	r3, [sp, #128]	@ 0x80
90022a32:	9b08      	ldr	r3, [sp, #32]
90022a34:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90022a36:	3b01      	subs	r3, #1
90022a38:	9308      	str	r3, [sp, #32]
90022a3a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022a3c:	bf08      	it	eq
90022a3e:	4613      	moveq	r3, r2
90022a40:	9306      	str	r3, [sp, #24]
90022a42:	e6e4      	b.n	9002280e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90022a44:	2900      	cmp	r1, #0
90022a46:	f43f af4e 	beq.w	900228e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022a4a:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022a4e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022a52:	9309      	str	r3, [sp, #36]	@ 0x24
90022a54:	e747      	b.n	900228e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022a56:	f112 0a01 	adds.w	sl, r2, #1
90022a5a:	d481      	bmi.n	90022960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022a5c:	4553      	cmp	r3, sl
90022a5e:	f6ff af7f 	blt.w	90022960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022a62:	f11c 0a01 	adds.w	sl, ip, #1
90022a66:	f53f af7b 	bmi.w	90022960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022a6a:	45d6      	cmp	lr, sl
90022a6c:	f6ff af78 	blt.w	90022960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022a70:	b21b      	sxth	r3, r3
90022a72:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90022a76:	fa0f f28e 	sxth.w	r2, lr
90022a7a:	9300      	str	r3, [sp, #0]
90022a7c:	463b      	mov	r3, r7
90022a7e:	9201      	str	r2, [sp, #4]
90022a80:	9a07      	ldr	r2, [sp, #28]
90022a82:	e9cd 0104 	strd	r0, r1, [sp, #16]
90022a86:	4641      	mov	r1, r8
90022a88:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022a8a:	f7ff fe21 	bl	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90022a8e:	e767      	b.n	90022960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022a90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022a92:	1422      	asrs	r2, r4, #16
90022a94:	1431      	asrs	r1, r6, #16
90022a96:	9d07      	ldr	r5, [sp, #28]
90022a98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022a9c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90022aa0:	f3c6 3003 	ubfx	r0, r6, #12, #4
90022aa4:	fb03 2101 	mla	r1, r3, r1, r2
90022aa8:	9a07      	ldr	r2, [sp, #28]
90022aaa:	440a      	add	r2, r1
90022aac:	5c69      	ldrb	r1, [r5, r1]
90022aae:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90022ab2:	f1be 0f00 	cmp.w	lr, #0
90022ab6:	d05c      	beq.n	90022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90022ab8:	f892 c001 	ldrb.w	ip, [r2, #1]
90022abc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90022ac0:	950d      	str	r5, [sp, #52]	@ 0x34
90022ac2:	b150      	cbz	r0, 90022ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022ac4:	eb02 0c03 	add.w	ip, r2, r3
90022ac8:	5cd3      	ldrb	r3, [r2, r3]
90022aca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022ace:	930a      	str	r3, [sp, #40]	@ 0x28
90022ad0:	f89c 3001 	ldrb.w	r3, [ip, #1]
90022ad4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022ad8:	930e      	str	r3, [sp, #56]	@ 0x38
90022ada:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022adc:	fb1e f200 	smulbb	r2, lr, r0
90022ae0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90022ae2:	f108 38ff 	add.w	r8, r8, #4294967295
90022ae6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022aea:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022aee:	10d2      	asrs	r2, r2, #3
90022af0:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
90022af4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022af8:	ea4c 0c03 	orr.w	ip, ip, r3
90022afc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90022b00:	9311      	str	r3, [sp, #68]	@ 0x44
90022b02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022b04:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90022b06:	041b      	lsls	r3, r3, #16
90022b08:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022b0c:	ea43 030b 	orr.w	r3, r3, fp
90022b10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022b14:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022b18:	4353      	muls	r3, r2
90022b1a:	fb05 3c0c 	mla	ip, r5, ip, r3
90022b1e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90022b22:	ea43 0b01 	orr.w	fp, r3, r1
90022b26:	f1c0 0110 	rsb	r1, r0, #16
90022b2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022b2c:	eba1 0e0e 	sub.w	lr, r1, lr
90022b30:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90022b34:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022b38:	fb0e cc0b 	mla	ip, lr, fp, ip
90022b3c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90022b40:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90022b44:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022b48:	ea4b 0e0e 	orr.w	lr, fp, lr
90022b4c:	fb02 cc0e 	mla	ip, r2, lr, ip
90022b50:	ea4f 535c 	mov.w	r3, ip, lsr #21
90022b54:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022b58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022b5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022b60:	ea43 0c0c 	orr.w	ip, r3, ip
90022b64:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022b66:	441c      	add	r4, r3
90022b68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022b6a:	f82a cb02 	strh.w	ip, [sl], #2
90022b6e:	441e      	add	r6, r3
90022b70:	e723      	b.n	900229ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022b72:	2800      	cmp	r0, #0
90022b74:	d0b1      	beq.n	90022ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022b76:	5cd3      	ldrb	r3, [r2, r3]
90022b78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022b7c:	930a      	str	r3, [sp, #40]	@ 0x28
90022b7e:	e7ac      	b.n	90022ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022b80:	b013      	add	sp, #76	@ 0x4c
90022b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90022b86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022b8a:	880d      	ldrh	r5, [r1, #0]
90022b8c:	b087      	sub	sp, #28
90022b8e:	10ef      	asrs	r7, r5, #3
90022b90:	9103      	str	r1, [sp, #12]
90022b92:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022b96:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90022b9a:	00ed      	lsls	r5, r5, #3
90022b9c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022ba0:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90022ba4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90022ba8:	b2ed      	uxtb	r5, r5
90022baa:	9701      	str	r7, [sp, #4]
90022bac:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90022bb0:	9502      	str	r5, [sp, #8]
90022bb2:	9d01      	ldr	r5, [sp, #4]
90022bb4:	9902      	ldr	r1, [sp, #8]
90022bb6:	022d      	lsls	r5, r5, #8
90022bb8:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90022bbc:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90022bc0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90022bc4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90022bc8:	430d      	orrs	r5, r1
90022bca:	fb06 0709 	mla	r7, r6, r9, r0
90022bce:	2e00      	cmp	r6, #0
90022bd0:	9505      	str	r5, [sp, #20]
90022bd2:	eb02 0c07 	add.w	ip, r2, r7
90022bd6:	f2c0 80b6 	blt.w	90022d46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022bda:	45b3      	cmp	fp, r6
90022bdc:	f340 80b3 	ble.w	90022d46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022be0:	2800      	cmp	r0, #0
90022be2:	f2c0 80ae 	blt.w	90022d42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022be6:	4581      	cmp	r9, r0
90022be8:	f340 80ab 	ble.w	90022d42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022bec:	5dd7      	ldrb	r7, [r2, r7]
90022bee:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022bf2:	441f      	add	r7, r3
90022bf4:	1c42      	adds	r2, r0, #1
90022bf6:	f100 80a9 	bmi.w	90022d4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022bfa:	4591      	cmp	r9, r2
90022bfc:	f340 80a6 	ble.w	90022d4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022c00:	2c00      	cmp	r4, #0
90022c02:	f000 80a3 	beq.w	90022d4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022c06:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022c0a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022c0e:	441d      	add	r5, r3
90022c10:	3601      	adds	r6, #1
90022c12:	f100 809f 	bmi.w	90022d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022c16:	45b3      	cmp	fp, r6
90022c18:	f340 809c 	ble.w	90022d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022c1c:	f1be 0f00 	cmp.w	lr, #0
90022c20:	f000 8098 	beq.w	90022d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022c24:	2800      	cmp	r0, #0
90022c26:	f2c0 8093 	blt.w	90022d50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022c2a:	4581      	cmp	r9, r0
90022c2c:	f340 8090 	ble.w	90022d50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022c30:	f81c 6009 	ldrb.w	r6, [ip, r9]
90022c34:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022c38:	441e      	add	r6, r3
90022c3a:	3001      	adds	r0, #1
90022c3c:	f100 808d 	bmi.w	90022d5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022c40:	4581      	cmp	r9, r0
90022c42:	f340 808a 	ble.w	90022d5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022c46:	2c00      	cmp	r4, #0
90022c48:	f000 8087 	beq.w	90022d5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022c4c:	44e1      	add	r9, ip
90022c4e:	f899 2001 	ldrb.w	r2, [r9, #1]
90022c52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022c56:	4413      	add	r3, r2
90022c58:	b2a4      	uxth	r4, r4
90022c5a:	f897 c002 	ldrb.w	ip, [r7, #2]
90022c5e:	fa1f fe8e 	uxth.w	lr, lr
90022c62:	9901      	ldr	r1, [sp, #4]
90022c64:	fb04 fb0e 	mul.w	fp, r4, lr
90022c68:	0124      	lsls	r4, r4, #4
90022c6a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90022c6e:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90022c72:	eba4 040b 	sub.w	r4, r4, fp
90022c76:	fa1f f08e 	uxth.w	r0, lr
90022c7a:	b2a2      	uxth	r2, r4
90022c7c:	78ac      	ldrb	r4, [r5, #2]
90022c7e:	eba9 0900 	sub.w	r9, r9, r0
90022c82:	fa1f fe88 	uxth.w	lr, r8
90022c86:	4354      	muls	r4, r2
90022c88:	ea6f 0808 	mvn.w	r8, r8
90022c8c:	fa1f f989 	uxth.w	r9, r9
90022c90:	fa5f f888 	uxtb.w	r8, r8
90022c94:	fb09 440c 	mla	r4, r9, ip, r4
90022c98:	f896 c002 	ldrb.w	ip, [r6, #2]
90022c9c:	fb1a fa08 	smulbb	sl, sl, r8
90022ca0:	fb00 440c 	mla	r4, r0, ip, r4
90022ca4:	f893 c002 	ldrb.w	ip, [r3, #2]
90022ca8:	fb0b 4c0c 	mla	ip, fp, ip, r4
90022cac:	787c      	ldrb	r4, [r7, #1]
90022cae:	783f      	ldrb	r7, [r7, #0]
90022cb0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022cb4:	fb0c ac0e 	mla	ip, ip, lr, sl
90022cb8:	f895 a001 	ldrb.w	sl, [r5, #1]
90022cbc:	782d      	ldrb	r5, [r5, #0]
90022cbe:	fb02 fa0a 	mul.w	sl, r2, sl
90022cc2:	fa1f fc8c 	uxth.w	ip, ip
90022cc6:	436a      	muls	r2, r5
90022cc8:	7835      	ldrb	r5, [r6, #0]
90022cca:	fb09 aa04 	mla	sl, r9, r4, sl
90022cce:	7874      	ldrb	r4, [r6, #1]
90022cd0:	fb09 2207 	mla	r2, r9, r7, r2
90022cd4:	fb00 aa04 	mla	sl, r0, r4, sl
90022cd8:	785c      	ldrb	r4, [r3, #1]
90022cda:	fb00 2005 	mla	r0, r0, r5, r2
90022cde:	781b      	ldrb	r3, [r3, #0]
90022ce0:	fb0b a404 	mla	r4, fp, r4, sl
90022ce4:	fb11 fa08 	smulbb	sl, r1, r8
90022ce8:	fb0b 0b03 	mla	fp, fp, r3, r0
90022cec:	9b02      	ldr	r3, [sp, #8]
90022cee:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022cf2:	fb13 f808 	smulbb	r8, r3, r8
90022cf6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022cfa:	fb04 a40e 	mla	r4, r4, lr, sl
90022cfe:	f10c 0301 	add.w	r3, ip, #1
90022d02:	fb0b 8e0e 	mla	lr, fp, lr, r8
90022d06:	b2a4      	uxth	r4, r4
90022d08:	fa1f fe8e 	uxth.w	lr, lr
90022d0c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022d10:	f104 0a01 	add.w	sl, r4, #1
90022d14:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90022d18:	f10e 0c01 	add.w	ip, lr, #1
90022d1c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022d20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022d24:	0964      	lsrs	r4, r4, #5
90022d26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022d2a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90022d2e:	ea4c 0c03 	orr.w	ip, ip, r3
90022d32:	9b03      	ldr	r3, [sp, #12]
90022d34:	ea4c 0c04 	orr.w	ip, ip, r4
90022d38:	f8a3 c000 	strh.w	ip, [r3]
90022d3c:	b007      	add	sp, #28
90022d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022d42:	af05      	add	r7, sp, #20
90022d44:	e756      	b.n	90022bf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90022d46:	ad05      	add	r5, sp, #20
90022d48:	462f      	mov	r7, r5
90022d4a:	e761      	b.n	90022c10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022d4c:	ad05      	add	r5, sp, #20
90022d4e:	e75f      	b.n	90022c10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022d50:	ae05      	add	r6, sp, #20
90022d52:	e772      	b.n	90022c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90022d54:	ab05      	add	r3, sp, #20
90022d56:	461e      	mov	r6, r3
90022d58:	e77e      	b.n	90022c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022d5a:	ab05      	add	r3, sp, #20
90022d5c:	e77c      	b.n	90022c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90022d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022d5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d62:	b095      	sub	sp, #84	@ 0x54
90022d64:	9212      	str	r2, [sp, #72]	@ 0x48
90022d66:	9309      	str	r3, [sp, #36]	@ 0x24
90022d68:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022d6a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90022d6e:	9013      	str	r0, [sp, #76]	@ 0x4c
90022d70:	930f      	str	r3, [sp, #60]	@ 0x3c
90022d72:	6850      	ldr	r0, [r2, #4]
90022d74:	910e      	str	r1, [sp, #56]	@ 0x38
90022d76:	6812      	ldr	r2, [r2, #0]
90022d78:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90022d7c:	fb00 1303 	mla	r3, r0, r3, r1
90022d80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022d84:	930a      	str	r3, [sp, #40]	@ 0x28
90022d86:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022d88:	681b      	ldr	r3, [r3, #0]
90022d8a:	930d      	str	r3, [sp, #52]	@ 0x34
90022d8c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022d8e:	685c      	ldr	r4, [r3, #4]
90022d90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022d92:	3404      	adds	r4, #4
90022d94:	43db      	mvns	r3, r3
90022d96:	b2db      	uxtb	r3, r3
90022d98:	930b      	str	r3, [sp, #44]	@ 0x2c
90022d9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022d9c:	2b00      	cmp	r3, #0
90022d9e:	dc03      	bgt.n	90022da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022da0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90022da2:	2b00      	cmp	r3, #0
90022da4:	f340 8255 	ble.w	90023252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022da8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022daa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022dae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022db2:	1e48      	subs	r0, r1, #1
90022db4:	1e55      	subs	r5, r2, #1
90022db6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022db8:	2b00      	cmp	r3, #0
90022dba:	f340 80f9 	ble.w	90022fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90022dbe:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90022dc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022dc2:	1436      	asrs	r6, r6, #16
90022dc4:	ea4f 4323 	mov.w	r3, r3, asr #16
90022dc8:	d406      	bmi.n	90022dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022dca:	4286      	cmp	r6, r0
90022dcc:	da04      	bge.n	90022dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022dce:	2b00      	cmp	r3, #0
90022dd0:	db02      	blt.n	90022dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022dd2:	42ab      	cmp	r3, r5
90022dd4:	f2c0 80ed 	blt.w	90022fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022dd8:	3601      	adds	r6, #1
90022dda:	f100 80da 	bmi.w	90022f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022dde:	42b1      	cmp	r1, r6
90022de0:	f2c0 80d7 	blt.w	90022f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022de4:	3301      	adds	r3, #1
90022de6:	f100 80d4 	bmi.w	90022f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022dea:	429a      	cmp	r2, r3
90022dec:	f2c0 80d1 	blt.w	90022f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022df0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022df2:	9311      	str	r3, [sp, #68]	@ 0x44
90022df4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022df6:	930c      	str	r3, [sp, #48]	@ 0x30
90022df8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022dfa:	2b00      	cmp	r3, #0
90022dfc:	f340 80fa 	ble.w	90022ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022e00:	9826      	ldr	r0, [sp, #152]	@ 0x98
90022e02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e04:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022e06:	68c6      	ldr	r6, [r0, #12]
90022e08:	141d      	asrs	r5, r3, #16
90022e0a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022e0c:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022e10:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022e12:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022e14:	1400      	asrs	r0, r0, #16
90022e16:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022e1a:	6892      	ldr	r2, [r2, #8]
90022e1c:	f100 813e 	bmi.w	9002309c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022e20:	1e57      	subs	r7, r2, #1
90022e22:	42b8      	cmp	r0, r7
90022e24:	f280 813a 	bge.w	9002309c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022e28:	2d00      	cmp	r5, #0
90022e2a:	f2c0 8137 	blt.w	9002309c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022e2e:	1e77      	subs	r7, r6, #1
90022e30:	42bd      	cmp	r5, r7
90022e32:	f280 8133 	bge.w	9002309c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022e36:	b212      	sxth	r2, r2
90022e38:	fb05 0002 	mla	r0, r5, r2, r0
90022e3c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022e3e:	f815 a000 	ldrb.w	sl, [r5, r0]
90022e42:	182e      	adds	r6, r5, r0
90022e44:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022e48:	eb04 050a 	add.w	r5, r4, sl
90022e4c:	2b00      	cmp	r3, #0
90022e4e:	f000 8117 	beq.w	90023080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90022e52:	f896 c001 	ldrb.w	ip, [r6, #1]
90022e56:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022e5a:	44a4      	add	ip, r4
90022e5c:	2900      	cmp	r1, #0
90022e5e:	f000 8117 	beq.w	90023090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022e62:	18b0      	adds	r0, r6, r2
90022e64:	5cb2      	ldrb	r2, [r6, r2]
90022e66:	7840      	ldrb	r0, [r0, #1]
90022e68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022e6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022e70:	4422      	add	r2, r4
90022e72:	4420      	add	r0, r4
90022e74:	b29b      	uxth	r3, r3
90022e76:	f89c 7002 	ldrb.w	r7, [ip, #2]
90022e7a:	b289      	uxth	r1, r1
90022e7c:	f895 b002 	ldrb.w	fp, [r5, #2]
90022e80:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90022e82:	fb03 f901 	mul.w	r9, r3, r1
90022e86:	011b      	lsls	r3, r3, #4
90022e88:	f8b6 e000 	ldrh.w	lr, [r6]
90022e8c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022e90:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90022e94:	eba3 0309 	sub.w	r3, r3, r9
90022e98:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90022e9c:	b289      	uxth	r1, r1
90022e9e:	f814 a00a 	ldrb.w	sl, [r4, sl]
90022ea2:	b29b      	uxth	r3, r3
90022ea4:	eba8 0801 	sub.w	r8, r8, r1
90022ea8:	435f      	muls	r7, r3
90022eaa:	fa1f f888 	uxth.w	r8, r8
90022eae:	9310      	str	r3, [sp, #64]	@ 0x40
90022eb0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022eb2:	fb08 770b 	mla	r7, r8, fp, r7
90022eb6:	f892 b002 	ldrb.w	fp, [r2, #2]
90022eba:	fb01 770b 	mla	r7, r1, fp, r7
90022ebe:	f890 b002 	ldrb.w	fp, [r0, #2]
90022ec2:	fb09 770b 	mla	r7, r9, fp, r7
90022ec6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90022eca:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90022ece:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022ed2:	fb1b fb03 	smulbb	fp, fp, r3
90022ed6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022ed8:	fb07 b706 	mla	r7, r7, r6, fp
90022edc:	f895 b001 	ldrb.w	fp, [r5, #1]
90022ee0:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022ee4:	f89c c000 	ldrb.w	ip, [ip]
90022ee8:	b2bf      	uxth	r7, r7
90022eea:	435d      	muls	r5, r3
90022eec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022eee:	fb08 550b 	mla	r5, r8, fp, r5
90022ef2:	f892 b001 	ldrb.w	fp, [r2, #1]
90022ef6:	fb01 550b 	mla	r5, r1, fp, r5
90022efa:	f890 b001 	ldrb.w	fp, [r0, #1]
90022efe:	fb09 550b 	mla	r5, r9, fp, r5
90022f02:	ea4f 0bee 	mov.w	fp, lr, asr #3
90022f06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022f0a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022f0e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022f12:	fa5f fe8e 	uxtb.w	lr, lr
90022f16:	fb1b fb03 	smulbb	fp, fp, r3
90022f1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022f1c:	fb03 f30c 	mul.w	r3, r3, ip
90022f20:	f892 c000 	ldrb.w	ip, [r2]
90022f24:	fb05 b506 	mla	r5, r5, r6, fp
90022f28:	fb08 330a 	mla	r3, r8, sl, r3
90022f2c:	b2ad      	uxth	r5, r5
90022f2e:	fb01 330c 	mla	r3, r1, ip, r3
90022f32:	f890 c000 	ldrb.w	ip, [r0]
90022f36:	f105 0b01 	add.w	fp, r5, #1
90022f3a:	fb09 3c0c 	mla	ip, r9, ip, r3
90022f3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022f40:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022f44:	fb1e fe03 	smulbb	lr, lr, r3
90022f48:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022f4c:	1c7b      	adds	r3, r7, #1
90022f4e:	096d      	lsrs	r5, r5, #5
90022f50:	fb0c e606 	mla	r6, ip, r6, lr
90022f54:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022f58:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022f5c:	b2b6      	uxth	r6, r6
90022f5e:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90022f62:	1c77      	adds	r7, r6, #1
90022f64:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022f68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022f6c:	431f      	orrs	r7, r3
90022f6e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022f70:	433d      	orrs	r5, r7
90022f72:	801d      	strh	r5, [r3, #0]
90022f74:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022f76:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022f78:	3302      	adds	r3, #2
90022f7a:	930c      	str	r3, [sp, #48]	@ 0x30
90022f7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022f7e:	4413      	add	r3, r2
90022f80:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022f82:	931f      	str	r3, [sp, #124]	@ 0x7c
90022f84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022f86:	4413      	add	r3, r2
90022f88:	9320      	str	r3, [sp, #128]	@ 0x80
90022f8a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022f8c:	3b01      	subs	r3, #1
90022f8e:	9311      	str	r3, [sp, #68]	@ 0x44
90022f90:	e732      	b.n	90022df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022f92:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022f94:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022f96:	4433      	add	r3, r6
90022f98:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90022f9a:	931f      	str	r3, [sp, #124]	@ 0x7c
90022f9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022f9e:	4433      	add	r3, r6
90022fa0:	9320      	str	r3, [sp, #128]	@ 0x80
90022fa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022fa4:	3b01      	subs	r3, #1
90022fa6:	9309      	str	r3, [sp, #36]	@ 0x24
90022fa8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022faa:	3302      	adds	r3, #2
90022fac:	930a      	str	r3, [sp, #40]	@ 0x28
90022fae:	e702      	b.n	90022db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022fb0:	d027      	beq.n	90023002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022fb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022fb4:	9821      	ldr	r0, [sp, #132]	@ 0x84
90022fb6:	3b01      	subs	r3, #1
90022fb8:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022fba:	fb00 5003 	mla	r0, r0, r3, r5
90022fbe:	1400      	asrs	r0, r0, #16
90022fc0:	f53f af16 	bmi.w	90022df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022fc4:	3901      	subs	r1, #1
90022fc6:	4288      	cmp	r0, r1
90022fc8:	f6bf af12 	bge.w	90022df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022fcc:	9922      	ldr	r1, [sp, #136]	@ 0x88
90022fce:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022fd0:	fb01 0303 	mla	r3, r1, r3, r0
90022fd4:	141b      	asrs	r3, r3, #16
90022fd6:	f53f af0b 	bmi.w	90022df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022fda:	3a01      	subs	r2, #1
90022fdc:	4293      	cmp	r3, r2
90022fde:	f6bf af07 	bge.w	90022df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022fe2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022fe4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90022fe8:	9311      	str	r3, [sp, #68]	@ 0x44
90022fea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022fec:	930c      	str	r3, [sp, #48]	@ 0x30
90022fee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022ff0:	2b00      	cmp	r3, #0
90022ff2:	dc70      	bgt.n	900230d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022ff4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022ff6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022ff8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022ffc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023000:	930a      	str	r3, [sp, #40]	@ 0x28
90023002:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023004:	2b00      	cmp	r3, #0
90023006:	f340 8124 	ble.w	90023252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9002300a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002300e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023010:	ee30 0a04 	vadd.f32	s0, s0, s8
90023014:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023018:	eef0 6a62 	vmov.f32	s13, s5
9002301c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023020:	ee31 1a05 	vadd.f32	s2, s2, s10
90023024:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023028:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
9002302c:	eef0 6a43 	vmov.f32	s13, s6
90023030:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023034:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90023038:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002303c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023040:	ee77 2a62 	vsub.f32	s5, s14, s5
90023044:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023048:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002304c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023050:	ee12 2a90 	vmov	r2, s5
90023054:	eef0 2a47 	vmov.f32	s5, s14
90023058:	fb92 f3f3 	sdiv	r3, r2, r3
9002305c:	ee13 2a10 	vmov	r2, s6
90023060:	9321      	str	r3, [sp, #132]	@ 0x84
90023062:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023064:	eeb0 3a67 	vmov.f32	s6, s15
90023068:	fb92 f3f3 	sdiv	r3, r2, r3
9002306c:	9322      	str	r3, [sp, #136]	@ 0x88
9002306e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023070:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90023072:	3b01      	subs	r3, #1
90023074:	930e      	str	r3, [sp, #56]	@ 0x38
90023076:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023078:	bf08      	it	eq
9002307a:	4613      	moveq	r3, r2
9002307c:	9309      	str	r3, [sp, #36]	@ 0x24
9002307e:	e68c      	b.n	90022d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023080:	b149      	cbz	r1, 90023096 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90023082:	5cb2      	ldrb	r2, [r6, r2]
90023084:	4628      	mov	r0, r5
90023086:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002308a:	4422      	add	r2, r4
9002308c:	46ac      	mov	ip, r5
9002308e:	e6f1      	b.n	90022e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023090:	4628      	mov	r0, r5
90023092:	462a      	mov	r2, r5
90023094:	e6ee      	b.n	90022e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023096:	4628      	mov	r0, r5
90023098:	462a      	mov	r2, r5
9002309a:	e7f7      	b.n	9002308c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9002309c:	1c47      	adds	r7, r0, #1
9002309e:	f53f af69 	bmi.w	90022f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900230a2:	42ba      	cmp	r2, r7
900230a4:	f6ff af66 	blt.w	90022f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900230a8:	1c6f      	adds	r7, r5, #1
900230aa:	f53f af63 	bmi.w	90022f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900230ae:	42be      	cmp	r6, r7
900230b0:	f6ff af60 	blt.w	90022f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900230b4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900230b6:	b236      	sxth	r6, r6
900230b8:	b212      	sxth	r2, r2
900230ba:	9002      	str	r0, [sp, #8]
900230bc:	9601      	str	r6, [sp, #4]
900230be:	9200      	str	r2, [sp, #0]
900230c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900230c2:	e9cd 1705 	strd	r1, r7, [sp, #20]
900230c6:	e9cd 5303 	strd	r5, r3, [sp, #12]
900230ca:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
900230ce:	4623      	mov	r3, r4
900230d0:	f7ff fd59 	bl	90022b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900230d4:	e74e      	b.n	90022f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900230d6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900230d8:	9820      	ldr	r0, [sp, #128]	@ 0x80
900230da:	f3c2 3103 	ubfx	r1, r2, #12, #4
900230de:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900230e0:	9a26      	ldr	r2, [sp, #152]	@ 0x98
900230e2:	1400      	asrs	r0, r0, #16
900230e4:	142d      	asrs	r5, r5, #16
900230e6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900230e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900230ec:	f3c3 3303 	ubfx	r3, r3, #12, #4
900230f0:	fb02 5000 	mla	r0, r2, r0, r5
900230f4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900230f6:	f815 9000 	ldrb.w	r9, [r5, r0]
900230fa:	182e      	adds	r6, r5, r0
900230fc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90023100:	eb04 0509 	add.w	r5, r4, r9
90023104:	2b00      	cmp	r3, #0
90023106:	f000 8096 	beq.w	90023236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9002310a:	7877      	ldrb	r7, [r6, #1]
9002310c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023110:	4427      	add	r7, r4
90023112:	2900      	cmp	r1, #0
90023114:	f000 8097 	beq.w	90023246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90023118:	18b0      	adds	r0, r6, r2
9002311a:	5cb2      	ldrb	r2, [r6, r2]
9002311c:	7840      	ldrb	r0, [r0, #1]
9002311e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023122:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023126:	4422      	add	r2, r4
90023128:	4420      	add	r0, r4
9002312a:	b29b      	uxth	r3, r3
9002312c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002312e:	b289      	uxth	r1, r1
90023130:	f895 b002 	ldrb.w	fp, [r5, #2]
90023134:	f8b6 c000 	ldrh.w	ip, [r6]
90023138:	fb03 f801 	mul.w	r8, r3, r1
9002313c:	011b      	lsls	r3, r3, #4
9002313e:	78be      	ldrb	r6, [r7, #2]
90023140:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90023144:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90023148:	eba3 0308 	sub.w	r3, r3, r8
9002314c:	f814 9009 	ldrb.w	r9, [r4, r9]
90023150:	b289      	uxth	r1, r1
90023152:	b29b      	uxth	r3, r3
90023154:	ebae 0e01 	sub.w	lr, lr, r1
90023158:	435e      	muls	r6, r3
9002315a:	fa1f fe8e 	uxth.w	lr, lr
9002315e:	9310      	str	r3, [sp, #64]	@ 0x40
90023160:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023162:	fb0e 660b 	mla	r6, lr, fp, r6
90023166:	f892 b002 	ldrb.w	fp, [r2, #2]
9002316a:	fb01 660b 	mla	r6, r1, fp, r6
9002316e:	f890 b002 	ldrb.w	fp, [r0, #2]
90023172:	fb08 660b 	mla	r6, r8, fp, r6
90023176:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9002317a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9002317e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023182:	fb1b fb03 	smulbb	fp, fp, r3
90023186:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023188:	fb06 b60a 	mla	r6, r6, sl, fp
9002318c:	f895 b001 	ldrb.w	fp, [r5, #1]
90023190:	787d      	ldrb	r5, [r7, #1]
90023192:	783f      	ldrb	r7, [r7, #0]
90023194:	b2b6      	uxth	r6, r6
90023196:	435d      	muls	r5, r3
90023198:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002319a:	fb0e 550b 	mla	r5, lr, fp, r5
9002319e:	f892 b001 	ldrb.w	fp, [r2, #1]
900231a2:	fb01 550b 	mla	r5, r1, fp, r5
900231a6:	f890 b001 	ldrb.w	fp, [r0, #1]
900231aa:	fb08 550b 	mla	r5, r8, fp, r5
900231ae:	ea4f 0bec 	mov.w	fp, ip, asr #3
900231b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900231b6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900231ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
900231be:	fa5f fc8c 	uxtb.w	ip, ip
900231c2:	fb1b fb03 	smulbb	fp, fp, r3
900231c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900231c8:	437b      	muls	r3, r7
900231ca:	7817      	ldrb	r7, [r2, #0]
900231cc:	fb05 b50a 	mla	r5, r5, sl, fp
900231d0:	fb0e 3309 	mla	r3, lr, r9, r3
900231d4:	b2ad      	uxth	r5, r5
900231d6:	fb01 3307 	mla	r3, r1, r7, r3
900231da:	7807      	ldrb	r7, [r0, #0]
900231dc:	f105 0b01 	add.w	fp, r5, #1
900231e0:	fb08 3707 	mla	r7, r8, r7, r3
900231e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900231e6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900231ea:	fb1c fc03 	smulbb	ip, ip, r3
900231ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
900231f2:	1c73      	adds	r3, r6, #1
900231f4:	096d      	lsrs	r5, r5, #5
900231f6:	fb07 c70a 	mla	r7, r7, sl, ip
900231fa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900231fe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023202:	b2bf      	uxth	r7, r7
90023204:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023206:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9002320a:	1c7a      	adds	r2, r7, #1
9002320c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023210:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023214:	4316      	orrs	r6, r2
90023216:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023218:	432e      	orrs	r6, r5
9002321a:	f823 6b02 	strh.w	r6, [r3], #2
9002321e:	930c      	str	r3, [sp, #48]	@ 0x30
90023220:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023222:	4413      	add	r3, r2
90023224:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023226:	931f      	str	r3, [sp, #124]	@ 0x7c
90023228:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002322a:	4413      	add	r3, r2
9002322c:	9320      	str	r3, [sp, #128]	@ 0x80
9002322e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023230:	3b01      	subs	r3, #1
90023232:	9311      	str	r3, [sp, #68]	@ 0x44
90023234:	e6db      	b.n	90022fee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90023236:	b149      	cbz	r1, 9002324c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90023238:	5cb2      	ldrb	r2, [r6, r2]
9002323a:	4628      	mov	r0, r5
9002323c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023240:	4422      	add	r2, r4
90023242:	462f      	mov	r7, r5
90023244:	e771      	b.n	9002312a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023246:	4628      	mov	r0, r5
90023248:	462a      	mov	r2, r5
9002324a:	e76e      	b.n	9002312a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9002324c:	4628      	mov	r0, r5
9002324e:	462a      	mov	r2, r5
90023250:	e7f7      	b.n	90023242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023252:	b015      	add	sp, #84	@ 0x54
90023254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023258 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90023258:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002325c:	880f      	ldrh	r7, [r1, #0]
9002325e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90023262:	023c      	lsls	r4, r7, #8
90023264:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90023268:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
9002326c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90023270:	017c      	lsls	r4, r7, #5
90023272:	00ff      	lsls	r7, r7, #3
90023274:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023278:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
9002327c:	b2ff      	uxtb	r7, r7
9002327e:	ea4b 0404 	orr.w	r4, fp, r4
90023282:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90023286:	4327      	orrs	r7, r4
90023288:	fb05 ca0e 	mla	sl, r5, lr, ip
9002328c:	2d00      	cmp	r5, #0
9002328e:	9701      	str	r7, [sp, #4]
90023290:	eb02 080a 	add.w	r8, r2, sl
90023294:	db7e      	blt.n	90023394 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90023296:	45a9      	cmp	r9, r5
90023298:	dd7c      	ble.n	90023394 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9002329a:	f1bc 0f00 	cmp.w	ip, #0
9002329e:	db77      	blt.n	90023390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900232a0:	45e6      	cmp	lr, ip
900232a2:	dd75      	ble.n	90023390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900232a4:	f812 700a 	ldrb.w	r7, [r2, sl]
900232a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900232ac:	441f      	add	r7, r3
900232ae:	f11c 0201 	adds.w	r2, ip, #1
900232b2:	d472      	bmi.n	9002339a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900232b4:	4596      	cmp	lr, r2
900232b6:	dd70      	ble.n	9002339a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900232b8:	2800      	cmp	r0, #0
900232ba:	d06e      	beq.n	9002339a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900232bc:	f898 4001 	ldrb.w	r4, [r8, #1]
900232c0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900232c4:	441c      	add	r4, r3
900232c6:	3501      	adds	r5, #1
900232c8:	d46b      	bmi.n	900233a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900232ca:	45a9      	cmp	r9, r5
900232cc:	dd69      	ble.n	900233a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900232ce:	2e00      	cmp	r6, #0
900232d0:	d067      	beq.n	900233a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900232d2:	f1bc 0f00 	cmp.w	ip, #0
900232d6:	db62      	blt.n	9002339e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900232d8:	45e6      	cmp	lr, ip
900232da:	dd60      	ble.n	9002339e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900232dc:	f818 500e 	ldrb.w	r5, [r8, lr]
900232e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900232e4:	441d      	add	r5, r3
900232e6:	f11c 0201 	adds.w	r2, ip, #1
900232ea:	d45d      	bmi.n	900233a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900232ec:	4596      	cmp	lr, r2
900232ee:	dd5b      	ble.n	900233a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900232f0:	2800      	cmp	r0, #0
900232f2:	d059      	beq.n	900233a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900232f4:	44c6      	add	lr, r8
900232f6:	f89e 2001 	ldrb.w	r2, [lr, #1]
900232fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900232fe:	4413      	add	r3, r2
90023300:	b280      	uxth	r0, r0
90023302:	f897 e002 	ldrb.w	lr, [r7, #2]
90023306:	b2b2      	uxth	r2, r6
90023308:	f897 9000 	ldrb.w	r9, [r7]
9002330c:	787f      	ldrb	r7, [r7, #1]
9002330e:	fb00 f602 	mul.w	r6, r0, r2
90023312:	0100      	lsls	r0, r0, #4
90023314:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90023318:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
9002331c:	1b80      	subs	r0, r0, r6
9002331e:	fa1f fc82 	uxth.w	ip, r2
90023322:	b282      	uxth	r2, r0
90023324:	78a0      	ldrb	r0, [r4, #2]
90023326:	eba8 080c 	sub.w	r8, r8, ip
9002332a:	4350      	muls	r0, r2
9002332c:	fa1f f888 	uxth.w	r8, r8
90023330:	fb08 0e0e 	mla	lr, r8, lr, r0
90023334:	78a8      	ldrb	r0, [r5, #2]
90023336:	fb0c e000 	mla	r0, ip, r0, lr
9002333a:	f893 e002 	ldrb.w	lr, [r3, #2]
9002333e:	fb06 0e0e 	mla	lr, r6, lr, r0
90023342:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90023346:	f894 e000 	ldrb.w	lr, [r4]
9002334a:	fb02 fe0e 	mul.w	lr, r2, lr
9002334e:	fb08 e909 	mla	r9, r8, r9, lr
90023352:	f895 e000 	ldrb.w	lr, [r5]
90023356:	fb0c 990e 	mla	r9, ip, lr, r9
9002335a:	f893 e000 	ldrb.w	lr, [r3]
9002335e:	785b      	ldrb	r3, [r3, #1]
90023360:	fb06 9e0e 	mla	lr, r6, lr, r9
90023364:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90023368:	ea4e 0e00 	orr.w	lr, lr, r0
9002336c:	7860      	ldrb	r0, [r4, #1]
9002336e:	4350      	muls	r0, r2
90023370:	786a      	ldrb	r2, [r5, #1]
90023372:	fb08 0007 	mla	r0, r8, r7, r0
90023376:	fb0c 0202 	mla	r2, ip, r2, r0
9002337a:	fb06 2303 	mla	r3, r6, r3, r2
9002337e:	095b      	lsrs	r3, r3, #5
90023380:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023384:	ea4e 0303 	orr.w	r3, lr, r3
90023388:	800b      	strh	r3, [r1, #0]
9002338a:	b003      	add	sp, #12
9002338c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023390:	af01      	add	r7, sp, #4
90023392:	e78c      	b.n	900232ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90023394:	ac01      	add	r4, sp, #4
90023396:	4627      	mov	r7, r4
90023398:	e795      	b.n	900232c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002339a:	ac01      	add	r4, sp, #4
9002339c:	e793      	b.n	900232c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002339e:	ad01      	add	r5, sp, #4
900233a0:	e7a1      	b.n	900232e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900233a2:	ab01      	add	r3, sp, #4
900233a4:	461d      	mov	r5, r3
900233a6:	e7ab      	b.n	90023300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900233a8:	ab01      	add	r3, sp, #4
900233aa:	e7a9      	b.n	90023300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900233ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900233ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900233b0:	b08f      	sub	sp, #60	@ 0x3c
900233b2:	920c      	str	r2, [sp, #48]	@ 0x30
900233b4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900233b6:	900d      	str	r0, [sp, #52]	@ 0x34
900233b8:	910a      	str	r1, [sp, #40]	@ 0x28
900233ba:	6850      	ldr	r0, [r2, #4]
900233bc:	9306      	str	r3, [sp, #24]
900233be:	6812      	ldr	r2, [r2, #0]
900233c0:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900233c4:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900233c8:	fb00 1303 	mla	r3, r0, r3, r1
900233cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900233d0:	9307      	str	r3, [sp, #28]
900233d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900233d4:	681b      	ldr	r3, [r3, #0]
900233d6:	9308      	str	r3, [sp, #32]
900233d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900233da:	685c      	ldr	r4, [r3, #4]
900233dc:	3404      	adds	r4, #4
900233de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900233e0:	2b00      	cmp	r3, #0
900233e2:	dc03      	bgt.n	900233ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900233e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900233e6:	2b00      	cmp	r3, #0
900233e8:	f340 81d5 	ble.w	90023796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900233ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900233ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900233f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900233f6:	1e48      	subs	r0, r1, #1
900233f8:	1e56      	subs	r6, r2, #1
900233fa:	9b06      	ldr	r3, [sp, #24]
900233fc:	2b00      	cmp	r3, #0
900233fe:	f340 80b6 	ble.w	9002356e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90023402:	ea5f 472b 	movs.w	r7, fp, asr #16
90023406:	ea4f 4325 	mov.w	r3, r5, asr #16
9002340a:	d406      	bmi.n	9002341a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002340c:	4287      	cmp	r7, r0
9002340e:	da04      	bge.n	9002341a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023410:	2b00      	cmp	r3, #0
90023412:	db02      	blt.n	9002341a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023414:	42b3      	cmp	r3, r6
90023416:	f2c0 80ab 	blt.w	90023570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9002341a:	3701      	adds	r7, #1
9002341c:	f100 809c 	bmi.w	90023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023420:	42b9      	cmp	r1, r7
90023422:	f2c0 8099 	blt.w	90023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023426:	3301      	adds	r3, #1
90023428:	f100 8096 	bmi.w	90023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002342c:	429a      	cmp	r2, r3
9002342e:	f2c0 8093 	blt.w	90023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023432:	9b06      	ldr	r3, [sp, #24]
90023434:	930b      	str	r3, [sp, #44]	@ 0x2c
90023436:	9b07      	ldr	r3, [sp, #28]
90023438:	9309      	str	r3, [sp, #36]	@ 0x24
9002343a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002343c:	2b00      	cmp	r3, #0
9002343e:	f340 80b4 	ble.w	900235aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90023442:	9820      	ldr	r0, [sp, #128]	@ 0x80
90023444:	142e      	asrs	r6, r5, #16
90023446:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023448:	f3cb 3303 	ubfx	r3, fp, #12, #4
9002344c:	68c7      	ldr	r7, [r0, #12]
9002344e:	ea5f 402b 	movs.w	r0, fp, asr #16
90023452:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023456:	6892      	ldr	r2, [r2, #8]
90023458:	f100 80fb 	bmi.w	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002345c:	f102 3cff 	add.w	ip, r2, #4294967295
90023460:	4560      	cmp	r0, ip
90023462:	f280 80f6 	bge.w	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023466:	2e00      	cmp	r6, #0
90023468:	f2c0 80f3 	blt.w	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002346c:	f107 3cff 	add.w	ip, r7, #4294967295
90023470:	4566      	cmp	r6, ip
90023472:	f280 80ee 	bge.w	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023476:	b212      	sxth	r2, r2
90023478:	fb06 0002 	mla	r0, r6, r2, r0
9002347c:	9e08      	ldr	r6, [sp, #32]
9002347e:	1837      	adds	r7, r6, r0
90023480:	5c30      	ldrb	r0, [r6, r0]
90023482:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90023486:	eb04 0c08 	add.w	ip, r4, r8
9002348a:	2b00      	cmp	r3, #0
9002348c:	f000 80d3 	beq.w	90023636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90023490:	787e      	ldrb	r6, [r7, #1]
90023492:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023496:	4426      	add	r6, r4
90023498:	2900      	cmp	r1, #0
9002349a:	f000 80d4 	beq.w	90023646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002349e:	18b8      	adds	r0, r7, r2
900234a0:	5cba      	ldrb	r2, [r7, r2]
900234a2:	7840      	ldrb	r0, [r0, #1]
900234a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900234a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900234ac:	4422      	add	r2, r4
900234ae:	4420      	add	r0, r4
900234b0:	b29b      	uxth	r3, r3
900234b2:	78b7      	ldrb	r7, [r6, #2]
900234b4:	b289      	uxth	r1, r1
900234b6:	f89c a002 	ldrb.w	sl, [ip, #2]
900234ba:	f89c c001 	ldrb.w	ip, [ip, #1]
900234be:	fb03 f901 	mul.w	r9, r3, r1
900234c2:	011b      	lsls	r3, r3, #4
900234c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900234c8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900234cc:	eba3 0309 	sub.w	r3, r3, r9
900234d0:	b289      	uxth	r1, r1
900234d2:	b29b      	uxth	r3, r3
900234d4:	ebae 0e01 	sub.w	lr, lr, r1
900234d8:	435f      	muls	r7, r3
900234da:	fa1f fe8e 	uxth.w	lr, lr
900234de:	fb0e 770a 	mla	r7, lr, sl, r7
900234e2:	f892 a002 	ldrb.w	sl, [r2, #2]
900234e6:	fb01 770a 	mla	r7, r1, sl, r7
900234ea:	f890 a002 	ldrb.w	sl, [r0, #2]
900234ee:	fb09 7a0a 	mla	sl, r9, sl, r7
900234f2:	f814 7008 	ldrb.w	r7, [r4, r8]
900234f6:	f896 8000 	ldrb.w	r8, [r6]
900234fa:	7876      	ldrb	r6, [r6, #1]
900234fc:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90023500:	fb03 f808 	mul.w	r8, r3, r8
90023504:	4373      	muls	r3, r6
90023506:	fb0e 8807 	mla	r8, lr, r7, r8
9002350a:	7817      	ldrb	r7, [r2, #0]
9002350c:	fb0e 330c 	mla	r3, lr, ip, r3
90023510:	fb01 8807 	mla	r8, r1, r7, r8
90023514:	7807      	ldrb	r7, [r0, #0]
90023516:	fb09 8707 	mla	r7, r9, r7, r8
9002351a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002351e:	ea47 070a 	orr.w	r7, r7, sl
90023522:	f892 a001 	ldrb.w	sl, [r2, #1]
90023526:	fb01 310a 	mla	r1, r1, sl, r3
9002352a:	f890 a001 	ldrb.w	sl, [r0, #1]
9002352e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023530:	fb09 1a0a 	mla	sl, r9, sl, r1
90023534:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023538:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002353c:	ea47 070a 	orr.w	r7, r7, sl
90023540:	801f      	strh	r7, [r3, #0]
90023542:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023544:	3302      	adds	r3, #2
90023546:	9309      	str	r3, [sp, #36]	@ 0x24
90023548:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002354a:	449b      	add	fp, r3
9002354c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002354e:	441d      	add	r5, r3
90023550:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023552:	3b01      	subs	r3, #1
90023554:	930b      	str	r3, [sp, #44]	@ 0x2c
90023556:	e770      	b.n	9002343a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023558:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002355a:	449b      	add	fp, r3
9002355c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002355e:	441d      	add	r5, r3
90023560:	9b06      	ldr	r3, [sp, #24]
90023562:	3b01      	subs	r3, #1
90023564:	9306      	str	r3, [sp, #24]
90023566:	9b07      	ldr	r3, [sp, #28]
90023568:	3302      	adds	r3, #2
9002356a:	9307      	str	r3, [sp, #28]
9002356c:	e745      	b.n	900233fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9002356e:	d023      	beq.n	900235b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90023570:	9b06      	ldr	r3, [sp, #24]
90023572:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90023574:	3b01      	subs	r3, #1
90023576:	fb00 b003 	mla	r0, r0, r3, fp
9002357a:	1400      	asrs	r0, r0, #16
9002357c:	f53f af59 	bmi.w	90023432 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023580:	3901      	subs	r1, #1
90023582:	4288      	cmp	r0, r1
90023584:	f6bf af55 	bge.w	90023432 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023588:	991c      	ldr	r1, [sp, #112]	@ 0x70
9002358a:	fb01 5303 	mla	r3, r1, r3, r5
9002358e:	141b      	asrs	r3, r3, #16
90023590:	f53f af4f 	bmi.w	90023432 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023594:	3a01      	subs	r2, #1
90023596:	4293      	cmp	r3, r2
90023598:	f6bf af4b 	bge.w	90023432 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002359c:	9b06      	ldr	r3, [sp, #24]
9002359e:	9309      	str	r3, [sp, #36]	@ 0x24
900235a0:	9b07      	ldr	r3, [sp, #28]
900235a2:	930b      	str	r3, [sp, #44]	@ 0x2c
900235a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900235a6:	2b00      	cmp	r3, #0
900235a8:	dc70      	bgt.n	9002368c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900235aa:	9b06      	ldr	r3, [sp, #24]
900235ac:	9a07      	ldr	r2, [sp, #28]
900235ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900235b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900235b6:	9307      	str	r3, [sp, #28]
900235b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900235ba:	2b00      	cmp	r3, #0
900235bc:	f340 80eb 	ble.w	90023796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900235c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900235c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900235c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900235ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235ce:	eef0 6a62 	vmov.f32	s13, s5
900235d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900235d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900235da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235de:	ee16 ba90 	vmov	fp, s13
900235e2:	eef0 6a43 	vmov.f32	s13, s6
900235e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235ea:	ee16 5a90 	vmov	r5, s13
900235ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900235f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900235f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900235fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900235fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023602:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023606:	ee12 2a90 	vmov	r2, s5
9002360a:	eef0 2a47 	vmov.f32	s5, s14
9002360e:	fb92 f3f3 	sdiv	r3, r2, r3
90023612:	ee13 2a10 	vmov	r2, s6
90023616:	931b      	str	r3, [sp, #108]	@ 0x6c
90023618:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002361a:	eeb0 3a67 	vmov.f32	s6, s15
9002361e:	fb92 f3f3 	sdiv	r3, r2, r3
90023622:	931c      	str	r3, [sp, #112]	@ 0x70
90023624:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023626:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023628:	3b01      	subs	r3, #1
9002362a:	930a      	str	r3, [sp, #40]	@ 0x28
9002362c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002362e:	bf08      	it	eq
90023630:	4613      	moveq	r3, r2
90023632:	9306      	str	r3, [sp, #24]
90023634:	e6d3      	b.n	900233de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90023636:	b149      	cbz	r1, 9002364c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90023638:	5cba      	ldrb	r2, [r7, r2]
9002363a:	4660      	mov	r0, ip
9002363c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023640:	4422      	add	r2, r4
90023642:	4666      	mov	r6, ip
90023644:	e734      	b.n	900234b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90023646:	4660      	mov	r0, ip
90023648:	4662      	mov	r2, ip
9002364a:	e731      	b.n	900234b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002364c:	4660      	mov	r0, ip
9002364e:	4662      	mov	r2, ip
90023650:	e7f7      	b.n	90023642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90023652:	f110 0c01 	adds.w	ip, r0, #1
90023656:	f53f af74 	bmi.w	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002365a:	4562      	cmp	r2, ip
9002365c:	f6ff af71 	blt.w	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023660:	f116 0c01 	adds.w	ip, r6, #1
90023664:	f53f af6d 	bmi.w	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023668:	4567      	cmp	r7, ip
9002366a:	f6ff af6a 	blt.w	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002366e:	b23f      	sxth	r7, r7
90023670:	b212      	sxth	r2, r2
90023672:	9701      	str	r7, [sp, #4]
90023674:	9200      	str	r2, [sp, #0]
90023676:	e9cd 3104 	strd	r3, r1, [sp, #16]
9002367a:	e9cd 0602 	strd	r0, r6, [sp, #8]
9002367e:	4623      	mov	r3, r4
90023680:	980d      	ldr	r0, [sp, #52]	@ 0x34
90023682:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90023686:	f7ff fde7 	bl	90023258 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9002368a:	e75a      	b.n	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002368c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002368e:	ea4f 462b 	mov.w	r6, fp, asr #16
90023692:	1428      	asrs	r0, r5, #16
90023694:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023698:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9002369c:	f3c5 3103 	ubfx	r1, r5, #12, #4
900236a0:	fb02 6000 	mla	r0, r2, r0, r6
900236a4:	9e08      	ldr	r6, [sp, #32]
900236a6:	f816 8000 	ldrb.w	r8, [r6, r0]
900236aa:	1837      	adds	r7, r6, r0
900236ac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900236b0:	eb04 0c08 	add.w	ip, r4, r8
900236b4:	2b00      	cmp	r3, #0
900236b6:	d060      	beq.n	9002377a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900236b8:	787e      	ldrb	r6, [r7, #1]
900236ba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900236be:	4426      	add	r6, r4
900236c0:	2900      	cmp	r1, #0
900236c2:	d062      	beq.n	9002378a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900236c4:	18b8      	adds	r0, r7, r2
900236c6:	5cba      	ldrb	r2, [r7, r2]
900236c8:	7840      	ldrb	r0, [r0, #1]
900236ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900236ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900236d2:	4422      	add	r2, r4
900236d4:	4420      	add	r0, r4
900236d6:	b29b      	uxth	r3, r3
900236d8:	78b7      	ldrb	r7, [r6, #2]
900236da:	b289      	uxth	r1, r1
900236dc:	f89c a002 	ldrb.w	sl, [ip, #2]
900236e0:	f89c c001 	ldrb.w	ip, [ip, #1]
900236e4:	fb03 f901 	mul.w	r9, r3, r1
900236e8:	011b      	lsls	r3, r3, #4
900236ea:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900236ee:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900236f2:	eba3 0309 	sub.w	r3, r3, r9
900236f6:	b289      	uxth	r1, r1
900236f8:	b29b      	uxth	r3, r3
900236fa:	ebae 0e01 	sub.w	lr, lr, r1
900236fe:	435f      	muls	r7, r3
90023700:	fa1f fe8e 	uxth.w	lr, lr
90023704:	fb0e 770a 	mla	r7, lr, sl, r7
90023708:	f892 a002 	ldrb.w	sl, [r2, #2]
9002370c:	fb01 770a 	mla	r7, r1, sl, r7
90023710:	f890 a002 	ldrb.w	sl, [r0, #2]
90023714:	fb09 7a0a 	mla	sl, r9, sl, r7
90023718:	f814 7008 	ldrb.w	r7, [r4, r8]
9002371c:	f896 8000 	ldrb.w	r8, [r6]
90023720:	7876      	ldrb	r6, [r6, #1]
90023722:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90023726:	fb03 f808 	mul.w	r8, r3, r8
9002372a:	4373      	muls	r3, r6
9002372c:	7856      	ldrb	r6, [r2, #1]
9002372e:	fb0e 8807 	mla	r8, lr, r7, r8
90023732:	7817      	ldrb	r7, [r2, #0]
90023734:	fb0e 330c 	mla	r3, lr, ip, r3
90023738:	fb01 8807 	mla	r8, r1, r7, r8
9002373c:	7807      	ldrb	r7, [r0, #0]
9002373e:	fb01 3306 	mla	r3, r1, r6, r3
90023742:	fb09 8707 	mla	r7, r9, r7, r8
90023746:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002374a:	ea47 070a 	orr.w	r7, r7, sl
9002374e:	f890 a001 	ldrb.w	sl, [r0, #1]
90023752:	fb09 3a0a 	mla	sl, r9, sl, r3
90023756:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023758:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002375c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90023760:	ea47 070a 	orr.w	r7, r7, sl
90023764:	f823 7b02 	strh.w	r7, [r3], #2
90023768:	930b      	str	r3, [sp, #44]	@ 0x2c
9002376a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002376c:	449b      	add	fp, r3
9002376e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023770:	441d      	add	r5, r3
90023772:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023774:	3b01      	subs	r3, #1
90023776:	9309      	str	r3, [sp, #36]	@ 0x24
90023778:	e714      	b.n	900235a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9002377a:	b149      	cbz	r1, 90023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9002377c:	5cba      	ldrb	r2, [r7, r2]
9002377e:	4660      	mov	r0, ip
90023780:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023784:	4422      	add	r2, r4
90023786:	4666      	mov	r6, ip
90023788:	e7a5      	b.n	900236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9002378a:	4660      	mov	r0, ip
9002378c:	4662      	mov	r2, ip
9002378e:	e7a2      	b.n	900236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023790:	4660      	mov	r0, ip
90023792:	4662      	mov	r2, ip
90023794:	e7f7      	b.n	90023786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90023796:	b00f      	add	sp, #60	@ 0x3c
90023798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002379c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9002379c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900237a0:	b085      	sub	sp, #20
900237a2:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900237a6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900237aa:	9102      	str	r1, [sp, #8]
900237ac:	2c00      	cmp	r4, #0
900237ae:	fb04 710c 	mla	r1, r4, ip, r7
900237b2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900237b6:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900237ba:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900237be:	eb02 0e01 	add.w	lr, r2, r1
900237c2:	f2c0 8122 	blt.w	90023a0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900237c6:	45a0      	cmp	r8, r4
900237c8:	f340 811f 	ble.w	90023a0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900237cc:	2f00      	cmp	r7, #0
900237ce:	f2c0 811a 	blt.w	90023a06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900237d2:	45bc      	cmp	ip, r7
900237d4:	f340 8117 	ble.w	90023a06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900237d8:	5c52      	ldrb	r2, [r2, r1]
900237da:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900237de:	1c7a      	adds	r2, r7, #1
900237e0:	f100 8116 	bmi.w	90023a10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900237e4:	4594      	cmp	ip, r2
900237e6:	f340 8113 	ble.w	90023a10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900237ea:	2e00      	cmp	r6, #0
900237ec:	f000 8112 	beq.w	90023a14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
900237f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
900237f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900237f8:	3401      	adds	r4, #1
900237fa:	f100 810f 	bmi.w	90023a1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900237fe:	45a0      	cmp	r8, r4
90023800:	f340 810c 	ble.w	90023a1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023804:	2800      	cmp	r0, #0
90023806:	f000 810c 	beq.w	90023a22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9002380a:	2f00      	cmp	r7, #0
9002380c:	f2c0 8104 	blt.w	90023a18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023810:	45bc      	cmp	ip, r7
90023812:	f340 8101 	ble.w	90023a18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023816:	f81e 200c 	ldrb.w	r2, [lr, ip]
9002381a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002381e:	3701      	adds	r7, #1
90023820:	f100 8102 	bmi.w	90023a28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023824:	45bc      	cmp	ip, r7
90023826:	f340 80ff 	ble.w	90023a28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002382a:	2e00      	cmp	r6, #0
9002382c:	f000 80fe 	beq.w	90023a2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90023830:	44f4      	add	ip, lr
90023832:	f89c 2001 	ldrb.w	r2, [ip, #1]
90023836:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9002383a:	b2b6      	uxth	r6, r6
9002383c:	b280      	uxth	r0, r0
9002383e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023842:	fb00 fe06 	mul.w	lr, r0, r6
90023846:	0136      	lsls	r6, r6, #4
90023848:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002384c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023850:	eba6 070e 	sub.w	r7, r6, lr
90023854:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90023858:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002385c:	b280      	uxth	r0, r0
9002385e:	b2bf      	uxth	r7, r7
90023860:	1a1b      	subs	r3, r3, r0
90023862:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023866:	fb0a f607 	mul.w	r6, sl, r7
9002386a:	b29b      	uxth	r3, r3
9002386c:	fb0b 6603 	mla	r6, fp, r3, r6
90023870:	fb00 6609 	mla	r6, r0, r9, r6
90023874:	fb0e 6608 	mla	r6, lr, r8, r6
90023878:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002387c:	9600      	str	r6, [sp, #0]
9002387e:	2e00      	cmp	r6, #0
90023880:	f000 80be 	beq.w	90023a00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90023884:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023888:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002388c:	9e02      	ldr	r6, [sp, #8]
9002388e:	fb0b fc0c 	mul.w	ip, fp, ip
90023892:	fb0b f505 	mul.w	r5, fp, r5
90023896:	8836      	ldrh	r6, [r6, #0]
90023898:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002389c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900238a0:	9501      	str	r5, [sp, #4]
900238a2:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900238a6:	44dc      	add	ip, fp
900238a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900238ac:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900238b0:	9503      	str	r5, [sp, #12]
900238b2:	9d01      	ldr	r5, [sp, #4]
900238b4:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900238b8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900238bc:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900238c0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900238c4:	fb0a fc0c 	mul.w	ip, sl, ip
900238c8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900238cc:	fb0a fa01 	mul.w	sl, sl, r1
900238d0:	ea4f 251c 	mov.w	r5, ip, lsr #8
900238d4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900238d8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900238dc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900238e0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900238e4:	4465      	add	r5, ip
900238e6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900238ea:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900238ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900238f2:	fb09 fc0c 	mul.w	ip, r9, ip
900238f6:	0a2d      	lsrs	r5, r5, #8
900238f8:	fb09 f904 	mul.w	r9, r9, r4
900238fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023900:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023904:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023908:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002390c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023910:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023914:	437d      	muls	r5, r7
90023916:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002391a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002391e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90023922:	4461      	add	r1, ip
90023924:	fb08 f404 	mul.w	r4, r8, r4
90023928:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002392c:	fb08 f802 	mul.w	r8, r8, r2
90023930:	0a09      	lsrs	r1, r1, #8
90023932:	0a22      	lsrs	r2, r4, #8
90023934:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90023938:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002393c:	fb07 f70a 	mul.w	r7, r7, sl
90023940:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90023944:	4414      	add	r4, r2
90023946:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002394a:	0a24      	lsrs	r4, r4, #8
9002394c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023950:	9a03      	ldr	r2, [sp, #12]
90023952:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90023956:	fb02 5503 	mla	r5, r2, r3, r5
9002395a:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002395e:	9a00      	ldr	r2, [sp, #0]
90023960:	fb04 540e 	mla	r4, r4, lr, r5
90023964:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90023968:	1235      	asrs	r5, r6, #8
9002396a:	fb01 4100 	mla	r1, r1, r0, r4
9002396e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023972:	0a09      	lsrs	r1, r1, #8
90023974:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90023978:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002397c:	fb03 7101 	mla	r1, r3, r1, r7
90023980:	fb0e 1e08 	mla	lr, lr, r8, r1
90023984:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90023988:	fb00 e101 	mla	r1, r0, r1, lr
9002398c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90023990:	b287      	uxth	r7, r0
90023992:	0a09      	lsrs	r1, r1, #8
90023994:	437a      	muls	r2, r7
90023996:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002399a:	1c53      	adds	r3, r2, #1
9002399c:	4321      	orrs	r1, r4
9002399e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900239a2:	0c0a      	lsrs	r2, r1, #16
900239a4:	f3c1 2407 	ubfx	r4, r1, #8, #8
900239a8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900239ac:	b2c8      	uxtb	r0, r1
900239ae:	fb12 f207 	smulbb	r2, r2, r7
900239b2:	fb14 f407 	smulbb	r4, r4, r7
900239b6:	b2db      	uxtb	r3, r3
900239b8:	fb10 f007 	smulbb	r0, r0, r7
900239bc:	fb05 2503 	mla	r5, r5, r3, r2
900239c0:	10f2      	asrs	r2, r6, #3
900239c2:	00f6      	lsls	r6, r6, #3
900239c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900239c8:	b2ad      	uxth	r5, r5
900239ca:	b2f6      	uxtb	r6, r6
900239cc:	fb02 4203 	mla	r2, r2, r3, r4
900239d0:	fb06 0303 	mla	r3, r6, r3, r0
900239d4:	b294      	uxth	r4, r2
900239d6:	b299      	uxth	r1, r3
900239d8:	1c6b      	adds	r3, r5, #1
900239da:	1c62      	adds	r2, r4, #1
900239dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900239e0:	1c4b      	adds	r3, r1, #1
900239e2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900239e6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900239ea:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900239ee:	0952      	lsrs	r2, r2, #5
900239f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900239f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900239f8:	432b      	orrs	r3, r5
900239fa:	4313      	orrs	r3, r2
900239fc:	9a02      	ldr	r2, [sp, #8]
900239fe:	8013      	strh	r3, [r2, #0]
90023a00:	b005      	add	sp, #20
90023a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023a06:	2500      	movs	r5, #0
90023a08:	e6e9      	b.n	900237de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90023a0a:	2100      	movs	r1, #0
90023a0c:	460d      	mov	r5, r1
90023a0e:	e6f3      	b.n	900237f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023a10:	2100      	movs	r1, #0
90023a12:	e6f1      	b.n	900237f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023a14:	4631      	mov	r1, r6
90023a16:	e6ef      	b.n	900237f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023a18:	2400      	movs	r4, #0
90023a1a:	e700      	b.n	9002381e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90023a1c:	2200      	movs	r2, #0
90023a1e:	4614      	mov	r4, r2
90023a20:	e70b      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023a22:	4602      	mov	r2, r0
90023a24:	4604      	mov	r4, r0
90023a26:	e708      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023a28:	2200      	movs	r2, #0
90023a2a:	e706      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023a2c:	4632      	mov	r2, r6
90023a2e:	e704      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90023a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023a34:	b09f      	sub	sp, #124	@ 0x7c
90023a36:	921b      	str	r2, [sp, #108]	@ 0x6c
90023a38:	9309      	str	r3, [sp, #36]	@ 0x24
90023a3a:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90023a3c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90023a40:	901d      	str	r0, [sp, #116]	@ 0x74
90023a42:	931c      	str	r3, [sp, #112]	@ 0x70
90023a44:	6850      	ldr	r0, [r2, #4]
90023a46:	9119      	str	r1, [sp, #100]	@ 0x64
90023a48:	6812      	ldr	r2, [r2, #0]
90023a4a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90023a4c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90023a50:	fb00 1303 	mla	r3, r0, r3, r1
90023a54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023a58:	930c      	str	r3, [sp, #48]	@ 0x30
90023a5a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023a5c:	681b      	ldr	r3, [r3, #0]
90023a5e:	9312      	str	r3, [sp, #72]	@ 0x48
90023a60:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023a62:	685e      	ldr	r6, [r3, #4]
90023a64:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90023a68:	3604      	adds	r6, #4
90023a6a:	930d      	str	r3, [sp, #52]	@ 0x34
90023a6c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023a6e:	2b00      	cmp	r3, #0
90023a70:	dc03      	bgt.n	90023a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023a72:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023a74:	2b00      	cmp	r3, #0
90023a76:	f340 8387 	ble.w	90024188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023a7a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023a7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023a80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023a84:	1e48      	subs	r0, r1, #1
90023a86:	1e57      	subs	r7, r2, #1
90023a88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023a8a:	2b00      	cmp	r3, #0
90023a8c:	f340 8194 	ble.w	90023db8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90023a90:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023a92:	142b      	asrs	r3, r5, #16
90023a94:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023a98:	d406      	bmi.n	90023aa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023a9a:	4584      	cmp	ip, r0
90023a9c:	da04      	bge.n	90023aa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023a9e:	2b00      	cmp	r3, #0
90023aa0:	db02      	blt.n	90023aa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023aa2:	42bb      	cmp	r3, r7
90023aa4:	f2c0 8189 	blt.w	90023dba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023aa8:	f11c 0c01 	adds.w	ip, ip, #1
90023aac:	f100 8177 	bmi.w	90023d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023ab0:	4561      	cmp	r1, ip
90023ab2:	f2c0 8174 	blt.w	90023d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023ab6:	3301      	adds	r3, #1
90023ab8:	f100 8171 	bmi.w	90023d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023abc:	429a      	cmp	r2, r3
90023abe:	f2c0 816e 	blt.w	90023d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023ac2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023ac4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90023ac6:	931a      	str	r3, [sp, #104]	@ 0x68
90023ac8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90023aca:	2b00      	cmp	r3, #0
90023acc:	f340 8193 	ble.w	90023df6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90023ad0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023ad2:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023ad6:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023ada:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023ade:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023ae0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90023ae4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023ae6:	141b      	asrs	r3, r3, #16
90023ae8:	f100 81d6 	bmi.w	90023e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023aec:	f100 38ff 	add.w	r8, r0, #4294967295
90023af0:	4543      	cmp	r3, r8
90023af2:	f280 81d1 	bge.w	90023e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023af6:	f1bc 0f00 	cmp.w	ip, #0
90023afa:	f2c0 81cd 	blt.w	90023e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023afe:	f10e 38ff 	add.w	r8, lr, #4294967295
90023b02:	45c4      	cmp	ip, r8
90023b04:	f280 81c8 	bge.w	90023e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023b08:	b200      	sxth	r0, r0
90023b0a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023b0c:	fb0c 3300 	mla	r3, ip, r0, r3
90023b10:	eb04 0803 	add.w	r8, r4, r3
90023b14:	5ce3      	ldrb	r3, [r4, r3]
90023b16:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023b1a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023b1e:	2a00      	cmp	r2, #0
90023b20:	f000 81af 	beq.w	90023e82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b24:	f898 c001 	ldrb.w	ip, [r8, #1]
90023b28:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023b2c:	940e      	str	r4, [sp, #56]	@ 0x38
90023b2e:	0e24      	lsrs	r4, r4, #24
90023b30:	9415      	str	r4, [sp, #84]	@ 0x54
90023b32:	b179      	cbz	r1, 90023b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023b34:	eb08 0c00 	add.w	ip, r8, r0
90023b38:	f818 0000 	ldrb.w	r0, [r8, r0]
90023b3c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023b40:	900a      	str	r0, [sp, #40]	@ 0x28
90023b42:	0e00      	lsrs	r0, r0, #24
90023b44:	9013      	str	r0, [sp, #76]	@ 0x4c
90023b46:	f89c 0001 	ldrb.w	r0, [ip, #1]
90023b4a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023b4e:	900f      	str	r0, [sp, #60]	@ 0x3c
90023b50:	0e00      	lsrs	r0, r0, #24
90023b52:	9016      	str	r0, [sp, #88]	@ 0x58
90023b54:	b292      	uxth	r2, r2
90023b56:	9815      	ldr	r0, [sp, #84]	@ 0x54
90023b58:	b289      	uxth	r1, r1
90023b5a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023b5c:	fb02 f901 	mul.w	r9, r2, r1
90023b60:	0112      	lsls	r2, r2, #4
90023b62:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023b66:	eba2 0809 	sub.w	r8, r2, r9
90023b6a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023b6e:	b289      	uxth	r1, r1
90023b70:	fa1f f888 	uxth.w	r8, r8
90023b74:	1a52      	subs	r2, r2, r1
90023b76:	fb08 f000 	mul.w	r0, r8, r0
90023b7a:	b292      	uxth	r2, r2
90023b7c:	fb02 000e 	mla	r0, r2, lr, r0
90023b80:	fb01 0004 	mla	r0, r1, r4, r0
90023b84:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023b86:	fb09 0004 	mla	r0, r9, r4, r0
90023b8a:	f3c0 2007 	ubfx	r0, r0, #8, #8
90023b8e:	2800      	cmp	r0, #0
90023b90:	f000 80fa 	beq.w	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023b94:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023b98:	d01b      	beq.n	90023bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90023b9a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023b9e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023ba2:	fb0e fa0a 	mul.w	sl, lr, sl
90023ba6:	fb0e fe03 	mul.w	lr, lr, r3
90023baa:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023bae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023bb2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90023bb6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023bba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023bbe:	4453      	add	r3, sl
90023bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023bc4:	0a1b      	lsrs	r3, r3, #8
90023bc6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023bca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023bce:	ea43 030c 	orr.w	r3, r3, ip
90023bd2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023bd4:	2cff      	cmp	r4, #255	@ 0xff
90023bd6:	d021      	beq.n	90023c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023bd8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023bda:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023bde:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023be0:	fb04 fb0b 	mul.w	fp, r4, fp
90023be4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023be6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023bea:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023bec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023bf0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023bf4:	fb04 fa0a 	mul.w	sl, r4, sl
90023bf8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023bfc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023c00:	44de      	add	lr, fp
90023c02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023c0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023c16:	ea4e 040a 	orr.w	r4, lr, sl
90023c1a:	940e      	str	r4, [sp, #56]	@ 0x38
90023c1c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c1e:	2cff      	cmp	r4, #255	@ 0xff
90023c20:	d021      	beq.n	90023c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90023c22:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023c24:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023c28:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c2a:	fb04 fb0b 	mul.w	fp, r4, fp
90023c2e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023c30:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023c34:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c36:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023c3a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023c3e:	fb04 fa0a 	mul.w	sl, r4, sl
90023c42:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c46:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023c4a:	44de      	add	lr, fp
90023c4c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023c58:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c5c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023c60:	ea4e 040a 	orr.w	r4, lr, sl
90023c64:	940a      	str	r4, [sp, #40]	@ 0x28
90023c66:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023c68:	2cff      	cmp	r4, #255	@ 0xff
90023c6a:	d021      	beq.n	90023cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023c6c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023c6e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023c72:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023c74:	fb04 fb0b 	mul.w	fp, r4, fp
90023c78:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023c7a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023c7e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023c80:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023c84:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023c88:	fb04 fa0a 	mul.w	sl, r4, sl
90023c8c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c90:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023c94:	44de      	add	lr, fp
90023c96:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ca2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023ca6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023caa:	ea4e 040a 	orr.w	r4, lr, sl
90023cae:	940f      	str	r4, [sp, #60]	@ 0x3c
90023cb0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023cb2:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90023cb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023cba:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023cbe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023cc0:	fb08 fc0c 	mul.w	ip, r8, ip
90023cc4:	fb02 cc0e 	mla	ip, r2, lr, ip
90023cc8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023ccc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023cce:	fb01 cc0e 	mla	ip, r1, lr, ip
90023cd2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023cd6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023cd8:	fb09 cc0e 	mla	ip, r9, lr, ip
90023cdc:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023ce0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023ce2:	fb08 f80e 	mul.w	r8, r8, lr
90023ce6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023cea:	fb02 8303 	mla	r3, r2, r3, r8
90023cee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023cf0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023cf4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023cf8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023cfa:	fb01 330a 	mla	r3, r1, sl, r3
90023cfe:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90023d02:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90023d04:	fb09 3901 	mla	r9, r9, r1, r3
90023d08:	883b      	ldrh	r3, [r7, #0]
90023d0a:	4342      	muls	r2, r0
90023d0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023d10:	1c50      	adds	r0, r2, #1
90023d12:	1219      	asrs	r1, r3, #8
90023d14:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023d18:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023d1c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023d20:	ea4c 0c09 	orr.w	ip, ip, r9
90023d24:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023d28:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023d2c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023d30:	b2c0      	uxtb	r0, r0
90023d32:	fb12 f204 	smulbb	r2, r2, r4
90023d36:	fa5f fc8c 	uxtb.w	ip, ip
90023d3a:	fb1e fe04 	smulbb	lr, lr, r4
90023d3e:	fb01 2100 	mla	r1, r1, r0, r2
90023d42:	10da      	asrs	r2, r3, #3
90023d44:	fb1c fc04 	smulbb	ip, ip, r4
90023d48:	00db      	lsls	r3, r3, #3
90023d4a:	b289      	uxth	r1, r1
90023d4c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023d50:	b2db      	uxtb	r3, r3
90023d52:	fb02 e200 	mla	r2, r2, r0, lr
90023d56:	fb03 c300 	mla	r3, r3, r0, ip
90023d5a:	b292      	uxth	r2, r2
90023d5c:	fa1f fc83 	uxth.w	ip, r3
90023d60:	1c4b      	adds	r3, r1, #1
90023d62:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023d66:	f10c 0301 	add.w	r3, ip, #1
90023d6a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023d6e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90023d72:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023d76:	430b      	orrs	r3, r1
90023d78:	1c51      	adds	r1, r2, #1
90023d7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023d7e:	0952      	lsrs	r2, r2, #5
90023d80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023d84:	4313      	orrs	r3, r2
90023d86:	803b      	strh	r3, [r7, #0]
90023d88:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023d8a:	3702      	adds	r7, #2
90023d8c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023d8e:	441a      	add	r2, r3
90023d90:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023d92:	441d      	add	r5, r3
90023d94:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90023d96:	9229      	str	r2, [sp, #164]	@ 0xa4
90023d98:	3b01      	subs	r3, #1
90023d9a:	931a      	str	r3, [sp, #104]	@ 0x68
90023d9c:	e694      	b.n	90023ac8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90023d9e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023da0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023da2:	441c      	add	r4, r3
90023da4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023da6:	441d      	add	r5, r3
90023da8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023daa:	9429      	str	r4, [sp, #164]	@ 0xa4
90023dac:	3b01      	subs	r3, #1
90023dae:	9309      	str	r3, [sp, #36]	@ 0x24
90023db0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023db2:	3302      	adds	r3, #2
90023db4:	930c      	str	r3, [sp, #48]	@ 0x30
90023db6:	e667      	b.n	90023a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023db8:	d024      	beq.n	90023e04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90023dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023dbc:	982b      	ldr	r0, [sp, #172]	@ 0xac
90023dbe:	3b01      	subs	r3, #1
90023dc0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023dc2:	fb00 4003 	mla	r0, r0, r3, r4
90023dc6:	1400      	asrs	r0, r0, #16
90023dc8:	f53f ae7b 	bmi.w	90023ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023dcc:	3901      	subs	r1, #1
90023dce:	4288      	cmp	r0, r1
90023dd0:	f6bf ae77 	bge.w	90023ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023dd4:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90023dd6:	fb01 5303 	mla	r3, r1, r3, r5
90023dda:	141b      	asrs	r3, r3, #16
90023ddc:	f53f ae71 	bmi.w	90023ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023de0:	3a01      	subs	r2, #1
90023de2:	4293      	cmp	r3, r2
90023de4:	f6bf ae6d 	bge.w	90023ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023de8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023dec:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90023df0:	f1bb 0f00 	cmp.w	fp, #0
90023df4:	dc70      	bgt.n	90023ed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023df6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023df8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023dfc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023dfe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023e02:	930c      	str	r3, [sp, #48]	@ 0x30
90023e04:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023e06:	2b00      	cmp	r3, #0
90023e08:	f340 81be 	ble.w	90024188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023e0c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023e10:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023e12:	ee30 0a04 	vadd.f32	s0, s0, s8
90023e16:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023e1a:	eef0 6a62 	vmov.f32	s13, s5
90023e1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023e22:	ee31 1a05 	vadd.f32	s2, s2, s10
90023e26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e2a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90023e2e:	eef0 6a43 	vmov.f32	s13, s6
90023e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e36:	ee16 5a90 	vmov	r5, s13
90023e3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023e3e:	ee61 7a27 	vmul.f32	s15, s2, s15
90023e42:	ee77 2a62 	vsub.f32	s5, s14, s5
90023e46:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023e4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023e4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023e52:	ee12 2a90 	vmov	r2, s5
90023e56:	eef0 2a47 	vmov.f32	s5, s14
90023e5a:	fb92 f3f3 	sdiv	r3, r2, r3
90023e5e:	ee13 2a10 	vmov	r2, s6
90023e62:	932b      	str	r3, [sp, #172]	@ 0xac
90023e64:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023e66:	eeb0 3a67 	vmov.f32	s6, s15
90023e6a:	fb92 f3f3 	sdiv	r3, r2, r3
90023e6e:	932c      	str	r3, [sp, #176]	@ 0xb0
90023e70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023e72:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90023e74:	3b01      	subs	r3, #1
90023e76:	9319      	str	r3, [sp, #100]	@ 0x64
90023e78:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023e7a:	bf08      	it	eq
90023e7c:	4613      	moveq	r3, r2
90023e7e:	9309      	str	r3, [sp, #36]	@ 0x24
90023e80:	e5f4      	b.n	90023a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023e82:	2900      	cmp	r1, #0
90023e84:	f43f ae66 	beq.w	90023b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023e88:	f818 0000 	ldrb.w	r0, [r8, r0]
90023e8c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023e90:	900a      	str	r0, [sp, #40]	@ 0x28
90023e92:	0e00      	lsrs	r0, r0, #24
90023e94:	9013      	str	r0, [sp, #76]	@ 0x4c
90023e96:	e65d      	b.n	90023b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023e98:	f113 0801 	adds.w	r8, r3, #1
90023e9c:	f53f af74 	bmi.w	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023ea0:	4540      	cmp	r0, r8
90023ea2:	f6ff af71 	blt.w	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023ea6:	f11c 0801 	adds.w	r8, ip, #1
90023eaa:	f53f af6d 	bmi.w	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023eae:	45c6      	cmp	lr, r8
90023eb0:	f6ff af6a 	blt.w	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023eb4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90023eb6:	b200      	sxth	r0, r0
90023eb8:	9302      	str	r3, [sp, #8]
90023eba:	fa0f f38e 	sxth.w	r3, lr
90023ebe:	9000      	str	r0, [sp, #0]
90023ec0:	9301      	str	r3, [sp, #4]
90023ec2:	4633      	mov	r3, r6
90023ec4:	981d      	ldr	r0, [sp, #116]	@ 0x74
90023ec6:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023eca:	e9cd c203 	strd	ip, r2, [sp, #12]
90023ece:	4639      	mov	r1, r7
90023ed0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90023ed2:	f7ff fc63 	bl	9002379c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90023ed6:	e757      	b.n	90023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023ed8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023eda:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023ede:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023ee0:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023ee4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023ee6:	1427      	asrs	r7, r4, #16
90023ee8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023eea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023eee:	142b      	asrs	r3, r5, #16
90023ef0:	fb01 7303 	mla	r3, r1, r3, r7
90023ef4:	18e7      	adds	r7, r4, r3
90023ef6:	5ce3      	ldrb	r3, [r4, r3]
90023ef8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023efc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023f00:	2a00      	cmp	r2, #0
90023f02:	f000 8137 	beq.w	90024174 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90023f06:	f897 e001 	ldrb.w	lr, [r7, #1]
90023f0a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023f0e:	9410      	str	r4, [sp, #64]	@ 0x40
90023f10:	0e24      	lsrs	r4, r4, #24
90023f12:	9417      	str	r4, [sp, #92]	@ 0x5c
90023f14:	b170      	cbz	r0, 90023f34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023f16:	eb07 0e01 	add.w	lr, r7, r1
90023f1a:	5c79      	ldrb	r1, [r7, r1]
90023f1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023f20:	910b      	str	r1, [sp, #44]	@ 0x2c
90023f22:	0e09      	lsrs	r1, r1, #24
90023f24:	9114      	str	r1, [sp, #80]	@ 0x50
90023f26:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023f2a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023f2e:	9111      	str	r1, [sp, #68]	@ 0x44
90023f30:	0e09      	lsrs	r1, r1, #24
90023f32:	9118      	str	r1, [sp, #96]	@ 0x60
90023f34:	b292      	uxth	r2, r2
90023f36:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90023f38:	b280      	uxth	r0, r0
90023f3a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f3c:	fb02 f800 	mul.w	r8, r2, r0
90023f40:	0112      	lsls	r2, r2, #4
90023f42:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023f46:	eba2 0e08 	sub.w	lr, r2, r8
90023f4a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023f4e:	b280      	uxth	r0, r0
90023f50:	fa1f fe8e 	uxth.w	lr, lr
90023f54:	1a12      	subs	r2, r2, r0
90023f56:	fb0e f101 	mul.w	r1, lr, r1
90023f5a:	b292      	uxth	r2, r2
90023f5c:	fb02 110c 	mla	r1, r2, ip, r1
90023f60:	fb00 1104 	mla	r1, r0, r4, r1
90023f64:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023f66:	fb08 1104 	mla	r1, r8, r4, r1
90023f6a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023f6e:	2900      	cmp	r1, #0
90023f70:	f000 80f5 	beq.w	9002415e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023f74:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023f78:	d019      	beq.n	90023fae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023f7a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023f7e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023f82:	fb0c fa0a 	mul.w	sl, ip, sl
90023f86:	fb0c fc03 	mul.w	ip, ip, r3
90023f8a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023f8e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023f92:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023f96:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023f9a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023f9e:	4453      	add	r3, sl
90023fa0:	0a3f      	lsrs	r7, r7, #8
90023fa2:	0a1b      	lsrs	r3, r3, #8
90023fa4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023fa8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023fac:	433b      	orrs	r3, r7
90023fae:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023fb0:	2cff      	cmp	r4, #255	@ 0xff
90023fb2:	d020      	beq.n	90023ff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023fb4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023fb6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023fba:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023fbc:	4367      	muls	r7, r4
90023fbe:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023fc0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023fc4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023fc8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023fca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023fce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023fd2:	fb04 fa0a 	mul.w	sl, r4, sl
90023fd6:	44bc      	add	ip, r7
90023fd8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023fdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fe0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023fe4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023fe8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023fec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ff0:	ea4c 040a 	orr.w	r4, ip, sl
90023ff4:	9410      	str	r4, [sp, #64]	@ 0x40
90023ff6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023ff8:	2cff      	cmp	r4, #255	@ 0xff
90023ffa:	d020      	beq.n	9002403e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023ffc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023ffe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024002:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024004:	4367      	muls	r7, r4
90024006:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024008:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002400c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024010:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024012:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024016:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002401a:	fb04 fa0a 	mul.w	sl, r4, sl
9002401e:	44bc      	add	ip, r7
90024020:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024024:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024028:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002402c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024030:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024034:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024038:	ea4c 040a 	orr.w	r4, ip, sl
9002403c:	940b      	str	r4, [sp, #44]	@ 0x2c
9002403e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90024040:	2cff      	cmp	r4, #255	@ 0xff
90024042:	d020      	beq.n	90024086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90024044:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024046:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002404a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002404c:	4367      	muls	r7, r4
9002404e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024050:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024054:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024058:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002405a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002405e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024062:	fb04 fa0a 	mul.w	sl, r4, sl
90024066:	44bc      	add	ip, r7
90024068:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002406c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024070:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024074:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024078:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002407c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024080:	ea4c 040a 	orr.w	r4, ip, sl
90024084:	9411      	str	r4, [sp, #68]	@ 0x44
90024086:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024088:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002408c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024090:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024094:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024096:	fb0e f707 	mul.w	r7, lr, r7
9002409a:	fb02 770c 	mla	r7, r2, ip, r7
9002409e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900240a2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900240a4:	fb00 770c 	mla	r7, r0, ip, r7
900240a8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900240ac:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900240ae:	fb08 770c 	mla	r7, r8, ip, r7
900240b2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900240b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900240b8:	fb0e fe0c 	mul.w	lr, lr, ip
900240bc:	0a3f      	lsrs	r7, r7, #8
900240be:	fb02 e303 	mla	r3, r2, r3, lr
900240c2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900240c4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900240c8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900240cc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900240ce:	fb00 330a 	mla	r3, r0, sl, r3
900240d2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900240d6:	f8b9 0000 	ldrh.w	r0, [r9]
900240da:	fb08 3c0c 	mla	ip, r8, ip, r3
900240de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900240e0:	1202      	asrs	r2, r0, #8
900240e2:	434b      	muls	r3, r1
900240e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240e8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900240ec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900240f0:	1c59      	adds	r1, r3, #1
900240f2:	ea47 070c 	orr.w	r7, r7, ip
900240f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900240fa:	0c3b      	lsrs	r3, r7, #16
900240fc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024100:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024104:	b2ff      	uxtb	r7, r7
90024106:	fb13 f304 	smulbb	r3, r3, r4
9002410a:	b2c9      	uxtb	r1, r1
9002410c:	fb1c fc04 	smulbb	ip, ip, r4
90024110:	fb02 3201 	mla	r2, r2, r1, r3
90024114:	10c3      	asrs	r3, r0, #3
90024116:	fb17 f704 	smulbb	r7, r7, r4
9002411a:	00c0      	lsls	r0, r0, #3
9002411c:	b292      	uxth	r2, r2
9002411e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024122:	b2c0      	uxtb	r0, r0
90024124:	fb03 c301 	mla	r3, r3, r1, ip
90024128:	f102 0c01 	add.w	ip, r2, #1
9002412c:	fb00 7001 	mla	r0, r0, r1, r7
90024130:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90024134:	b280      	uxth	r0, r0
90024136:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
9002413a:	b29b      	uxth	r3, r3
9002413c:	1c42      	adds	r2, r0, #1
9002413e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024142:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024146:	ea42 020c 	orr.w	r2, r2, ip
9002414a:	f103 0c01 	add.w	ip, r3, #1
9002414e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024152:	095b      	lsrs	r3, r3, #5
90024154:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024158:	431a      	orrs	r2, r3
9002415a:	f8a9 2000 	strh.w	r2, [r9]
9002415e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024160:	f109 0902 	add.w	r9, r9, #2
90024164:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024166:	f10b 3bff 	add.w	fp, fp, #4294967295
9002416a:	441a      	add	r2, r3
9002416c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002416e:	9229      	str	r2, [sp, #164]	@ 0xa4
90024170:	441d      	add	r5, r3
90024172:	e63d      	b.n	90023df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90024174:	2800      	cmp	r0, #0
90024176:	f43f aedd 	beq.w	90023f34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002417a:	5c79      	ldrb	r1, [r7, r1]
9002417c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024180:	910b      	str	r1, [sp, #44]	@ 0x2c
90024182:	0e09      	lsrs	r1, r1, #24
90024184:	9114      	str	r1, [sp, #80]	@ 0x50
90024186:	e6d5      	b.n	90023f34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024188:	b01f      	add	sp, #124	@ 0x7c
9002418a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002418e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002418e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024192:	b089      	sub	sp, #36	@ 0x24
90024194:	9101      	str	r1, [sp, #4]
90024196:	9801      	ldr	r0, [sp, #4]
90024198:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
9002419c:	8800      	ldrh	r0, [r0, #0]
9002419e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900241a2:	1206      	asrs	r6, r0, #8
900241a4:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900241a8:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900241ac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900241b0:	9602      	str	r6, [sp, #8]
900241b2:	10c6      	asrs	r6, r0, #3
900241b4:	00c0      	lsls	r0, r0, #3
900241b6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900241ba:	b2c0      	uxtb	r0, r0
900241bc:	9603      	str	r6, [sp, #12]
900241be:	9004      	str	r0, [sp, #16]
900241c0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900241c4:	fb07 100c 	mla	r0, r7, ip, r1
900241c8:	2f00      	cmp	r7, #0
900241ca:	eb02 0e00 	add.w	lr, r2, r0
900241ce:	f2c0 810a 	blt.w	900243e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900241d2:	45b8      	cmp	r8, r7
900241d4:	f340 8107 	ble.w	900243e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900241d8:	2900      	cmp	r1, #0
900241da:	f2c0 8102 	blt.w	900243e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900241de:	458c      	cmp	ip, r1
900241e0:	f340 80ff 	ble.w	900243e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900241e4:	5c12      	ldrb	r2, [r2, r0]
900241e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900241ea:	1c4a      	adds	r2, r1, #1
900241ec:	f100 80fe 	bmi.w	900243ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900241f0:	4594      	cmp	ip, r2
900241f2:	f340 80fb 	ble.w	900243ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900241f6:	2d00      	cmp	r5, #0
900241f8:	f000 80fa 	beq.w	900243f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900241fc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024200:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90024204:	3701      	adds	r7, #1
90024206:	f100 80f7 	bmi.w	900243f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002420a:	45b8      	cmp	r8, r7
9002420c:	f340 80f4 	ble.w	900243f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024210:	2c00      	cmp	r4, #0
90024212:	f000 80f4 	beq.w	900243fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90024216:	2900      	cmp	r1, #0
90024218:	eb0e 020c 	add.w	r2, lr, ip
9002421c:	f2c0 80ea 	blt.w	900243f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024220:	458c      	cmp	ip, r1
90024222:	f340 80e7 	ble.w	900243f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024226:	f81e 700c 	ldrb.w	r7, [lr, ip]
9002422a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002422e:	3101      	adds	r1, #1
90024230:	f100 80e8 	bmi.w	90024404 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024234:	458c      	cmp	ip, r1
90024236:	f340 80e5 	ble.w	90024404 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002423a:	2d00      	cmp	r5, #0
9002423c:	f000 80e4 	beq.w	90024408 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90024240:	7852      	ldrb	r2, [r2, #1]
90024242:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024246:	0e0b      	lsrs	r3, r1, #24
90024248:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
9002424c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90024250:	9300      	str	r3, [sp, #0]
90024252:	b2a4      	uxth	r4, r4
90024254:	b2ab      	uxth	r3, r5
90024256:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
9002425a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002425e:	fb03 f904 	mul.w	r9, r3, r4
90024262:	011b      	lsls	r3, r3, #4
90024264:	fb0a f505 	mul.w	r5, sl, r5
90024268:	ea4f 6817 	mov.w	r8, r7, lsr #24
9002426c:	eba3 0e09 	sub.w	lr, r3, r9
90024270:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90024274:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90024278:	0a28      	lsrs	r0, r5, #8
9002427a:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
9002427e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024282:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90024286:	fb0a f303 	mul.w	r3, sl, r3
9002428a:	fb08 f707 	mul.w	r7, r8, r7
9002428e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90024292:	4405      	add	r5, r0
90024294:	fb08 fc0c 	mul.w	ip, r8, ip
90024298:	b2a4      	uxth	r4, r4
9002429a:	0a2d      	lsrs	r5, r5, #8
9002429c:	fa1f fe8e 	uxth.w	lr, lr
900242a0:	1b12      	subs	r2, r2, r4
900242a2:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900242a6:	b292      	uxth	r2, r2
900242a8:	9005      	str	r0, [sp, #20]
900242aa:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900242ae:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900242b2:	ea4f 201c 	mov.w	r0, ip, lsr #8
900242b6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900242ba:	0a1b      	lsrs	r3, r3, #8
900242bc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900242c0:	9306      	str	r3, [sp, #24]
900242c2:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900242c6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900242ca:	4460      	add	r0, ip
900242cc:	fb0b f303 	mul.w	r3, fp, r3
900242d0:	fb0b f606 	mul.w	r6, fp, r6
900242d4:	0a00      	lsrs	r0, r0, #8
900242d6:	0a1d      	lsrs	r5, r3, #8
900242d8:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900242dc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900242e0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900242e4:	441d      	add	r5, r3
900242e6:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900242ea:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900242ee:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900242f2:	0a2d      	lsrs	r5, r5, #8
900242f4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900242f8:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
900242fc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024300:	0a36      	lsrs	r6, r6, #8
90024302:	0a1b      	lsrs	r3, r3, #8
90024304:	fb05 f50e 	mul.w	r5, r5, lr
90024308:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
9002430c:	9307      	str	r3, [sp, #28]
9002430e:	0e0b      	lsrs	r3, r1, #24
90024310:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024314:	fb0e f606 	mul.w	r6, lr, r6
90024318:	435f      	muls	r7, r3
9002431a:	4359      	muls	r1, r3
9002431c:	9b05      	ldr	r3, [sp, #20]
9002431e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024322:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024326:	fb03 5502 	mla	r5, r3, r2, r5
9002432a:	9b06      	ldr	r3, [sp, #24]
9002432c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024330:	fb0e fe0b 	mul.w	lr, lr, fp
90024334:	44bc      	add	ip, r7
90024336:	f501 7780 	add.w	r7, r1, #256	@ 0x100
9002433a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002433e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90024342:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024346:	0a09      	lsrs	r1, r1, #8
90024348:	fb0c 5509 	mla	r5, ip, r9, r5
9002434c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024350:	fb00 5504 	mla	r5, r0, r4, r5
90024354:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90024358:	9b07      	ldr	r3, [sp, #28]
9002435a:	fb02 6000 	mla	r0, r2, r0, r6
9002435e:	0a2d      	lsrs	r5, r5, #8
90024360:	fb02 e20a 	mla	r2, r2, sl, lr
90024364:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024368:	fb09 0001 	mla	r0, r9, r1, r0
9002436c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024370:	fb04 0003 	mla	r0, r4, r3, r0
90024374:	9b00      	ldr	r3, [sp, #0]
90024376:	fb04 2408 	mla	r4, r4, r8, r2
9002437a:	9a04      	ldr	r2, [sp, #16]
9002437c:	0a00      	lsrs	r0, r0, #8
9002437e:	fb09 4903 	mla	r9, r9, r3, r4
90024382:	9b02      	ldr	r3, [sp, #8]
90024384:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90024388:	ea6f 2929 	mvn.w	r9, r9, asr #8
9002438c:	4305      	orrs	r5, r0
9002438e:	fa5f f989 	uxtb.w	r9, r9
90024392:	fb03 f109 	mul.w	r1, r3, r9
90024396:	9b03      	ldr	r3, [sp, #12]
90024398:	fb03 f309 	mul.w	r3, r3, r9
9002439c:	fb02 f909 	mul.w	r9, r2, r9
900243a0:	1c4a      	adds	r2, r1, #1
900243a2:	1c58      	adds	r0, r3, #1
900243a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900243a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900243ac:	0c2a      	lsrs	r2, r5, #16
900243ae:	0a2b      	lsrs	r3, r5, #8
900243b0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900243b4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900243b8:	0212      	lsls	r2, r2, #8
900243ba:	00db      	lsls	r3, r3, #3
900243bc:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900243c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900243c4:	4313      	orrs	r3, r2
900243c6:	f109 0201 	add.w	r2, r9, #1
900243ca:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900243ce:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900243d2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900243d6:	431d      	orrs	r5, r3
900243d8:	9b01      	ldr	r3, [sp, #4]
900243da:	801d      	strh	r5, [r3, #0]
900243dc:	b009      	add	sp, #36	@ 0x24
900243de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900243e2:	2000      	movs	r0, #0
900243e4:	e701      	b.n	900241ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900243e6:	2600      	movs	r6, #0
900243e8:	4630      	mov	r0, r6
900243ea:	e70b      	b.n	90024204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900243ec:	2600      	movs	r6, #0
900243ee:	e709      	b.n	90024204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900243f0:	462e      	mov	r6, r5
900243f2:	e707      	b.n	90024204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900243f4:	2700      	movs	r7, #0
900243f6:	e71a      	b.n	9002422e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900243f8:	2100      	movs	r1, #0
900243fa:	460f      	mov	r7, r1
900243fc:	e723      	b.n	90024246 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900243fe:	4621      	mov	r1, r4
90024400:	4627      	mov	r7, r4
90024402:	e720      	b.n	90024246 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024404:	2100      	movs	r1, #0
90024406:	e71e      	b.n	90024246 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024408:	4629      	mov	r1, r5
9002440a:	e71c      	b.n	90024246 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

9002440c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002440c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024410:	b09b      	sub	sp, #108	@ 0x6c
90024412:	9218      	str	r2, [sp, #96]	@ 0x60
90024414:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024416:	9019      	str	r0, [sp, #100]	@ 0x64
90024418:	9116      	str	r1, [sp, #88]	@ 0x58
9002441a:	6850      	ldr	r0, [r2, #4]
9002441c:	9307      	str	r3, [sp, #28]
9002441e:	6812      	ldr	r2, [r2, #0]
90024420:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90024422:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90024426:	fb00 1303 	mla	r3, r0, r3, r1
9002442a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002442e:	930a      	str	r3, [sp, #40]	@ 0x28
90024430:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024432:	681b      	ldr	r3, [r3, #0]
90024434:	930f      	str	r3, [sp, #60]	@ 0x3c
90024436:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024438:	685e      	ldr	r6, [r3, #4]
9002443a:	3604      	adds	r6, #4
9002443c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002443e:	2b00      	cmp	r3, #0
90024440:	dc03      	bgt.n	9002444a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90024442:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024444:	2b00      	cmp	r3, #0
90024446:	f340 8373 	ble.w	90024b30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002444a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002444c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024450:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024454:	1e48      	subs	r0, r1, #1
90024456:	1e57      	subs	r7, r2, #1
90024458:	9b07      	ldr	r3, [sp, #28]
9002445a:	2b00      	cmp	r3, #0
9002445c:	f340 818f 	ble.w	9002477e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90024460:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024462:	142b      	asrs	r3, r5, #16
90024464:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024468:	d406      	bmi.n	90024478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002446a:	4584      	cmp	ip, r0
9002446c:	da04      	bge.n	90024478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002446e:	2b00      	cmp	r3, #0
90024470:	db02      	blt.n	90024478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024472:	42bb      	cmp	r3, r7
90024474:	f2c0 8184 	blt.w	90024780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90024478:	f11c 0c01 	adds.w	ip, ip, #1
9002447c:	f100 8172 	bmi.w	90024764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024480:	4561      	cmp	r1, ip
90024482:	f2c0 816f 	blt.w	90024764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024486:	3301      	adds	r3, #1
90024488:	f100 816c 	bmi.w	90024764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002448c:	429a      	cmp	r2, r3
9002448e:	f2c0 8169 	blt.w	90024764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024492:	9b07      	ldr	r3, [sp, #28]
90024494:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90024496:	9317      	str	r3, [sp, #92]	@ 0x5c
90024498:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002449a:	2b00      	cmp	r3, #0
9002449c:	f340 818e 	ble.w	900247bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900244a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900244a2:	ea4f 4c25 	mov.w	ip, r5, asr #16
900244a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900244aa:	f3c3 3203 	ubfx	r2, r3, #12, #4
900244ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900244b0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900244b4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900244b6:	141b      	asrs	r3, r3, #16
900244b8:	f100 81d1 	bmi.w	9002485e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900244bc:	f101 38ff 	add.w	r8, r1, #4294967295
900244c0:	4543      	cmp	r3, r8
900244c2:	f280 81cc 	bge.w	9002485e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900244c6:	f1bc 0f00 	cmp.w	ip, #0
900244ca:	f2c0 81c8 	blt.w	9002485e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900244ce:	f10e 38ff 	add.w	r8, lr, #4294967295
900244d2:	45c4      	cmp	ip, r8
900244d4:	f280 81c3 	bge.w	9002485e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900244d8:	b209      	sxth	r1, r1
900244da:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900244dc:	fb0c 3301 	mla	r3, ip, r1, r3
900244e0:	eb04 0803 	add.w	r8, r4, r3
900244e4:	5ce3      	ldrb	r3, [r4, r3]
900244e6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900244ea:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900244ee:	2a00      	cmp	r2, #0
900244f0:	f000 81aa 	beq.w	90024848 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900244f4:	f898 c001 	ldrb.w	ip, [r8, #1]
900244f8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900244fc:	940b      	str	r4, [sp, #44]	@ 0x2c
900244fe:	0e24      	lsrs	r4, r4, #24
90024500:	9412      	str	r4, [sp, #72]	@ 0x48
90024502:	b178      	cbz	r0, 90024524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024504:	eb08 0c01 	add.w	ip, r8, r1
90024508:	f818 1001 	ldrb.w	r1, [r8, r1]
9002450c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024510:	9108      	str	r1, [sp, #32]
90024512:	0e09      	lsrs	r1, r1, #24
90024514:	9110      	str	r1, [sp, #64]	@ 0x40
90024516:	f89c 1001 	ldrb.w	r1, [ip, #1]
9002451a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002451e:	910c      	str	r1, [sp, #48]	@ 0x30
90024520:	0e09      	lsrs	r1, r1, #24
90024522:	9113      	str	r1, [sp, #76]	@ 0x4c
90024524:	b292      	uxth	r2, r2
90024526:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024528:	b280      	uxth	r0, r0
9002452a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002452c:	fb02 f900 	mul.w	r9, r2, r0
90024530:	0112      	lsls	r2, r2, #4
90024532:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024536:	eba2 0809 	sub.w	r8, r2, r9
9002453a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002453e:	b280      	uxth	r0, r0
90024540:	fa1f f888 	uxth.w	r8, r8
90024544:	1a12      	subs	r2, r2, r0
90024546:	fb08 f101 	mul.w	r1, r8, r1
9002454a:	b292      	uxth	r2, r2
9002454c:	fb02 110e 	mla	r1, r2, lr, r1
90024550:	fb00 1104 	mla	r1, r0, r4, r1
90024554:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024556:	fb09 1104 	mla	r1, r9, r4, r1
9002455a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002455e:	2900      	cmp	r1, #0
90024560:	f000 80f5 	beq.w	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024564:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024568:	d01b      	beq.n	900245a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002456a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002456e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024572:	fb0e fa0a 	mul.w	sl, lr, sl
90024576:	fb0e fe03 	mul.w	lr, lr, r3
9002457a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002457e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024582:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024586:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002458a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002458e:	4453      	add	r3, sl
90024590:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024594:	0a1b      	lsrs	r3, r3, #8
90024596:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002459a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002459e:	ea43 030c 	orr.w	r3, r3, ip
900245a2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900245a4:	2cff      	cmp	r4, #255	@ 0xff
900245a6:	d021      	beq.n	900245ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900245a8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900245aa:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900245ae:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900245b0:	fb04 fb0b 	mul.w	fp, r4, fp
900245b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900245b6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900245ba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900245bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900245c0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900245c4:	fb04 fa0a 	mul.w	sl, r4, sl
900245c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900245cc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900245d0:	44de      	add	lr, fp
900245d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900245d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900245da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900245de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900245e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900245e6:	ea4e 040a 	orr.w	r4, lr, sl
900245ea:	940b      	str	r4, [sp, #44]	@ 0x2c
900245ec:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900245ee:	2cff      	cmp	r4, #255	@ 0xff
900245f0:	d021      	beq.n	90024636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900245f2:	9c08      	ldr	r4, [sp, #32]
900245f4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900245f8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900245fa:	fb04 fb0b 	mul.w	fp, r4, fp
900245fe:	9c08      	ldr	r4, [sp, #32]
90024600:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024604:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024606:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002460a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002460e:	fb04 fa0a 	mul.w	sl, r4, sl
90024612:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024616:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002461a:	44de      	add	lr, fp
9002461c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024620:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024624:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024628:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002462c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024630:	ea4e 040a 	orr.w	r4, lr, sl
90024634:	9408      	str	r4, [sp, #32]
90024636:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024638:	2cff      	cmp	r4, #255	@ 0xff
9002463a:	d021      	beq.n	90024680 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
9002463c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002463e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024642:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024644:	fb04 fb0b 	mul.w	fp, r4, fp
90024648:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002464a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002464e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024650:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024654:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024658:	fb04 fa0a 	mul.w	sl, r4, sl
9002465c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024660:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024664:	44de      	add	lr, fp
90024666:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002466a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002466e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024672:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024676:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002467a:	ea4e 040a 	orr.w	r4, lr, sl
9002467e:	940c      	str	r4, [sp, #48]	@ 0x30
90024680:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024682:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90024686:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002468a:	43c9      	mvns	r1, r1
9002468c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024690:	9c08      	ldr	r4, [sp, #32]
90024692:	fb08 fc0c 	mul.w	ip, r8, ip
90024696:	fb02 cc0e 	mla	ip, r2, lr, ip
9002469a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002469e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900246a0:	fb00 cc0e 	mla	ip, r0, lr, ip
900246a4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900246a8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900246aa:	fb09 cc0e 	mla	ip, r9, lr, ip
900246ae:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900246b2:	fb08 f80e 	mul.w	r8, r8, lr
900246b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900246ba:	fa5f fe81 	uxtb.w	lr, r1
900246be:	fb02 8303 	mla	r3, r2, r3, r8
900246c2:	9a08      	ldr	r2, [sp, #32]
900246c4:	f8b7 8000 	ldrh.w	r8, [r7]
900246c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900246cc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900246d0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900246d2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900246d6:	fb00 330a 	mla	r3, r0, sl, r3
900246da:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
900246de:	ea4f 2228 	mov.w	r2, r8, asr #8
900246e2:	fb09 3900 	mla	r9, r9, r0, r3
900246e6:	ea4f 00e8 	mov.w	r0, r8, asr #3
900246ea:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900246ee:	b2c9      	uxtb	r1, r1
900246f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900246f4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900246f8:	fb02 f20e 	mul.w	r2, r2, lr
900246fc:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024700:	fb00 f00e 	mul.w	r0, r0, lr
90024704:	1c53      	adds	r3, r2, #1
90024706:	fb01 f10e 	mul.w	r1, r1, lr
9002470a:	ea4c 0c09 	orr.w	ip, ip, r9
9002470e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90024712:	ea4f 431c 	mov.w	r3, ip, lsr #16
90024716:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002471a:	4a60      	ldr	r2, [pc, #384]	@ (9002489c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
9002471c:	b2db      	uxtb	r3, r3
9002471e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90024722:	1c43      	adds	r3, r0, #1
90024724:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024728:	ea4f 231c 	mov.w	r3, ip, lsr #8
9002472c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024730:	00db      	lsls	r3, r3, #3
90024732:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024736:	4313      	orrs	r3, r2
90024738:	1c4a      	adds	r2, r1, #1
9002473a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002473e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90024742:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90024746:	ea4c 0c03 	orr.w	ip, ip, r3
9002474a:	f8a7 c000 	strh.w	ip, [r7]
9002474e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024750:	3702      	adds	r7, #2
90024752:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024754:	441a      	add	r2, r3
90024756:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024758:	441d      	add	r5, r3
9002475a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002475c:	9225      	str	r2, [sp, #148]	@ 0x94
9002475e:	3b01      	subs	r3, #1
90024760:	9317      	str	r3, [sp, #92]	@ 0x5c
90024762:	e699      	b.n	90024498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024764:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024766:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024768:	441c      	add	r4, r3
9002476a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002476c:	441d      	add	r5, r3
9002476e:	9b07      	ldr	r3, [sp, #28]
90024770:	9425      	str	r4, [sp, #148]	@ 0x94
90024772:	3b01      	subs	r3, #1
90024774:	9307      	str	r3, [sp, #28]
90024776:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024778:	3302      	adds	r3, #2
9002477a:	930a      	str	r3, [sp, #40]	@ 0x28
9002477c:	e66c      	b.n	90024458 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9002477e:	d024      	beq.n	900247ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90024780:	9b07      	ldr	r3, [sp, #28]
90024782:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90024784:	3b01      	subs	r3, #1
90024786:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024788:	fb00 4003 	mla	r0, r0, r3, r4
9002478c:	1400      	asrs	r0, r0, #16
9002478e:	f53f ae80 	bmi.w	90024492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024792:	3901      	subs	r1, #1
90024794:	4288      	cmp	r0, r1
90024796:	f6bf ae7c 	bge.w	90024492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002479a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9002479c:	fb01 5303 	mla	r3, r1, r3, r5
900247a0:	141b      	asrs	r3, r3, #16
900247a2:	f53f ae76 	bmi.w	90024492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900247a6:	3a01      	subs	r2, #1
900247a8:	4293      	cmp	r3, r2
900247aa:	f6bf ae72 	bge.w	90024492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900247ae:	f8dd b01c 	ldr.w	fp, [sp, #28]
900247b2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900247b6:	f1bb 0f00 	cmp.w	fp, #0
900247ba:	dc71      	bgt.n	900248a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900247bc:	9b07      	ldr	r3, [sp, #28]
900247be:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900247c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900247c4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900247c8:	930a      	str	r3, [sp, #40]	@ 0x28
900247ca:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900247cc:	2b00      	cmp	r3, #0
900247ce:	f340 81af 	ble.w	90024b30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900247d2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900247d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900247d8:	ee30 0a04 	vadd.f32	s0, s0, s8
900247dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
900247e0:	eef0 6a62 	vmov.f32	s13, s5
900247e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900247e8:	ee31 1a05 	vadd.f32	s2, s2, s10
900247ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900247f0:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
900247f4:	eef0 6a43 	vmov.f32	s13, s6
900247f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900247fc:	ee16 5a90 	vmov	r5, s13
90024800:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024804:	ee61 7a27 	vmul.f32	s15, s2, s15
90024808:	ee77 2a62 	vsub.f32	s5, s14, s5
9002480c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024810:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024818:	ee12 2a90 	vmov	r2, s5
9002481c:	eef0 2a47 	vmov.f32	s5, s14
90024820:	fb92 f3f3 	sdiv	r3, r2, r3
90024824:	ee13 2a10 	vmov	r2, s6
90024828:	9327      	str	r3, [sp, #156]	@ 0x9c
9002482a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002482c:	eeb0 3a67 	vmov.f32	s6, s15
90024830:	fb92 f3f3 	sdiv	r3, r2, r3
90024834:	9328      	str	r3, [sp, #160]	@ 0xa0
90024836:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024838:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002483a:	3b01      	subs	r3, #1
9002483c:	9316      	str	r3, [sp, #88]	@ 0x58
9002483e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024840:	bf08      	it	eq
90024842:	4613      	moveq	r3, r2
90024844:	9307      	str	r3, [sp, #28]
90024846:	e5f9      	b.n	9002443c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90024848:	2800      	cmp	r0, #0
9002484a:	f43f ae6b 	beq.w	90024524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002484e:	f818 1001 	ldrb.w	r1, [r8, r1]
90024852:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024856:	9108      	str	r1, [sp, #32]
90024858:	0e09      	lsrs	r1, r1, #24
9002485a:	9110      	str	r1, [sp, #64]	@ 0x40
9002485c:	e662      	b.n	90024524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002485e:	f113 0801 	adds.w	r8, r3, #1
90024862:	f53f af74 	bmi.w	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024866:	4541      	cmp	r1, r8
90024868:	f6ff af71 	blt.w	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002486c:	f11c 0801 	adds.w	r8, ip, #1
90024870:	f53f af6d 	bmi.w	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024874:	45c6      	cmp	lr, r8
90024876:	f6ff af6a 	blt.w	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002487a:	b209      	sxth	r1, r1
9002487c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90024880:	fa0f f38e 	sxth.w	r3, lr
90024884:	9100      	str	r1, [sp, #0]
90024886:	4639      	mov	r1, r7
90024888:	9301      	str	r3, [sp, #4]
9002488a:	4633      	mov	r3, r6
9002488c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90024890:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024892:	9819      	ldr	r0, [sp, #100]	@ 0x64
90024894:	f7ff fc7b 	bl	9002418e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90024898:	e759      	b.n	9002474e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002489a:	bf00      	nop
9002489c:	fffff800 	.word	0xfffff800
900248a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900248a2:	f3c5 3003 	ubfx	r0, r5, #12, #4
900248a6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900248a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
900248ac:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900248ae:	1427      	asrs	r7, r4, #16
900248b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900248b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900248b6:	142b      	asrs	r3, r5, #16
900248b8:	fb01 7303 	mla	r3, r1, r3, r7
900248bc:	18e7      	adds	r7, r4, r3
900248be:	5ce3      	ldrb	r3, [r4, r3]
900248c0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900248c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900248c8:	2a00      	cmp	r2, #0
900248ca:	f000 8127 	beq.w	90024b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900248ce:	f897 e001 	ldrb.w	lr, [r7, #1]
900248d2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900248d6:	940d      	str	r4, [sp, #52]	@ 0x34
900248d8:	0e24      	lsrs	r4, r4, #24
900248da:	9414      	str	r4, [sp, #80]	@ 0x50
900248dc:	b170      	cbz	r0, 900248fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900248de:	eb07 0e01 	add.w	lr, r7, r1
900248e2:	5c79      	ldrb	r1, [r7, r1]
900248e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900248e8:	9109      	str	r1, [sp, #36]	@ 0x24
900248ea:	0e09      	lsrs	r1, r1, #24
900248ec:	9111      	str	r1, [sp, #68]	@ 0x44
900248ee:	f89e 1001 	ldrb.w	r1, [lr, #1]
900248f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900248f6:	910e      	str	r1, [sp, #56]	@ 0x38
900248f8:	0e09      	lsrs	r1, r1, #24
900248fa:	9115      	str	r1, [sp, #84]	@ 0x54
900248fc:	b292      	uxth	r2, r2
900248fe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024900:	b280      	uxth	r0, r0
90024902:	fb02 f800 	mul.w	r8, r2, r0
90024906:	0112      	lsls	r2, r2, #4
90024908:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002490c:	eba2 0e08 	sub.w	lr, r2, r8
90024910:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90024914:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90024916:	b280      	uxth	r0, r0
90024918:	fa1f fe8e 	uxth.w	lr, lr
9002491c:	1a09      	subs	r1, r1, r0
9002491e:	fb0e f202 	mul.w	r2, lr, r2
90024922:	b289      	uxth	r1, r1
90024924:	fb01 220c 	mla	r2, r1, ip, r2
90024928:	fb00 2204 	mla	r2, r0, r4, r2
9002492c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002492e:	fb08 2204 	mla	r2, r8, r4, r2
90024932:	f3c2 2207 	ubfx	r2, r2, #8, #8
90024936:	2a00      	cmp	r2, #0
90024938:	f000 80e5 	beq.w	90024b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
9002493c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024940:	d019      	beq.n	90024976 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90024942:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024946:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002494a:	fb0c fa0a 	mul.w	sl, ip, sl
9002494e:	fb0c fc03 	mul.w	ip, ip, r3
90024952:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024956:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002495a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002495e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024962:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024966:	4453      	add	r3, sl
90024968:	0a3f      	lsrs	r7, r7, #8
9002496a:	0a1b      	lsrs	r3, r3, #8
9002496c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024970:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024974:	433b      	orrs	r3, r7
90024976:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024978:	2cff      	cmp	r4, #255	@ 0xff
9002497a:	d020      	beq.n	900249be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
9002497c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002497e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024982:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024984:	4367      	muls	r7, r4
90024986:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024988:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002498c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024990:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024992:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024996:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002499a:	fb04 fa0a 	mul.w	sl, r4, sl
9002499e:	44bc      	add	ip, r7
900249a0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900249a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900249a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900249ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900249b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900249b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900249b8:	ea4c 040a 	orr.w	r4, ip, sl
900249bc:	940d      	str	r4, [sp, #52]	@ 0x34
900249be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900249c0:	2cff      	cmp	r4, #255	@ 0xff
900249c2:	d020      	beq.n	90024a06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900249c4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900249c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900249ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900249cc:	4367      	muls	r7, r4
900249ce:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900249d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900249d4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900249d8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900249da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900249de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900249e2:	fb04 fa0a 	mul.w	sl, r4, sl
900249e6:	44bc      	add	ip, r7
900249e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900249ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900249f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900249f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900249f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900249fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024a00:	ea4c 040a 	orr.w	r4, ip, sl
90024a04:	9409      	str	r4, [sp, #36]	@ 0x24
90024a06:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024a08:	2cff      	cmp	r4, #255	@ 0xff
90024a0a:	d020      	beq.n	90024a4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90024a0c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a0e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024a12:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024a14:	4367      	muls	r7, r4
90024a16:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024a1c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024a20:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024a22:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024a26:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024a2a:	fb04 fa0a 	mul.w	sl, r4, sl
90024a2e:	44bc      	add	ip, r7
90024a30:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024a34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024a38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024a3c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024a40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024a44:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024a48:	ea4c 040a 	orr.w	r4, ip, sl
90024a4c:	940e      	str	r4, [sp, #56]	@ 0x38
90024a4e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024a50:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90024a54:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024a58:	43d2      	mvns	r2, r2
90024a5a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024a5e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90024a60:	b2d2      	uxtb	r2, r2
90024a62:	fb0e f707 	mul.w	r7, lr, r7
90024a66:	fb01 770c 	mla	r7, r1, ip, r7
90024a6a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024a6e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a70:	fb00 770c 	mla	r7, r0, ip, r7
90024a74:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024a78:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024a7a:	fb08 770c 	mla	r7, r8, ip, r7
90024a7e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90024a82:	fb0e fe0c 	mul.w	lr, lr, ip
90024a86:	0a3f      	lsrs	r7, r7, #8
90024a88:	fb01 e303 	mla	r3, r1, r3, lr
90024a8c:	9909      	ldr	r1, [sp, #36]	@ 0x24
90024a8e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90024a92:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90024a96:	990e      	ldr	r1, [sp, #56]	@ 0x38
90024a98:	fb00 330a 	mla	r3, r0, sl, r3
90024a9c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90024aa0:	fb08 3c0c 	mla	ip, r8, ip, r3
90024aa4:	f8b9 3000 	ldrh.w	r3, [r9]
90024aa8:	1218      	asrs	r0, r3, #8
90024aaa:	10d9      	asrs	r1, r3, #3
90024aac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ab0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024ab4:	00db      	lsls	r3, r3, #3
90024ab6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024aba:	4350      	muls	r0, r2
90024abc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024ac0:	b2db      	uxtb	r3, r3
90024ac2:	4351      	muls	r1, r2
90024ac4:	ea47 070c 	orr.w	r7, r7, ip
90024ac8:	4353      	muls	r3, r2
90024aca:	1c42      	adds	r2, r0, #1
90024acc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024ad0:	0c3a      	lsrs	r2, r7, #16
90024ad2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024ad6:	4a18      	ldr	r2, [pc, #96]	@ (90024b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024ad8:	b2c0      	uxtb	r0, r0
90024ada:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90024ade:	1c4a      	adds	r2, r1, #1
90024ae0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024ae4:	0a3a      	lsrs	r2, r7, #8
90024ae6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024aea:	00c9      	lsls	r1, r1, #3
90024aec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024af0:	4301      	orrs	r1, r0
90024af2:	1c58      	adds	r0, r3, #1
90024af4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024af8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024afc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90024b00:	4308      	orrs	r0, r1
90024b02:	f8a9 0000 	strh.w	r0, [r9]
90024b06:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024b08:	f109 0902 	add.w	r9, r9, #2
90024b0c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024b0e:	f10b 3bff 	add.w	fp, fp, #4294967295
90024b12:	441a      	add	r2, r3
90024b14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024b16:	9225      	str	r2, [sp, #148]	@ 0x94
90024b18:	441d      	add	r5, r3
90024b1a:	e64c      	b.n	900247b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024b1c:	2800      	cmp	r0, #0
90024b1e:	f43f aeed 	beq.w	900248fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024b22:	5c79      	ldrb	r1, [r7, r1]
90024b24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024b28:	9109      	str	r1, [sp, #36]	@ 0x24
90024b2a:	0e09      	lsrs	r1, r1, #24
90024b2c:	9111      	str	r1, [sp, #68]	@ 0x44
90024b2e:	e6e5      	b.n	900248fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024b30:	b01b      	add	sp, #108	@ 0x6c
90024b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024b36:	bf00      	nop
90024b38:	fffff800 	.word	0xfffff800

90024b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90024b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b40:	b085      	sub	sp, #20
90024b42:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024b46:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024b4a:	2800      	cmp	r0, #0
90024b4c:	9103      	str	r1, [sp, #12]
90024b4e:	fb00 7406 	mla	r4, r0, r6, r7
90024b52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024b56:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024b5a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90024b5e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90024b62:	eb03 0904 	add.w	r9, r3, r4
90024b66:	9501      	str	r5, [sp, #4]
90024b68:	f2c0 8150 	blt.w	90024e0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024b6c:	4583      	cmp	fp, r0
90024b6e:	f340 814d 	ble.w	90024e0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024b72:	2f00      	cmp	r7, #0
90024b74:	f2c0 8146 	blt.w	90024e04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024b78:	42be      	cmp	r6, r7
90024b7a:	f340 8143 	ble.w	90024e04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024b7e:	f813 c004 	ldrb.w	ip, [r3, r4]
90024b82:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90024b86:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024b8a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024b8e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90024b92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024b96:	4355      	muls	r5, r2
90024b98:	fb0c f203 	mul.w	r2, ip, r3
90024b9c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024ba0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90024ba4:	441d      	add	r5, r3
90024ba6:	f102 0320 	add.w	r3, r2, #32
90024baa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024bae:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024bb2:	0a1b      	lsrs	r3, r3, #8
90024bb4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024bb8:	431c      	orrs	r4, r3
90024bba:	1c7b      	adds	r3, r7, #1
90024bbc:	f100 812b 	bmi.w	90024e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024bc0:	429e      	cmp	r6, r3
90024bc2:	f340 8128 	ble.w	90024e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024bc6:	2900      	cmp	r1, #0
90024bc8:	f000 8128 	beq.w	90024e1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90024bcc:	9a01      	ldr	r2, [sp, #4]
90024bce:	f899 3001 	ldrb.w	r3, [r9, #1]
90024bd2:	8855      	ldrh	r5, [r2, #2]
90024bd4:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024bd8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024bdc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024be0:	fb08 f802 	mul.w	r8, r8, r2
90024be4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024be8:	435d      	muls	r5, r3
90024bea:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024bee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024bf2:	44d0      	add	r8, sl
90024bf4:	f105 0a20 	add.w	sl, r5, #32
90024bf8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024bfc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024c00:	0a2d      	lsrs	r5, r5, #8
90024c02:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024c06:	432a      	orrs	r2, r5
90024c08:	3001      	adds	r0, #1
90024c0a:	f100 810d 	bmi.w	90024e28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024c0e:	4583      	cmp	fp, r0
90024c10:	f340 810a 	ble.w	90024e28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024c14:	f1be 0f00 	cmp.w	lr, #0
90024c18:	f000 810b 	beq.w	90024e32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90024c1c:	2f00      	cmp	r7, #0
90024c1e:	f2c0 8100 	blt.w	90024e22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024c22:	42be      	cmp	r6, r7
90024c24:	f340 80fd 	ble.w	90024e22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024c28:	9801      	ldr	r0, [sp, #4]
90024c2a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90024c2e:	f819 5006 	ldrb.w	r5, [r9, r6]
90024c32:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024c36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024c3a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90024c3e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90024c42:	fb0a fa00 	mul.w	sl, sl, r0
90024c46:	fb05 f808 	mul.w	r8, r5, r8
90024c4a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024c4e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90024c52:	4482      	add	sl, r0
90024c54:	f108 0020 	add.w	r0, r8, #32
90024c58:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024c5c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024c60:	0a00      	lsrs	r0, r0, #8
90024c62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024c66:	ea4b 0b00 	orr.w	fp, fp, r0
90024c6a:	3701      	adds	r7, #1
90024c6c:	f100 80e6 	bmi.w	90024e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024c70:	42be      	cmp	r6, r7
90024c72:	f340 80e3 	ble.w	90024e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024c76:	2900      	cmp	r1, #0
90024c78:	f000 80e3 	beq.w	90024e42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90024c7c:	3601      	adds	r6, #1
90024c7e:	9801      	ldr	r0, [sp, #4]
90024c80:	f819 7006 	ldrb.w	r7, [r9, r6]
90024c84:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024c88:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024c8c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90024c90:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024c94:	fb09 f906 	mul.w	r9, r9, r6
90024c98:	fb07 f800 	mul.w	r8, r7, r0
90024c9c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90024ca0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024ca4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024ca8:	44d1      	add	r9, sl
90024caa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024cae:	f108 0020 	add.w	r0, r8, #32
90024cb2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024cb6:	0a00      	lsrs	r0, r0, #8
90024cb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024cbc:	4330      	orrs	r0, r6
90024cbe:	b28e      	uxth	r6, r1
90024cc0:	fa1f f98e 	uxth.w	r9, lr
90024cc4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024cc8:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024ccc:	fb06 f809 	mul.w	r8, r6, r9
90024cd0:	0136      	lsls	r6, r6, #4
90024cd2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024cd6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024cda:	9601      	str	r6, [sp, #4]
90024cdc:	ea4a 0404 	orr.w	r4, sl, r4
90024ce0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024ce4:	fa1f f689 	uxth.w	r6, r9
90024ce8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024cec:	fb11 f90e 	smulbb	r9, r1, lr
90024cf0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024cf4:	9602      	str	r6, [sp, #8]
90024cf6:	4626      	mov	r6, r4
90024cf8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024cfc:	f1ce 0410 	rsb	r4, lr, #16
90024d00:	ea4a 0202 	orr.w	r2, sl, r2
90024d04:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024d08:	1a64      	subs	r4, r4, r1
90024d0a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024d0e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024d12:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024d16:	434a      	muls	r2, r1
90024d18:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024d1c:	ea4a 0000 	orr.w	r0, sl, r0
90024d20:	9903      	ldr	r1, [sp, #12]
90024d22:	fb04 2406 	mla	r4, r4, r6, r2
90024d26:	9e02      	ldr	r6, [sp, #8]
90024d28:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024d2c:	fb09 4200 	mla	r2, r9, r0, r4
90024d30:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024d34:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024d38:	8808      	ldrh	r0, [r1, #0]
90024d3a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024d3e:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90024d42:	ea44 0b0b 	orr.w	fp, r4, fp
90024d46:	9c01      	ldr	r4, [sp, #4]
90024d48:	b289      	uxth	r1, r1
90024d4a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90024d4e:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024d52:	1ba4      	subs	r4, r4, r6
90024d54:	9e01      	ldr	r6, [sp, #4]
90024d56:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024d5a:	eba6 0608 	sub.w	r6, r6, r8
90024d5e:	b2a4      	uxth	r4, r4
90024d60:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024d64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024d68:	b2b6      	uxth	r6, r6
90024d6a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024d6e:	4373      	muls	r3, r6
90024d70:	ea42 0e0e 	orr.w	lr, r2, lr
90024d74:	fb0c 3304 	mla	r3, ip, r4, r3
90024d78:	9c02      	ldr	r4, [sp, #8]
90024d7a:	fa1f f28e 	uxth.w	r2, lr
90024d7e:	fb04 3505 	mla	r5, r4, r5, r3
90024d82:	10d4      	asrs	r4, r2, #3
90024d84:	fb08 5707 	mla	r7, r8, r7, r5
90024d88:	1215      	asrs	r5, r2, #8
90024d8a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90024d8e:	00d2      	lsls	r2, r2, #3
90024d90:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024d94:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024d98:	b2d2      	uxtb	r2, r2
90024d9a:	434f      	muls	r7, r1
90024d9c:	1c7b      	adds	r3, r7, #1
90024d9e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024da2:	1203      	asrs	r3, r0, #8
90024da4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024da8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024dac:	b2ff      	uxtb	r7, r7
90024dae:	fb13 f307 	smulbb	r3, r3, r7
90024db2:	fb05 3501 	mla	r5, r5, r1, r3
90024db6:	10c3      	asrs	r3, r0, #3
90024db8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024dbc:	b2ad      	uxth	r5, r5
90024dbe:	fb13 f307 	smulbb	r3, r3, r7
90024dc2:	fb04 3401 	mla	r4, r4, r1, r3
90024dc6:	00c3      	lsls	r3, r0, #3
90024dc8:	b2db      	uxtb	r3, r3
90024dca:	b2a4      	uxth	r4, r4
90024dcc:	fb13 f307 	smulbb	r3, r3, r7
90024dd0:	fb02 3101 	mla	r1, r2, r1, r3
90024dd4:	1c6b      	adds	r3, r5, #1
90024dd6:	1c62      	adds	r2, r4, #1
90024dd8:	b289      	uxth	r1, r1
90024dda:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024dde:	1c4b      	adds	r3, r1, #1
90024de0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024de4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024de8:	9a03      	ldr	r2, [sp, #12]
90024dea:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024dee:	0964      	lsrs	r4, r4, #5
90024df0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024df4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024df8:	432b      	orrs	r3, r5
90024dfa:	4323      	orrs	r3, r4
90024dfc:	8013      	strh	r3, [r2, #0]
90024dfe:	b005      	add	sp, #20
90024e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024e04:	f04f 0c00 	mov.w	ip, #0
90024e08:	4664      	mov	r4, ip
90024e0a:	e6d6      	b.n	90024bba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90024e0c:	2300      	movs	r3, #0
90024e0e:	469c      	mov	ip, r3
90024e10:	461a      	mov	r2, r3
90024e12:	461c      	mov	r4, r3
90024e14:	e6f8      	b.n	90024c08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024e16:	2300      	movs	r3, #0
90024e18:	461a      	mov	r2, r3
90024e1a:	e6f5      	b.n	90024c08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024e1c:	460b      	mov	r3, r1
90024e1e:	460a      	mov	r2, r1
90024e20:	e6f2      	b.n	90024c08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024e22:	2500      	movs	r5, #0
90024e24:	46ab      	mov	fp, r5
90024e26:	e720      	b.n	90024c6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024e28:	2700      	movs	r7, #0
90024e2a:	463d      	mov	r5, r7
90024e2c:	4638      	mov	r0, r7
90024e2e:	46bb      	mov	fp, r7
90024e30:	e745      	b.n	90024cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024e32:	4677      	mov	r7, lr
90024e34:	4675      	mov	r5, lr
90024e36:	4670      	mov	r0, lr
90024e38:	46f3      	mov	fp, lr
90024e3a:	e740      	b.n	90024cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024e3c:	2700      	movs	r7, #0
90024e3e:	4638      	mov	r0, r7
90024e40:	e73d      	b.n	90024cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024e42:	460f      	mov	r7, r1
90024e44:	4608      	mov	r0, r1
90024e46:	e73a      	b.n	90024cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024e4c:	b097      	sub	sp, #92	@ 0x5c
90024e4e:	9214      	str	r2, [sp, #80]	@ 0x50
90024e50:	9308      	str	r3, [sp, #32]
90024e52:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024e54:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024e58:	9015      	str	r0, [sp, #84]	@ 0x54
90024e5a:	9312      	str	r3, [sp, #72]	@ 0x48
90024e5c:	6850      	ldr	r0, [r2, #4]
90024e5e:	9111      	str	r1, [sp, #68]	@ 0x44
90024e60:	6812      	ldr	r2, [r2, #0]
90024e62:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90024e66:	fb00 1303 	mla	r3, r0, r3, r1
90024e6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024e6e:	9309      	str	r3, [sp, #36]	@ 0x24
90024e70:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024e72:	681b      	ldr	r3, [r3, #0]
90024e74:	930b      	str	r3, [sp, #44]	@ 0x2c
90024e76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024e78:	685b      	ldr	r3, [r3, #4]
90024e7a:	930c      	str	r3, [sp, #48]	@ 0x30
90024e7c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90024e80:	930a      	str	r3, [sp, #40]	@ 0x28
90024e82:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024e84:	2b00      	cmp	r3, #0
90024e86:	dc03      	bgt.n	90024e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024e88:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90024e8a:	2b00      	cmp	r3, #0
90024e8c:	f340 83cd 	ble.w	9002562a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024e90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024e92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024e96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024e9a:	1e48      	subs	r0, r1, #1
90024e9c:	1e55      	subs	r5, r2, #1
90024e9e:	9b08      	ldr	r3, [sp, #32]
90024ea0:	2b00      	cmp	r3, #0
90024ea2:	f340 81a5 	ble.w	900251f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024ea6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90024ea8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024eaa:	1436      	asrs	r6, r6, #16
90024eac:	ea4f 4323 	mov.w	r3, r3, asr #16
90024eb0:	d406      	bmi.n	90024ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024eb2:	4286      	cmp	r6, r0
90024eb4:	da04      	bge.n	90024ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024eb6:	2b00      	cmp	r3, #0
90024eb8:	db02      	blt.n	90024ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024eba:	42ab      	cmp	r3, r5
90024ebc:	f2c0 8199 	blt.w	900251f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024ec0:	3601      	adds	r6, #1
90024ec2:	f100 8186 	bmi.w	900251d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024ec6:	42b1      	cmp	r1, r6
90024ec8:	f2c0 8183 	blt.w	900251d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024ecc:	3301      	adds	r3, #1
90024ece:	f100 8180 	bmi.w	900251d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024ed2:	429a      	cmp	r2, r3
90024ed4:	f2c0 817d 	blt.w	900251d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024ed8:	9b08      	ldr	r3, [sp, #32]
90024eda:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024ede:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024ee0:	9313      	str	r3, [sp, #76]	@ 0x4c
90024ee2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024ee4:	2b00      	cmp	r3, #0
90024ee6:	f340 81a6 	ble.w	90025236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024eea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024eec:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024eee:	1418      	asrs	r0, r3, #16
90024ef0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024ef2:	142d      	asrs	r5, r5, #16
90024ef4:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024ef8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024efa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024efe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024f00:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024f04:	f100 81fa 	bmi.w	900252fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024f08:	f102 3eff 	add.w	lr, r2, #4294967295
90024f0c:	4575      	cmp	r5, lr
90024f0e:	f280 81f5 	bge.w	900252fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024f12:	2800      	cmp	r0, #0
90024f14:	f2c0 81f2 	blt.w	900252fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024f18:	f103 3eff 	add.w	lr, r3, #4294967295
90024f1c:	4570      	cmp	r0, lr
90024f1e:	f280 81ed 	bge.w	900252fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024f22:	b212      	sxth	r2, r2
90024f24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024f26:	fa1f fe81 	uxth.w	lr, r1
90024f2a:	fb00 5002 	mla	r0, r0, r2, r5
90024f2e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024f32:	eb03 0a00 	add.w	sl, r3, r0
90024f36:	f813 9000 	ldrb.w	r9, [r3, r0]
90024f3a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024f3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024f42:	b29b      	uxth	r3, r3
90024f44:	f1bc 0f00 	cmp.w	ip, #0
90024f48:	f000 81bb 	beq.w	900252c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024f4c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024f50:	eb0a 0b02 	add.w	fp, sl, r2
90024f54:	fa1f fa8c 	uxth.w	sl, ip
90024f58:	940d      	str	r4, [sp, #52]	@ 0x34
90024f5a:	fb0a fe0e 	mul.w	lr, sl, lr
90024f5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024f62:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024f66:	eba5 050e 	sub.w	r5, r5, lr
90024f6a:	940e      	str	r4, [sp, #56]	@ 0x38
90024f6c:	fa1f fa8a 	uxth.w	sl, sl
90024f70:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024f72:	b2ad      	uxth	r5, r5
90024f74:	eba3 030a 	sub.w	r3, r3, sl
90024f78:	fb08 f505 	mul.w	r5, r8, r5
90024f7c:	b29b      	uxth	r3, r3
90024f7e:	fb09 5303 	mla	r3, r9, r3, r5
90024f82:	fb0a 3304 	mla	r3, sl, r4, r3
90024f86:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024f88:	fb0e 3304 	mla	r3, lr, r4, r3
90024f8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024f90:	2b00      	cmp	r3, #0
90024f92:	f000 8111 	beq.w	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024f96:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024f98:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024f9c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024fa0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024fa4:	f000 8192 	beq.w	900252cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024fa8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024fac:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024fb0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024fb4:	fb0a fe0e 	mul.w	lr, sl, lr
90024fb8:	fb09 f000 	mul.w	r0, r9, r0
90024fbc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024fc0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024fc4:	f100 0b20 	add.w	fp, r0, #32
90024fc8:	44ce      	add	lr, r9
90024fca:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024fce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024fd2:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024fd6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024fda:	ea4e 0909 	orr.w	r9, lr, r9
90024fde:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024fe2:	8868      	ldrh	r0, [r5, #2]
90024fe4:	d019      	beq.n	9002501a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024fe6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024fea:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024fee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ff2:	fb0a fe0e 	mul.w	lr, sl, lr
90024ff6:	fb08 f800 	mul.w	r8, r8, r0
90024ffa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024ffe:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025002:	f108 0b20 	add.w	fp, r8, #32
90025006:	4486      	add	lr, r0
90025008:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002500c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025010:	0a00      	lsrs	r0, r0, #8
90025012:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025016:	ea4e 0000 	orr.w	r0, lr, r0
9002501a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002501e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025022:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025026:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002502a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002502e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025032:	ea4e 0909 	orr.w	r9, lr, r9
90025036:	ea4a 0000 	orr.w	r0, sl, r0
9002503a:	f1bc 0f00 	cmp.w	ip, #0
9002503e:	f000 8147 	beq.w	900252d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90025042:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90025046:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025048:	3a01      	subs	r2, #1
9002504a:	2cff      	cmp	r4, #255	@ 0xff
9002504c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025050:	f102 0202 	add.w	r2, r2, #2
90025054:	eb05 0e02 	add.w	lr, r5, r2
90025058:	5aaa      	ldrh	r2, [r5, r2]
9002505a:	d018      	beq.n	9002508e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9002505c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025060:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025064:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025068:	fb04 fa02 	mul.w	sl, r4, r2
9002506c:	fb08 f805 	mul.w	r8, r8, r5
90025070:	f10a 0520 	add.w	r5, sl, #32
90025074:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025078:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002507c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025080:	4442      	add	r2, r8
90025082:	0a2d      	lsrs	r5, r5, #8
90025084:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025088:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002508c:	432a      	orrs	r2, r5
9002508e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025090:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025094:	2cff      	cmp	r4, #255	@ 0xff
90025096:	d01a      	beq.n	900250ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90025098:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
9002509c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900250a0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900250a4:	fb04 fa05 	mul.w	sl, r4, r5
900250a8:	fb08 f80e 	mul.w	r8, r8, lr
900250ac:	f10a 0e20 	add.w	lr, sl, #32
900250b0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900250b4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900250b8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900250bc:	4445      	add	r5, r8
900250be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900250c2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900250c6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900250ca:	ea45 050e 	orr.w	r5, r5, lr
900250ce:	fb1c fe01 	smulbb	lr, ip, r1
900250d2:	f1cc 0810 	rsb	r8, ip, #16
900250d6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900250da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900250de:	ea4f 0eee 	mov.w	lr, lr, asr #3
900250e2:	eba8 0801 	sub.w	r8, r8, r1
900250e6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900250ea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900250ee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900250f2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900250f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900250fa:	ea4a 0202 	orr.w	r2, sl, r2
900250fe:	4341      	muls	r1, r0
90025100:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025104:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025108:	fb09 1108 	mla	r1, r9, r8, r1
9002510c:	ea4b 0505 	orr.w	r5, fp, r5
90025110:	fb0c 1102 	mla	r1, ip, r2, r1
90025114:	fb0e 1e05 	mla	lr, lr, r5, r1
90025118:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002511c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025120:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025124:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025128:	ea42 0e0e 	orr.w	lr, r2, lr
9002512c:	fa1f f28e 	uxth.w	r2, lr
90025130:	2bff      	cmp	r3, #255	@ 0xff
90025132:	d103      	bne.n	9002513c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025134:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025136:	29ff      	cmp	r1, #255	@ 0xff
90025138:	f000 80de 	beq.w	900252f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
9002513c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002513e:	1215      	asrs	r5, r2, #8
90025140:	8838      	ldrh	r0, [r7, #0]
90025142:	434b      	muls	r3, r1
90025144:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025148:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002514a:	f103 0c01 	add.w	ip, r3, #1
9002514e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90025152:	ea6f 2323 	mvn.w	r3, r3, asr #8
90025156:	fa5f fc83 	uxtb.w	ip, r3
9002515a:	1203      	asrs	r3, r0, #8
9002515c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025160:	fb13 f30c 	smulbb	r3, r3, ip
90025164:	fb05 3501 	mla	r5, r5, r1, r3
90025168:	10c3      	asrs	r3, r0, #3
9002516a:	10d1      	asrs	r1, r2, #3
9002516c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025170:	00d2      	lsls	r2, r2, #3
90025172:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025176:	b2ad      	uxth	r5, r5
90025178:	fb13 f30c 	smulbb	r3, r3, ip
9002517c:	b2d2      	uxtb	r2, r2
9002517e:	fb01 3104 	mla	r1, r1, r4, r3
90025182:	00c3      	lsls	r3, r0, #3
90025184:	b2db      	uxtb	r3, r3
90025186:	b289      	uxth	r1, r1
90025188:	fb13 f30c 	smulbb	r3, r3, ip
9002518c:	fb02 3304 	mla	r3, r2, r4, r3
90025190:	b29a      	uxth	r2, r3
90025192:	1c6b      	adds	r3, r5, #1
90025194:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025198:	1c53      	adds	r3, r2, #1
9002519a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002519e:	1c4a      	adds	r2, r1, #1
900251a0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900251a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900251a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900251ac:	0949      	lsrs	r1, r1, #5
900251ae:	432b      	orrs	r3, r5
900251b0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900251b4:	430b      	orrs	r3, r1
900251b6:	803b      	strh	r3, [r7, #0]
900251b8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900251ba:	3702      	adds	r7, #2
900251bc:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900251be:	4413      	add	r3, r2
900251c0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900251c2:	9321      	str	r3, [sp, #132]	@ 0x84
900251c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900251c6:	441a      	add	r2, r3
900251c8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900251ca:	3b01      	subs	r3, #1
900251cc:	9222      	str	r2, [sp, #136]	@ 0x88
900251ce:	9313      	str	r3, [sp, #76]	@ 0x4c
900251d0:	e687      	b.n	90024ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900251d2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900251d4:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900251d6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900251d8:	4433      	add	r3, r6
900251da:	9321      	str	r3, [sp, #132]	@ 0x84
900251dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900251de:	441c      	add	r4, r3
900251e0:	9b08      	ldr	r3, [sp, #32]
900251e2:	3b01      	subs	r3, #1
900251e4:	9422      	str	r4, [sp, #136]	@ 0x88
900251e6:	9308      	str	r3, [sp, #32]
900251e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900251ea:	3302      	adds	r3, #2
900251ec:	9309      	str	r3, [sp, #36]	@ 0x24
900251ee:	e656      	b.n	90024e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900251f0:	d028      	beq.n	90025244 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900251f2:	9b08      	ldr	r3, [sp, #32]
900251f4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900251f6:	3b01      	subs	r3, #1
900251f8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900251fa:	fb00 5003 	mla	r0, r0, r3, r5
900251fe:	1400      	asrs	r0, r0, #16
90025200:	f53f ae6a 	bmi.w	90024ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025204:	3901      	subs	r1, #1
90025206:	4288      	cmp	r0, r1
90025208:	f6bf ae66 	bge.w	90024ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002520c:	9924      	ldr	r1, [sp, #144]	@ 0x90
9002520e:	9822      	ldr	r0, [sp, #136]	@ 0x88
90025210:	fb01 0303 	mla	r3, r1, r3, r0
90025214:	141b      	asrs	r3, r3, #16
90025216:	f53f ae5f 	bmi.w	90024ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002521a:	3a01      	subs	r2, #1
9002521c:	4293      	cmp	r3, r2
9002521e:	f6bf ae5b 	bge.w	90024ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025222:	9b08      	ldr	r3, [sp, #32]
90025224:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025228:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9002522c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002522e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025230:	2b00      	cmp	r3, #0
90025232:	f300 8082 	bgt.w	9002533a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90025236:	9b08      	ldr	r3, [sp, #32]
90025238:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002523c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002523e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025242:	9309      	str	r3, [sp, #36]	@ 0x24
90025244:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90025246:	2b00      	cmp	r3, #0
90025248:	f340 81ef 	ble.w	9002562a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002524c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025250:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025252:	ee30 0a04 	vadd.f32	s0, s0, s8
90025256:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002525a:	eef0 6a62 	vmov.f32	s13, s5
9002525e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025262:	ee31 1a05 	vadd.f32	s2, s2, s10
90025266:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002526a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
9002526e:	eef0 6a43 	vmov.f32	s13, s6
90025272:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025276:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
9002527a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002527e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025282:	ee77 2a62 	vsub.f32	s5, s14, s5
90025286:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002528a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002528e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025292:	ee12 2a90 	vmov	r2, s5
90025296:	eef0 2a47 	vmov.f32	s5, s14
9002529a:	fb92 f3f3 	sdiv	r3, r2, r3
9002529e:	ee13 2a10 	vmov	r2, s6
900252a2:	9323      	str	r3, [sp, #140]	@ 0x8c
900252a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900252a6:	eeb0 3a67 	vmov.f32	s6, s15
900252aa:	fb92 f3f3 	sdiv	r3, r2, r3
900252ae:	9324      	str	r3, [sp, #144]	@ 0x90
900252b0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900252b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900252b4:	3b01      	subs	r3, #1
900252b6:	9311      	str	r3, [sp, #68]	@ 0x44
900252b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900252ba:	bf08      	it	eq
900252bc:	4613      	moveq	r3, r2
900252be:	9308      	str	r3, [sp, #32]
900252c0:	e5df      	b.n	90024e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900252c2:	fb08 f505 	mul.w	r5, r8, r5
900252c6:	fb09 5303 	mla	r3, r9, r3, r5
900252ca:	e65f      	b.n	90024f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900252cc:	4681      	mov	r9, r0
900252ce:	e686      	b.n	90024fde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900252d0:	f1c1 0210 	rsb	r2, r1, #16
900252d4:	4341      	muls	r1, r0
900252d6:	fb09 1902 	mla	r9, r9, r2, r1
900252da:	ea4f 0949 	mov.w	r9, r9, lsl #1
900252de:	ea4f 5259 	mov.w	r2, r9, lsr #21
900252e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
900252e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900252ea:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900252ee:	ea42 0909 	orr.w	r9, r2, r9
900252f2:	fa1f f289 	uxth.w	r2, r9
900252f6:	e71b      	b.n	90025130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900252f8:	803a      	strh	r2, [r7, #0]
900252fa:	e75d      	b.n	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900252fc:	f115 0e01 	adds.w	lr, r5, #1
90025300:	f53f af5a 	bmi.w	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025304:	4572      	cmp	r2, lr
90025306:	f6ff af57 	blt.w	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002530a:	f110 0e01 	adds.w	lr, r0, #1
9002530e:	f53f af53 	bmi.w	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025312:	4573      	cmp	r3, lr
90025314:	f6ff af50 	blt.w	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025318:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002531a:	b21b      	sxth	r3, r3
9002531c:	b212      	sxth	r2, r2
9002531e:	9502      	str	r5, [sp, #8]
90025320:	9301      	str	r3, [sp, #4]
90025322:	9200      	str	r2, [sp, #0]
90025324:	e9cd 0103 	strd	r0, r1, [sp, #12]
90025328:	e9cd c405 	strd	ip, r4, [sp, #20]
9002532c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90025330:	4639      	mov	r1, r7
90025332:	9815      	ldr	r0, [sp, #84]	@ 0x54
90025334:	f7ff fc02 	bl	90024b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90025338:	e73e      	b.n	900251b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002533a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002533c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025340:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025342:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025346:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025348:	fa1f fc82 	uxth.w	ip, r2
9002534c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025350:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025352:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025356:	141f      	asrs	r7, r3, #16
90025358:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002535a:	141b      	asrs	r3, r3, #16
9002535c:	fb01 3707 	mla	r7, r1, r7, r3
90025360:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025362:	eb03 0a07 	add.w	sl, r3, r7
90025366:	f813 9007 	ldrb.w	r9, [r3, r7]
9002536a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002536e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025372:	b29b      	uxth	r3, r3
90025374:	2d00      	cmp	r5, #0
90025376:	f000 813d 	beq.w	900255f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002537a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002537e:	eb0a 0b01 	add.w	fp, sl, r1
90025382:	fa1f fa85 	uxth.w	sl, r5
90025386:	940f      	str	r4, [sp, #60]	@ 0x3c
90025388:	fb0a fc0c 	mul.w	ip, sl, ip
9002538c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025390:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025394:	eba0 000c 	sub.w	r0, r0, ip
90025398:	9410      	str	r4, [sp, #64]	@ 0x40
9002539a:	fa1f fa8a 	uxth.w	sl, sl
9002539e:	b280      	uxth	r0, r0
900253a0:	eba3 030a 	sub.w	r3, r3, sl
900253a4:	fb08 f000 	mul.w	r0, r8, r0
900253a8:	b29b      	uxth	r3, r3
900253aa:	fb09 0303 	mla	r3, r9, r3, r0
900253ae:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900253b0:	fb0a 3300 	mla	r3, sl, r0, r3
900253b4:	fb0c 3304 	mla	r3, ip, r4, r3
900253b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900253bc:	2b00      	cmp	r3, #0
900253be:	f000 810b 	beq.w	900255d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900253c2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900253c4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900253c8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900253ca:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900253ce:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900253d2:	f000 8114 	beq.w	900255fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900253d6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900253da:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900253de:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900253e2:	fb0a fc0c 	mul.w	ip, sl, ip
900253e6:	fb09 f707 	mul.w	r7, r9, r7
900253ea:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900253ee:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900253f2:	f107 0b20 	add.w	fp, r7, #32
900253f6:	44cc      	add	ip, r9
900253f8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900253fc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025400:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025404:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025408:	ea4c 0909 	orr.w	r9, ip, r9
9002540c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025410:	8847      	ldrh	r7, [r0, #2]
90025412:	d019      	beq.n	90025448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90025414:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025418:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002541c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025420:	fb0a fc0c 	mul.w	ip, sl, ip
90025424:	fb08 f807 	mul.w	r8, r8, r7
90025428:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002542c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025430:	f108 0b20 	add.w	fp, r8, #32
90025434:	44bc      	add	ip, r7
90025436:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002543a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002543e:	0a3f      	lsrs	r7, r7, #8
90025440:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025444:	ea4c 0707 	orr.w	r7, ip, r7
90025448:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9002544c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025450:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025454:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025458:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002545c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025460:	ea4c 0909 	orr.w	r9, ip, r9
90025464:	ea4a 0707 	orr.w	r7, sl, r7
90025468:	2d00      	cmp	r5, #0
9002546a:	f000 80ca 	beq.w	90025602 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002546e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025472:	3901      	subs	r1, #1
90025474:	0049      	lsls	r1, r1, #1
90025476:	3102      	adds	r1, #2
90025478:	eb00 0c01 	add.w	ip, r0, r1
9002547c:	5a41      	ldrh	r1, [r0, r1]
9002547e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90025480:	28ff      	cmp	r0, #255	@ 0xff
90025482:	d019      	beq.n	900254b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90025484:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025488:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002548a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002548e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025492:	fb04 fa01 	mul.w	sl, r4, r1
90025496:	fb08 f800 	mul.w	r8, r8, r0
9002549a:	f10a 0020 	add.w	r0, sl, #32
9002549e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900254a2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900254a6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900254aa:	4441      	add	r1, r8
900254ac:	0a00      	lsrs	r0, r0, #8
900254ae:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900254b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900254b6:	4301      	orrs	r1, r0
900254b8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900254ba:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900254be:	2cff      	cmp	r4, #255	@ 0xff
900254c0:	d01a      	beq.n	900254f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900254c2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900254c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900254ca:	ea4f 08e4 	mov.w	r8, r4, asr #3
900254ce:	fb04 fa00 	mul.w	sl, r4, r0
900254d2:	fb08 f80c 	mul.w	r8, r8, ip
900254d6:	f10a 0c20 	add.w	ip, sl, #32
900254da:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900254de:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900254e2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900254e6:	4440      	add	r0, r8
900254e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900254ec:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900254f0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900254f4:	ea40 000c 	orr.w	r0, r0, ip
900254f8:	fb15 fc02 	smulbb	ip, r5, r2
900254fc:	f1c5 0810 	rsb	r8, r5, #16
90025500:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025504:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025508:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002550c:	eba8 0802 	sub.w	r8, r8, r2
90025510:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025514:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025518:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9002551c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025520:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025524:	ea4a 0101 	orr.w	r1, sl, r1
90025528:	437a      	muls	r2, r7
9002552a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002552e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025532:	fb09 2208 	mla	r2, r9, r8, r2
90025536:	ea4b 0000 	orr.w	r0, fp, r0
9002553a:	fb05 2201 	mla	r2, r5, r1, r2
9002553e:	fb0c 2200 	mla	r2, ip, r0, r2
90025542:	0d57      	lsrs	r7, r2, #21
90025544:	0952      	lsrs	r2, r2, #5
90025546:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002554a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002554e:	433a      	orrs	r2, r7
90025550:	2bff      	cmp	r3, #255	@ 0xff
90025552:	b292      	uxth	r2, r2
90025554:	d102      	bne.n	9002555c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025556:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025558:	29ff      	cmp	r1, #255	@ 0xff
9002555a:	d063      	beq.n	90025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
9002555c:	980a      	ldr	r0, [sp, #40]	@ 0x28
9002555e:	1215      	asrs	r5, r2, #8
90025560:	f8be 1000 	ldrh.w	r1, [lr]
90025564:	4343      	muls	r3, r0
90025566:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025568:	10cf      	asrs	r7, r1, #3
9002556a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002556e:	1c58      	adds	r0, r3, #1
90025570:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90025574:	eb00 2323 	add.w	r3, r0, r3, asr #8
90025578:	1208      	asrs	r0, r1, #8
9002557a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002557e:	00c9      	lsls	r1, r1, #3
90025580:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025584:	b2db      	uxtb	r3, r3
90025586:	b2c9      	uxtb	r1, r1
90025588:	fb10 f003 	smulbb	r0, r0, r3
9002558c:	fb11 f103 	smulbb	r1, r1, r3
90025590:	fb05 0504 	mla	r5, r5, r4, r0
90025594:	10d0      	asrs	r0, r2, #3
90025596:	fb17 f703 	smulbb	r7, r7, r3
9002559a:	00d2      	lsls	r2, r2, #3
9002559c:	b2ad      	uxth	r5, r5
9002559e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900255a2:	b2d2      	uxtb	r2, r2
900255a4:	fb00 7004 	mla	r0, r0, r4, r7
900255a8:	1c6b      	adds	r3, r5, #1
900255aa:	fb02 1204 	mla	r2, r2, r4, r1
900255ae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900255b2:	b292      	uxth	r2, r2
900255b4:	b280      	uxth	r0, r0
900255b6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900255ba:	1c57      	adds	r7, r2, #1
900255bc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900255c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900255c4:	433d      	orrs	r5, r7
900255c6:	1c47      	adds	r7, r0, #1
900255c8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900255cc:	097f      	lsrs	r7, r7, #5
900255ce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900255d2:	433d      	orrs	r5, r7
900255d4:	f8ae 5000 	strh.w	r5, [lr]
900255d8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900255da:	f10e 0e02 	add.w	lr, lr, #2
900255de:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900255e0:	4413      	add	r3, r2
900255e2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900255e4:	9321      	str	r3, [sp, #132]	@ 0x84
900255e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255e8:	441a      	add	r2, r3
900255ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900255ec:	3b01      	subs	r3, #1
900255ee:	9222      	str	r2, [sp, #136]	@ 0x88
900255f0:	9313      	str	r3, [sp, #76]	@ 0x4c
900255f2:	e61c      	b.n	9002522e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900255f4:	fb08 f000 	mul.w	r0, r8, r0
900255f8:	fb09 0303 	mla	r3, r9, r3, r0
900255fc:	e6dc      	b.n	900253b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
900255fe:	46b9      	mov	r9, r7
90025600:	e704      	b.n	9002540c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90025602:	f1c2 0110 	rsb	r1, r2, #16
90025606:	437a      	muls	r2, r7
90025608:	fb09 2901 	mla	r9, r9, r1, r2
9002560c:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025610:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025614:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025618:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002561c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025620:	4302      	orrs	r2, r0
90025622:	e795      	b.n	90025550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90025624:	f8ae 2000 	strh.w	r2, [lr]
90025628:	e7d6      	b.n	900255d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002562a:	b017      	add	sp, #92	@ 0x5c
9002562c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90025630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025634:	b085      	sub	sp, #20
90025636:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002563a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002563e:	2800      	cmp	r0, #0
90025640:	9103      	str	r1, [sp, #12]
90025642:	fb00 7406 	mla	r4, r0, r6, r7
90025646:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002564a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002564e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90025652:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90025656:	eb02 0904 	add.w	r9, r2, r4
9002565a:	9501      	str	r5, [sp, #4]
9002565c:	f2c0 8141 	blt.w	900258e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025660:	4583      	cmp	fp, r0
90025662:	f340 813e 	ble.w	900258e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025666:	2f00      	cmp	r7, #0
90025668:	f2c0 8137 	blt.w	900258da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002566c:	42be      	cmp	r6, r7
9002566e:	f340 8134 	ble.w	900258da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025672:	f812 c004 	ldrb.w	ip, [r2, r4]
90025676:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
9002567a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
9002567e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025682:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90025686:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002568a:	4355      	muls	r5, r2
9002568c:	fb0c f203 	mul.w	r2, ip, r3
90025690:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90025694:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90025698:	441d      	add	r5, r3
9002569a:	f102 0320 	add.w	r3, r2, #32
9002569e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900256a2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900256a6:	0a1b      	lsrs	r3, r3, #8
900256a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900256ac:	431c      	orrs	r4, r3
900256ae:	1c7b      	adds	r3, r7, #1
900256b0:	f100 811c 	bmi.w	900258ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900256b4:	429e      	cmp	r6, r3
900256b6:	f340 8119 	ble.w	900258ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900256ba:	2900      	cmp	r1, #0
900256bc:	f000 8119 	beq.w	900258f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900256c0:	9a01      	ldr	r2, [sp, #4]
900256c2:	f899 3001 	ldrb.w	r3, [r9, #1]
900256c6:	8855      	ldrh	r5, [r2, #2]
900256c8:	ea4f 08e3 	mov.w	r8, r3, asr #3
900256cc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900256d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900256d4:	fb08 f802 	mul.w	r8, r8, r2
900256d8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900256dc:	435d      	muls	r5, r3
900256de:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900256e2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900256e6:	44d0      	add	r8, sl
900256e8:	f105 0a20 	add.w	sl, r5, #32
900256ec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900256f0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900256f4:	0a2d      	lsrs	r5, r5, #8
900256f6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900256fa:	432a      	orrs	r2, r5
900256fc:	3001      	adds	r0, #1
900256fe:	f100 80fe 	bmi.w	900258fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025702:	4583      	cmp	fp, r0
90025704:	f340 80fb 	ble.w	900258fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025708:	f1be 0f00 	cmp.w	lr, #0
9002570c:	f000 80fc 	beq.w	90025908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90025710:	2f00      	cmp	r7, #0
90025712:	f2c0 80f1 	blt.w	900258f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025716:	42be      	cmp	r6, r7
90025718:	f340 80ee 	ble.w	900258f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002571c:	9801      	ldr	r0, [sp, #4]
9002571e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90025722:	f819 5006 	ldrb.w	r5, [r9, r6]
90025726:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002572a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002572e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90025732:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90025736:	fb0a fa00 	mul.w	sl, sl, r0
9002573a:	fb05 f808 	mul.w	r8, r5, r8
9002573e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90025742:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90025746:	4482      	add	sl, r0
90025748:	f108 0020 	add.w	r0, r8, #32
9002574c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025750:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90025754:	0a00      	lsrs	r0, r0, #8
90025756:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002575a:	ea4b 0b00 	orr.w	fp, fp, r0
9002575e:	3701      	adds	r7, #1
90025760:	f100 80d7 	bmi.w	90025912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025764:	42be      	cmp	r6, r7
90025766:	f340 80d4 	ble.w	90025912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002576a:	2900      	cmp	r1, #0
9002576c:	f000 80d4 	beq.w	90025918 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025770:	3601      	adds	r6, #1
90025772:	9801      	ldr	r0, [sp, #4]
90025774:	f819 7006 	ldrb.w	r7, [r9, r6]
90025778:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
9002577c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90025780:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90025784:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025788:	fb09 f906 	mul.w	r9, r9, r6
9002578c:	fb07 f800 	mul.w	r8, r7, r0
90025790:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90025794:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025798:	f609 0901 	addw	r9, r9, #2049	@ 0x801
9002579c:	44d1      	add	r9, sl
9002579e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900257a2:	f108 0020 	add.w	r0, r8, #32
900257a6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900257aa:	0a00      	lsrs	r0, r0, #8
900257ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900257b0:	4330      	orrs	r0, r6
900257b2:	b28e      	uxth	r6, r1
900257b4:	fa1f f98e 	uxth.w	r9, lr
900257b8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900257bc:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900257c0:	fb06 f809 	mul.w	r8, r6, r9
900257c4:	0136      	lsls	r6, r6, #4
900257c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900257ca:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900257ce:	9601      	str	r6, [sp, #4]
900257d0:	ea4a 0404 	orr.w	r4, sl, r4
900257d4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900257d8:	fa1f f689 	uxth.w	r6, r9
900257dc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900257e0:	fb11 f90e 	smulbb	r9, r1, lr
900257e4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900257e8:	9602      	str	r6, [sp, #8]
900257ea:	4626      	mov	r6, r4
900257ec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900257f0:	f1ce 0410 	rsb	r4, lr, #16
900257f4:	ea4a 0202 	orr.w	r2, sl, r2
900257f8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900257fc:	1a64      	subs	r4, r4, r1
900257fe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90025802:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025806:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002580a:	434a      	muls	r2, r1
9002580c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025810:	ea4a 0000 	orr.w	r0, sl, r0
90025814:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025818:	fb04 2406 	mla	r4, r4, r6, r2
9002581c:	9903      	ldr	r1, [sp, #12]
9002581e:	fb09 4200 	mla	r2, r9, r0, r4
90025822:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025826:	9801      	ldr	r0, [sp, #4]
90025828:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
9002582c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025830:	8809      	ldrh	r1, [r1, #0]
90025832:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90025836:	ea44 0b0b 	orr.w	fp, r4, fp
9002583a:	9c02      	ldr	r4, [sp, #8]
9002583c:	1b00      	subs	r0, r0, r4
9002583e:	9c01      	ldr	r4, [sp, #4]
90025840:	fb0e 2e0b 	mla	lr, lr, fp, r2
90025844:	eba4 0608 	sub.w	r6, r4, r8
90025848:	b280      	uxth	r0, r0
9002584a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002584e:	b2b6      	uxth	r6, r6
90025850:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025854:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025858:	4373      	muls	r3, r6
9002585a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002585e:	fb0c 3300 	mla	r3, ip, r0, r3
90025862:	9802      	ldr	r0, [sp, #8]
90025864:	ea42 0e0e 	orr.w	lr, r2, lr
90025868:	fb00 3505 	mla	r5, r0, r5, r3
9002586c:	120b      	asrs	r3, r1, #8
9002586e:	10c8      	asrs	r0, r1, #3
90025870:	fb08 5707 	mla	r7, r8, r7, r5
90025874:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025878:	00c9      	lsls	r1, r1, #3
9002587a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002587e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90025882:	fa1f f28e 	uxth.w	r2, lr
90025886:	b2c9      	uxtb	r1, r1
90025888:	b2ff      	uxtb	r7, r7
9002588a:	437b      	muls	r3, r7
9002588c:	4378      	muls	r0, r7
9002588e:	434f      	muls	r7, r1
90025890:	1c59      	adds	r1, r3, #1
90025892:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025896:	1213      	asrs	r3, r2, #8
90025898:	f023 0307 	bic.w	r3, r3, #7
9002589c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900258a0:	1c41      	adds	r1, r0, #1
900258a2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900258a6:	10d1      	asrs	r1, r2, #3
900258a8:	021b      	lsls	r3, r3, #8
900258aa:	f021 0103 	bic.w	r1, r1, #3
900258ae:	00d2      	lsls	r2, r2, #3
900258b0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900258b4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900258b8:	00c9      	lsls	r1, r1, #3
900258ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900258be:	430b      	orrs	r3, r1
900258c0:	1c79      	adds	r1, r7, #1
900258c2:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900258c6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900258ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900258ce:	431a      	orrs	r2, r3
900258d0:	9b03      	ldr	r3, [sp, #12]
900258d2:	801a      	strh	r2, [r3, #0]
900258d4:	b005      	add	sp, #20
900258d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900258da:	f04f 0c00 	mov.w	ip, #0
900258de:	4664      	mov	r4, ip
900258e0:	e6e5      	b.n	900256ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900258e2:	2300      	movs	r3, #0
900258e4:	469c      	mov	ip, r3
900258e6:	461a      	mov	r2, r3
900258e8:	461c      	mov	r4, r3
900258ea:	e707      	b.n	900256fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900258ec:	2300      	movs	r3, #0
900258ee:	461a      	mov	r2, r3
900258f0:	e704      	b.n	900256fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900258f2:	460b      	mov	r3, r1
900258f4:	460a      	mov	r2, r1
900258f6:	e701      	b.n	900256fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900258f8:	2500      	movs	r5, #0
900258fa:	46ab      	mov	fp, r5
900258fc:	e72f      	b.n	9002575e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
900258fe:	2700      	movs	r7, #0
90025900:	463d      	mov	r5, r7
90025902:	4638      	mov	r0, r7
90025904:	46bb      	mov	fp, r7
90025906:	e754      	b.n	900257b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025908:	4677      	mov	r7, lr
9002590a:	4675      	mov	r5, lr
9002590c:	4670      	mov	r0, lr
9002590e:	46f3      	mov	fp, lr
90025910:	e74f      	b.n	900257b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025912:	2700      	movs	r7, #0
90025914:	4638      	mov	r0, r7
90025916:	e74c      	b.n	900257b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025918:	460f      	mov	r7, r1
9002591a:	4608      	mov	r0, r1
9002591c:	e749      	b.n	900257b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90025920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025924:	b093      	sub	sp, #76	@ 0x4c
90025926:	9210      	str	r2, [sp, #64]	@ 0x40
90025928:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002592a:	9011      	str	r0, [sp, #68]	@ 0x44
9002592c:	910e      	str	r1, [sp, #56]	@ 0x38
9002592e:	6850      	ldr	r0, [r2, #4]
90025930:	9306      	str	r3, [sp, #24]
90025932:	6812      	ldr	r2, [r2, #0]
90025934:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90025938:	fb00 1303 	mla	r3, r0, r3, r1
9002593c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025940:	9307      	str	r3, [sp, #28]
90025942:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025944:	681b      	ldr	r3, [r3, #0]
90025946:	9308      	str	r3, [sp, #32]
90025948:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002594a:	685b      	ldr	r3, [r3, #4]
9002594c:	9309      	str	r3, [sp, #36]	@ 0x24
9002594e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025950:	2b00      	cmp	r3, #0
90025952:	dc03      	bgt.n	9002595c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90025954:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90025956:	2b00      	cmp	r3, #0
90025958:	f340 83b6 	ble.w	900260c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
9002595c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002595e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025962:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025966:	1e48      	subs	r0, r1, #1
90025968:	1e55      	subs	r5, r2, #1
9002596a:	9b06      	ldr	r3, [sp, #24]
9002596c:	2b00      	cmp	r3, #0
9002596e:	f340 8165 	ble.w	90025c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90025972:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90025974:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025976:	1436      	asrs	r6, r6, #16
90025978:	ea4f 4323 	mov.w	r3, r3, asr #16
9002597c:	d406      	bmi.n	9002598c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002597e:	4286      	cmp	r6, r0
90025980:	da04      	bge.n	9002598c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025982:	2b00      	cmp	r3, #0
90025984:	db02      	blt.n	9002598c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025986:	42ab      	cmp	r3, r5
90025988:	f2c0 8159 	blt.w	90025c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002598c:	3601      	adds	r6, #1
9002598e:	f100 8146 	bmi.w	90025c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025992:	42b1      	cmp	r1, r6
90025994:	f2c0 8143 	blt.w	90025c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025998:	3301      	adds	r3, #1
9002599a:	f100 8140 	bmi.w	90025c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002599e:	429a      	cmp	r2, r3
900259a0:	f2c0 813d 	blt.w	90025c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900259a4:	9b06      	ldr	r3, [sp, #24]
900259a6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900259aa:	9f07      	ldr	r7, [sp, #28]
900259ac:	930f      	str	r3, [sp, #60]	@ 0x3c
900259ae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900259b0:	2b00      	cmp	r3, #0
900259b2:	f340 8166 	ble.w	90025c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900259b6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900259b8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900259ba:	1418      	asrs	r0, r3, #16
900259bc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900259be:	142d      	asrs	r5, r5, #16
900259c0:	f3c3 3103 	ubfx	r1, r3, #12, #4
900259c4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900259c6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900259ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900259cc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900259d0:	f100 81f0 	bmi.w	90025db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900259d4:	f102 3eff 	add.w	lr, r2, #4294967295
900259d8:	4575      	cmp	r5, lr
900259da:	f280 81eb 	bge.w	90025db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900259de:	2800      	cmp	r0, #0
900259e0:	f2c0 81e8 	blt.w	90025db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900259e4:	f103 3eff 	add.w	lr, r3, #4294967295
900259e8:	4570      	cmp	r0, lr
900259ea:	f280 81e3 	bge.w	90025db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900259ee:	b212      	sxth	r2, r2
900259f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900259f2:	fa1f fe81 	uxth.w	lr, r1
900259f6:	fb00 5002 	mla	r0, r0, r2, r5
900259fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
900259fe:	eb03 0a00 	add.w	sl, r3, r0
90025a02:	f813 9000 	ldrb.w	r9, [r3, r0]
90025a06:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90025a0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025a0e:	b29b      	uxth	r3, r3
90025a10:	f1bc 0f00 	cmp.w	ip, #0
90025a14:	f000 817b 	beq.w	90025d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025a18:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025a1c:	eb0a 0b02 	add.w	fp, sl, r2
90025a20:	fa1f fa8c 	uxth.w	sl, ip
90025a24:	940a      	str	r4, [sp, #40]	@ 0x28
90025a26:	fb0a fe0e 	mul.w	lr, sl, lr
90025a2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025a2e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90025a32:	eba5 050e 	sub.w	r5, r5, lr
90025a36:	940b      	str	r4, [sp, #44]	@ 0x2c
90025a38:	fa1f fa8a 	uxth.w	sl, sl
90025a3c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025a3e:	b2ad      	uxth	r5, r5
90025a40:	eba3 030a 	sub.w	r3, r3, sl
90025a44:	fb08 f505 	mul.w	r5, r8, r5
90025a48:	b29b      	uxth	r3, r3
90025a4a:	fb09 5303 	mla	r3, r9, r3, r5
90025a4e:	fb0a 3304 	mla	r3, sl, r4, r3
90025a52:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025a54:	fb0e 3304 	mla	r3, lr, r4, r3
90025a58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025a5c:	2b00      	cmp	r3, #0
90025a5e:	f000 80d1 	beq.w	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025a62:	9c08      	ldr	r4, [sp, #32]
90025a64:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025a68:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025a6c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025a70:	f000 8152 	beq.w	90025d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025a74:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025a78:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025a7c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a80:	fb0a fe0e 	mul.w	lr, sl, lr
90025a84:	fb09 f000 	mul.w	r0, r9, r0
90025a88:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90025a8c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025a90:	f100 0b20 	add.w	fp, r0, #32
90025a94:	44ce      	add	lr, r9
90025a96:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90025a9a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025a9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025aa2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025aa6:	ea4e 0909 	orr.w	r9, lr, r9
90025aaa:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025aae:	8868      	ldrh	r0, [r5, #2]
90025ab0:	d019      	beq.n	90025ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90025ab2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025ab6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025aba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025abe:	fb0a fe0e 	mul.w	lr, sl, lr
90025ac2:	fb08 f800 	mul.w	r8, r8, r0
90025ac6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90025aca:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025ace:	f108 0b20 	add.w	fp, r8, #32
90025ad2:	4486      	add	lr, r0
90025ad4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025ad8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025adc:	0a00      	lsrs	r0, r0, #8
90025ade:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025ae2:	ea4e 0000 	orr.w	r0, lr, r0
90025ae6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025aea:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025aee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025af2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025af6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025afa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025afe:	ea4e 0909 	orr.w	r9, lr, r9
90025b02:	ea4a 0000 	orr.w	r0, sl, r0
90025b06:	f1bc 0f00 	cmp.w	ip, #0
90025b0a:	f000 8107 	beq.w	90025d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90025b0e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90025b12:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025b14:	3a01      	subs	r2, #1
90025b16:	2cff      	cmp	r4, #255	@ 0xff
90025b18:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025b1c:	f102 0202 	add.w	r2, r2, #2
90025b20:	eb05 0e02 	add.w	lr, r5, r2
90025b24:	5aaa      	ldrh	r2, [r5, r2]
90025b26:	d018      	beq.n	90025b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025b28:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025b2c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025b30:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025b34:	fb04 fa02 	mul.w	sl, r4, r2
90025b38:	fb08 f805 	mul.w	r8, r8, r5
90025b3c:	f10a 0520 	add.w	r5, sl, #32
90025b40:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025b44:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025b48:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025b4c:	4442      	add	r2, r8
90025b4e:	0a2d      	lsrs	r5, r5, #8
90025b50:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025b54:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025b58:	432a      	orrs	r2, r5
90025b5a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025b5c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025b60:	2cff      	cmp	r4, #255	@ 0xff
90025b62:	d01a      	beq.n	90025b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025b64:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025b68:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025b6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025b70:	fb04 fa05 	mul.w	sl, r4, r5
90025b74:	fb08 f80e 	mul.w	r8, r8, lr
90025b78:	f10a 0e20 	add.w	lr, sl, #32
90025b7c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025b80:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025b84:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025b88:	4445      	add	r5, r8
90025b8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025b8e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90025b92:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90025b96:	ea45 050e 	orr.w	r5, r5, lr
90025b9a:	fb1c fe01 	smulbb	lr, ip, r1
90025b9e:	f1cc 0810 	rsb	r8, ip, #16
90025ba2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025ba6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025baa:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025bae:	eba8 0801 	sub.w	r8, r8, r1
90025bb2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025bb6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025bba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025bbe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90025bc2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025bc6:	ea4a 0202 	orr.w	r2, sl, r2
90025bca:	4341      	muls	r1, r0
90025bcc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025bd0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025bd4:	fb09 1108 	mla	r1, r9, r8, r1
90025bd8:	ea4b 0505 	orr.w	r5, fp, r5
90025bdc:	fb0c 1102 	mla	r1, ip, r2, r1
90025be0:	fb0e 1e05 	mla	lr, lr, r5, r1
90025be4:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025be8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025bec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025bf0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025bf4:	ea42 0e0e 	orr.w	lr, r2, lr
90025bf8:	fa1f f28e 	uxth.w	r2, lr
90025bfc:	2bff      	cmp	r3, #255	@ 0xff
90025bfe:	f040 80a1 	bne.w	90025d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90025c02:	803a      	strh	r2, [r7, #0]
90025c04:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025c06:	3702      	adds	r7, #2
90025c08:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025c0a:	4413      	add	r3, r2
90025c0c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025c0e:	931d      	str	r3, [sp, #116]	@ 0x74
90025c10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025c12:	441a      	add	r2, r3
90025c14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025c16:	3b01      	subs	r3, #1
90025c18:	921e      	str	r2, [sp, #120]	@ 0x78
90025c1a:	930f      	str	r3, [sp, #60]	@ 0x3c
90025c1c:	e6c7      	b.n	900259ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025c1e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025c20:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90025c22:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90025c24:	4433      	add	r3, r6
90025c26:	931d      	str	r3, [sp, #116]	@ 0x74
90025c28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025c2a:	441c      	add	r4, r3
90025c2c:	9b06      	ldr	r3, [sp, #24]
90025c2e:	3b01      	subs	r3, #1
90025c30:	941e      	str	r4, [sp, #120]	@ 0x78
90025c32:	9306      	str	r3, [sp, #24]
90025c34:	9b07      	ldr	r3, [sp, #28]
90025c36:	3302      	adds	r3, #2
90025c38:	9307      	str	r3, [sp, #28]
90025c3a:	e696      	b.n	9002596a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025c3c:	d028      	beq.n	90025c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025c3e:	9b06      	ldr	r3, [sp, #24]
90025c40:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025c42:	3b01      	subs	r3, #1
90025c44:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90025c46:	fb00 5003 	mla	r0, r0, r3, r5
90025c4a:	1400      	asrs	r0, r0, #16
90025c4c:	f53f aeaa 	bmi.w	900259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025c50:	3901      	subs	r1, #1
90025c52:	4288      	cmp	r0, r1
90025c54:	f6bf aea6 	bge.w	900259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025c58:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025c5a:	981e      	ldr	r0, [sp, #120]	@ 0x78
90025c5c:	fb01 0303 	mla	r3, r1, r3, r0
90025c60:	141b      	asrs	r3, r3, #16
90025c62:	f53f ae9f 	bmi.w	900259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025c66:	3a01      	subs	r2, #1
90025c68:	4293      	cmp	r3, r2
90025c6a:	f6bf ae9b 	bge.w	900259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025c6e:	9b06      	ldr	r3, [sp, #24]
90025c70:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025c74:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025c78:	930f      	str	r3, [sp, #60]	@ 0x3c
90025c7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025c7c:	2b00      	cmp	r3, #0
90025c7e:	f300 80b6 	bgt.w	90025dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90025c82:	9b06      	ldr	r3, [sp, #24]
90025c84:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025c88:	9b07      	ldr	r3, [sp, #28]
90025c8a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025c8e:	9307      	str	r3, [sp, #28]
90025c90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025c92:	2b00      	cmp	r3, #0
90025c94:	f340 8218 	ble.w	900260c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025c98:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025c9c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025c9e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025ca2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025ca6:	eef0 6a62 	vmov.f32	s13, s5
90025caa:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025cae:	ee31 1a05 	vadd.f32	s2, s2, s10
90025cb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025cb6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90025cba:	eef0 6a43 	vmov.f32	s13, s6
90025cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025cc2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90025cc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025cca:	ee61 7a27 	vmul.f32	s15, s2, s15
90025cce:	ee77 2a62 	vsub.f32	s5, s14, s5
90025cd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025cd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025cda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025cde:	ee12 2a90 	vmov	r2, s5
90025ce2:	eef0 2a47 	vmov.f32	s5, s14
90025ce6:	fb92 f3f3 	sdiv	r3, r2, r3
90025cea:	ee13 2a10 	vmov	r2, s6
90025cee:	931f      	str	r3, [sp, #124]	@ 0x7c
90025cf0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025cf2:	eeb0 3a67 	vmov.f32	s6, s15
90025cf6:	fb92 f3f3 	sdiv	r3, r2, r3
90025cfa:	9320      	str	r3, [sp, #128]	@ 0x80
90025cfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025cfe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025d00:	3b01      	subs	r3, #1
90025d02:	930e      	str	r3, [sp, #56]	@ 0x38
90025d04:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025d06:	bf08      	it	eq
90025d08:	4613      	moveq	r3, r2
90025d0a:	9306      	str	r3, [sp, #24]
90025d0c:	e61f      	b.n	9002594e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90025d0e:	fb08 f505 	mul.w	r5, r8, r5
90025d12:	fb09 5303 	mla	r3, r9, r3, r5
90025d16:	e69f      	b.n	90025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025d18:	4681      	mov	r9, r0
90025d1a:	e6c6      	b.n	90025aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025d1c:	f1c1 0210 	rsb	r2, r1, #16
90025d20:	4341      	muls	r1, r0
90025d22:	fb09 1902 	mla	r9, r9, r2, r1
90025d26:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025d2a:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025d2e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025d32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025d36:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025d3a:	ea42 0909 	orr.w	r9, r2, r9
90025d3e:	fa1f f289 	uxth.w	r2, r9
90025d42:	e75b      	b.n	90025bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90025d44:	f8b7 c000 	ldrh.w	ip, [r7]
90025d48:	43db      	mvns	r3, r3
90025d4a:	ea4f 202c 	mov.w	r0, ip, asr #8
90025d4e:	fa5f fe83 	uxtb.w	lr, r3
90025d52:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025d56:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025d5a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90025d5e:	fb00 f00e 	mul.w	r0, r0, lr
90025d62:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025d66:	b2db      	uxtb	r3, r3
90025d68:	1c41      	adds	r1, r0, #1
90025d6a:	fb05 f50e 	mul.w	r5, r5, lr
90025d6e:	fb03 f30e 	mul.w	r3, r3, lr
90025d72:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025d76:	1211      	asrs	r1, r2, #8
90025d78:	f021 0107 	bic.w	r1, r1, #7
90025d7c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025d80:	48d3      	ldr	r0, [pc, #844]	@ (900260d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025d82:	b2c9      	uxtb	r1, r1
90025d84:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025d88:	1c69      	adds	r1, r5, #1
90025d8a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90025d8e:	10d1      	asrs	r1, r2, #3
90025d90:	00d2      	lsls	r2, r2, #3
90025d92:	f021 0103 	bic.w	r1, r1, #3
90025d96:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025d9a:	00c9      	lsls	r1, r1, #3
90025d9c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025da0:	4301      	orrs	r1, r0
90025da2:	1c58      	adds	r0, r3, #1
90025da4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025da8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025dac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025db0:	430a      	orrs	r2, r1
90025db2:	e726      	b.n	90025c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90025db4:	f115 0e01 	adds.w	lr, r5, #1
90025db8:	f53f af24 	bmi.w	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025dbc:	4572      	cmp	r2, lr
90025dbe:	f6ff af21 	blt.w	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025dc2:	f110 0e01 	adds.w	lr, r0, #1
90025dc6:	f53f af1d 	bmi.w	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025dca:	4573      	cmp	r3, lr
90025dcc:	f6ff af1a 	blt.w	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025dd0:	b21b      	sxth	r3, r3
90025dd2:	b212      	sxth	r2, r2
90025dd4:	9301      	str	r3, [sp, #4]
90025dd6:	9200      	str	r2, [sp, #0]
90025dd8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025ddc:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025de0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025de4:	4639      	mov	r1, r7
90025de6:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025de8:	f7ff fc22 	bl	90025630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025dec:	e70a      	b.n	90025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025dee:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025df0:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025df4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025df6:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025dfa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025dfc:	fa1f fc82 	uxth.w	ip, r2
90025e00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025e04:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025e06:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025e0a:	141f      	asrs	r7, r3, #16
90025e0c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025e0e:	141b      	asrs	r3, r3, #16
90025e10:	fb01 3707 	mla	r7, r1, r7, r3
90025e14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025e16:	eb03 0a07 	add.w	sl, r3, r7
90025e1a:	f813 9007 	ldrb.w	r9, [r3, r7]
90025e1e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90025e22:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025e26:	b29b      	uxth	r3, r3
90025e28:	2d00      	cmp	r5, #0
90025e2a:	f000 80fe 	beq.w	9002602a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90025e2e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025e32:	eb0a 0b01 	add.w	fp, sl, r1
90025e36:	fa1f fa85 	uxth.w	sl, r5
90025e3a:	940c      	str	r4, [sp, #48]	@ 0x30
90025e3c:	fb0a fc0c 	mul.w	ip, sl, ip
90025e40:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025e44:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025e48:	eba0 000c 	sub.w	r0, r0, ip
90025e4c:	940d      	str	r4, [sp, #52]	@ 0x34
90025e4e:	fa1f fa8a 	uxth.w	sl, sl
90025e52:	b280      	uxth	r0, r0
90025e54:	eba3 030a 	sub.w	r3, r3, sl
90025e58:	fb08 f000 	mul.w	r0, r8, r0
90025e5c:	b29b      	uxth	r3, r3
90025e5e:	fb09 0303 	mla	r3, r9, r3, r0
90025e62:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025e64:	fb0a 3300 	mla	r3, sl, r0, r3
90025e68:	fb0c 3304 	mla	r3, ip, r4, r3
90025e6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025e70:	2b00      	cmp	r3, #0
90025e72:	f000 80cc 	beq.w	9002600e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025e76:	9808      	ldr	r0, [sp, #32]
90025e78:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025e7c:	9c08      	ldr	r4, [sp, #32]
90025e7e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025e82:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025e86:	f000 80d5 	beq.w	90026034 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025e8a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025e8e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025e92:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025e96:	fb0a fc0c 	mul.w	ip, sl, ip
90025e9a:	fb09 f707 	mul.w	r7, r9, r7
90025e9e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025ea2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025ea6:	f107 0b20 	add.w	fp, r7, #32
90025eaa:	44cc      	add	ip, r9
90025eac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025eb0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025eb4:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025eb8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025ebc:	ea4c 0909 	orr.w	r9, ip, r9
90025ec0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025ec4:	8847      	ldrh	r7, [r0, #2]
90025ec6:	d019      	beq.n	90025efc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025ec8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025ecc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025ed0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025ed4:	fb0a fc0c 	mul.w	ip, sl, ip
90025ed8:	fb08 f807 	mul.w	r8, r8, r7
90025edc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025ee0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025ee4:	f108 0b20 	add.w	fp, r8, #32
90025ee8:	44bc      	add	ip, r7
90025eea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025eee:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025ef2:	0a3f      	lsrs	r7, r7, #8
90025ef4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025ef8:	ea4c 0707 	orr.w	r7, ip, r7
90025efc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025f00:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025f04:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025f08:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025f0c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90025f10:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025f14:	ea4c 0909 	orr.w	r9, ip, r9
90025f18:	ea4a 0707 	orr.w	r7, sl, r7
90025f1c:	2d00      	cmp	r5, #0
90025f1e:	f000 808b 	beq.w	90026038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90025f22:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025f26:	3901      	subs	r1, #1
90025f28:	0049      	lsls	r1, r1, #1
90025f2a:	3102      	adds	r1, #2
90025f2c:	eb00 0c01 	add.w	ip, r0, r1
90025f30:	5a41      	ldrh	r1, [r0, r1]
90025f32:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025f34:	28ff      	cmp	r0, #255	@ 0xff
90025f36:	d019      	beq.n	90025f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025f38:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025f3c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025f3e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025f42:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025f46:	fb04 fa01 	mul.w	sl, r4, r1
90025f4a:	fb08 f800 	mul.w	r8, r8, r0
90025f4e:	f10a 0020 	add.w	r0, sl, #32
90025f52:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025f56:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025f5a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025f5e:	4441      	add	r1, r8
90025f60:	0a00      	lsrs	r0, r0, #8
90025f62:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025f66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025f6a:	4301      	orrs	r1, r0
90025f6c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025f6e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025f72:	2cff      	cmp	r4, #255	@ 0xff
90025f74:	d01a      	beq.n	90025fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025f76:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90025f7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025f7e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025f82:	fb04 fa00 	mul.w	sl, r4, r0
90025f86:	fb08 f80c 	mul.w	r8, r8, ip
90025f8a:	f10a 0c20 	add.w	ip, sl, #32
90025f8e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025f92:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025f96:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025f9a:	4440      	add	r0, r8
90025f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025fa0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025fa4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025fa8:	ea40 000c 	orr.w	r0, r0, ip
90025fac:	fb15 fc02 	smulbb	ip, r5, r2
90025fb0:	f1c5 0810 	rsb	r8, r5, #16
90025fb4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025fb8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025fbc:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025fc0:	eba8 0802 	sub.w	r8, r8, r2
90025fc4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025fc8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025fcc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025fd0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025fd4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025fd8:	ea4a 0101 	orr.w	r1, sl, r1
90025fdc:	437a      	muls	r2, r7
90025fde:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025fe2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025fe6:	fb09 2208 	mla	r2, r9, r8, r2
90025fea:	ea4b 0000 	orr.w	r0, fp, r0
90025fee:	fb05 2201 	mla	r2, r5, r1, r2
90025ff2:	fb0c 2200 	mla	r2, ip, r0, r2
90025ff6:	0d57      	lsrs	r7, r2, #21
90025ff8:	0952      	lsrs	r2, r2, #5
90025ffa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025ffe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026002:	433a      	orrs	r2, r7
90026004:	2bff      	cmp	r3, #255	@ 0xff
90026006:	b292      	uxth	r2, r2
90026008:	d127      	bne.n	9002605a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002600a:	f8ae 2000 	strh.w	r2, [lr]
9002600e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026010:	f10e 0e02 	add.w	lr, lr, #2
90026014:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90026016:	4413      	add	r3, r2
90026018:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
9002601a:	931d      	str	r3, [sp, #116]	@ 0x74
9002601c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002601e:	441a      	add	r2, r3
90026020:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026022:	3b01      	subs	r3, #1
90026024:	921e      	str	r2, [sp, #120]	@ 0x78
90026026:	930f      	str	r3, [sp, #60]	@ 0x3c
90026028:	e627      	b.n	90025c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002602a:	fb08 f000 	mul.w	r0, r8, r0
9002602e:	fb09 0303 	mla	r3, r9, r3, r0
90026032:	e71b      	b.n	90025e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90026034:	46b9      	mov	r9, r7
90026036:	e743      	b.n	90025ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90026038:	f1c2 0110 	rsb	r1, r2, #16
9002603c:	437a      	muls	r2, r7
9002603e:	fb09 2901 	mla	r9, r9, r1, r2
90026042:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026046:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002604a:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002604e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026052:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026056:	4302      	orrs	r2, r0
90026058:	e7d4      	b.n	90026004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002605a:	f8be 7000 	ldrh.w	r7, [lr]
9002605e:	43db      	mvns	r3, r3
90026060:	4c1b      	ldr	r4, [pc, #108]	@ (900260d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90026062:	1238      	asrs	r0, r7, #8
90026064:	fa5f fc83 	uxtb.w	ip, r3
90026068:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002606c:	10fd      	asrs	r5, r7, #3
9002606e:	00fb      	lsls	r3, r7, #3
90026070:	fb00 f00c 	mul.w	r0, r0, ip
90026074:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90026078:	b2db      	uxtb	r3, r3
9002607a:	fb05 f10c 	mul.w	r1, r5, ip
9002607e:	1c45      	adds	r5, r0, #1
90026080:	fb03 f30c 	mul.w	r3, r3, ip
90026084:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90026088:	1215      	asrs	r5, r2, #8
9002608a:	f025 0507 	bic.w	r5, r5, #7
9002608e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90026092:	1c4d      	adds	r5, r1, #1
90026094:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90026098:	10d1      	asrs	r1, r2, #3
9002609a:	b2c0      	uxtb	r0, r0
9002609c:	f021 0103 	bic.w	r1, r1, #3
900260a0:	00d2      	lsls	r2, r2, #3
900260a2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900260a6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900260aa:	00c9      	lsls	r1, r1, #3
900260ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900260b0:	4308      	orrs	r0, r1
900260b2:	1c59      	adds	r1, r3, #1
900260b4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900260b8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900260bc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900260c0:	4318      	orrs	r0, r3
900260c2:	f8ae 0000 	strh.w	r0, [lr]
900260c6:	e7a2      	b.n	9002600e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900260c8:	b013      	add	sp, #76	@ 0x4c
900260ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900260ce:	bf00      	nop
900260d0:	fffff800 	.word	0xfffff800

900260d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900260d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900260d8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
900260dc:	f9bd a020 	ldrsh.w	sl, [sp, #32]
900260e0:	fb05 4c03 	mla	ip, r5, r3, r4
900260e4:	2d00      	cmp	r5, #0
900260e6:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
900260ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900260ee:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900260f2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900260f6:	8808      	ldrh	r0, [r1, #0]
900260f8:	f2c0 80a7 	blt.w	9002624a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900260fc:	45aa      	cmp	sl, r5
900260fe:	f340 80a4 	ble.w	9002624a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026102:	2c00      	cmp	r4, #0
90026104:	f2c0 809f 	blt.w	90026246 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026108:	42a3      	cmp	r3, r4
9002610a:	f340 809c 	ble.w	90026246 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002610e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90026112:	1c62      	adds	r2, r4, #1
90026114:	f100 809c 	bmi.w	90026250 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026118:	4293      	cmp	r3, r2
9002611a:	f340 8099 	ble.w	90026250 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002611e:	f1b9 0f00 	cmp.w	r9, #0
90026122:	f000 8095 	beq.w	90026250 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026126:	f8be c002 	ldrh.w	ip, [lr, #2]
9002612a:	3501      	adds	r5, #1
9002612c:	f100 8094 	bmi.w	90026258 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026130:	45aa      	cmp	sl, r5
90026132:	f340 8091 	ble.w	90026258 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026136:	2f00      	cmp	r7, #0
90026138:	f000 808e 	beq.w	90026258 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002613c:	2c00      	cmp	r4, #0
9002613e:	f2c0 8089 	blt.w	90026254 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026142:	42a3      	cmp	r3, r4
90026144:	f340 8086 	ble.w	90026254 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026148:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
9002614c:	3401      	adds	r4, #1
9002614e:	f100 8086 	bmi.w	9002625e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026152:	42a3      	cmp	r3, r4
90026154:	f340 8083 	ble.w	9002625e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026158:	f1b9 0f00 	cmp.w	r9, #0
9002615c:	d07f      	beq.n	9002625e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002615e:	3301      	adds	r3, #1
90026160:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90026164:	ea4f 4408 	mov.w	r4, r8, lsl #16
90026168:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9002616c:	fb19 fe07 	smulbb	lr, r9, r7
90026170:	f1c7 0210 	rsb	r2, r7, #16
90026174:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026178:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002617c:	eba2 0209 	sub.w	r2, r2, r9
90026180:	ea44 0808 	orr.w	r8, r4, r8
90026184:	ea4f 440c 	mov.w	r4, ip, lsl #16
90026188:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002618c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90026190:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026194:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90026198:	ea44 0c0c 	orr.w	ip, r4, ip
9002619c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900261a0:	fb04 f40c 	mul.w	r4, r4, ip
900261a4:	fb02 4808 	mla	r8, r2, r8, r4
900261a8:	041a      	lsls	r2, r3, #16
900261aa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900261ae:	b2b4      	uxth	r4, r6
900261b0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900261b4:	43f6      	mvns	r6, r6
900261b6:	4313      	orrs	r3, r2
900261b8:	042a      	lsls	r2, r5, #16
900261ba:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900261be:	b2f6      	uxtb	r6, r6
900261c0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900261c4:	fb0e 8303 	mla	r3, lr, r3, r8
900261c8:	432a      	orrs	r2, r5
900261ca:	fb07 3202 	mla	r2, r7, r2, r3
900261ce:	10c7      	asrs	r7, r0, #3
900261d0:	0d53      	lsrs	r3, r2, #21
900261d2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900261d6:	0952      	lsrs	r2, r2, #5
900261d8:	fb17 f706 	smulbb	r7, r7, r6
900261dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900261e0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900261e4:	431a      	orrs	r2, r3
900261e6:	b293      	uxth	r3, r2
900261e8:	1202      	asrs	r2, r0, #8
900261ea:	121d      	asrs	r5, r3, #8
900261ec:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900261f0:	00c0      	lsls	r0, r0, #3
900261f2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900261f6:	fb12 f206 	smulbb	r2, r2, r6
900261fa:	b2c0      	uxtb	r0, r0
900261fc:	fb05 2504 	mla	r5, r5, r4, r2
90026200:	10da      	asrs	r2, r3, #3
90026202:	fb10 f006 	smulbb	r0, r0, r6
90026206:	00db      	lsls	r3, r3, #3
90026208:	b2ad      	uxth	r5, r5
9002620a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002620e:	b2db      	uxtb	r3, r3
90026210:	fb02 7204 	mla	r2, r2, r4, r7
90026214:	fb03 0004 	mla	r0, r3, r4, r0
90026218:	1c6b      	adds	r3, r5, #1
9002621a:	b292      	uxth	r2, r2
9002621c:	b280      	uxth	r0, r0
9002621e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026222:	1c43      	adds	r3, r0, #1
90026224:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026228:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002622c:	1c50      	adds	r0, r2, #1
9002622e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90026232:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026236:	0952      	lsrs	r2, r2, #5
90026238:	432b      	orrs	r3, r5
9002623a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002623e:	4313      	orrs	r3, r2
90026240:	800b      	strh	r3, [r1, #0]
90026242:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026246:	4680      	mov	r8, r0
90026248:	e763      	b.n	90026112 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
9002624a:	4684      	mov	ip, r0
9002624c:	4680      	mov	r8, r0
9002624e:	e76c      	b.n	9002612a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026250:	4684      	mov	ip, r0
90026252:	e76a      	b.n	9002612a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026254:	4605      	mov	r5, r0
90026256:	e779      	b.n	9002614c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90026258:	4603      	mov	r3, r0
9002625a:	4605      	mov	r5, r0
9002625c:	e782      	b.n	90026164 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002625e:	4603      	mov	r3, r0
90026260:	e780      	b.n	90026164 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90026262 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026262:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026266:	b093      	sub	sp, #76	@ 0x4c
90026268:	461d      	mov	r5, r3
9002626a:	9210      	str	r2, [sp, #64]	@ 0x40
9002626c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002626e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90026272:	910a      	str	r1, [sp, #40]	@ 0x28
90026274:	920b      	str	r2, [sp, #44]	@ 0x2c
90026276:	6859      	ldr	r1, [r3, #4]
90026278:	681b      	ldr	r3, [r3, #0]
9002627a:	9011      	str	r0, [sp, #68]	@ 0x44
9002627c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90026280:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90026284:	fb01 2707 	mla	r7, r1, r7, r2
90026288:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9002628c:	9307      	str	r3, [sp, #28]
9002628e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026290:	681b      	ldr	r3, [r3, #0]
90026292:	9309      	str	r3, [sp, #36]	@ 0x24
90026294:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90026296:	43db      	mvns	r3, r3
90026298:	b2db      	uxtb	r3, r3
9002629a:	9308      	str	r3, [sp, #32]
9002629c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002629e:	2b00      	cmp	r3, #0
900262a0:	dc03      	bgt.n	900262aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900262a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900262a4:	2b00      	cmp	r3, #0
900262a6:	f340 8205 	ble.w	900266b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900262aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900262ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900262b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900262b4:	1e48      	subs	r0, r1, #1
900262b6:	f102 3cff 	add.w	ip, r2, #4294967295
900262ba:	2d00      	cmp	r5, #0
900262bc:	f340 80da 	ble.w	90026474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900262c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900262c4:	ea4f 4326 	mov.w	r3, r6, asr #16
900262c8:	d406      	bmi.n	900262d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900262ca:	4586      	cmp	lr, r0
900262cc:	da04      	bge.n	900262d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900262ce:	2b00      	cmp	r3, #0
900262d0:	db02      	blt.n	900262d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900262d2:	4563      	cmp	r3, ip
900262d4:	f2c0 80cf 	blt.w	90026476 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900262d8:	f11e 0e01 	adds.w	lr, lr, #1
900262dc:	f100 80c1 	bmi.w	90026462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900262e0:	4571      	cmp	r1, lr
900262e2:	f2c0 80be 	blt.w	90026462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900262e6:	3301      	adds	r3, #1
900262e8:	f100 80bb 	bmi.w	90026462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900262ec:	429a      	cmp	r2, r3
900262ee:	f2c0 80b8 	blt.w	90026462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900262f2:	46a9      	mov	r9, r5
900262f4:	f8dd 801c 	ldr.w	r8, [sp, #28]
900262f8:	f1b9 0f00 	cmp.w	r9, #0
900262fc:	f340 80d8 	ble.w	900264b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90026300:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026302:	1421      	asrs	r1, r4, #16
90026304:	ea4f 4026 	mov.w	r0, r6, asr #16
90026308:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002630c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026310:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90026314:	f100 8112 	bmi.w	9002653c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026318:	f10e 3aff 	add.w	sl, lr, #4294967295
9002631c:	4551      	cmp	r1, sl
9002631e:	f280 810d 	bge.w	9002653c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026322:	2800      	cmp	r0, #0
90026324:	f2c0 810a 	blt.w	9002653c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026328:	f103 3aff 	add.w	sl, r3, #4294967295
9002632c:	4550      	cmp	r0, sl
9002632e:	f280 8105 	bge.w	9002653c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026332:	fa0f f38e 	sxth.w	r3, lr
90026336:	fb00 1103 	mla	r1, r0, r3, r1
9002633a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002633c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90026340:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90026344:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90026348:	f1bc 0f00 	cmp.w	ip, #0
9002634c:	d007      	beq.n	9002635e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002634e:	005b      	lsls	r3, r3, #1
90026350:	eb0a 0003 	add.w	r0, sl, r3
90026354:	f83a 3003 	ldrh.w	r3, [sl, r3]
90026358:	930c      	str	r3, [sp, #48]	@ 0x30
9002635a:	8843      	ldrh	r3, [r0, #2]
9002635c:	930d      	str	r3, [sp, #52]	@ 0x34
9002635e:	ea4f 400e 	mov.w	r0, lr, lsl #16
90026362:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026366:	fb12 f30c 	smulbb	r3, r2, ip
9002636a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002636e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90026372:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026376:	10db      	asrs	r3, r3, #3
90026378:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002637c:	ea40 000e 	orr.w	r0, r0, lr
90026380:	f1cc 0e10 	rsb	lr, ip, #16
90026384:	ea4a 0101 	orr.w	r1, sl, r1
90026388:	9f08      	ldr	r7, [sp, #32]
9002638a:	ebae 0e02 	sub.w	lr, lr, r2
9002638e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026392:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90026396:	4351      	muls	r1, r2
90026398:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002639a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002639e:	990c      	ldr	r1, [sp, #48]	@ 0x30
900263a0:	0410      	lsls	r0, r2, #16
900263a2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900263a6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900263aa:	4310      	orrs	r0, r2
900263ac:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900263ae:	0412      	lsls	r2, r2, #16
900263b0:	fb03 e000 	mla	r0, r3, r0, lr
900263b4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900263b8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900263bc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900263c0:	ea42 020e 	orr.w	r2, r2, lr
900263c4:	fb03 0302 	mla	r3, r3, r2, r0
900263c8:	f8b8 0000 	ldrh.w	r0, [r8]
900263cc:	0d5a      	lsrs	r2, r3, #21
900263ce:	095b      	lsrs	r3, r3, #5
900263d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900263d4:	1201      	asrs	r1, r0, #8
900263d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900263da:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900263de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900263e2:	00c0      	lsls	r0, r0, #3
900263e4:	4313      	orrs	r3, r2
900263e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900263ea:	fb11 f107 	smulbb	r1, r1, r7
900263ee:	b2c0      	uxtb	r0, r0
900263f0:	b29b      	uxth	r3, r3
900263f2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900263f6:	fb10 f007 	smulbb	r0, r0, r7
900263fa:	fb1e fe07 	smulbb	lr, lr, r7
900263fe:	ea4f 2c23 	mov.w	ip, r3, asr #8
90026402:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90026406:	fb0c 1c02 	mla	ip, ip, r2, r1
9002640a:	10d9      	asrs	r1, r3, #3
9002640c:	00db      	lsls	r3, r3, #3
9002640e:	fa1f fc8c 	uxth.w	ip, ip
90026412:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026416:	b2db      	uxtb	r3, r3
90026418:	fb01 e102 	mla	r1, r1, r2, lr
9002641c:	fb03 0302 	mla	r3, r3, r2, r0
90026420:	b289      	uxth	r1, r1
90026422:	b29a      	uxth	r2, r3
90026424:	f10c 0301 	add.w	r3, ip, #1
90026428:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002642c:	1c53      	adds	r3, r2, #1
9002642e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026432:	1c4a      	adds	r2, r1, #1
90026434:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90026438:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002643c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026440:	0949      	lsrs	r1, r1, #5
90026442:	ea43 030c 	orr.w	r3, r3, ip
90026446:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002644a:	430b      	orrs	r3, r1
9002644c:	f8a8 3000 	strh.w	r3, [r8]
90026450:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90026452:	f108 0802 	add.w	r8, r8, #2
90026456:	f109 39ff 	add.w	r9, r9, #4294967295
9002645a:	441c      	add	r4, r3
9002645c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002645e:	441e      	add	r6, r3
90026460:	e74a      	b.n	900262f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90026462:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90026464:	3d01      	subs	r5, #1
90026466:	441c      	add	r4, r3
90026468:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002646a:	441e      	add	r6, r3
9002646c:	9b07      	ldr	r3, [sp, #28]
9002646e:	3302      	adds	r3, #2
90026470:	9307      	str	r3, [sp, #28]
90026472:	e722      	b.n	900262ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90026474:	d022      	beq.n	900264bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90026476:	1e6b      	subs	r3, r5, #1
90026478:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002647a:	fb00 4003 	mla	r0, r0, r3, r4
9002647e:	1400      	asrs	r0, r0, #16
90026480:	f53f af37 	bmi.w	900262f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026484:	3901      	subs	r1, #1
90026486:	4288      	cmp	r0, r1
90026488:	f6bf af33 	bge.w	900262f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002648c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002648e:	fb01 6303 	mla	r3, r1, r3, r6
90026492:	141b      	asrs	r3, r3, #16
90026494:	f53f af2d 	bmi.w	900262f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026498:	3a01      	subs	r2, #1
9002649a:	4293      	cmp	r3, r2
9002649c:	f6bf af29 	bge.w	900262f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900264a0:	46a8      	mov	r8, r5
900264a2:	f8dd 901c 	ldr.w	r9, [sp, #28]
900264a6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900264aa:	f1b8 0f00 	cmp.w	r8, #0
900264ae:	dc60      	bgt.n	90026572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900264b0:	9b07      	ldr	r3, [sp, #28]
900264b2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900264b6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900264ba:	9307      	str	r3, [sp, #28]
900264bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900264be:	2b00      	cmp	r3, #0
900264c0:	f340 80f8 	ble.w	900266b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900264c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900264c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900264ca:	ee30 0a04 	vadd.f32	s0, s0, s8
900264ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
900264d2:	eef0 6a62 	vmov.f32	s13, s5
900264d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900264da:	ee31 1a05 	vadd.f32	s2, s2, s10
900264de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264e2:	ee16 4a90 	vmov	r4, s13
900264e6:	eef0 6a43 	vmov.f32	s13, s6
900264ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264ee:	ee16 6a90 	vmov	r6, s13
900264f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900264f6:	ee61 7a27 	vmul.f32	s15, s2, s15
900264fa:	ee77 2a62 	vsub.f32	s5, s14, s5
900264fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026502:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026506:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002650a:	ee12 2a90 	vmov	r2, s5
9002650e:	eef0 2a47 	vmov.f32	s5, s14
90026512:	fb92 f3f3 	sdiv	r3, r2, r3
90026516:	ee13 2a10 	vmov	r2, s6
9002651a:	931f      	str	r3, [sp, #124]	@ 0x7c
9002651c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002651e:	eeb0 3a67 	vmov.f32	s6, s15
90026522:	fb92 f3f3 	sdiv	r3, r2, r3
90026526:	9320      	str	r3, [sp, #128]	@ 0x80
90026528:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002652a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002652c:	3b01      	subs	r3, #1
9002652e:	930a      	str	r3, [sp, #40]	@ 0x28
90026530:	bf08      	it	eq
90026532:	4615      	moveq	r5, r2
90026534:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026536:	bf18      	it	ne
90026538:	461d      	movne	r5, r3
9002653a:	e6af      	b.n	9002629c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002653c:	f111 0a01 	adds.w	sl, r1, #1
90026540:	d486      	bmi.n	90026450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026542:	45d6      	cmp	lr, sl
90026544:	db84      	blt.n	90026450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026546:	f110 0a01 	adds.w	sl, r0, #1
9002654a:	d481      	bmi.n	90026450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002654c:	4553      	cmp	r3, sl
9002654e:	f6ff af7f 	blt.w	90026450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026552:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90026554:	b21b      	sxth	r3, r3
90026556:	9101      	str	r1, [sp, #4]
90026558:	4641      	mov	r1, r8
9002655a:	9300      	str	r3, [sp, #0]
9002655c:	fa0f f38e 	sxth.w	r3, lr
90026560:	e9cd 0202 	strd	r0, r2, [sp, #8]
90026564:	e9cd c704 	strd	ip, r7, [sp, #16]
90026568:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002656a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002656c:	f7ff fdb2 	bl	900260d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90026570:	e76e      	b.n	90026450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026572:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026574:	1430      	asrs	r0, r6, #16
90026576:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026578:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002657c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026580:	1423      	asrs	r3, r4, #16
90026582:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026586:	fb01 3000 	mla	r0, r1, r0, r3
9002658a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002658c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90026590:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90026594:	8858      	ldrh	r0, [r3, #2]
90026596:	f1be 0f00 	cmp.w	lr, #0
9002659a:	d00b      	beq.n	900265b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002659c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900265a0:	3901      	subs	r1, #1
900265a2:	0049      	lsls	r1, r1, #1
900265a4:	3102      	adds	r1, #2
900265a6:	eb03 0b01 	add.w	fp, r3, r1
900265aa:	5a5b      	ldrh	r3, [r3, r1]
900265ac:	930e      	str	r3, [sp, #56]	@ 0x38
900265ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900265b2:	930f      	str	r3, [sp, #60]	@ 0x3c
900265b4:	ea4f 410c 	mov.w	r1, ip, lsl #16
900265b8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900265bc:	fb12 f30e 	smulbb	r3, r2, lr
900265c0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900265c4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900265c8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900265cc:	10db      	asrs	r3, r3, #3
900265ce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900265d2:	ea41 010c 	orr.w	r1, r1, ip
900265d6:	f1ce 0c10 	rsb	ip, lr, #16
900265da:	ea4b 0000 	orr.w	r0, fp, r0
900265de:	9f08      	ldr	r7, [sp, #32]
900265e0:	ebac 0c02 	sub.w	ip, ip, r2
900265e4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900265e8:	f108 38ff 	add.w	r8, r8, #4294967295
900265ec:	4350      	muls	r0, r2
900265ee:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900265f2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900265f4:	fb0c 0c01 	mla	ip, ip, r1, r0
900265f8:	980e      	ldr	r0, [sp, #56]	@ 0x38
900265fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900265fe:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90026602:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90026604:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026608:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002660c:	0412      	lsls	r2, r2, #16
9002660e:	ea4b 0101 	orr.w	r1, fp, r1
90026612:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026616:	fb03 c101 	mla	r1, r3, r1, ip
9002661a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002661e:	4302      	orrs	r2, r0
90026620:	fb03 1202 	mla	r2, r3, r2, r1
90026624:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90026628:	0952      	lsrs	r2, r2, #5
9002662a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002662e:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90026632:	f8b9 2000 	ldrh.w	r2, [r9]
90026636:	ea4b 0303 	orr.w	r3, fp, r3
9002663a:	1211      	asrs	r1, r2, #8
9002663c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90026640:	b29b      	uxth	r3, r3
90026642:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026646:	00d2      	lsls	r2, r2, #3
90026648:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9002664c:	fb11 f107 	smulbb	r1, r1, r7
90026650:	1218      	asrs	r0, r3, #8
90026652:	fb1c fc07 	smulbb	ip, ip, r7
90026656:	b2d2      	uxtb	r2, r2
90026658:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002665c:	fb12 f207 	smulbb	r2, r2, r7
90026660:	fb00 100a 	mla	r0, r0, sl, r1
90026664:	10d9      	asrs	r1, r3, #3
90026666:	00db      	lsls	r3, r3, #3
90026668:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002666c:	b280      	uxth	r0, r0
9002666e:	b2db      	uxtb	r3, r3
90026670:	fb01 c10a 	mla	r1, r1, sl, ip
90026674:	fb03 230a 	mla	r3, r3, sl, r2
90026678:	1c42      	adds	r2, r0, #1
9002667a:	b289      	uxth	r1, r1
9002667c:	b29b      	uxth	r3, r3
9002667e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026682:	f101 0c01 	add.w	ip, r1, #1
90026686:	1c5a      	adds	r2, r3, #1
90026688:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002668c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90026690:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026694:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90026696:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002669a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002669e:	441c      	add	r4, r3
900266a0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900266a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900266a6:	4310      	orrs	r0, r2
900266a8:	441e      	add	r6, r3
900266aa:	ea40 000c 	orr.w	r0, r0, ip
900266ae:	f829 0b02 	strh.w	r0, [r9], #2
900266b2:	e6fa      	b.n	900264aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900266b4:	b013      	add	sp, #76	@ 0x4c
900266b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900266ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900266ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900266be:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900266c2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900266c6:	fb0e 4703 	mla	r7, lr, r3, r4
900266ca:	f1be 0f00 	cmp.w	lr, #0
900266ce:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900266d2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900266d6:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900266da:	8808      	ldrh	r0, [r1, #0]
900266dc:	db60      	blt.n	900267a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900266de:	45f1      	cmp	r9, lr
900266e0:	dd5e      	ble.n	900267a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900266e2:	2c00      	cmp	r4, #0
900266e4:	db5a      	blt.n	9002679c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900266e6:	42a3      	cmp	r3, r4
900266e8:	dd58      	ble.n	9002679c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900266ea:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
900266ee:	1c62      	adds	r2, r4, #1
900266f0:	d459      	bmi.n	900267a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900266f2:	4293      	cmp	r3, r2
900266f4:	dd57      	ble.n	900267a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900266f6:	2d00      	cmp	r5, #0
900266f8:	d055      	beq.n	900267a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900266fa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
900266fe:	f11e 0e01 	adds.w	lr, lr, #1
90026702:	d454      	bmi.n	900267ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026704:	45f1      	cmp	r9, lr
90026706:	dd52      	ble.n	900267ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026708:	2e00      	cmp	r6, #0
9002670a:	d050      	beq.n	900267ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002670c:	2c00      	cmp	r4, #0
9002670e:	db4c      	blt.n	900267aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026710:	42a3      	cmp	r3, r4
90026712:	dd4a      	ble.n	900267aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026714:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026718:	3401      	adds	r4, #1
9002671a:	d405      	bmi.n	90026728 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002671c:	42a3      	cmp	r3, r4
9002671e:	dd03      	ble.n	90026728 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026720:	b115      	cbz	r5, 90026728 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026722:	3301      	adds	r3, #1
90026724:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026728:	fb15 f406 	smulbb	r4, r5, r6
9002672c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90026730:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90026734:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026738:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002673c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90026740:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90026744:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026748:	ea43 0c0c 	orr.w	ip, r3, ip
9002674c:	f1c6 0310 	rsb	r3, r6, #16
90026750:	ea4e 0707 	orr.w	r7, lr, r7
90026754:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90026758:	1b5b      	subs	r3, r3, r5
9002675a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002675e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026762:	437d      	muls	r5, r7
90026764:	fb03 5c0c 	mla	ip, r3, ip, r5
90026768:	0403      	lsls	r3, r0, #16
9002676a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002676e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90026772:	4318      	orrs	r0, r3
90026774:	0413      	lsls	r3, r2, #16
90026776:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002677a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002677e:	fb04 c000 	mla	r0, r4, r0, ip
90026782:	4313      	orrs	r3, r2
90026784:	fb06 0003 	mla	r0, r6, r3, r0
90026788:	0d43      	lsrs	r3, r0, #21
9002678a:	0940      	lsrs	r0, r0, #5
9002678c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026790:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026794:	4318      	orrs	r0, r3
90026796:	8008      	strh	r0, [r1, #0]
90026798:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002679c:	4684      	mov	ip, r0
9002679e:	e7a6      	b.n	900266ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900267a0:	4607      	mov	r7, r0
900267a2:	4684      	mov	ip, r0
900267a4:	e7ab      	b.n	900266fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900267a6:	4607      	mov	r7, r0
900267a8:	e7a9      	b.n	900266fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900267aa:	4602      	mov	r2, r0
900267ac:	e7b4      	b.n	90026718 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900267ae:	4602      	mov	r2, r0
900267b0:	e7ba      	b.n	90026728 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900267b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900267b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900267b6:	b08f      	sub	sp, #60	@ 0x3c
900267b8:	461d      	mov	r5, r3
900267ba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900267bc:	9107      	str	r1, [sp, #28]
900267be:	920c      	str	r2, [sp, #48]	@ 0x30
900267c0:	6859      	ldr	r1, [r3, #4]
900267c2:	681b      	ldr	r3, [r3, #0]
900267c4:	900d      	str	r0, [sp, #52]	@ 0x34
900267c6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900267ca:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900267ce:	fb01 2707 	mla	r7, r1, r7, r2
900267d2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900267d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900267d8:	f8d3 8000 	ldr.w	r8, [r3]
900267dc:	9b07      	ldr	r3, [sp, #28]
900267de:	2b00      	cmp	r3, #0
900267e0:	dc03      	bgt.n	900267ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900267e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900267e4:	2b00      	cmp	r3, #0
900267e6:	f340 8182 	ble.w	90026aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900267ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900267ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900267f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900267f4:	1e48      	subs	r0, r1, #1
900267f6:	f102 3cff 	add.w	ip, r2, #4294967295
900267fa:	2d00      	cmp	r5, #0
900267fc:	f340 809b 	ble.w	90026936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90026800:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026804:	ea4f 4326 	mov.w	r3, r6, asr #16
90026808:	d406      	bmi.n	90026818 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002680a:	4586      	cmp	lr, r0
9002680c:	da04      	bge.n	90026818 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002680e:	2b00      	cmp	r3, #0
90026810:	db02      	blt.n	90026818 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026812:	4563      	cmp	r3, ip
90026814:	f2c0 8090 	blt.w	90026938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90026818:	f11e 0e01 	adds.w	lr, lr, #1
9002681c:	f100 8084 	bmi.w	90026928 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026820:	4571      	cmp	r1, lr
90026822:	f2c0 8081 	blt.w	90026928 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026826:	3301      	adds	r3, #1
90026828:	d47e      	bmi.n	90026928 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002682a:	429a      	cmp	r2, r3
9002682c:	db7c      	blt.n	90026928 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002682e:	46aa      	mov	sl, r5
90026830:	46b9      	mov	r9, r7
90026832:	f1ba 0f00 	cmp.w	sl, #0
90026836:	f340 8099 	ble.w	9002696c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002683a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002683c:	1421      	asrs	r1, r4, #16
9002683e:	ea4f 4026 	mov.w	r0, r6, asr #16
90026842:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026846:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002684a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002684e:	f100 80d1 	bmi.w	900269f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026852:	f10e 3bff 	add.w	fp, lr, #4294967295
90026856:	4559      	cmp	r1, fp
90026858:	f280 80cc 	bge.w	900269f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002685c:	2800      	cmp	r0, #0
9002685e:	f2c0 80c9 	blt.w	900269f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026862:	f103 3bff 	add.w	fp, r3, #4294967295
90026866:	4558      	cmp	r0, fp
90026868:	f280 80c4 	bge.w	900269f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002686c:	fa0f fe8e 	sxth.w	lr, lr
90026870:	fb00 110e 	mla	r1, r0, lr, r1
90026874:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026878:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
9002687c:	8841      	ldrh	r1, [r0, #2]
9002687e:	f1bc 0f00 	cmp.w	ip, #0
90026882:	d00b      	beq.n	9002689c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90026884:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90026888:	3b01      	subs	r3, #1
9002688a:	005b      	lsls	r3, r3, #1
9002688c:	3302      	adds	r3, #2
9002688e:	eb00 0e03 	add.w	lr, r0, r3
90026892:	5ac3      	ldrh	r3, [r0, r3]
90026894:	9308      	str	r3, [sp, #32]
90026896:	f8be 3002 	ldrh.w	r3, [lr, #2]
9002689a:	9309      	str	r3, [sp, #36]	@ 0x24
9002689c:	ea4f 400b 	mov.w	r0, fp, lsl #16
900268a0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900268a4:	fb12 f30c 	smulbb	r3, r2, ip
900268a8:	f1cc 0e10 	rsb	lr, ip, #16
900268ac:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900268b0:	10db      	asrs	r3, r3, #3
900268b2:	ebae 0e02 	sub.w	lr, lr, r2
900268b6:	ea40 000b 	orr.w	r0, r0, fp
900268ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900268be:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900268c2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900268c6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900268ca:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900268ce:	ea4b 0101 	orr.w	r1, fp, r1
900268d2:	4351      	muls	r1, r2
900268d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900268d6:	fb0e 1e00 	mla	lr, lr, r0, r1
900268da:	0410      	lsls	r0, r2, #16
900268dc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900268e0:	9908      	ldr	r1, [sp, #32]
900268e2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900268e6:	4310      	orrs	r0, r2
900268e8:	9a08      	ldr	r2, [sp, #32]
900268ea:	0412      	lsls	r2, r2, #16
900268ec:	fb03 e000 	mla	r0, r3, r0, lr
900268f0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900268f4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900268f8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900268fc:	ea42 020e 	orr.w	r2, r2, lr
90026900:	fb03 0302 	mla	r3, r3, r2, r0
90026904:	0d5a      	lsrs	r2, r3, #21
90026906:	095b      	lsrs	r3, r3, #5
90026908:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002690c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90026910:	4313      	orrs	r3, r2
90026912:	f8a9 3000 	strh.w	r3, [r9]
90026916:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026918:	f109 0902 	add.w	r9, r9, #2
9002691c:	f10a 3aff 	add.w	sl, sl, #4294967295
90026920:	441c      	add	r4, r3
90026922:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026924:	441e      	add	r6, r3
90026926:	e784      	b.n	90026832 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90026928:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002692a:	3d01      	subs	r5, #1
9002692c:	3702      	adds	r7, #2
9002692e:	441c      	add	r4, r3
90026930:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026932:	441e      	add	r6, r3
90026934:	e761      	b.n	900267fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026936:	d01d      	beq.n	90026974 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026938:	1e6b      	subs	r3, r5, #1
9002693a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002693c:	fb00 4003 	mla	r0, r0, r3, r4
90026940:	1400      	asrs	r0, r0, #16
90026942:	f53f af74 	bmi.w	9002682e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026946:	3901      	subs	r1, #1
90026948:	4288      	cmp	r0, r1
9002694a:	f6bf af70 	bge.w	9002682e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002694e:	991c      	ldr	r1, [sp, #112]	@ 0x70
90026950:	fb01 6303 	mla	r3, r1, r3, r6
90026954:	141b      	asrs	r3, r3, #16
90026956:	f53f af6a 	bmi.w	9002682e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002695a:	3a01      	subs	r2, #1
9002695c:	4293      	cmp	r3, r2
9002695e:	f6bf af66 	bge.w	9002682e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026962:	46a9      	mov	r9, r5
90026964:	46ba      	mov	sl, r7
90026966:	f1b9 0f00 	cmp.w	r9, #0
9002696a:	dc5b      	bgt.n	90026a24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002696c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026970:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90026974:	9b07      	ldr	r3, [sp, #28]
90026976:	2b00      	cmp	r3, #0
90026978:	f340 80b9 	ble.w	90026aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002697c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026980:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026982:	ee30 0a04 	vadd.f32	s0, s0, s8
90026986:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002698a:	eef0 6a62 	vmov.f32	s13, s5
9002698e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026992:	ee31 1a05 	vadd.f32	s2, s2, s10
90026996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002699a:	ee16 4a90 	vmov	r4, s13
9002699e:	eef0 6a43 	vmov.f32	s13, s6
900269a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900269a6:	ee16 6a90 	vmov	r6, s13
900269aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
900269ae:	ee61 7a27 	vmul.f32	s15, s2, s15
900269b2:	ee77 2a62 	vsub.f32	s5, s14, s5
900269b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900269ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900269be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900269c2:	ee12 2a90 	vmov	r2, s5
900269c6:	eef0 2a47 	vmov.f32	s5, s14
900269ca:	fb92 f3f3 	sdiv	r3, r2, r3
900269ce:	ee13 2a10 	vmov	r2, s6
900269d2:	931b      	str	r3, [sp, #108]	@ 0x6c
900269d4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900269d6:	eeb0 3a67 	vmov.f32	s6, s15
900269da:	fb92 f3f3 	sdiv	r3, r2, r3
900269de:	931c      	str	r3, [sp, #112]	@ 0x70
900269e0:	9b07      	ldr	r3, [sp, #28]
900269e2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900269e4:	3b01      	subs	r3, #1
900269e6:	9307      	str	r3, [sp, #28]
900269e8:	bf08      	it	eq
900269ea:	4615      	moveq	r5, r2
900269ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900269ee:	bf18      	it	ne
900269f0:	461d      	movne	r5, r3
900269f2:	e6f3      	b.n	900267dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900269f4:	f111 0b01 	adds.w	fp, r1, #1
900269f8:	d48d      	bmi.n	90026916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900269fa:	45de      	cmp	lr, fp
900269fc:	db8b      	blt.n	90026916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900269fe:	f110 0b01 	adds.w	fp, r0, #1
90026a02:	d488      	bmi.n	90026916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026a04:	455b      	cmp	r3, fp
90026a06:	db86      	blt.n	90026916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026a08:	b21b      	sxth	r3, r3
90026a0a:	e9cd 1001 	strd	r1, r0, [sp, #4]
90026a0e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90026a12:	9300      	str	r3, [sp, #0]
90026a14:	4642      	mov	r2, r8
90026a16:	fa0f f38e 	sxth.w	r3, lr
90026a1a:	4649      	mov	r1, r9
90026a1c:	980d      	ldr	r0, [sp, #52]	@ 0x34
90026a1e:	f7ff fe4c 	bl	900266ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90026a22:	e778      	b.n	90026916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026a24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026a26:	1420      	asrs	r0, r4, #16
90026a28:	1431      	asrs	r1, r6, #16
90026a2a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026a2e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90026a32:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026a36:	fb03 0101 	mla	r1, r3, r1, r0
90026a3a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026a3e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90026a42:	8841      	ldrh	r1, [r0, #2]
90026a44:	f1be 0f00 	cmp.w	lr, #0
90026a48:	d00b      	beq.n	90026a62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90026a4a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90026a4e:	3b01      	subs	r3, #1
90026a50:	005b      	lsls	r3, r3, #1
90026a52:	3302      	adds	r3, #2
90026a54:	eb00 0b03 	add.w	fp, r0, r3
90026a58:	5ac3      	ldrh	r3, [r0, r3]
90026a5a:	930a      	str	r3, [sp, #40]	@ 0x28
90026a5c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026a60:	930b      	str	r3, [sp, #44]	@ 0x2c
90026a62:	ea4f 400c 	mov.w	r0, ip, lsl #16
90026a66:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026a6a:	fb12 f30e 	smulbb	r3, r2, lr
90026a6e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90026a72:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90026a76:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026a7a:	10db      	asrs	r3, r3, #3
90026a7c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026a80:	ea40 000c 	orr.w	r0, r0, ip
90026a84:	f1ce 0c10 	rsb	ip, lr, #16
90026a88:	ea4b 0101 	orr.w	r1, fp, r1
90026a8c:	f109 39ff 	add.w	r9, r9, #4294967295
90026a90:	ebac 0c02 	sub.w	ip, ip, r2
90026a94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026a98:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90026a9c:	4351      	muls	r1, r2
90026a9e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026aa0:	fb0c 1c00 	mla	ip, ip, r0, r1
90026aa4:	990a      	ldr	r1, [sp, #40]	@ 0x28
90026aa6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026aaa:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90026aae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90026ab0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026ab4:	0412      	lsls	r2, r2, #16
90026ab6:	ea4b 0000 	orr.w	r0, fp, r0
90026aba:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90026abe:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026ac2:	fb03 c000 	mla	r0, r3, r0, ip
90026ac6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026aca:	ea42 0b0b 	orr.w	fp, r2, fp
90026ace:	fb03 000b 	mla	r0, r3, fp, r0
90026ad2:	0d43      	lsrs	r3, r0, #21
90026ad4:	0940      	lsrs	r0, r0, #5
90026ad6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026ada:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026ade:	4318      	orrs	r0, r3
90026ae0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026ae2:	441c      	add	r4, r3
90026ae4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026ae6:	f82a 0b02 	strh.w	r0, [sl], #2
90026aea:	441e      	add	r6, r3
90026aec:	e73b      	b.n	90026966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90026aee:	b00f      	add	sp, #60	@ 0x3c
90026af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026af4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90026af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026af8:	b085      	sub	sp, #20
90026afa:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026afe:	9102      	str	r1, [sp, #8]
90026b00:	2c00      	cmp	r4, #0
90026b02:	fb04 7103 	mla	r1, r4, r3, r7
90026b06:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026b0a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026b0e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026b12:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026b16:	f2c0 811b 	blt.w	90026d50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026b1a:	45a6      	cmp	lr, r4
90026b1c:	f340 8118 	ble.w	90026d50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026b20:	2f00      	cmp	r7, #0
90026b22:	f2c0 8113 	blt.w	90026d4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026b26:	42bb      	cmp	r3, r7
90026b28:	f340 8110 	ble.w	90026d4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026b2c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026b30:	1c7a      	adds	r2, r7, #1
90026b32:	f100 8110 	bmi.w	90026d56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026b36:	4293      	cmp	r3, r2
90026b38:	f340 810d 	ble.w	90026d56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026b3c:	2e00      	cmp	r6, #0
90026b3e:	f000 810c 	beq.w	90026d5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90026b42:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026b46:	3401      	adds	r4, #1
90026b48:	f100 810b 	bmi.w	90026d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026b4c:	45a6      	cmp	lr, r4
90026b4e:	f340 8108 	ble.w	90026d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026b52:	2800      	cmp	r0, #0
90026b54:	f000 8108 	beq.w	90026d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90026b58:	2f00      	cmp	r7, #0
90026b5a:	f2c0 8100 	blt.w	90026d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026b5e:	42bb      	cmp	r3, r7
90026b60:	f340 80fd 	ble.w	90026d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026b64:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026b68:	3701      	adds	r7, #1
90026b6a:	f100 8100 	bmi.w	90026d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026b6e:	42bb      	cmp	r3, r7
90026b70:	f340 80fd 	ble.w	90026d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026b74:	2e00      	cmp	r6, #0
90026b76:	f000 80fc 	beq.w	90026d72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90026b7a:	3301      	adds	r3, #1
90026b7c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90026b80:	b2b6      	uxth	r6, r6
90026b82:	b280      	uxth	r0, r0
90026b84:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026b88:	fb00 fe06 	mul.w	lr, r0, r6
90026b8c:	0136      	lsls	r6, r6, #4
90026b8e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026b92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026b96:	eba6 070e 	sub.w	r7, r6, lr
90026b9a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90026b9e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026ba2:	b280      	uxth	r0, r0
90026ba4:	b2bf      	uxth	r7, r7
90026ba6:	1a1b      	subs	r3, r3, r0
90026ba8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026bac:	fb0a f607 	mul.w	r6, sl, r7
90026bb0:	b29b      	uxth	r3, r3
90026bb2:	fb0b 6603 	mla	r6, fp, r3, r6
90026bb6:	fb00 6609 	mla	r6, r0, r9, r6
90026bba:	fb0e 6608 	mla	r6, lr, r8, r6
90026bbe:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026bc2:	9600      	str	r6, [sp, #0]
90026bc4:	2e00      	cmp	r6, #0
90026bc6:	f000 80be 	beq.w	90026d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90026bca:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026bce:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90026bd2:	9e02      	ldr	r6, [sp, #8]
90026bd4:	fb0b fc0c 	mul.w	ip, fp, ip
90026bd8:	fb0b f505 	mul.w	r5, fp, r5
90026bdc:	8836      	ldrh	r6, [r6, #0]
90026bde:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026be2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026be6:	9501      	str	r5, [sp, #4]
90026be8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90026bec:	44dc      	add	ip, fp
90026bee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026bf2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90026bf6:	9503      	str	r5, [sp, #12]
90026bf8:	9d01      	ldr	r5, [sp, #4]
90026bfa:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90026bfe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026c02:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90026c06:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026c0a:	fb0a fc0c 	mul.w	ip, sl, ip
90026c0e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026c12:	fb0a fa01 	mul.w	sl, sl, r1
90026c16:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026c1a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026c1e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90026c22:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026c26:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026c2a:	4465      	add	r5, ip
90026c2c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026c30:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026c34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c38:	fb09 fc0c 	mul.w	ip, r9, ip
90026c3c:	0a2d      	lsrs	r5, r5, #8
90026c3e:	fb09 f904 	mul.w	r9, r9, r4
90026c42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026c46:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026c4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026c4e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026c52:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026c56:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026c5a:	437d      	muls	r5, r7
90026c5c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026c60:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026c64:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026c68:	4461      	add	r1, ip
90026c6a:	fb08 f404 	mul.w	r4, r8, r4
90026c6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026c72:	fb08 f802 	mul.w	r8, r8, r2
90026c76:	0a09      	lsrs	r1, r1, #8
90026c78:	0a22      	lsrs	r2, r4, #8
90026c7a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90026c7e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026c82:	fb07 f70a 	mul.w	r7, r7, sl
90026c86:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026c8a:	4414      	add	r4, r2
90026c8c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026c90:	0a24      	lsrs	r4, r4, #8
90026c92:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026c96:	9a03      	ldr	r2, [sp, #12]
90026c98:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90026c9c:	fb02 5503 	mla	r5, r2, r3, r5
90026ca0:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026ca4:	9a00      	ldr	r2, [sp, #0]
90026ca6:	fb04 540e 	mla	r4, r4, lr, r5
90026caa:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90026cae:	1235      	asrs	r5, r6, #8
90026cb0:	fb01 4100 	mla	r1, r1, r0, r4
90026cb4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026cb8:	0a09      	lsrs	r1, r1, #8
90026cba:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026cbe:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90026cc2:	fb03 7101 	mla	r1, r3, r1, r7
90026cc6:	fb0e 1e08 	mla	lr, lr, r8, r1
90026cca:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90026cce:	fb00 e101 	mla	r1, r0, r1, lr
90026cd2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90026cd6:	b287      	uxth	r7, r0
90026cd8:	0a09      	lsrs	r1, r1, #8
90026cda:	437a      	muls	r2, r7
90026cdc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026ce0:	1c53      	adds	r3, r2, #1
90026ce2:	4321      	orrs	r1, r4
90026ce4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026ce8:	0c0a      	lsrs	r2, r1, #16
90026cea:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026cee:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026cf2:	b2c8      	uxtb	r0, r1
90026cf4:	fb12 f207 	smulbb	r2, r2, r7
90026cf8:	fb14 f407 	smulbb	r4, r4, r7
90026cfc:	b2db      	uxtb	r3, r3
90026cfe:	fb10 f007 	smulbb	r0, r0, r7
90026d02:	fb05 2503 	mla	r5, r5, r3, r2
90026d06:	10f2      	asrs	r2, r6, #3
90026d08:	00f6      	lsls	r6, r6, #3
90026d0a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026d0e:	b2ad      	uxth	r5, r5
90026d10:	b2f6      	uxtb	r6, r6
90026d12:	fb02 4203 	mla	r2, r2, r3, r4
90026d16:	fb06 0303 	mla	r3, r6, r3, r0
90026d1a:	b294      	uxth	r4, r2
90026d1c:	b299      	uxth	r1, r3
90026d1e:	1c6b      	adds	r3, r5, #1
90026d20:	1c62      	adds	r2, r4, #1
90026d22:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026d26:	1c4b      	adds	r3, r1, #1
90026d28:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026d2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026d30:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026d34:	0952      	lsrs	r2, r2, #5
90026d36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026d3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026d3e:	432b      	orrs	r3, r5
90026d40:	4313      	orrs	r3, r2
90026d42:	9a02      	ldr	r2, [sp, #8]
90026d44:	8013      	strh	r3, [r2, #0]
90026d46:	b005      	add	sp, #20
90026d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026d4c:	2500      	movs	r5, #0
90026d4e:	e6ef      	b.n	90026b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026d50:	2100      	movs	r1, #0
90026d52:	460d      	mov	r5, r1
90026d54:	e6f7      	b.n	90026b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026d56:	2100      	movs	r1, #0
90026d58:	e6f5      	b.n	90026b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026d5a:	4631      	mov	r1, r6
90026d5c:	e6f3      	b.n	90026b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026d5e:	2400      	movs	r4, #0
90026d60:	e702      	b.n	90026b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026d62:	2200      	movs	r2, #0
90026d64:	4614      	mov	r4, r2
90026d66:	e70b      	b.n	90026b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026d68:	4602      	mov	r2, r0
90026d6a:	4604      	mov	r4, r0
90026d6c:	e708      	b.n	90026b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026d6e:	2200      	movs	r2, #0
90026d70:	e706      	b.n	90026b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026d72:	4632      	mov	r2, r6
90026d74:	e704      	b.n	90026b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026d76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026d7a:	b09d      	sub	sp, #116	@ 0x74
90026d7c:	9219      	str	r2, [sp, #100]	@ 0x64
90026d7e:	9307      	str	r3, [sp, #28]
90026d80:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90026d82:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90026d86:	901b      	str	r0, [sp, #108]	@ 0x6c
90026d88:	931a      	str	r3, [sp, #104]	@ 0x68
90026d8a:	6850      	ldr	r0, [r2, #4]
90026d8c:	9117      	str	r1, [sp, #92]	@ 0x5c
90026d8e:	6812      	ldr	r2, [r2, #0]
90026d90:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90026d94:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90026d98:	fb00 1303 	mla	r3, r0, r3, r1
90026d9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026da0:	930a      	str	r3, [sp, #40]	@ 0x28
90026da2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026da4:	681b      	ldr	r3, [r3, #0]
90026da6:	9310      	str	r3, [sp, #64]	@ 0x40
90026da8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90026dac:	930b      	str	r3, [sp, #44]	@ 0x2c
90026dae:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026db0:	2b00      	cmp	r3, #0
90026db2:	dc03      	bgt.n	90026dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90026db4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90026db6:	2b00      	cmp	r3, #0
90026db8:	f340 8375 	ble.w	900274a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026dbc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026dbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026dc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026dc6:	1e48      	subs	r0, r1, #1
90026dc8:	1e57      	subs	r7, r2, #1
90026dca:	9b07      	ldr	r3, [sp, #28]
90026dcc:	2b00      	cmp	r3, #0
90026dce:	f340 818e 	ble.w	900270ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90026dd2:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026dd6:	ea4f 4326 	mov.w	r3, r6, asr #16
90026dda:	d406      	bmi.n	90026dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026ddc:	4584      	cmp	ip, r0
90026dde:	da04      	bge.n	90026dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026de0:	2b00      	cmp	r3, #0
90026de2:	db02      	blt.n	90026dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026de4:	42bb      	cmp	r3, r7
90026de6:	f2c0 8183 	blt.w	900270f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026dea:	f11c 0c01 	adds.w	ip, ip, #1
90026dee:	f100 8173 	bmi.w	900270d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026df2:	4561      	cmp	r1, ip
90026df4:	f2c0 8170 	blt.w	900270d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026df8:	3301      	adds	r3, #1
90026dfa:	f100 816d 	bmi.w	900270d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026dfe:	429a      	cmp	r2, r3
90026e00:	f2c0 816a 	blt.w	900270d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026e04:	9b07      	ldr	r3, [sp, #28]
90026e06:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026e08:	9318      	str	r3, [sp, #96]	@ 0x60
90026e0a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026e0c:	2b00      	cmp	r3, #0
90026e0e:	f340 818c 	ble.w	9002712a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90026e12:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90026e14:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026e18:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026e1a:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026e1e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026e22:	1422      	asrs	r2, r4, #16
90026e24:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026e28:	689b      	ldr	r3, [r3, #8]
90026e2a:	f100 81cd 	bmi.w	900271c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026e2e:	f103 38ff 	add.w	r8, r3, #4294967295
90026e32:	4542      	cmp	r2, r8
90026e34:	f280 81c8 	bge.w	900271c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026e38:	f1bc 0f00 	cmp.w	ip, #0
90026e3c:	f2c0 81c4 	blt.w	900271c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026e40:	f10e 38ff 	add.w	r8, lr, #4294967295
90026e44:	45c4      	cmp	ip, r8
90026e46:	f280 81bf 	bge.w	900271c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026e4a:	b21b      	sxth	r3, r3
90026e4c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026e4e:	fb0c 2203 	mla	r2, ip, r3, r2
90026e52:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026e56:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026e5a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026e5e:	2800      	cmp	r0, #0
90026e60:	f000 81a9 	beq.w	900271b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026e64:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026e68:	950c      	str	r5, [sp, #48]	@ 0x30
90026e6a:	0e2d      	lsrs	r5, r5, #24
90026e6c:	9513      	str	r5, [sp, #76]	@ 0x4c
90026e6e:	b181      	cbz	r1, 90026e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026e70:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90026e74:	3b01      	subs	r3, #1
90026e76:	009b      	lsls	r3, r3, #2
90026e78:	3304      	adds	r3, #4
90026e7a:	eb08 0c03 	add.w	ip, r8, r3
90026e7e:	f858 3003 	ldr.w	r3, [r8, r3]
90026e82:	9308      	str	r3, [sp, #32]
90026e84:	0e1b      	lsrs	r3, r3, #24
90026e86:	9311      	str	r3, [sp, #68]	@ 0x44
90026e88:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026e8c:	930d      	str	r3, [sp, #52]	@ 0x34
90026e8e:	0e1b      	lsrs	r3, r3, #24
90026e90:	9314      	str	r3, [sp, #80]	@ 0x50
90026e92:	b280      	uxth	r0, r0
90026e94:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026e96:	b289      	uxth	r1, r1
90026e98:	fb00 f901 	mul.w	r9, r0, r1
90026e9c:	0100      	lsls	r0, r0, #4
90026e9e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90026ea2:	eba0 0809 	sub.w	r8, r0, r9
90026ea6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026eaa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90026eac:	b289      	uxth	r1, r1
90026eae:	fa1f f888 	uxth.w	r8, r8
90026eb2:	1a5b      	subs	r3, r3, r1
90026eb4:	fb08 f000 	mul.w	r0, r8, r0
90026eb8:	b29b      	uxth	r3, r3
90026eba:	fb03 000e 	mla	r0, r3, lr, r0
90026ebe:	fb01 0005 	mla	r0, r1, r5, r0
90026ec2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026ec4:	fb09 0005 	mla	r0, r9, r5, r0
90026ec8:	f3c0 2007 	ubfx	r0, r0, #8, #8
90026ecc:	2800      	cmp	r0, #0
90026ece:	f000 80fa 	beq.w	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026ed2:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90026ed6:	d01b      	beq.n	90026f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026ed8:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026edc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026ee0:	fb0e fa0a 	mul.w	sl, lr, sl
90026ee4:	fb0e fe02 	mul.w	lr, lr, r2
90026ee8:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026eec:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026ef0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90026ef4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026ef8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026efc:	4452      	add	r2, sl
90026efe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026f02:	0a12      	lsrs	r2, r2, #8
90026f04:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026f08:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026f0c:	ea42 020c 	orr.w	r2, r2, ip
90026f10:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f12:	2dff      	cmp	r5, #255	@ 0xff
90026f14:	d021      	beq.n	90026f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026f16:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f18:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026f1c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f1e:	fb05 fb0b 	mul.w	fp, r5, fp
90026f22:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f24:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026f28:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026f2e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026f32:	fb05 fa0a 	mul.w	sl, r5, sl
90026f36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f3a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026f3e:	44de      	add	lr, fp
90026f40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026f44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026f48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026f54:	ea4e 050a 	orr.w	r5, lr, sl
90026f58:	950c      	str	r5, [sp, #48]	@ 0x30
90026f5a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026f5c:	2dff      	cmp	r5, #255	@ 0xff
90026f5e:	d021      	beq.n	90026fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026f60:	9d08      	ldr	r5, [sp, #32]
90026f62:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026f66:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026f68:	fb05 fb0b 	mul.w	fp, r5, fp
90026f6c:	9d08      	ldr	r5, [sp, #32]
90026f6e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026f72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026f74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026f78:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026f7c:	fb05 fa0a 	mul.w	sl, r5, sl
90026f80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f84:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026f88:	44de      	add	lr, fp
90026f8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026f8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026f92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026f9e:	ea4e 050a 	orr.w	r5, lr, sl
90026fa2:	9508      	str	r5, [sp, #32]
90026fa4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026fa6:	2dff      	cmp	r5, #255	@ 0xff
90026fa8:	d021      	beq.n	90026fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026faa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026fac:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026fb0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026fb2:	fb05 fb0b 	mul.w	fp, r5, fp
90026fb6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026fb8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026fbc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026fbe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026fc2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026fc6:	fb05 fa0a 	mul.w	sl, r5, sl
90026fca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026fce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026fd2:	44de      	add	lr, fp
90026fd4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026fd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026fdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026fe0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026fe4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026fe8:	ea4e 050a 	orr.w	r5, lr, sl
90026fec:	950d      	str	r5, [sp, #52]	@ 0x34
90026fee:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026ff0:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026ff4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026ff8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026ffc:	9d08      	ldr	r5, [sp, #32]
90026ffe:	fb08 fc0c 	mul.w	ip, r8, ip
90027002:	fb03 cc0e 	mla	ip, r3, lr, ip
90027006:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002700a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002700c:	fb01 cc0e 	mla	ip, r1, lr, ip
90027010:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90027014:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027016:	fb09 cc0e 	mla	ip, r9, lr, ip
9002701a:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002701e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90027020:	fb08 f80e 	mul.w	r8, r8, lr
90027024:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027028:	fb03 8202 	mla	r2, r3, r2, r8
9002702c:	9b08      	ldr	r3, [sp, #32]
9002702e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027032:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90027036:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027038:	fb01 220a 	mla	r2, r1, sl, r2
9002703c:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90027040:	883b      	ldrh	r3, [r7, #0]
90027042:	fb09 2901 	mla	r9, r9, r1, r2
90027046:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90027048:	1219      	asrs	r1, r3, #8
9002704a:	4342      	muls	r2, r0
9002704c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027050:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027054:	1c50      	adds	r0, r2, #1
90027056:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002705a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002705e:	ea4c 0c09 	orr.w	ip, ip, r9
90027062:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90027066:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002706a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002706e:	fa5f fc8c 	uxtb.w	ip, ip
90027072:	fb12 f205 	smulbb	r2, r2, r5
90027076:	b2c0      	uxtb	r0, r0
90027078:	fb1c fc05 	smulbb	ip, ip, r5
9002707c:	fb01 2100 	mla	r1, r1, r0, r2
90027080:	10da      	asrs	r2, r3, #3
90027082:	fb1e fe05 	smulbb	lr, lr, r5
90027086:	00db      	lsls	r3, r3, #3
90027088:	b289      	uxth	r1, r1
9002708a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002708e:	b2db      	uxtb	r3, r3
90027090:	fb02 e200 	mla	r2, r2, r0, lr
90027094:	fb03 c300 	mla	r3, r3, r0, ip
90027098:	b292      	uxth	r2, r2
9002709a:	fa1f fc83 	uxth.w	ip, r3
9002709e:	1c4b      	adds	r3, r1, #1
900270a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900270a4:	f10c 0301 	add.w	r3, ip, #1
900270a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900270ac:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900270b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900270b4:	430b      	orrs	r3, r1
900270b6:	1c51      	adds	r1, r2, #1
900270b8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900270bc:	0952      	lsrs	r2, r2, #5
900270be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900270c2:	4313      	orrs	r3, r2
900270c4:	803b      	strh	r3, [r7, #0]
900270c6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900270c8:	3702      	adds	r7, #2
900270ca:	441c      	add	r4, r3
900270cc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900270ce:	441e      	add	r6, r3
900270d0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900270d2:	3b01      	subs	r3, #1
900270d4:	9318      	str	r3, [sp, #96]	@ 0x60
900270d6:	e698      	b.n	90026e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900270d8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900270da:	441c      	add	r4, r3
900270dc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900270de:	441e      	add	r6, r3
900270e0:	9b07      	ldr	r3, [sp, #28]
900270e2:	3b01      	subs	r3, #1
900270e4:	9307      	str	r3, [sp, #28]
900270e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900270e8:	3302      	adds	r3, #2
900270ea:	930a      	str	r3, [sp, #40]	@ 0x28
900270ec:	e66d      	b.n	90026dca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900270ee:	d023      	beq.n	90027138 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900270f0:	9b07      	ldr	r3, [sp, #28]
900270f2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
900270f4:	3b01      	subs	r3, #1
900270f6:	fb00 4003 	mla	r0, r0, r3, r4
900270fa:	1400      	asrs	r0, r0, #16
900270fc:	f53f ae82 	bmi.w	90026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027100:	3901      	subs	r1, #1
90027102:	4288      	cmp	r0, r1
90027104:	f6bf ae7e 	bge.w	90026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027108:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9002710a:	fb01 6303 	mla	r3, r1, r3, r6
9002710e:	141b      	asrs	r3, r3, #16
90027110:	f53f ae78 	bmi.w	90026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027114:	3a01      	subs	r2, #1
90027116:	4293      	cmp	r3, r2
90027118:	f6bf ae74 	bge.w	90026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002711c:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027120:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90027124:	f1bb 0f00 	cmp.w	fp, #0
90027128:	dc6c      	bgt.n	90027204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002712a:	9b07      	ldr	r3, [sp, #28]
9002712c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027130:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027132:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027136:	930a      	str	r3, [sp, #40]	@ 0x28
90027138:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002713a:	2b00      	cmp	r3, #0
9002713c:	f340 81b3 	ble.w	900274a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027140:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027144:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90027146:	ee30 0a04 	vadd.f32	s0, s0, s8
9002714a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002714e:	eef0 6a62 	vmov.f32	s13, s5
90027152:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027156:	ee31 1a05 	vadd.f32	s2, s2, s10
9002715a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002715e:	ee16 4a90 	vmov	r4, s13
90027162:	eef0 6a43 	vmov.f32	s13, s6
90027166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002716a:	ee16 6a90 	vmov	r6, s13
9002716e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027172:	ee61 7a27 	vmul.f32	s15, s2, s15
90027176:	ee77 2a62 	vsub.f32	s5, s14, s5
9002717a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002717e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027186:	ee12 2a90 	vmov	r2, s5
9002718a:	eef0 2a47 	vmov.f32	s5, s14
9002718e:	fb92 f3f3 	sdiv	r3, r2, r3
90027192:	ee13 2a10 	vmov	r2, s6
90027196:	9329      	str	r3, [sp, #164]	@ 0xa4
90027198:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002719a:	eeb0 3a67 	vmov.f32	s6, s15
9002719e:	fb92 f3f3 	sdiv	r3, r2, r3
900271a2:	932a      	str	r3, [sp, #168]	@ 0xa8
900271a4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900271a6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900271a8:	3b01      	subs	r3, #1
900271aa:	9317      	str	r3, [sp, #92]	@ 0x5c
900271ac:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900271ae:	bf08      	it	eq
900271b0:	4613      	moveq	r3, r2
900271b2:	9307      	str	r3, [sp, #28]
900271b4:	e5fb      	b.n	90026dae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900271b6:	2900      	cmp	r1, #0
900271b8:	f43f ae6b 	beq.w	90026e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900271bc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900271c0:	9308      	str	r3, [sp, #32]
900271c2:	0e1b      	lsrs	r3, r3, #24
900271c4:	9311      	str	r3, [sp, #68]	@ 0x44
900271c6:	e664      	b.n	90026e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900271c8:	f112 0801 	adds.w	r8, r2, #1
900271cc:	f53f af7b 	bmi.w	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900271d0:	4543      	cmp	r3, r8
900271d2:	f6ff af78 	blt.w	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900271d6:	f11c 0801 	adds.w	r8, ip, #1
900271da:	f53f af74 	bmi.w	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900271de:	45c6      	cmp	lr, r8
900271e0:	f6ff af71 	blt.w	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900271e4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900271e6:	b21b      	sxth	r3, r3
900271e8:	9201      	str	r2, [sp, #4]
900271ea:	fa0f f28e 	sxth.w	r2, lr
900271ee:	e9cd 1504 	strd	r1, r5, [sp, #16]
900271f2:	e9cd c002 	strd	ip, r0, [sp, #8]
900271f6:	9200      	str	r2, [sp, #0]
900271f8:	4639      	mov	r1, r7
900271fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900271fc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900271fe:	f7ff fc79 	bl	90026af4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90027202:	e760      	b.n	900270c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027204:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027206:	1427      	asrs	r7, r4, #16
90027208:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002720a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002720e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027212:	1433      	asrs	r3, r6, #16
90027214:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027218:	fb01 7303 	mla	r3, r1, r3, r7
9002721c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90027220:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027224:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027228:	2a00      	cmp	r2, #0
9002722a:	f000 8133 	beq.w	90027494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002722e:	687d      	ldr	r5, [r7, #4]
90027230:	950e      	str	r5, [sp, #56]	@ 0x38
90027232:	0e2d      	lsrs	r5, r5, #24
90027234:	9515      	str	r5, [sp, #84]	@ 0x54
90027236:	b178      	cbz	r0, 90027258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027238:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
9002723c:	3901      	subs	r1, #1
9002723e:	0089      	lsls	r1, r1, #2
90027240:	3104      	adds	r1, #4
90027242:	eb07 0e01 	add.w	lr, r7, r1
90027246:	5879      	ldr	r1, [r7, r1]
90027248:	9109      	str	r1, [sp, #36]	@ 0x24
9002724a:	0e09      	lsrs	r1, r1, #24
9002724c:	9112      	str	r1, [sp, #72]	@ 0x48
9002724e:	f8de 1004 	ldr.w	r1, [lr, #4]
90027252:	910f      	str	r1, [sp, #60]	@ 0x3c
90027254:	0e09      	lsrs	r1, r1, #24
90027256:	9116      	str	r1, [sp, #88]	@ 0x58
90027258:	b292      	uxth	r2, r2
9002725a:	9915      	ldr	r1, [sp, #84]	@ 0x54
9002725c:	b280      	uxth	r0, r0
9002725e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027260:	fb02 f800 	mul.w	r8, r2, r0
90027264:	0112      	lsls	r2, r2, #4
90027266:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002726a:	eba2 0e08 	sub.w	lr, r2, r8
9002726e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90027272:	b280      	uxth	r0, r0
90027274:	fa1f fe8e 	uxth.w	lr, lr
90027278:	1a12      	subs	r2, r2, r0
9002727a:	fb0e f101 	mul.w	r1, lr, r1
9002727e:	b292      	uxth	r2, r2
90027280:	fb02 110c 	mla	r1, r2, ip, r1
90027284:	fb00 1105 	mla	r1, r0, r5, r1
90027288:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002728a:	fb08 1105 	mla	r1, r8, r5, r1
9002728e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90027292:	2900      	cmp	r1, #0
90027294:	f000 80f5 	beq.w	90027482 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90027298:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002729c:	d019      	beq.n	900272d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002729e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900272a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900272a6:	fb0c fa0a 	mul.w	sl, ip, sl
900272aa:	fb0c fc03 	mul.w	ip, ip, r3
900272ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900272b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900272b6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900272ba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900272be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900272c2:	4453      	add	r3, sl
900272c4:	0a3f      	lsrs	r7, r7, #8
900272c6:	0a1b      	lsrs	r3, r3, #8
900272c8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900272cc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900272d0:	433b      	orrs	r3, r7
900272d2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900272d4:	2dff      	cmp	r5, #255	@ 0xff
900272d6:	d020      	beq.n	9002731a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900272d8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272da:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900272de:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900272e0:	436f      	muls	r7, r5
900272e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900272e8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900272ec:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900272ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900272f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900272f6:	fb05 fa0a 	mul.w	sl, r5, sl
900272fa:	44bc      	add	ip, r7
900272fc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027304:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027308:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002730c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027310:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027314:	ea4c 050a 	orr.w	r5, ip, sl
90027318:	950e      	str	r5, [sp, #56]	@ 0x38
9002731a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002731c:	2dff      	cmp	r5, #255	@ 0xff
9002731e:	d020      	beq.n	90027362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90027320:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027322:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027326:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027328:	436f      	muls	r7, r5
9002732a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002732c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027330:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027334:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027336:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002733a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002733e:	fb05 fa0a 	mul.w	sl, r5, sl
90027342:	44bc      	add	ip, r7
90027344:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002734c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027350:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027358:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002735c:	ea4c 050a 	orr.w	r5, ip, sl
90027360:	9509      	str	r5, [sp, #36]	@ 0x24
90027362:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027364:	2dff      	cmp	r5, #255	@ 0xff
90027366:	d020      	beq.n	900273aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90027368:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002736a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002736e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027370:	436f      	muls	r7, r5
90027372:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027374:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027378:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002737c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002737e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027382:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027386:	fb05 fa0a 	mul.w	sl, r5, sl
9002738a:	44bc      	add	ip, r7
9002738c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027394:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027398:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002739c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900273a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900273a4:	ea4c 050a 	orr.w	r5, ip, sl
900273a8:	950f      	str	r5, [sp, #60]	@ 0x3c
900273aa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900273ac:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900273b0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900273b4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900273b8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900273ba:	fb0e f707 	mul.w	r7, lr, r7
900273be:	fb02 770c 	mla	r7, r2, ip, r7
900273c2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900273c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900273c8:	fb00 770c 	mla	r7, r0, ip, r7
900273cc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900273d0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900273d2:	fb08 770c 	mla	r7, r8, ip, r7
900273d6:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900273da:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900273dc:	fb0e fe0c 	mul.w	lr, lr, ip
900273e0:	0a3f      	lsrs	r7, r7, #8
900273e2:	fb02 e303 	mla	r3, r2, r3, lr
900273e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900273e8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900273ec:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900273f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900273f2:	fb00 330a 	mla	r3, r0, sl, r3
900273f6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900273fa:	f8b9 0000 	ldrh.w	r0, [r9]
900273fe:	fb08 3c0c 	mla	ip, r8, ip, r3
90027402:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90027404:	1202      	asrs	r2, r0, #8
90027406:	4359      	muls	r1, r3
90027408:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002740c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90027410:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027414:	1c4b      	adds	r3, r1, #1
90027416:	ea47 070c 	orr.w	r7, r7, ip
9002741a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002741e:	0c3b      	lsrs	r3, r7, #16
90027420:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90027424:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90027428:	b2ff      	uxtb	r7, r7
9002742a:	fb13 f305 	smulbb	r3, r3, r5
9002742e:	b2c9      	uxtb	r1, r1
90027430:	fb17 f705 	smulbb	r7, r7, r5
90027434:	fb02 3201 	mla	r2, r2, r1, r3
90027438:	10c3      	asrs	r3, r0, #3
9002743a:	fb1c fc05 	smulbb	ip, ip, r5
9002743e:	00c0      	lsls	r0, r0, #3
90027440:	b292      	uxth	r2, r2
90027442:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90027446:	b2c0      	uxtb	r0, r0
90027448:	fb03 c301 	mla	r3, r3, r1, ip
9002744c:	fb00 7001 	mla	r0, r0, r1, r7
90027450:	1c51      	adds	r1, r2, #1
90027452:	b29b      	uxth	r3, r3
90027454:	b280      	uxth	r0, r0
90027456:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002745a:	f100 0c01 	add.w	ip, r0, #1
9002745e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90027462:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90027466:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002746a:	ea4c 0202 	orr.w	r2, ip, r2
9002746e:	f103 0c01 	add.w	ip, r3, #1
90027472:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90027476:	095b      	lsrs	r3, r3, #5
90027478:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002747c:	431a      	orrs	r2, r3
9002747e:	f8a9 2000 	strh.w	r2, [r9]
90027482:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90027484:	f109 0902 	add.w	r9, r9, #2
90027488:	f10b 3bff 	add.w	fp, fp, #4294967295
9002748c:	441c      	add	r4, r3
9002748e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90027490:	441e      	add	r6, r3
90027492:	e647      	b.n	90027124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90027494:	2800      	cmp	r0, #0
90027496:	f43f aedf 	beq.w	90027258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002749a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002749e:	9109      	str	r1, [sp, #36]	@ 0x24
900274a0:	0e09      	lsrs	r1, r1, #24
900274a2:	9112      	str	r1, [sp, #72]	@ 0x48
900274a4:	e6d8      	b.n	90027258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900274a6:	b01d      	add	sp, #116	@ 0x74
900274a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900274ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900274ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900274b0:	b085      	sub	sp, #20
900274b2:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900274b6:	9102      	str	r1, [sp, #8]
900274b8:	2c00      	cmp	r4, #0
900274ba:	fb04 7103 	mla	r1, r4, r3, r7
900274be:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900274c2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900274c6:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900274ca:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900274ce:	f2c0 810c 	blt.w	900276ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900274d2:	45a6      	cmp	lr, r4
900274d4:	f340 8109 	ble.w	900276ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900274d8:	2f00      	cmp	r7, #0
900274da:	f2c0 8104 	blt.w	900276e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900274de:	42bb      	cmp	r3, r7
900274e0:	f340 8101 	ble.w	900276e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900274e4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900274e8:	1c7a      	adds	r2, r7, #1
900274ea:	f100 8101 	bmi.w	900276f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900274ee:	4293      	cmp	r3, r2
900274f0:	f340 80fe 	ble.w	900276f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900274f4:	2e00      	cmp	r6, #0
900274f6:	f000 80fd 	beq.w	900276f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900274fa:	f8dc 1004 	ldr.w	r1, [ip, #4]
900274fe:	3401      	adds	r4, #1
90027500:	f100 80fc 	bmi.w	900276fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027504:	45a6      	cmp	lr, r4
90027506:	f340 80f9 	ble.w	900276fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002750a:	2800      	cmp	r0, #0
9002750c:	f000 80f9 	beq.w	90027702 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90027510:	2f00      	cmp	r7, #0
90027512:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90027516:	f2c0 80ef 	blt.w	900276f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002751a:	42bb      	cmp	r3, r7
9002751c:	f340 80ec 	ble.w	900276f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027520:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90027524:	3701      	adds	r7, #1
90027526:	f100 80ef 	bmi.w	90027708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002752a:	42bb      	cmp	r3, r7
9002752c:	f340 80ec 	ble.w	90027708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027530:	2e00      	cmp	r6, #0
90027532:	f000 80eb 	beq.w	9002770c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90027536:	6852      	ldr	r2, [r2, #4]
90027538:	b2b6      	uxth	r6, r6
9002753a:	b280      	uxth	r0, r0
9002753c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90027540:	fb00 fe06 	mul.w	lr, r0, r6
90027544:	0136      	lsls	r6, r6, #4
90027546:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002754a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002754e:	eba6 070e 	sub.w	r7, r6, lr
90027552:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90027556:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002755a:	b280      	uxth	r0, r0
9002755c:	b2bf      	uxth	r7, r7
9002755e:	1a1b      	subs	r3, r3, r0
90027560:	ea4f 6812 	mov.w	r8, r2, lsr #24
90027564:	fb07 f60a 	mul.w	r6, r7, sl
90027568:	b29b      	uxth	r3, r3
9002756a:	fb0b 6603 	mla	r6, fp, r3, r6
9002756e:	fb00 6609 	mla	r6, r0, r9, r6
90027572:	fb0e 6608 	mla	r6, lr, r8, r6
90027576:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002757a:	9600      	str	r6, [sp, #0]
9002757c:	2e00      	cmp	r6, #0
9002757e:	f000 80af 	beq.w	900276e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90027582:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027586:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002758a:	9e02      	ldr	r6, [sp, #8]
9002758c:	fb0b fc0c 	mul.w	ip, fp, ip
90027590:	fb0b f505 	mul.w	r5, fp, r5
90027594:	8836      	ldrh	r6, [r6, #0]
90027596:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002759a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002759e:	9501      	str	r5, [sp, #4]
900275a0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900275a4:	44dc      	add	ip, fp
900275a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900275aa:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900275ae:	9503      	str	r5, [sp, #12]
900275b0:	9d01      	ldr	r5, [sp, #4]
900275b2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900275b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900275ba:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900275be:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900275c2:	fb0a fc0c 	mul.w	ip, sl, ip
900275c6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900275ca:	fb0a fa01 	mul.w	sl, sl, r1
900275ce:	ea4f 251c 	mov.w	r5, ip, lsr #8
900275d2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900275d6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900275da:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900275de:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900275e2:	4465      	add	r5, ip
900275e4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900275e8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900275ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900275f0:	fb09 fc0c 	mul.w	ip, r9, ip
900275f4:	0a2d      	lsrs	r5, r5, #8
900275f6:	fb09 f904 	mul.w	r9, r9, r4
900275fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900275fe:	ea4f 211c 	mov.w	r1, ip, lsr #8
90027602:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027606:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002760a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002760e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90027612:	437d      	muls	r5, r7
90027614:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027618:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002761c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027620:	4461      	add	r1, ip
90027622:	fb08 f404 	mul.w	r4, r8, r4
90027626:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002762a:	fb08 f802 	mul.w	r8, r8, r2
9002762e:	0a09      	lsrs	r1, r1, #8
90027630:	0a22      	lsrs	r2, r4, #8
90027632:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90027636:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002763a:	fb07 f70a 	mul.w	r7, r7, sl
9002763e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027642:	4414      	add	r4, r2
90027644:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90027648:	0a24      	lsrs	r4, r4, #8
9002764a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002764e:	9a03      	ldr	r2, [sp, #12]
90027650:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90027654:	fb02 5503 	mla	r5, r2, r3, r5
90027658:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002765c:	fb04 540e 	mla	r4, r4, lr, r5
90027660:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90027664:	fb01 4100 	mla	r1, r1, r0, r4
90027668:	0a09      	lsrs	r1, r1, #8
9002766a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9002766e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90027672:	fb03 7101 	mla	r1, r3, r1, r7
90027676:	9b00      	ldr	r3, [sp, #0]
90027678:	fb0e 1e08 	mla	lr, lr, r8, r1
9002767c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90027680:	43da      	mvns	r2, r3
90027682:	1233      	asrs	r3, r6, #8
90027684:	fb00 e101 	mla	r1, r0, r1, lr
90027688:	10f0      	asrs	r0, r6, #3
9002768a:	b2d2      	uxtb	r2, r2
9002768c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027690:	0a09      	lsrs	r1, r1, #8
90027692:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027696:	00f6      	lsls	r6, r6, #3
90027698:	4353      	muls	r3, r2
9002769a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002769e:	4350      	muls	r0, r2
900276a0:	b2f6      	uxtb	r6, r6
900276a2:	4321      	orrs	r1, r4
900276a4:	4356      	muls	r6, r2
900276a6:	1c5a      	adds	r2, r3, #1
900276a8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900276ac:	0c0b      	lsrs	r3, r1, #16
900276ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900276b2:	1c42      	adds	r2, r0, #1
900276b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900276b8:	0a0a      	lsrs	r2, r1, #8
900276ba:	021b      	lsls	r3, r3, #8
900276bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900276c0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900276c4:	00d2      	lsls	r2, r2, #3
900276c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900276ca:	4313      	orrs	r3, r2
900276cc:	1c72      	adds	r2, r6, #1
900276ce:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900276d2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900276d6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900276da:	4319      	orrs	r1, r3
900276dc:	9b02      	ldr	r3, [sp, #8]
900276de:	8019      	strh	r1, [r3, #0]
900276e0:	b005      	add	sp, #20
900276e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900276e6:	2500      	movs	r5, #0
900276e8:	e6fe      	b.n	900274e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
900276ea:	2100      	movs	r1, #0
900276ec:	460d      	mov	r5, r1
900276ee:	e706      	b.n	900274fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900276f0:	2100      	movs	r1, #0
900276f2:	e704      	b.n	900274fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900276f4:	4631      	mov	r1, r6
900276f6:	e702      	b.n	900274fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900276f8:	2400      	movs	r4, #0
900276fa:	e713      	b.n	90027524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
900276fc:	2200      	movs	r2, #0
900276fe:	4614      	mov	r4, r2
90027700:	e71a      	b.n	90027538 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027702:	4602      	mov	r2, r0
90027704:	4604      	mov	r4, r0
90027706:	e717      	b.n	90027538 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027708:	2200      	movs	r2, #0
9002770a:	e715      	b.n	90027538 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002770c:	4632      	mov	r2, r6
9002770e:	e713      	b.n	90027538 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90027710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027714:	b09b      	sub	sp, #108	@ 0x6c
90027716:	9218      	str	r2, [sp, #96]	@ 0x60
90027718:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002771a:	9019      	str	r0, [sp, #100]	@ 0x64
9002771c:	9116      	str	r1, [sp, #88]	@ 0x58
9002771e:	6850      	ldr	r0, [r2, #4]
90027720:	9307      	str	r3, [sp, #28]
90027722:	6812      	ldr	r2, [r2, #0]
90027724:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90027728:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
9002772c:	fb00 1303 	mla	r3, r0, r3, r1
90027730:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027734:	930a      	str	r3, [sp, #40]	@ 0x28
90027736:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027738:	681b      	ldr	r3, [r3, #0]
9002773a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002773c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002773e:	2b00      	cmp	r3, #0
90027740:	dc03      	bgt.n	9002774a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027742:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027744:	2b00      	cmp	r3, #0
90027746:	f340 8387 	ble.w	90027e58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002774a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002774c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027750:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027754:	1e48      	subs	r0, r1, #1
90027756:	1e57      	subs	r7, r2, #1
90027758:	9b07      	ldr	r3, [sp, #28]
9002775a:	2b00      	cmp	r3, #0
9002775c:	f340 8166 	ble.w	90027a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027760:	ea5f 4c24 	movs.w	ip, r4, asr #16
90027764:	ea4f 4326 	mov.w	r3, r6, asr #16
90027768:	d406      	bmi.n	90027778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002776a:	4584      	cmp	ip, r0
9002776c:	da04      	bge.n	90027778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002776e:	2b00      	cmp	r3, #0
90027770:	db02      	blt.n	90027778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027772:	42bb      	cmp	r3, r7
90027774:	f2c0 815b 	blt.w	90027a2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027778:	f11c 0c01 	adds.w	ip, ip, #1
9002777c:	f100 814b 	bmi.w	90027a16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027780:	4561      	cmp	r1, ip
90027782:	f2c0 8148 	blt.w	90027a16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027786:	3301      	adds	r3, #1
90027788:	f100 8145 	bmi.w	90027a16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002778c:	429a      	cmp	r2, r3
9002778e:	f2c0 8142 	blt.w	90027a16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027792:	9b07      	ldr	r3, [sp, #28]
90027794:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90027796:	9317      	str	r3, [sp, #92]	@ 0x5c
90027798:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002779a:	2b00      	cmp	r3, #0
9002779c:	f340 8165 	ble.w	90027a6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900277a0:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900277a2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900277a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900277a8:	f3c4 3103 	ubfx	r1, r4, #12, #4
900277ac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900277b0:	1422      	asrs	r2, r4, #16
900277b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900277b6:	689b      	ldr	r3, [r3, #8]
900277b8:	f100 81d5 	bmi.w	90027b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900277bc:	f103 38ff 	add.w	r8, r3, #4294967295
900277c0:	4542      	cmp	r2, r8
900277c2:	f280 81d0 	bge.w	90027b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900277c6:	f1bc 0f00 	cmp.w	ip, #0
900277ca:	f2c0 81cc 	blt.w	90027b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900277ce:	f10e 38ff 	add.w	r8, lr, #4294967295
900277d2:	45c4      	cmp	ip, r8
900277d4:	f280 81c7 	bge.w	90027b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900277d8:	b21b      	sxth	r3, r3
900277da:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900277dc:	fb0c 2203 	mla	r2, ip, r3, r2
900277e0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900277e4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900277e8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900277ec:	2900      	cmp	r1, #0
900277ee:	f000 8182 	beq.w	90027af6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900277f2:	f8d8 5004 	ldr.w	r5, [r8, #4]
900277f6:	950b      	str	r5, [sp, #44]	@ 0x2c
900277f8:	0e2d      	lsrs	r5, r5, #24
900277fa:	9512      	str	r5, [sp, #72]	@ 0x48
900277fc:	b180      	cbz	r0, 90027820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900277fe:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90027802:	3b01      	subs	r3, #1
90027804:	009b      	lsls	r3, r3, #2
90027806:	3304      	adds	r3, #4
90027808:	eb08 0c03 	add.w	ip, r8, r3
9002780c:	f858 3003 	ldr.w	r3, [r8, r3]
90027810:	9308      	str	r3, [sp, #32]
90027812:	0e1b      	lsrs	r3, r3, #24
90027814:	9310      	str	r3, [sp, #64]	@ 0x40
90027816:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002781a:	930c      	str	r3, [sp, #48]	@ 0x30
9002781c:	0e1b      	lsrs	r3, r3, #24
9002781e:	9313      	str	r3, [sp, #76]	@ 0x4c
90027820:	b289      	uxth	r1, r1
90027822:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90027824:	b280      	uxth	r0, r0
90027826:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027828:	fb01 f900 	mul.w	r9, r1, r0
9002782c:	0109      	lsls	r1, r1, #4
9002782e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027832:	eba1 0809 	sub.w	r8, r1, r9
90027836:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
9002783a:	b280      	uxth	r0, r0
9002783c:	fa1f f888 	uxth.w	r8, r8
90027840:	1a09      	subs	r1, r1, r0
90027842:	fb08 f303 	mul.w	r3, r8, r3
90027846:	b289      	uxth	r1, r1
90027848:	fb01 330e 	mla	r3, r1, lr, r3
9002784c:	fb00 3305 	mla	r3, r0, r5, r3
90027850:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027852:	fb09 3305 	mla	r3, r9, r5, r3
90027856:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002785a:	2b00      	cmp	r3, #0
9002785c:	f000 80d2 	beq.w	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027860:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90027864:	d01b      	beq.n	9002789e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90027866:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
9002786a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002786e:	fb0e fa0a 	mul.w	sl, lr, sl
90027872:	fb0e fe02 	mul.w	lr, lr, r2
90027876:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002787a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002787e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90027882:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027886:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002788a:	4452      	add	r2, sl
9002788c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027890:	0a12      	lsrs	r2, r2, #8
90027892:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027896:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002789a:	ea42 020c 	orr.w	r2, r2, ip
9002789e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900278a0:	2dff      	cmp	r5, #255	@ 0xff
900278a2:	d021      	beq.n	900278e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900278a4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900278a6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900278aa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900278ac:	fb05 fb0b 	mul.w	fp, r5, fp
900278b0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900278b2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900278b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900278b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900278bc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900278c0:	fb05 fa0a 	mul.w	sl, r5, sl
900278c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900278c8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900278cc:	44de      	add	lr, fp
900278ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900278d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900278d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900278da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900278de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900278e2:	ea4e 050a 	orr.w	r5, lr, sl
900278e6:	950b      	str	r5, [sp, #44]	@ 0x2c
900278e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900278ea:	2dff      	cmp	r5, #255	@ 0xff
900278ec:	d021      	beq.n	90027932 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900278ee:	9d08      	ldr	r5, [sp, #32]
900278f0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900278f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900278f6:	fb05 fb0b 	mul.w	fp, r5, fp
900278fa:	9d08      	ldr	r5, [sp, #32]
900278fc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027900:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027902:	fb05 fa0e 	mul.w	sl, r5, lr
90027906:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002790a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002790e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027912:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027916:	44de      	add	lr, fp
90027918:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002791c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027924:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027928:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002792c:	ea4e 050a 	orr.w	r5, lr, sl
90027930:	9508      	str	r5, [sp, #32]
90027932:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027934:	2dff      	cmp	r5, #255	@ 0xff
90027936:	d021      	beq.n	9002797c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90027938:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002793a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002793e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027940:	fb05 fb0b 	mul.w	fp, r5, fp
90027944:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027946:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002794a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002794c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027950:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027954:	fb05 fa0a 	mul.w	sl, r5, sl
90027958:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002795c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027960:	44de      	add	lr, fp
90027962:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027966:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002796a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002796e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027972:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027976:	ea4e 050a 	orr.w	r5, lr, sl
9002797a:	950c      	str	r5, [sp, #48]	@ 0x30
9002797c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002797e:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90027982:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027986:	2bff      	cmp	r3, #255	@ 0xff
90027988:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002798c:	9d08      	ldr	r5, [sp, #32]
9002798e:	fb08 fc0c 	mul.w	ip, r8, ip
90027992:	fb01 cc0e 	mla	ip, r1, lr, ip
90027996:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002799a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002799c:	fb00 cc0e 	mla	ip, r0, lr, ip
900279a0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900279a4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900279a6:	fb09 cc0e 	mla	ip, r9, lr, ip
900279aa:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900279ae:	fb08 f80e 	mul.w	r8, r8, lr
900279b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900279b6:	fb01 8202 	mla	r2, r1, r2, r8
900279ba:	9908      	ldr	r1, [sp, #32]
900279bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900279c0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900279c4:	990c      	ldr	r1, [sp, #48]	@ 0x30
900279c6:	fb00 220a 	mla	r2, r0, sl, r2
900279ca:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900279ce:	fb09 2900 	mla	r9, r9, r0, r2
900279d2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900279d6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900279da:	ea4c 0c09 	orr.w	ip, ip, r9
900279de:	ea4f 221c 	mov.w	r2, ip, lsr #8
900279e2:	f040 8091 	bne.w	90027b08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900279e6:	ea4f 135c 	mov.w	r3, ip, lsr #5
900279ea:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
900279ee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900279f2:	f022 0207 	bic.w	r2, r2, #7
900279f6:	431a      	orrs	r2, r3
900279f8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900279fc:	ea4c 0c02 	orr.w	ip, ip, r2
90027a00:	f8a7 c000 	strh.w	ip, [r7]
90027a04:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027a06:	3702      	adds	r7, #2
90027a08:	441c      	add	r4, r3
90027a0a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027a0c:	441e      	add	r6, r3
90027a0e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027a10:	3b01      	subs	r3, #1
90027a12:	9317      	str	r3, [sp, #92]	@ 0x5c
90027a14:	e6c0      	b.n	90027798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90027a16:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027a18:	441c      	add	r4, r3
90027a1a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027a1c:	441e      	add	r6, r3
90027a1e:	9b07      	ldr	r3, [sp, #28]
90027a20:	3b01      	subs	r3, #1
90027a22:	9307      	str	r3, [sp, #28]
90027a24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027a26:	3302      	adds	r3, #2
90027a28:	930a      	str	r3, [sp, #40]	@ 0x28
90027a2a:	e695      	b.n	90027758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027a2c:	d024      	beq.n	90027a78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90027a2e:	9b07      	ldr	r3, [sp, #28]
90027a30:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90027a32:	3b01      	subs	r3, #1
90027a34:	fb00 4003 	mla	r0, r0, r3, r4
90027a38:	1400      	asrs	r0, r0, #16
90027a3a:	f53f aeaa 	bmi.w	90027792 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027a3e:	3901      	subs	r1, #1
90027a40:	4288      	cmp	r0, r1
90027a42:	f6bf aea6 	bge.w	90027792 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027a46:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90027a48:	fb01 6303 	mla	r3, r1, r3, r6
90027a4c:	141b      	asrs	r3, r3, #16
90027a4e:	f53f aea0 	bmi.w	90027792 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027a52:	3a01      	subs	r2, #1
90027a54:	4293      	cmp	r3, r2
90027a56:	f6bf ae9c 	bge.w	90027792 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027a5a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027a5e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90027a62:	f1bb 0f00 	cmp.w	fp, #0
90027a66:	f300 809a 	bgt.w	90027b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027a6a:	9b07      	ldr	r3, [sp, #28]
90027a6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027a70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027a72:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027a76:	930a      	str	r3, [sp, #40]	@ 0x28
90027a78:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027a7a:	2b00      	cmp	r3, #0
90027a7c:	f340 81ec 	ble.w	90027e58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027a80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027a84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a86:	ee30 0a04 	vadd.f32	s0, s0, s8
90027a8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027a8e:	eef0 6a62 	vmov.f32	s13, s5
90027a92:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027a96:	ee31 1a05 	vadd.f32	s2, s2, s10
90027a9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027a9e:	ee16 4a90 	vmov	r4, s13
90027aa2:	eef0 6a43 	vmov.f32	s13, s6
90027aa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027aaa:	ee16 6a90 	vmov	r6, s13
90027aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027ab2:	ee61 7a27 	vmul.f32	s15, s2, s15
90027ab6:	ee77 2a62 	vsub.f32	s5, s14, s5
90027aba:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027abe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027ac2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027ac6:	ee12 2a90 	vmov	r2, s5
90027aca:	eef0 2a47 	vmov.f32	s5, s14
90027ace:	fb92 f3f3 	sdiv	r3, r2, r3
90027ad2:	ee13 2a10 	vmov	r2, s6
90027ad6:	9327      	str	r3, [sp, #156]	@ 0x9c
90027ad8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027ada:	eeb0 3a67 	vmov.f32	s6, s15
90027ade:	fb92 f3f3 	sdiv	r3, r2, r3
90027ae2:	9328      	str	r3, [sp, #160]	@ 0xa0
90027ae4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027ae6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90027ae8:	3b01      	subs	r3, #1
90027aea:	9316      	str	r3, [sp, #88]	@ 0x58
90027aec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027aee:	bf08      	it	eq
90027af0:	4613      	moveq	r3, r2
90027af2:	9307      	str	r3, [sp, #28]
90027af4:	e622      	b.n	9002773c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90027af6:	2800      	cmp	r0, #0
90027af8:	f43f ae92 	beq.w	90027820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027afc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027b00:	9308      	str	r3, [sp, #32]
90027b02:	0e1b      	lsrs	r3, r3, #24
90027b04:	9310      	str	r3, [sp, #64]	@ 0x40
90027b06:	e68b      	b.n	90027820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027b08:	8839      	ldrh	r1, [r7, #0]
90027b0a:	43db      	mvns	r3, r3
90027b0c:	4dd4      	ldr	r5, [pc, #848]	@ (90027e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027b0e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90027b12:	fa5f f883 	uxtb.w	r8, r3
90027b16:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90027b1a:	10c8      	asrs	r0, r1, #3
90027b1c:	00cb      	lsls	r3, r1, #3
90027b1e:	fb0e fe08 	mul.w	lr, lr, r8
90027b22:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027b26:	b2db      	uxtb	r3, r3
90027b28:	f10e 0101 	add.w	r1, lr, #1
90027b2c:	fb00 f008 	mul.w	r0, r0, r8
90027b30:	fb03 f308 	mul.w	r3, r3, r8
90027b34:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90027b38:	ea4f 411c 	mov.w	r1, ip, lsr #16
90027b3c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90027b40:	f100 0e01 	add.w	lr, r0, #1
90027b44:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90027b48:	b2c9      	uxtb	r1, r1
90027b4a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90027b4e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90027b52:	00d2      	lsls	r2, r2, #3
90027b54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027b58:	430a      	orrs	r2, r1
90027b5a:	1c59      	adds	r1, r3, #1
90027b5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027b60:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027b64:	e748      	b.n	900279f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027b66:	f112 0801 	adds.w	r8, r2, #1
90027b6a:	f53f af4b 	bmi.w	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027b6e:	4543      	cmp	r3, r8
90027b70:	f6ff af48 	blt.w	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027b74:	f11c 0801 	adds.w	r8, ip, #1
90027b78:	f53f af44 	bmi.w	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027b7c:	45c6      	cmp	lr, r8
90027b7e:	f6ff af41 	blt.w	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027b82:	b21b      	sxth	r3, r3
90027b84:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027b88:	fa0f f28e 	sxth.w	r2, lr
90027b8c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90027b90:	9200      	str	r2, [sp, #0]
90027b92:	4639      	mov	r1, r7
90027b94:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027b96:	9819      	ldr	r0, [sp, #100]	@ 0x64
90027b98:	f7ff fc88 	bl	900274ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90027b9c:	e732      	b.n	90027a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027b9e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027ba0:	1421      	asrs	r1, r4, #16
90027ba2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027ba4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027ba8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90027bac:	1433      	asrs	r3, r6, #16
90027bae:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027bb2:	fb07 1303 	mla	r3, r7, r3, r1
90027bb6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027bb8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90027bbc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027bc0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027bc4:	2a00      	cmp	r2, #0
90027bc6:	f000 8108 	beq.w	90027dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90027bca:	684d      	ldr	r5, [r1, #4]
90027bcc:	950d      	str	r5, [sp, #52]	@ 0x34
90027bce:	0e2d      	lsrs	r5, r5, #24
90027bd0:	9514      	str	r5, [sp, #80]	@ 0x50
90027bd2:	b178      	cbz	r0, 90027bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027bd4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90027bd8:	3f01      	subs	r7, #1
90027bda:	00bf      	lsls	r7, r7, #2
90027bdc:	3704      	adds	r7, #4
90027bde:	eb01 0e07 	add.w	lr, r1, r7
90027be2:	59c9      	ldr	r1, [r1, r7]
90027be4:	9109      	str	r1, [sp, #36]	@ 0x24
90027be6:	0e09      	lsrs	r1, r1, #24
90027be8:	9111      	str	r1, [sp, #68]	@ 0x44
90027bea:	f8de 1004 	ldr.w	r1, [lr, #4]
90027bee:	910e      	str	r1, [sp, #56]	@ 0x38
90027bf0:	0e09      	lsrs	r1, r1, #24
90027bf2:	9115      	str	r1, [sp, #84]	@ 0x54
90027bf4:	b292      	uxth	r2, r2
90027bf6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027bf8:	b280      	uxth	r0, r0
90027bfa:	fb02 f900 	mul.w	r9, r2, r0
90027bfe:	0112      	lsls	r2, r2, #4
90027c00:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027c04:	eba2 0e09 	sub.w	lr, r2, r9
90027c08:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90027c0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027c0e:	b280      	uxth	r0, r0
90027c10:	fa1f fe8e 	uxth.w	lr, lr
90027c14:	1a09      	subs	r1, r1, r0
90027c16:	fb0e f202 	mul.w	r2, lr, r2
90027c1a:	b289      	uxth	r1, r1
90027c1c:	fb01 220c 	mla	r2, r1, ip, r2
90027c20:	fb00 2205 	mla	r2, r0, r5, r2
90027c24:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027c26:	fb09 2205 	mla	r2, r9, r5, r2
90027c2a:	f3c2 2207 	ubfx	r2, r2, #8, #8
90027c2e:	2a00      	cmp	r2, #0
90027c30:	f000 80ca 	beq.w	90027dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027c34:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90027c38:	d019      	beq.n	90027c6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90027c3a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90027c3e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027c42:	fb0c fa0a 	mul.w	sl, ip, sl
90027c46:	fb0c fc03 	mul.w	ip, ip, r3
90027c4a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90027c4e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90027c52:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90027c56:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027c5a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90027c5e:	4453      	add	r3, sl
90027c60:	0a3f      	lsrs	r7, r7, #8
90027c62:	0a1b      	lsrs	r3, r3, #8
90027c64:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90027c68:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027c6c:	433b      	orrs	r3, r7
90027c6e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027c70:	2dff      	cmp	r5, #255	@ 0xff
90027c72:	d020      	beq.n	90027cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027c74:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027c76:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027c7a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027c7c:	436f      	muls	r7, r5
90027c7e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027c80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027c84:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027c88:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027c8a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027c8e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027c92:	fb05 fa0a 	mul.w	sl, r5, sl
90027c96:	44bc      	add	ip, r7
90027c98:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027c9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027ca0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027ca4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027ca8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027cac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027cb0:	ea4c 050a 	orr.w	r5, ip, sl
90027cb4:	950d      	str	r5, [sp, #52]	@ 0x34
90027cb6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027cb8:	2dff      	cmp	r5, #255	@ 0xff
90027cba:	d020      	beq.n	90027cfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90027cbc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027cbe:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027cc2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027cc4:	436f      	muls	r7, r5
90027cc6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027cc8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027ccc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027cce:	fb05 fa0c 	mul.w	sl, r5, ip
90027cd2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027cd6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027cda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027cde:	44bc      	add	ip, r7
90027ce0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027ce4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027ce8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027cec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027cf0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027cf4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027cf8:	ea4c 050a 	orr.w	r5, ip, sl
90027cfc:	9509      	str	r5, [sp, #36]	@ 0x24
90027cfe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027d00:	2dff      	cmp	r5, #255	@ 0xff
90027d02:	d020      	beq.n	90027d46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90027d04:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027d06:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027d0a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027d0c:	436f      	muls	r7, r5
90027d0e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027d10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027d14:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027d18:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027d1a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027d1e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027d22:	fb05 fa0a 	mul.w	sl, r5, sl
90027d26:	44bc      	add	ip, r7
90027d28:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027d2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027d30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027d34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027d38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027d3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027d40:	ea4c 050a 	orr.w	r5, ip, sl
90027d44:	950e      	str	r5, [sp, #56]	@ 0x38
90027d46:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027d48:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90027d4c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027d50:	2aff      	cmp	r2, #255	@ 0xff
90027d52:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027d56:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027d58:	fb0e f707 	mul.w	r7, lr, r7
90027d5c:	fb01 770c 	mla	r7, r1, ip, r7
90027d60:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027d64:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027d66:	fb00 770c 	mla	r7, r0, ip, r7
90027d6a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027d6e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027d70:	fb09 770c 	mla	r7, r9, ip, r7
90027d74:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027d78:	fb0e fe0c 	mul.w	lr, lr, ip
90027d7c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027d80:	fb01 e303 	mla	r3, r1, r3, lr
90027d84:	9909      	ldr	r1, [sp, #36]	@ 0x24
90027d86:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90027d8a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90027d8e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90027d90:	fb00 330a 	mla	r3, r0, sl, r3
90027d94:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90027d98:	fb09 3c0c 	mla	ip, r9, ip, r3
90027d9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027da0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027da4:	ea47 070c 	orr.w	r7, r7, ip
90027da8:	ea4f 2317 	mov.w	r3, r7, lsr #8
90027dac:	d11e      	bne.n	90027dec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90027dae:	097a      	lsrs	r2, r7, #5
90027db0:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90027db4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027db8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027dbc:	f023 0307 	bic.w	r3, r3, #7
90027dc0:	4313      	orrs	r3, r2
90027dc2:	431f      	orrs	r7, r3
90027dc4:	f8a8 7000 	strh.w	r7, [r8]
90027dc8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027dca:	f108 0802 	add.w	r8, r8, #2
90027dce:	f10b 3bff 	add.w	fp, fp, #4294967295
90027dd2:	441c      	add	r4, r3
90027dd4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027dd6:	441e      	add	r6, r3
90027dd8:	e643      	b.n	90027a62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027dda:	2800      	cmp	r0, #0
90027ddc:	f43f af0a 	beq.w	90027bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027de0:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027de4:	9109      	str	r1, [sp, #36]	@ 0x24
90027de6:	0e09      	lsrs	r1, r1, #24
90027de8:	9111      	str	r1, [sp, #68]	@ 0x44
90027dea:	e703      	b.n	90027bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027dec:	f8b8 1000 	ldrh.w	r1, [r8]
90027df0:	43d2      	mvns	r2, r2
90027df2:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027df6:	fa5f fe82 	uxtb.w	lr, r2
90027dfa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027dfe:	10c8      	asrs	r0, r1, #3
90027e00:	00ca      	lsls	r2, r1, #3
90027e02:	fb0c fc0e 	mul.w	ip, ip, lr
90027e06:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027e0a:	b2d2      	uxtb	r2, r2
90027e0c:	f10c 0101 	add.w	r1, ip, #1
90027e10:	fb00 f00e 	mul.w	r0, r0, lr
90027e14:	fb02 f20e 	mul.w	r2, r2, lr
90027e18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027e1c:	0c39      	lsrs	r1, r7, #16
90027e1e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027e22:	490f      	ldr	r1, [pc, #60]	@ (90027e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027e24:	fa5f fc8c 	uxtb.w	ip, ip
90027e28:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027e2c:	1c41      	adds	r1, r0, #1
90027e2e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90027e32:	1c51      	adds	r1, r2, #1
90027e34:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027e38:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027e3c:	00c0      	lsls	r0, r0, #3
90027e3e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90027e42:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027e46:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027e4a:	ea4c 0c00 	orr.w	ip, ip, r0
90027e4e:	ea47 0c0c 	orr.w	ip, r7, ip
90027e52:	f8a8 c000 	strh.w	ip, [r8]
90027e56:	e7b7      	b.n	90027dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027e58:	b01b      	add	sp, #108	@ 0x6c
90027e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027e5e:	bf00      	nop
90027e60:	fffff800 	.word	0xfffff800

90027e64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027e64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027e68:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027e6c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027e70:	2d00      	cmp	r5, #0
90027e72:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90027e76:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027e7a:	fb05 0e03 	mla	lr, r5, r3, r0
90027e7e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90027e82:	f2c0 808c 	blt.w	90027f9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027e86:	45a9      	cmp	r9, r5
90027e88:	f340 8089 	ble.w	90027f9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027e8c:	2800      	cmp	r0, #0
90027e8e:	f2c0 8084 	blt.w	90027f9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027e92:	4580      	cmp	r8, r0
90027e94:	f340 8081 	ble.w	90027f9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027e98:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027e9c:	f01e 0f01 	tst.w	lr, #1
90027ea0:	5d16      	ldrb	r6, [r2, r4]
90027ea2:	bf0c      	ite	eq
90027ea4:	f006 060f 	andeq.w	r6, r6, #15
90027ea8:	1136      	asrne	r6, r6, #4
90027eaa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027eae:	b2f6      	uxtb	r6, r6
90027eb0:	1c44      	adds	r4, r0, #1
90027eb2:	d477      	bmi.n	90027fa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027eb4:	45a0      	cmp	r8, r4
90027eb6:	dd75      	ble.n	90027fa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027eb8:	2f00      	cmp	r7, #0
90027eba:	d075      	beq.n	90027fa8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90027ebc:	f10e 0a01 	add.w	sl, lr, #1
90027ec0:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027ec4:	f01a 0f01 	tst.w	sl, #1
90027ec8:	5d14      	ldrb	r4, [r2, r4]
90027eca:	bf0c      	ite	eq
90027ecc:	f004 040f 	andeq.w	r4, r4, #15
90027ed0:	1124      	asrne	r4, r4, #4
90027ed2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027ed6:	b2e4      	uxtb	r4, r4
90027ed8:	3501      	adds	r5, #1
90027eda:	d469      	bmi.n	90027fb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027edc:	45a9      	cmp	r9, r5
90027ede:	dd67      	ble.n	90027fb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027ee0:	f1bc 0f00 	cmp.w	ip, #0
90027ee4:	d067      	beq.n	90027fb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027ee6:	2800      	cmp	r0, #0
90027ee8:	db60      	blt.n	90027fac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027eea:	4580      	cmp	r8, r0
90027eec:	dd5e      	ble.n	90027fac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027eee:	eb03 090e 	add.w	r9, r3, lr
90027ef2:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027ef6:	f019 0f01 	tst.w	r9, #1
90027efa:	5d55      	ldrb	r5, [r2, r5]
90027efc:	bf0c      	ite	eq
90027efe:	f005 050f 	andeq.w	r5, r5, #15
90027f02:	112d      	asrne	r5, r5, #4
90027f04:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027f08:	b2ed      	uxtb	r5, r5
90027f0a:	3001      	adds	r0, #1
90027f0c:	d456      	bmi.n	90027fbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027f0e:	4580      	cmp	r8, r0
90027f10:	dd54      	ble.n	90027fbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027f12:	2f00      	cmp	r7, #0
90027f14:	d054      	beq.n	90027fc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027f16:	3301      	adds	r3, #1
90027f18:	449e      	add	lr, r3
90027f1a:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027f1e:	f01e 0f01 	tst.w	lr, #1
90027f22:	5cd0      	ldrb	r0, [r2, r3]
90027f24:	bf0c      	ite	eq
90027f26:	f000 000f 	andeq.w	r0, r0, #15
90027f2a:	1100      	asrne	r0, r0, #4
90027f2c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027f30:	b2c3      	uxtb	r3, r0
90027f32:	b2ba      	uxth	r2, r7
90027f34:	fa1f fc8c 	uxth.w	ip, ip
90027f38:	fb02 f00c 	mul.w	r0, r2, ip
90027f3c:	0112      	lsls	r2, r2, #4
90027f3e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027f42:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90027f46:	1a12      	subs	r2, r2, r0
90027f48:	fa1f fc8c 	uxth.w	ip, ip
90027f4c:	b292      	uxth	r2, r2
90027f4e:	eba7 070c 	sub.w	r7, r7, ip
90027f52:	4362      	muls	r2, r4
90027f54:	b2bf      	uxth	r7, r7
90027f56:	fb06 2207 	mla	r2, r6, r7, r2
90027f5a:	fb0c 2505 	mla	r5, ip, r5, r2
90027f5e:	fb00 5303 	mla	r3, r0, r3, r5
90027f62:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027f66:	b1b3      	cbz	r3, 90027f96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027f68:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027f6c:	435a      	muls	r2, r3
90027f6e:	1c53      	adds	r3, r2, #1
90027f70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027f74:	4a2d      	ldr	r2, [pc, #180]	@ (9002802c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027f76:	121b      	asrs	r3, r3, #8
90027f78:	6812      	ldr	r2, [r2, #0]
90027f7a:	2bff      	cmp	r3, #255	@ 0xff
90027f7c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027f80:	d120      	bne.n	90027fc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027f82:	0950      	lsrs	r0, r2, #5
90027f84:	4b2a      	ldr	r3, [pc, #168]	@ (90028030 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027f86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027f8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027f8e:	4033      	ands	r3, r6
90027f90:	4318      	orrs	r0, r3
90027f92:	4302      	orrs	r2, r0
90027f94:	800a      	strh	r2, [r1, #0]
90027f96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027f9a:	2600      	movs	r6, #0
90027f9c:	e788      	b.n	90027eb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90027f9e:	2400      	movs	r4, #0
90027fa0:	4626      	mov	r6, r4
90027fa2:	e799      	b.n	90027ed8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027fa4:	2400      	movs	r4, #0
90027fa6:	e797      	b.n	90027ed8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027fa8:	463c      	mov	r4, r7
90027faa:	e795      	b.n	90027ed8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027fac:	2500      	movs	r5, #0
90027fae:	e7ac      	b.n	90027f0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027fb0:	2300      	movs	r3, #0
90027fb2:	461d      	mov	r5, r3
90027fb4:	e7bd      	b.n	90027f32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027fb6:	4663      	mov	r3, ip
90027fb8:	4665      	mov	r5, ip
90027fba:	e7ba      	b.n	90027f32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027fbc:	2300      	movs	r3, #0
90027fbe:	e7b8      	b.n	90027f32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027fc0:	463b      	mov	r3, r7
90027fc2:	e7b6      	b.n	90027f32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027fc4:	880d      	ldrh	r5, [r1, #0]
90027fc6:	b29f      	uxth	r7, r3
90027fc8:	f3c2 4007 	ubfx	r0, r2, #16, #8
90027fcc:	43db      	mvns	r3, r3
90027fce:	122c      	asrs	r4, r5, #8
90027fd0:	fb10 f007 	smulbb	r0, r0, r7
90027fd4:	b2db      	uxtb	r3, r3
90027fd6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027fda:	b2f6      	uxtb	r6, r6
90027fdc:	b2d2      	uxtb	r2, r2
90027fde:	fb04 0403 	mla	r4, r4, r3, r0
90027fe2:	10e8      	asrs	r0, r5, #3
90027fe4:	fb12 f207 	smulbb	r2, r2, r7
90027fe8:	00ed      	lsls	r5, r5, #3
90027fea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027fee:	b2a4      	uxth	r4, r4
90027ff0:	fb16 f607 	smulbb	r6, r6, r7
90027ff4:	b2ed      	uxtb	r5, r5
90027ff6:	fb00 6603 	mla	r6, r0, r3, r6
90027ffa:	fb05 2303 	mla	r3, r5, r3, r2
90027ffe:	b2b0      	uxth	r0, r6
90028000:	b29a      	uxth	r2, r3
90028002:	1c63      	adds	r3, r4, #1
90028004:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90028008:	1c53      	adds	r3, r2, #1
9002800a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002800e:	1c42      	adds	r2, r0, #1
90028010:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028014:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028018:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002801c:	0940      	lsrs	r0, r0, #5
9002801e:	4323      	orrs	r3, r4
90028020:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028024:	4303      	orrs	r3, r0
90028026:	800b      	strh	r3, [r1, #0]
90028028:	e7b5      	b.n	90027f96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002802a:	bf00      	nop
9002802c:	24021d74 	.word	0x24021d74
90028030:	00fff800 	.word	0x00fff800

90028034 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028038:	b097      	sub	sp, #92	@ 0x5c
9002803a:	9214      	str	r2, [sp, #80]	@ 0x50
9002803c:	9309      	str	r3, [sp, #36]	@ 0x24
9002803e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90028040:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90028044:	9015      	str	r0, [sp, #84]	@ 0x54
90028046:	910d      	str	r1, [sp, #52]	@ 0x34
90028048:	6850      	ldr	r0, [r2, #4]
9002804a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002804c:	6812      	ldr	r2, [r2, #0]
9002804e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90028052:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90028056:	fb00 1303 	mla	r3, r0, r3, r1
9002805a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002805e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028060:	689b      	ldr	r3, [r3, #8]
90028062:	3301      	adds	r3, #1
90028064:	f023 0301 	bic.w	r3, r3, #1
90028068:	930a      	str	r3, [sp, #40]	@ 0x28
9002806a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002806c:	681f      	ldr	r7, [r3, #0]
9002806e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028070:	2b00      	cmp	r3, #0
90028072:	dc03      	bgt.n	9002807c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028074:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90028076:	2b00      	cmp	r3, #0
90028078:	f340 8289 	ble.w	9002858e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002807c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002807e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028082:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028086:	1e48      	subs	r0, r1, #1
90028088:	f102 3cff 	add.w	ip, r2, #4294967295
9002808c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002808e:	2b00      	cmp	r3, #0
90028090:	f340 80c5 	ble.w	9002821e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90028094:	ea5f 4e24 	movs.w	lr, r4, asr #16
90028098:	ea4f 4326 	mov.w	r3, r6, asr #16
9002809c:	d406      	bmi.n	900280ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002809e:	4586      	cmp	lr, r0
900280a0:	da04      	bge.n	900280ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900280a2:	2b00      	cmp	r3, #0
900280a4:	db02      	blt.n	900280ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900280a6:	4563      	cmp	r3, ip
900280a8:	f2c0 80ba 	blt.w	90028220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900280ac:	f11e 0e01 	adds.w	lr, lr, #1
900280b0:	f100 80ab 	bmi.w	9002820a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900280b4:	4571      	cmp	r1, lr
900280b6:	f2c0 80a8 	blt.w	9002820a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900280ba:	3301      	adds	r3, #1
900280bc:	f100 80a5 	bmi.w	9002820a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900280c0:	429a      	cmp	r2, r3
900280c2:	f2c0 80a2 	blt.w	9002820a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900280c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900280c8:	46c8      	mov	r8, r9
900280ca:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900280ce:	930e      	str	r3, [sp, #56]	@ 0x38
900280d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900280d2:	2b00      	cmp	r3, #0
900280d4:	f340 80c4 	ble.w	90028260 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900280d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900280da:	1430      	asrs	r0, r6, #16
900280dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
900280e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
900280e4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900280e8:	1423      	asrs	r3, r4, #16
900280ea:	f100 814f 	bmi.w	9002838c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900280ee:	f10c 3bff 	add.w	fp, ip, #4294967295
900280f2:	455b      	cmp	r3, fp
900280f4:	f280 814a 	bge.w	9002838c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900280f8:	2800      	cmp	r0, #0
900280fa:	f2c0 8147 	blt.w	9002838c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900280fe:	f10e 3bff 	add.w	fp, lr, #4294967295
90028102:	4558      	cmp	r0, fp
90028104:	f280 8142 	bge.w	9002838c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028108:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9002810a:	fb00 3305 	mla	r3, r0, r5, r3
9002810e:	0858      	lsrs	r0, r3, #1
90028110:	07dd      	lsls	r5, r3, #31
90028112:	f817 c000 	ldrb.w	ip, [r7, r0]
90028116:	bf54      	ite	pl
90028118:	f00c 0c0f 	andpl.w	ip, ip, #15
9002811c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028120:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028124:	fa5f fc8c 	uxtb.w	ip, ip
90028128:	2a00      	cmp	r2, #0
9002812a:	f000 80dd 	beq.w	900282e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002812e:	1c58      	adds	r0, r3, #1
90028130:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90028134:	07c0      	lsls	r0, r0, #31
90028136:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002813a:	bf54      	ite	pl
9002813c:	f00e 0e0f 	andpl.w	lr, lr, #15
90028140:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90028144:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90028148:	fa5f f08e 	uxtb.w	r0, lr
9002814c:	9010      	str	r0, [sp, #64]	@ 0x40
9002814e:	b1d9      	cbz	r1, 90028188 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028150:	4453      	add	r3, sl
90028152:	0858      	lsrs	r0, r3, #1
90028154:	07dd      	lsls	r5, r3, #31
90028156:	f103 0301 	add.w	r3, r3, #1
9002815a:	5c38      	ldrb	r0, [r7, r0]
9002815c:	bf54      	ite	pl
9002815e:	f000 000f 	andpl.w	r0, r0, #15
90028162:	1100      	asrmi	r0, r0, #4
90028164:	07dd      	lsls	r5, r3, #31
90028166:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002816a:	b2c0      	uxtb	r0, r0
9002816c:	900b      	str	r0, [sp, #44]	@ 0x2c
9002816e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90028172:	f817 e000 	ldrb.w	lr, [r7, r0]
90028176:	bf54      	ite	pl
90028178:	f00e 030f 	andpl.w	r3, lr, #15
9002817c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90028180:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028184:	b2db      	uxtb	r3, r3
90028186:	9311      	str	r3, [sp, #68]	@ 0x44
90028188:	b292      	uxth	r2, r2
9002818a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002818c:	b289      	uxth	r1, r1
9002818e:	fb02 f301 	mul.w	r3, r2, r1
90028192:	0112      	lsls	r2, r2, #4
90028194:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028198:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
9002819c:	1ad2      	subs	r2, r2, r3
9002819e:	b289      	uxth	r1, r1
900281a0:	b292      	uxth	r2, r2
900281a2:	1a40      	subs	r0, r0, r1
900281a4:	436a      	muls	r2, r5
900281a6:	b280      	uxth	r0, r0
900281a8:	fb0c 2c00 	mla	ip, ip, r0, r2
900281ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900281ae:	fb01 c102 	mla	r1, r1, r2, ip
900281b2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900281b4:	fb03 1302 	mla	r3, r3, r2, r1
900281b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900281bc:	b1db      	cbz	r3, 900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900281be:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900281c0:	4353      	muls	r3, r2
900281c2:	1c5a      	adds	r2, r3, #1
900281c4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900281c8:	4ac6      	ldr	r2, [pc, #792]	@ (900284e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900281ca:	121b      	asrs	r3, r3, #8
900281cc:	6812      	ldr	r2, [r2, #0]
900281ce:	2bff      	cmp	r3, #255	@ 0xff
900281d0:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900281d4:	f040 8099 	bne.w	9002830a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900281d8:	0953      	lsrs	r3, r2, #5
900281da:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900281de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900281e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900281e6:	f02c 0c07 	bic.w	ip, ip, #7
900281ea:	ea43 0c0c 	orr.w	ip, r3, ip
900281ee:	ea4c 0202 	orr.w	r2, ip, r2
900281f2:	f8a8 2000 	strh.w	r2, [r8]
900281f6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900281f8:	f108 0802 	add.w	r8, r8, #2
900281fc:	441c      	add	r4, r3
900281fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028200:	441e      	add	r6, r3
90028202:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90028204:	3b01      	subs	r3, #1
90028206:	930e      	str	r3, [sp, #56]	@ 0x38
90028208:	e762      	b.n	900280d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002820a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
9002820c:	f109 0902 	add.w	r9, r9, #2
90028210:	441c      	add	r4, r3
90028212:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028214:	441e      	add	r6, r3
90028216:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028218:	3b01      	subs	r3, #1
9002821a:	9309      	str	r3, [sp, #36]	@ 0x24
9002821c:	e736      	b.n	9002808c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002821e:	d024      	beq.n	9002826a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90028220:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028222:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90028224:	3b01      	subs	r3, #1
90028226:	fb00 4003 	mla	r0, r0, r3, r4
9002822a:	1400      	asrs	r0, r0, #16
9002822c:	f53f af4b 	bmi.w	900280c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028230:	3901      	subs	r1, #1
90028232:	4288      	cmp	r0, r1
90028234:	f6bf af47 	bge.w	900280c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028238:	9924      	ldr	r1, [sp, #144]	@ 0x90
9002823a:	fb01 6303 	mla	r3, r1, r3, r6
9002823e:	141b      	asrs	r3, r3, #16
90028240:	f53f af41 	bmi.w	900280c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028244:	3a01      	subs	r2, #1
90028246:	4293      	cmp	r3, r2
90028248:	f6bf af3d 	bge.w	900280c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002824c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90028250:	46c8      	mov	r8, r9
90028252:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90028256:	930e      	str	r3, [sp, #56]	@ 0x38
90028258:	f1bb 0f00 	cmp.w	fp, #0
9002825c:	f300 80b7 	bgt.w	900283ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90028260:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028262:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028266:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002826a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002826c:	2b00      	cmp	r3, #0
9002826e:	f340 818e 	ble.w	9002858e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90028272:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028276:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028278:	ee30 0a04 	vadd.f32	s0, s0, s8
9002827c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028280:	eef0 6a62 	vmov.f32	s13, s5
90028284:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028288:	ee31 1a05 	vadd.f32	s2, s2, s10
9002828c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028290:	ee16 4a90 	vmov	r4, s13
90028294:	eef0 6a43 	vmov.f32	s13, s6
90028298:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002829c:	ee16 6a90 	vmov	r6, s13
900282a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900282a4:	ee61 7a27 	vmul.f32	s15, s2, s15
900282a8:	ee77 2a62 	vsub.f32	s5, s14, s5
900282ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
900282b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900282b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900282b8:	ee12 2a90 	vmov	r2, s5
900282bc:	eef0 2a47 	vmov.f32	s5, s14
900282c0:	fb92 f3f3 	sdiv	r3, r2, r3
900282c4:	ee13 2a10 	vmov	r2, s6
900282c8:	9323      	str	r3, [sp, #140]	@ 0x8c
900282ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900282cc:	eeb0 3a67 	vmov.f32	s6, s15
900282d0:	fb92 f3f3 	sdiv	r3, r2, r3
900282d4:	9324      	str	r3, [sp, #144]	@ 0x90
900282d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900282d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900282da:	3b01      	subs	r3, #1
900282dc:	930d      	str	r3, [sp, #52]	@ 0x34
900282de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900282e0:	bf08      	it	eq
900282e2:	4613      	moveq	r3, r2
900282e4:	9309      	str	r3, [sp, #36]	@ 0x24
900282e6:	e6c2      	b.n	9002806e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900282e8:	2900      	cmp	r1, #0
900282ea:	f43f af4d 	beq.w	90028188 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900282ee:	eb0a 0003 	add.w	r0, sl, r3
900282f2:	0843      	lsrs	r3, r0, #1
900282f4:	07c0      	lsls	r0, r0, #31
900282f6:	5cfb      	ldrb	r3, [r7, r3]
900282f8:	bf54      	ite	pl
900282fa:	f003 030f 	andpl.w	r3, r3, #15
900282fe:	111b      	asrmi	r3, r3, #4
90028300:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028304:	b2db      	uxtb	r3, r3
90028306:	930b      	str	r3, [sp, #44]	@ 0x2c
90028308:	e73e      	b.n	90028188 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002830a:	f8b8 e000 	ldrh.w	lr, [r8]
9002830e:	fa1f fb83 	uxth.w	fp, r3
90028312:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028316:	43db      	mvns	r3, r3
90028318:	ea4f 202e 	mov.w	r0, lr, asr #8
9002831c:	fb11 f10b 	smulbb	r1, r1, fp
90028320:	b2db      	uxtb	r3, r3
90028322:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028326:	fa5f fc8c 	uxtb.w	ip, ip
9002832a:	b2d2      	uxtb	r2, r2
9002832c:	fb00 1003 	mla	r0, r0, r3, r1
90028330:	ea4f 01ee 	mov.w	r1, lr, asr #3
90028334:	fb1c fc0b 	smulbb	ip, ip, fp
90028338:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002833c:	b280      	uxth	r0, r0
9002833e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90028342:	fb12 fb0b 	smulbb	fp, r2, fp
90028346:	fa5f fe8e 	uxtb.w	lr, lr
9002834a:	fb01 cc03 	mla	ip, r1, r3, ip
9002834e:	fb0e bb03 	mla	fp, lr, r3, fp
90028352:	1c43      	adds	r3, r0, #1
90028354:	fa1f fc8c 	uxth.w	ip, ip
90028358:	fa1f fb8b 	uxth.w	fp, fp
9002835c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028360:	f10c 0101 	add.w	r1, ip, #1
90028364:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90028368:	f10b 0001 	add.w	r0, fp, #1
9002836c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028370:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90028374:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028378:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002837c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90028380:	4318      	orrs	r0, r3
90028382:	ea40 000c 	orr.w	r0, r0, ip
90028386:	f8a8 0000 	strh.w	r0, [r8]
9002838a:	e734      	b.n	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002838c:	f113 0b01 	adds.w	fp, r3, #1
90028390:	f53f af31 	bmi.w	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028394:	45dc      	cmp	ip, fp
90028396:	f6ff af2e 	blt.w	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002839a:	f110 0b01 	adds.w	fp, r0, #1
9002839e:	f53f af2a 	bmi.w	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900283a2:	45de      	cmp	lr, fp
900283a4:	f6ff af27 	blt.w	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900283a8:	9302      	str	r3, [sp, #8]
900283aa:	fa0f f38e 	sxth.w	r3, lr
900283ae:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900283b0:	9301      	str	r3, [sp, #4]
900283b2:	fa0f f38c 	sxth.w	r3, ip
900283b6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900283ba:	e9cd 1505 	strd	r1, r5, [sp, #20]
900283be:	9300      	str	r3, [sp, #0]
900283c0:	463a      	mov	r2, r7
900283c2:	4653      	mov	r3, sl
900283c4:	4641      	mov	r1, r8
900283c6:	9815      	ldr	r0, [sp, #84]	@ 0x54
900283c8:	f7ff fd4c 	bl	90027e64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900283cc:	e713      	b.n	900281f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900283ce:	1422      	asrs	r2, r4, #16
900283d0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900283d2:	1433      	asrs	r3, r6, #16
900283d4:	f3c4 3103 	ubfx	r1, r4, #12, #4
900283d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900283dc:	fb05 2303 	mla	r3, r5, r3, r2
900283e0:	085a      	lsrs	r2, r3, #1
900283e2:	07dd      	lsls	r5, r3, #31
900283e4:	5cba      	ldrb	r2, [r7, r2]
900283e6:	bf54      	ite	pl
900283e8:	f002 020f 	andpl.w	r2, r2, #15
900283ec:	1112      	asrmi	r2, r2, #4
900283ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900283f2:	b2d2      	uxtb	r2, r2
900283f4:	2900      	cmp	r1, #0
900283f6:	d077      	beq.n	900284e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900283f8:	f103 0e01 	add.w	lr, r3, #1
900283fc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90028400:	f01e 0f01 	tst.w	lr, #1
90028404:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028408:	bf0c      	ite	eq
9002840a:	f00c 0c0f 	andeq.w	ip, ip, #15
9002840e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90028412:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028416:	fa5f f58c 	uxtb.w	r5, ip
9002841a:	9512      	str	r5, [sp, #72]	@ 0x48
9002841c:	b308      	cbz	r0, 90028462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002841e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028420:	442b      	add	r3, r5
90028422:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028426:	07dd      	lsls	r5, r3, #31
90028428:	f103 0301 	add.w	r3, r3, #1
9002842c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028430:	bf54      	ite	pl
90028432:	f00c 0c0f 	andpl.w	ip, ip, #15
90028436:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002843a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002843e:	fa5f f58c 	uxtb.w	r5, ip
90028442:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028446:	950c      	str	r5, [sp, #48]	@ 0x30
90028448:	07dd      	lsls	r5, r3, #31
9002844a:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002844e:	bf54      	ite	pl
90028450:	f00c 0c0f 	andpl.w	ip, ip, #15
90028454:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028458:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002845c:	fa5f f38c 	uxtb.w	r3, ip
90028460:	9313      	str	r3, [sp, #76]	@ 0x4c
90028462:	b289      	uxth	r1, r1
90028464:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028466:	b280      	uxth	r0, r0
90028468:	fb01 f300 	mul.w	r3, r1, r0
9002846c:	0109      	lsls	r1, r1, #4
9002846e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90028472:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90028476:	1ac9      	subs	r1, r1, r3
90028478:	b280      	uxth	r0, r0
9002847a:	b289      	uxth	r1, r1
9002847c:	ebac 0c00 	sub.w	ip, ip, r0
90028480:	4369      	muls	r1, r5
90028482:	fa1f fc8c 	uxth.w	ip, ip
90028486:	fb02 120c 	mla	r2, r2, ip, r1
9002848a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002848c:	fb00 2001 	mla	r0, r0, r1, r2
90028490:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90028492:	fb03 0302 	mla	r3, r3, r2, r0
90028496:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002849a:	b1d3      	cbz	r3, 900284d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002849c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002849e:	4353      	muls	r3, r2
900284a0:	1c5a      	adds	r2, r3, #1
900284a2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900284a6:	4a0f      	ldr	r2, [pc, #60]	@ (900284e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900284a8:	121b      	asrs	r3, r3, #8
900284aa:	6812      	ldr	r2, [r2, #0]
900284ac:	2bff      	cmp	r3, #255	@ 0xff
900284ae:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900284b2:	d12d      	bne.n	90028510 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900284b4:	0953      	lsrs	r3, r2, #5
900284b6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900284ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900284be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900284c2:	f02c 0c07 	bic.w	ip, ip, #7
900284c6:	ea43 0c0c 	orr.w	ip, r3, ip
900284ca:	ea4c 0202 	orr.w	r2, ip, r2
900284ce:	f8a8 2000 	strh.w	r2, [r8]
900284d2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900284d4:	f108 0802 	add.w	r8, r8, #2
900284d8:	f10b 3bff 	add.w	fp, fp, #4294967295
900284dc:	441c      	add	r4, r3
900284de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900284e0:	441e      	add	r6, r3
900284e2:	e6b9      	b.n	90028258 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900284e4:	24021d74 	.word	0x24021d74
900284e8:	2800      	cmp	r0, #0
900284ea:	d0ba      	beq.n	90028462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900284ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900284ee:	442b      	add	r3, r5
900284f0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900284f4:	07db      	lsls	r3, r3, #31
900284f6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900284fa:	bf54      	ite	pl
900284fc:	f00c 0c0f 	andpl.w	ip, ip, #15
90028500:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028504:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028508:	fa5f f38c 	uxtb.w	r3, ip
9002850c:	930c      	str	r3, [sp, #48]	@ 0x30
9002850e:	e7a8      	b.n	90028462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028510:	f8b8 e000 	ldrh.w	lr, [r8]
90028514:	fa1f fa83 	uxth.w	sl, r3
90028518:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002851c:	43db      	mvns	r3, r3
9002851e:	ea4f 202e 	mov.w	r0, lr, asr #8
90028522:	fb11 f10a 	smulbb	r1, r1, sl
90028526:	b2db      	uxtb	r3, r3
90028528:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002852c:	b2d2      	uxtb	r2, r2
9002852e:	fa5f fc8c 	uxtb.w	ip, ip
90028532:	fb00 1003 	mla	r0, r0, r3, r1
90028536:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002853a:	fb12 f20a 	smulbb	r2, r2, sl
9002853e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028542:	b280      	uxth	r0, r0
90028544:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90028548:	fb1c fc0a 	smulbb	ip, ip, sl
9002854c:	fa5f fe8e 	uxtb.w	lr, lr
90028550:	fb0e 2203 	mla	r2, lr, r3, r2
90028554:	fb01 cc03 	mla	ip, r1, r3, ip
90028558:	1c43      	adds	r3, r0, #1
9002855a:	b292      	uxth	r2, r2
9002855c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028560:	1c51      	adds	r1, r2, #1
90028562:	fa1f fc8c 	uxth.w	ip, ip
90028566:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002856a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002856e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028572:	4308      	orrs	r0, r1
90028574:	f10c 0101 	add.w	r1, ip, #1
90028578:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002857c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028580:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90028584:	ea40 000c 	orr.w	r0, r0, ip
90028588:	f8a8 0000 	strh.w	r0, [r8]
9002858c:	e7a1      	b.n	900284d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002858e:	b017      	add	sp, #92	@ 0x5c
90028590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028594 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90028594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028598:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
9002859c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900285a0:	2d00      	cmp	r5, #0
900285a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900285a6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900285aa:	fb05 0e03 	mla	lr, r5, r3, r0
900285ae:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900285b2:	f2c0 80b0 	blt.w	90028716 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900285b6:	45a9      	cmp	r9, r5
900285b8:	f340 80ad 	ble.w	90028716 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900285bc:	2800      	cmp	r0, #0
900285be:	f2c0 80a8 	blt.w	90028712 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900285c2:	4580      	cmp	r8, r0
900285c4:	f340 80a5 	ble.w	90028712 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900285c8:	ea4f 045e 	mov.w	r4, lr, lsr #1
900285cc:	f01e 0f01 	tst.w	lr, #1
900285d0:	5d16      	ldrb	r6, [r2, r4]
900285d2:	bf0c      	ite	eq
900285d4:	f006 060f 	andeq.w	r6, r6, #15
900285d8:	1136      	asrne	r6, r6, #4
900285da:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900285de:	b2f6      	uxtb	r6, r6
900285e0:	1c44      	adds	r4, r0, #1
900285e2:	f100 809b 	bmi.w	9002871c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900285e6:	45a0      	cmp	r8, r4
900285e8:	f340 8098 	ble.w	9002871c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900285ec:	2f00      	cmp	r7, #0
900285ee:	f000 8097 	beq.w	90028720 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
900285f2:	f10e 0a01 	add.w	sl, lr, #1
900285f6:	ea4f 045a 	mov.w	r4, sl, lsr #1
900285fa:	f01a 0f01 	tst.w	sl, #1
900285fe:	5d14      	ldrb	r4, [r2, r4]
90028600:	bf0c      	ite	eq
90028602:	f004 040f 	andeq.w	r4, r4, #15
90028606:	1124      	asrne	r4, r4, #4
90028608:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002860c:	b2e4      	uxtb	r4, r4
9002860e:	3501      	adds	r5, #1
90028610:	f100 808a 	bmi.w	90028728 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028614:	45a9      	cmp	r9, r5
90028616:	f340 8087 	ble.w	90028728 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002861a:	f1bc 0f00 	cmp.w	ip, #0
9002861e:	f000 8086 	beq.w	9002872e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90028622:	2800      	cmp	r0, #0
90028624:	db7e      	blt.n	90028724 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028626:	4580      	cmp	r8, r0
90028628:	dd7c      	ble.n	90028724 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002862a:	eb03 090e 	add.w	r9, r3, lr
9002862e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90028632:	f019 0f01 	tst.w	r9, #1
90028636:	5d55      	ldrb	r5, [r2, r5]
90028638:	bf0c      	ite	eq
9002863a:	f005 050f 	andeq.w	r5, r5, #15
9002863e:	112d      	asrne	r5, r5, #4
90028640:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90028644:	b2ed      	uxtb	r5, r5
90028646:	3001      	adds	r0, #1
90028648:	d474      	bmi.n	90028734 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002864a:	4580      	cmp	r8, r0
9002864c:	dd72      	ble.n	90028734 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002864e:	2f00      	cmp	r7, #0
90028650:	d072      	beq.n	90028738 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90028652:	3301      	adds	r3, #1
90028654:	449e      	add	lr, r3
90028656:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002865a:	f01e 0f01 	tst.w	lr, #1
9002865e:	5cd0      	ldrb	r0, [r2, r3]
90028660:	bf0c      	ite	eq
90028662:	f000 000f 	andeq.w	r0, r0, #15
90028666:	1100      	asrne	r0, r0, #4
90028668:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002866c:	b2c3      	uxtb	r3, r0
9002866e:	b2ba      	uxth	r2, r7
90028670:	fa1f fc8c 	uxth.w	ip, ip
90028674:	fb02 f00c 	mul.w	r0, r2, ip
90028678:	0112      	lsls	r2, r2, #4
9002867a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002867e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90028682:	1a12      	subs	r2, r2, r0
90028684:	fa1f fc8c 	uxth.w	ip, ip
90028688:	b292      	uxth	r2, r2
9002868a:	eba7 070c 	sub.w	r7, r7, ip
9002868e:	4362      	muls	r2, r4
90028690:	b2bf      	uxth	r7, r7
90028692:	fb06 2207 	mla	r2, r6, r7, r2
90028696:	fb0c 2505 	mla	r5, ip, r5, r2
9002869a:	fb00 5303 	mla	r3, r0, r3, r5
9002869e:	f3c3 2307 	ubfx	r3, r3, #8, #8
900286a2:	b3a3      	cbz	r3, 9002870e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900286a4:	4a25      	ldr	r2, [pc, #148]	@ (9002873c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900286a6:	880e      	ldrh	r6, [r1, #0]
900286a8:	6815      	ldr	r5, [r2, #0]
900286aa:	b29a      	uxth	r2, r3
900286ac:	1234      	asrs	r4, r6, #8
900286ae:	43db      	mvns	r3, r3
900286b0:	f3c5 4007 	ubfx	r0, r5, #16, #8
900286b4:	f3c5 2707 	ubfx	r7, r5, #8, #8
900286b8:	b2db      	uxtb	r3, r3
900286ba:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900286be:	fb10 f002 	smulbb	r0, r0, r2
900286c2:	b2ed      	uxtb	r5, r5
900286c4:	fb17 f702 	smulbb	r7, r7, r2
900286c8:	fb04 0403 	mla	r4, r4, r3, r0
900286cc:	10f0      	asrs	r0, r6, #3
900286ce:	fb15 f202 	smulbb	r2, r5, r2
900286d2:	00f6      	lsls	r6, r6, #3
900286d4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900286d8:	b2a4      	uxth	r4, r4
900286da:	b2f6      	uxtb	r6, r6
900286dc:	fb00 7003 	mla	r0, r0, r3, r7
900286e0:	fb06 2303 	mla	r3, r6, r3, r2
900286e4:	b280      	uxth	r0, r0
900286e6:	b29a      	uxth	r2, r3
900286e8:	1c63      	adds	r3, r4, #1
900286ea:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900286ee:	1c53      	adds	r3, r2, #1
900286f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900286f4:	1c42      	adds	r2, r0, #1
900286f6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
900286fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900286fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028702:	0940      	lsrs	r0, r0, #5
90028704:	4323      	orrs	r3, r4
90028706:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002870a:	4303      	orrs	r3, r0
9002870c:	800b      	strh	r3, [r1, #0]
9002870e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028712:	2600      	movs	r6, #0
90028714:	e764      	b.n	900285e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90028716:	2400      	movs	r4, #0
90028718:	4626      	mov	r6, r4
9002871a:	e778      	b.n	9002860e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002871c:	2400      	movs	r4, #0
9002871e:	e776      	b.n	9002860e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028720:	463c      	mov	r4, r7
90028722:	e774      	b.n	9002860e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028724:	2500      	movs	r5, #0
90028726:	e78e      	b.n	90028646 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028728:	2300      	movs	r3, #0
9002872a:	461d      	mov	r5, r3
9002872c:	e79f      	b.n	9002866e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002872e:	4663      	mov	r3, ip
90028730:	4665      	mov	r5, ip
90028732:	e79c      	b.n	9002866e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028734:	2300      	movs	r3, #0
90028736:	e79a      	b.n	9002866e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028738:	463b      	mov	r3, r7
9002873a:	e798      	b.n	9002866e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002873c:	24021d74 	.word	0x24021d74

90028740 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028744:	b093      	sub	sp, #76	@ 0x4c
90028746:	461d      	mov	r5, r3
90028748:	920c      	str	r2, [sp, #48]	@ 0x30
9002874a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002874c:	9011      	str	r0, [sp, #68]	@ 0x44
9002874e:	9107      	str	r1, [sp, #28]
90028750:	6850      	ldr	r0, [r2, #4]
90028752:	6812      	ldr	r2, [r2, #0]
90028754:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90028758:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9002875c:	fb00 1303 	mla	r3, r0, r3, r1
90028760:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90028764:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028766:	689b      	ldr	r3, [r3, #8]
90028768:	3301      	adds	r3, #1
9002876a:	f023 0301 	bic.w	r3, r3, #1
9002876e:	9306      	str	r3, [sp, #24]
90028770:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028772:	681f      	ldr	r7, [r3, #0]
90028774:	9b07      	ldr	r3, [sp, #28]
90028776:	2b00      	cmp	r3, #0
90028778:	dc03      	bgt.n	90028782 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002877a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002877c:	2b00      	cmp	r3, #0
9002877e:	f340 8267 	ble.w	90028c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90028782:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028784:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028788:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002878c:	1e48      	subs	r0, r1, #1
9002878e:	f102 3cff 	add.w	ip, r2, #4294967295
90028792:	2d00      	cmp	r5, #0
90028794:	f340 80b7 	ble.w	90028906 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90028798:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002879c:	ea4f 4326 	mov.w	r3, r6, asr #16
900287a0:	d406      	bmi.n	900287b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900287a2:	4586      	cmp	lr, r0
900287a4:	da04      	bge.n	900287b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900287a6:	2b00      	cmp	r3, #0
900287a8:	db02      	blt.n	900287b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900287aa:	4563      	cmp	r3, ip
900287ac:	f2c0 80ac 	blt.w	90028908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900287b0:	f11e 0e01 	adds.w	lr, lr, #1
900287b4:	f100 809f 	bmi.w	900288f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900287b8:	4571      	cmp	r1, lr
900287ba:	f2c0 809c 	blt.w	900288f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900287be:	3301      	adds	r3, #1
900287c0:	f100 8099 	bmi.w	900288f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900287c4:	429a      	cmp	r2, r3
900287c6:	f2c0 8096 	blt.w	900288f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900287ca:	46c8      	mov	r8, r9
900287cc:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900287d0:	9509      	str	r5, [sp, #36]	@ 0x24
900287d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900287d4:	2b00      	cmp	r3, #0
900287d6:	f340 80b5 	ble.w	90028944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900287da:	f3c4 3303 	ubfx	r3, r4, #12, #4
900287de:	1430      	asrs	r0, r6, #16
900287e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
900287e4:	9308      	str	r3, [sp, #32]
900287e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900287e8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900287ec:	1423      	asrs	r3, r4, #16
900287ee:	f100 813f 	bmi.w	90028a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900287f2:	f10c 3bff 	add.w	fp, ip, #4294967295
900287f6:	455b      	cmp	r3, fp
900287f8:	f280 813a 	bge.w	90028a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900287fc:	2800      	cmp	r0, #0
900287fe:	f2c0 8137 	blt.w	90028a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028802:	f10e 3bff 	add.w	fp, lr, #4294967295
90028806:	4558      	cmp	r0, fp
90028808:	f280 8132 	bge.w	90028a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002880c:	9a06      	ldr	r2, [sp, #24]
9002880e:	fb00 3302 	mla	r3, r0, r2, r3
90028812:	0858      	lsrs	r0, r3, #1
90028814:	07da      	lsls	r2, r3, #31
90028816:	9a08      	ldr	r2, [sp, #32]
90028818:	f817 c000 	ldrb.w	ip, [r7, r0]
9002881c:	bf54      	ite	pl
9002881e:	f00c 0c0f 	andpl.w	ip, ip, #15
90028822:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028826:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002882a:	fa5f fc8c 	uxtb.w	ip, ip
9002882e:	2a00      	cmp	r2, #0
90028830:	f000 80cc 	beq.w	900289cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90028834:	1c58      	adds	r0, r3, #1
90028836:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002883a:	07c0      	lsls	r0, r0, #31
9002883c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028840:	bf54      	ite	pl
90028842:	f00e 0e0f 	andpl.w	lr, lr, #15
90028846:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002884a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002884e:	fa5f fe8e 	uxtb.w	lr, lr
90028852:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90028856:	b1b9      	cbz	r1, 90028888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028858:	4453      	add	r3, sl
9002885a:	0858      	lsrs	r0, r3, #1
9002885c:	07da      	lsls	r2, r3, #31
9002885e:	5c38      	ldrb	r0, [r7, r0]
90028860:	bf54      	ite	pl
90028862:	f000 000f 	andpl.w	r0, r0, #15
90028866:	1100      	asrmi	r0, r0, #4
90028868:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002886c:	b2c0      	uxtb	r0, r0
9002886e:	900a      	str	r0, [sp, #40]	@ 0x28
90028870:	1c58      	adds	r0, r3, #1
90028872:	0843      	lsrs	r3, r0, #1
90028874:	07c2      	lsls	r2, r0, #31
90028876:	5cfb      	ldrb	r3, [r7, r3]
90028878:	bf54      	ite	pl
9002887a:	f003 030f 	andpl.w	r3, r3, #15
9002887e:	111b      	asrmi	r3, r3, #4
90028880:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028884:	b2db      	uxtb	r3, r3
90028886:	930e      	str	r3, [sp, #56]	@ 0x38
90028888:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9002888c:	b289      	uxth	r1, r1
9002888e:	fb02 f301 	mul.w	r3, r2, r1
90028892:	0112      	lsls	r2, r2, #4
90028894:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028898:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
9002889c:	1ad2      	subs	r2, r2, r3
9002889e:	b289      	uxth	r1, r1
900288a0:	b292      	uxth	r2, r2
900288a2:	1a40      	subs	r0, r0, r1
900288a4:	fa1f fe80 	uxth.w	lr, r0
900288a8:	980d      	ldr	r0, [sp, #52]	@ 0x34
900288aa:	4342      	muls	r2, r0
900288ac:	fb0c 2c0e 	mla	ip, ip, lr, r2
900288b0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900288b2:	fb01 c102 	mla	r1, r1, r2, ip
900288b6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900288b8:	fb03 1302 	mla	r3, r3, r2, r1
900288bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900288c0:	2bff      	cmp	r3, #255	@ 0xff
900288c2:	f040 8094 	bne.w	900289ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900288c6:	4bbf      	ldr	r3, [pc, #764]	@ (90028bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900288c8:	681a      	ldr	r2, [r3, #0]
900288ca:	4bbf      	ldr	r3, [pc, #764]	@ (90028bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900288cc:	0951      	lsrs	r1, r2, #5
900288ce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900288d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900288d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900288da:	430b      	orrs	r3, r1
900288dc:	4313      	orrs	r3, r2
900288de:	f8a8 3000 	strh.w	r3, [r8]
900288e2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900288e4:	f108 0802 	add.w	r8, r8, #2
900288e8:	441c      	add	r4, r3
900288ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900288ec:	441e      	add	r6, r3
900288ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900288f0:	3b01      	subs	r3, #1
900288f2:	9309      	str	r3, [sp, #36]	@ 0x24
900288f4:	e76d      	b.n	900287d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900288f6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900288f8:	3d01      	subs	r5, #1
900288fa:	f109 0902 	add.w	r9, r9, #2
900288fe:	441c      	add	r4, r3
90028900:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028902:	441e      	add	r6, r3
90028904:	e745      	b.n	90028792 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90028906:	d021      	beq.n	9002894c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90028908:	1e6b      	subs	r3, r5, #1
9002890a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002890c:	fb00 4003 	mla	r0, r0, r3, r4
90028910:	1400      	asrs	r0, r0, #16
90028912:	f53f af5a 	bmi.w	900287ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028916:	3901      	subs	r1, #1
90028918:	4288      	cmp	r0, r1
9002891a:	f6bf af56 	bge.w	900287ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002891e:	9920      	ldr	r1, [sp, #128]	@ 0x80
90028920:	fb01 6303 	mla	r3, r1, r3, r6
90028924:	141b      	asrs	r3, r3, #16
90028926:	f53f af50 	bmi.w	900287ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002892a:	3a01      	subs	r2, #1
9002892c:	4293      	cmp	r3, r2
9002892e:	f6bf af4c 	bge.w	900287ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028932:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90028936:	46a8      	mov	r8, r5
90028938:	46ce      	mov	lr, r9
9002893a:	9308      	str	r3, [sp, #32]
9002893c:	f1b8 0f00 	cmp.w	r8, #0
90028940:	f300 80b6 	bgt.w	90028ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90028944:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90028948:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002894c:	9b07      	ldr	r3, [sp, #28]
9002894e:	2b00      	cmp	r3, #0
90028950:	f340 817e 	ble.w	90028c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90028954:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028958:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002895a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002895e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028962:	eef0 6a62 	vmov.f32	s13, s5
90028966:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002896a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002896e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028972:	ee16 4a90 	vmov	r4, s13
90028976:	eef0 6a43 	vmov.f32	s13, s6
9002897a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002897e:	ee16 6a90 	vmov	r6, s13
90028982:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028986:	ee61 7a27 	vmul.f32	s15, s2, s15
9002898a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002898e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028992:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028996:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002899a:	ee12 2a90 	vmov	r2, s5
9002899e:	eef0 2a47 	vmov.f32	s5, s14
900289a2:	fb92 f3f3 	sdiv	r3, r2, r3
900289a6:	ee13 2a10 	vmov	r2, s6
900289aa:	931f      	str	r3, [sp, #124]	@ 0x7c
900289ac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900289ae:	eeb0 3a67 	vmov.f32	s6, s15
900289b2:	fb92 f3f3 	sdiv	r3, r2, r3
900289b6:	9320      	str	r3, [sp, #128]	@ 0x80
900289b8:	9b07      	ldr	r3, [sp, #28]
900289ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900289bc:	3b01      	subs	r3, #1
900289be:	9307      	str	r3, [sp, #28]
900289c0:	bf08      	it	eq
900289c2:	4615      	moveq	r5, r2
900289c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900289c6:	bf18      	it	ne
900289c8:	461d      	movne	r5, r3
900289ca:	e6d3      	b.n	90028774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900289cc:	2900      	cmp	r1, #0
900289ce:	f43f af5b 	beq.w	90028888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900289d2:	eb0a 0003 	add.w	r0, sl, r3
900289d6:	0843      	lsrs	r3, r0, #1
900289d8:	07c0      	lsls	r0, r0, #31
900289da:	5cfb      	ldrb	r3, [r7, r3]
900289dc:	bf54      	ite	pl
900289de:	f003 030f 	andpl.w	r3, r3, #15
900289e2:	111b      	asrmi	r3, r3, #4
900289e4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900289e8:	b2db      	uxtb	r3, r3
900289ea:	930a      	str	r3, [sp, #40]	@ 0x28
900289ec:	e74c      	b.n	90028888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900289ee:	2b00      	cmp	r3, #0
900289f0:	f43f af77 	beq.w	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900289f4:	4a73      	ldr	r2, [pc, #460]	@ (90028bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900289f6:	fa1f fe83 	uxth.w	lr, r3
900289fa:	f8b8 c000 	ldrh.w	ip, [r8]
900289fe:	43db      	mvns	r3, r3
90028a00:	6810      	ldr	r0, [r2, #0]
90028a02:	ea4f 212c 	mov.w	r1, ip, asr #8
90028a06:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028a0a:	b2db      	uxtb	r3, r3
90028a0c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028a10:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028a14:	fb12 f20e 	smulbb	r2, r2, lr
90028a18:	b2c0      	uxtb	r0, r0
90028a1a:	fb1b fb0e 	smulbb	fp, fp, lr
90028a1e:	fb01 2103 	mla	r1, r1, r3, r2
90028a22:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028a26:	fb10 fe0e 	smulbb	lr, r0, lr
90028a2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028a2e:	b289      	uxth	r1, r1
90028a30:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028a34:	fa5f fc8c 	uxtb.w	ip, ip
90028a38:	fb02 b203 	mla	r2, r2, r3, fp
90028a3c:	1c48      	adds	r0, r1, #1
90028a3e:	fb0c e303 	mla	r3, ip, r3, lr
90028a42:	b292      	uxth	r2, r2
90028a44:	b29b      	uxth	r3, r3
90028a46:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90028a4a:	f102 0b01 	add.w	fp, r2, #1
90028a4e:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90028a52:	1c59      	adds	r1, r3, #1
90028a54:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028a58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90028a5c:	0952      	lsrs	r2, r2, #5
90028a5e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028a62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028a66:	4301      	orrs	r1, r0
90028a68:	4311      	orrs	r1, r2
90028a6a:	f8a8 1000 	strh.w	r1, [r8]
90028a6e:	e738      	b.n	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028a70:	f113 0b01 	adds.w	fp, r3, #1
90028a74:	f53f af35 	bmi.w	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028a78:	45dc      	cmp	ip, fp
90028a7a:	f6ff af32 	blt.w	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028a7e:	f110 0b01 	adds.w	fp, r0, #1
90028a82:	f53f af2e 	bmi.w	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028a86:	45de      	cmp	lr, fp
90028a88:	f6ff af2b 	blt.w	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028a8c:	9302      	str	r3, [sp, #8]
90028a8e:	fa0f f38e 	sxth.w	r3, lr
90028a92:	9a08      	ldr	r2, [sp, #32]
90028a94:	9301      	str	r3, [sp, #4]
90028a96:	fa0f f38c 	sxth.w	r3, ip
90028a9a:	9105      	str	r1, [sp, #20]
90028a9c:	4641      	mov	r1, r8
90028a9e:	9300      	str	r3, [sp, #0]
90028aa0:	4653      	mov	r3, sl
90028aa2:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028aa6:	463a      	mov	r2, r7
90028aa8:	9811      	ldr	r0, [sp, #68]	@ 0x44
90028aaa:	f7ff fd73 	bl	90028594 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90028aae:	e718      	b.n	900288e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028ab0:	1422      	asrs	r2, r4, #16
90028ab2:	9906      	ldr	r1, [sp, #24]
90028ab4:	1433      	asrs	r3, r6, #16
90028ab6:	f3c4 3003 	ubfx	r0, r4, #12, #4
90028aba:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90028abe:	fb01 2303 	mla	r3, r1, r3, r2
90028ac2:	085a      	lsrs	r2, r3, #1
90028ac4:	07d9      	lsls	r1, r3, #31
90028ac6:	5cba      	ldrb	r2, [r7, r2]
90028ac8:	bf54      	ite	pl
90028aca:	f002 020f 	andpl.w	r2, r2, #15
90028ace:	1112      	asrmi	r2, r2, #4
90028ad0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90028ad4:	b2d2      	uxtb	r2, r2
90028ad6:	2800      	cmp	r0, #0
90028ad8:	d063      	beq.n	90028ba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90028ada:	f103 0a01 	add.w	sl, r3, #1
90028ade:	ea4f 015a 	mov.w	r1, sl, lsr #1
90028ae2:	f01a 0f01 	tst.w	sl, #1
90028ae6:	5c79      	ldrb	r1, [r7, r1]
90028ae8:	bf0c      	ite	eq
90028aea:	f001 010f 	andeq.w	r1, r1, #15
90028aee:	1109      	asrne	r1, r1, #4
90028af0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028af4:	b2c9      	uxtb	r1, r1
90028af6:	910f      	str	r1, [sp, #60]	@ 0x3c
90028af8:	f1bc 0f00 	cmp.w	ip, #0
90028afc:	d01a      	beq.n	90028b34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028afe:	9908      	ldr	r1, [sp, #32]
90028b00:	440b      	add	r3, r1
90028b02:	0859      	lsrs	r1, r3, #1
90028b04:	f013 0f01 	tst.w	r3, #1
90028b08:	f103 0301 	add.w	r3, r3, #1
90028b0c:	5c79      	ldrb	r1, [r7, r1]
90028b0e:	bf0c      	ite	eq
90028b10:	f001 010f 	andeq.w	r1, r1, #15
90028b14:	1109      	asrne	r1, r1, #4
90028b16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028b1a:	b2c9      	uxtb	r1, r1
90028b1c:	910b      	str	r1, [sp, #44]	@ 0x2c
90028b1e:	0859      	lsrs	r1, r3, #1
90028b20:	07db      	lsls	r3, r3, #31
90028b22:	5c79      	ldrb	r1, [r7, r1]
90028b24:	bf54      	ite	pl
90028b26:	f001 010f 	andpl.w	r1, r1, #15
90028b2a:	1109      	asrmi	r1, r1, #4
90028b2c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028b30:	b2c9      	uxtb	r1, r1
90028b32:	9110      	str	r1, [sp, #64]	@ 0x40
90028b34:	b280      	uxth	r0, r0
90028b36:	fa1f fc8c 	uxth.w	ip, ip
90028b3a:	fb00 f30c 	mul.w	r3, r0, ip
90028b3e:	0100      	lsls	r0, r0, #4
90028b40:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90028b44:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90028b48:	1ac0      	subs	r0, r0, r3
90028b4a:	fa1f fc8c 	uxth.w	ip, ip
90028b4e:	b280      	uxth	r0, r0
90028b50:	eba1 010c 	sub.w	r1, r1, ip
90028b54:	fa1f fa81 	uxth.w	sl, r1
90028b58:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028b5a:	4348      	muls	r0, r1
90028b5c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90028b5e:	fb02 020a 	mla	r2, r2, sl, r0
90028b62:	fb0c 2c01 	mla	ip, ip, r1, r2
90028b66:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028b68:	fb03 c302 	mla	r3, r3, r2, ip
90028b6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028b70:	2bff      	cmp	r3, #255	@ 0xff
90028b72:	d12b      	bne.n	90028bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028b74:	4b13      	ldr	r3, [pc, #76]	@ (90028bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028b76:	681a      	ldr	r2, [r3, #0]
90028b78:	4b13      	ldr	r3, [pc, #76]	@ (90028bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028b7a:	0951      	lsrs	r1, r2, #5
90028b7c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028b80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028b84:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028b88:	430b      	orrs	r3, r1
90028b8a:	4313      	orrs	r3, r2
90028b8c:	f8ae 3000 	strh.w	r3, [lr]
90028b90:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028b92:	f10e 0e02 	add.w	lr, lr, #2
90028b96:	f108 38ff 	add.w	r8, r8, #4294967295
90028b9a:	441c      	add	r4, r3
90028b9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028b9e:	441e      	add	r6, r3
90028ba0:	e6cc      	b.n	9002893c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90028ba2:	f1bc 0f00 	cmp.w	ip, #0
90028ba6:	d0c5      	beq.n	90028b34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028ba8:	9908      	ldr	r1, [sp, #32]
90028baa:	440b      	add	r3, r1
90028bac:	0859      	lsrs	r1, r3, #1
90028bae:	07db      	lsls	r3, r3, #31
90028bb0:	5c79      	ldrb	r1, [r7, r1]
90028bb2:	bf54      	ite	pl
90028bb4:	f001 010f 	andpl.w	r1, r1, #15
90028bb8:	1109      	asrmi	r1, r1, #4
90028bba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028bbe:	b2c9      	uxtb	r1, r1
90028bc0:	910b      	str	r1, [sp, #44]	@ 0x2c
90028bc2:	e7b7      	b.n	90028b34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028bc4:	24021d74 	.word	0x24021d74
90028bc8:	fffff800 	.word	0xfffff800
90028bcc:	2b00      	cmp	r3, #0
90028bce:	d0df      	beq.n	90028b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028bd0:	4a21      	ldr	r2, [pc, #132]	@ (90028c58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90028bd2:	fa1f fa83 	uxth.w	sl, r3
90028bd6:	f8be c000 	ldrh.w	ip, [lr]
90028bda:	43db      	mvns	r3, r3
90028bdc:	6810      	ldr	r0, [r2, #0]
90028bde:	ea4f 212c 	mov.w	r1, ip, asr #8
90028be2:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028be6:	b2db      	uxtb	r3, r3
90028be8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028bec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028bf0:	fb12 f20a 	smulbb	r2, r2, sl
90028bf4:	b2c0      	uxtb	r0, r0
90028bf6:	fb1b fb0a 	smulbb	fp, fp, sl
90028bfa:	fb01 2103 	mla	r1, r1, r3, r2
90028bfe:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028c02:	fb10 f00a 	smulbb	r0, r0, sl
90028c06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028c0a:	b289      	uxth	r1, r1
90028c0c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028c10:	fa5f fc8c 	uxtb.w	ip, ip
90028c14:	fb02 b203 	mla	r2, r2, r3, fp
90028c18:	fb0c 0003 	mla	r0, ip, r3, r0
90028c1c:	1c4b      	adds	r3, r1, #1
90028c1e:	b292      	uxth	r2, r2
90028c20:	b280      	uxth	r0, r0
90028c22:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028c26:	f100 0b01 	add.w	fp, r0, #1
90028c2a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90028c2e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90028c32:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90028c36:	ea4b 0101 	orr.w	r1, fp, r1
90028c3a:	f102 0b01 	add.w	fp, r2, #1
90028c3e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028c42:	0952      	lsrs	r2, r2, #5
90028c44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028c48:	4311      	orrs	r1, r2
90028c4a:	f8ae 1000 	strh.w	r1, [lr]
90028c4e:	e79f      	b.n	90028b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028c50:	b013      	add	sp, #76	@ 0x4c
90028c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028c56:	bf00      	nop
90028c58:	24021d74 	.word	0x24021d74

90028c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90028c5c:	b570      	push	{r4, r5, r6, lr}
90028c5e:	1208      	asrs	r0, r1, #8
90028c60:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028c64:	b29e      	uxth	r6, r3
90028c66:	1213      	asrs	r3, r2, #8
90028c68:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028c6c:	10cc      	asrs	r4, r1, #3
90028c6e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90028c72:	00c9      	lsls	r1, r1, #3
90028c74:	fb10 f006 	smulbb	r0, r0, r6
90028c78:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90028c7c:	fb13 f305 	smulbb	r3, r3, r5
90028c80:	fb14 f406 	smulbb	r4, r4, r6
90028c84:	4418      	add	r0, r3
90028c86:	10d3      	asrs	r3, r2, #3
90028c88:	00d2      	lsls	r2, r2, #3
90028c8a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028c8e:	b280      	uxth	r0, r0
90028c90:	b2d2      	uxtb	r2, r2
90028c92:	fb13 f305 	smulbb	r3, r3, r5
90028c96:	fb12 f205 	smulbb	r2, r2, r5
90028c9a:	441c      	add	r4, r3
90028c9c:	b2cb      	uxtb	r3, r1
90028c9e:	fb13 f306 	smulbb	r3, r3, r6
90028ca2:	b2a4      	uxth	r4, r4
90028ca4:	4413      	add	r3, r2
90028ca6:	1c42      	adds	r2, r0, #1
90028ca8:	b29b      	uxth	r3, r3
90028caa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028cae:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90028cb2:	1c58      	adds	r0, r3, #1
90028cb4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028cb8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028cbc:	4310      	orrs	r0, r2
90028cbe:	1c62      	adds	r2, r4, #1
90028cc0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028cc4:	0964      	lsrs	r4, r4, #5
90028cc6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028cca:	4320      	orrs	r0, r4
90028ccc:	bd70      	pop	{r4, r5, r6, pc}
	...

90028cd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028cd4:	b08f      	sub	sp, #60	@ 0x3c
90028cd6:	461c      	mov	r4, r3
90028cd8:	460d      	mov	r5, r1
90028cda:	4616      	mov	r6, r2
90028cdc:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028ce0:	9004      	str	r0, [sp, #16]
90028ce2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028ce4:	2f00      	cmp	r7, #0
90028ce6:	f000 80f6 	beq.w	90028ed6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028cea:	6820      	ldr	r0, [r4, #0]
90028cec:	aa0a      	add	r2, sp, #40	@ 0x28
90028cee:	6861      	ldr	r1, [r4, #4]
90028cf0:	f04f 0802 	mov.w	r8, #2
90028cf4:	3604      	adds	r6, #4
90028cf6:	c203      	stmia	r2!, {r0, r1}
90028cf8:	6818      	ldr	r0, [r3, #0]
90028cfa:	aa0c      	add	r2, sp, #48	@ 0x30
90028cfc:	6859      	ldr	r1, [r3, #4]
90028cfe:	c203      	stmia	r2!, {r0, r1}
90028d00:	a80a      	add	r0, sp, #40	@ 0x28
90028d02:	f7ee fa15 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028d06:	4621      	mov	r1, r4
90028d08:	a80c      	add	r0, sp, #48	@ 0x30
90028d0a:	f7ee fa39 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028d0e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90028d12:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90028d16:	f002 0301 	and.w	r3, r2, #1
90028d1a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90028d1e:	9306      	str	r3, [sp, #24]
90028d20:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028d24:	f003 0101 	and.w	r1, r3, #1
90028d28:	9105      	str	r1, [sp, #20]
90028d2a:	9805      	ldr	r0, [sp, #20]
90028d2c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028d30:	4403      	add	r3, r0
90028d32:	fb01 2303 	mla	r3, r1, r3, r2
90028d36:	fb93 f3f8 	sdiv	r3, r3, r8
90028d3a:	441d      	add	r5, r3
90028d3c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028d40:	441a      	add	r2, r3
90028d42:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90028d46:	4419      	add	r1, r3
90028d48:	4b64      	ldr	r3, [pc, #400]	@ (90028edc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028d4a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028d4e:	6818      	ldr	r0, [r3, #0]
90028d50:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028d54:	6803      	ldr	r3, [r0, #0]
90028d56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028d58:	4798      	blx	r3
90028d5a:	4a61      	ldr	r2, [pc, #388]	@ (90028ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028d5c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028d60:	2fff      	cmp	r7, #255	@ 0xff
90028d62:	8813      	ldrh	r3, [r2, #0]
90028d64:	4611      	mov	r1, r2
90028d66:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028d6a:	fb03 fb0b 	mul.w	fp, r3, fp
90028d6e:	fb03 a404 	mla	r4, r3, r4, sl
90028d72:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028d76:	d06b      	beq.n	90028e50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028d78:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90028d7c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028d80:	9303      	str	r3, [sp, #12]
90028d82:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028d86:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028d8a:	9b07      	ldr	r3, [sp, #28]
90028d8c:	42a3      	cmp	r3, r4
90028d8e:	f240 809d 	bls.w	90028ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028d92:	9b06      	ldr	r3, [sp, #24]
90028d94:	2b00      	cmp	r3, #0
90028d96:	d039      	beq.n	90028e0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028d98:	782b      	ldrb	r3, [r5, #0]
90028d9a:	f105 0801 	add.w	r8, r5, #1
90028d9e:	f109 3bff 	add.w	fp, r9, #4294967295
90028da2:	8822      	ldrh	r2, [r4, #0]
90028da4:	f003 030f 	and.w	r3, r3, #15
90028da8:	9804      	ldr	r0, [sp, #16]
90028daa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028dae:	9b03      	ldr	r3, [sp, #12]
90028db0:	9300      	str	r3, [sp, #0]
90028db2:	463b      	mov	r3, r7
90028db4:	f7ff ff52 	bl	90028c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028db8:	f824 0b02 	strh.w	r0, [r4], #2
90028dbc:	f1bb 0f01 	cmp.w	fp, #1
90028dc0:	46a2      	mov	sl, r4
90028dc2:	f104 0404 	add.w	r4, r4, #4
90028dc6:	dd24      	ble.n	90028e12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028dc8:	f898 3000 	ldrb.w	r3, [r8]
90028dcc:	f1ab 0b02 	sub.w	fp, fp, #2
90028dd0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028dd4:	091b      	lsrs	r3, r3, #4
90028dd6:	9804      	ldr	r0, [sp, #16]
90028dd8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028ddc:	9b03      	ldr	r3, [sp, #12]
90028dde:	9300      	str	r3, [sp, #0]
90028de0:	463b      	mov	r3, r7
90028de2:	f7ff ff3b 	bl	90028c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028de6:	f824 0c04 	strh.w	r0, [r4, #-4]
90028dea:	f818 3b01 	ldrb.w	r3, [r8], #1
90028dee:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028df2:	f003 030f 	and.w	r3, r3, #15
90028df6:	9804      	ldr	r0, [sp, #16]
90028df8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028dfc:	9b03      	ldr	r3, [sp, #12]
90028dfe:	9300      	str	r3, [sp, #0]
90028e00:	463b      	mov	r3, r7
90028e02:	f7ff ff2b 	bl	90028c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028e06:	f824 0c02 	strh.w	r0, [r4, #-2]
90028e0a:	e7d7      	b.n	90028dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028e0c:	46a8      	mov	r8, r5
90028e0e:	46cb      	mov	fp, r9
90028e10:	e7d4      	b.n	90028dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028e12:	d10e      	bne.n	90028e32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90028e14:	f898 3000 	ldrb.w	r3, [r8]
90028e18:	f8ba 2000 	ldrh.w	r2, [sl]
90028e1c:	091b      	lsrs	r3, r3, #4
90028e1e:	9804      	ldr	r0, [sp, #16]
90028e20:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028e24:	9b03      	ldr	r3, [sp, #12]
90028e26:	9300      	str	r3, [sp, #0]
90028e28:	463b      	mov	r3, r7
90028e2a:	f7ff ff17 	bl	90028c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028e2e:	f82a 0b02 	strh.w	r0, [sl], #2
90028e32:	9b08      	ldr	r3, [sp, #32]
90028e34:	9a05      	ldr	r2, [sp, #20]
90028e36:	881c      	ldrh	r4, [r3, #0]
90028e38:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028e3c:	eba4 0409 	sub.w	r4, r4, r9
90028e40:	4413      	add	r3, r2
90028e42:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028e44:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028e48:	fb93 f3f2 	sdiv	r3, r3, r2
90028e4c:	441d      	add	r5, r3
90028e4e:	e79c      	b.n	90028d8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028e50:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90028e54:	45a3      	cmp	fp, r4
90028e56:	d939      	bls.n	90028ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028e58:	9b06      	ldr	r3, [sp, #24]
90028e5a:	b1fb      	cbz	r3, 90028e9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028e5c:	782b      	ldrb	r3, [r5, #0]
90028e5e:	1c6a      	adds	r2, r5, #1
90028e60:	f109 30ff 	add.w	r0, r9, #4294967295
90028e64:	3402      	adds	r4, #2
90028e66:	f003 030f 	and.w	r3, r3, #15
90028e6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028e6e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028e72:	2801      	cmp	r0, #1
90028e74:	4623      	mov	r3, r4
90028e76:	f104 0404 	add.w	r4, r4, #4
90028e7a:	dd12      	ble.n	90028ea2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90028e7c:	7813      	ldrb	r3, [r2, #0]
90028e7e:	3802      	subs	r0, #2
90028e80:	091b      	lsrs	r3, r3, #4
90028e82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028e86:	f824 3c04 	strh.w	r3, [r4, #-4]
90028e8a:	f812 3b01 	ldrb.w	r3, [r2], #1
90028e8e:	f003 030f 	and.w	r3, r3, #15
90028e92:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028e96:	f824 3c02 	strh.w	r3, [r4, #-2]
90028e9a:	e7ea      	b.n	90028e72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028e9c:	462a      	mov	r2, r5
90028e9e:	4648      	mov	r0, r9
90028ea0:	e7e7      	b.n	90028e72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028ea2:	d106      	bne.n	90028eb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028ea4:	7812      	ldrb	r2, [r2, #0]
90028ea6:	3302      	adds	r3, #2
90028ea8:	0912      	lsrs	r2, r2, #4
90028eaa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90028eae:	f823 2c02 	strh.w	r2, [r3, #-2]
90028eb2:	880c      	ldrh	r4, [r1, #0]
90028eb4:	9a05      	ldr	r2, [sp, #20]
90028eb6:	eba4 0409 	sub.w	r4, r4, r9
90028eba:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90028ebe:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028ec2:	4413      	add	r3, r2
90028ec4:	fb93 f3f8 	sdiv	r3, r3, r8
90028ec8:	441d      	add	r5, r3
90028eca:	e7c3      	b.n	90028e54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90028ecc:	4b03      	ldr	r3, [pc, #12]	@ (90028edc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028ece:	6818      	ldr	r0, [r3, #0]
90028ed0:	6803      	ldr	r3, [r0, #0]
90028ed2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028ed4:	4798      	blx	r3
90028ed6:	b00f      	add	sp, #60	@ 0x3c
90028ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028edc:	24021d64 	.word	0x24021d64
90028ee0:	24021d5e 	.word	0x24021d5e

90028ee4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
90028ee6:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028eea:	0a0f      	lsrs	r7, r1, #8
90028eec:	2dff      	cmp	r5, #255	@ 0xff
90028eee:	d10c      	bne.n	90028f0a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028ef0:	2bff      	cmp	r3, #255	@ 0xff
90028ef2:	d10a      	bne.n	90028f0a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028ef4:	0948      	lsrs	r0, r1, #5
90028ef6:	4b25      	ldr	r3, [pc, #148]	@ (90028f8c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028ef8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028efc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028f00:	403b      	ands	r3, r7
90028f02:	4318      	orrs	r0, r3
90028f04:	4308      	orrs	r0, r1
90028f06:	b280      	uxth	r0, r0
90028f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028f0a:	fb15 f503 	smulbb	r5, r5, r3
90028f0e:	1214      	asrs	r4, r2, #8
90028f10:	10d6      	asrs	r6, r2, #3
90028f12:	b2ab      	uxth	r3, r5
90028f14:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028f18:	00d0      	lsls	r0, r2, #3
90028f1a:	f3c1 4207 	ubfx	r2, r1, #16, #8
90028f1e:	1c5d      	adds	r5, r3, #1
90028f20:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028f24:	b2c0      	uxtb	r0, r0
90028f26:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90028f2a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90028f2e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90028f32:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028f36:	fa1f fc85 	uxth.w	ip, r5
90028f3a:	43ed      	mvns	r5, r5
90028f3c:	fb12 f20c 	smulbb	r2, r2, ip
90028f40:	b2eb      	uxtb	r3, r5
90028f42:	b2fd      	uxtb	r5, r7
90028f44:	fb04 2403 	mla	r4, r4, r3, r2
90028f48:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028f4c:	fb15 f50c 	smulbb	r5, r5, ip
90028f50:	b2c8      	uxtb	r0, r1
90028f52:	b2a4      	uxth	r4, r4
90028f54:	fb10 f00c 	smulbb	r0, r0, ip
90028f58:	fb06 5503 	mla	r5, r6, r3, r5
90028f5c:	fb02 0003 	mla	r0, r2, r3, r0
90028f60:	b2ad      	uxth	r5, r5
90028f62:	b283      	uxth	r3, r0
90028f64:	1c60      	adds	r0, r4, #1
90028f66:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028f6a:	1c58      	adds	r0, r3, #1
90028f6c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028f70:	1c6b      	adds	r3, r5, #1
90028f72:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028f76:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028f7a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028f7e:	096d      	lsrs	r5, r5, #5
90028f80:	4320      	orrs	r0, r4
90028f82:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90028f86:	4328      	orrs	r0, r5
90028f88:	e7be      	b.n	90028f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028f8a:	bf00      	nop
90028f8c:	00fff800 	.word	0x00fff800

90028f90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028f94:	461c      	mov	r4, r3
90028f96:	b08d      	sub	sp, #52	@ 0x34
90028f98:	460d      	mov	r5, r1
90028f9a:	4616      	mov	r6, r2
90028f9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028f9e:	4680      	mov	r8, r0
90028fa0:	6861      	ldr	r1, [r4, #4]
90028fa2:	aa08      	add	r2, sp, #32
90028fa4:	6820      	ldr	r0, [r4, #0]
90028fa6:	f04f 0a02 	mov.w	sl, #2
90028faa:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90028fae:	3604      	adds	r6, #4
90028fb0:	c203      	stmia	r2!, {r0, r1}
90028fb2:	6818      	ldr	r0, [r3, #0]
90028fb4:	aa0a      	add	r2, sp, #40	@ 0x28
90028fb6:	6859      	ldr	r1, [r3, #4]
90028fb8:	c203      	stmia	r2!, {r0, r1}
90028fba:	a808      	add	r0, sp, #32
90028fbc:	f7ee f8b8 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028fc0:	4621      	mov	r1, r4
90028fc2:	a80a      	add	r0, sp, #40	@ 0x28
90028fc4:	f7ee f8dc 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028fc8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90028fcc:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90028fd0:	f002 0301 	and.w	r3, r2, #1
90028fd4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90028fd8:	9303      	str	r3, [sp, #12]
90028fda:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028fde:	f003 0101 	and.w	r1, r3, #1
90028fe2:	9102      	str	r1, [sp, #8]
90028fe4:	9802      	ldr	r0, [sp, #8]
90028fe6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90028fea:	4403      	add	r3, r0
90028fec:	fb01 2303 	mla	r3, r1, r3, r2
90028ff0:	fb93 f3fa 	sdiv	r3, r3, sl
90028ff4:	441d      	add	r5, r3
90028ff6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028ffa:	441a      	add	r2, r3
90028ffc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90029000:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90029004:	4419      	add	r1, r3
90029006:	4a3e      	ldr	r2, [pc, #248]	@ (90029100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90029008:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
9002900c:	6810      	ldr	r0, [r2, #0]
9002900e:	9205      	str	r2, [sp, #20]
90029010:	6803      	ldr	r3, [r0, #0]
90029012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029014:	4798      	blx	r3
90029016:	4b3b      	ldr	r3, [pc, #236]	@ (90029104 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90029018:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
9002901c:	8819      	ldrh	r1, [r3, #0]
9002901e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90029022:	434f      	muls	r7, r1
90029024:	fb01 c404 	mla	r4, r1, r4, ip
90029028:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002902c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90029030:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90029034:	9204      	str	r2, [sp, #16]
90029036:	9b04      	ldr	r3, [sp, #16]
90029038:	429c      	cmp	r4, r3
9002903a:	d258      	bcs.n	900290ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002903c:	9b03      	ldr	r3, [sp, #12]
9002903e:	2b00      	cmp	r3, #0
90029040:	d034      	beq.n	900290ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90029042:	782b      	ldrb	r3, [r5, #0]
90029044:	1c6f      	adds	r7, r5, #1
90029046:	f003 030f 	and.w	r3, r3, #15
9002904a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002904e:	0e0b      	lsrs	r3, r1, #24
90029050:	d006      	beq.n	90029060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90029052:	8822      	ldrh	r2, [r4, #0]
90029054:	4640      	mov	r0, r8
90029056:	9300      	str	r3, [sp, #0]
90029058:	464b      	mov	r3, r9
9002905a:	f7ff ff43 	bl	90028ee4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002905e:	8020      	strh	r0, [r4, #0]
90029060:	3402      	adds	r4, #2
90029062:	f10b 3aff 	add.w	sl, fp, #4294967295
90029066:	f1ba 0f01 	cmp.w	sl, #1
9002906a:	dd22      	ble.n	900290b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002906c:	783b      	ldrb	r3, [r7, #0]
9002906e:	091b      	lsrs	r3, r3, #4
90029070:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029074:	0e0b      	lsrs	r3, r1, #24
90029076:	d006      	beq.n	90029086 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90029078:	8822      	ldrh	r2, [r4, #0]
9002907a:	4640      	mov	r0, r8
9002907c:	9300      	str	r3, [sp, #0]
9002907e:	464b      	mov	r3, r9
90029080:	f7ff ff30 	bl	90028ee4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90029084:	8020      	strh	r0, [r4, #0]
90029086:	f817 3b01 	ldrb.w	r3, [r7], #1
9002908a:	f003 030f 	and.w	r3, r3, #15
9002908e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029092:	0e0b      	lsrs	r3, r1, #24
90029094:	d006      	beq.n	900290a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90029096:	8862      	ldrh	r2, [r4, #2]
90029098:	4640      	mov	r0, r8
9002909a:	9300      	str	r3, [sp, #0]
9002909c:	464b      	mov	r3, r9
9002909e:	f7ff ff21 	bl	90028ee4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900290a2:	8060      	strh	r0, [r4, #2]
900290a4:	3404      	adds	r4, #4
900290a6:	f1aa 0a02 	sub.w	sl, sl, #2
900290aa:	e7dc      	b.n	90029066 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900290ac:	462f      	mov	r7, r5
900290ae:	46da      	mov	sl, fp
900290b0:	e7d9      	b.n	90029066 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900290b2:	d10d      	bne.n	900290d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900290b4:	783b      	ldrb	r3, [r7, #0]
900290b6:	091b      	lsrs	r3, r3, #4
900290b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900290bc:	0e0b      	lsrs	r3, r1, #24
900290be:	d006      	beq.n	900290ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900290c0:	8822      	ldrh	r2, [r4, #0]
900290c2:	4640      	mov	r0, r8
900290c4:	9300      	str	r3, [sp, #0]
900290c6:	464b      	mov	r3, r9
900290c8:	f7ff ff0c 	bl	90028ee4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900290cc:	8020      	strh	r0, [r4, #0]
900290ce:	3402      	adds	r4, #2
900290d0:	9b06      	ldr	r3, [sp, #24]
900290d2:	9a02      	ldr	r2, [sp, #8]
900290d4:	881b      	ldrh	r3, [r3, #0]
900290d6:	eba3 030b 	sub.w	r3, r3, fp
900290da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900290de:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900290e2:	4413      	add	r3, r2
900290e4:	9a07      	ldr	r2, [sp, #28]
900290e6:	fb93 f3f2 	sdiv	r3, r3, r2
900290ea:	441d      	add	r5, r3
900290ec:	e7a3      	b.n	90029036 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
900290ee:	9b05      	ldr	r3, [sp, #20]
900290f0:	6818      	ldr	r0, [r3, #0]
900290f2:	6803      	ldr	r3, [r0, #0]
900290f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900290f6:	4798      	blx	r3
900290f8:	b00d      	add	sp, #52	@ 0x34
900290fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900290fe:	bf00      	nop
90029100:	24021d64 	.word	0x24021d64
90029104:	24021d5e 	.word	0x24021d5e

90029108 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90029108:	b570      	push	{r4, r5, r6, lr}
9002910a:	1214      	asrs	r4, r2, #8
9002910c:	788d      	ldrb	r5, [r1, #2]
9002910e:	f89d 6010 	ldrb.w	r6, [sp, #16]
90029112:	10d0      	asrs	r0, r2, #3
90029114:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029118:	00d2      	lsls	r2, r2, #3
9002911a:	fb15 f503 	smulbb	r5, r5, r3
9002911e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029122:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90029126:	b2d2      	uxtb	r2, r2
90029128:	fb04 5506 	mla	r5, r4, r6, r5
9002912c:	784c      	ldrb	r4, [r1, #1]
9002912e:	7809      	ldrb	r1, [r1, #0]
90029130:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90029134:	fb14 f403 	smulbb	r4, r4, r3
90029138:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002913c:	fb11 f303 	smulbb	r3, r1, r3
90029140:	b2ad      	uxth	r5, r5
90029142:	fb00 4406 	mla	r4, r0, r6, r4
90029146:	fb02 3306 	mla	r3, r2, r6, r3
9002914a:	1c68      	adds	r0, r5, #1
9002914c:	b2a4      	uxth	r4, r4
9002914e:	b29b      	uxth	r3, r3
90029150:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90029154:	1c62      	adds	r2, r4, #1
90029156:	1c58      	adds	r0, r3, #1
90029158:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002915c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90029160:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90029164:	0964      	lsrs	r4, r4, #5
90029166:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002916a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002916e:	4328      	orrs	r0, r5
90029170:	4320      	orrs	r0, r4
90029172:	bd70      	pop	{r4, r5, r6, pc}

90029174 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90029174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029178:	b08f      	sub	sp, #60	@ 0x3c
9002917a:	461c      	mov	r4, r3
9002917c:	4682      	mov	sl, r0
9002917e:	460e      	mov	r6, r1
90029180:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90029184:	4615      	mov	r5, r2
90029186:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90029188:	2f00      	cmp	r7, #0
9002918a:	f000 8141 	beq.w	90029410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002918e:	6820      	ldr	r0, [r4, #0]
90029190:	aa0a      	add	r2, sp, #40	@ 0x28
90029192:	6861      	ldr	r1, [r4, #4]
90029194:	f04f 0802 	mov.w	r8, #2
90029198:	3504      	adds	r5, #4
9002919a:	c203      	stmia	r2!, {r0, r1}
9002919c:	6818      	ldr	r0, [r3, #0]
9002919e:	aa0c      	add	r2, sp, #48	@ 0x30
900291a0:	6859      	ldr	r1, [r3, #4]
900291a2:	c203      	stmia	r2!, {r0, r1}
900291a4:	a80a      	add	r0, sp, #40	@ 0x28
900291a6:	f7ed ffc3 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900291aa:	4621      	mov	r1, r4
900291ac:	a80c      	add	r0, sp, #48	@ 0x30
900291ae:	f7ed ffe7 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900291b2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900291b6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900291ba:	f002 0301 	and.w	r3, r2, #1
900291be:	9306      	str	r3, [sp, #24]
900291c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900291c4:	f003 0101 	and.w	r1, r3, #1
900291c8:	9105      	str	r1, [sp, #20]
900291ca:	9805      	ldr	r0, [sp, #20]
900291cc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900291d0:	4403      	add	r3, r0
900291d2:	fb01 2303 	mla	r3, r1, r3, r2
900291d6:	fb93 f3f8 	sdiv	r3, r3, r8
900291da:	441e      	add	r6, r3
900291dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900291e0:	441a      	add	r2, r3
900291e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900291e6:	4419      	add	r1, r3
900291e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900291ec:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900291f0:	9303      	str	r3, [sp, #12]
900291f2:	4b89      	ldr	r3, [pc, #548]	@ (90029418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900291f4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900291f8:	6818      	ldr	r0, [r3, #0]
900291fa:	6803      	ldr	r3, [r0, #0]
900291fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900291fe:	4798      	blx	r3
90029200:	4a86      	ldr	r2, [pc, #536]	@ (9002941c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90029202:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90029206:	2fff      	cmp	r7, #255	@ 0xff
90029208:	8813      	ldrh	r3, [r2, #0]
9002920a:	4694      	mov	ip, r2
9002920c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90029210:	fb03 9404 	mla	r4, r3, r4, r9
90029214:	fb03 f30b 	mul.w	r3, r3, fp
90029218:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002921c:	d071      	beq.n	90029302 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002921e:	43f9      	mvns	r1, r7
90029220:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90029224:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90029228:	b2c9      	uxtb	r1, r1
9002922a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002922e:	9104      	str	r1, [sp, #16]
90029230:	9b07      	ldr	r3, [sp, #28]
90029232:	42a3      	cmp	r3, r4
90029234:	f240 80e7 	bls.w	90029406 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90029238:	9b06      	ldr	r3, [sp, #24]
9002923a:	2b00      	cmp	r3, #0
9002923c:	d03d      	beq.n	900292ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002923e:	7831      	ldrb	r1, [r6, #0]
90029240:	4650      	mov	r0, sl
90029242:	9b04      	ldr	r3, [sp, #16]
90029244:	f106 0801 	add.w	r8, r6, #1
90029248:	f001 010f 	and.w	r1, r1, #15
9002924c:	8822      	ldrh	r2, [r4, #0]
9002924e:	9300      	str	r3, [sp, #0]
90029250:	463b      	mov	r3, r7
90029252:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90029256:	4429      	add	r1, r5
90029258:	f7ff ff56 	bl	90029108 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002925c:	9b03      	ldr	r3, [sp, #12]
9002925e:	f824 0b02 	strh.w	r0, [r4], #2
90029262:	f103 3bff 	add.w	fp, r3, #4294967295
90029266:	f1bb 0f01 	cmp.w	fp, #1
9002926a:	46a1      	mov	r9, r4
9002926c:	f104 0404 	add.w	r4, r4, #4
90029270:	dd27      	ble.n	900292c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90029272:	f898 1000 	ldrb.w	r1, [r8]
90029276:	4650      	mov	r0, sl
90029278:	9b04      	ldr	r3, [sp, #16]
9002927a:	f1ab 0b02 	sub.w	fp, fp, #2
9002927e:	0909      	lsrs	r1, r1, #4
90029280:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90029284:	9300      	str	r3, [sp, #0]
90029286:	463b      	mov	r3, r7
90029288:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002928c:	4429      	add	r1, r5
9002928e:	f7ff ff3b 	bl	90029108 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90029292:	f824 0c04 	strh.w	r0, [r4, #-4]
90029296:	f818 1b01 	ldrb.w	r1, [r8], #1
9002929a:	4650      	mov	r0, sl
9002929c:	9b04      	ldr	r3, [sp, #16]
9002929e:	f001 010f 	and.w	r1, r1, #15
900292a2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900292a6:	9300      	str	r3, [sp, #0]
900292a8:	463b      	mov	r3, r7
900292aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900292ae:	4429      	add	r1, r5
900292b0:	f7ff ff2a 	bl	90029108 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900292b4:	f824 0c02 	strh.w	r0, [r4, #-2]
900292b8:	e7d5      	b.n	90029266 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900292ba:	46b0      	mov	r8, r6
900292bc:	f8dd b00c 	ldr.w	fp, [sp, #12]
900292c0:	e7d1      	b.n	90029266 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900292c2:	d10f      	bne.n	900292e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900292c4:	f898 1000 	ldrb.w	r1, [r8]
900292c8:	4650      	mov	r0, sl
900292ca:	9b04      	ldr	r3, [sp, #16]
900292cc:	0909      	lsrs	r1, r1, #4
900292ce:	f8b9 2000 	ldrh.w	r2, [r9]
900292d2:	9300      	str	r3, [sp, #0]
900292d4:	463b      	mov	r3, r7
900292d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900292da:	4429      	add	r1, r5
900292dc:	f7ff ff14 	bl	90029108 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900292e0:	f829 0b02 	strh.w	r0, [r9], #2
900292e4:	9b08      	ldr	r3, [sp, #32]
900292e6:	9a05      	ldr	r2, [sp, #20]
900292e8:	881c      	ldrh	r4, [r3, #0]
900292ea:	9b03      	ldr	r3, [sp, #12]
900292ec:	1ae4      	subs	r4, r4, r3
900292ee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900292f2:	4413      	add	r3, r2
900292f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900292f6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900292fa:	fb93 f3f2 	sdiv	r3, r3, r2
900292fe:	441e      	add	r6, r3
90029300:	e796      	b.n	90029230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90029302:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90029306:	4f46      	ldr	r7, [pc, #280]	@ (90029420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90029308:	42a3      	cmp	r3, r4
9002930a:	d97c      	bls.n	90029406 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002930c:	9a06      	ldr	r2, [sp, #24]
9002930e:	2a00      	cmp	r2, #0
90029310:	d054      	beq.n	900293bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90029312:	7830      	ldrb	r0, [r6, #0]
90029314:	1c71      	adds	r1, r6, #1
90029316:	f000 000f 	and.w	r0, r0, #15
9002931a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002931e:	eb05 0e00 	add.w	lr, r5, r0
90029322:	5c28      	ldrb	r0, [r5, r0]
90029324:	f89e 2002 	ldrb.w	r2, [lr, #2]
90029328:	f89e e001 	ldrb.w	lr, [lr, #1]
9002932c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90029330:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029334:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90029338:	ea42 020e 	orr.w	r2, r2, lr
9002933c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90029340:	f824 2b02 	strh.w	r2, [r4], #2
90029344:	9a03      	ldr	r2, [sp, #12]
90029346:	f102 3eff 	add.w	lr, r2, #4294967295
9002934a:	f1be 0f01 	cmp.w	lr, #1
9002934e:	4620      	mov	r0, r4
90029350:	f104 0404 	add.w	r4, r4, #4
90029354:	dd36      	ble.n	900293c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90029356:	7808      	ldrb	r0, [r1, #0]
90029358:	f1ae 0e02 	sub.w	lr, lr, #2
9002935c:	0900      	lsrs	r0, r0, #4
9002935e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90029362:	eb05 0a00 	add.w	sl, r5, r0
90029366:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002936a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002936e:	00d2      	lsls	r2, r2, #3
90029370:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90029374:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029378:	ea49 0202 	orr.w	r2, r9, r2
9002937c:	f815 9000 	ldrb.w	r9, [r5, r0]
90029380:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90029384:	f824 2c04 	strh.w	r2, [r4, #-4]
90029388:	f811 0b01 	ldrb.w	r0, [r1], #1
9002938c:	f000 000f 	and.w	r0, r0, #15
90029390:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90029394:	eb05 0a00 	add.w	sl, r5, r0
90029398:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002939c:	f89a 9002 	ldrb.w	r9, [sl, #2]
900293a0:	00d2      	lsls	r2, r2, #3
900293a2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900293a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900293aa:	ea49 0202 	orr.w	r2, r9, r2
900293ae:	f815 9000 	ldrb.w	r9, [r5, r0]
900293b2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900293b6:	f824 2c02 	strh.w	r2, [r4, #-2]
900293ba:	e7c6      	b.n	9002934a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900293bc:	4631      	mov	r1, r6
900293be:	f8dd e00c 	ldr.w	lr, [sp, #12]
900293c2:	e7c2      	b.n	9002934a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900293c4:	d111      	bne.n	900293ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900293c6:	7809      	ldrb	r1, [r1, #0]
900293c8:	0909      	lsrs	r1, r1, #4
900293ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900293ce:	186c      	adds	r4, r5, r1
900293d0:	5c69      	ldrb	r1, [r5, r1]
900293d2:	78a2      	ldrb	r2, [r4, #2]
900293d4:	7864      	ldrb	r4, [r4, #1]
900293d6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900293da:	00e4      	lsls	r4, r4, #3
900293dc:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900293e0:	4322      	orrs	r2, r4
900293e2:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900293e6:	f820 2b02 	strh.w	r2, [r0], #2
900293ea:	9a03      	ldr	r2, [sp, #12]
900293ec:	f8bc 4000 	ldrh.w	r4, [ip]
900293f0:	9905      	ldr	r1, [sp, #20]
900293f2:	1aa4      	subs	r4, r4, r2
900293f4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900293f8:	440a      	add	r2, r1
900293fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900293fe:	fb92 f2f8 	sdiv	r2, r2, r8
90029402:	4416      	add	r6, r2
90029404:	e780      	b.n	90029308 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90029406:	4b04      	ldr	r3, [pc, #16]	@ (90029418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90029408:	6818      	ldr	r0, [r3, #0]
9002940a:	6803      	ldr	r3, [r0, #0]
9002940c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002940e:	4798      	blx	r3
90029410:	b00f      	add	sp, #60	@ 0x3c
90029412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029416:	bf00      	nop
90029418:	24021d64 	.word	0x24021d64
9002941c:	24021d5e 	.word	0x24021d5e
90029420:	fffff800 	.word	0xfffff800

90029424 <CRC_Lock>:
90029424:	4a2d      	ldr	r2, [pc, #180]	@ (900294dc <CRC_Lock+0xb8>)
90029426:	b530      	push	{r4, r5, lr}
90029428:	6813      	ldr	r3, [r2, #0]
9002942a:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002942e:	f023 0301 	bic.w	r3, r3, #1
90029432:	6013      	str	r3, [r2, #0]
90029434:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90029438:	4b29      	ldr	r3, [pc, #164]	@ (900294e0 <CRC_Lock+0xbc>)
9002943a:	681c      	ldr	r4, [r3, #0]
9002943c:	4014      	ands	r4, r2
9002943e:	42ac      	cmp	r4, r5
90029440:	d005      	beq.n	9002944e <CRC_Lock+0x2a>
90029442:	681c      	ldr	r4, [r3, #0]
90029444:	f24c 2570 	movw	r5, #49776	@ 0xc270
90029448:	4014      	ands	r4, r2
9002944a:	42ac      	cmp	r4, r5
9002944c:	d125      	bne.n	9002949a <CRC_Lock+0x76>
9002944e:	4b25      	ldr	r3, [pc, #148]	@ (900294e4 <CRC_Lock+0xc0>)
90029450:	681b      	ldr	r3, [r3, #0]
90029452:	2b00      	cmp	r3, #0
90029454:	d139      	bne.n	900294ca <CRC_Lock+0xa6>
90029456:	4b24      	ldr	r3, [pc, #144]	@ (900294e8 <CRC_Lock+0xc4>)
90029458:	681a      	ldr	r2, [r3, #0]
9002945a:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002945e:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90029462:	d00d      	beq.n	90029480 <CRC_Lock+0x5c>
90029464:	681a      	ldr	r2, [r3, #0]
90029466:	f240 4483 	movw	r4, #1155	@ 0x483
9002946a:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002946e:	42a2      	cmp	r2, r4
90029470:	d006      	beq.n	90029480 <CRC_Lock+0x5c>
90029472:	681b      	ldr	r3, [r3, #0]
90029474:	f240 4285 	movw	r2, #1157	@ 0x485
90029478:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002947c:	4293      	cmp	r3, r2
9002947e:	d124      	bne.n	900294ca <CRC_Lock+0xa6>
90029480:	4b1a      	ldr	r3, [pc, #104]	@ (900294ec <CRC_Lock+0xc8>)
90029482:	2201      	movs	r2, #1
90029484:	601a      	str	r2, [r3, #0]
90029486:	681a      	ldr	r2, [r3, #0]
90029488:	2a00      	cmp	r2, #0
9002948a:	d1fc      	bne.n	90029486 <CRC_Lock+0x62>
9002948c:	4b18      	ldr	r3, [pc, #96]	@ (900294f0 <CRC_Lock+0xcc>)
9002948e:	6018      	str	r0, [r3, #0]
90029490:	6818      	ldr	r0, [r3, #0]
90029492:	1a43      	subs	r3, r0, r1
90029494:	4258      	negs	r0, r3
90029496:	4158      	adcs	r0, r3
90029498:	e00e      	b.n	900294b8 <CRC_Lock+0x94>
9002949a:	681b      	ldr	r3, [r3, #0]
9002949c:	4013      	ands	r3, r2
9002949e:	f24d 2220 	movw	r2, #53792	@ 0xd220
900294a2:	4293      	cmp	r3, r2
900294a4:	d111      	bne.n	900294ca <CRC_Lock+0xa6>
900294a6:	4b13      	ldr	r3, [pc, #76]	@ (900294f4 <CRC_Lock+0xd0>)
900294a8:	f240 4286 	movw	r2, #1158	@ 0x486
900294ac:	681b      	ldr	r3, [r3, #0]
900294ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
900294b2:	4293      	cmp	r3, r2
900294b4:	d001      	beq.n	900294ba <CRC_Lock+0x96>
900294b6:	2000      	movs	r0, #0
900294b8:	bd30      	pop	{r4, r5, pc}
900294ba:	4b0f      	ldr	r3, [pc, #60]	@ (900294f8 <CRC_Lock+0xd4>)
900294bc:	2201      	movs	r2, #1
900294be:	601a      	str	r2, [r3, #0]
900294c0:	681a      	ldr	r2, [r3, #0]
900294c2:	2a00      	cmp	r2, #0
900294c4:	d1fc      	bne.n	900294c0 <CRC_Lock+0x9c>
900294c6:	4b0d      	ldr	r3, [pc, #52]	@ (900294fc <CRC_Lock+0xd8>)
900294c8:	e7e1      	b.n	9002948e <CRC_Lock+0x6a>
900294ca:	4b0d      	ldr	r3, [pc, #52]	@ (90029500 <CRC_Lock+0xdc>)
900294cc:	2201      	movs	r2, #1
900294ce:	601a      	str	r2, [r3, #0]
900294d0:	681a      	ldr	r2, [r3, #0]
900294d2:	2a00      	cmp	r2, #0
900294d4:	d1fc      	bne.n	900294d0 <CRC_Lock+0xac>
900294d6:	4b0b      	ldr	r3, [pc, #44]	@ (90029504 <CRC_Lock+0xe0>)
900294d8:	e7d9      	b.n	9002948e <CRC_Lock+0x6a>
900294da:	bf00      	nop
900294dc:	e0002000 	.word	0xe0002000
900294e0:	e000ed00 	.word	0xe000ed00
900294e4:	e0042000 	.word	0xe0042000
900294e8:	5c001000 	.word	0x5c001000
900294ec:	58024c08 	.word	0x58024c08
900294f0:	58024c00 	.word	0x58024c00
900294f4:	46008ff0 	.word	0x46008ff0
900294f8:	46024c08 	.word	0x46024c08
900294fc:	46024c00 	.word	0x46024c00
90029500:	40023008 	.word	0x40023008
90029504:	40023000 	.word	0x40023000

90029508 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90029508:	6101      	str	r1, [r0, #16]
9002950a:	4770      	bx	lr

9002950c <_ZN8touchgfx8Gestures4tickEv>:
9002950c:	7b83      	ldrb	r3, [r0, #14]
9002950e:	b14b      	cbz	r3, 90029524 <_ZN8touchgfx8Gestures4tickEv+0x18>
90029510:	8903      	ldrh	r3, [r0, #8]
90029512:	3301      	adds	r3, #1
90029514:	b29b      	uxth	r3, r3
90029516:	2b07      	cmp	r3, #7
90029518:	8103      	strh	r3, [r0, #8]
9002951a:	bf81      	itttt	hi
9002951c:	2300      	movhi	r3, #0
9002951e:	8143      	strhhi	r3, [r0, #10]
90029520:	8183      	strhhi	r3, [r0, #12]
90029522:	7383      	strbhi	r3, [r0, #14]
90029524:	4770      	bx	lr
	...

90029528 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90029528:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002952c:	4698      	mov	r8, r3
9002952e:	8883      	ldrh	r3, [r0, #4]
90029530:	4604      	mov	r4, r0
90029532:	4617      	mov	r7, r2
90029534:	f8ad 3006 	strh.w	r3, [sp, #6]
90029538:	eba8 0303 	sub.w	r3, r8, r3
9002953c:	4a19      	ldr	r2, [pc, #100]	@ (900295a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002953e:	460e      	mov	r6, r1
90029540:	b21b      	sxth	r3, r3
90029542:	88c1      	ldrh	r1, [r0, #6]
90029544:	9200      	str	r2, [sp, #0]
90029546:	2000      	movs	r0, #0
90029548:	2b00      	cmp	r3, #0
9002954a:	8aa2      	ldrh	r2, [r4, #20]
9002954c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90029550:	bfb8      	it	lt
90029552:	425b      	neglt	r3, r3
90029554:	f88d 0004 	strb.w	r0, [sp, #4]
90029558:	f8ad 1008 	strh.w	r1, [sp, #8]
9002955c:	b21b      	sxth	r3, r3
9002955e:	f8ad 800a 	strh.w	r8, [sp, #10]
90029562:	f8ad 500c 	strh.w	r5, [sp, #12]
90029566:	4293      	cmp	r3, r2
90029568:	dc07      	bgt.n	9002957a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002956a:	1a69      	subs	r1, r5, r1
9002956c:	b209      	sxth	r1, r1
9002956e:	2900      	cmp	r1, #0
90029570:	bfb8      	it	lt
90029572:	4249      	neglt	r1, r1
90029574:	b209      	sxth	r1, r1
90029576:	428a      	cmp	r2, r1
90029578:	da10      	bge.n	9002959c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002957a:	6920      	ldr	r0, [r4, #16]
9002957c:	4669      	mov	r1, sp
9002957e:	eba8 0606 	sub.w	r6, r8, r6
90029582:	1bef      	subs	r7, r5, r7
90029584:	6803      	ldr	r3, [r0, #0]
90029586:	685b      	ldr	r3, [r3, #4]
90029588:	4798      	blx	r3
9002958a:	2300      	movs	r3, #0
9002958c:	2001      	movs	r0, #1
9002958e:	8166      	strh	r6, [r4, #10]
90029590:	8123      	strh	r3, [r4, #8]
90029592:	81a7      	strh	r7, [r4, #12]
90029594:	f8a4 8004 	strh.w	r8, [r4, #4]
90029598:	80e5      	strh	r5, [r4, #6]
9002959a:	73a0      	strb	r0, [r4, #14]
9002959c:	b004      	add	sp, #16
9002959e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900295a2:	bf00      	nop
900295a4:	9002ea64 	.word	0x9002ea64

900295a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900295a8:	b5f0      	push	{r4, r5, r6, r7, lr}
900295aa:	461e      	mov	r6, r3
900295ac:	1e4b      	subs	r3, r1, #1
900295ae:	b085      	sub	sp, #20
900295b0:	4604      	mov	r4, r0
900295b2:	2b01      	cmp	r3, #1
900295b4:	460d      	mov	r5, r1
900295b6:	4617      	mov	r7, r2
900295b8:	d84b      	bhi.n	90029652 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900295ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900295be:	1cd3      	adds	r3, r2, #3
900295c0:	b29b      	uxth	r3, r3
900295c2:	2b06      	cmp	r3, #6
900295c4:	d916      	bls.n	900295f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900295c6:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90029668 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900295ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900295ce:	f8cd c004 	str.w	ip, [sp, #4]
900295d2:	f04f 0c00 	mov.w	ip, #0
900295d6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900295da:	6900      	ldr	r0, [r0, #16]
900295dc:	f8ad 100c 	strh.w	r1, [sp, #12]
900295e0:	a901      	add	r1, sp, #4
900295e2:	f88d c008 	strb.w	ip, [sp, #8]
900295e6:	f8ad 200a 	strh.w	r2, [sp, #10]
900295ea:	f8ad 300e 	strh.w	r3, [sp, #14]
900295ee:	6803      	ldr	r3, [r0, #0]
900295f0:	689b      	ldr	r3, [r3, #8]
900295f2:	4798      	blx	r3
900295f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900295f8:	1cd3      	adds	r3, r2, #3
900295fa:	b29b      	uxth	r3, r3
900295fc:	2b06      	cmp	r3, #6
900295fe:	d916      	bls.n	9002962e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029600:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90029668 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029604:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029608:	f8cd c004 	str.w	ip, [sp, #4]
9002960c:	f04f 0c01 	mov.w	ip, #1
90029610:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029614:	6920      	ldr	r0, [r4, #16]
90029616:	f8ad 100c 	strh.w	r1, [sp, #12]
9002961a:	a901      	add	r1, sp, #4
9002961c:	f88d c008 	strb.w	ip, [sp, #8]
90029620:	f8ad 200a 	strh.w	r2, [sp, #10]
90029624:	f8ad 300e 	strh.w	r3, [sp, #14]
90029628:	6803      	ldr	r3, [r0, #0]
9002962a:	689b      	ldr	r3, [r3, #8]
9002962c:	4798      	blx	r3
9002962e:	4b0d      	ldr	r3, [pc, #52]	@ (90029664 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90029630:	a901      	add	r1, sp, #4
90029632:	6920      	ldr	r0, [r4, #16]
90029634:	9301      	str	r3, [sp, #4]
90029636:	2300      	movs	r3, #0
90029638:	f88d 5008 	strb.w	r5, [sp, #8]
9002963c:	f8ad 700a 	strh.w	r7, [sp, #10]
90029640:	f8ad 600c 	strh.w	r6, [sp, #12]
90029644:	f8ad 300e 	strh.w	r3, [sp, #14]
90029648:	6803      	ldr	r3, [r0, #0]
9002964a:	681b      	ldr	r3, [r3, #0]
9002964c:	4798      	blx	r3
9002964e:	b005      	add	sp, #20
90029650:	bdf0      	pop	{r4, r5, r6, r7, pc}
90029652:	2900      	cmp	r1, #0
90029654:	d1eb      	bne.n	9002962e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029656:	80a2      	strh	r2, [r4, #4]
90029658:	80c6      	strh	r6, [r0, #6]
9002965a:	60a1      	str	r1, [r4, #8]
9002965c:	81a1      	strh	r1, [r4, #12]
9002965e:	73a1      	strb	r1, [r4, #14]
90029660:	e7e5      	b.n	9002962e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029662:	bf00      	nop
90029664:	9002ea50 	.word	0x9002ea50
90029668:	9002ea78 	.word	0x9002ea78

9002966c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002966c:	10c9      	asrs	r1, r1, #3
9002966e:	2900      	cmp	r1, #0
90029670:	bfb8      	it	lt
90029672:	4249      	neglt	r1, r1
90029674:	2801      	cmp	r0, #1
90029676:	d108      	bne.n	9002968a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90029678:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002967c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90029680:	4601      	mov	r1, r0
90029682:	dd02      	ble.n	9002968a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90029684:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90029688:	4770      	bx	lr
9002968a:	29ff      	cmp	r1, #255	@ 0xff
9002968c:	bfa8      	it	ge
9002968e:	21ff      	movge	r1, #255	@ 0xff
90029690:	4608      	mov	r0, r1
90029692:	4770      	bx	lr

90029694 <_ZN8touchgfx10Rasterizer6lineToEii>:
90029694:	b410      	push	{r4}
90029696:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002969a:	429c      	cmp	r4, r3
9002969c:	d803      	bhi.n	900296a6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002969e:	f85d 4b04 	ldr.w	r4, [sp], #4
900296a2:	f7ec b84f 	b.w	90015744 <_ZN8touchgfx7Outline6lineToEii>
900296a6:	f85d 4b04 	ldr.w	r4, [sp], #4
900296aa:	4770      	bx	lr

900296ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900296ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900296b0:	b08b      	sub	sp, #44	@ 0x2c
900296b2:	4606      	mov	r6, r0
900296b4:	468a      	mov	sl, r1
900296b6:	e9cd 2306 	strd	r2, r3, [sp, #24]
900296ba:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900296be:	9308      	str	r3, [sp, #32]
900296c0:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900296c4:	9309      	str	r3, [sp, #36]	@ 0x24
900296c6:	f7ec f9a8 	bl	90015a1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900296ca:	68b5      	ldr	r5, [r6, #8]
900296cc:	4604      	mov	r4, r0
900296ce:	2d00      	cmp	r5, #0
900296d0:	d044      	beq.n	9002975c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900296d2:	6873      	ldr	r3, [r6, #4]
900296d4:	42ab      	cmp	r3, r5
900296d6:	d33d      	bcc.n	90029754 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900296d8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900296dc:	f04f 0800 	mov.w	r8, #0
900296e0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
900296e4:	eb02 0b03 	add.w	fp, r2, r3
900296e8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
900296ec:	fb02 1203 	mla	r2, r2, r3, r1
900296f0:	9205      	str	r2, [sp, #20]
900296f2:	1e6a      	subs	r2, r5, #1
900296f4:	9204      	str	r2, [sp, #16]
900296f6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
900296fa:	f9b4 7000 	ldrsh.w	r7, [r4]
900296fe:	454b      	cmp	r3, r9
90029700:	463a      	mov	r2, r7
90029702:	d008      	beq.n	90029716 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90029704:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90029708:	eb03 0b09 	add.w	fp, r3, r9
9002970c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90029710:	fb03 1309 	mla	r3, r3, r9, r1
90029714:	9305      	str	r3, [sp, #20]
90029716:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002971a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002971e:	4498      	add	r8, r3
90029720:	9b04      	ldr	r3, [sp, #16]
90029722:	3b01      	subs	r3, #1
90029724:	9304      	str	r3, [sp, #16]
90029726:	9b04      	ldr	r3, [sp, #16]
90029728:	3301      	adds	r3, #1
9002972a:	d015      	beq.n	90029758 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002972c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90029730:	42bb      	cmp	r3, r7
90029732:	d117      	bne.n	90029764 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90029734:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029738:	9b04      	ldr	r3, [sp, #16]
9002973a:	4548      	cmp	r0, r9
9002973c:	f103 33ff 	add.w	r3, r3, #4294967295
90029740:	d17d      	bne.n	9002983e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90029742:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90029746:	4401      	add	r1, r0
90029748:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002974c:	4480      	add	r8, r0
9002974e:	e7e9      	b.n	90029724 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90029750:	461f      	mov	r7, r3
90029752:	e042      	b.n	900297da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90029754:	2000      	movs	r0, #0
90029756:	e002      	b.n	9002975e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029758:	2900      	cmp	r1, #0
9002975a:	d16d      	bne.n	90029838 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002975c:	2001      	movs	r0, #1
9002975e:	b00b      	add	sp, #44	@ 0x2c
90029760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029764:	b379      	cbz	r1, 900297c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90029766:	2f00      	cmp	r7, #0
90029768:	db29      	blt.n	900297be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002976a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002976e:	42bb      	cmp	r3, r7
90029770:	dd25      	ble.n	900297be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029772:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90029776:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002977a:	f7ff ff77 	bl	9002966c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002977e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029780:	fb10 f003 	smulbb	r0, r0, r3
90029784:	b280      	uxth	r0, r0
90029786:	1c41      	adds	r1, r0, #1
90029788:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002978c:	1209      	asrs	r1, r1, #8
9002978e:	f011 0fff 	tst.w	r1, #255	@ 0xff
90029792:	d014      	beq.n	900297be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029794:	b2c9      	uxtb	r1, r1
90029796:	9808      	ldr	r0, [sp, #32]
90029798:	b2ba      	uxth	r2, r7
9002979a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002979c:	9102      	str	r1, [sp, #8]
9002979e:	2101      	movs	r1, #1
900297a0:	4413      	add	r3, r2
900297a2:	4402      	add	r2, r0
900297a4:	9101      	str	r1, [sp, #4]
900297a6:	fa0f f18b 	sxth.w	r1, fp
900297aa:	f8da 0000 	ldr.w	r0, [sl]
900297ae:	b21b      	sxth	r3, r3
900297b0:	9100      	str	r1, [sp, #0]
900297b2:	b212      	sxth	r2, r2
900297b4:	6941      	ldr	r1, [r0, #20]
900297b6:	4650      	mov	r0, sl
900297b8:	460d      	mov	r5, r1
900297ba:	9905      	ldr	r1, [sp, #20]
900297bc:	47a8      	blx	r5
900297be:	9b04      	ldr	r3, [sp, #16]
900297c0:	1c7a      	adds	r2, r7, #1
900297c2:	3301      	adds	r3, #1
900297c4:	d0ca      	beq.n	9002975c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900297c6:	f9b4 7000 	ldrsh.w	r7, [r4]
900297ca:	1abb      	subs	r3, r7, r2
900297cc:	2b00      	cmp	r3, #0
900297ce:	dd31      	ble.n	90029834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900297d0:	2a00      	cmp	r2, #0
900297d2:	dabd      	bge.n	90029750 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900297d4:	2f00      	cmp	r7, #0
900297d6:	dd2d      	ble.n	90029834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900297d8:	2200      	movs	r2, #0
900297da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900297de:	19d1      	adds	r1, r2, r7
900297e0:	4299      	cmp	r1, r3
900297e2:	db02      	blt.n	900297ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900297e4:	1a9f      	subs	r7, r3, r2
900297e6:	2f00      	cmp	r7, #0
900297e8:	dd24      	ble.n	90029834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900297ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
900297ee:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900297f2:	f7ff ff3b 	bl	9002966c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900297f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900297f8:	fb10 f003 	smulbb	r0, r0, r3
900297fc:	b280      	uxth	r0, r0
900297fe:	1c41      	adds	r1, r0, #1
90029800:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90029804:	1209      	asrs	r1, r1, #8
90029806:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002980a:	d013      	beq.n	90029834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002980c:	b292      	uxth	r2, r2
9002980e:	9808      	ldr	r0, [sp, #32]
90029810:	b2c9      	uxtb	r1, r1
90029812:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90029814:	b23f      	sxth	r7, r7
90029816:	4413      	add	r3, r2
90029818:	9102      	str	r1, [sp, #8]
9002981a:	4402      	add	r2, r0
9002981c:	fa0f f18b 	sxth.w	r1, fp
90029820:	f8da 0000 	ldr.w	r0, [sl]
90029824:	b21b      	sxth	r3, r3
90029826:	9100      	str	r1, [sp, #0]
90029828:	b212      	sxth	r2, r2
9002982a:	9701      	str	r7, [sp, #4]
9002982c:	9905      	ldr	r1, [sp, #20]
9002982e:	6947      	ldr	r7, [r0, #20]
90029830:	4650      	mov	r0, sl
90029832:	47b8      	blx	r7
90029834:	464b      	mov	r3, r9
90029836:	e75e      	b.n	900296f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029838:	2f00      	cmp	r7, #0
9002983a:	da96      	bge.n	9002976a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002983c:	e78e      	b.n	9002975c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002983e:	2900      	cmp	r1, #0
90029840:	d0f8      	beq.n	90029834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029842:	e790      	b.n	90029766 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90029844 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90029844:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029848:	461e      	mov	r6, r3
9002984a:	4b36      	ldr	r3, [pc, #216]	@ (90029924 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002984c:	2500      	movs	r5, #0
9002984e:	f100 0814 	add.w	r8, r0, #20
90029852:	4604      	mov	r4, r0
90029854:	4617      	mov	r7, r2
90029856:	e9c0 3100 	strd	r3, r1, [r0]
9002985a:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002985e:	8185      	strh	r5, [r0, #12]
90029860:	8103      	strh	r3, [r0, #8]
90029862:	f89d 3020 	ldrb.w	r3, [sp, #32]
90029866:	81c5      	strh	r5, [r0, #14]
90029868:	7283      	strb	r3, [r0, #10]
9002986a:	8205      	strh	r5, [r0, #16]
9002986c:	8245      	strh	r5, [r0, #18]
9002986e:	4640      	mov	r0, r8
90029870:	f7eb faae 	bl	90014dd0 <_ZN8touchgfx7OutlineC1Ev>
90029874:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90029878:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
9002987c:	466b      	mov	r3, sp
9002987e:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
90029882:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90029886:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
9002988a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002988e:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
90029892:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90029896:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
9002989a:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002989e:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
900298a2:	6830      	ldr	r0, [r6, #0]
900298a4:	6871      	ldr	r1, [r6, #4]
900298a6:	8872      	ldrh	r2, [r6, #2]
900298a8:	8835      	ldrh	r5, [r6, #0]
900298aa:	c303      	stmia	r3!, {r0, r1}
900298ac:	887b      	ldrh	r3, [r7, #2]
900298ae:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900298b2:	4413      	add	r3, r2
900298b4:	883a      	ldrh	r2, [r7, #0]
900298b6:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900298ba:	442a      	add	r2, r5
900298bc:	81e3      	strh	r3, [r4, #14]
900298be:	8220      	strh	r0, [r4, #16]
900298c0:	4668      	mov	r0, sp
900298c2:	81a2      	strh	r2, [r4, #12]
900298c4:	8261      	strh	r1, [r4, #18]
900298c6:	4639      	mov	r1, r7
900298c8:	f7ed fc5a 	bl	90017180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900298cc:	f104 000c 	add.w	r0, r4, #12
900298d0:	f7ed fc2e 	bl	90017130 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900298d4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900298d8:	f8bd 2000 	ldrh.w	r2, [sp]
900298dc:	4640      	mov	r0, r8
900298de:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
900298e2:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
900298e6:	f7eb fa57 	bl	90014d98 <_ZN8touchgfx7Outline5resetEv>
900298ea:	f9bd 3000 	ldrsh.w	r3, [sp]
900298ee:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
900298f2:	4620      	mov	r0, r4
900298f4:	015b      	lsls	r3, r3, #5
900298f6:	64e3      	str	r3, [r4, #76]	@ 0x4c
900298f8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900298fc:	015b      	lsls	r3, r3, #5
900298fe:	6523      	str	r3, [r4, #80]	@ 0x50
90029900:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90029904:	015b      	lsls	r3, r3, #5
90029906:	6563      	str	r3, [r4, #84]	@ 0x54
90029908:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002990c:	015b      	lsls	r3, r3, #5
9002990e:	65a3      	str	r3, [r4, #88]	@ 0x58
90029910:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90029914:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90029918:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
9002991c:	b002      	add	sp, #8
9002991e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029922:	bf00      	nop
90029924:	9002edb4 	.word	0x9002edb4

90029928 <_ZN8touchgfx6Canvas5closeEv>:
90029928:	b538      	push	{r3, r4, r5, lr}
9002992a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002992e:	4604      	mov	r4, r0
90029930:	b193      	cbz	r3, 90029958 <_ZN8touchgfx6Canvas5closeEv+0x30>
90029932:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90029936:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002993a:	4213      	tst	r3, r2
9002993c:	d10c      	bne.n	90029958 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002993e:	f100 0514 	add.w	r5, r0, #20
90029942:	b123      	cbz	r3, 9002994e <_ZN8touchgfx6Canvas5closeEv+0x26>
90029944:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90029948:	4628      	mov	r0, r5
9002994a:	f7ff fea3 	bl	90029694 <_ZN8touchgfx10Rasterizer6lineToEii>
9002994e:	4628      	mov	r0, r5
90029950:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90029954:	f7ff fe9e 	bl	90029694 <_ZN8touchgfx10Rasterizer6lineToEii>
90029958:	2300      	movs	r3, #0
9002995a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002995e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90029962:	4298      	cmp	r0, r3
90029964:	bf34      	ite	cc
90029966:	2000      	movcc	r0, #0
90029968:	2001      	movcs	r0, #1
9002996a:	bd38      	pop	{r3, r4, r5, pc}

9002996c <_ZN8touchgfx6Canvas6renderEh>:
9002996c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029970:	7a85      	ldrb	r5, [r0, #10]
90029972:	4604      	mov	r4, r0
90029974:	4369      	muls	r1, r5
90029976:	1c4d      	adds	r5, r1, #1
90029978:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002997c:	122d      	asrs	r5, r5, #8
9002997e:	f000 8098 	beq.w	90029ab2 <_ZN8touchgfx6Canvas6renderEh+0x146>
90029982:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90029986:	2b00      	cmp	r3, #0
90029988:	f000 8093 	beq.w	90029ab2 <_ZN8touchgfx6Canvas6renderEh+0x146>
9002998c:	f7ff ffcc 	bl	90029928 <_ZN8touchgfx6Canvas5closeEv>
90029990:	4607      	mov	r7, r0
90029992:	2800      	cmp	r0, #0
90029994:	d045      	beq.n	90029a22 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90029996:	6860      	ldr	r0, [r4, #4]
90029998:	4e47      	ldr	r6, [pc, #284]	@ (90029ab8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
9002999a:	6803      	ldr	r3, [r0, #0]
9002999c:	6837      	ldr	r7, [r6, #0]
9002999e:	689b      	ldr	r3, [r3, #8]
900299a0:	4798      	blx	r3
900299a2:	4601      	mov	r1, r0
900299a4:	4638      	mov	r0, r7
900299a6:	f7e8 fcb5 	bl	90012314 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900299aa:	4607      	mov	r7, r0
900299ac:	f7e8 f848 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
900299b0:	6803      	ldr	r3, [r0, #0]
900299b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900299b4:	4798      	blx	r3
900299b6:	4680      	mov	r8, r0
900299b8:	f7e8 f842 	bl	90011a40 <_ZN8touchgfx3HAL3lcdEv>
900299bc:	6803      	ldr	r3, [r0, #0]
900299be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900299c0:	4798      	blx	r3
900299c2:	280b      	cmp	r0, #11
900299c4:	d85a      	bhi.n	90029a7c <_ZN8touchgfx6Canvas6renderEh+0x110>
900299c6:	e8df f000 	tbb	[pc, r0]
900299ca:	5b50      	.short	0x5b50
900299cc:	3059066b 	.word	0x3059066b
900299d0:	64646440 	.word	0x64646440
900299d4:	6464      	.short	0x6464
900299d6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900299da:	2208      	movs	r2, #8
900299dc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900299e0:	fb91 f2f2 	sdiv	r2, r1, r2
900299e4:	fb08 2303 	mla	r3, r8, r3, r2
900299e8:	441f      	add	r7, r3
900299ea:	424b      	negs	r3, r1
900299ec:	f001 0107 	and.w	r1, r1, #7
900299f0:	f003 0307 	and.w	r3, r3, #7
900299f4:	bf58      	it	pl
900299f6:	4259      	negpl	r1, r3
900299f8:	b2c9      	uxtb	r1, r1
900299fa:	b2ed      	uxtb	r5, r5
900299fc:	463a      	mov	r2, r7
900299fe:	fa0f f388 	sxth.w	r3, r8
90029a02:	f104 0014 	add.w	r0, r4, #20
90029a06:	e9cd 1500 	strd	r1, r5, [sp]
90029a0a:	6861      	ldr	r1, [r4, #4]
90029a0c:	f7ff fe4e 	bl	900296ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90029a10:	4607      	mov	r7, r0
90029a12:	6860      	ldr	r0, [r4, #4]
90029a14:	6803      	ldr	r3, [r0, #0]
90029a16:	691b      	ldr	r3, [r3, #16]
90029a18:	4798      	blx	r3
90029a1a:	6830      	ldr	r0, [r6, #0]
90029a1c:	6803      	ldr	r3, [r0, #0]
90029a1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90029a20:	4798      	blx	r3
90029a22:	4638      	mov	r0, r7
90029a24:	b002      	add	sp, #8
90029a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029a2a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029a2e:	2204      	movs	r2, #4
90029a30:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029a34:	fb91 f2f2 	sdiv	r2, r1, r2
90029a38:	fb08 2303 	mla	r3, r8, r3, r2
90029a3c:	441f      	add	r7, r3
90029a3e:	424b      	negs	r3, r1
90029a40:	f001 0103 	and.w	r1, r1, #3
90029a44:	f003 0303 	and.w	r3, r3, #3
90029a48:	e7d4      	b.n	900299f4 <_ZN8touchgfx6Canvas6renderEh+0x88>
90029a4a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029a4e:	2202      	movs	r2, #2
90029a50:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029a54:	2900      	cmp	r1, #0
90029a56:	fb91 f2f2 	sdiv	r2, r1, r2
90029a5a:	f001 0101 	and.w	r1, r1, #1
90029a5e:	fb08 2303 	mla	r3, r8, r3, r2
90029a62:	bfb8      	it	lt
90029a64:	4249      	neglt	r1, r1
90029a66:	441f      	add	r7, r3
90029a68:	e7c6      	b.n	900299f8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029a6a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029a6e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029a72:	fb08 f303 	mul.w	r3, r8, r3
90029a76:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90029a7a:	441f      	add	r7, r3
90029a7c:	2100      	movs	r1, #0
90029a7e:	e7bc      	b.n	900299fa <_ZN8touchgfx6Canvas6renderEh+0x8e>
90029a80:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029a84:	2103      	movs	r1, #3
90029a86:	fb08 f203 	mul.w	r2, r8, r3
90029a8a:	89a3      	ldrh	r3, [r4, #12]
90029a8c:	fb13 2301 	smlabb	r3, r3, r1, r2
90029a90:	e7f3      	b.n	90029a7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90029a92:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029a96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029a9a:	fb08 2303 	mla	r3, r8, r3, r2
90029a9e:	e7ec      	b.n	90029a7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90029aa0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029aa4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029aa8:	fb08 f303 	mul.w	r3, r8, r3
90029aac:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029ab0:	e7e3      	b.n	90029a7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90029ab2:	2701      	movs	r7, #1
90029ab4:	e7b5      	b.n	90029a22 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90029ab6:	bf00      	nop
90029ab8:	24021d64 	.word	0x24021d64

90029abc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029abc:	4b06      	ldr	r3, [pc, #24]	@ (90029ad8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90029abe:	b510      	push	{r4, lr}
90029ac0:	781b      	ldrb	r3, [r3, #0]
90029ac2:	2b01      	cmp	r3, #1
90029ac4:	d107      	bne.n	90029ad6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90029ac6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90029aca:	680b      	ldr	r3, [r1, #0]
90029acc:	6814      	ldr	r4, [r2, #0]
90029ace:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90029ad2:	6013      	str	r3, [r2, #0]
90029ad4:	600c      	str	r4, [r1, #0]
90029ad6:	bd10      	pop	{r4, pc}
90029ad8:	24021d5c 	.word	0x24021d5c

90029adc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029adc:	b513      	push	{r0, r1, r4, lr}
90029ade:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90029ae2:	4604      	mov	r4, r0
90029ae4:	e9cd 2100 	strd	r2, r1, [sp]
90029ae8:	b9a3      	cbnz	r3, 90029b14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029aea:	466a      	mov	r2, sp
90029aec:	a901      	add	r1, sp, #4
90029aee:	4620      	mov	r0, r4
90029af0:	f7ff ffe4 	bl	90029abc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029af4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90029af6:	9901      	ldr	r1, [sp, #4]
90029af8:	9a00      	ldr	r2, [sp, #0]
90029afa:	1ac9      	subs	r1, r1, r3
90029afc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029afe:	1ad2      	subs	r2, r2, r3
90029b00:	9101      	str	r1, [sp, #4]
90029b02:	2a00      	cmp	r2, #0
90029b04:	9200      	str	r2, [sp, #0]
90029b06:	da0b      	bge.n	90029b20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90029b08:	2301      	movs	r3, #1
90029b0a:	2900      	cmp	r1, #0
90029b0c:	da0e      	bge.n	90029b2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90029b0e:	f043 0304 	orr.w	r3, r3, #4
90029b12:	e013      	b.n	90029b3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90029b14:	f7ff ff08 	bl	90029928 <_ZN8touchgfx6Canvas5closeEv>
90029b18:	2800      	cmp	r0, #0
90029b1a:	d1e6      	bne.n	90029aea <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029b1c:	b002      	add	sp, #8
90029b1e:	bd10      	pop	{r4, pc}
90029b20:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90029b22:	429a      	cmp	r2, r3
90029b24:	bfac      	ite	ge
90029b26:	2302      	movge	r3, #2
90029b28:	2300      	movlt	r3, #0
90029b2a:	e7ee      	b.n	90029b0a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029b2c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90029b2e:	4281      	cmp	r1, r0
90029b30:	bfac      	ite	ge
90029b32:	2008      	movge	r0, #8
90029b34:	2000      	movlt	r0, #0
90029b36:	4318      	orrs	r0, r3
90029b38:	b2c3      	uxtb	r3, r0
90029b3a:	b158      	cbz	r0, 90029b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029b3c:	2200      	movs	r2, #0
90029b3e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90029b42:	9901      	ldr	r1, [sp, #4]
90029b44:	9a00      	ldr	r2, [sp, #0]
90029b46:	66e1      	str	r1, [r4, #108]	@ 0x6c
90029b48:	6722      	str	r2, [r4, #112]	@ 0x70
90029b4a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90029b4e:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90029b52:	e7e3      	b.n	90029b1c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90029b54:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029b58:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029b5c:	4298      	cmp	r0, r3
90029b5e:	d803      	bhi.n	90029b68 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029b60:	f104 0014 	add.w	r0, r4, #20
90029b64:	f7eb fe08 	bl	90015778 <_ZN8touchgfx7Outline6moveToEii>
90029b68:	2301      	movs	r3, #1
90029b6a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029b6e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90029b72:	2300      	movs	r3, #0
90029b74:	e7e5      	b.n	90029b42 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90029b76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90029b76:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029b78:	ab02      	add	r3, sp, #8
90029b7a:	4604      	mov	r4, r0
90029b7c:	9101      	str	r1, [sp, #4]
90029b7e:	a901      	add	r1, sp, #4
90029b80:	f843 2d08 	str.w	r2, [r3, #-8]!
90029b84:	461a      	mov	r2, r3
90029b86:	f7ff ff99 	bl	90029abc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029b8a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90029b8c:	9901      	ldr	r1, [sp, #4]
90029b8e:	9a00      	ldr	r2, [sp, #0]
90029b90:	1ac9      	subs	r1, r1, r3
90029b92:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029b94:	1ad2      	subs	r2, r2, r3
90029b96:	9101      	str	r1, [sp, #4]
90029b98:	2a00      	cmp	r2, #0
90029b9a:	9200      	str	r2, [sp, #0]
90029b9c:	db1c      	blt.n	90029bd8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029b9e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90029ba0:	429a      	cmp	r2, r3
90029ba2:	bfac      	ite	ge
90029ba4:	2002      	movge	r0, #2
90029ba6:	2000      	movlt	r0, #0
90029ba8:	2900      	cmp	r1, #0
90029baa:	db17      	blt.n	90029bdc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029bac:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90029bae:	4299      	cmp	r1, r3
90029bb0:	bfac      	ite	ge
90029bb2:	2308      	movge	r3, #8
90029bb4:	2300      	movlt	r3, #0
90029bb6:	4303      	orrs	r3, r0
90029bb8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90029bbc:	b2dd      	uxtb	r5, r3
90029bbe:	b978      	cbnz	r0, 90029be0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029bc0:	f104 0014 	add.w	r0, r4, #20
90029bc4:	f7ff fd66 	bl	90029694 <_ZN8touchgfx10Rasterizer6lineToEii>
90029bc8:	9b01      	ldr	r3, [sp, #4]
90029bca:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90029bce:	6623      	str	r3, [r4, #96]	@ 0x60
90029bd0:	9b00      	ldr	r3, [sp, #0]
90029bd2:	6663      	str	r3, [r4, #100]	@ 0x64
90029bd4:	b002      	add	sp, #8
90029bd6:	bd70      	pop	{r4, r5, r6, pc}
90029bd8:	2001      	movs	r0, #1
90029bda:	e7e5      	b.n	90029ba8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029bdc:	2304      	movs	r3, #4
90029bde:	e7ea      	b.n	90029bb6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029be0:	b113      	cbz	r3, 90029be8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90029be2:	ea10 0305 	ands.w	r3, r0, r5
90029be6:	d11c      	bne.n	90029c22 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029be8:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90029bec:	f104 0614 	add.w	r6, r4, #20
90029bf0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90029bf4:	b98b      	cbnz	r3, 90029c1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90029bf6:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029bfa:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029bfe:	4298      	cmp	r0, r3
90029c00:	d802      	bhi.n	90029c08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90029c02:	4630      	mov	r0, r6
90029c04:	f7eb fdb8 	bl	90015778 <_ZN8touchgfx7Outline6moveToEii>
90029c08:	2301      	movs	r3, #1
90029c0a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029c0e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90029c12:	4630      	mov	r0, r6
90029c14:	e9dd 2100 	ldrd	r2, r1, [sp]
90029c18:	e7d4      	b.n	90029bc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029c1a:	4630      	mov	r0, r6
90029c1c:	f7ff fd3a 	bl	90029694 <_ZN8touchgfx10Rasterizer6lineToEii>
90029c20:	e7f7      	b.n	90029c12 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90029c22:	461d      	mov	r5, r3
90029c24:	e7d0      	b.n	90029bc8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029c28 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90029c28:	b538      	push	{r3, r4, r5, lr}
90029c2a:	ed2d 8b10 	vpush	{d8-d15}
90029c2e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90029c32:	4605      	mov	r5, r0
90029c34:	eeb0 ca40 	vmov.f32	s24, s0
90029c38:	460c      	mov	r4, r1
90029c3a:	eef0 ca60 	vmov.f32	s25, s1
90029c3e:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90029d9c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90029c42:	eeb0 da41 	vmov.f32	s26, s2
90029c46:	eef0 da61 	vmov.f32	s27, s3
90029c4a:	eeb0 ea42 	vmov.f32	s28, s4
90029c4e:	eef0 ea62 	vmov.f32	s29, s5
90029c52:	eef0 aa6b 	vmov.f32	s21, s23
90029c56:	2c08      	cmp	r4, #8
90029c58:	d86e      	bhi.n	90029d38 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90029c5a:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90029c5e:	ee7d 7aee 	vsub.f32	s15, s27, s29
90029c62:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90029c66:	ee3e 7aec 	vsub.f32	s14, s29, s25
90029c6a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90029c6e:	ee3c fa0d 	vadd.f32	s30, s24, s26
90029c72:	ee7c faad 	vadd.f32	s31, s25, s27
90029c76:	eee6 7a07 	vfma.f32	s15, s12, s14
90029c7a:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90029c7e:	ee3d aaae 	vadd.f32	s20, s27, s29
90029c82:	ee2f fa2b 	vmul.f32	s30, s30, s23
90029c86:	ee6f faab 	vmul.f32	s31, s31, s23
90029c8a:	ee69 9aab 	vmul.f32	s19, s19, s23
90029c8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90029c92:	ee2a aa2b 	vmul.f32	s20, s20, s23
90029c96:	ee7f 8a29 	vadd.f32	s17, s30, s19
90029c9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029c9e:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90029ca2:	ee68 8aab 	vmul.f32	s17, s17, s23
90029ca6:	bf48      	it	mi
90029ca8:	eef1 7a67 	vnegmi.f32	s15, s15
90029cac:	ee29 9a2b 	vmul.f32	s18, s18, s23
90029cb0:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90029cb4:	eef4 7acb 	vcmpe.f32	s15, s22
90029cb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029cbc:	dd3f      	ble.n	90029d3e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90029cbe:	ee27 7a07 	vmul.f32	s14, s14, s14
90029cc2:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029cc6:	eea6 7aa6 	vfma.f32	s14, s13, s13
90029cca:	ee27 7a06 	vmul.f32	s14, s14, s12
90029cce:	eef4 7ac7 	vcmpe.f32	s15, s14
90029cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029cd6:	d847      	bhi.n	90029d68 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029cd8:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90029cdc:	ee3e 0aed 	vsub.f32	s0, s29, s27
90029ce0:	f000 fa57 	bl	9002a192 <atan2f>
90029ce4:	eeb0 8a40 	vmov.f32	s16, s0
90029ce8:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90029cec:	ee3d 0aec 	vsub.f32	s0, s27, s25
90029cf0:	f000 fa4f 	bl	9002a192 <atan2f>
90029cf4:	ee38 0a40 	vsub.f32	s0, s16, s0
90029cf8:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90029da0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90029cfc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029d00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d04:	bf48      	it	mi
90029d06:	eeb1 0a40 	vnegmi.f32	s0, s0
90029d0a:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d12:	bfa4      	itt	ge
90029d14:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90029da4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90029d18:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029d1c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90029da8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90029d20:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029d24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d28:	d51e      	bpl.n	90029d68 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029d2a:	eef0 0a49 	vmov.f32	s1, s18
90029d2e:	4628      	mov	r0, r5
90029d30:	eeb0 0a68 	vmov.f32	s0, s17
90029d34:	f7e9 fce8 	bl	90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029d38:	ecbd 8b10 	vpop	{d8-d15}
90029d3c:	bd38      	pop	{r3, r4, r5, pc}
90029d3e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90029d42:	eeb0 7a68 	vmov.f32	s14, s17
90029d46:	eef0 6a49 	vmov.f32	s13, s18
90029d4a:	eea7 7aea 	vfms.f32	s14, s15, s21
90029d4e:	ee7c 7aae 	vadd.f32	s15, s25, s29
90029d52:	eee7 6aea 	vfms.f32	s13, s15, s21
90029d56:	ee66 7aa6 	vmul.f32	s15, s13, s13
90029d5a:	eee7 7a07 	vfma.f32	s15, s14, s14
90029d5e:	eef4 7ac6 	vcmpe.f32	s15, s12
90029d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d66:	d9e0      	bls.n	90029d2a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029d68:	3401      	adds	r4, #1
90029d6a:	eef0 0a6c 	vmov.f32	s1, s25
90029d6e:	eeb0 0a4c 	vmov.f32	s0, s24
90029d72:	4628      	mov	r0, r5
90029d74:	4621      	mov	r1, r4
90029d76:	eef0 2a49 	vmov.f32	s5, s18
90029d7a:	eeb0 2a68 	vmov.f32	s4, s17
90029d7e:	eef0 1a6f 	vmov.f32	s3, s31
90029d82:	eeb0 1a4f 	vmov.f32	s2, s30
90029d86:	f7ff ff4f 	bl	90029c28 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90029d8a:	eef0 da4a 	vmov.f32	s27, s20
90029d8e:	eeb0 da69 	vmov.f32	s26, s19
90029d92:	eef0 ca49 	vmov.f32	s25, s18
90029d96:	eeb0 ca68 	vmov.f32	s24, s17
90029d9a:	e75c      	b.n	90029c56 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90029d9c:	2edbe6ff 	.word	0x2edbe6ff
90029da0:	40490fdb 	.word	0x40490fdb
90029da4:	40c90fdb 	.word	0x40c90fdb
90029da8:	3dcccccd 	.word	0x3dcccccd

90029dac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90029dac:	b530      	push	{r4, r5, lr}
90029dae:	ed2d 8b10 	vpush	{d8-d15}
90029db2:	eef0 8a40 	vmov.f32	s17, s0
90029db6:	b085      	sub	sp, #20
90029db8:	eef0 9a60 	vmov.f32	s19, s1
90029dbc:	4604      	mov	r4, r0
90029dbe:	eef0 fa41 	vmov.f32	s31, s2
90029dc2:	460d      	mov	r5, r1
90029dc4:	eeb0 fa61 	vmov.f32	s30, s3
90029dc8:	eef0 ba42 	vmov.f32	s23, s4
90029dcc:	eeb0 ca62 	vmov.f32	s24, s5
90029dd0:	eef0 aa43 	vmov.f32	s21, s6
90029dd4:	eeb0 ba63 	vmov.f32	s22, s7
90029dd8:	2d08      	cmp	r5, #8
90029dda:	f200 8113 	bhi.w	9002a004 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90029dde:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90029de2:	ee3b 6aaa 	vadd.f32	s12, s23, s21
90029de6:	ee7f 6aab 	vadd.f32	s13, s31, s23
90029dea:	ee38 daaf 	vadd.f32	s26, s17, s31
90029dee:	ee26 6a27 	vmul.f32	s12, s12, s15
90029df2:	ee7c ca0b 	vadd.f32	s25, s24, s22
90029df6:	ee2d da27 	vmul.f32	s26, s26, s15
90029dfa:	ed8d 6a01 	vstr	s12, [sp, #4]
90029dfe:	eea6 6aa7 	vfma.f32	s12, s13, s15
90029e02:	ee6c caa7 	vmul.f32	s25, s25, s15
90029e06:	eeb0 ea4d 	vmov.f32	s28, s26
90029e0a:	ee79 da8f 	vadd.f32	s27, s19, s30
90029e0e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90029e12:	eea6 eaa7 	vfma.f32	s28, s13, s15
90029e16:	ee66 6a27 	vmul.f32	s13, s12, s15
90029e1a:	ee6d daa7 	vmul.f32	s27, s27, s15
90029e1e:	edcd 6a03 	vstr	s13, [sp, #12]
90029e22:	eef0 6a6c 	vmov.f32	s13, s25
90029e26:	eef0 ea6d 	vmov.f32	s29, s27
90029e2a:	ee2e ea27 	vmul.f32	s28, s28, s15
90029e2e:	eee7 6a27 	vfma.f32	s13, s14, s15
90029e32:	eee7 ea27 	vfma.f32	s29, s14, s15
90029e36:	ee26 7aa7 	vmul.f32	s14, s13, s15
90029e3a:	ee6e eaa7 	vmul.f32	s29, s29, s15
90029e3e:	eef0 6a67 	vmov.f32	s13, s15
90029e42:	ed8d 7a02 	vstr	s14, [sp, #8]
90029e46:	ed9d 7a03 	vldr	s14, [sp, #12]
90029e4a:	ee3e 9a07 	vadd.f32	s18, s28, s14
90029e4e:	ed9d 7a02 	vldr	s14, [sp, #8]
90029e52:	ee3e aa87 	vadd.f32	s20, s29, s14
90029e56:	ee29 9a27 	vmul.f32	s18, s18, s15
90029e5a:	ee2a aa27 	vmul.f32	s20, s20, s15
90029e5e:	2d00      	cmp	r5, #0
90029e60:	f000 810b 	beq.w	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029e64:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029e68:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002a0c0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029e6c:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90029e70:	ee7b 7a69 	vsub.f32	s15, s22, s19
90029e74:	ee3f 6aea 	vsub.f32	s12, s31, s21
90029e78:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90029e7c:	ee3b 5aea 	vsub.f32	s10, s23, s21
90029e80:	eea6 7a27 	vfma.f32	s14, s12, s15
90029e84:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90029e88:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90029e8c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90029e90:	eea5 6a27 	vfma.f32	s12, s10, s15
90029e94:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90029e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e9c:	bf48      	it	mi
90029e9e:	eeb1 7a47 	vnegmi.f32	s14, s14
90029ea2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90029ea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029eaa:	eeb4 7ae4 	vcmpe.f32	s14, s9
90029eae:	bf48      	it	mi
90029eb0:	eeb1 6a46 	vnegmi.f32	s12, s12
90029eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029eb8:	f340 80a8 	ble.w	9002a00c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90029ebc:	eeb4 6ae4 	vcmpe.f32	s12, s9
90029ec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029ec4:	dd5a      	ble.n	90029f7c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90029ec6:	ee65 5aa5 	vmul.f32	s11, s11, s11
90029eca:	ee37 7a06 	vadd.f32	s14, s14, s12
90029ece:	eee7 5aa7 	vfma.f32	s11, s15, s15
90029ed2:	ee27 7a07 	vmul.f32	s14, s14, s14
90029ed6:	ee65 7a85 	vmul.f32	s15, s11, s10
90029eda:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029ee2:	f200 80ca 	bhi.w	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029ee6:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029eea:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029eee:	f000 f950 	bl	9002a192 <atan2f>
90029ef2:	eeb0 8a40 	vmov.f32	s16, s0
90029ef6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029efa:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029efe:	f000 f948 	bl	9002a192 <atan2f>
90029f02:	ee38 fa40 	vsub.f32	s30, s16, s0
90029f06:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029f0a:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029f0e:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90029f12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f16:	bf48      	it	mi
90029f18:	eeb1 fa4f 	vnegmi.f32	s30, s30
90029f1c:	f000 f939 	bl	9002a192 <atan2f>
90029f20:	ee30 0a48 	vsub.f32	s0, s0, s16
90029f24:	eddf 7a67 	vldr	s15, [pc, #412]	@ 9002a0c4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029f28:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f30:	eeb4 fae7 	vcmpe.f32	s30, s15
90029f34:	eddf 7a63 	vldr	s15, [pc, #396]	@ 9002a0c4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029f38:	bf48      	it	mi
90029f3a:	eeb1 0a40 	vnegmi.f32	s0, s0
90029f3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f42:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029f46:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002a0c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029f4a:	bfa4      	itt	ge
90029f4c:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 9002a0cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029f50:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90029f54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f58:	bfa4      	itt	ge
90029f5a:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 9002a0cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029f5e:	ee37 0a40 	vsubge.f32	s0, s14, s0
90029f62:	ee3f 0a00 	vadd.f32	s0, s30, s0
90029f66:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f6e:	f140 8084 	bpl.w	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029f72:	eef0 0a4a 	vmov.f32	s1, s20
90029f76:	eeb0 0a49 	vmov.f32	s0, s18
90029f7a:	e040      	b.n	90029ffe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90029f7c:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029f80:	ee27 7a07 	vmul.f32	s14, s14, s14
90029f84:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029f88:	ee67 7a85 	vmul.f32	s15, s15, s10
90029f8c:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029f90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f94:	d871      	bhi.n	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029f96:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029f9a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029f9e:	f000 f8f8 	bl	9002a192 <atan2f>
90029fa2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029fa6:	eeb0 8a40 	vmov.f32	s16, s0
90029faa:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029fae:	f000 f8f0 	bl	9002a192 <atan2f>
90029fb2:	ee38 0a40 	vsub.f32	s0, s16, s0
90029fb6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 9002a0c4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029fba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029fbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029fc2:	bf48      	it	mi
90029fc4:	eeb1 0a40 	vnegmi.f32	s0, s0
90029fc8:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029fcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029fd0:	bfa4      	itt	ge
90029fd2:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 9002a0cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029fd6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029fda:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002a0c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029fde:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029fe6:	d548      	bpl.n	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029fe8:	eef0 0a4f 	vmov.f32	s1, s30
90029fec:	4620      	mov	r0, r4
90029fee:	eeb0 0a6f 	vmov.f32	s0, s31
90029ff2:	f7e9 fb89 	bl	90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029ff6:	eef0 0a4c 	vmov.f32	s1, s24
90029ffa:	eeb0 0a6b 	vmov.f32	s0, s23
90029ffe:	4620      	mov	r0, r4
9002a000:	f7e9 fb82 	bl	90013708 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002a004:	b005      	add	sp, #20
9002a006:	ecbd 8b10 	vpop	{d8-d15}
9002a00a:	bd30      	pop	{r4, r5, pc}
9002a00c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002a0c0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002a010:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002a014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a018:	dd19      	ble.n	9002a04e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
9002a01a:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002a01e:	ee26 7a06 	vmul.f32	s14, s12, s12
9002a022:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002a026:	ee67 7a85 	vmul.f32	s15, s15, s10
9002a02a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002a02e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a032:	d822      	bhi.n	9002a07a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002a034:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002a038:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002a03c:	f000 f8a9 	bl	9002a192 <atan2f>
9002a040:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002a044:	eeb0 8a40 	vmov.f32	s16, s0
9002a048:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002a04c:	e7af      	b.n	90029fae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002a04e:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002a052:	eeb0 7a49 	vmov.f32	s14, s18
9002a056:	eeb0 6a4a 	vmov.f32	s12, s20
9002a05a:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002a05e:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002a062:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002a066:	ee66 7a06 	vmul.f32	s15, s12, s12
9002a06a:	eee7 7a07 	vfma.f32	s15, s14, s14
9002a06e:	eef4 7ac5 	vcmpe.f32	s15, s10
9002a072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a076:	f67f af7c 	bls.w	90029f72 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002a07a:	3501      	adds	r5, #1
9002a07c:	eef0 0a69 	vmov.f32	s1, s19
9002a080:	eeb0 0a68 	vmov.f32	s0, s17
9002a084:	4620      	mov	r0, r4
9002a086:	4629      	mov	r1, r5
9002a088:	eef0 3a4a 	vmov.f32	s7, s20
9002a08c:	eeb0 3a49 	vmov.f32	s6, s18
9002a090:	eef0 2a6e 	vmov.f32	s5, s29
9002a094:	eeb0 2a4e 	vmov.f32	s4, s28
9002a098:	eef0 1a6d 	vmov.f32	s3, s27
9002a09c:	eeb0 1a4d 	vmov.f32	s2, s26
9002a0a0:	f7ff fe84 	bl	90029dac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9002a0a4:	eeb0 ca6c 	vmov.f32	s24, s25
9002a0a8:	eddd ba01 	vldr	s23, [sp, #4]
9002a0ac:	eef0 9a4a 	vmov.f32	s19, s20
9002a0b0:	ed9d fa02 	vldr	s30, [sp, #8]
9002a0b4:	eef0 8a49 	vmov.f32	s17, s18
9002a0b8:	eddd fa03 	vldr	s31, [sp, #12]
9002a0bc:	e68c      	b.n	90029dd8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002a0be:	bf00      	nop
9002a0c0:	2edbe6ff 	.word	0x2edbe6ff
9002a0c4:	40490fdb 	.word	0x40490fdb
9002a0c8:	3dcccccd 	.word	0x3dcccccd
9002a0cc:	40c90fdb 	.word	0x40c90fdb

9002a0d0 <_ZN8touchgfx6CanvasD1Ev>:
9002a0d0:	4b04      	ldr	r3, [pc, #16]	@ (9002a0e4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002a0d2:	b510      	push	{r4, lr}
9002a0d4:	4604      	mov	r4, r0
9002a0d6:	f840 3b14 	str.w	r3, [r0], #20
9002a0da:	f7ea fe55 	bl	90014d88 <_ZN8touchgfx7OutlineD1Ev>
9002a0de:	4620      	mov	r0, r4
9002a0e0:	bd10      	pop	{r4, pc}
9002a0e2:	bf00      	nop
9002a0e4:	9002edb4 	.word	0x9002edb4

9002a0e8 <_ZN8touchgfx6CanvasD0Ev>:
9002a0e8:	b510      	push	{r4, lr}
9002a0ea:	4604      	mov	r4, r0
9002a0ec:	f7ff fff0 	bl	9002a0d0 <_ZN8touchgfx6CanvasD1Ev>
9002a0f0:	2174      	movs	r1, #116	@ 0x74
9002a0f2:	4620      	mov	r0, r4
9002a0f4:	f000 f826 	bl	9002a144 <_ZdlPvj>
9002a0f8:	4620      	mov	r0, r4
9002a0fa:	bd10      	pop	{r4, pc}

9002a0fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002a0fc:	790b      	ldrb	r3, [r1, #4]
9002a0fe:	2b00      	cmp	r3, #0
9002a100:	bf0c      	ite	eq
9002a102:	2301      	moveq	r3, #1
9002a104:	2300      	movne	r3, #0
9002a106:	b570      	push	{r4, r5, r6, lr}
9002a108:	4604      	mov	r4, r0
9002a10a:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
9002a10e:	460e      	mov	r6, r1
9002a110:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9002a114:	d109      	bne.n	9002a12a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002a116:	b14d      	cbz	r5, 9002a12c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
9002a118:	7933      	ldrb	r3, [r6, #4]
9002a11a:	2b01      	cmp	r3, #1
9002a11c:	d10c      	bne.n	9002a138 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002a11e:	6823      	ldr	r3, [r4, #0]
9002a120:	4620      	mov	r0, r4
9002a122:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9002a124:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002a128:	4718      	bx	r3
9002a12a:	b12d      	cbz	r5, 9002a138 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002a12c:	6823      	ldr	r3, [r4, #0]
9002a12e:	4620      	mov	r0, r4
9002a130:	695b      	ldr	r3, [r3, #20]
9002a132:	4798      	blx	r3
9002a134:	2d00      	cmp	r5, #0
9002a136:	d1ef      	bne.n	9002a118 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9002a138:	bd70      	pop	{r4, r5, r6, pc}

9002a13a <__aeabi_atexit>:
9002a13a:	460b      	mov	r3, r1
9002a13c:	4601      	mov	r1, r0
9002a13e:	4618      	mov	r0, r3
9002a140:	f000 bc58 	b.w	9002a9f4 <__cxa_atexit>

9002a144 <_ZdlPvj>:
9002a144:	f000 b812 	b.w	9002a16c <_ZdlPv>

9002a148 <__cxa_guard_acquire>:
9002a148:	6802      	ldr	r2, [r0, #0]
9002a14a:	07d2      	lsls	r2, r2, #31
9002a14c:	4603      	mov	r3, r0
9002a14e:	d405      	bmi.n	9002a15c <__cxa_guard_acquire+0x14>
9002a150:	7842      	ldrb	r2, [r0, #1]
9002a152:	b102      	cbz	r2, 9002a156 <__cxa_guard_acquire+0xe>
9002a154:	deff      	udf	#255	@ 0xff
9002a156:	2001      	movs	r0, #1
9002a158:	7058      	strb	r0, [r3, #1]
9002a15a:	4770      	bx	lr
9002a15c:	2000      	movs	r0, #0
9002a15e:	4770      	bx	lr

9002a160 <__cxa_guard_release>:
9002a160:	2301      	movs	r3, #1
9002a162:	6003      	str	r3, [r0, #0]
9002a164:	4770      	bx	lr

9002a166 <__cxa_pure_virtual>:
9002a166:	b508      	push	{r3, lr}
9002a168:	f000 f80e 	bl	9002a188 <_ZSt9terminatev>

9002a16c <_ZdlPv>:
9002a16c:	f000 bb8c 	b.w	9002a888 <free>

9002a170 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002a170:	b508      	push	{r3, lr}
9002a172:	4780      	blx	r0
9002a174:	f000 fb55 	bl	9002a822 <abort>

9002a178 <_ZSt13get_terminatev>:
9002a178:	4b02      	ldr	r3, [pc, #8]	@ (9002a184 <_ZSt13get_terminatev+0xc>)
9002a17a:	6818      	ldr	r0, [r3, #0]
9002a17c:	f3bf 8f5b 	dmb	ish
9002a180:	4770      	bx	lr
9002a182:	bf00      	nop
9002a184:	24000104 	.word	0x24000104

9002a188 <_ZSt9terminatev>:
9002a188:	b508      	push	{r3, lr}
9002a18a:	f7ff fff5 	bl	9002a178 <_ZSt13get_terminatev>
9002a18e:	f7ff ffef 	bl	9002a170 <_ZN10__cxxabiv111__terminateEPFvvE>

9002a192 <atan2f>:
9002a192:	f000 b9cd 	b.w	9002a530 <__ieee754_atan2f>
	...

9002a198 <sqrtf>:
9002a198:	b508      	push	{r3, lr}
9002a19a:	ed2d 8b02 	vpush	{d8}
9002a19e:	eeb0 8a40 	vmov.f32	s16, s0
9002a1a2:	f000 f9c2 	bl	9002a52a <__ieee754_sqrtf>
9002a1a6:	eeb4 8a48 	vcmp.f32	s16, s16
9002a1aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a1ae:	d60c      	bvs.n	9002a1ca <sqrtf+0x32>
9002a1b0:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002a1d0 <sqrtf+0x38>
9002a1b4:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002a1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a1bc:	d505      	bpl.n	9002a1ca <sqrtf+0x32>
9002a1be:	f000 fea1 	bl	9002af04 <__errno>
9002a1c2:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002a1c6:	2321      	movs	r3, #33	@ 0x21
9002a1c8:	6003      	str	r3, [r0, #0]
9002a1ca:	ecbd 8b02 	vpop	{d8}
9002a1ce:	bd08      	pop	{r3, pc}
9002a1d0:	00000000 	.word	0x00000000

9002a1d4 <sinf_poly>:
9002a1d4:	07cb      	lsls	r3, r1, #31
9002a1d6:	d412      	bmi.n	9002a1fe <sinf_poly+0x2a>
9002a1d8:	ee21 5b00 	vmul.f64	d5, d1, d0
9002a1dc:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002a1e0:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002a1e4:	eea6 7b01 	vfma.f64	d7, d6, d1
9002a1e8:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002a1ec:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a1f0:	eea6 0b05 	vfma.f64	d0, d6, d5
9002a1f4:	eea7 0b01 	vfma.f64	d0, d7, d1
9002a1f8:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a1fc:	4770      	bx	lr
9002a1fe:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002a202:	ee21 5b01 	vmul.f64	d5, d1, d1
9002a206:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002a20a:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002a20e:	eea1 7b06 	vfma.f64	d7, d1, d6
9002a212:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002a216:	eea1 0b06 	vfma.f64	d0, d1, d6
9002a21a:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002a21e:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a222:	eea5 0b06 	vfma.f64	d0, d5, d6
9002a226:	e7e5      	b.n	9002a1f4 <sinf_poly+0x20>

9002a228 <sinf>:
9002a228:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002a22a:	ee10 4a10 	vmov	r4, s0
9002a22e:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002a232:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002a236:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002a23a:	eef0 7a40 	vmov.f32	s15, s0
9002a23e:	d218      	bcs.n	9002a272 <sinf+0x4a>
9002a240:	ee26 1b06 	vmul.f64	d1, d6, d6
9002a244:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002a248:	d20a      	bcs.n	9002a260 <sinf+0x38>
9002a24a:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
9002a24e:	d103      	bne.n	9002a258 <sinf+0x30>
9002a250:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002a254:	ed8d 1a01 	vstr	s2, [sp, #4]
9002a258:	eeb0 0a67 	vmov.f32	s0, s15
9002a25c:	b003      	add	sp, #12
9002a25e:	bd30      	pop	{r4, r5, pc}
9002a260:	483b      	ldr	r0, [pc, #236]	@ (9002a350 <sinf+0x128>)
9002a262:	eeb0 0b46 	vmov.f64	d0, d6
9002a266:	2100      	movs	r1, #0
9002a268:	b003      	add	sp, #12
9002a26a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002a26e:	f7ff bfb1 	b.w	9002a1d4 <sinf_poly>
9002a272:	f240 422e 	movw	r2, #1070	@ 0x42e
9002a276:	4293      	cmp	r3, r2
9002a278:	d824      	bhi.n	9002a2c4 <sinf+0x9c>
9002a27a:	4b35      	ldr	r3, [pc, #212]	@ (9002a350 <sinf+0x128>)
9002a27c:	ed93 7b08 	vldr	d7, [r3, #32]
9002a280:	ee26 7b07 	vmul.f64	d7, d6, d7
9002a284:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002a288:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a28c:	ee17 1a90 	vmov	r1, s15
9002a290:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002a294:	1609      	asrs	r1, r1, #24
9002a296:	ee07 1a90 	vmov	s15, r1
9002a29a:	f001 0203 	and.w	r2, r1, #3
9002a29e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a2a2:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002a2a6:	ed92 0b00 	vldr	d0, [r2]
9002a2aa:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002a2ae:	f011 0f02 	tst.w	r1, #2
9002a2b2:	eea5 6b47 	vfms.f64	d6, d5, d7
9002a2b6:	bf08      	it	eq
9002a2b8:	4618      	moveq	r0, r3
9002a2ba:	ee26 1b06 	vmul.f64	d1, d6, d6
9002a2be:	ee20 0b06 	vmul.f64	d0, d0, d6
9002a2c2:	e7d1      	b.n	9002a268 <sinf+0x40>
9002a2c4:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002a2c8:	d237      	bcs.n	9002a33a <sinf+0x112>
9002a2ca:	4922      	ldr	r1, [pc, #136]	@ (9002a354 <sinf+0x12c>)
9002a2cc:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002a2d0:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002a2d4:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002a2d8:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002a2dc:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002a2e0:	6a10      	ldr	r0, [r2, #32]
9002a2e2:	6912      	ldr	r2, [r2, #16]
9002a2e4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002a2e8:	40ab      	lsls	r3, r5
9002a2ea:	fba0 5003 	umull	r5, r0, r0, r3
9002a2ee:	4359      	muls	r1, r3
9002a2f0:	fbe3 0102 	umlal	r0, r1, r3, r2
9002a2f4:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002a2f8:	0f9d      	lsrs	r5, r3, #30
9002a2fa:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002a2fe:	1ac9      	subs	r1, r1, r3
9002a300:	f7d6 f9cc 	bl	9000069c <__aeabi_l2d>
9002a304:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002a308:	4b11      	ldr	r3, [pc, #68]	@ (9002a350 <sinf+0x128>)
9002a30a:	f004 0203 	and.w	r2, r4, #3
9002a30e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a312:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 9002a348 <sinf+0x120>
9002a316:	ed92 0b00 	vldr	d0, [r2]
9002a31a:	ec41 0b17 	vmov	d7, r0, r1
9002a31e:	f014 0f02 	tst.w	r4, #2
9002a322:	ee27 7b06 	vmul.f64	d7, d7, d6
9002a326:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a32a:	4629      	mov	r1, r5
9002a32c:	bf08      	it	eq
9002a32e:	4618      	moveq	r0, r3
9002a330:	ee27 1b07 	vmul.f64	d1, d7, d7
9002a334:	ee20 0b07 	vmul.f64	d0, d0, d7
9002a338:	e796      	b.n	9002a268 <sinf+0x40>
9002a33a:	b003      	add	sp, #12
9002a33c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002a340:	f000 b8e4 	b.w	9002a50c <__math_invalidf>
9002a344:	f3af 8000 	nop.w
9002a348:	54442d18 	.word	0x54442d18
9002a34c:	3c1921fb 	.word	0x3c1921fb
9002a350:	9002ee20 	.word	0x9002ee20
9002a354:	9002edc0 	.word	0x9002edc0

9002a358 <sinf_poly>:
9002a358:	07cb      	lsls	r3, r1, #31
9002a35a:	d412      	bmi.n	9002a382 <sinf_poly+0x2a>
9002a35c:	ee21 5b00 	vmul.f64	d5, d1, d0
9002a360:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002a364:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002a368:	eea6 7b01 	vfma.f64	d7, d6, d1
9002a36c:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002a370:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a374:	eea6 0b05 	vfma.f64	d0, d6, d5
9002a378:	eea7 0b01 	vfma.f64	d0, d7, d1
9002a37c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a380:	4770      	bx	lr
9002a382:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002a386:	ee21 5b01 	vmul.f64	d5, d1, d1
9002a38a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002a38e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002a392:	eea1 7b06 	vfma.f64	d7, d1, d6
9002a396:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002a39a:	eea1 0b06 	vfma.f64	d0, d1, d6
9002a39e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002a3a2:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a3a6:	eea5 0b06 	vfma.f64	d0, d5, d6
9002a3aa:	e7e5      	b.n	9002a378 <sinf_poly+0x20>
9002a3ac:	0000      	movs	r0, r0
	...

9002a3b0 <cosf>:
9002a3b0:	b538      	push	{r3, r4, r5, lr}
9002a3b2:	ee10 4a10 	vmov	r4, s0
9002a3b6:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002a3ba:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002a3be:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002a3c2:	d21f      	bcs.n	9002a404 <cosf+0x54>
9002a3c4:	ee27 7b07 	vmul.f64	d7, d7, d7
9002a3c8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002a3cc:	f0c0 8082 	bcc.w	9002a4d4 <cosf+0x124>
9002a3d0:	ee27 4b07 	vmul.f64	d4, d7, d7
9002a3d4:	4b44      	ldr	r3, [pc, #272]	@ (9002a4e8 <cosf+0x138>)
9002a3d6:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002a3da:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002a3de:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002a3e2:	eea7 6b05 	vfma.f64	d6, d7, d5
9002a3e6:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002a3ea:	eea7 0b05 	vfma.f64	d0, d7, d5
9002a3ee:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002a3f2:	ee27 7b04 	vmul.f64	d7, d7, d4
9002a3f6:	eea4 0b05 	vfma.f64	d0, d4, d5
9002a3fa:	eea6 0b07 	vfma.f64	d0, d6, d7
9002a3fe:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a402:	bd38      	pop	{r3, r4, r5, pc}
9002a404:	f240 422e 	movw	r2, #1070	@ 0x42e
9002a408:	4293      	cmp	r3, r2
9002a40a:	d829      	bhi.n	9002a460 <cosf+0xb0>
9002a40c:	4b36      	ldr	r3, [pc, #216]	@ (9002a4e8 <cosf+0x138>)
9002a40e:	ed93 6b08 	vldr	d6, [r3, #32]
9002a412:	ee27 6b06 	vmul.f64	d6, d7, d6
9002a416:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002a41a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a41e:	ee16 1a90 	vmov	r1, s13
9002a422:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002a426:	1609      	asrs	r1, r1, #24
9002a428:	ee06 1a90 	vmov	s13, r1
9002a42c:	f001 0203 	and.w	r2, r1, #3
9002a430:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a434:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002a438:	ed92 0b00 	vldr	d0, [r2]
9002a43c:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002a440:	f011 0f02 	tst.w	r1, #2
9002a444:	f081 0101 	eor.w	r1, r1, #1
9002a448:	eea5 7b46 	vfms.f64	d7, d5, d6
9002a44c:	bf08      	it	eq
9002a44e:	4618      	moveq	r0, r3
9002a450:	ee27 1b07 	vmul.f64	d1, d7, d7
9002a454:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a458:	ee20 0b07 	vmul.f64	d0, d0, d7
9002a45c:	f7ff bf7c 	b.w	9002a358 <sinf_poly>
9002a460:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002a464:	d232      	bcs.n	9002a4cc <cosf+0x11c>
9002a466:	4921      	ldr	r1, [pc, #132]	@ (9002a4ec <cosf+0x13c>)
9002a468:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002a46c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002a470:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002a474:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002a478:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002a47c:	6a10      	ldr	r0, [r2, #32]
9002a47e:	6912      	ldr	r2, [r2, #16]
9002a480:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002a484:	40ab      	lsls	r3, r5
9002a486:	fba0 5003 	umull	r5, r0, r0, r3
9002a48a:	4359      	muls	r1, r3
9002a48c:	fbe3 0102 	umlal	r0, r1, r3, r2
9002a490:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002a494:	0f9d      	lsrs	r5, r3, #30
9002a496:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002a49a:	1ac9      	subs	r1, r1, r3
9002a49c:	f7d6 f8fe 	bl	9000069c <__aeabi_l2d>
9002a4a0:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002a4a4:	4b10      	ldr	r3, [pc, #64]	@ (9002a4e8 <cosf+0x138>)
9002a4a6:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002a4e0 <cosf+0x130>
9002a4aa:	ec41 0b17 	vmov	d7, r0, r1
9002a4ae:	f004 0203 	and.w	r2, r4, #3
9002a4b2:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a4b6:	ed92 0b00 	vldr	d0, [r2]
9002a4ba:	ee27 7b06 	vmul.f64	d7, d7, d6
9002a4be:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a4c2:	f014 0f02 	tst.w	r4, #2
9002a4c6:	f085 0101 	eor.w	r1, r5, #1
9002a4ca:	e7bf      	b.n	9002a44c <cosf+0x9c>
9002a4cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a4d0:	f000 b81c 	b.w	9002a50c <__math_invalidf>
9002a4d4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002a4d8:	e793      	b.n	9002a402 <cosf+0x52>
9002a4da:	bf00      	nop
9002a4dc:	f3af 8000 	nop.w
9002a4e0:	54442d18 	.word	0x54442d18
9002a4e4:	3c1921fb 	.word	0x3c1921fb
9002a4e8:	9002ee20 	.word	0x9002ee20
9002a4ec:	9002edc0 	.word	0x9002edc0

9002a4f0 <with_errnof>:
9002a4f0:	b510      	push	{r4, lr}
9002a4f2:	ed2d 8b02 	vpush	{d8}
9002a4f6:	eeb0 8a40 	vmov.f32	s16, s0
9002a4fa:	4604      	mov	r4, r0
9002a4fc:	f000 fd02 	bl	9002af04 <__errno>
9002a500:	eeb0 0a48 	vmov.f32	s0, s16
9002a504:	ecbd 8b02 	vpop	{d8}
9002a508:	6004      	str	r4, [r0, #0]
9002a50a:	bd10      	pop	{r4, pc}

9002a50c <__math_invalidf>:
9002a50c:	eef0 7a40 	vmov.f32	s15, s0
9002a510:	ee30 7a40 	vsub.f32	s14, s0, s0
9002a514:	eef4 7a67 	vcmp.f32	s15, s15
9002a518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a51c:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002a520:	d602      	bvs.n	9002a528 <__math_invalidf+0x1c>
9002a522:	2021      	movs	r0, #33	@ 0x21
9002a524:	f7ff bfe4 	b.w	9002a4f0 <with_errnof>
9002a528:	4770      	bx	lr

9002a52a <__ieee754_sqrtf>:
9002a52a:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002a52e:	4770      	bx	lr

9002a530 <__ieee754_atan2f>:
9002a530:	ee10 2a90 	vmov	r2, s1
9002a534:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002a538:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a53c:	b510      	push	{r4, lr}
9002a53e:	eef0 7a40 	vmov.f32	s15, s0
9002a542:	d806      	bhi.n	9002a552 <__ieee754_atan2f+0x22>
9002a544:	ee10 0a10 	vmov	r0, s0
9002a548:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002a54c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a550:	d904      	bls.n	9002a55c <__ieee754_atan2f+0x2c>
9002a552:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002a556:	eeb0 0a67 	vmov.f32	s0, s15
9002a55a:	bd10      	pop	{r4, pc}
9002a55c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002a560:	d103      	bne.n	9002a56a <__ieee754_atan2f+0x3a>
9002a562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a566:	f000 b881 	b.w	9002a66c <atanf>
9002a56a:	1794      	asrs	r4, r2, #30
9002a56c:	f004 0402 	and.w	r4, r4, #2
9002a570:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002a574:	b93b      	cbnz	r3, 9002a586 <__ieee754_atan2f+0x56>
9002a576:	2c02      	cmp	r4, #2
9002a578:	d05c      	beq.n	9002a634 <__ieee754_atan2f+0x104>
9002a57a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a648 <__ieee754_atan2f+0x118>
9002a57e:	2c03      	cmp	r4, #3
9002a580:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002a584:	e7e7      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a586:	b939      	cbnz	r1, 9002a598 <__ieee754_atan2f+0x68>
9002a588:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002a64c <__ieee754_atan2f+0x11c>
9002a58c:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a650 <__ieee754_atan2f+0x120>
9002a590:	2800      	cmp	r0, #0
9002a592:	fe67 7a27 	vselge.f32	s15, s14, s15
9002a596:	e7de      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a598:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a59c:	d110      	bne.n	9002a5c0 <__ieee754_atan2f+0x90>
9002a59e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a5a2:	f104 34ff 	add.w	r4, r4, #4294967295
9002a5a6:	d107      	bne.n	9002a5b8 <__ieee754_atan2f+0x88>
9002a5a8:	2c02      	cmp	r4, #2
9002a5aa:	d846      	bhi.n	9002a63a <__ieee754_atan2f+0x10a>
9002a5ac:	4b29      	ldr	r3, [pc, #164]	@ (9002a654 <__ieee754_atan2f+0x124>)
9002a5ae:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002a5b2:	edd3 7a00 	vldr	s15, [r3]
9002a5b6:	e7ce      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a5b8:	2c02      	cmp	r4, #2
9002a5ba:	d841      	bhi.n	9002a640 <__ieee754_atan2f+0x110>
9002a5bc:	4b26      	ldr	r3, [pc, #152]	@ (9002a658 <__ieee754_atan2f+0x128>)
9002a5be:	e7f6      	b.n	9002a5ae <__ieee754_atan2f+0x7e>
9002a5c0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a5c4:	d0e0      	beq.n	9002a588 <__ieee754_atan2f+0x58>
9002a5c6:	1a5b      	subs	r3, r3, r1
9002a5c8:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002a5cc:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002a5d0:	da1a      	bge.n	9002a608 <__ieee754_atan2f+0xd8>
9002a5d2:	2a00      	cmp	r2, #0
9002a5d4:	da01      	bge.n	9002a5da <__ieee754_atan2f+0xaa>
9002a5d6:	313c      	adds	r1, #60	@ 0x3c
9002a5d8:	db19      	blt.n	9002a60e <__ieee754_atan2f+0xde>
9002a5da:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002a5de:	f000 f919 	bl	9002a814 <fabsf>
9002a5e2:	f000 f843 	bl	9002a66c <atanf>
9002a5e6:	eef0 7a40 	vmov.f32	s15, s0
9002a5ea:	2c01      	cmp	r4, #1
9002a5ec:	d012      	beq.n	9002a614 <__ieee754_atan2f+0xe4>
9002a5ee:	2c02      	cmp	r4, #2
9002a5f0:	d017      	beq.n	9002a622 <__ieee754_atan2f+0xf2>
9002a5f2:	2c00      	cmp	r4, #0
9002a5f4:	d0af      	beq.n	9002a556 <__ieee754_atan2f+0x26>
9002a5f6:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002a65c <__ieee754_atan2f+0x12c>
9002a5fa:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a5fe:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002a660 <__ieee754_atan2f+0x130>
9002a602:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a606:	e7a6      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a608:	eddf 7a11 	vldr	s15, [pc, #68]	@ 9002a650 <__ieee754_atan2f+0x120>
9002a60c:	e7ed      	b.n	9002a5ea <__ieee754_atan2f+0xba>
9002a60e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002a664 <__ieee754_atan2f+0x134>
9002a612:	e7ea      	b.n	9002a5ea <__ieee754_atan2f+0xba>
9002a614:	ee17 3a90 	vmov	r3, s15
9002a618:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002a61c:	ee07 3a90 	vmov	s15, r3
9002a620:	e799      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a622:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002a65c <__ieee754_atan2f+0x12c>
9002a626:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a62a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002a660 <__ieee754_atan2f+0x130>
9002a62e:	ee77 7a67 	vsub.f32	s15, s14, s15
9002a632:	e790      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a634:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002a660 <__ieee754_atan2f+0x130>
9002a638:	e78d      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a63a:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002a668 <__ieee754_atan2f+0x138>
9002a63e:	e78a      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a640:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002a664 <__ieee754_atan2f+0x134>
9002a644:	e787      	b.n	9002a556 <__ieee754_atan2f+0x26>
9002a646:	bf00      	nop
9002a648:	c0490fdb 	.word	0xc0490fdb
9002a64c:	bfc90fdb 	.word	0xbfc90fdb
9002a650:	3fc90fdb 	.word	0x3fc90fdb
9002a654:	9002ef0c 	.word	0x9002ef0c
9002a658:	9002ef00 	.word	0x9002ef00
9002a65c:	33bbbd2e 	.word	0x33bbbd2e
9002a660:	40490fdb 	.word	0x40490fdb
9002a664:	00000000 	.word	0x00000000
9002a668:	3f490fdb 	.word	0x3f490fdb

9002a66c <atanf>:
9002a66c:	b538      	push	{r3, r4, r5, lr}
9002a66e:	ee10 5a10 	vmov	r5, s0
9002a672:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002a676:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002a67a:	eef0 7a40 	vmov.f32	s15, s0
9002a67e:	d30f      	bcc.n	9002a6a0 <atanf+0x34>
9002a680:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002a684:	d904      	bls.n	9002a690 <atanf+0x24>
9002a686:	ee70 7a00 	vadd.f32	s15, s0, s0
9002a68a:	eeb0 0a67 	vmov.f32	s0, s15
9002a68e:	bd38      	pop	{r3, r4, r5, pc}
9002a690:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002a7c8 <atanf+0x15c>
9002a694:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002a7cc <atanf+0x160>
9002a698:	2d00      	cmp	r5, #0
9002a69a:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002a69e:	e7f4      	b.n	9002a68a <atanf+0x1e>
9002a6a0:	4b4b      	ldr	r3, [pc, #300]	@ (9002a7d0 <atanf+0x164>)
9002a6a2:	429c      	cmp	r4, r3
9002a6a4:	d810      	bhi.n	9002a6c8 <atanf+0x5c>
9002a6a6:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002a6aa:	d20a      	bcs.n	9002a6c2 <atanf+0x56>
9002a6ac:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002a7d4 <atanf+0x168>
9002a6b0:	ee30 7a07 	vadd.f32	s14, s0, s14
9002a6b4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002a6b8:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002a6bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a6c0:	dce3      	bgt.n	9002a68a <atanf+0x1e>
9002a6c2:	f04f 33ff 	mov.w	r3, #4294967295
9002a6c6:	e013      	b.n	9002a6f0 <atanf+0x84>
9002a6c8:	f000 f8a4 	bl	9002a814 <fabsf>
9002a6cc:	4b42      	ldr	r3, [pc, #264]	@ (9002a7d8 <atanf+0x16c>)
9002a6ce:	429c      	cmp	r4, r3
9002a6d0:	d84f      	bhi.n	9002a772 <atanf+0x106>
9002a6d2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002a6d6:	429c      	cmp	r4, r3
9002a6d8:	d841      	bhi.n	9002a75e <atanf+0xf2>
9002a6da:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002a6de:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a6e2:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a6e6:	2300      	movs	r3, #0
9002a6e8:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a6ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a6f0:	1c5a      	adds	r2, r3, #1
9002a6f2:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002a6f6:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002a7dc <atanf+0x170>
9002a6fa:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002a7e0 <atanf+0x174>
9002a6fe:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002a7e4 <atanf+0x178>
9002a702:	ee66 6a06 	vmul.f32	s13, s12, s12
9002a706:	eee6 5a87 	vfma.f32	s11, s13, s14
9002a70a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002a7e8 <atanf+0x17c>
9002a70e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a712:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002a7ec <atanf+0x180>
9002a716:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a71a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002a7f0 <atanf+0x184>
9002a71e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a722:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002a7f4 <atanf+0x188>
9002a726:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a72a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a7f8 <atanf+0x18c>
9002a72e:	eea6 5a87 	vfma.f32	s10, s13, s14
9002a732:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002a7fc <atanf+0x190>
9002a736:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a73a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002a800 <atanf+0x194>
9002a73e:	eea7 5a26 	vfma.f32	s10, s14, s13
9002a742:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a804 <atanf+0x198>
9002a746:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a74a:	ee27 7a26 	vmul.f32	s14, s14, s13
9002a74e:	eea5 7a86 	vfma.f32	s14, s11, s12
9002a752:	ee27 7a87 	vmul.f32	s14, s15, s14
9002a756:	d121      	bne.n	9002a79c <atanf+0x130>
9002a758:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a75c:	e795      	b.n	9002a68a <atanf+0x1e>
9002a75e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002a762:	ee30 7a67 	vsub.f32	s14, s0, s15
9002a766:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a76a:	2301      	movs	r3, #1
9002a76c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a770:	e7be      	b.n	9002a6f0 <atanf+0x84>
9002a772:	4b25      	ldr	r3, [pc, #148]	@ (9002a808 <atanf+0x19c>)
9002a774:	429c      	cmp	r4, r3
9002a776:	d80b      	bhi.n	9002a790 <atanf+0x124>
9002a778:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002a77c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a780:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a784:	2302      	movs	r3, #2
9002a786:	ee70 6a67 	vsub.f32	s13, s0, s15
9002a78a:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002a78e:	e7af      	b.n	9002a6f0 <atanf+0x84>
9002a790:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a794:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a798:	2303      	movs	r3, #3
9002a79a:	e7a9      	b.n	9002a6f0 <atanf+0x84>
9002a79c:	4a1b      	ldr	r2, [pc, #108]	@ (9002a80c <atanf+0x1a0>)
9002a79e:	491c      	ldr	r1, [pc, #112]	@ (9002a810 <atanf+0x1a4>)
9002a7a0:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002a7a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002a7a8:	edd3 6a00 	vldr	s13, [r3]
9002a7ac:	ee37 7a66 	vsub.f32	s14, s14, s13
9002a7b0:	2d00      	cmp	r5, #0
9002a7b2:	ee37 7a67 	vsub.f32	s14, s14, s15
9002a7b6:	edd2 7a00 	vldr	s15, [r2]
9002a7ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a7be:	bfb8      	it	lt
9002a7c0:	eef1 7a67 	vneglt.f32	s15, s15
9002a7c4:	e761      	b.n	9002a68a <atanf+0x1e>
9002a7c6:	bf00      	nop
9002a7c8:	bfc90fdb 	.word	0xbfc90fdb
9002a7cc:	3fc90fdb 	.word	0x3fc90fdb
9002a7d0:	3edfffff 	.word	0x3edfffff
9002a7d4:	7149f2ca 	.word	0x7149f2ca
9002a7d8:	3f97ffff 	.word	0x3f97ffff
9002a7dc:	3c8569d7 	.word	0x3c8569d7
9002a7e0:	3d4bda59 	.word	0x3d4bda59
9002a7e4:	bd6ef16b 	.word	0xbd6ef16b
9002a7e8:	3d886b35 	.word	0x3d886b35
9002a7ec:	3dba2e6e 	.word	0x3dba2e6e
9002a7f0:	3e124925 	.word	0x3e124925
9002a7f4:	3eaaaaab 	.word	0x3eaaaaab
9002a7f8:	bd15a221 	.word	0xbd15a221
9002a7fc:	bd9d8795 	.word	0xbd9d8795
9002a800:	bde38e38 	.word	0xbde38e38
9002a804:	be4ccccd 	.word	0xbe4ccccd
9002a808:	401bffff 	.word	0x401bffff
9002a80c:	9002ef28 	.word	0x9002ef28
9002a810:	9002ef18 	.word	0x9002ef18

9002a814 <fabsf>:
9002a814:	ee10 3a10 	vmov	r3, s0
9002a818:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002a81c:	ee00 3a10 	vmov	s0, r3
9002a820:	4770      	bx	lr

9002a822 <abort>:
9002a822:	b508      	push	{r3, lr}
9002a824:	2006      	movs	r0, #6
9002a826:	f000 fafb 	bl	9002ae20 <raise>
9002a82a:	2001      	movs	r0, #1
9002a82c:	f7da fd6a 	bl	90005304 <_exit>

9002a830 <__assert_func>:
9002a830:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002a832:	4614      	mov	r4, r2
9002a834:	461a      	mov	r2, r3
9002a836:	4b09      	ldr	r3, [pc, #36]	@ (9002a85c <__assert_func+0x2c>)
9002a838:	681b      	ldr	r3, [r3, #0]
9002a83a:	4605      	mov	r5, r0
9002a83c:	68d8      	ldr	r0, [r3, #12]
9002a83e:	b14c      	cbz	r4, 9002a854 <__assert_func+0x24>
9002a840:	4b07      	ldr	r3, [pc, #28]	@ (9002a860 <__assert_func+0x30>)
9002a842:	9100      	str	r1, [sp, #0]
9002a844:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002a848:	4906      	ldr	r1, [pc, #24]	@ (9002a864 <__assert_func+0x34>)
9002a84a:	462b      	mov	r3, r5
9002a84c:	f000 f984 	bl	9002ab58 <fiprintf>
9002a850:	f7ff ffe7 	bl	9002a822 <abort>
9002a854:	4b04      	ldr	r3, [pc, #16]	@ (9002a868 <__assert_func+0x38>)
9002a856:	461c      	mov	r4, r3
9002a858:	e7f3      	b.n	9002a842 <__assert_func+0x12>
9002a85a:	bf00      	nop
9002a85c:	24000114 	.word	0x24000114
9002a860:	9002ef38 	.word	0x9002ef38
9002a864:	9002ef45 	.word	0x9002ef45
9002a868:	9002ef73 	.word	0x9002ef73

9002a86c <atexit>:
9002a86c:	2300      	movs	r3, #0
9002a86e:	4601      	mov	r1, r0
9002a870:	461a      	mov	r2, r3
9002a872:	4618      	mov	r0, r3
9002a874:	f000 bb82 	b.w	9002af7c <__register_exitproc>

9002a878 <malloc>:
9002a878:	4b02      	ldr	r3, [pc, #8]	@ (9002a884 <malloc+0xc>)
9002a87a:	4601      	mov	r1, r0
9002a87c:	6818      	ldr	r0, [r3, #0]
9002a87e:	f000 b82d 	b.w	9002a8dc <_malloc_r>
9002a882:	bf00      	nop
9002a884:	24000114 	.word	0x24000114

9002a888 <free>:
9002a888:	4b02      	ldr	r3, [pc, #8]	@ (9002a894 <free+0xc>)
9002a88a:	4601      	mov	r1, r0
9002a88c:	6818      	ldr	r0, [r3, #0]
9002a88e:	f000 bbd1 	b.w	9002b034 <_free_r>
9002a892:	bf00      	nop
9002a894:	24000114 	.word	0x24000114

9002a898 <sbrk_aligned>:
9002a898:	b570      	push	{r4, r5, r6, lr}
9002a89a:	4e0f      	ldr	r6, [pc, #60]	@ (9002a8d8 <sbrk_aligned+0x40>)
9002a89c:	460c      	mov	r4, r1
9002a89e:	6831      	ldr	r1, [r6, #0]
9002a8a0:	4605      	mov	r5, r0
9002a8a2:	b911      	cbnz	r1, 9002a8aa <sbrk_aligned+0x12>
9002a8a4:	f000 fb0c 	bl	9002aec0 <_sbrk_r>
9002a8a8:	6030      	str	r0, [r6, #0]
9002a8aa:	4621      	mov	r1, r4
9002a8ac:	4628      	mov	r0, r5
9002a8ae:	f000 fb07 	bl	9002aec0 <_sbrk_r>
9002a8b2:	1c43      	adds	r3, r0, #1
9002a8b4:	d103      	bne.n	9002a8be <sbrk_aligned+0x26>
9002a8b6:	f04f 34ff 	mov.w	r4, #4294967295
9002a8ba:	4620      	mov	r0, r4
9002a8bc:	bd70      	pop	{r4, r5, r6, pc}
9002a8be:	1cc4      	adds	r4, r0, #3
9002a8c0:	f024 0403 	bic.w	r4, r4, #3
9002a8c4:	42a0      	cmp	r0, r4
9002a8c6:	d0f8      	beq.n	9002a8ba <sbrk_aligned+0x22>
9002a8c8:	1a21      	subs	r1, r4, r0
9002a8ca:	4628      	mov	r0, r5
9002a8cc:	f000 faf8 	bl	9002aec0 <_sbrk_r>
9002a8d0:	3001      	adds	r0, #1
9002a8d2:	d1f2      	bne.n	9002a8ba <sbrk_aligned+0x22>
9002a8d4:	e7ef      	b.n	9002a8b6 <sbrk_aligned+0x1e>
9002a8d6:	bf00      	nop
9002a8d8:	240227c0 	.word	0x240227c0

9002a8dc <_malloc_r>:
9002a8dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a8e0:	1ccd      	adds	r5, r1, #3
9002a8e2:	f025 0503 	bic.w	r5, r5, #3
9002a8e6:	3508      	adds	r5, #8
9002a8e8:	2d0c      	cmp	r5, #12
9002a8ea:	bf38      	it	cc
9002a8ec:	250c      	movcc	r5, #12
9002a8ee:	2d00      	cmp	r5, #0
9002a8f0:	4606      	mov	r6, r0
9002a8f2:	db01      	blt.n	9002a8f8 <_malloc_r+0x1c>
9002a8f4:	42a9      	cmp	r1, r5
9002a8f6:	d904      	bls.n	9002a902 <_malloc_r+0x26>
9002a8f8:	230c      	movs	r3, #12
9002a8fa:	6033      	str	r3, [r6, #0]
9002a8fc:	2000      	movs	r0, #0
9002a8fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a902:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002a9d8 <_malloc_r+0xfc>
9002a906:	f000 f869 	bl	9002a9dc <__malloc_lock>
9002a90a:	f8d8 3000 	ldr.w	r3, [r8]
9002a90e:	461c      	mov	r4, r3
9002a910:	bb44      	cbnz	r4, 9002a964 <_malloc_r+0x88>
9002a912:	4629      	mov	r1, r5
9002a914:	4630      	mov	r0, r6
9002a916:	f7ff ffbf 	bl	9002a898 <sbrk_aligned>
9002a91a:	1c43      	adds	r3, r0, #1
9002a91c:	4604      	mov	r4, r0
9002a91e:	d158      	bne.n	9002a9d2 <_malloc_r+0xf6>
9002a920:	f8d8 4000 	ldr.w	r4, [r8]
9002a924:	4627      	mov	r7, r4
9002a926:	2f00      	cmp	r7, #0
9002a928:	d143      	bne.n	9002a9b2 <_malloc_r+0xd6>
9002a92a:	2c00      	cmp	r4, #0
9002a92c:	d04b      	beq.n	9002a9c6 <_malloc_r+0xea>
9002a92e:	6823      	ldr	r3, [r4, #0]
9002a930:	4639      	mov	r1, r7
9002a932:	4630      	mov	r0, r6
9002a934:	eb04 0903 	add.w	r9, r4, r3
9002a938:	f000 fac2 	bl	9002aec0 <_sbrk_r>
9002a93c:	4581      	cmp	r9, r0
9002a93e:	d142      	bne.n	9002a9c6 <_malloc_r+0xea>
9002a940:	6821      	ldr	r1, [r4, #0]
9002a942:	1a6d      	subs	r5, r5, r1
9002a944:	4629      	mov	r1, r5
9002a946:	4630      	mov	r0, r6
9002a948:	f7ff ffa6 	bl	9002a898 <sbrk_aligned>
9002a94c:	3001      	adds	r0, #1
9002a94e:	d03a      	beq.n	9002a9c6 <_malloc_r+0xea>
9002a950:	6823      	ldr	r3, [r4, #0]
9002a952:	442b      	add	r3, r5
9002a954:	6023      	str	r3, [r4, #0]
9002a956:	f8d8 3000 	ldr.w	r3, [r8]
9002a95a:	685a      	ldr	r2, [r3, #4]
9002a95c:	bb62      	cbnz	r2, 9002a9b8 <_malloc_r+0xdc>
9002a95e:	f8c8 7000 	str.w	r7, [r8]
9002a962:	e00f      	b.n	9002a984 <_malloc_r+0xa8>
9002a964:	6822      	ldr	r2, [r4, #0]
9002a966:	1b52      	subs	r2, r2, r5
9002a968:	d420      	bmi.n	9002a9ac <_malloc_r+0xd0>
9002a96a:	2a0b      	cmp	r2, #11
9002a96c:	d917      	bls.n	9002a99e <_malloc_r+0xc2>
9002a96e:	1961      	adds	r1, r4, r5
9002a970:	42a3      	cmp	r3, r4
9002a972:	6025      	str	r5, [r4, #0]
9002a974:	bf18      	it	ne
9002a976:	6059      	strne	r1, [r3, #4]
9002a978:	6863      	ldr	r3, [r4, #4]
9002a97a:	bf08      	it	eq
9002a97c:	f8c8 1000 	streq.w	r1, [r8]
9002a980:	5162      	str	r2, [r4, r5]
9002a982:	604b      	str	r3, [r1, #4]
9002a984:	4630      	mov	r0, r6
9002a986:	f000 f82f 	bl	9002a9e8 <__malloc_unlock>
9002a98a:	f104 000b 	add.w	r0, r4, #11
9002a98e:	1d23      	adds	r3, r4, #4
9002a990:	f020 0007 	bic.w	r0, r0, #7
9002a994:	1ac2      	subs	r2, r0, r3
9002a996:	bf1c      	itt	ne
9002a998:	1a1b      	subne	r3, r3, r0
9002a99a:	50a3      	strne	r3, [r4, r2]
9002a99c:	e7af      	b.n	9002a8fe <_malloc_r+0x22>
9002a99e:	6862      	ldr	r2, [r4, #4]
9002a9a0:	42a3      	cmp	r3, r4
9002a9a2:	bf0c      	ite	eq
9002a9a4:	f8c8 2000 	streq.w	r2, [r8]
9002a9a8:	605a      	strne	r2, [r3, #4]
9002a9aa:	e7eb      	b.n	9002a984 <_malloc_r+0xa8>
9002a9ac:	4623      	mov	r3, r4
9002a9ae:	6864      	ldr	r4, [r4, #4]
9002a9b0:	e7ae      	b.n	9002a910 <_malloc_r+0x34>
9002a9b2:	463c      	mov	r4, r7
9002a9b4:	687f      	ldr	r7, [r7, #4]
9002a9b6:	e7b6      	b.n	9002a926 <_malloc_r+0x4a>
9002a9b8:	461a      	mov	r2, r3
9002a9ba:	685b      	ldr	r3, [r3, #4]
9002a9bc:	42a3      	cmp	r3, r4
9002a9be:	d1fb      	bne.n	9002a9b8 <_malloc_r+0xdc>
9002a9c0:	2300      	movs	r3, #0
9002a9c2:	6053      	str	r3, [r2, #4]
9002a9c4:	e7de      	b.n	9002a984 <_malloc_r+0xa8>
9002a9c6:	230c      	movs	r3, #12
9002a9c8:	6033      	str	r3, [r6, #0]
9002a9ca:	4630      	mov	r0, r6
9002a9cc:	f000 f80c 	bl	9002a9e8 <__malloc_unlock>
9002a9d0:	e794      	b.n	9002a8fc <_malloc_r+0x20>
9002a9d2:	6005      	str	r5, [r0, #0]
9002a9d4:	e7d6      	b.n	9002a984 <_malloc_r+0xa8>
9002a9d6:	bf00      	nop
9002a9d8:	240227c4 	.word	0x240227c4

9002a9dc <__malloc_lock>:
9002a9dc:	4801      	ldr	r0, [pc, #4]	@ (9002a9e4 <__malloc_lock+0x8>)
9002a9de:	f000 babc 	b.w	9002af5a <__retarget_lock_acquire_recursive>
9002a9e2:	bf00      	nop
9002a9e4:	24022908 	.word	0x24022908

9002a9e8 <__malloc_unlock>:
9002a9e8:	4801      	ldr	r0, [pc, #4]	@ (9002a9f0 <__malloc_unlock+0x8>)
9002a9ea:	f000 bab7 	b.w	9002af5c <__retarget_lock_release_recursive>
9002a9ee:	bf00      	nop
9002a9f0:	24022908 	.word	0x24022908

9002a9f4 <__cxa_atexit>:
9002a9f4:	b510      	push	{r4, lr}
9002a9f6:	4604      	mov	r4, r0
9002a9f8:	4804      	ldr	r0, [pc, #16]	@ (9002aa0c <__cxa_atexit+0x18>)
9002a9fa:	4613      	mov	r3, r2
9002a9fc:	b120      	cbz	r0, 9002aa08 <__cxa_atexit+0x14>
9002a9fe:	460a      	mov	r2, r1
9002aa00:	2002      	movs	r0, #2
9002aa02:	4621      	mov	r1, r4
9002aa04:	f000 faba 	bl	9002af7c <__register_exitproc>
9002aa08:	bd10      	pop	{r4, pc}
9002aa0a:	bf00      	nop
9002aa0c:	9002af7d 	.word	0x9002af7d

9002aa10 <std>:
9002aa10:	2300      	movs	r3, #0
9002aa12:	b510      	push	{r4, lr}
9002aa14:	4604      	mov	r4, r0
9002aa16:	e9c0 3300 	strd	r3, r3, [r0]
9002aa1a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002aa1e:	6083      	str	r3, [r0, #8]
9002aa20:	8181      	strh	r1, [r0, #12]
9002aa22:	6643      	str	r3, [r0, #100]	@ 0x64
9002aa24:	81c2      	strh	r2, [r0, #14]
9002aa26:	6183      	str	r3, [r0, #24]
9002aa28:	4619      	mov	r1, r3
9002aa2a:	2208      	movs	r2, #8
9002aa2c:	305c      	adds	r0, #92	@ 0x5c
9002aa2e:	f000 f9b5 	bl	9002ad9c <memset>
9002aa32:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa68 <std+0x58>)
9002aa34:	6263      	str	r3, [r4, #36]	@ 0x24
9002aa36:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa6c <std+0x5c>)
9002aa38:	62a3      	str	r3, [r4, #40]	@ 0x28
9002aa3a:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa70 <std+0x60>)
9002aa3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002aa3e:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa74 <std+0x64>)
9002aa40:	6323      	str	r3, [r4, #48]	@ 0x30
9002aa42:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa78 <std+0x68>)
9002aa44:	6224      	str	r4, [r4, #32]
9002aa46:	429c      	cmp	r4, r3
9002aa48:	d006      	beq.n	9002aa58 <std+0x48>
9002aa4a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002aa4e:	4294      	cmp	r4, r2
9002aa50:	d002      	beq.n	9002aa58 <std+0x48>
9002aa52:	33d0      	adds	r3, #208	@ 0xd0
9002aa54:	429c      	cmp	r4, r3
9002aa56:	d105      	bne.n	9002aa64 <std+0x54>
9002aa58:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002aa5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aa60:	f000 ba7a 	b.w	9002af58 <__retarget_lock_init_recursive>
9002aa64:	bd10      	pop	{r4, pc}
9002aa66:	bf00      	nop
9002aa68:	9002abb9 	.word	0x9002abb9
9002aa6c:	9002abdb 	.word	0x9002abdb
9002aa70:	9002ac13 	.word	0x9002ac13
9002aa74:	9002ac37 	.word	0x9002ac37
9002aa78:	240227c8 	.word	0x240227c8

9002aa7c <stdio_exit_handler>:
9002aa7c:	4a02      	ldr	r2, [pc, #8]	@ (9002aa88 <stdio_exit_handler+0xc>)
9002aa7e:	4903      	ldr	r1, [pc, #12]	@ (9002aa8c <stdio_exit_handler+0x10>)
9002aa80:	4803      	ldr	r0, [pc, #12]	@ (9002aa90 <stdio_exit_handler+0x14>)
9002aa82:	f000 b87b 	b.w	9002ab7c <_fwalk_sglue>
9002aa86:	bf00      	nop
9002aa88:	24000108 	.word	0x24000108
9002aa8c:	9002b76d 	.word	0x9002b76d
9002aa90:	24000118 	.word	0x24000118

9002aa94 <cleanup_stdio>:
9002aa94:	6841      	ldr	r1, [r0, #4]
9002aa96:	4b0c      	ldr	r3, [pc, #48]	@ (9002aac8 <cleanup_stdio+0x34>)
9002aa98:	4299      	cmp	r1, r3
9002aa9a:	b510      	push	{r4, lr}
9002aa9c:	4604      	mov	r4, r0
9002aa9e:	d001      	beq.n	9002aaa4 <cleanup_stdio+0x10>
9002aaa0:	f000 fe64 	bl	9002b76c <_fflush_r>
9002aaa4:	68a1      	ldr	r1, [r4, #8]
9002aaa6:	4b09      	ldr	r3, [pc, #36]	@ (9002aacc <cleanup_stdio+0x38>)
9002aaa8:	4299      	cmp	r1, r3
9002aaaa:	d002      	beq.n	9002aab2 <cleanup_stdio+0x1e>
9002aaac:	4620      	mov	r0, r4
9002aaae:	f000 fe5d 	bl	9002b76c <_fflush_r>
9002aab2:	68e1      	ldr	r1, [r4, #12]
9002aab4:	4b06      	ldr	r3, [pc, #24]	@ (9002aad0 <cleanup_stdio+0x3c>)
9002aab6:	4299      	cmp	r1, r3
9002aab8:	d004      	beq.n	9002aac4 <cleanup_stdio+0x30>
9002aaba:	4620      	mov	r0, r4
9002aabc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aac0:	f000 be54 	b.w	9002b76c <_fflush_r>
9002aac4:	bd10      	pop	{r4, pc}
9002aac6:	bf00      	nop
9002aac8:	240227c8 	.word	0x240227c8
9002aacc:	24022830 	.word	0x24022830
9002aad0:	24022898 	.word	0x24022898

9002aad4 <global_stdio_init.part.0>:
9002aad4:	b510      	push	{r4, lr}
9002aad6:	4b0b      	ldr	r3, [pc, #44]	@ (9002ab04 <global_stdio_init.part.0+0x30>)
9002aad8:	4c0b      	ldr	r4, [pc, #44]	@ (9002ab08 <global_stdio_init.part.0+0x34>)
9002aada:	4a0c      	ldr	r2, [pc, #48]	@ (9002ab0c <global_stdio_init.part.0+0x38>)
9002aadc:	601a      	str	r2, [r3, #0]
9002aade:	4620      	mov	r0, r4
9002aae0:	2200      	movs	r2, #0
9002aae2:	2104      	movs	r1, #4
9002aae4:	f7ff ff94 	bl	9002aa10 <std>
9002aae8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002aaec:	2201      	movs	r2, #1
9002aaee:	2109      	movs	r1, #9
9002aaf0:	f7ff ff8e 	bl	9002aa10 <std>
9002aaf4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002aaf8:	2202      	movs	r2, #2
9002aafa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aafe:	2112      	movs	r1, #18
9002ab00:	f7ff bf86 	b.w	9002aa10 <std>
9002ab04:	24022900 	.word	0x24022900
9002ab08:	240227c8 	.word	0x240227c8
9002ab0c:	9002aa7d 	.word	0x9002aa7d

9002ab10 <__sfp_lock_acquire>:
9002ab10:	4801      	ldr	r0, [pc, #4]	@ (9002ab18 <__sfp_lock_acquire+0x8>)
9002ab12:	f000 ba22 	b.w	9002af5a <__retarget_lock_acquire_recursive>
9002ab16:	bf00      	nop
9002ab18:	2402290a 	.word	0x2402290a

9002ab1c <__sfp_lock_release>:
9002ab1c:	4801      	ldr	r0, [pc, #4]	@ (9002ab24 <__sfp_lock_release+0x8>)
9002ab1e:	f000 ba1d 	b.w	9002af5c <__retarget_lock_release_recursive>
9002ab22:	bf00      	nop
9002ab24:	2402290a 	.word	0x2402290a

9002ab28 <__sinit>:
9002ab28:	b510      	push	{r4, lr}
9002ab2a:	4604      	mov	r4, r0
9002ab2c:	f7ff fff0 	bl	9002ab10 <__sfp_lock_acquire>
9002ab30:	6a23      	ldr	r3, [r4, #32]
9002ab32:	b11b      	cbz	r3, 9002ab3c <__sinit+0x14>
9002ab34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002ab38:	f7ff bff0 	b.w	9002ab1c <__sfp_lock_release>
9002ab3c:	4b04      	ldr	r3, [pc, #16]	@ (9002ab50 <__sinit+0x28>)
9002ab3e:	6223      	str	r3, [r4, #32]
9002ab40:	4b04      	ldr	r3, [pc, #16]	@ (9002ab54 <__sinit+0x2c>)
9002ab42:	681b      	ldr	r3, [r3, #0]
9002ab44:	2b00      	cmp	r3, #0
9002ab46:	d1f5      	bne.n	9002ab34 <__sinit+0xc>
9002ab48:	f7ff ffc4 	bl	9002aad4 <global_stdio_init.part.0>
9002ab4c:	e7f2      	b.n	9002ab34 <__sinit+0xc>
9002ab4e:	bf00      	nop
9002ab50:	9002aa95 	.word	0x9002aa95
9002ab54:	24022900 	.word	0x24022900

9002ab58 <fiprintf>:
9002ab58:	b40e      	push	{r1, r2, r3}
9002ab5a:	b503      	push	{r0, r1, lr}
9002ab5c:	4601      	mov	r1, r0
9002ab5e:	ab03      	add	r3, sp, #12
9002ab60:	4805      	ldr	r0, [pc, #20]	@ (9002ab78 <fiprintf+0x20>)
9002ab62:	f853 2b04 	ldr.w	r2, [r3], #4
9002ab66:	6800      	ldr	r0, [r0, #0]
9002ab68:	9301      	str	r3, [sp, #4]
9002ab6a:	f000 fad7 	bl	9002b11c <_vfiprintf_r>
9002ab6e:	b002      	add	sp, #8
9002ab70:	f85d eb04 	ldr.w	lr, [sp], #4
9002ab74:	b003      	add	sp, #12
9002ab76:	4770      	bx	lr
9002ab78:	24000114 	.word	0x24000114

9002ab7c <_fwalk_sglue>:
9002ab7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002ab80:	4607      	mov	r7, r0
9002ab82:	4688      	mov	r8, r1
9002ab84:	4614      	mov	r4, r2
9002ab86:	2600      	movs	r6, #0
9002ab88:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002ab8c:	f1b9 0901 	subs.w	r9, r9, #1
9002ab90:	d505      	bpl.n	9002ab9e <_fwalk_sglue+0x22>
9002ab92:	6824      	ldr	r4, [r4, #0]
9002ab94:	2c00      	cmp	r4, #0
9002ab96:	d1f7      	bne.n	9002ab88 <_fwalk_sglue+0xc>
9002ab98:	4630      	mov	r0, r6
9002ab9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002ab9e:	89ab      	ldrh	r3, [r5, #12]
9002aba0:	2b01      	cmp	r3, #1
9002aba2:	d907      	bls.n	9002abb4 <_fwalk_sglue+0x38>
9002aba4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002aba8:	3301      	adds	r3, #1
9002abaa:	d003      	beq.n	9002abb4 <_fwalk_sglue+0x38>
9002abac:	4629      	mov	r1, r5
9002abae:	4638      	mov	r0, r7
9002abb0:	47c0      	blx	r8
9002abb2:	4306      	orrs	r6, r0
9002abb4:	3568      	adds	r5, #104	@ 0x68
9002abb6:	e7e9      	b.n	9002ab8c <_fwalk_sglue+0x10>

9002abb8 <__sread>:
9002abb8:	b510      	push	{r4, lr}
9002abba:	460c      	mov	r4, r1
9002abbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002abc0:	f000 f958 	bl	9002ae74 <_read_r>
9002abc4:	2800      	cmp	r0, #0
9002abc6:	bfab      	itete	ge
9002abc8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002abca:	89a3      	ldrhlt	r3, [r4, #12]
9002abcc:	181b      	addge	r3, r3, r0
9002abce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002abd2:	bfac      	ite	ge
9002abd4:	6563      	strge	r3, [r4, #84]	@ 0x54
9002abd6:	81a3      	strhlt	r3, [r4, #12]
9002abd8:	bd10      	pop	{r4, pc}

9002abda <__swrite>:
9002abda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002abde:	461f      	mov	r7, r3
9002abe0:	898b      	ldrh	r3, [r1, #12]
9002abe2:	05db      	lsls	r3, r3, #23
9002abe4:	4605      	mov	r5, r0
9002abe6:	460c      	mov	r4, r1
9002abe8:	4616      	mov	r6, r2
9002abea:	d505      	bpl.n	9002abf8 <__swrite+0x1e>
9002abec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002abf0:	2302      	movs	r3, #2
9002abf2:	2200      	movs	r2, #0
9002abf4:	f000 f92c 	bl	9002ae50 <_lseek_r>
9002abf8:	89a3      	ldrh	r3, [r4, #12]
9002abfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002abfe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002ac02:	81a3      	strh	r3, [r4, #12]
9002ac04:	4632      	mov	r2, r6
9002ac06:	463b      	mov	r3, r7
9002ac08:	4628      	mov	r0, r5
9002ac0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002ac0e:	f000 b967 	b.w	9002aee0 <_write_r>

9002ac12 <__sseek>:
9002ac12:	b510      	push	{r4, lr}
9002ac14:	460c      	mov	r4, r1
9002ac16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ac1a:	f000 f919 	bl	9002ae50 <_lseek_r>
9002ac1e:	1c43      	adds	r3, r0, #1
9002ac20:	89a3      	ldrh	r3, [r4, #12]
9002ac22:	bf15      	itete	ne
9002ac24:	6560      	strne	r0, [r4, #84]	@ 0x54
9002ac26:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002ac2a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002ac2e:	81a3      	strheq	r3, [r4, #12]
9002ac30:	bf18      	it	ne
9002ac32:	81a3      	strhne	r3, [r4, #12]
9002ac34:	bd10      	pop	{r4, pc}

9002ac36 <__sclose>:
9002ac36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ac3a:	f000 b8f9 	b.w	9002ae30 <_close_r>

9002ac3e <__swbuf_r>:
9002ac3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002ac40:	460e      	mov	r6, r1
9002ac42:	4614      	mov	r4, r2
9002ac44:	4605      	mov	r5, r0
9002ac46:	b118      	cbz	r0, 9002ac50 <__swbuf_r+0x12>
9002ac48:	6a03      	ldr	r3, [r0, #32]
9002ac4a:	b90b      	cbnz	r3, 9002ac50 <__swbuf_r+0x12>
9002ac4c:	f7ff ff6c 	bl	9002ab28 <__sinit>
9002ac50:	69a3      	ldr	r3, [r4, #24]
9002ac52:	60a3      	str	r3, [r4, #8]
9002ac54:	89a3      	ldrh	r3, [r4, #12]
9002ac56:	071a      	lsls	r2, r3, #28
9002ac58:	d501      	bpl.n	9002ac5e <__swbuf_r+0x20>
9002ac5a:	6923      	ldr	r3, [r4, #16]
9002ac5c:	b943      	cbnz	r3, 9002ac70 <__swbuf_r+0x32>
9002ac5e:	4621      	mov	r1, r4
9002ac60:	4628      	mov	r0, r5
9002ac62:	f000 f82b 	bl	9002acbc <__swsetup_r>
9002ac66:	b118      	cbz	r0, 9002ac70 <__swbuf_r+0x32>
9002ac68:	f04f 37ff 	mov.w	r7, #4294967295
9002ac6c:	4638      	mov	r0, r7
9002ac6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002ac70:	6823      	ldr	r3, [r4, #0]
9002ac72:	6922      	ldr	r2, [r4, #16]
9002ac74:	1a98      	subs	r0, r3, r2
9002ac76:	6963      	ldr	r3, [r4, #20]
9002ac78:	b2f6      	uxtb	r6, r6
9002ac7a:	4283      	cmp	r3, r0
9002ac7c:	4637      	mov	r7, r6
9002ac7e:	dc05      	bgt.n	9002ac8c <__swbuf_r+0x4e>
9002ac80:	4621      	mov	r1, r4
9002ac82:	4628      	mov	r0, r5
9002ac84:	f000 fd72 	bl	9002b76c <_fflush_r>
9002ac88:	2800      	cmp	r0, #0
9002ac8a:	d1ed      	bne.n	9002ac68 <__swbuf_r+0x2a>
9002ac8c:	68a3      	ldr	r3, [r4, #8]
9002ac8e:	3b01      	subs	r3, #1
9002ac90:	60a3      	str	r3, [r4, #8]
9002ac92:	6823      	ldr	r3, [r4, #0]
9002ac94:	1c5a      	adds	r2, r3, #1
9002ac96:	6022      	str	r2, [r4, #0]
9002ac98:	701e      	strb	r6, [r3, #0]
9002ac9a:	6962      	ldr	r2, [r4, #20]
9002ac9c:	1c43      	adds	r3, r0, #1
9002ac9e:	429a      	cmp	r2, r3
9002aca0:	d004      	beq.n	9002acac <__swbuf_r+0x6e>
9002aca2:	89a3      	ldrh	r3, [r4, #12]
9002aca4:	07db      	lsls	r3, r3, #31
9002aca6:	d5e1      	bpl.n	9002ac6c <__swbuf_r+0x2e>
9002aca8:	2e0a      	cmp	r6, #10
9002acaa:	d1df      	bne.n	9002ac6c <__swbuf_r+0x2e>
9002acac:	4621      	mov	r1, r4
9002acae:	4628      	mov	r0, r5
9002acb0:	f000 fd5c 	bl	9002b76c <_fflush_r>
9002acb4:	2800      	cmp	r0, #0
9002acb6:	d0d9      	beq.n	9002ac6c <__swbuf_r+0x2e>
9002acb8:	e7d6      	b.n	9002ac68 <__swbuf_r+0x2a>
	...

9002acbc <__swsetup_r>:
9002acbc:	b538      	push	{r3, r4, r5, lr}
9002acbe:	4b29      	ldr	r3, [pc, #164]	@ (9002ad64 <__swsetup_r+0xa8>)
9002acc0:	4605      	mov	r5, r0
9002acc2:	6818      	ldr	r0, [r3, #0]
9002acc4:	460c      	mov	r4, r1
9002acc6:	b118      	cbz	r0, 9002acd0 <__swsetup_r+0x14>
9002acc8:	6a03      	ldr	r3, [r0, #32]
9002acca:	b90b      	cbnz	r3, 9002acd0 <__swsetup_r+0x14>
9002accc:	f7ff ff2c 	bl	9002ab28 <__sinit>
9002acd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002acd4:	0719      	lsls	r1, r3, #28
9002acd6:	d422      	bmi.n	9002ad1e <__swsetup_r+0x62>
9002acd8:	06da      	lsls	r2, r3, #27
9002acda:	d407      	bmi.n	9002acec <__swsetup_r+0x30>
9002acdc:	2209      	movs	r2, #9
9002acde:	602a      	str	r2, [r5, #0]
9002ace0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002ace4:	81a3      	strh	r3, [r4, #12]
9002ace6:	f04f 30ff 	mov.w	r0, #4294967295
9002acea:	e033      	b.n	9002ad54 <__swsetup_r+0x98>
9002acec:	0758      	lsls	r0, r3, #29
9002acee:	d512      	bpl.n	9002ad16 <__swsetup_r+0x5a>
9002acf0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002acf2:	b141      	cbz	r1, 9002ad06 <__swsetup_r+0x4a>
9002acf4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002acf8:	4299      	cmp	r1, r3
9002acfa:	d002      	beq.n	9002ad02 <__swsetup_r+0x46>
9002acfc:	4628      	mov	r0, r5
9002acfe:	f000 f999 	bl	9002b034 <_free_r>
9002ad02:	2300      	movs	r3, #0
9002ad04:	6363      	str	r3, [r4, #52]	@ 0x34
9002ad06:	89a3      	ldrh	r3, [r4, #12]
9002ad08:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002ad0c:	81a3      	strh	r3, [r4, #12]
9002ad0e:	2300      	movs	r3, #0
9002ad10:	6063      	str	r3, [r4, #4]
9002ad12:	6923      	ldr	r3, [r4, #16]
9002ad14:	6023      	str	r3, [r4, #0]
9002ad16:	89a3      	ldrh	r3, [r4, #12]
9002ad18:	f043 0308 	orr.w	r3, r3, #8
9002ad1c:	81a3      	strh	r3, [r4, #12]
9002ad1e:	6923      	ldr	r3, [r4, #16]
9002ad20:	b94b      	cbnz	r3, 9002ad36 <__swsetup_r+0x7a>
9002ad22:	89a3      	ldrh	r3, [r4, #12]
9002ad24:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002ad28:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002ad2c:	d003      	beq.n	9002ad36 <__swsetup_r+0x7a>
9002ad2e:	4621      	mov	r1, r4
9002ad30:	4628      	mov	r0, r5
9002ad32:	f000 fd69 	bl	9002b808 <__smakebuf_r>
9002ad36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ad3a:	f013 0201 	ands.w	r2, r3, #1
9002ad3e:	d00a      	beq.n	9002ad56 <__swsetup_r+0x9a>
9002ad40:	2200      	movs	r2, #0
9002ad42:	60a2      	str	r2, [r4, #8]
9002ad44:	6962      	ldr	r2, [r4, #20]
9002ad46:	4252      	negs	r2, r2
9002ad48:	61a2      	str	r2, [r4, #24]
9002ad4a:	6922      	ldr	r2, [r4, #16]
9002ad4c:	b942      	cbnz	r2, 9002ad60 <__swsetup_r+0xa4>
9002ad4e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002ad52:	d1c5      	bne.n	9002ace0 <__swsetup_r+0x24>
9002ad54:	bd38      	pop	{r3, r4, r5, pc}
9002ad56:	0799      	lsls	r1, r3, #30
9002ad58:	bf58      	it	pl
9002ad5a:	6962      	ldrpl	r2, [r4, #20]
9002ad5c:	60a2      	str	r2, [r4, #8]
9002ad5e:	e7f4      	b.n	9002ad4a <__swsetup_r+0x8e>
9002ad60:	2000      	movs	r0, #0
9002ad62:	e7f7      	b.n	9002ad54 <__swsetup_r+0x98>
9002ad64:	24000114 	.word	0x24000114

9002ad68 <memmove>:
9002ad68:	4288      	cmp	r0, r1
9002ad6a:	b510      	push	{r4, lr}
9002ad6c:	eb01 0402 	add.w	r4, r1, r2
9002ad70:	d902      	bls.n	9002ad78 <memmove+0x10>
9002ad72:	4284      	cmp	r4, r0
9002ad74:	4623      	mov	r3, r4
9002ad76:	d807      	bhi.n	9002ad88 <memmove+0x20>
9002ad78:	1e43      	subs	r3, r0, #1
9002ad7a:	42a1      	cmp	r1, r4
9002ad7c:	d008      	beq.n	9002ad90 <memmove+0x28>
9002ad7e:	f811 2b01 	ldrb.w	r2, [r1], #1
9002ad82:	f803 2f01 	strb.w	r2, [r3, #1]!
9002ad86:	e7f8      	b.n	9002ad7a <memmove+0x12>
9002ad88:	4402      	add	r2, r0
9002ad8a:	4601      	mov	r1, r0
9002ad8c:	428a      	cmp	r2, r1
9002ad8e:	d100      	bne.n	9002ad92 <memmove+0x2a>
9002ad90:	bd10      	pop	{r4, pc}
9002ad92:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
9002ad96:	f802 4d01 	strb.w	r4, [r2, #-1]!
9002ad9a:	e7f7      	b.n	9002ad8c <memmove+0x24>

9002ad9c <memset>:
9002ad9c:	4402      	add	r2, r0
9002ad9e:	4603      	mov	r3, r0
9002ada0:	4293      	cmp	r3, r2
9002ada2:	d100      	bne.n	9002ada6 <memset+0xa>
9002ada4:	4770      	bx	lr
9002ada6:	f803 1b01 	strb.w	r1, [r3], #1
9002adaa:	e7f9      	b.n	9002ada0 <memset+0x4>

9002adac <strncmp>:
9002adac:	b510      	push	{r4, lr}
9002adae:	b16a      	cbz	r2, 9002adcc <strncmp+0x20>
9002adb0:	3901      	subs	r1, #1
9002adb2:	1884      	adds	r4, r0, r2
9002adb4:	f810 2b01 	ldrb.w	r2, [r0], #1
9002adb8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002adbc:	429a      	cmp	r2, r3
9002adbe:	d103      	bne.n	9002adc8 <strncmp+0x1c>
9002adc0:	42a0      	cmp	r0, r4
9002adc2:	d001      	beq.n	9002adc8 <strncmp+0x1c>
9002adc4:	2a00      	cmp	r2, #0
9002adc6:	d1f5      	bne.n	9002adb4 <strncmp+0x8>
9002adc8:	1ad0      	subs	r0, r2, r3
9002adca:	bd10      	pop	{r4, pc}
9002adcc:	4610      	mov	r0, r2
9002adce:	e7fc      	b.n	9002adca <strncmp+0x1e>

9002add0 <_raise_r>:
9002add0:	291f      	cmp	r1, #31
9002add2:	b538      	push	{r3, r4, r5, lr}
9002add4:	4605      	mov	r5, r0
9002add6:	460c      	mov	r4, r1
9002add8:	d904      	bls.n	9002ade4 <_raise_r+0x14>
9002adda:	2316      	movs	r3, #22
9002addc:	6003      	str	r3, [r0, #0]
9002adde:	f04f 30ff 	mov.w	r0, #4294967295
9002ade2:	bd38      	pop	{r3, r4, r5, pc}
9002ade4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002ade6:	b112      	cbz	r2, 9002adee <_raise_r+0x1e>
9002ade8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002adec:	b94b      	cbnz	r3, 9002ae02 <_raise_r+0x32>
9002adee:	4628      	mov	r0, r5
9002adf0:	f000 f864 	bl	9002aebc <_getpid_r>
9002adf4:	4622      	mov	r2, r4
9002adf6:	4601      	mov	r1, r0
9002adf8:	4628      	mov	r0, r5
9002adfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002adfe:	f000 b84b 	b.w	9002ae98 <_kill_r>
9002ae02:	2b01      	cmp	r3, #1
9002ae04:	d00a      	beq.n	9002ae1c <_raise_r+0x4c>
9002ae06:	1c59      	adds	r1, r3, #1
9002ae08:	d103      	bne.n	9002ae12 <_raise_r+0x42>
9002ae0a:	2316      	movs	r3, #22
9002ae0c:	6003      	str	r3, [r0, #0]
9002ae0e:	2001      	movs	r0, #1
9002ae10:	e7e7      	b.n	9002ade2 <_raise_r+0x12>
9002ae12:	2100      	movs	r1, #0
9002ae14:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002ae18:	4620      	mov	r0, r4
9002ae1a:	4798      	blx	r3
9002ae1c:	2000      	movs	r0, #0
9002ae1e:	e7e0      	b.n	9002ade2 <_raise_r+0x12>

9002ae20 <raise>:
9002ae20:	4b02      	ldr	r3, [pc, #8]	@ (9002ae2c <raise+0xc>)
9002ae22:	4601      	mov	r1, r0
9002ae24:	6818      	ldr	r0, [r3, #0]
9002ae26:	f7ff bfd3 	b.w	9002add0 <_raise_r>
9002ae2a:	bf00      	nop
9002ae2c:	24000114 	.word	0x24000114

9002ae30 <_close_r>:
9002ae30:	b538      	push	{r3, r4, r5, lr}
9002ae32:	4d06      	ldr	r5, [pc, #24]	@ (9002ae4c <_close_r+0x1c>)
9002ae34:	2300      	movs	r3, #0
9002ae36:	4604      	mov	r4, r0
9002ae38:	4608      	mov	r0, r1
9002ae3a:	602b      	str	r3, [r5, #0]
9002ae3c:	f7da fa84 	bl	90005348 <_close>
9002ae40:	1c43      	adds	r3, r0, #1
9002ae42:	d102      	bne.n	9002ae4a <_close_r+0x1a>
9002ae44:	682b      	ldr	r3, [r5, #0]
9002ae46:	b103      	cbz	r3, 9002ae4a <_close_r+0x1a>
9002ae48:	6023      	str	r3, [r4, #0]
9002ae4a:	bd38      	pop	{r3, r4, r5, pc}
9002ae4c:	24022904 	.word	0x24022904

9002ae50 <_lseek_r>:
9002ae50:	b538      	push	{r3, r4, r5, lr}
9002ae52:	4d07      	ldr	r5, [pc, #28]	@ (9002ae70 <_lseek_r+0x20>)
9002ae54:	4604      	mov	r4, r0
9002ae56:	4608      	mov	r0, r1
9002ae58:	4611      	mov	r1, r2
9002ae5a:	2200      	movs	r2, #0
9002ae5c:	602a      	str	r2, [r5, #0]
9002ae5e:	461a      	mov	r2, r3
9002ae60:	f7da fa7e 	bl	90005360 <_lseek>
9002ae64:	1c43      	adds	r3, r0, #1
9002ae66:	d102      	bne.n	9002ae6e <_lseek_r+0x1e>
9002ae68:	682b      	ldr	r3, [r5, #0]
9002ae6a:	b103      	cbz	r3, 9002ae6e <_lseek_r+0x1e>
9002ae6c:	6023      	str	r3, [r4, #0]
9002ae6e:	bd38      	pop	{r3, r4, r5, pc}
9002ae70:	24022904 	.word	0x24022904

9002ae74 <_read_r>:
9002ae74:	b538      	push	{r3, r4, r5, lr}
9002ae76:	4d07      	ldr	r5, [pc, #28]	@ (9002ae94 <_read_r+0x20>)
9002ae78:	4604      	mov	r4, r0
9002ae7a:	4608      	mov	r0, r1
9002ae7c:	4611      	mov	r1, r2
9002ae7e:	2200      	movs	r2, #0
9002ae80:	602a      	str	r2, [r5, #0]
9002ae82:	461a      	mov	r2, r3
9002ae84:	f7da fa44 	bl	90005310 <_read>
9002ae88:	1c43      	adds	r3, r0, #1
9002ae8a:	d102      	bne.n	9002ae92 <_read_r+0x1e>
9002ae8c:	682b      	ldr	r3, [r5, #0]
9002ae8e:	b103      	cbz	r3, 9002ae92 <_read_r+0x1e>
9002ae90:	6023      	str	r3, [r4, #0]
9002ae92:	bd38      	pop	{r3, r4, r5, pc}
9002ae94:	24022904 	.word	0x24022904

9002ae98 <_kill_r>:
9002ae98:	b538      	push	{r3, r4, r5, lr}
9002ae9a:	4d07      	ldr	r5, [pc, #28]	@ (9002aeb8 <_kill_r+0x20>)
9002ae9c:	2300      	movs	r3, #0
9002ae9e:	4604      	mov	r4, r0
9002aea0:	4608      	mov	r0, r1
9002aea2:	4611      	mov	r1, r2
9002aea4:	602b      	str	r3, [r5, #0]
9002aea6:	f7da fa23 	bl	900052f0 <_kill>
9002aeaa:	1c43      	adds	r3, r0, #1
9002aeac:	d102      	bne.n	9002aeb4 <_kill_r+0x1c>
9002aeae:	682b      	ldr	r3, [r5, #0]
9002aeb0:	b103      	cbz	r3, 9002aeb4 <_kill_r+0x1c>
9002aeb2:	6023      	str	r3, [r4, #0]
9002aeb4:	bd38      	pop	{r3, r4, r5, pc}
9002aeb6:	bf00      	nop
9002aeb8:	24022904 	.word	0x24022904

9002aebc <_getpid_r>:
9002aebc:	f7da ba16 	b.w	900052ec <_getpid>

9002aec0 <_sbrk_r>:
9002aec0:	b538      	push	{r3, r4, r5, lr}
9002aec2:	4d06      	ldr	r5, [pc, #24]	@ (9002aedc <_sbrk_r+0x1c>)
9002aec4:	2300      	movs	r3, #0
9002aec6:	4604      	mov	r4, r0
9002aec8:	4608      	mov	r0, r1
9002aeca:	602b      	str	r3, [r5, #0]
9002aecc:	f7da fa4a 	bl	90005364 <_sbrk>
9002aed0:	1c43      	adds	r3, r0, #1
9002aed2:	d102      	bne.n	9002aeda <_sbrk_r+0x1a>
9002aed4:	682b      	ldr	r3, [r5, #0]
9002aed6:	b103      	cbz	r3, 9002aeda <_sbrk_r+0x1a>
9002aed8:	6023      	str	r3, [r4, #0]
9002aeda:	bd38      	pop	{r3, r4, r5, pc}
9002aedc:	24022904 	.word	0x24022904

9002aee0 <_write_r>:
9002aee0:	b538      	push	{r3, r4, r5, lr}
9002aee2:	4d07      	ldr	r5, [pc, #28]	@ (9002af00 <_write_r+0x20>)
9002aee4:	4604      	mov	r4, r0
9002aee6:	4608      	mov	r0, r1
9002aee8:	4611      	mov	r1, r2
9002aeea:	2200      	movs	r2, #0
9002aeec:	602a      	str	r2, [r5, #0]
9002aeee:	461a      	mov	r2, r3
9002aef0:	f7da fa1c 	bl	9000532c <_write>
9002aef4:	1c43      	adds	r3, r0, #1
9002aef6:	d102      	bne.n	9002aefe <_write_r+0x1e>
9002aef8:	682b      	ldr	r3, [r5, #0]
9002aefa:	b103      	cbz	r3, 9002aefe <_write_r+0x1e>
9002aefc:	6023      	str	r3, [r4, #0]
9002aefe:	bd38      	pop	{r3, r4, r5, pc}
9002af00:	24022904 	.word	0x24022904

9002af04 <__errno>:
9002af04:	4b01      	ldr	r3, [pc, #4]	@ (9002af0c <__errno+0x8>)
9002af06:	6818      	ldr	r0, [r3, #0]
9002af08:	4770      	bx	lr
9002af0a:	bf00      	nop
9002af0c:	24000114 	.word	0x24000114

9002af10 <__libc_init_array>:
9002af10:	b570      	push	{r4, r5, r6, lr}
9002af12:	4d0d      	ldr	r5, [pc, #52]	@ (9002af48 <__libc_init_array+0x38>)
9002af14:	4c0d      	ldr	r4, [pc, #52]	@ (9002af4c <__libc_init_array+0x3c>)
9002af16:	1b64      	subs	r4, r4, r5
9002af18:	10a4      	asrs	r4, r4, #2
9002af1a:	2600      	movs	r6, #0
9002af1c:	42a6      	cmp	r6, r4
9002af1e:	d109      	bne.n	9002af34 <__libc_init_array+0x24>
9002af20:	4d0b      	ldr	r5, [pc, #44]	@ (9002af50 <__libc_init_array+0x40>)
9002af22:	4c0c      	ldr	r4, [pc, #48]	@ (9002af54 <__libc_init_array+0x44>)
9002af24:	f000 fcce 	bl	9002b8c4 <_init>
9002af28:	1b64      	subs	r4, r4, r5
9002af2a:	10a4      	asrs	r4, r4, #2
9002af2c:	2600      	movs	r6, #0
9002af2e:	42a6      	cmp	r6, r4
9002af30:	d105      	bne.n	9002af3e <__libc_init_array+0x2e>
9002af32:	bd70      	pop	{r4, r5, r6, pc}
9002af34:	f855 3b04 	ldr.w	r3, [r5], #4
9002af38:	4798      	blx	r3
9002af3a:	3601      	adds	r6, #1
9002af3c:	e7ee      	b.n	9002af1c <__libc_init_array+0xc>
9002af3e:	f855 3b04 	ldr.w	r3, [r5], #4
9002af42:	4798      	blx	r3
9002af44:	3601      	adds	r6, #1
9002af46:	e7f2      	b.n	9002af2e <__libc_init_array+0x1e>
9002af48:	9002efdc 	.word	0x9002efdc
9002af4c:	9002efdc 	.word	0x9002efdc
9002af50:	9002efdc 	.word	0x9002efdc
9002af54:	9002eff4 	.word	0x9002eff4

9002af58 <__retarget_lock_init_recursive>:
9002af58:	4770      	bx	lr

9002af5a <__retarget_lock_acquire_recursive>:
9002af5a:	4770      	bx	lr

9002af5c <__retarget_lock_release_recursive>:
9002af5c:	4770      	bx	lr

9002af5e <memcpy>:
9002af5e:	440a      	add	r2, r1
9002af60:	4291      	cmp	r1, r2
9002af62:	f100 33ff 	add.w	r3, r0, #4294967295
9002af66:	d100      	bne.n	9002af6a <memcpy+0xc>
9002af68:	4770      	bx	lr
9002af6a:	b510      	push	{r4, lr}
9002af6c:	f811 4b01 	ldrb.w	r4, [r1], #1
9002af70:	f803 4f01 	strb.w	r4, [r3, #1]!
9002af74:	4291      	cmp	r1, r2
9002af76:	d1f9      	bne.n	9002af6c <memcpy+0xe>
9002af78:	bd10      	pop	{r4, pc}
	...

9002af7c <__register_exitproc>:
9002af7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002af80:	4d27      	ldr	r5, [pc, #156]	@ (9002b020 <__register_exitproc+0xa4>)
9002af82:	4607      	mov	r7, r0
9002af84:	6828      	ldr	r0, [r5, #0]
9002af86:	4691      	mov	r9, r2
9002af88:	460e      	mov	r6, r1
9002af8a:	4698      	mov	r8, r3
9002af8c:	f7ff ffe5 	bl	9002af5a <__retarget_lock_acquire_recursive>
9002af90:	4a24      	ldr	r2, [pc, #144]	@ (9002b024 <__register_exitproc+0xa8>)
9002af92:	6814      	ldr	r4, [r2, #0]
9002af94:	b93c      	cbnz	r4, 9002afa6 <__register_exitproc+0x2a>
9002af96:	4b24      	ldr	r3, [pc, #144]	@ (9002b028 <__register_exitproc+0xac>)
9002af98:	6013      	str	r3, [r2, #0]
9002af9a:	4a24      	ldr	r2, [pc, #144]	@ (9002b02c <__register_exitproc+0xb0>)
9002af9c:	b112      	cbz	r2, 9002afa4 <__register_exitproc+0x28>
9002af9e:	6812      	ldr	r2, [r2, #0]
9002afa0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002afa4:	4c20      	ldr	r4, [pc, #128]	@ (9002b028 <__register_exitproc+0xac>)
9002afa6:	6863      	ldr	r3, [r4, #4]
9002afa8:	2b1f      	cmp	r3, #31
9002afaa:	dd06      	ble.n	9002afba <__register_exitproc+0x3e>
9002afac:	6828      	ldr	r0, [r5, #0]
9002afae:	f7ff ffd5 	bl	9002af5c <__retarget_lock_release_recursive>
9002afb2:	f04f 30ff 	mov.w	r0, #4294967295
9002afb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002afba:	b32f      	cbz	r7, 9002b008 <__register_exitproc+0x8c>
9002afbc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002afc0:	b968      	cbnz	r0, 9002afde <__register_exitproc+0x62>
9002afc2:	4b1b      	ldr	r3, [pc, #108]	@ (9002b030 <__register_exitproc+0xb4>)
9002afc4:	2b00      	cmp	r3, #0
9002afc6:	d0f1      	beq.n	9002afac <__register_exitproc+0x30>
9002afc8:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002afcc:	f7ff fc54 	bl	9002a878 <malloc>
9002afd0:	2800      	cmp	r0, #0
9002afd2:	d0eb      	beq.n	9002afac <__register_exitproc+0x30>
9002afd4:	2300      	movs	r3, #0
9002afd6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002afda:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002afde:	6863      	ldr	r3, [r4, #4]
9002afe0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002afe4:	2201      	movs	r2, #1
9002afe6:	409a      	lsls	r2, r3
9002afe8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002afec:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002aff0:	4313      	orrs	r3, r2
9002aff2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002aff6:	2f02      	cmp	r7, #2
9002aff8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002affc:	bf02      	ittt	eq
9002affe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002b002:	4313      	orreq	r3, r2
9002b004:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002b008:	6863      	ldr	r3, [r4, #4]
9002b00a:	6828      	ldr	r0, [r5, #0]
9002b00c:	1c5a      	adds	r2, r3, #1
9002b00e:	3302      	adds	r3, #2
9002b010:	6062      	str	r2, [r4, #4]
9002b012:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002b016:	f7ff ffa1 	bl	9002af5c <__retarget_lock_release_recursive>
9002b01a:	2000      	movs	r0, #0
9002b01c:	e7cb      	b.n	9002afb6 <__register_exitproc+0x3a>
9002b01e:	bf00      	nop
9002b020:	24000164 	.word	0x24000164
9002b024:	24022998 	.word	0x24022998
9002b028:	2402290c 	.word	0x2402290c
9002b02c:	9002efa8 	.word	0x9002efa8
9002b030:	9002a879 	.word	0x9002a879

9002b034 <_free_r>:
9002b034:	b538      	push	{r3, r4, r5, lr}
9002b036:	4605      	mov	r5, r0
9002b038:	2900      	cmp	r1, #0
9002b03a:	d041      	beq.n	9002b0c0 <_free_r+0x8c>
9002b03c:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002b040:	1f0c      	subs	r4, r1, #4
9002b042:	2b00      	cmp	r3, #0
9002b044:	bfb8      	it	lt
9002b046:	18e4      	addlt	r4, r4, r3
9002b048:	f7ff fcc8 	bl	9002a9dc <__malloc_lock>
9002b04c:	4a1d      	ldr	r2, [pc, #116]	@ (9002b0c4 <_free_r+0x90>)
9002b04e:	6813      	ldr	r3, [r2, #0]
9002b050:	b933      	cbnz	r3, 9002b060 <_free_r+0x2c>
9002b052:	6063      	str	r3, [r4, #4]
9002b054:	6014      	str	r4, [r2, #0]
9002b056:	4628      	mov	r0, r5
9002b058:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b05c:	f7ff bcc4 	b.w	9002a9e8 <__malloc_unlock>
9002b060:	42a3      	cmp	r3, r4
9002b062:	d908      	bls.n	9002b076 <_free_r+0x42>
9002b064:	6820      	ldr	r0, [r4, #0]
9002b066:	1821      	adds	r1, r4, r0
9002b068:	428b      	cmp	r3, r1
9002b06a:	bf01      	itttt	eq
9002b06c:	6819      	ldreq	r1, [r3, #0]
9002b06e:	685b      	ldreq	r3, [r3, #4]
9002b070:	1809      	addeq	r1, r1, r0
9002b072:	6021      	streq	r1, [r4, #0]
9002b074:	e7ed      	b.n	9002b052 <_free_r+0x1e>
9002b076:	461a      	mov	r2, r3
9002b078:	685b      	ldr	r3, [r3, #4]
9002b07a:	b10b      	cbz	r3, 9002b080 <_free_r+0x4c>
9002b07c:	42a3      	cmp	r3, r4
9002b07e:	d9fa      	bls.n	9002b076 <_free_r+0x42>
9002b080:	6811      	ldr	r1, [r2, #0]
9002b082:	1850      	adds	r0, r2, r1
9002b084:	42a0      	cmp	r0, r4
9002b086:	d10b      	bne.n	9002b0a0 <_free_r+0x6c>
9002b088:	6820      	ldr	r0, [r4, #0]
9002b08a:	4401      	add	r1, r0
9002b08c:	1850      	adds	r0, r2, r1
9002b08e:	4283      	cmp	r3, r0
9002b090:	6011      	str	r1, [r2, #0]
9002b092:	d1e0      	bne.n	9002b056 <_free_r+0x22>
9002b094:	6818      	ldr	r0, [r3, #0]
9002b096:	685b      	ldr	r3, [r3, #4]
9002b098:	6053      	str	r3, [r2, #4]
9002b09a:	4408      	add	r0, r1
9002b09c:	6010      	str	r0, [r2, #0]
9002b09e:	e7da      	b.n	9002b056 <_free_r+0x22>
9002b0a0:	d902      	bls.n	9002b0a8 <_free_r+0x74>
9002b0a2:	230c      	movs	r3, #12
9002b0a4:	602b      	str	r3, [r5, #0]
9002b0a6:	e7d6      	b.n	9002b056 <_free_r+0x22>
9002b0a8:	6820      	ldr	r0, [r4, #0]
9002b0aa:	1821      	adds	r1, r4, r0
9002b0ac:	428b      	cmp	r3, r1
9002b0ae:	bf04      	itt	eq
9002b0b0:	6819      	ldreq	r1, [r3, #0]
9002b0b2:	685b      	ldreq	r3, [r3, #4]
9002b0b4:	6063      	str	r3, [r4, #4]
9002b0b6:	bf04      	itt	eq
9002b0b8:	1809      	addeq	r1, r1, r0
9002b0ba:	6021      	streq	r1, [r4, #0]
9002b0bc:	6054      	str	r4, [r2, #4]
9002b0be:	e7ca      	b.n	9002b056 <_free_r+0x22>
9002b0c0:	bd38      	pop	{r3, r4, r5, pc}
9002b0c2:	bf00      	nop
9002b0c4:	240227c4 	.word	0x240227c4

9002b0c8 <__sfputc_r>:
9002b0c8:	6893      	ldr	r3, [r2, #8]
9002b0ca:	3b01      	subs	r3, #1
9002b0cc:	2b00      	cmp	r3, #0
9002b0ce:	b410      	push	{r4}
9002b0d0:	6093      	str	r3, [r2, #8]
9002b0d2:	da08      	bge.n	9002b0e6 <__sfputc_r+0x1e>
9002b0d4:	6994      	ldr	r4, [r2, #24]
9002b0d6:	42a3      	cmp	r3, r4
9002b0d8:	db01      	blt.n	9002b0de <__sfputc_r+0x16>
9002b0da:	290a      	cmp	r1, #10
9002b0dc:	d103      	bne.n	9002b0e6 <__sfputc_r+0x1e>
9002b0de:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b0e2:	f7ff bdac 	b.w	9002ac3e <__swbuf_r>
9002b0e6:	6813      	ldr	r3, [r2, #0]
9002b0e8:	1c58      	adds	r0, r3, #1
9002b0ea:	6010      	str	r0, [r2, #0]
9002b0ec:	7019      	strb	r1, [r3, #0]
9002b0ee:	4608      	mov	r0, r1
9002b0f0:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b0f4:	4770      	bx	lr

9002b0f6 <__sfputs_r>:
9002b0f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b0f8:	4606      	mov	r6, r0
9002b0fa:	460f      	mov	r7, r1
9002b0fc:	4614      	mov	r4, r2
9002b0fe:	18d5      	adds	r5, r2, r3
9002b100:	42ac      	cmp	r4, r5
9002b102:	d101      	bne.n	9002b108 <__sfputs_r+0x12>
9002b104:	2000      	movs	r0, #0
9002b106:	e007      	b.n	9002b118 <__sfputs_r+0x22>
9002b108:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b10c:	463a      	mov	r2, r7
9002b10e:	4630      	mov	r0, r6
9002b110:	f7ff ffda 	bl	9002b0c8 <__sfputc_r>
9002b114:	1c43      	adds	r3, r0, #1
9002b116:	d1f3      	bne.n	9002b100 <__sfputs_r+0xa>
9002b118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002b11c <_vfiprintf_r>:
9002b11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002b120:	460d      	mov	r5, r1
9002b122:	b09d      	sub	sp, #116	@ 0x74
9002b124:	4614      	mov	r4, r2
9002b126:	4698      	mov	r8, r3
9002b128:	4606      	mov	r6, r0
9002b12a:	b118      	cbz	r0, 9002b134 <_vfiprintf_r+0x18>
9002b12c:	6a03      	ldr	r3, [r0, #32]
9002b12e:	b90b      	cbnz	r3, 9002b134 <_vfiprintf_r+0x18>
9002b130:	f7ff fcfa 	bl	9002ab28 <__sinit>
9002b134:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b136:	07d9      	lsls	r1, r3, #31
9002b138:	d405      	bmi.n	9002b146 <_vfiprintf_r+0x2a>
9002b13a:	89ab      	ldrh	r3, [r5, #12]
9002b13c:	059a      	lsls	r2, r3, #22
9002b13e:	d402      	bmi.n	9002b146 <_vfiprintf_r+0x2a>
9002b140:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b142:	f7ff ff0a 	bl	9002af5a <__retarget_lock_acquire_recursive>
9002b146:	89ab      	ldrh	r3, [r5, #12]
9002b148:	071b      	lsls	r3, r3, #28
9002b14a:	d501      	bpl.n	9002b150 <_vfiprintf_r+0x34>
9002b14c:	692b      	ldr	r3, [r5, #16]
9002b14e:	b99b      	cbnz	r3, 9002b178 <_vfiprintf_r+0x5c>
9002b150:	4629      	mov	r1, r5
9002b152:	4630      	mov	r0, r6
9002b154:	f7ff fdb2 	bl	9002acbc <__swsetup_r>
9002b158:	b170      	cbz	r0, 9002b178 <_vfiprintf_r+0x5c>
9002b15a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b15c:	07dc      	lsls	r4, r3, #31
9002b15e:	d504      	bpl.n	9002b16a <_vfiprintf_r+0x4e>
9002b160:	f04f 30ff 	mov.w	r0, #4294967295
9002b164:	b01d      	add	sp, #116	@ 0x74
9002b166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002b16a:	89ab      	ldrh	r3, [r5, #12]
9002b16c:	0598      	lsls	r0, r3, #22
9002b16e:	d4f7      	bmi.n	9002b160 <_vfiprintf_r+0x44>
9002b170:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b172:	f7ff fef3 	bl	9002af5c <__retarget_lock_release_recursive>
9002b176:	e7f3      	b.n	9002b160 <_vfiprintf_r+0x44>
9002b178:	2300      	movs	r3, #0
9002b17a:	9309      	str	r3, [sp, #36]	@ 0x24
9002b17c:	2320      	movs	r3, #32
9002b17e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002b182:	f8cd 800c 	str.w	r8, [sp, #12]
9002b186:	2330      	movs	r3, #48	@ 0x30
9002b188:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002b338 <_vfiprintf_r+0x21c>
9002b18c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002b190:	f04f 0901 	mov.w	r9, #1
9002b194:	4623      	mov	r3, r4
9002b196:	469a      	mov	sl, r3
9002b198:	f813 2b01 	ldrb.w	r2, [r3], #1
9002b19c:	b10a      	cbz	r2, 9002b1a2 <_vfiprintf_r+0x86>
9002b19e:	2a25      	cmp	r2, #37	@ 0x25
9002b1a0:	d1f9      	bne.n	9002b196 <_vfiprintf_r+0x7a>
9002b1a2:	ebba 0b04 	subs.w	fp, sl, r4
9002b1a6:	d00b      	beq.n	9002b1c0 <_vfiprintf_r+0xa4>
9002b1a8:	465b      	mov	r3, fp
9002b1aa:	4622      	mov	r2, r4
9002b1ac:	4629      	mov	r1, r5
9002b1ae:	4630      	mov	r0, r6
9002b1b0:	f7ff ffa1 	bl	9002b0f6 <__sfputs_r>
9002b1b4:	3001      	adds	r0, #1
9002b1b6:	f000 80a7 	beq.w	9002b308 <_vfiprintf_r+0x1ec>
9002b1ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002b1bc:	445a      	add	r2, fp
9002b1be:	9209      	str	r2, [sp, #36]	@ 0x24
9002b1c0:	f89a 3000 	ldrb.w	r3, [sl]
9002b1c4:	2b00      	cmp	r3, #0
9002b1c6:	f000 809f 	beq.w	9002b308 <_vfiprintf_r+0x1ec>
9002b1ca:	2300      	movs	r3, #0
9002b1cc:	f04f 32ff 	mov.w	r2, #4294967295
9002b1d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002b1d4:	f10a 0a01 	add.w	sl, sl, #1
9002b1d8:	9304      	str	r3, [sp, #16]
9002b1da:	9307      	str	r3, [sp, #28]
9002b1dc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002b1e0:	931a      	str	r3, [sp, #104]	@ 0x68
9002b1e2:	4654      	mov	r4, sl
9002b1e4:	2205      	movs	r2, #5
9002b1e6:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b1ea:	4853      	ldr	r0, [pc, #332]	@ (9002b338 <_vfiprintf_r+0x21c>)
9002b1ec:	f7d5 f878 	bl	900002e0 <memchr>
9002b1f0:	9a04      	ldr	r2, [sp, #16]
9002b1f2:	b9d8      	cbnz	r0, 9002b22c <_vfiprintf_r+0x110>
9002b1f4:	06d1      	lsls	r1, r2, #27
9002b1f6:	bf44      	itt	mi
9002b1f8:	2320      	movmi	r3, #32
9002b1fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002b1fe:	0713      	lsls	r3, r2, #28
9002b200:	bf44      	itt	mi
9002b202:	232b      	movmi	r3, #43	@ 0x2b
9002b204:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002b208:	f89a 3000 	ldrb.w	r3, [sl]
9002b20c:	2b2a      	cmp	r3, #42	@ 0x2a
9002b20e:	d015      	beq.n	9002b23c <_vfiprintf_r+0x120>
9002b210:	9a07      	ldr	r2, [sp, #28]
9002b212:	4654      	mov	r4, sl
9002b214:	2000      	movs	r0, #0
9002b216:	f04f 0c0a 	mov.w	ip, #10
9002b21a:	4621      	mov	r1, r4
9002b21c:	f811 3b01 	ldrb.w	r3, [r1], #1
9002b220:	3b30      	subs	r3, #48	@ 0x30
9002b222:	2b09      	cmp	r3, #9
9002b224:	d94b      	bls.n	9002b2be <_vfiprintf_r+0x1a2>
9002b226:	b1b0      	cbz	r0, 9002b256 <_vfiprintf_r+0x13a>
9002b228:	9207      	str	r2, [sp, #28]
9002b22a:	e014      	b.n	9002b256 <_vfiprintf_r+0x13a>
9002b22c:	eba0 0308 	sub.w	r3, r0, r8
9002b230:	fa09 f303 	lsl.w	r3, r9, r3
9002b234:	4313      	orrs	r3, r2
9002b236:	9304      	str	r3, [sp, #16]
9002b238:	46a2      	mov	sl, r4
9002b23a:	e7d2      	b.n	9002b1e2 <_vfiprintf_r+0xc6>
9002b23c:	9b03      	ldr	r3, [sp, #12]
9002b23e:	1d19      	adds	r1, r3, #4
9002b240:	681b      	ldr	r3, [r3, #0]
9002b242:	9103      	str	r1, [sp, #12]
9002b244:	2b00      	cmp	r3, #0
9002b246:	bfbb      	ittet	lt
9002b248:	425b      	neglt	r3, r3
9002b24a:	f042 0202 	orrlt.w	r2, r2, #2
9002b24e:	9307      	strge	r3, [sp, #28]
9002b250:	9307      	strlt	r3, [sp, #28]
9002b252:	bfb8      	it	lt
9002b254:	9204      	strlt	r2, [sp, #16]
9002b256:	7823      	ldrb	r3, [r4, #0]
9002b258:	2b2e      	cmp	r3, #46	@ 0x2e
9002b25a:	d10a      	bne.n	9002b272 <_vfiprintf_r+0x156>
9002b25c:	7863      	ldrb	r3, [r4, #1]
9002b25e:	2b2a      	cmp	r3, #42	@ 0x2a
9002b260:	d132      	bne.n	9002b2c8 <_vfiprintf_r+0x1ac>
9002b262:	9b03      	ldr	r3, [sp, #12]
9002b264:	1d1a      	adds	r2, r3, #4
9002b266:	681b      	ldr	r3, [r3, #0]
9002b268:	9203      	str	r2, [sp, #12]
9002b26a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002b26e:	3402      	adds	r4, #2
9002b270:	9305      	str	r3, [sp, #20]
9002b272:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002b348 <_vfiprintf_r+0x22c>
9002b276:	7821      	ldrb	r1, [r4, #0]
9002b278:	2203      	movs	r2, #3
9002b27a:	4650      	mov	r0, sl
9002b27c:	f7d5 f830 	bl	900002e0 <memchr>
9002b280:	b138      	cbz	r0, 9002b292 <_vfiprintf_r+0x176>
9002b282:	9b04      	ldr	r3, [sp, #16]
9002b284:	eba0 000a 	sub.w	r0, r0, sl
9002b288:	2240      	movs	r2, #64	@ 0x40
9002b28a:	4082      	lsls	r2, r0
9002b28c:	4313      	orrs	r3, r2
9002b28e:	3401      	adds	r4, #1
9002b290:	9304      	str	r3, [sp, #16]
9002b292:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b296:	4829      	ldr	r0, [pc, #164]	@ (9002b33c <_vfiprintf_r+0x220>)
9002b298:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002b29c:	2206      	movs	r2, #6
9002b29e:	f7d5 f81f 	bl	900002e0 <memchr>
9002b2a2:	2800      	cmp	r0, #0
9002b2a4:	d03f      	beq.n	9002b326 <_vfiprintf_r+0x20a>
9002b2a6:	4b26      	ldr	r3, [pc, #152]	@ (9002b340 <_vfiprintf_r+0x224>)
9002b2a8:	bb1b      	cbnz	r3, 9002b2f2 <_vfiprintf_r+0x1d6>
9002b2aa:	9b03      	ldr	r3, [sp, #12]
9002b2ac:	3307      	adds	r3, #7
9002b2ae:	f023 0307 	bic.w	r3, r3, #7
9002b2b2:	3308      	adds	r3, #8
9002b2b4:	9303      	str	r3, [sp, #12]
9002b2b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002b2b8:	443b      	add	r3, r7
9002b2ba:	9309      	str	r3, [sp, #36]	@ 0x24
9002b2bc:	e76a      	b.n	9002b194 <_vfiprintf_r+0x78>
9002b2be:	fb0c 3202 	mla	r2, ip, r2, r3
9002b2c2:	460c      	mov	r4, r1
9002b2c4:	2001      	movs	r0, #1
9002b2c6:	e7a8      	b.n	9002b21a <_vfiprintf_r+0xfe>
9002b2c8:	2300      	movs	r3, #0
9002b2ca:	3401      	adds	r4, #1
9002b2cc:	9305      	str	r3, [sp, #20]
9002b2ce:	4619      	mov	r1, r3
9002b2d0:	f04f 0c0a 	mov.w	ip, #10
9002b2d4:	4620      	mov	r0, r4
9002b2d6:	f810 2b01 	ldrb.w	r2, [r0], #1
9002b2da:	3a30      	subs	r2, #48	@ 0x30
9002b2dc:	2a09      	cmp	r2, #9
9002b2de:	d903      	bls.n	9002b2e8 <_vfiprintf_r+0x1cc>
9002b2e0:	2b00      	cmp	r3, #0
9002b2e2:	d0c6      	beq.n	9002b272 <_vfiprintf_r+0x156>
9002b2e4:	9105      	str	r1, [sp, #20]
9002b2e6:	e7c4      	b.n	9002b272 <_vfiprintf_r+0x156>
9002b2e8:	fb0c 2101 	mla	r1, ip, r1, r2
9002b2ec:	4604      	mov	r4, r0
9002b2ee:	2301      	movs	r3, #1
9002b2f0:	e7f0      	b.n	9002b2d4 <_vfiprintf_r+0x1b8>
9002b2f2:	ab03      	add	r3, sp, #12
9002b2f4:	9300      	str	r3, [sp, #0]
9002b2f6:	462a      	mov	r2, r5
9002b2f8:	4b12      	ldr	r3, [pc, #72]	@ (9002b344 <_vfiprintf_r+0x228>)
9002b2fa:	a904      	add	r1, sp, #16
9002b2fc:	4630      	mov	r0, r6
9002b2fe:	f3af 8000 	nop.w
9002b302:	4607      	mov	r7, r0
9002b304:	1c78      	adds	r0, r7, #1
9002b306:	d1d6      	bne.n	9002b2b6 <_vfiprintf_r+0x19a>
9002b308:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b30a:	07d9      	lsls	r1, r3, #31
9002b30c:	d405      	bmi.n	9002b31a <_vfiprintf_r+0x1fe>
9002b30e:	89ab      	ldrh	r3, [r5, #12]
9002b310:	059a      	lsls	r2, r3, #22
9002b312:	d402      	bmi.n	9002b31a <_vfiprintf_r+0x1fe>
9002b314:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b316:	f7ff fe21 	bl	9002af5c <__retarget_lock_release_recursive>
9002b31a:	89ab      	ldrh	r3, [r5, #12]
9002b31c:	065b      	lsls	r3, r3, #25
9002b31e:	f53f af1f 	bmi.w	9002b160 <_vfiprintf_r+0x44>
9002b322:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002b324:	e71e      	b.n	9002b164 <_vfiprintf_r+0x48>
9002b326:	ab03      	add	r3, sp, #12
9002b328:	9300      	str	r3, [sp, #0]
9002b32a:	462a      	mov	r2, r5
9002b32c:	4b05      	ldr	r3, [pc, #20]	@ (9002b344 <_vfiprintf_r+0x228>)
9002b32e:	a904      	add	r1, sp, #16
9002b330:	4630      	mov	r0, r6
9002b332:	f000 f879 	bl	9002b428 <_printf_i>
9002b336:	e7e4      	b.n	9002b302 <_vfiprintf_r+0x1e6>
9002b338:	9002ef74 	.word	0x9002ef74
9002b33c:	9002ef7e 	.word	0x9002ef7e
9002b340:	00000000 	.word	0x00000000
9002b344:	9002b0f7 	.word	0x9002b0f7
9002b348:	9002ef7a 	.word	0x9002ef7a

9002b34c <_printf_common>:
9002b34c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002b350:	4616      	mov	r6, r2
9002b352:	4698      	mov	r8, r3
9002b354:	688a      	ldr	r2, [r1, #8]
9002b356:	690b      	ldr	r3, [r1, #16]
9002b358:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002b35c:	4293      	cmp	r3, r2
9002b35e:	bfb8      	it	lt
9002b360:	4613      	movlt	r3, r2
9002b362:	6033      	str	r3, [r6, #0]
9002b364:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002b368:	4607      	mov	r7, r0
9002b36a:	460c      	mov	r4, r1
9002b36c:	b10a      	cbz	r2, 9002b372 <_printf_common+0x26>
9002b36e:	3301      	adds	r3, #1
9002b370:	6033      	str	r3, [r6, #0]
9002b372:	6823      	ldr	r3, [r4, #0]
9002b374:	0699      	lsls	r1, r3, #26
9002b376:	bf42      	ittt	mi
9002b378:	6833      	ldrmi	r3, [r6, #0]
9002b37a:	3302      	addmi	r3, #2
9002b37c:	6033      	strmi	r3, [r6, #0]
9002b37e:	6825      	ldr	r5, [r4, #0]
9002b380:	f015 0506 	ands.w	r5, r5, #6
9002b384:	d106      	bne.n	9002b394 <_printf_common+0x48>
9002b386:	f104 0a19 	add.w	sl, r4, #25
9002b38a:	68e3      	ldr	r3, [r4, #12]
9002b38c:	6832      	ldr	r2, [r6, #0]
9002b38e:	1a9b      	subs	r3, r3, r2
9002b390:	42ab      	cmp	r3, r5
9002b392:	dc26      	bgt.n	9002b3e2 <_printf_common+0x96>
9002b394:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002b398:	6822      	ldr	r2, [r4, #0]
9002b39a:	3b00      	subs	r3, #0
9002b39c:	bf18      	it	ne
9002b39e:	2301      	movne	r3, #1
9002b3a0:	0692      	lsls	r2, r2, #26
9002b3a2:	d42b      	bmi.n	9002b3fc <_printf_common+0xb0>
9002b3a4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002b3a8:	4641      	mov	r1, r8
9002b3aa:	4638      	mov	r0, r7
9002b3ac:	47c8      	blx	r9
9002b3ae:	3001      	adds	r0, #1
9002b3b0:	d01e      	beq.n	9002b3f0 <_printf_common+0xa4>
9002b3b2:	6823      	ldr	r3, [r4, #0]
9002b3b4:	6922      	ldr	r2, [r4, #16]
9002b3b6:	f003 0306 	and.w	r3, r3, #6
9002b3ba:	2b04      	cmp	r3, #4
9002b3bc:	bf02      	ittt	eq
9002b3be:	68e5      	ldreq	r5, [r4, #12]
9002b3c0:	6833      	ldreq	r3, [r6, #0]
9002b3c2:	1aed      	subeq	r5, r5, r3
9002b3c4:	68a3      	ldr	r3, [r4, #8]
9002b3c6:	bf0c      	ite	eq
9002b3c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002b3cc:	2500      	movne	r5, #0
9002b3ce:	4293      	cmp	r3, r2
9002b3d0:	bfc4      	itt	gt
9002b3d2:	1a9b      	subgt	r3, r3, r2
9002b3d4:	18ed      	addgt	r5, r5, r3
9002b3d6:	2600      	movs	r6, #0
9002b3d8:	341a      	adds	r4, #26
9002b3da:	42b5      	cmp	r5, r6
9002b3dc:	d11a      	bne.n	9002b414 <_printf_common+0xc8>
9002b3de:	2000      	movs	r0, #0
9002b3e0:	e008      	b.n	9002b3f4 <_printf_common+0xa8>
9002b3e2:	2301      	movs	r3, #1
9002b3e4:	4652      	mov	r2, sl
9002b3e6:	4641      	mov	r1, r8
9002b3e8:	4638      	mov	r0, r7
9002b3ea:	47c8      	blx	r9
9002b3ec:	3001      	adds	r0, #1
9002b3ee:	d103      	bne.n	9002b3f8 <_printf_common+0xac>
9002b3f0:	f04f 30ff 	mov.w	r0, #4294967295
9002b3f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002b3f8:	3501      	adds	r5, #1
9002b3fa:	e7c6      	b.n	9002b38a <_printf_common+0x3e>
9002b3fc:	18e1      	adds	r1, r4, r3
9002b3fe:	1c5a      	adds	r2, r3, #1
9002b400:	2030      	movs	r0, #48	@ 0x30
9002b402:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002b406:	4422      	add	r2, r4
9002b408:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002b40c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002b410:	3302      	adds	r3, #2
9002b412:	e7c7      	b.n	9002b3a4 <_printf_common+0x58>
9002b414:	2301      	movs	r3, #1
9002b416:	4622      	mov	r2, r4
9002b418:	4641      	mov	r1, r8
9002b41a:	4638      	mov	r0, r7
9002b41c:	47c8      	blx	r9
9002b41e:	3001      	adds	r0, #1
9002b420:	d0e6      	beq.n	9002b3f0 <_printf_common+0xa4>
9002b422:	3601      	adds	r6, #1
9002b424:	e7d9      	b.n	9002b3da <_printf_common+0x8e>
	...

9002b428 <_printf_i>:
9002b428:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002b42c:	7e0f      	ldrb	r7, [r1, #24]
9002b42e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002b430:	2f78      	cmp	r7, #120	@ 0x78
9002b432:	4691      	mov	r9, r2
9002b434:	4680      	mov	r8, r0
9002b436:	460c      	mov	r4, r1
9002b438:	469a      	mov	sl, r3
9002b43a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002b43e:	d807      	bhi.n	9002b450 <_printf_i+0x28>
9002b440:	2f62      	cmp	r7, #98	@ 0x62
9002b442:	d80a      	bhi.n	9002b45a <_printf_i+0x32>
9002b444:	2f00      	cmp	r7, #0
9002b446:	f000 80d1 	beq.w	9002b5ec <_printf_i+0x1c4>
9002b44a:	2f58      	cmp	r7, #88	@ 0x58
9002b44c:	f000 80b8 	beq.w	9002b5c0 <_printf_i+0x198>
9002b450:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b454:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002b458:	e03a      	b.n	9002b4d0 <_printf_i+0xa8>
9002b45a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002b45e:	2b15      	cmp	r3, #21
9002b460:	d8f6      	bhi.n	9002b450 <_printf_i+0x28>
9002b462:	a101      	add	r1, pc, #4	@ (adr r1, 9002b468 <_printf_i+0x40>)
9002b464:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002b468:	9002b4c1 	.word	0x9002b4c1
9002b46c:	9002b4d5 	.word	0x9002b4d5
9002b470:	9002b451 	.word	0x9002b451
9002b474:	9002b451 	.word	0x9002b451
9002b478:	9002b451 	.word	0x9002b451
9002b47c:	9002b451 	.word	0x9002b451
9002b480:	9002b4d5 	.word	0x9002b4d5
9002b484:	9002b451 	.word	0x9002b451
9002b488:	9002b451 	.word	0x9002b451
9002b48c:	9002b451 	.word	0x9002b451
9002b490:	9002b451 	.word	0x9002b451
9002b494:	9002b5d3 	.word	0x9002b5d3
9002b498:	9002b4ff 	.word	0x9002b4ff
9002b49c:	9002b58d 	.word	0x9002b58d
9002b4a0:	9002b451 	.word	0x9002b451
9002b4a4:	9002b451 	.word	0x9002b451
9002b4a8:	9002b5f5 	.word	0x9002b5f5
9002b4ac:	9002b451 	.word	0x9002b451
9002b4b0:	9002b4ff 	.word	0x9002b4ff
9002b4b4:	9002b451 	.word	0x9002b451
9002b4b8:	9002b451 	.word	0x9002b451
9002b4bc:	9002b595 	.word	0x9002b595
9002b4c0:	6833      	ldr	r3, [r6, #0]
9002b4c2:	1d1a      	adds	r2, r3, #4
9002b4c4:	681b      	ldr	r3, [r3, #0]
9002b4c6:	6032      	str	r2, [r6, #0]
9002b4c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b4cc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002b4d0:	2301      	movs	r3, #1
9002b4d2:	e09c      	b.n	9002b60e <_printf_i+0x1e6>
9002b4d4:	6833      	ldr	r3, [r6, #0]
9002b4d6:	6820      	ldr	r0, [r4, #0]
9002b4d8:	1d19      	adds	r1, r3, #4
9002b4da:	6031      	str	r1, [r6, #0]
9002b4dc:	0606      	lsls	r6, r0, #24
9002b4de:	d501      	bpl.n	9002b4e4 <_printf_i+0xbc>
9002b4e0:	681d      	ldr	r5, [r3, #0]
9002b4e2:	e003      	b.n	9002b4ec <_printf_i+0xc4>
9002b4e4:	0645      	lsls	r5, r0, #25
9002b4e6:	d5fb      	bpl.n	9002b4e0 <_printf_i+0xb8>
9002b4e8:	f9b3 5000 	ldrsh.w	r5, [r3]
9002b4ec:	2d00      	cmp	r5, #0
9002b4ee:	da03      	bge.n	9002b4f8 <_printf_i+0xd0>
9002b4f0:	232d      	movs	r3, #45	@ 0x2d
9002b4f2:	426d      	negs	r5, r5
9002b4f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b4f8:	4858      	ldr	r0, [pc, #352]	@ (9002b65c <_printf_i+0x234>)
9002b4fa:	230a      	movs	r3, #10
9002b4fc:	e011      	b.n	9002b522 <_printf_i+0xfa>
9002b4fe:	6821      	ldr	r1, [r4, #0]
9002b500:	6833      	ldr	r3, [r6, #0]
9002b502:	0608      	lsls	r0, r1, #24
9002b504:	f853 5b04 	ldr.w	r5, [r3], #4
9002b508:	d402      	bmi.n	9002b510 <_printf_i+0xe8>
9002b50a:	0649      	lsls	r1, r1, #25
9002b50c:	bf48      	it	mi
9002b50e:	b2ad      	uxthmi	r5, r5
9002b510:	2f6f      	cmp	r7, #111	@ 0x6f
9002b512:	4852      	ldr	r0, [pc, #328]	@ (9002b65c <_printf_i+0x234>)
9002b514:	6033      	str	r3, [r6, #0]
9002b516:	bf14      	ite	ne
9002b518:	230a      	movne	r3, #10
9002b51a:	2308      	moveq	r3, #8
9002b51c:	2100      	movs	r1, #0
9002b51e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002b522:	6866      	ldr	r6, [r4, #4]
9002b524:	60a6      	str	r6, [r4, #8]
9002b526:	2e00      	cmp	r6, #0
9002b528:	db05      	blt.n	9002b536 <_printf_i+0x10e>
9002b52a:	6821      	ldr	r1, [r4, #0]
9002b52c:	432e      	orrs	r6, r5
9002b52e:	f021 0104 	bic.w	r1, r1, #4
9002b532:	6021      	str	r1, [r4, #0]
9002b534:	d04b      	beq.n	9002b5ce <_printf_i+0x1a6>
9002b536:	4616      	mov	r6, r2
9002b538:	fbb5 f1f3 	udiv	r1, r5, r3
9002b53c:	fb03 5711 	mls	r7, r3, r1, r5
9002b540:	5dc7      	ldrb	r7, [r0, r7]
9002b542:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002b546:	462f      	mov	r7, r5
9002b548:	42bb      	cmp	r3, r7
9002b54a:	460d      	mov	r5, r1
9002b54c:	d9f4      	bls.n	9002b538 <_printf_i+0x110>
9002b54e:	2b08      	cmp	r3, #8
9002b550:	d10b      	bne.n	9002b56a <_printf_i+0x142>
9002b552:	6823      	ldr	r3, [r4, #0]
9002b554:	07df      	lsls	r7, r3, #31
9002b556:	d508      	bpl.n	9002b56a <_printf_i+0x142>
9002b558:	6923      	ldr	r3, [r4, #16]
9002b55a:	6861      	ldr	r1, [r4, #4]
9002b55c:	4299      	cmp	r1, r3
9002b55e:	bfde      	ittt	le
9002b560:	2330      	movle	r3, #48	@ 0x30
9002b562:	f806 3c01 	strble.w	r3, [r6, #-1]
9002b566:	f106 36ff 	addle.w	r6, r6, #4294967295
9002b56a:	1b92      	subs	r2, r2, r6
9002b56c:	6122      	str	r2, [r4, #16]
9002b56e:	f8cd a000 	str.w	sl, [sp]
9002b572:	464b      	mov	r3, r9
9002b574:	aa03      	add	r2, sp, #12
9002b576:	4621      	mov	r1, r4
9002b578:	4640      	mov	r0, r8
9002b57a:	f7ff fee7 	bl	9002b34c <_printf_common>
9002b57e:	3001      	adds	r0, #1
9002b580:	d14a      	bne.n	9002b618 <_printf_i+0x1f0>
9002b582:	f04f 30ff 	mov.w	r0, #4294967295
9002b586:	b004      	add	sp, #16
9002b588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002b58c:	6823      	ldr	r3, [r4, #0]
9002b58e:	f043 0320 	orr.w	r3, r3, #32
9002b592:	6023      	str	r3, [r4, #0]
9002b594:	4832      	ldr	r0, [pc, #200]	@ (9002b660 <_printf_i+0x238>)
9002b596:	2778      	movs	r7, #120	@ 0x78
9002b598:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002b59c:	6823      	ldr	r3, [r4, #0]
9002b59e:	6831      	ldr	r1, [r6, #0]
9002b5a0:	061f      	lsls	r7, r3, #24
9002b5a2:	f851 5b04 	ldr.w	r5, [r1], #4
9002b5a6:	d402      	bmi.n	9002b5ae <_printf_i+0x186>
9002b5a8:	065f      	lsls	r7, r3, #25
9002b5aa:	bf48      	it	mi
9002b5ac:	b2ad      	uxthmi	r5, r5
9002b5ae:	6031      	str	r1, [r6, #0]
9002b5b0:	07d9      	lsls	r1, r3, #31
9002b5b2:	bf44      	itt	mi
9002b5b4:	f043 0320 	orrmi.w	r3, r3, #32
9002b5b8:	6023      	strmi	r3, [r4, #0]
9002b5ba:	b11d      	cbz	r5, 9002b5c4 <_printf_i+0x19c>
9002b5bc:	2310      	movs	r3, #16
9002b5be:	e7ad      	b.n	9002b51c <_printf_i+0xf4>
9002b5c0:	4826      	ldr	r0, [pc, #152]	@ (9002b65c <_printf_i+0x234>)
9002b5c2:	e7e9      	b.n	9002b598 <_printf_i+0x170>
9002b5c4:	6823      	ldr	r3, [r4, #0]
9002b5c6:	f023 0320 	bic.w	r3, r3, #32
9002b5ca:	6023      	str	r3, [r4, #0]
9002b5cc:	e7f6      	b.n	9002b5bc <_printf_i+0x194>
9002b5ce:	4616      	mov	r6, r2
9002b5d0:	e7bd      	b.n	9002b54e <_printf_i+0x126>
9002b5d2:	6833      	ldr	r3, [r6, #0]
9002b5d4:	6825      	ldr	r5, [r4, #0]
9002b5d6:	6961      	ldr	r1, [r4, #20]
9002b5d8:	1d18      	adds	r0, r3, #4
9002b5da:	6030      	str	r0, [r6, #0]
9002b5dc:	062e      	lsls	r6, r5, #24
9002b5de:	681b      	ldr	r3, [r3, #0]
9002b5e0:	d501      	bpl.n	9002b5e6 <_printf_i+0x1be>
9002b5e2:	6019      	str	r1, [r3, #0]
9002b5e4:	e002      	b.n	9002b5ec <_printf_i+0x1c4>
9002b5e6:	0668      	lsls	r0, r5, #25
9002b5e8:	d5fb      	bpl.n	9002b5e2 <_printf_i+0x1ba>
9002b5ea:	8019      	strh	r1, [r3, #0]
9002b5ec:	2300      	movs	r3, #0
9002b5ee:	6123      	str	r3, [r4, #16]
9002b5f0:	4616      	mov	r6, r2
9002b5f2:	e7bc      	b.n	9002b56e <_printf_i+0x146>
9002b5f4:	6833      	ldr	r3, [r6, #0]
9002b5f6:	1d1a      	adds	r2, r3, #4
9002b5f8:	6032      	str	r2, [r6, #0]
9002b5fa:	681e      	ldr	r6, [r3, #0]
9002b5fc:	6862      	ldr	r2, [r4, #4]
9002b5fe:	2100      	movs	r1, #0
9002b600:	4630      	mov	r0, r6
9002b602:	f7d4 fe6d 	bl	900002e0 <memchr>
9002b606:	b108      	cbz	r0, 9002b60c <_printf_i+0x1e4>
9002b608:	1b80      	subs	r0, r0, r6
9002b60a:	6060      	str	r0, [r4, #4]
9002b60c:	6863      	ldr	r3, [r4, #4]
9002b60e:	6123      	str	r3, [r4, #16]
9002b610:	2300      	movs	r3, #0
9002b612:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b616:	e7aa      	b.n	9002b56e <_printf_i+0x146>
9002b618:	6923      	ldr	r3, [r4, #16]
9002b61a:	4632      	mov	r2, r6
9002b61c:	4649      	mov	r1, r9
9002b61e:	4640      	mov	r0, r8
9002b620:	47d0      	blx	sl
9002b622:	3001      	adds	r0, #1
9002b624:	d0ad      	beq.n	9002b582 <_printf_i+0x15a>
9002b626:	6823      	ldr	r3, [r4, #0]
9002b628:	079b      	lsls	r3, r3, #30
9002b62a:	d413      	bmi.n	9002b654 <_printf_i+0x22c>
9002b62c:	68e0      	ldr	r0, [r4, #12]
9002b62e:	9b03      	ldr	r3, [sp, #12]
9002b630:	4298      	cmp	r0, r3
9002b632:	bfb8      	it	lt
9002b634:	4618      	movlt	r0, r3
9002b636:	e7a6      	b.n	9002b586 <_printf_i+0x15e>
9002b638:	2301      	movs	r3, #1
9002b63a:	4632      	mov	r2, r6
9002b63c:	4649      	mov	r1, r9
9002b63e:	4640      	mov	r0, r8
9002b640:	47d0      	blx	sl
9002b642:	3001      	adds	r0, #1
9002b644:	d09d      	beq.n	9002b582 <_printf_i+0x15a>
9002b646:	3501      	adds	r5, #1
9002b648:	68e3      	ldr	r3, [r4, #12]
9002b64a:	9903      	ldr	r1, [sp, #12]
9002b64c:	1a5b      	subs	r3, r3, r1
9002b64e:	42ab      	cmp	r3, r5
9002b650:	dcf2      	bgt.n	9002b638 <_printf_i+0x210>
9002b652:	e7eb      	b.n	9002b62c <_printf_i+0x204>
9002b654:	2500      	movs	r5, #0
9002b656:	f104 0619 	add.w	r6, r4, #25
9002b65a:	e7f5      	b.n	9002b648 <_printf_i+0x220>
9002b65c:	9002ef85 	.word	0x9002ef85
9002b660:	9002ef96 	.word	0x9002ef96

9002b664 <__sflush_r>:
9002b664:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002b668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b66c:	0716      	lsls	r6, r2, #28
9002b66e:	4605      	mov	r5, r0
9002b670:	460c      	mov	r4, r1
9002b672:	d454      	bmi.n	9002b71e <__sflush_r+0xba>
9002b674:	684b      	ldr	r3, [r1, #4]
9002b676:	2b00      	cmp	r3, #0
9002b678:	dc02      	bgt.n	9002b680 <__sflush_r+0x1c>
9002b67a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002b67c:	2b00      	cmp	r3, #0
9002b67e:	dd48      	ble.n	9002b712 <__sflush_r+0xae>
9002b680:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b682:	2e00      	cmp	r6, #0
9002b684:	d045      	beq.n	9002b712 <__sflush_r+0xae>
9002b686:	2300      	movs	r3, #0
9002b688:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002b68c:	682f      	ldr	r7, [r5, #0]
9002b68e:	6a21      	ldr	r1, [r4, #32]
9002b690:	602b      	str	r3, [r5, #0]
9002b692:	d030      	beq.n	9002b6f6 <__sflush_r+0x92>
9002b694:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002b696:	89a3      	ldrh	r3, [r4, #12]
9002b698:	0759      	lsls	r1, r3, #29
9002b69a:	d505      	bpl.n	9002b6a8 <__sflush_r+0x44>
9002b69c:	6863      	ldr	r3, [r4, #4]
9002b69e:	1ad2      	subs	r2, r2, r3
9002b6a0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002b6a2:	b10b      	cbz	r3, 9002b6a8 <__sflush_r+0x44>
9002b6a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002b6a6:	1ad2      	subs	r2, r2, r3
9002b6a8:	2300      	movs	r3, #0
9002b6aa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b6ac:	6a21      	ldr	r1, [r4, #32]
9002b6ae:	4628      	mov	r0, r5
9002b6b0:	47b0      	blx	r6
9002b6b2:	1c43      	adds	r3, r0, #1
9002b6b4:	89a3      	ldrh	r3, [r4, #12]
9002b6b6:	d106      	bne.n	9002b6c6 <__sflush_r+0x62>
9002b6b8:	6829      	ldr	r1, [r5, #0]
9002b6ba:	291d      	cmp	r1, #29
9002b6bc:	d82b      	bhi.n	9002b716 <__sflush_r+0xb2>
9002b6be:	4a2a      	ldr	r2, [pc, #168]	@ (9002b768 <__sflush_r+0x104>)
9002b6c0:	40ca      	lsrs	r2, r1
9002b6c2:	07d6      	lsls	r6, r2, #31
9002b6c4:	d527      	bpl.n	9002b716 <__sflush_r+0xb2>
9002b6c6:	2200      	movs	r2, #0
9002b6c8:	6062      	str	r2, [r4, #4]
9002b6ca:	04d9      	lsls	r1, r3, #19
9002b6cc:	6922      	ldr	r2, [r4, #16]
9002b6ce:	6022      	str	r2, [r4, #0]
9002b6d0:	d504      	bpl.n	9002b6dc <__sflush_r+0x78>
9002b6d2:	1c42      	adds	r2, r0, #1
9002b6d4:	d101      	bne.n	9002b6da <__sflush_r+0x76>
9002b6d6:	682b      	ldr	r3, [r5, #0]
9002b6d8:	b903      	cbnz	r3, 9002b6dc <__sflush_r+0x78>
9002b6da:	6560      	str	r0, [r4, #84]	@ 0x54
9002b6dc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002b6de:	602f      	str	r7, [r5, #0]
9002b6e0:	b1b9      	cbz	r1, 9002b712 <__sflush_r+0xae>
9002b6e2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002b6e6:	4299      	cmp	r1, r3
9002b6e8:	d002      	beq.n	9002b6f0 <__sflush_r+0x8c>
9002b6ea:	4628      	mov	r0, r5
9002b6ec:	f7ff fca2 	bl	9002b034 <_free_r>
9002b6f0:	2300      	movs	r3, #0
9002b6f2:	6363      	str	r3, [r4, #52]	@ 0x34
9002b6f4:	e00d      	b.n	9002b712 <__sflush_r+0xae>
9002b6f6:	2301      	movs	r3, #1
9002b6f8:	4628      	mov	r0, r5
9002b6fa:	47b0      	blx	r6
9002b6fc:	4602      	mov	r2, r0
9002b6fe:	1c50      	adds	r0, r2, #1
9002b700:	d1c9      	bne.n	9002b696 <__sflush_r+0x32>
9002b702:	682b      	ldr	r3, [r5, #0]
9002b704:	2b00      	cmp	r3, #0
9002b706:	d0c6      	beq.n	9002b696 <__sflush_r+0x32>
9002b708:	2b1d      	cmp	r3, #29
9002b70a:	d001      	beq.n	9002b710 <__sflush_r+0xac>
9002b70c:	2b16      	cmp	r3, #22
9002b70e:	d11e      	bne.n	9002b74e <__sflush_r+0xea>
9002b710:	602f      	str	r7, [r5, #0]
9002b712:	2000      	movs	r0, #0
9002b714:	e022      	b.n	9002b75c <__sflush_r+0xf8>
9002b716:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b71a:	b21b      	sxth	r3, r3
9002b71c:	e01b      	b.n	9002b756 <__sflush_r+0xf2>
9002b71e:	690f      	ldr	r7, [r1, #16]
9002b720:	2f00      	cmp	r7, #0
9002b722:	d0f6      	beq.n	9002b712 <__sflush_r+0xae>
9002b724:	0793      	lsls	r3, r2, #30
9002b726:	680e      	ldr	r6, [r1, #0]
9002b728:	bf08      	it	eq
9002b72a:	694b      	ldreq	r3, [r1, #20]
9002b72c:	600f      	str	r7, [r1, #0]
9002b72e:	bf18      	it	ne
9002b730:	2300      	movne	r3, #0
9002b732:	eba6 0807 	sub.w	r8, r6, r7
9002b736:	608b      	str	r3, [r1, #8]
9002b738:	f1b8 0f00 	cmp.w	r8, #0
9002b73c:	dde9      	ble.n	9002b712 <__sflush_r+0xae>
9002b73e:	6a21      	ldr	r1, [r4, #32]
9002b740:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002b742:	4643      	mov	r3, r8
9002b744:	463a      	mov	r2, r7
9002b746:	4628      	mov	r0, r5
9002b748:	47b0      	blx	r6
9002b74a:	2800      	cmp	r0, #0
9002b74c:	dc08      	bgt.n	9002b760 <__sflush_r+0xfc>
9002b74e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b752:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b756:	81a3      	strh	r3, [r4, #12]
9002b758:	f04f 30ff 	mov.w	r0, #4294967295
9002b75c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b760:	4407      	add	r7, r0
9002b762:	eba8 0800 	sub.w	r8, r8, r0
9002b766:	e7e7      	b.n	9002b738 <__sflush_r+0xd4>
9002b768:	20400001 	.word	0x20400001

9002b76c <_fflush_r>:
9002b76c:	b538      	push	{r3, r4, r5, lr}
9002b76e:	690b      	ldr	r3, [r1, #16]
9002b770:	4605      	mov	r5, r0
9002b772:	460c      	mov	r4, r1
9002b774:	b913      	cbnz	r3, 9002b77c <_fflush_r+0x10>
9002b776:	2500      	movs	r5, #0
9002b778:	4628      	mov	r0, r5
9002b77a:	bd38      	pop	{r3, r4, r5, pc}
9002b77c:	b118      	cbz	r0, 9002b786 <_fflush_r+0x1a>
9002b77e:	6a03      	ldr	r3, [r0, #32]
9002b780:	b90b      	cbnz	r3, 9002b786 <_fflush_r+0x1a>
9002b782:	f7ff f9d1 	bl	9002ab28 <__sinit>
9002b786:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b78a:	2b00      	cmp	r3, #0
9002b78c:	d0f3      	beq.n	9002b776 <_fflush_r+0xa>
9002b78e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002b790:	07d0      	lsls	r0, r2, #31
9002b792:	d404      	bmi.n	9002b79e <_fflush_r+0x32>
9002b794:	0599      	lsls	r1, r3, #22
9002b796:	d402      	bmi.n	9002b79e <_fflush_r+0x32>
9002b798:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b79a:	f7ff fbde 	bl	9002af5a <__retarget_lock_acquire_recursive>
9002b79e:	4628      	mov	r0, r5
9002b7a0:	4621      	mov	r1, r4
9002b7a2:	f7ff ff5f 	bl	9002b664 <__sflush_r>
9002b7a6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002b7a8:	07da      	lsls	r2, r3, #31
9002b7aa:	4605      	mov	r5, r0
9002b7ac:	d4e4      	bmi.n	9002b778 <_fflush_r+0xc>
9002b7ae:	89a3      	ldrh	r3, [r4, #12]
9002b7b0:	059b      	lsls	r3, r3, #22
9002b7b2:	d4e1      	bmi.n	9002b778 <_fflush_r+0xc>
9002b7b4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b7b6:	f7ff fbd1 	bl	9002af5c <__retarget_lock_release_recursive>
9002b7ba:	e7dd      	b.n	9002b778 <_fflush_r+0xc>

9002b7bc <__swhatbuf_r>:
9002b7bc:	b570      	push	{r4, r5, r6, lr}
9002b7be:	460c      	mov	r4, r1
9002b7c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b7c4:	2900      	cmp	r1, #0
9002b7c6:	b096      	sub	sp, #88	@ 0x58
9002b7c8:	4615      	mov	r5, r2
9002b7ca:	461e      	mov	r6, r3
9002b7cc:	da0d      	bge.n	9002b7ea <__swhatbuf_r+0x2e>
9002b7ce:	89a3      	ldrh	r3, [r4, #12]
9002b7d0:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002b7d4:	f04f 0100 	mov.w	r1, #0
9002b7d8:	bf14      	ite	ne
9002b7da:	2340      	movne	r3, #64	@ 0x40
9002b7dc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002b7e0:	2000      	movs	r0, #0
9002b7e2:	6031      	str	r1, [r6, #0]
9002b7e4:	602b      	str	r3, [r5, #0]
9002b7e6:	b016      	add	sp, #88	@ 0x58
9002b7e8:	bd70      	pop	{r4, r5, r6, pc}
9002b7ea:	466a      	mov	r2, sp
9002b7ec:	f000 f848 	bl	9002b880 <_fstat_r>
9002b7f0:	2800      	cmp	r0, #0
9002b7f2:	dbec      	blt.n	9002b7ce <__swhatbuf_r+0x12>
9002b7f4:	9901      	ldr	r1, [sp, #4]
9002b7f6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002b7fa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002b7fe:	4259      	negs	r1, r3
9002b800:	4159      	adcs	r1, r3
9002b802:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002b806:	e7eb      	b.n	9002b7e0 <__swhatbuf_r+0x24>

9002b808 <__smakebuf_r>:
9002b808:	898b      	ldrh	r3, [r1, #12]
9002b80a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002b80c:	079d      	lsls	r5, r3, #30
9002b80e:	4606      	mov	r6, r0
9002b810:	460c      	mov	r4, r1
9002b812:	d507      	bpl.n	9002b824 <__smakebuf_r+0x1c>
9002b814:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002b818:	6023      	str	r3, [r4, #0]
9002b81a:	6123      	str	r3, [r4, #16]
9002b81c:	2301      	movs	r3, #1
9002b81e:	6163      	str	r3, [r4, #20]
9002b820:	b003      	add	sp, #12
9002b822:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b824:	ab01      	add	r3, sp, #4
9002b826:	466a      	mov	r2, sp
9002b828:	f7ff ffc8 	bl	9002b7bc <__swhatbuf_r>
9002b82c:	9f00      	ldr	r7, [sp, #0]
9002b82e:	4605      	mov	r5, r0
9002b830:	4639      	mov	r1, r7
9002b832:	4630      	mov	r0, r6
9002b834:	f7ff f852 	bl	9002a8dc <_malloc_r>
9002b838:	b948      	cbnz	r0, 9002b84e <__smakebuf_r+0x46>
9002b83a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b83e:	059a      	lsls	r2, r3, #22
9002b840:	d4ee      	bmi.n	9002b820 <__smakebuf_r+0x18>
9002b842:	f023 0303 	bic.w	r3, r3, #3
9002b846:	f043 0302 	orr.w	r3, r3, #2
9002b84a:	81a3      	strh	r3, [r4, #12]
9002b84c:	e7e2      	b.n	9002b814 <__smakebuf_r+0xc>
9002b84e:	89a3      	ldrh	r3, [r4, #12]
9002b850:	6020      	str	r0, [r4, #0]
9002b852:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002b856:	81a3      	strh	r3, [r4, #12]
9002b858:	9b01      	ldr	r3, [sp, #4]
9002b85a:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002b85e:	b15b      	cbz	r3, 9002b878 <__smakebuf_r+0x70>
9002b860:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002b864:	4630      	mov	r0, r6
9002b866:	f000 f81d 	bl	9002b8a4 <_isatty_r>
9002b86a:	b128      	cbz	r0, 9002b878 <__smakebuf_r+0x70>
9002b86c:	89a3      	ldrh	r3, [r4, #12]
9002b86e:	f023 0303 	bic.w	r3, r3, #3
9002b872:	f043 0301 	orr.w	r3, r3, #1
9002b876:	81a3      	strh	r3, [r4, #12]
9002b878:	89a3      	ldrh	r3, [r4, #12]
9002b87a:	431d      	orrs	r5, r3
9002b87c:	81a5      	strh	r5, [r4, #12]
9002b87e:	e7cf      	b.n	9002b820 <__smakebuf_r+0x18>

9002b880 <_fstat_r>:
9002b880:	b538      	push	{r3, r4, r5, lr}
9002b882:	4d07      	ldr	r5, [pc, #28]	@ (9002b8a0 <_fstat_r+0x20>)
9002b884:	2300      	movs	r3, #0
9002b886:	4604      	mov	r4, r0
9002b888:	4608      	mov	r0, r1
9002b88a:	4611      	mov	r1, r2
9002b88c:	602b      	str	r3, [r5, #0]
9002b88e:	f7d9 fd5f 	bl	90005350 <_fstat>
9002b892:	1c43      	adds	r3, r0, #1
9002b894:	d102      	bne.n	9002b89c <_fstat_r+0x1c>
9002b896:	682b      	ldr	r3, [r5, #0]
9002b898:	b103      	cbz	r3, 9002b89c <_fstat_r+0x1c>
9002b89a:	6023      	str	r3, [r4, #0]
9002b89c:	bd38      	pop	{r3, r4, r5, pc}
9002b89e:	bf00      	nop
9002b8a0:	24022904 	.word	0x24022904

9002b8a4 <_isatty_r>:
9002b8a4:	b538      	push	{r3, r4, r5, lr}
9002b8a6:	4d06      	ldr	r5, [pc, #24]	@ (9002b8c0 <_isatty_r+0x1c>)
9002b8a8:	2300      	movs	r3, #0
9002b8aa:	4604      	mov	r4, r0
9002b8ac:	4608      	mov	r0, r1
9002b8ae:	602b      	str	r3, [r5, #0]
9002b8b0:	f7d9 fd54 	bl	9000535c <_isatty>
9002b8b4:	1c43      	adds	r3, r0, #1
9002b8b6:	d102      	bne.n	9002b8be <_isatty_r+0x1a>
9002b8b8:	682b      	ldr	r3, [r5, #0]
9002b8ba:	b103      	cbz	r3, 9002b8be <_isatty_r+0x1a>
9002b8bc:	6023      	str	r3, [r4, #0]
9002b8be:	bd38      	pop	{r3, r4, r5, pc}
9002b8c0:	24022904 	.word	0x24022904

9002b8c4 <_init>:
9002b8c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b8c6:	bf00      	nop
9002b8c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b8ca:	bc08      	pop	{r3}
9002b8cc:	469e      	mov	lr, r3
9002b8ce:	4770      	bx	lr

9002b8d0 <_fini>:
9002b8d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b8d2:	bf00      	nop
9002b8d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b8d6:	bc08      	pop	{r3}
9002b8d8:	469e      	mov	lr, r3
9002b8da:	4770      	bx	lr
