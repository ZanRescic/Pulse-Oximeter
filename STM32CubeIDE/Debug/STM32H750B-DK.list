
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a420  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000035dc  9002a6c0  9002a6c0  0002e6c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  9002dc9c  9002dc9c  00031c9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002dcc4  9002dcc4  0005f374  2**0
                  CONTENTS
  6 .ARM          00000008  9002dcc4  9002dcc4  00031cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002dccc  9002dccc  0005f374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002dccc  9002dccc  00031ccc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002dce4  9002dce4  00031ce4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002dcec  00032000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9002de54  00032180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90030b54  00034e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90033854  00037b80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90033954  00037c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001c94c  24005d80  90033a54  00037d80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  240226cc  90033a54  000386cc  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  0005f374  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00001554  90200000  90200000  00038000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 000000a8  90201554  90201554  00039554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 00025d78  902015fc  902015fc  000395fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00060000  2**2
                  ALLOC
 22 .debug_line   000773e6  00000000  00000000  0005f3a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000007b  00000000  00000000  000d6788  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000e2a1c  00000000  00000000  000d6803  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 00018306  00000000  00000000  001b921f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003778  00000000  00000000  001d1528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a7af6  00000000  00000000  001d4ca0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 000067be  00000000  00000000  0037c796  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004aa6d  00000000  00000000  00382f54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003cd9c1  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000aa30  00000000  00000000  003cda84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 00037a8f  00000000  00000000  003d84b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002a6a8 	.word	0x9002a6a8

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002a6a8 	.word	0x9002a6a8

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f006 f9af 	bl	90006e50 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f029 f8ff 	bl	90029cf4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f002 fea7 	bl	90003848 <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	9002dcec 	.word	0x9002dcec
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	240226cc 	.word	0x240226cc

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b1c:	4770      	bx	lr
90000b1e:	bf00      	nop

90000b20 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b20:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b22:	f002 f915 	bl	90002d50 <touchgfx_components_init>
    touchgfx_init();
}
90000b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b2a:	f002 b893 	b.w	90002c54 <touchgfx_init>
90000b2e:	bf00      	nop

90000b30 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b30:	f002 b910 	b.w	90002d54 <touchgfx_taskEntry>

90000b34 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b34:	6840      	ldr	r0, [r0, #4]
    }
90000b36:	4770      	bx	lr

90000b38 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b38:	6041      	str	r1, [r0, #4]
    }
90000b3a:	4770      	bx	lr

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b3c:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b40:	4b08      	ldr	r3, [pc, #32]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b42:	4a09      	ldr	r2, [pc, #36]	@ (90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b44:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b48:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b4c:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b50:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b54:	430a      	orrs	r2, r1
90000b56:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b5a:	681a      	ldr	r2, [r3, #0]
90000b5c:	f042 0201 	orr.w	r2, r2, #1
90000b60:	601a      	str	r2, [r3, #0]
}
90000b62:	4770      	bx	lr
90000b64:	e0001000 	.word	0xe0001000
90000b68:	c5acce55 	.word	0xc5acce55

90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b6c:	1a52      	subs	r2, r2, r1
90000b6e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b72:	fbb2 f0f3 	udiv	r0, r2, r3
90000b76:	4770      	bx	lr

90000b78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b78:	4b01      	ldr	r3, [pc, #4]	@ (90000b80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b7a:	6858      	ldr	r0, [r3, #4]
}
90000b7c:	4770      	bx	lr
90000b7e:	bf00      	nop
90000b80:	e0001000 	.word	0xe0001000

90000b84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b84:	4770      	bx	lr
90000b86:	bf00      	nop

90000b88 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b88:	b510      	push	{r4, lr}
90000b8a:	4604      	mov	r4, r0
90000b8c:	210c      	movs	r1, #12
90000b8e:	f028 f9e5 	bl	90028f5c <_ZdlPvj>
90000b92:	4620      	mov	r0, r4
90000b94:	bd10      	pop	{r4, pc}
90000b96:	bf00      	nop

90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b98:	6803      	ldr	r3, [r0, #0]
90000b9a:	4a0c      	ldr	r2, [pc, #48]	@ (90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b9c:	691b      	ldr	r3, [r3, #16]
{
90000b9e:	b510      	push	{r4, lr}
90000ba0:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000ba2:	b149      	cbz	r1, 90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ba4:	4293      	cmp	r3, r2
90000ba6:	d10d      	bne.n	90000bc4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000ba8:	4b09      	ldr	r3, [pc, #36]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000baa:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bac:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bae:	6863      	ldr	r3, [r4, #4]
90000bb0:	1a9b      	subs	r3, r3, r2
90000bb2:	4403      	add	r3, r0
90000bb4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bb6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bb8:	4293      	cmp	r3, r2
90000bba:	d105      	bne.n	90000bc8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bbc:	4b04      	ldr	r3, [pc, #16]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bbe:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000bc0:	60a0      	str	r0, [r4, #8]
}
90000bc2:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc4:	4798      	blx	r3
90000bc6:	e7f1      	b.n	90000bac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bc8:	4798      	blx	r3
90000bca:	e7f9      	b.n	90000bc0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bcc:	90000b79 	.word	0x90000b79
90000bd0:	e0001000 	.word	0xe0001000

90000bd4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bd4:	4770      	bx	lr
90000bd6:	bf00      	nop

90000bd8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000bd8:	b500      	push	{lr}
90000bda:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000bdc:	2208      	movs	r2, #8
90000bde:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000be0:	2000      	movs	r0, #0
90000be2:	4669      	mov	r1, sp
    hTS.Width = 480;
90000be4:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c00 <_ZN20STM32TouchController4initEv+0x28>
90000be8:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000bec:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000bf0:	f006 f840 	bl	90006c74 <BSP_TS_Init>
}
90000bf4:	b005      	add	sp, #20
90000bf6:	f85d fb04 	ldr.w	pc, [sp], #4
90000bfa:	bf00      	nop
90000bfc:	f3af 8000 	nop.w
90000c00:	000001e0 	.word	0x000001e0
90000c04:	00000110 	.word	0x00000110

90000c08 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c08:	b530      	push	{r4, r5, lr}
90000c0a:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c0c:	2000      	movs	r0, #0
{
90000c0e:	460d      	mov	r5, r1
90000c10:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c12:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c14:	9001      	str	r0, [sp, #4]
90000c16:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c1a:	f006 f8b9 	bl	90006d90 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c1e:	9801      	ldr	r0, [sp, #4]
90000c20:	b120      	cbz	r0, 90000c2c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c22:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c28:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c2a:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c2c:	b005      	add	sp, #20
90000c2e:	bd30      	pop	{r4, r5, pc}

90000c30 <_ZN20STM32TouchControllerD0Ev>:
90000c30:	b510      	push	{r4, lr}
90000c32:	4604      	mov	r4, r0
90000c34:	2104      	movs	r1, #4
90000c36:	f028 f991 	bl	90028f5c <_ZdlPvj>
90000c3a:	4620      	mov	r0, r4
90000c3c:	bd10      	pop	{r4, pc}
90000c3e:	bf00      	nop

90000c40 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c40:	2108      	movs	r1, #8
90000c42:	4810      	ldr	r0, [pc, #64]	@ (90000c84 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000c44:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c46:	f006 ff33 	bl	90007ab0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c4a:	2801      	cmp	r0, #1
90000c4c:	d101      	bne.n	90000c52 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c4e:	4b0e      	ldr	r3, [pc, #56]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c50:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c52:	2180      	movs	r1, #128	@ 0x80
90000c54:	480d      	ldr	r0, [pc, #52]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c56:	f006 ff2b 	bl	90007ab0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c5a:	2801      	cmp	r0, #1
90000c5c:	d101      	bne.n	90000c62 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c5e:	4b0a      	ldr	r3, [pc, #40]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c60:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c62:	2140      	movs	r1, #64	@ 0x40
90000c64:	4809      	ldr	r0, [pc, #36]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c66:	f006 ff23 	bl	90007ab0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c6a:	2801      	cmp	r0, #1
90000c6c:	d101      	bne.n	90000c72 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000c6e:	4b06      	ldr	r3, [pc, #24]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c70:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c72:	2140      	movs	r1, #64	@ 0x40
90000c74:	4806      	ldr	r0, [pc, #24]	@ (90000c90 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000c76:	f006 ff1b 	bl	90007ab0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c7a:	2801      	cmp	r0, #1
90000c7c:	d101      	bne.n	90000c82 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
90000c7e:	4b02      	ldr	r3, [pc, #8]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c80:	60d8      	str	r0, [r3, #12]
}
90000c82:	bd08      	pop	{r3, pc}
90000c84:	58021800 	.word	0x58021800
90000c88:	24005d9c 	.word	0x24005d9c
90000c8c:	58020400 	.word	0x58020400
90000c90:	58020000 	.word	0x58020000

90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c94:	2803      	cmp	r0, #3
90000c96:	d827      	bhi.n	90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c98:	e8df f000 	tbb	[pc, r0]
90000c9c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000ca0:	4b12      	ldr	r3, [pc, #72]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000ca2:	2140      	movs	r1, #64	@ 0x40
90000ca4:	4812      	ldr	r0, [pc, #72]	@ (90000cf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000ca6:	68da      	ldr	r2, [r3, #12]
90000ca8:	fab2 f282 	clz	r2, r2
90000cac:	0952      	lsrs	r2, r2, #5
90000cae:	f006 bf05 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000cb2:	4b0e      	ldr	r3, [pc, #56]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cb4:	2140      	movs	r1, #64	@ 0x40
90000cb6:	480f      	ldr	r0, [pc, #60]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cb8:	689a      	ldr	r2, [r3, #8]
90000cba:	fab2 f282 	clz	r2, r2
90000cbe:	0952      	lsrs	r2, r2, #5
90000cc0:	f006 befc 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000cc4:	4b09      	ldr	r3, [pc, #36]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cc6:	2180      	movs	r1, #128	@ 0x80
90000cc8:	480a      	ldr	r0, [pc, #40]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cca:	685a      	ldr	r2, [r3, #4]
90000ccc:	fab2 f282 	clz	r2, r2
90000cd0:	0952      	lsrs	r2, r2, #5
90000cd2:	f006 bef3 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cd6:	4b05      	ldr	r3, [pc, #20]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cd8:	2108      	movs	r1, #8
90000cda:	4807      	ldr	r0, [pc, #28]	@ (90000cf8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000cdc:	681a      	ldr	r2, [r3, #0]
90000cde:	fab2 f282 	clz	r2, r2
90000ce2:	0952      	lsrs	r2, r2, #5
90000ce4:	f006 beea 	b.w	90007abc <HAL_GPIO_WritePin>
}
90000ce8:	4770      	bx	lr
90000cea:	bf00      	nop
90000cec:	24005d9c 	.word	0x24005d9c
90000cf0:	58020000 	.word	0x58020000
90000cf4:	58020400 	.word	0x58020400
90000cf8:	58021800 	.word	0x58021800

90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cfc:	2803      	cmp	r0, #3
90000cfe:	d827      	bhi.n	90000d50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000d00:	e8df f000 	tbb	[pc, r0]
90000d04:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000d08:	4b12      	ldr	r3, [pc, #72]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d0a:	2140      	movs	r1, #64	@ 0x40
90000d0c:	4812      	ldr	r0, [pc, #72]	@ (90000d58 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000d0e:	68da      	ldr	r2, [r3, #12]
90000d10:	3a00      	subs	r2, #0
90000d12:	bf18      	it	ne
90000d14:	2201      	movne	r2, #1
90000d16:	f006 bed1 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d1a:	4b0e      	ldr	r3, [pc, #56]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d1c:	2140      	movs	r1, #64	@ 0x40
90000d1e:	480f      	ldr	r0, [pc, #60]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d20:	689a      	ldr	r2, [r3, #8]
90000d22:	3a00      	subs	r2, #0
90000d24:	bf18      	it	ne
90000d26:	2201      	movne	r2, #1
90000d28:	f006 bec8 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000d2c:	4b09      	ldr	r3, [pc, #36]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d2e:	2180      	movs	r1, #128	@ 0x80
90000d30:	480a      	ldr	r0, [pc, #40]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d32:	685a      	ldr	r2, [r3, #4]
90000d34:	3a00      	subs	r2, #0
90000d36:	bf18      	it	ne
90000d38:	2201      	movne	r2, #1
90000d3a:	f006 bebf 	b.w	90007abc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d3e:	4b05      	ldr	r3, [pc, #20]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d40:	2108      	movs	r1, #8
90000d42:	4807      	ldr	r0, [pc, #28]	@ (90000d60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d44:	681a      	ldr	r2, [r3, #0]
90000d46:	3a00      	subs	r2, #0
90000d48:	bf18      	it	ne
90000d4a:	2201      	movne	r2, #1
90000d4c:	f006 beb6 	b.w	90007abc <HAL_GPIO_WritePin>
}
90000d50:	4770      	bx	lr
90000d52:	bf00      	nop
90000d54:	24005d9c 	.word	0x24005d9c
90000d58:	58020000 	.word	0x58020000
90000d5c:	58020400 	.word	0x58020400
90000d60:	58021800 	.word	0x58021800

90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d64:	2803      	cmp	r0, #3
90000d66:	d813      	bhi.n	90000d90 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d68:	e8df f000 	tbb	[pc, r0]
90000d6c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d70:	2140      	movs	r1, #64	@ 0x40
90000d72:	4808      	ldr	r0, [pc, #32]	@ (90000d94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d74:	f006 bea6 	b.w	90007ac4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d78:	2140      	movs	r1, #64	@ 0x40
90000d7a:	4807      	ldr	r0, [pc, #28]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d7c:	f006 bea2 	b.w	90007ac4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d80:	2180      	movs	r1, #128	@ 0x80
90000d82:	4805      	ldr	r0, [pc, #20]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d84:	f006 be9e 	b.w	90007ac4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d88:	2108      	movs	r1, #8
90000d8a:	4804      	ldr	r0, [pc, #16]	@ (90000d9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d8c:	f006 be9a 	b.w	90007ac4 <HAL_GPIO_TogglePin>
}
90000d90:	4770      	bx	lr
90000d92:	bf00      	nop
90000d94:	58020000 	.word	0x58020000
90000d98:	58020400 	.word	0x58020400
90000d9c:	58021800 	.word	0x58021800

90000da0 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000da0:	2000      	movs	r0, #0
90000da2:	4770      	bx	lr

90000da4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000da4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000da6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000daa:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000dae:	4770      	bx	lr

90000db0 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000db0:	4770      	bx	lr
90000db2:	bf00      	nop

90000db4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000db4:	2000      	movs	r0, #0
90000db6:	4770      	bx	lr

90000db8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000db8:	1e0a      	subs	r2, r1, #0
90000dba:	4b03      	ldr	r3, [pc, #12]	@ (90000dc8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000dbc:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000dbe:	bf18      	it	ne
90000dc0:	2201      	movne	r2, #1
90000dc2:	701a      	strb	r2, [r3, #0]
    }
90000dc4:	4770      	bx	lr
90000dc6:	bf00      	nop
90000dc8:	2402198b 	.word	0x2402198b

90000dcc <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000dcc:	4770      	bx	lr
90000dce:	bf00      	nop

90000dd0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000dd0:	2000      	movs	r0, #0
90000dd2:	4770      	bx	lr

90000dd4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000dd4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000dd6:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000dd8:	b103      	cbz	r3, 90000ddc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000dda:	4718      	bx	r3
        }
    }
90000ddc:	4770      	bx	lr
90000dde:	bf00      	nop

90000de0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000de0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000de4:	4770      	bx	lr
90000de6:	bf00      	nop

90000de8 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000de8:	4770      	bx	lr
90000dea:	bf00      	nop

90000dec <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000dec:	4770      	bx	lr
90000dee:	bf00      	nop

90000df0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000df0:	4770      	bx	lr
90000df2:	bf00      	nop

90000df4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000df4:	b510      	push	{r4, lr}
90000df6:	4604      	mov	r4, r0
        swapFrameBuffers();
90000df8:	f010 f93a 	bl	90011070 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000dfc:	6823      	ldr	r3, [r4, #0]
90000dfe:	4620      	mov	r0, r4
90000e00:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000e08:	4718      	bx	r3
90000e0a:	bf00      	nop

90000e0c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000e0c:	f002 b8c6 	b.w	90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000e10 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000e10:	f002 b8ca 	b.w	90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000e14 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000e14:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000e16:	f002 f961 	bl	900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000e1a:	4812      	ldr	r0, [pc, #72]	@ (90000e64 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000e1c:	2300      	movs	r3, #0
90000e1e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000e22:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000e26:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e2a:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e2e:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e32:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000e36:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e3a:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e3e:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e40:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e44:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e46:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e4a:	1c5a      	adds	r2, r3, #1
90000e4c:	d1f8      	bne.n	90000e40 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e4e:	f1ac 0c20 	sub.w	ip, ip, #32
90000e52:	f11c 0f20 	cmn.w	ip, #32
90000e56:	d1f0      	bne.n	90000e3a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e5c:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e60:	bd10      	pop	{r4, pc}
90000e62:	bf00      	nop
90000e64:	e000ed00 	.word	0xe000ed00

90000e68 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e68:	f002 b874 	b.w	90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e6c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e6c:	f002 b9ba 	b.w	900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e70 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e70:	f002 b9a4 	b.w	900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e74 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e74:	f002 b878 	b.w	90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e78:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e7a:	4b09      	ldr	r3, [pc, #36]	@ (90000ea0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e7c:	881b      	ldrh	r3, [r3, #0]
90000e7e:	428b      	cmp	r3, r1
90000e80:	d808      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e82:	4b08      	ldr	r3, [pc, #32]	@ (90000ea4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e84:	881b      	ldrh	r3, [r3, #0]
90000e86:	4293      	cmp	r3, r2
90000e88:	d804      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e8a:	4807      	ldr	r0, [pc, #28]	@ (90000ea8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e8c:	4b07      	ldr	r3, [pc, #28]	@ (90000eac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e8e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e90:	801a      	strh	r2, [r3, #0]
    }
90000e92:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e94:	4b06      	ldr	r3, [pc, #24]	@ (90000eb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e96:	21a3      	movs	r1, #163	@ 0xa3
90000e98:	4a06      	ldr	r2, [pc, #24]	@ (90000eb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e9a:	4807      	ldr	r0, [pc, #28]	@ (90000eb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e9c:	f028 fbd4 	bl	90029648 <__assert_func>
90000ea0:	24021980 	.word	0x24021980
90000ea4:	24021982 	.word	0x24021982
90000ea8:	24021986 	.word	0x24021986
90000eac:	24021988 	.word	0x24021988
90000eb0:	9002a740 	.word	0x9002a740
90000eb4:	9002a7a4 	.word	0x9002a7a4
90000eb8:	9002a7e8 	.word	0x9002a7e8

90000ebc <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000ebc:	f00f bc24 	b.w	90010708 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000ec0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000ec0:	f00f baea 	b.w	90010498 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000ec4 <_ZN11TouchGFXHALD0Ev>:
90000ec4:	b510      	push	{r4, lr}
90000ec6:	4604      	mov	r4, r0
90000ec8:	2190      	movs	r1, #144	@ 0x90
90000eca:	f028 f847 	bl	90028f5c <_ZdlPvj>
90000ece:	4620      	mov	r0, r4
90000ed0:	bd10      	pop	{r4, pc}
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000ed4:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000ed8:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000edc:	4b0b      	ldr	r3, [pc, #44]	@ (90000f0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000ede:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000ee0:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000ee2:	d00b      	beq.n	90000efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ee4:	b94a      	cbnz	r2, 90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ee6:	4a0a      	ldr	r2, [pc, #40]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000ee8:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eec:	4909      	ldr	r1, [pc, #36]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eee:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000ef0:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef4:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000ef6:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef8:	8013      	strh	r3, [r2, #0]
    }
90000efa:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000efc:	2a00      	cmp	r2, #0
90000efe:	d0fc      	beq.n	90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000f00:	4a03      	ldr	r2, [pc, #12]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000f02:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000f06:	4903      	ldr	r1, [pc, #12]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000f08:	e7f1      	b.n	90000eee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000f0a:	bf00      	nop
90000f0c:	24021984 	.word	0x24021984
90000f10:	24021982 	.word	0x24021982
90000f14:	24021980 	.word	0x24021980

90000f18 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000f18:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000f1a:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000f1e:	b118      	cbz	r0, 90000f28 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000f20:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000f22:	6803      	ldr	r3, [r0, #0]
90000f24:	681b      	ldr	r3, [r3, #0]
90000f26:	4718      	bx	r3
    }
90000f28:	4770      	bx	lr
90000f2a:	bf00      	nop

90000f2c <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000f2c:	6840      	ldr	r0, [r0, #4]
90000f2e:	4a04      	ldr	r2, [pc, #16]	@ (90000f40 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000f30:	6803      	ldr	r3, [r0, #0]
90000f32:	699b      	ldr	r3, [r3, #24]
90000f34:	4293      	cmp	r3, r2
90000f36:	d101      	bne.n	90000f3c <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000f38:	2000      	movs	r0, #0
90000f3a:	4770      	bx	lr
        return dma.getDMAType();
90000f3c:	4718      	bx	r3
90000f3e:	bf00      	nop
90000f40:	90000da1 	.word	0x90000da1

90000f44 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f44:	b538      	push	{r3, r4, r5, lr}
90000f46:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f48:	f002 face 	bl	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f4c:	4a0b      	ldr	r2, [pc, #44]	@ (90000f7c <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f4e:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	490b      	ldr	r1, [pc, #44]	@ (90000f80 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f52:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000f56:	4293      	cmp	r3, r2
90000f58:	d10d      	bne.n	90000f76 <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f5a:	4b0a      	ldr	r3, [pc, #40]	@ (90000f84 <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f5c:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f5e:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f60:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f62:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000f66:	4628      	mov	r0, r5
90000f68:	f7ff fde8 	bl	90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f6c:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f6e:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f70:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f74:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f76:	4620      	mov	r0, r4
90000f78:	4798      	blx	r3
90000f7a:	e7f2      	b.n	90000f62 <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f7c:	90000db9 	.word	0x90000db9
90000f80:	d0000000 	.word	0xd0000000
90000f84:	2402198b 	.word	0x2402198b

90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f88:	b1a9      	cbz	r1, 90000fb6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f8a:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f8c:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f8e:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f90:	bf18      	it	ne
90000f92:	2201      	movne	r2, #1
90000f94:	490c      	ldr	r1, [pc, #48]	@ (90000fc8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f96:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f98:	6802      	ldr	r2, [r0, #0]
90000f9a:	490c      	ldr	r1, [pc, #48]	@ (90000fcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f9c:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000fa0:	428a      	cmp	r2, r1
90000fa2:	d106      	bne.n	90000fb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000fa4:	1e19      	subs	r1, r3, #0
90000fa6:	4a0a      	ldr	r2, [pc, #40]	@ (90000fd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000fa8:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000faa:	bf18      	it	ne
90000fac:	2101      	movne	r1, #1
90000fae:	7011      	strb	r1, [r2, #0]
90000fb0:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000fb2:	4619      	mov	r1, r3
90000fb4:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fb6:	4b07      	ldr	r3, [pc, #28]	@ (90000fd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000fb8:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000fbc:	4a06      	ldr	r2, [pc, #24]	@ (90000fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000fbe:	4807      	ldr	r0, [pc, #28]	@ (90000fdc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000fc0:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fc2:	f028 fb41 	bl	90029648 <__assert_func>
90000fc6:	bf00      	nop
90000fc8:	2402198a 	.word	0x2402198a
90000fcc:	90000db9 	.word	0x90000db9
90000fd0:	2402198b 	.word	0x2402198b
90000fd4:	9002a830 	.word	0x9002a830
90000fd8:	9002a868 	.word	0x9002a868
90000fdc:	9002a7e8 	.word	0x9002a7e8

90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000fe0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000fe2:	6803      	ldr	r3, [r0, #0]
{
90000fe4:	4604      	mov	r4, r0
90000fe6:	4d14      	ldr	r5, [pc, #80]	@ (90001038 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fe8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000fec:	4798      	blx	r3
    enableInterrupts();
90000fee:	6823      	ldr	r3, [r4, #0]
90000ff0:	4620      	mov	r0, r4
90000ff2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000ff4:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000ff6:	f001 f9f1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000ffa:	6823      	ldr	r3, [r4, #0]
90000ffc:	4620      	mov	r0, r4
90000ffe:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001000:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90001002:	2201      	movs	r2, #1
90001004:	2180      	movs	r1, #128	@ 0x80
90001006:	480d      	ldr	r0, [pc, #52]	@ (9000103c <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90001008:	f006 fd58 	bl	90007abc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
9000100c:	2201      	movs	r2, #1
9000100e:	480c      	ldr	r0, [pc, #48]	@ (90001040 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90001010:	4611      	mov	r1, r2
90001012:	f006 fd53 	bl	90007abc <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90001016:	f001 f9e1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
9000101a:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
9000101c:	4620      	mov	r0, r4
9000101e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001020:	42ab      	cmp	r3, r5
90001022:	d107      	bne.n	90001034 <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90001024:	f010 f824 	bl	90011070 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001028:	6823      	ldr	r3, [r4, #0]
9000102a:	4620      	mov	r0, r4
9000102c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90001030:	4798      	blx	r3
    }
90001032:	e7f0      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001034:	4798      	blx	r3
90001036:	e7ee      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001038:	90000df5 	.word	0x90000df5
9000103c:	58020c00 	.word	0x58020c00
90001040:	58022800 	.word	0x58022800

90001044 <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90001044:	4601      	mov	r1, r0
    {
90001046:	b508      	push	{r3, lr}
        return instance;
90001048:	4b05      	ldr	r3, [pc, #20]	@ (90001060 <IdleTaskHook+0x1c>)
9000104a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
9000104c:	b121      	cbz	r1, 90001058 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000104e:	2101      	movs	r1, #1
90001050:	f010 f828 	bl	900110a4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90001054:	2001      	movs	r0, #1
90001056:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001058:	f010 f824 	bl	900110a4 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
9000105c:	2001      	movs	r0, #1
9000105e:	bd08      	pop	{r3, pc}
90001060:	2402198c 	.word	0x2402198c

90001064 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90001064:	6940      	ldr	r0, [r0, #20]
90001066:	4770      	bx	lr

90001068 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001068:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
9000106c:	4770      	bx	lr
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001070:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90001072:	b10b      	cbz	r3, 90001078 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001074:	2001      	movs	r0, #1
}
90001076:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001078:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9000107a:	3800      	subs	r0, #0
9000107c:	bf18      	it	ne
9000107e:	2001      	movne	r0, #1
90001080:	4770      	bx	lr
90001082:	bf00      	nop

90001084 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001084:	6880      	ldr	r0, [r0, #8]
90001086:	4770      	bx	lr

90001088 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001088:	4770      	bx	lr
9000108a:	bf00      	nop

9000108c <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
9000108c:	3004      	adds	r0, #4
{
9000108e:	468c      	mov	ip, r1
    *data = videoInfo;
90001090:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90001092:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001096:	4770      	bx	lr

90001098 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001098:	4770      	bx	lr
9000109a:	bf00      	nop

9000109c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
9000109c:	b508      	push	{r3, lr}
    assert(0);
9000109e:	4a03      	ldr	r2, [pc, #12]	@ (900010ac <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900010a0:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
900010a4:	4b02      	ldr	r3, [pc, #8]	@ (900010b0 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900010a6:	4803      	ldr	r0, [pc, #12]	@ (900010b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900010a8:	f028 face 	bl	90029648 <__assert_func>
900010ac:	9002a8bc 	.word	0x9002a8bc
900010b0:	9002a8b8 	.word	0x9002a8b8
900010b4:	9002a918 	.word	0x9002a918

900010b8 <_ZN20HardwareMJPEGDecoderD0Ev>:
900010b8:	b510      	push	{r4, lr}
900010ba:	4604      	mov	r4, r0
900010bc:	2148      	movs	r1, #72	@ 0x48
900010be:	f027 ff4d 	bl	90028f5c <_ZdlPvj>
900010c2:	4620      	mov	r0, r4
900010c4:	bd10      	pop	{r4, pc}
900010c6:	bf00      	nop

900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
900010c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
900010ca:	6803      	ldr	r3, [r0, #0]
900010cc:	2901      	cmp	r1, #1
900010ce:	4d30      	ldr	r5, [pc, #192]	@ (90001190 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
900010d0:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
900010d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010d4:	bf38      	it	cc
900010d6:	2101      	movcc	r1, #1
900010d8:	42ab      	cmp	r3, r5
900010da:	460e      	mov	r6, r1
900010dc:	d13f      	bne.n	9000115e <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
900010de:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
900010e0:	42a9      	cmp	r1, r5
900010e2:	d947      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010e4:	1e6b      	subs	r3, r5, #1
900010e6:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010e8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010ea:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010ee:	b338      	cbz	r0, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010f2:	2b0f      	cmp	r3, #15
900010f4:	d940      	bls.n	90001178 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010f6:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010f8:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010fc:	68db      	ldr	r3, [r3, #12]
900010fe:	4631      	mov	r1, r6
90001100:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001102:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001104:	2210      	movs	r2, #16
90001106:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001108:	6803      	ldr	r3, [r0, #0]
9000110a:	691b      	ldr	r3, [r3, #16]
9000110c:	4798      	blx	r3
9000110e:	b198      	cbz	r0, 90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
90001110:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001112:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
90001114:	b1a3      	cbz	r3, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001116:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90001118:	7a93      	ldrb	r3, [r2, #10]
9000111a:	7a51      	ldrb	r1, [r2, #9]
9000111c:	041b      	lsls	r3, r3, #16
9000111e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90001122:	7a11      	ldrb	r1, [r2, #8]
90001124:	7ad2      	ldrb	r2, [r2, #11]
90001126:	430b      	orrs	r3, r1
90001128:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000112c:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000112e:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001130:	3a04      	subs	r2, #4
90001132:	441a      	add	r2, r3
90001134:	61a2      	str	r2, [r4, #24]
}
90001136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001138:	230d      	movs	r3, #13
9000113a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000113e:	e7e7      	b.n	90001110 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001140:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001144:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001146:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001148:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
9000114a:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000114c:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000114e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001150:	041b      	lsls	r3, r3, #16
90001152:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001156:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001158:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
9000115c:	e7e6      	b.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
9000115e:	4798      	blx	r3
90001160:	4286      	cmp	r6, r0
90001162:	d907      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
90001164:	6823      	ldr	r3, [r4, #0]
90001166:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001168:	42ab      	cmp	r3, r5
9000116a:	d00e      	beq.n	9000118a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
9000116c:	4620      	mov	r0, r4
9000116e:	4798      	blx	r3
90001170:	4605      	mov	r5, r0
90001172:	e7b7      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
90001174:	4635      	mov	r5, r6
90001176:	e7b5      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001178:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000117a:	4b06      	ldr	r3, [pc, #24]	@ (90001194 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
9000117c:	4a06      	ldr	r2, [pc, #24]	@ (90001198 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
9000117e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001180:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001184:	4805      	ldr	r0, [pc, #20]	@ (9000119c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
90001186:	f028 fa5f 	bl	90029648 <__assert_func>
    return videoInfo.number_of_frames;
9000118a:	68a5      	ldr	r5, [r4, #8]
9000118c:	e7aa      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
9000118e:	bf00      	nop
90001190:	90001085 	.word	0x90001085
90001194:	9002a984 	.word	0x9002a984
90001198:	9002a998 	.word	0x9002a998
9000119c:	9002a918 	.word	0x9002a918

900011a0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a0:	6943      	ldr	r3, [r0, #20]
{
900011a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a6:	2b00      	cmp	r3, #0
900011a8:	f000 80c1 	beq.w	9000132e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
900011ac:	4605      	mov	r5, r0
    if (reader != 0)
900011ae:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
900011b0:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
900011b2:	2800      	cmp	r0, #0
900011b4:	f000 80a1 	beq.w	900012fa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
900011b8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011ba:	2b07      	cmp	r3, #7
900011bc:	f240 80ac 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011c0:	6803      	ldr	r3, [r0, #0]
900011c2:	4621      	mov	r1, r4
900011c4:	68db      	ldr	r3, [r3, #12]
900011c6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011ca:	2208      	movs	r2, #8
900011cc:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011ce:	6803      	ldr	r3, [r0, #0]
900011d0:	691b      	ldr	r3, [r3, #16]
900011d2:	4798      	blx	r3
900011d4:	2800      	cmp	r0, #0
900011d6:	f000 808c 	beq.w	900012f2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011da:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
900011dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011de:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
900011e0:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011e2:	2800      	cmp	r0, #0
900011e4:	f000 808b 	beq.w	900012fe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011e8:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011ea:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011ec:	18a1      	adds	r1, r4, r2
900011ee:	5ca2      	ldrb	r2, [r4, r2]
900011f0:	788c      	ldrb	r4, [r1, #2]
900011f2:	784e      	ldrb	r6, [r1, #1]
900011f4:	0424      	lsls	r4, r4, #16
900011f6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011fa:	4314      	orrs	r4, r2
900011fc:	78ca      	ldrb	r2, [r1, #3]
900011fe:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90001202:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001204:	f243 0630 	movw	r6, #12336	@ 0x3030
90001208:	e03a      	b.n	90001280 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
9000120a:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000120c:	2b07      	cmp	r3, #7
9000120e:	f240 8083 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001212:	6803      	ldr	r3, [r0, #0]
90001214:	4621      	mov	r1, r4
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000121c:	2208      	movs	r2, #8
9000121e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b908      	cbnz	r0, 9000122c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
9000122c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
9000122e:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90001230:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001232:	2800      	cmp	r0, #0
90001234:	d079      	beq.n	9000132a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
90001236:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001238:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000123a:	18ca      	adds	r2, r1, r3
9000123c:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000123e:	7994      	ldrb	r4, [r2, #6]
90001240:	f892 a005 	ldrb.w	sl, [r2, #5]
90001244:	0424      	lsls	r4, r4, #16
90001246:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000124a:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000124e:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90001252:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001254:	f892 8003 	ldrb.w	r8, [r2, #3]
90001258:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
9000125c:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001260:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001264:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001268:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
9000126c:	f246 3164 	movw	r1, #25444	@ 0x6364
90001270:	42b3      	cmp	r3, r6
90001272:	bf08      	it	eq
90001274:	428a      	cmpeq	r2, r1
90001276:	bf0c      	ite	eq
90001278:	2301      	moveq	r3, #1
9000127a:	2300      	movne	r3, #0
9000127c:	d036      	beq.n	900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000127e:	69ab      	ldr	r3, [r5, #24]
90001280:	441c      	add	r4, r3
90001282:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90001284:	f104 0208 	add.w	r2, r4, #8
90001288:	429a      	cmp	r2, r3
9000128a:	d22a      	bcs.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
9000128c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000128e:	3409      	adds	r4, #9
        frameNumber++;
90001290:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001292:	f024 0401 	bic.w	r4, r4, #1
90001296:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
9000129a:	2800      	cmp	r0, #0
9000129c:	d1b5      	bne.n	9000120a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
9000129e:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
900012a0:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
900012a2:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
900012aa:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
900012ac:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
900012b0:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
900012b4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
900012b8:	188c      	adds	r4, r1, r2
        val |= d[0];
900012ba:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
900012bc:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
900012be:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
900012c2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
900012c6:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900012ca:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
900012ce:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
900012d2:	0424      	lsls	r4, r4, #16
900012d4:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
900012d8:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
900012dc:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
900012e0:	e7c4      	b.n	9000126c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
900012e2:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012e4:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012e6:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012e8:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012ec:	4618      	mov	r0, r3
900012ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012f2:	230d      	movs	r3, #13
900012f4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012f8:	e76f      	b.n	900011da <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012fa:	1d22      	adds	r2, r4, #4
900012fc:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012fe:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
90001300:	18a1      	adds	r1, r4, r2
        val |= d[0];
90001302:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
90001304:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
90001306:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90001308:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
9000130a:	0424      	lsls	r4, r4, #16
9000130c:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
90001310:	4334      	orrs	r4, r6
        val |= d[3] << 24;
90001312:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
90001316:	e774      	b.n	90001202 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001318:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000131a:	4b08      	ldr	r3, [pc, #32]	@ (9000133c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
9000131c:	4a08      	ldr	r2, [pc, #32]	@ (90001340 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
9000131e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001320:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90001324:	4807      	ldr	r0, [pc, #28]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001326:	f028 f98f 	bl	90029648 <__assert_func>
9000132a:	461c      	mov	r4, r3
9000132c:	e7b7      	b.n	9000129e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000132e:	4b06      	ldr	r3, [pc, #24]	@ (90001348 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90001330:	21f7      	movs	r1, #247	@ 0xf7
90001332:	4a06      	ldr	r2, [pc, #24]	@ (9000134c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
90001334:	4803      	ldr	r0, [pc, #12]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001336:	f028 f987 	bl	90029648 <__assert_func>
9000133a:	bf00      	nop
9000133c:	9002a984 	.word	0x9002a984
90001340:	9002a998 	.word	0x9002a998
90001344:	9002a918 	.word	0x9002a918
90001348:	9002a9dc 	.word	0x9002a9dc
9000134c:	9002aa28 	.word	0x9002aa28

90001350 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001350:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001352:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001354:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001356:	4b0e      	ldr	r3, [pc, #56]	@ (90001390 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001358:	2001      	movs	r0, #1
9000135a:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000135c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9000135e:	6023      	str	r3, [r4, #0]
90001360:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001364:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001368:	e9c4 2207 	strd	r2, r2, [r4, #28]
9000136c:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001370:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001374:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001378:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
9000137c:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001380:	f00c f808 	bl	9000d394 <osSemaphoreNew>
90001384:	4b03      	ldr	r3, [pc, #12]	@ (90001394 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
90001386:	4602      	mov	r2, r0
}
90001388:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000138a:	601a      	str	r2, [r3, #0]
}
9000138c:	bd10      	pop	{r4, pc}
9000138e:	bf00      	nop
90001390:	9002c474 	.word	0x9002c474
90001394:	24005df4 	.word	0x24005df4

90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001398:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
9000139c:	2100      	movs	r1, #0
    if (reader != 0)
9000139e:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
900013a0:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900013a2:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900013a4:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
900013a8:	2e00      	cmp	r6, #0
900013aa:	f000 81b3 	beq.w	90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
900013ae:	6b83      	ldr	r3, [r0, #56]	@ 0x38
900013b0:	2b47      	cmp	r3, #71	@ 0x47
900013b2:	f240 8270 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900013b6:	6833      	ldr	r3, [r6, #0]
900013b8:	4630      	mov	r0, r6
900013ba:	68db      	ldr	r3, [r3, #12]
900013bc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900013be:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900013c0:	2248      	movs	r2, #72	@ 0x48
900013c2:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900013c4:	6803      	ldr	r3, [r0, #0]
900013c6:	691b      	ldr	r3, [r3, #16]
900013c8:	4798      	blx	r3
900013ca:	2800      	cmp	r0, #0
900013cc:	f000 80b7 	beq.w	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
900013d0:	2300      	movs	r3, #0
    if (reader != 0)
900013d2:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900013d4:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900013d6:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
900013d8:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
900013da:	2e00      	cmp	r6, #0
900013dc:	f000 819b 	beq.w	90001716 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e0:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013e4:	2204      	movs	r2, #4
900013e6:	49c3      	ldr	r1, [pc, #780]	@ (900016f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e8:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013ec:	4620      	mov	r0, r4
900013ee:	f028 fbcf 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013f2:	2800      	cmp	r0, #0
900013f4:	f040 825f 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013f8:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013fc:	2204      	movs	r2, #4
900013fe:	49be      	ldr	r1, [pc, #760]	@ (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
90001400:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001402:	4448      	add	r0, r9
90001404:	f028 fbc4 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	f040 8268 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
9000140e:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001412:	2204      	movs	r2, #4
90001414:	49b9      	ldr	r1, [pc, #740]	@ (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001416:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000141a:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000141e:	f028 fbb7 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001422:	4680      	mov	r8, r0
90001424:	2800      	cmp	r0, #0
90001426:	f040 8250 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000142a:	7ca3      	ldrb	r3, [r4, #18]
9000142c:	7c62      	ldrb	r2, [r4, #17]
9000142e:	041b      	lsls	r3, r3, #16
90001430:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90001434:	7c22      	ldrb	r2, [r4, #16]
90001436:	4313      	orrs	r3, r2
90001438:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
9000143a:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
9000143e:	f000 8233 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001442:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001446:	2204      	movs	r2, #4
90001448:	49ad      	ldr	r1, [pc, #692]	@ (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000144a:	4448      	add	r0, r9
9000144c:	f028 fba0 	bl	90029b90 <strncmp>
    if (compare(offset, "hdrl", 4))
90001450:	2800      	cmp	r0, #0
90001452:	d078      	beq.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001454:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001456:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000145a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000145e:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001460:	445c      	add	r4, fp
    return strncmp(src, str, num);
90001462:	2204      	movs	r2, #4
90001464:	49a7      	ldr	r1, [pc, #668]	@ (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001466:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001468:	f028 fb92 	bl	90029b90 <strncmp>
    if (compare(offset, "avih", 4))
9000146c:	2800      	cmp	r0, #0
9000146e:	f000 80e6 	beq.w	9000163e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001472:	2307      	movs	r3, #7
90001474:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001478:	f1ba 0f00 	cmp.w	sl, #0
9000147c:	f000 8190 	beq.w	900017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001480:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001482:	2b0b      	cmp	r3, #11
90001484:	f240 8207 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001488:	f8da 3000 	ldr.w	r3, [sl]
9000148c:	4621      	mov	r1, r4
9000148e:	4650      	mov	r0, sl
90001490:	68db      	ldr	r3, [r3, #12]
90001492:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001494:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001496:	220c      	movs	r2, #12
90001498:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000149a:	6803      	ldr	r3, [r0, #0]
9000149c:	691b      	ldr	r3, [r3, #16]
9000149e:	4798      	blx	r3
900014a0:	2800      	cmp	r0, #0
900014a2:	f000 8121 	beq.w	900016e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014a6:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
900014aa:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
900014ac:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ae:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
900014b2:	f04f 090d 	mov.w	r9, #13
900014b6:	e003      	b.n	900014c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014b8:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
900014bc:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900014be:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014c0:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
900014c4:	2e00      	cmp	r6, #0
900014c6:	d052      	beq.n	9000156e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014c8:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ca:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014cc:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900014ce:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014d0:	1afb      	subs	r3, r7, r3
900014d2:	4418      	add	r0, r3
    return strncmp(src, str, num);
900014d4:	f028 fb5c 	bl	90029b90 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014d8:	2800      	cmp	r0, #0
900014da:	d051      	beq.n	90001580 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900014dc:	f1ba 0f00 	cmp.w	sl, #0
900014e0:	f040 80a8 	bne.w	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014e4:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014e6:	42a3      	cmp	r3, r4
900014e8:	d94d      	bls.n	90001586 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014ea:	3404      	adds	r4, #4
    if (reader != 0)
900014ec:	b386      	cbz	r6, 90001550 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014ee:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014f0:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014f4:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014f6:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014f8:	eb01 0204 	add.w	r2, r1, r4
900014fc:	5d09      	ldrb	r1, [r1, r4]
900014fe:	7894      	ldrb	r4, [r2, #2]
90001500:	7850      	ldrb	r0, [r2, #1]
90001502:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001506:	78d2      	ldrb	r2, [r2, #3]
90001508:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
9000150c:	ea44 0401 	orr.w	r4, r4, r1
90001510:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001514:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001516:	f240 81be 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000151a:	6833      	ldr	r3, [r6, #0]
9000151c:	4621      	mov	r1, r4
9000151e:	4630      	mov	r0, r6
90001520:	68db      	ldr	r3, [r3, #12]
90001522:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001524:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001526:	220c      	movs	r2, #12
90001528:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000152a:	6803      	ldr	r3, [r0, #0]
9000152c:	691b      	ldr	r3, [r3, #16]
9000152e:	4798      	blx	r3
90001530:	2800      	cmp	r0, #0
90001532:	d1c1      	bne.n	900014b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
90001534:	f04f 0a0d 	mov.w	sl, #13
90001538:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
9000153c:	e7be      	b.n	900014bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
9000153e:	230d      	movs	r3, #13
90001540:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001544:	e744      	b.n	900013d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
90001546:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000154a:	f04f 0801 	mov.w	r8, #1
9000154e:	e786      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001550:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
90001552:	1913      	adds	r3, r2, r4
        val |= d[0];
90001554:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
90001556:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001558:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000155a:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
9000155c:	0424      	lsls	r4, r4, #16
9000155e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001562:	4314      	orrs	r4, r2
        val |= d[3] << 24;
90001564:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001568:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000156a:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
9000156e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001570:	2204      	movs	r2, #4
90001572:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001574:	2600      	movs	r6, #0
90001576:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001578:	f028 fb0a 	bl	90029b90 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000157c:	2800      	cmp	r0, #0
9000157e:	d1ad      	bne.n	900014dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001580:	f1ba 0f00 	cmp.w	sl, #0
90001584:	d156      	bne.n	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001586:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000158a:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000158c:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000158e:	2e00      	cmp	r6, #0
90001590:	f000 8118 	beq.w	900017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001594:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
90001596:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001598:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000159c:	f104 0e02 	add.w	lr, r4, #2
900015a0:	f104 0c01 	add.w	ip, r4, #1
900015a4:	f811 8004 	ldrb.w	r8, [r1, r4]
900015a8:	1ce0      	adds	r0, r4, #3
900015aa:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
900015ae:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015b0:	f811 900c 	ldrb.w	r9, [r1, ip]
900015b4:	ea4f 4303 	mov.w	r3, r3, lsl #16
900015b8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900015bc:	ea43 0308 	orr.w	r3, r3, r8
900015c0:	f811 8000 	ldrb.w	r8, [r1, r0]
900015c4:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015c8:	443b      	add	r3, r7
900015ca:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015cc:	f811 300e 	ldrb.w	r3, [r1, lr]
900015d0:	f811 e00c 	ldrb.w	lr, [r1, ip]
900015d4:	f811 c004 	ldrb.w	ip, [r1, r4]
900015d8:	ea4f 4403 	mov.w	r4, r3, lsl #16
900015dc:	5c09      	ldrb	r1, [r1, r0]
900015de:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
900015e2:	ea44 040c 	orr.w	r4, r4, ip
900015e6:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015ea:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015ec:	f240 8153 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015f0:	6833      	ldr	r3, [r6, #0]
900015f2:	4621      	mov	r1, r4
900015f4:	4630      	mov	r0, r6
900015f6:	68db      	ldr	r3, [r3, #12]
900015f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015fa:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015fc:	2204      	movs	r2, #4
900015fe:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001600:	6803      	ldr	r3, [r0, #0]
90001602:	691b      	ldr	r3, [r3, #16]
90001604:	4798      	blx	r3
90001606:	2800      	cmp	r0, #0
90001608:	f000 80cd 	beq.w	900017a6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
9000160c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000160e:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001610:	2b00      	cmp	r3, #0
90001612:	f000 816e 	beq.w	900018f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001616:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001618:	2204      	movs	r2, #4
9000161a:	493b      	ldr	r1, [pc, #236]	@ (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
9000161c:	f028 fab8 	bl	90029b90 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001620:	2800      	cmp	r0, #0
90001622:	f040 80ca 	bne.w	900017ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
90001626:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001628:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000162a:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
9000162c:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
9000162e:	622b      	str	r3, [r5, #32]
}
90001630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001634:	230a      	movs	r3, #10
90001636:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000163a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
9000163e:	f1b8 0f00 	cmp.w	r8, #0
90001642:	f43f af19 	beq.w	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001646:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
9000164a:	f1ba 0f00 	cmp.w	sl, #0
9000164e:	f000 80d4 	beq.w	900017fa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
90001652:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001654:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001658:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000165a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000165c:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	f812 8001 	ldrb.w	r8, [r2, r1]
90001664:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001668:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
9000166c:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001670:	4438      	add	r0, r7
90001672:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001674:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001678:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000167a:	f89e 7001 	ldrb.w	r7, [lr, #1]
9000167e:	041b      	lsls	r3, r3, #16
90001680:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001684:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001688:	ea43 0308 	orr.w	r3, r3, r8
9000168c:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001690:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001692:	fbac c303 	umull	ip, r3, ip, r3
90001696:	099b      	lsrs	r3, r3, #6
90001698:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000169a:	78bb      	ldrb	r3, [r7, #2]
9000169c:	f897 e001 	ldrb.w	lr, [r7, #1]
900016a0:	041b      	lsls	r3, r3, #16
900016a2:	f812 c000 	ldrb.w	ip, [r2, r0]
900016a6:	78ff      	ldrb	r7, [r7, #3]
900016a8:	1850      	adds	r0, r2, r1
900016aa:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900016ae:	ea43 030c 	orr.w	r3, r3, ip
900016b2:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
900016b6:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016b8:	7883      	ldrb	r3, [r0, #2]
900016ba:	7847      	ldrb	r7, [r0, #1]
900016bc:	041b      	lsls	r3, r3, #16
900016be:	5c51      	ldrb	r1, [r2, r1]
900016c0:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
900016c4:	430b      	orrs	r3, r1
900016c6:	78c1      	ldrb	r1, [r0, #3]
900016c8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900016cc:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
900016ce:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016d0:	788b      	ldrb	r3, [r1, #2]
900016d2:	7848      	ldrb	r0, [r1, #1]
900016d4:	041b      	lsls	r3, r3, #16
900016d6:	5d92      	ldrb	r2, [r2, r6]
900016d8:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900016dc:	4313      	orrs	r3, r2
900016de:	78ca      	ldrb	r2, [r1, #3]
900016e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016e4:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016e6:	e6cb      	b.n	90001480 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016e8:	230d      	movs	r3, #13
900016ea:	469a      	mov	sl, r3
900016ec:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016f0:	e6db      	b.n	900014aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016f2:	bf00      	nop
900016f4:	9002aa5c 	.word	0x9002aa5c
900016f8:	9002ab14 	.word	0x9002ab14
900016fc:	9002ab0c 	.word	0x9002ab0c
90001700:	9002aae0 	.word	0x9002aae0
90001704:	9002aaf4 	.word	0x9002aaf4
90001708:	9002ab04 	.word	0x9002ab04
9000170c:	9002aafc 	.word	0x9002aafc
90001710:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90001714:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90001716:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
9000171a:	2204      	movs	r2, #4
9000171c:	4976      	ldr	r1, [pc, #472]	@ (900018f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000171e:	eb09 0007 	add.w	r0, r9, r7
90001722:	f028 fa35 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001726:	2800      	cmp	r0, #0
90001728:	f040 80c5 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
9000172c:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001730:	2204      	movs	r2, #4
90001732:	4972      	ldr	r1, [pc, #456]	@ (900018fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
90001734:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001736:	4448      	add	r0, r9
90001738:	f028 fa2a 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000173c:	2800      	cmp	r0, #0
9000173e:	f040 80ce 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
90001742:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001746:	2204      	movs	r2, #4
90001748:	496d      	ldr	r1, [pc, #436]	@ (90001900 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
9000174a:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000174e:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
90001752:	f028 fa1d 	bl	90029b90 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001756:	4680      	mov	r8, r0
90001758:	2800      	cmp	r0, #0
9000175a:	f040 80b6 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
9000175e:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001762:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
90001766:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
9000176a:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
9000176c:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000176e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001770:	0424      	lsls	r4, r4, #16
90001772:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001776:	4314      	orrs	r4, r2
    assert(aviListSize);
90001778:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000177c:	f000 8094 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001780:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001784:	2204      	movs	r2, #4
90001786:	495f      	ldr	r1, [pc, #380]	@ (90001904 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001788:	4448      	add	r0, r9
9000178a:	f028 fa01 	bl	90029b90 <strncmp>
    if (compare(offset, "hdrl", 4))
9000178e:	b970      	cbnz	r0, 900017ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001790:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001794:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001798:	4448      	add	r0, r9
9000179a:	f04f 0a00 	mov.w	sl, #0
9000179e:	e65f      	b.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017a0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
900017a4:	e683      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
900017a6:	230d      	movs	r3, #13
900017a8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900017ac:	e72e      	b.n	9000160c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017ae:	2306      	movs	r3, #6
    offset += 4;
900017b0:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017b4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
900017b8:	e7ee      	b.n	90001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900017ba:	230b      	movs	r3, #11
900017bc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900017c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900017c4:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
900017c6:	1902      	adds	r2, r0, r4
        val |= d[0];
900017c8:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017ca:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017cc:	7893      	ldrb	r3, [r2, #2]
900017ce:	041b      	lsls	r3, r3, #16
900017d0:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900017d4:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900017d6:	78d1      	ldrb	r1, [r2, #3]
900017d8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900017dc:	443b      	add	r3, r7
900017de:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
900017e0:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017e2:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017e4:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017e6:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017e8:	0424      	lsls	r4, r4, #16
900017ea:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017ee:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017f0:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017f4:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017f6:	4420      	add	r0, r4
900017f8:	e70e      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017fa:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017fc:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001800:	f8df e124 	ldr.w	lr, [pc, #292]	@ 90001928 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
90001804:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
90001808:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
9000180c:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
90001810:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
90001814:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
90001816:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
9000181a:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
9000181e:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
90001822:	041b      	lsls	r3, r3, #16
90001824:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001828:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
9000182c:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
90001830:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001834:	fbae e303 	umull	lr, r3, lr, r3
90001838:	099b      	lsrs	r3, r3, #6
9000183a:	606b      	str	r3, [r5, #4]
        val |= d[0];
9000183c:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
90001840:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001844:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001846:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001848:	041b      	lsls	r3, r3, #16
9000184a:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000184e:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
90001852:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
90001856:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
9000185a:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
9000185c:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000185e:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
90001862:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001866:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
9000186a:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
9000186e:	041b      	lsls	r3, r3, #16
90001870:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001874:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001878:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
9000187c:	60eb      	str	r3, [r5, #12]
        val |= d[0];
9000187e:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001880:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001882:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001884:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001886:	041b      	lsls	r3, r3, #16
90001888:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000188c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000188e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
90001892:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90001894:	e60b      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001896:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001898:	4b1b      	ldr	r3, [pc, #108]	@ (90001908 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
9000189a:	4a1c      	ldr	r2, [pc, #112]	@ (9000190c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
9000189c:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000189e:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900018a2:	481b      	ldr	r0, [pc, #108]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a4:	f027 fed0 	bl	90029648 <__assert_func>
    assert(aviListSize);
900018a8:	4b1a      	ldr	r3, [pc, #104]	@ (90001914 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900018aa:	f44f 71aa 	mov.w	r1, #340	@ 0x154
900018ae:	4a1a      	ldr	r2, [pc, #104]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018b0:	4817      	ldr	r0, [pc, #92]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018b2:	f027 fec9 	bl	90029648 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900018b6:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900018b8:	4b18      	ldr	r3, [pc, #96]	@ (9000191c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
900018ba:	4a17      	ldr	r2, [pc, #92]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018bc:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
900018c0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
900018c4:	4812      	ldr	r0, [pc, #72]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018c6:	f027 febf 	bl	90029648 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900018cc:	4b14      	ldr	r3, [pc, #80]	@ (90001920 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
900018ce:	4a12      	ldr	r2, [pc, #72]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018d0:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018d4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
900018d8:	480d      	ldr	r0, [pc, #52]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018da:	f027 feb5 	bl	90029648 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900018e0:	4b10      	ldr	r3, [pc, #64]	@ (90001924 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
900018e2:	4a0d      	ldr	r2, [pc, #52]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018e4:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018e8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018ec:	4808      	ldr	r0, [pc, #32]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018ee:	f027 feab 	bl	90029648 <__assert_func>
        src = (const char*)movieData + offset;
900018f2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018f4:	4420      	add	r0, r4
900018f6:	e68f      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018f8:	9002aa5c 	.word	0x9002aa5c
900018fc:	9002ab14 	.word	0x9002ab14
90001900:	9002ab0c 	.word	0x9002ab0c
90001904:	9002aae0 	.word	0x9002aae0
90001908:	9002a984 	.word	0x9002a984
9000190c:	9002a998 	.word	0x9002a998
90001910:	9002a918 	.word	0x9002a918
90001914:	9002aae8 	.word	0x9002aae8
90001918:	9002aa80 	.word	0x9002aa80
9000191c:	9002aa64 	.word	0x9002aa64
90001920:	9002aac8 	.word	0x9002aac8
90001924:	9002aab0 	.word	0x9002aab0
90001928:	10624dd3 	.word	0x10624dd3

9000192c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000192c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000192e:	2400      	movs	r4, #0
    movieLength = length;
90001930:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
90001934:	6304      	str	r4, [r0, #48]	@ 0x30
}
90001936:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000193a:	f7ff bd2d 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000193e:	bf00      	nop

90001940 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001940:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001942:	680b      	ldr	r3, [r1, #0]
{
90001944:	4604      	mov	r4, r0
    movieData = 0;
90001946:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001948:	4608      	mov	r0, r1
9000194a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000194c:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001950:	4798      	blx	r3
90001952:	4603      	mov	r3, r0
    readVideoHeader();
90001954:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001956:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000195c:	f7ff bd1c 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001960 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001960:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
90001962:	4b1f      	ldr	r3, [pc, #124]	@ (900019e0 <JPEG_Decode_DMA+0x80>)
90001964:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
90001966:	4d1f      	ldr	r5, [pc, #124]	@ (900019e4 <JPEG_Decode_DMA+0x84>)
    {
90001968:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
9000196a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
9000196c:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
9000196e:	4b1e      	ldr	r3, [pc, #120]	@ (900019e8 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
90001970:	4d1e      	ldr	r5, [pc, #120]	@ (900019ec <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
90001972:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001974:	4e1e      	ldr	r6, [pc, #120]	@ (900019f0 <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
90001976:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001978:	4d1e      	ldr	r5, [pc, #120]	@ (900019f4 <JPEG_Decode_DMA+0x94>)
9000197a:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000197c:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000197e:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90001984:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001986:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
9000198a:	4e1b      	ldr	r6, [pc, #108]	@ (900019f8 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000198c:	ea4f 15c5 	mov.w	r5, r5, lsl #7
90001990:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001994:	bf18      	it	ne
90001996:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000199a:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
9000199c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000199e:	4e17      	ldr	r6, [pc, #92]	@ (900019fc <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019a0:	4d17      	ldr	r5, [pc, #92]	@ (90001a00 <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
900019a2:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019a4:	4e17      	ldr	r6, [pc, #92]	@ (90001a04 <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019a6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
900019aa:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019ae:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b0:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b2:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b4:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b6:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019ba:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
900019bc:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019be:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c0:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019c2:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
900019c4:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
900019ca:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
900019ce:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019d2:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019d6:	f007 fa67 	bl	90008ea8 <HAL_JPEG_Decode_DMA>

        return 0;
    }
900019da:	4620      	mov	r0, r4
900019dc:	b002      	add	sp, #8
900019de:	bd70      	pop	{r4, r5, r6, pc}
900019e0:	24006010 	.word	0x24006010
900019e4:	24005df0 	.word	0x24005df0
900019e8:	24006004 	.word	0x24006004
900019ec:	24005df8 	.word	0x24005df8
900019f0:	24005dac 	.word	0x24005dac
900019f4:	24006000 	.word	0x24006000
900019f8:	24006020 	.word	0x24006020
900019fc:	24006018 	.word	0x24006018
90001a00:	24000004 	.word	0x24000004
90001a04:	2400601c 	.word	0x2400601c

90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001a08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001a0c:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001a0e:	2402      	movs	r4, #2
90001a10:	483e      	ldr	r0, [pc, #248]	@ (90001b0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
90001a12:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a14:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001a16:	0725      	lsls	r5, r4, #28
90001a18:	d002      	beq.n	90001a20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001a1a:	f024 040f 	bic.w	r4, r4, #15
90001a1e:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a20:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a22:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
90001a24:	4d3a      	ldr	r5, [pc, #232]	@ (90001b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a26:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001a28:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
90001a2c:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90001a30:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a32:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a34:	4f37      	ldr	r7, [pc, #220]	@ (90001b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a36:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3a:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
90001a3e:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a42:	bf18      	it	ne
90001a44:	f1c4 0410 	rsbne	r4, r4, #16
90001a48:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
90001a4a:	4833      	ldr	r0, [pc, #204]	@ (90001b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a4c:	4c33      	ldr	r4, [pc, #204]	@ (90001b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a4e:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a50:	4833      	ldr	r0, [pc, #204]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a52:	f7ff ff85 	bl	90001960 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a56:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a58:	4e32      	ldr	r6, [pc, #200]	@ (90001b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a5a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a5c:	f8da 3000 	ldr.w	r3, [sl]
90001a60:	b10b      	cbz	r3, 90001a66 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
90001a62:	6833      	ldr	r3, [r6, #0]
90001a64:	bb6b      	cbnz	r3, 90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a66:	6828      	ldr	r0, [r5, #0]
90001a68:	7a03      	ldrb	r3, [r0, #8]
90001a6a:	b93b      	cbnz	r3, 90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a6c:	4b2e      	ldr	r3, [pc, #184]	@ (90001b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a6e:	681b      	ldr	r3, [r3, #0]
90001a70:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a74:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a78:	2b01      	cmp	r3, #1
90001a7a:	d03b      	beq.n	90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a7c:	683b      	ldr	r3, [r7, #0]
90001a7e:	2b01      	cmp	r3, #1
90001a80:	d00d      	beq.n	90001a9e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a82:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a84:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a86:	6823      	ldr	r3, [r4, #0]
90001a88:	2b02      	cmp	r3, #2
90001a8a:	d024      	beq.n	90001ad6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a8c:	6823      	ldr	r3, [r4, #0]
90001a8e:	2b01      	cmp	r3, #1
90001a90:	d1e4      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a92:	2300      	movs	r3, #0
90001a94:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a98:	6033      	str	r3, [r6, #0]
}
90001a9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a9e:	f8d9 3000 	ldr.w	r3, [r9]
90001aa2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001aa6:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001aaa:	2b00      	cmp	r3, #0
90001aac:	d1e9      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001aae:	f8da 3000 	ldr.w	r3, [sl]
90001ab2:	2b00      	cmp	r3, #0
90001ab4:	d1e5      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001ab6:	2102      	movs	r1, #2
90001ab8:	4819      	ldr	r0, [pc, #100]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001aba:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001abc:	f007 fba4 	bl	90009208 <HAL_JPEG_Resume>
90001ac0:	e7df      	b.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ac2:	4817      	ldr	r0, [pc, #92]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001ac4:	f008 f96a 	bl	90009d9c <HAL_JPEG_GetState>
90001ac8:	2804      	cmp	r0, #4
90001aca:	d01a      	beq.n	90001b02 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001acc:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001ace:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001ad0:	6823      	ldr	r3, [r4, #0]
90001ad2:	2b02      	cmp	r3, #2
90001ad4:	d1da      	bne.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001ad6:	4b15      	ldr	r3, [pc, #84]	@ (90001b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001ad8:	f04f 31ff 	mov.w	r1, #4294967295
90001adc:	6818      	ldr	r0, [r3, #0]
90001ade:	f00b fcaf 	bl	9000d440 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001ae2:	6823      	ldr	r3, [r4, #0]
90001ae4:	2b01      	cmp	r3, #1
90001ae6:	d1b9      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001ae8:	2300      	movs	r3, #0
90001aea:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aee:	6033      	str	r3, [r6, #0]
}
90001af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001af4:	6833      	ldr	r3, [r6, #0]
90001af6:	2b00      	cmp	r3, #0
90001af8:	d1c0      	bne.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001afa:	6803      	ldr	r3, [r0, #0]
90001afc:	691b      	ldr	r3, [r3, #16]
90001afe:	4798      	blx	r3
90001b00:	e7bc      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001b02:	4807      	ldr	r0, [pc, #28]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001b04:	f007 fa4e 	bl	90008fa4 <HAL_JPEG_Abort>
90001b08:	e7e0      	b.n	90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001b0a:	bf00      	nop
90001b0c:	24005dac 	.word	0x24005dac
90001b10:	24006008 	.word	0x24006008
90001b14:	24006010 	.word	0x24006010
90001b18:	24006024 	.word	0x24006024
90001b1c:	2400600c 	.word	0x2400600c
90001b20:	240076dc 	.word	0x240076dc
90001b24:	24005dec 	.word	0x24005dec
90001b28:	24005df0 	.word	0x24005df0
90001b2c:	24005df4 	.word	0x24005df4
90001b30:	24006014 	.word	0x24006014
90001b34:	24006004 	.word	0x24006004
90001b38:	24000004 	.word	0x24000004

90001b3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b3c:	6943      	ldr	r3, [r0, #20]
{
90001b3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b42:	2b00      	cmp	r3, #0
90001b44:	f000 80ad 	beq.w	90001ca2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b48:	4604      	mov	r4, r0
    if (reader != 0)
90001b4a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b4c:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b4e:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b50:	2800      	cmp	r0, #0
90001b52:	d05f      	beq.n	90001c14 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b54:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b56:	2b07      	cmp	r3, #7
90001b58:	f240 80a9 	bls.w	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b5c:	6803      	ldr	r3, [r0, #0]
90001b5e:	4629      	mov	r1, r5
90001b60:	68db      	ldr	r3, [r3, #12]
90001b62:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b64:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b66:	2208      	movs	r2, #8
90001b68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b6a:	6803      	ldr	r3, [r0, #0]
90001b6c:	691b      	ldr	r3, [r3, #16]
90001b6e:	4798      	blx	r3
90001b70:	2800      	cmp	r0, #0
90001b72:	d04a      	beq.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b74:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b76:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b78:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b7c:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b7e:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b80:	2800      	cmp	r0, #0
90001b82:	d046      	beq.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b86:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b8a:	1b52      	subs	r2, r2, r5
90001b8c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b8e:	eb03 070c 	add.w	r7, r3, ip
90001b92:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b96:	eb03 0805 	add.w	r8, r3, r5
90001b9a:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b9e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ba2:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001ba6:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001baa:	78bd      	ldrb	r5, [r7, #2]
90001bac:	78ff      	ldrb	r7, [r7, #3]
90001bae:	042d      	lsls	r5, r5, #16
90001bb0:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001bb4:	ea45 050e 	orr.w	r5, r5, lr
90001bb8:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001bbc:	189f      	adds	r7, r3, r2
90001bbe:	5c9b      	ldrb	r3, [r3, r2]
90001bc0:	787a      	ldrb	r2, [r7, #1]
90001bc2:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001bc6:	eb01 0e05 	add.w	lr, r1, r5
90001bca:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001bcc:	f10e 0208 	add.w	r2, lr, #8
90001bd0:	429a      	cmp	r2, r3
90001bd2:	d213      	bcs.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001bd4:	f243 0330 	movw	r3, #12336	@ 0x3030
90001bd8:	459c      	cmp	ip, r3
90001bda:	d138      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bdc:	f246 3364 	movw	r3, #25444	@ 0x6364
90001be0:	429f      	cmp	r7, r3
90001be2:	d134      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001be4:	2d00      	cmp	r5, #0
90001be6:	d136      	bne.n	90001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001be8:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bec:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bf0:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bf2:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bf4:	d002      	beq.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bf6:	2001      	movs	r0, #1
}
90001bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bfc:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bfe:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c00:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001c02:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001c0a:	230d      	movs	r3, #13
90001c0c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001c10:	e7b0      	b.n	90001b74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001c12:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001c14:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001c16:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001c18:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001c1a:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001c1c:	195a      	adds	r2, r3, r5
        val |= d[0];
90001c1e:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001c22:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001c24:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001c26:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001c28:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001c2c:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001c2e:	181a      	adds	r2, r3, r0
        val |= d[0];
90001c30:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001c32:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001c36:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001c3a:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001c3c:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001c3e:	042d      	lsls	r5, r5, #16
90001c40:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c44:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c46:	2000      	movs	r0, #0
90001c48:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c4c:	e7bb      	b.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c4e:	2d00      	cmp	r5, #0
90001c50:	bf18      	it	ne
90001c52:	4672      	movne	r2, lr
90001c54:	e7c8      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c56:	f101 0708 	add.w	r7, r1, #8
90001c5a:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c5c:	b1f0      	cbz	r0, 90001c9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c5e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c60:	429d      	cmp	r5, r3
90001c62:	d824      	bhi.n	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c64:	6803      	ldr	r3, [r0, #0]
90001c66:	4639      	mov	r1, r7
90001c68:	68db      	ldr	r3, [r3, #12]
90001c6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c6c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c6e:	462a      	mov	r2, r5
90001c70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c72:	6803      	ldr	r3, [r0, #0]
90001c74:	691b      	ldr	r3, [r3, #16]
90001c76:	4798      	blx	r3
90001c78:	b910      	cbnz	r0, 90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c7a:	230d      	movs	r3, #13
90001c7c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c82:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c84:	b126      	cbz	r6, 90001c90 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c86:	4633      	mov	r3, r6
90001c88:	462a      	mov	r2, r5
90001c8a:	4620      	mov	r0, r4
90001c8c:	f7ff febc 	bl	90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c90:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c94:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c96:	442a      	add	r2, r5
            frameNumber++;
90001c98:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c9a:	e7a5      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c9c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c9e:	4439      	add	r1, r7
90001ca0:	e7f0      	b.n	90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ca2:	4b07      	ldr	r3, [pc, #28]	@ (90001cc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001ca4:	21c3      	movs	r1, #195	@ 0xc3
90001ca6:	4a07      	ldr	r2, [pc, #28]	@ (90001cc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001ca8:	4807      	ldr	r0, [pc, #28]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001caa:	f027 fccd 	bl	90029648 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cae:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001cb0:	4b06      	ldr	r3, [pc, #24]	@ (90001ccc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001cb2:	4a07      	ldr	r2, [pc, #28]	@ (90001cd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001cb4:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cb6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001cba:	4803      	ldr	r0, [pc, #12]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001cbc:	f027 fcc4 	bl	90029648 <__assert_func>
90001cc0:	9002a9dc 	.word	0x9002a9dc
90001cc4:	9002ab1c 	.word	0x9002ab1c
90001cc8:	9002a918 	.word	0x9002a918
90001ccc:	9002a984 	.word	0x9002a984
90001cd0:	9002a998 	.word	0x9002a998

90001cd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001cd8:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001cda:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001cde:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001ce0:	460e      	mov	r6, r1
90001ce2:	4690      	mov	r8, r2
90001ce4:	461f      	mov	r7, r3
    if (reader != 0)
90001ce6:	2800      	cmp	r0, #0
90001ce8:	f000 80f9 	beq.w	90001ede <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001cec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001cee:	2b07      	cmp	r3, #7
90001cf0:	f240 810a 	bls.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cf4:	6803      	ldr	r3, [r0, #0]
90001cf6:	4649      	mov	r1, r9
90001cf8:	68db      	ldr	r3, [r3, #12]
90001cfa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cfc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cfe:	2208      	movs	r2, #8
90001d00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d02:	6803      	ldr	r3, [r0, #0]
90001d04:	691b      	ldr	r3, [r3, #16]
90001d06:	4798      	blx	r3
90001d08:	2800      	cmp	r0, #0
90001d0a:	f000 80b3 	beq.w	90001e74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d0e:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001d10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d12:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001d14:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001d18:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001d1c:	2800      	cmp	r0, #0
90001d1e:	f000 80fc 	beq.w	90001f1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001d22:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d26:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001d28:	1899      	adds	r1, r3, r2
90001d2a:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001d2c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d2e:	f891 9002 	ldrb.w	r9, [r1, #2]
90001d32:	f891 c001 	ldrb.w	ip, [r1, #1]
90001d36:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001d3a:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001d3e:	ea49 0902 	orr.w	r9, r9, r2
90001d42:	78ca      	ldrb	r2, [r1, #3]
90001d44:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d48:	454b      	cmp	r3, r9
90001d4a:	f0c0 80dd 	bcc.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001d4e:	6803      	ldr	r3, [r0, #0]
90001d50:	4629      	mov	r1, r5
90001d52:	68db      	ldr	r3, [r3, #12]
90001d54:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d56:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d58:	464a      	mov	r2, r9
90001d5a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d5c:	6803      	ldr	r3, [r0, #0]
90001d5e:	691b      	ldr	r3, [r3, #16]
90001d60:	4798      	blx	r3
90001d62:	2800      	cmp	r0, #0
90001d64:	f000 8082 	beq.w	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d6a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d6c:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d70:	2302      	movs	r3, #2
90001d72:	486b      	ldr	r0, [pc, #428]	@ (90001f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d74:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d78:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d7a:	d172      	bne.n	90001e62 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d7c:	4662      	mov	r2, ip
90001d7e:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d80:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d82:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d84:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d86:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d8a:	60c3      	str	r3, [r0, #12]
90001d8c:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d8e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d92:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d94:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d96:	6143      	str	r3, [r0, #20]
90001d98:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d9a:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d9e:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001da0:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001da2:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da4:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001da6:	bf28      	it	cs
90001da8:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001daa:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dae:	f002 020f 	and.w	r2, r2, #15
90001db2:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001f54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001db6:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001dba:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dbc:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbe:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dc0:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001dc2:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dc6:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001f58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dca:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001dcc:	eba3 030c 	sub.w	r3, r3, ip
90001dd0:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dd2:	6923      	ldr	r3, [r4, #16]
90001dd4:	429e      	cmp	r6, r3
90001dd6:	bf28      	it	cs
90001dd8:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dda:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dde:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001de2:	bf18      	it	ne
90001de4:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001de8:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dea:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dec:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001df0:	4b4c      	ldr	r3, [pc, #304]	@ (90001f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001df2:	bf18      	it	ne
90001df4:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001df8:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001dfa:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001dfc:	4b4a      	ldr	r3, [pc, #296]	@ (90001f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dfe:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001e00:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001e04:	4643      	mov	r3, r8
90001e06:	4849      	ldr	r0, [pc, #292]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e08:	f7ff fdaa 	bl	90001960 <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001e0c:	4d48      	ldr	r5, [pc, #288]	@ (90001f30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001e0e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001e10:	4e48      	ldr	r6, [pc, #288]	@ (90001f34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001e12:	4c49      	ldr	r4, [pc, #292]	@ (90001f38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e14:	4f49      	ldr	r7, [pc, #292]	@ (90001f3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001e16:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001f5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001e1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001e1c:	f8da 3000 	ldr.w	r3, [sl]
90001e20:	b113      	cbz	r3, 90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001e22:	6833      	ldr	r3, [r6, #0]
90001e24:	2b00      	cmp	r3, #0
90001e26:	d13b      	bne.n	90001ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e28:	6828      	ldr	r0, [r5, #0]
90001e2a:	7a03      	ldrb	r3, [r0, #8]
90001e2c:	b93b      	cbnz	r3, 90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001e2e:	4b44      	ldr	r3, [pc, #272]	@ (90001f40 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001e30:	681b      	ldr	r3, [r3, #0]
90001e32:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e36:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3a:	2b01      	cmp	r3, #1
90001e3c:	d044      	beq.n	90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e3e:	683b      	ldr	r3, [r7, #0]
90001e40:	2b01      	cmp	r3, #1
90001e42:	d01b      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001e44:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e46:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e48:	6823      	ldr	r3, [r4, #0]
90001e4a:	2b02      	cmp	r3, #2
90001e4c:	d032      	beq.n	90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001e4e:	6823      	ldr	r3, [r4, #0]
90001e50:	2b01      	cmp	r3, #1
90001e52:	d1e3      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001e54:	2300      	movs	r3, #0
}
90001e56:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e58:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e5c:	6033      	str	r3, [r6, #0]
}
90001e5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e62:	f02c 030f 	bic.w	r3, ip, #15
90001e66:	3310      	adds	r3, #16
90001e68:	461a      	mov	r2, r3
90001e6a:	e789      	b.n	90001d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e6c:	230d      	movs	r3, #13
90001e6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e72:	e779      	b.n	90001d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e74:	230d      	movs	r3, #13
90001e76:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e7a:	e748      	b.n	90001d0e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e7c:	f8d9 3000 	ldr.w	r3, [r9]
90001e80:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e84:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e88:	2b00      	cmp	r3, #0
90001e8a:	d1db      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e8c:	f8da 3000 	ldr.w	r3, [sl]
90001e90:	2b00      	cmp	r3, #0
90001e92:	d1d7      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e94:	2102      	movs	r1, #2
90001e96:	4825      	ldr	r0, [pc, #148]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e98:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e9a:	f007 f9b5 	bl	90009208 <HAL_JPEG_Resume>
90001e9e:	e7d1      	b.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ea0:	4822      	ldr	r0, [pc, #136]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ea2:	f007 ff7b 	bl	90009d9c <HAL_JPEG_GetState>
90001ea6:	2804      	cmp	r0, #4
90001ea8:	d015      	beq.n	90001ed6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001eaa:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001eac:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001eae:	6823      	ldr	r3, [r4, #0]
90001eb0:	2b02      	cmp	r3, #2
90001eb2:	d1cc      	bne.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001eb4:	4b23      	ldr	r3, [pc, #140]	@ (90001f44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eb6:	f04f 31ff 	mov.w	r1, #4294967295
90001eba:	6818      	ldr	r0, [r3, #0]
90001ebc:	f00b fac0 	bl	9000d440 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001ec0:	6823      	ldr	r3, [r4, #0]
90001ec2:	2b01      	cmp	r3, #1
90001ec4:	d1aa      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001ec6:	e7c5      	b.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ec8:	6833      	ldr	r3, [r6, #0]
90001eca:	2b00      	cmp	r3, #0
90001ecc:	d1b7      	bne.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001ece:	6803      	ldr	r3, [r0, #0]
90001ed0:	691b      	ldr	r3, [r3, #16]
90001ed2:	4798      	blx	r3
90001ed4:	e7b3      	b.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001ed6:	4815      	ldr	r0, [pc, #84]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ed8:	f007 f864 	bl	90008fa4 <HAL_JPEG_Abort>
90001edc:	e7e5      	b.n	90001eaa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ede:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001ee2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001ee4:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ee8:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001eea:	4401      	add	r1, r0
        val |= d[0];
90001eec:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001eee:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ef0:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ef4:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001ef6:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001efa:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001efe:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001f02:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001f06:	e731      	b.n	90001d6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f08:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001f0a:	4b0f      	ldr	r3, [pc, #60]	@ (90001f48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001f0c:	4a0f      	ldr	r2, [pc, #60]	@ (90001f4c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001f0e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f10:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001f14:	480e      	ldr	r0, [pc, #56]	@ (90001f50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001f16:	f027 fb97 	bl	90029648 <__assert_func>
90001f1a:	4691      	mov	r9, r2
90001f1c:	e7e1      	b.n	90001ee2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001f1e:	bf00      	nop
90001f20:	24005dac 	.word	0x24005dac
90001f24:	24005ffc 	.word	0x24005ffc
90001f28:	24006024 	.word	0x24006024
90001f2c:	240076dc 	.word	0x240076dc
90001f30:	24006008 	.word	0x24006008
90001f34:	24005dec 	.word	0x24005dec
90001f38:	2400600c 	.word	0x2400600c
90001f3c:	24006010 	.word	0x24006010
90001f40:	24005df0 	.word	0x24005df0
90001f44:	24005df4 	.word	0x24005df4
90001f48:	9002a984 	.word	0x9002a984
90001f4c:	9002a998 	.word	0x9002a998
90001f50:	9002a918 	.word	0x9002a918
90001f54:	24006014 	.word	0x24006014
90001f58:	24006004 	.word	0x24006004
90001f5c:	24000004 	.word	0x24000004

90001f60 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f60:	684b      	ldr	r3, [r1, #4]
90001f62:	2b01      	cmp	r3, #1
90001f64:	d015      	beq.n	90001f92 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f66:	2b02      	cmp	r3, #2
90001f68:	d00b      	beq.n	90001f82 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f6a:	b94b      	cbnz	r3, 90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f6c:	68cb      	ldr	r3, [r1, #12]
90001f6e:	0758      	lsls	r0, r3, #29
90001f70:	d11e      	bne.n	90001fb0 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f72:	688b      	ldr	r3, [r1, #8]
90001f74:	075a      	lsls	r2, r3, #29
90001f76:	d003      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f78:	f023 0307 	bic.w	r3, r3, #7
90001f7c:	3308      	adds	r3, #8
90001f7e:	608b      	str	r3, [r1, #8]
    }
90001f80:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f82:	68cb      	ldr	r3, [r1, #12]
90001f84:	071a      	lsls	r2, r3, #28
90001f86:	d0f4      	beq.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f88:	f023 030f 	bic.w	r3, r3, #15
90001f8c:	3310      	adds	r3, #16
90001f8e:	60cb      	str	r3, [r1, #12]
90001f90:	e7ef      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f92:	68cb      	ldr	r3, [r1, #12]
90001f94:	071a      	lsls	r2, r3, #28
90001f96:	d003      	beq.n	90001fa0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f98:	f023 030f 	bic.w	r3, r3, #15
90001f9c:	3310      	adds	r3, #16
90001f9e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001fa0:	688b      	ldr	r3, [r1, #8]
90001fa2:	0718      	lsls	r0, r3, #28
90001fa4:	d0ec      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001fa6:	f023 030f 	bic.w	r3, r3, #15
90001faa:	3310      	adds	r3, #16
90001fac:	608b      	str	r3, [r1, #8]
90001fae:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001fb0:	f023 0307 	bic.w	r3, r3, #7
90001fb4:	3308      	adds	r3, #8
90001fb6:	60cb      	str	r3, [r1, #12]
90001fb8:	e7db      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
90001fba:	bf00      	nop

90001fbc <HAL_JPEG_GetDataCallback>:
    {
90001fbc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001fbe:	4c0c      	ldr	r4, [pc, #48]	@ (90001ff0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc0:	4a0c      	ldr	r2, [pc, #48]	@ (90001ff4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001fc2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001fc6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001fca:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fcc:	d302      	bcc.n	90001fd4 <HAL_JPEG_GetDataCallback+0x18>
    }
90001fce:	f85d 4b04 	ldr.w	r4, [sp], #4
90001fd2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001fd4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fd6:	4b08      	ldr	r3, [pc, #32]	@ (90001ff8 <HAL_JPEG_GetDataCallback+0x3c>)
90001fd8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fda:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fde:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fe0:	bf28      	it	cs
90001fe2:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fea:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fec:	f006 bfd2 	b.w	90008f94 <HAL_JPEG_ConfigInputBuffer>
90001ff0:	24006020 	.word	0x24006020
90001ff4:	2400601c 	.word	0x2400601c
90001ff8:	24006018 	.word	0x24006018

90001ffc <HAL_JPEG_DataReadyCallback>:
    {
90001ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90002000:	4e4a      	ldr	r6, [pc, #296]	@ (9000212c <HAL_JPEG_DataReadyCallback+0x130>)
    {
90002002:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002004:	4f4a      	ldr	r7, [pc, #296]	@ (90002130 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90002006:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002008:	4d4a      	ldr	r5, [pc, #296]	@ (90002134 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
9000200a:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000200c:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000200e:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90002012:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002014:	4b48      	ldr	r3, [pc, #288]	@ (90002138 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002016:	4c49      	ldr	r4, [pc, #292]	@ (9000213c <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002018:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000201a:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000201c:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002020:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002024:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90002028:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202a:	4d45      	ldr	r5, [pc, #276]	@ (90002140 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
9000202c:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002032:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90002036:	697b      	ldr	r3, [r7, #20]
90002038:	428b      	cmp	r3, r1
9000203a:	d260      	bcs.n	900020fe <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000203c:	6821      	ldr	r1, [r4, #0]
9000203e:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002040:	6823      	ldr	r3, [r4, #0]
90002042:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002044:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002048:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000204c:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002050:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002052:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002056:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000205a:	6823      	ldr	r3, [r4, #0]
9000205c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002060:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002064:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002066:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002068:	b12b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000206a:	6823      	ldr	r3, [r4, #0]
9000206c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002070:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002074:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002076:	6832      	ldr	r2, [r6, #0]
90002078:	69bb      	ldr	r3, [r7, #24]
9000207a:	4293      	cmp	r3, r2
9000207c:	d922      	bls.n	900020c4 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000207e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002080:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002082:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002086:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002088:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000208c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000208e:	2200      	movs	r2, #0
90002090:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2b01      	cmp	r3, #1
90002096:	d900      	bls.n	9000209a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002098:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000209a:	6823      	ldr	r3, [r4, #0]
9000209c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a0:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
900020a4:	2b00      	cmp	r3, #0
900020a6:	d138      	bne.n	9000211a <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020a8:	6823      	ldr	r3, [r4, #0]
900020aa:	4640      	mov	r0, r8
900020ac:	68fa      	ldr	r2, [r7, #12]
900020ae:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020b6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ba:	01d2      	lsls	r2, r2, #7
900020bc:	6859      	ldr	r1, [r3, #4]
900020be:	f006 ff6d 	bl	90008f9c <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
900020c2:	69bb      	ldr	r3, [r7, #24]
900020c4:	6832      	ldr	r2, [r6, #0]
900020c6:	429a      	cmp	r2, r3
900020c8:	d20b      	bcs.n	900020e2 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
900020ca:	4b1e      	ldr	r3, [pc, #120]	@ (90002144 <HAL_JPEG_DataReadyCallback+0x148>)
900020cc:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
900020ce:	7a1b      	ldrb	r3, [r3, #8]
900020d0:	b10b      	cbz	r3, 900020d6 <HAL_JPEG_DataReadyCallback+0xda>
    }
900020d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
900020d6:	4b1c      	ldr	r3, [pc, #112]	@ (90002148 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
900020d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
900020dc:	6818      	ldr	r0, [r3, #0]
900020de:	f00b b9e1 	b.w	9000d4a4 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020e2:	6823      	ldr	r3, [r4, #0]
900020e4:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020e6:	4919      	ldr	r1, [pc, #100]	@ (9000214c <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020e8:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ea:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020ee:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020f6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f8:	f006 ff14 	bl	90008f24 <HAL_JPEG_Pause>
900020fc:	e7e5      	b.n	900020ca <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020fe:	6823      	ldr	r3, [r4, #0]
90002100:	68fa      	ldr	r2, [r7, #12]
90002102:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002106:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000210a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000210e:	01d2      	lsls	r2, r2, #7
90002110:	6859      	ldr	r1, [r3, #4]
    }
90002112:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002116:	f006 bf41 	b.w	90008f9c <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
9000211a:	2102      	movs	r1, #2
9000211c:	4640      	mov	r0, r8
9000211e:	f006 ff01 	bl	90008f24 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
90002122:	4b0b      	ldr	r3, [pc, #44]	@ (90002150 <HAL_JPEG_DataReadyCallback+0x154>)
90002124:	2201      	movs	r2, #1
90002126:	601a      	str	r2, [r3, #0]
90002128:	e7be      	b.n	900020a8 <HAL_JPEG_DataReadyCallback+0xac>
9000212a:	bf00      	nop
9000212c:	24006000 	.word	0x24006000
90002130:	24005dac 	.word	0x24005dac
90002134:	24006024 	.word	0x24006024
90002138:	24005ffc 	.word	0x24005ffc
9000213c:	24006004 	.word	0x24006004
90002140:	24000004 	.word	0x24000004
90002144:	24006008 	.word	0x24006008
90002148:	24005df4 	.word	0x24005df4
9000214c:	24006014 	.word	0x24006014
90002150:	24006010 	.word	0x24006010

90002154 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002154:	b672      	cpsid	i
        while (1)
90002156:	e7fe      	b.n	90002156 <HAL_JPEG_ErrorCallback+0x2>

90002158 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002158:	4b01      	ldr	r3, [pc, #4]	@ (90002160 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000215a:	2201      	movs	r2, #1
9000215c:	601a      	str	r2, [r3, #0]
    }
9000215e:	4770      	bx	lr
90002160:	24006014 	.word	0x24006014

90002164 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002164:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002166:	4f1e      	ldr	r7, [pc, #120]	@ (900021e0 <DMA2D_CopyBuffer+0x7c>)
90002168:	6903      	ldr	r3, [r0, #16]
9000216a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000216c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000216e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002172:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002174:	4e1b      	ldr	r6, [pc, #108]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002176:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000217a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000217e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002182:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002186:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002188:	bf18      	it	ne
9000218a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000218e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002190:	6939      	ldr	r1, [r7, #16]
90002192:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002196:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000219a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000219e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021a0:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900021a2:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
900021a4:	7e81      	ldrb	r1, [r0, #26]
900021a6:	b1b9      	cbz	r1, 900021d8 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
900021a8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
900021aa:	f1c1 0110 	rsb	r1, r1, #16
900021ae:	4321      	orrs	r1, r4
900021b0:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b2:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
900021b4:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b8:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021bc:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
900021be:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021c2:	4809      	ldr	r0, [pc, #36]	@ (900021e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021c4:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021c6:	4b07      	ldr	r3, [pc, #28]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
900021c8:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
900021ca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021cc:	4a07      	ldr	r2, [pc, #28]	@ (900021ec <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
900021ce:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021d0:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021d2:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021d4:	6018      	str	r0, [r3, #0]
}
900021d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
900021d8:	f044 0410 	orr.w	r4, r4, #16
900021dc:	6474      	str	r4, [r6, #68]	@ 0x44
900021de:	e7e8      	b.n	900021b2 <DMA2D_CopyBuffer+0x4e>
900021e0:	24005dac 	.word	0x24005dac
900021e4:	52001000 	.word	0x52001000
900021e8:	00012301 	.word	0x00012301
900021ec:	ff09000b 	.word	0xff09000b

900021f0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021f0:	6902      	ldr	r2, [r0, #16]
{
900021f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021f6:	4605      	mov	r5, r0
900021f8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021fa:	2a00      	cmp	r2, #0
900021fc:	d165      	bne.n	900022ca <DMA2D_CropBuffer+0xda>
900021fe:	4b35      	ldr	r3, [pc, #212]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
90002200:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
90002204:	f1cc 0010 	rsb	r0, ip, #16
90002208:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
9000220a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
9000220c:	3901      	subs	r1, #1
9000220e:	428a      	cmp	r2, r1
90002210:	d102      	bne.n	90002218 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002212:	6b99      	ldr	r1, [r3, #56]	@ 0x38
90002214:	1a41      	subs	r1, r0, r1
90002216:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002218:	7e6e      	ldrb	r6, [r5, #25]
9000221a:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
9000221c:	2e00      	cmp	r6, #0
9000221e:	d051      	beq.n	900022c4 <DMA2D_CropBuffer+0xd4>
90002220:	f1c7 0110 	rsb	r1, r7, #16
90002224:	46b8      	mov	r8, r7
90002226:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
90002228:	f895 e01a 	ldrb.w	lr, [r5, #26]
9000222c:	f1be 0f00 	cmp.w	lr, #0
90002230:	d002      	beq.n	90002238 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002232:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90002234:	1b09      	subs	r1, r1, r4
90002236:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002238:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000223c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000223e:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002242:	4413      	add	r3, r2
    job.MCU_drawn++;
90002244:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002246:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
9000224a:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000224c:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002250:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002254:	0052      	lsls	r2, r2, #1
90002256:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000225a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000225e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002262:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002264:	b107      	cbz	r7, 90002268 <DMA2D_CropBuffer+0x78>
90002266:	b90e      	cbnz	r6, 9000226c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002268:	2300      	movs	r3, #0
9000226a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000226c:	4b1a      	ldr	r3, [pc, #104]	@ (900022d8 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000226e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002270:	4f1a      	ldr	r7, [pc, #104]	@ (900022dc <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002272:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002274:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002276:	4a1a      	ldr	r2, [pc, #104]	@ (900022e0 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002278:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000227a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000227e:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002280:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002282:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002286:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000228a:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
9000228c:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000228e:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002292:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002294:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002296:	6803      	ldr	r3, [r0, #0]
90002298:	9604      	str	r6, [sp, #16]
9000229a:	685b      	ldr	r3, [r3, #4]
9000229c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000229e:	4b11      	ldr	r3, [pc, #68]	@ (900022e4 <DMA2D_CropBuffer+0xf4>)
900022a0:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022a2:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022a4:	4810      	ldr	r0, [pc, #64]	@ (900022e8 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900022a6:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022a8:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ac:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022ae:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022b0:	490e      	ldr	r1, [pc, #56]	@ (900022ec <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
900022b2:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
900022b4:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
900022b6:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022b8:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ba:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022bc:	6019      	str	r1, [r3, #0]
}
900022be:	b00a      	add	sp, #40	@ 0x28
900022c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022c4:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900022c6:	46b0      	mov	r8, r6
900022c8:	e7ae      	b.n	90002228 <DMA2D_CropBuffer+0x38>
900022ca:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900022cc:	f04f 0c00 	mov.w	ip, #0
900022d0:	4b00      	ldr	r3, [pc, #0]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
900022d2:	e79a      	b.n	9000220a <DMA2D_CropBuffer+0x1a>
900022d4:	24005dac 	.word	0x24005dac
900022d8:	01e00010 	.word	0x01e00010
900022dc:	24005dfc 	.word	0x24005dfc
900022e0:	24006008 	.word	0x24006008
900022e4:	52001000 	.word	0x52001000
900022e8:	ff09000b 	.word	0xff09000b
900022ec:	00012301 	.word	0x00012301

900022f0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022f0:	4b0d      	ldr	r3, [pc, #52]	@ (90002328 <DMA2D_ExternalJobCompleted+0x38>)
900022f2:	6902      	ldr	r2, [r0, #16]
900022f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022f6:	429a      	cmp	r2, r3
900022f8:	d000      	beq.n	900022fc <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022fa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022fc:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000232c <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
90002300:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
90002302:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
90002304:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
90002306:	3101      	adds	r1, #1
        job.DoCropping = false;
90002308:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
9000230a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000230c:	6819      	ldr	r1, [r3, #0]
9000230e:	2901      	cmp	r1, #1
90002310:	d900      	bls.n	90002314 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
90002312:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
90002314:	7e83      	ldrb	r3, [r0, #26]
90002316:	b113      	cbz	r3, 9000231e <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
90002318:	4b05      	ldr	r3, [pc, #20]	@ (90002330 <DMA2D_ExternalJobCompleted+0x40>)
9000231a:	2201      	movs	r2, #1
9000231c:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
9000231e:	4b05      	ldr	r3, [pc, #20]	@ (90002334 <DMA2D_ExternalJobCompleted+0x44>)
90002320:	6818      	ldr	r0, [r3, #0]
90002322:	f00b b8bf 	b.w	9000d4a4 <osSemaphoreRelease>
90002326:	bf00      	nop
90002328:	24005dac 	.word	0x24005dac
9000232c:	24005df0 	.word	0x24005df0
90002330:	24005dec 	.word	0x24005dec
90002334:	24005df4 	.word	0x24005df4

90002338 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002338:	2101      	movs	r1, #1
9000233a:	2200      	movs	r2, #0
{
9000233c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000233e:	4608      	mov	r0, r1
90002340:	f00b f828 	bl	9000d394 <osSemaphoreNew>
90002344:	4b0b      	ldr	r3, [pc, #44]	@ (90002374 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002346:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002348:	b140      	cbz	r0, 9000235c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
9000234a:	2200      	movs	r2, #0
9000234c:	2104      	movs	r1, #4
9000234e:	2001      	movs	r0, #1
90002350:	f00b f8d2 	bl	9000d4f8 <osMessageQueueNew>
90002354:	4b08      	ldr	r3, [pc, #32]	@ (90002378 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002356:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002358:	b130      	cbz	r0, 90002368 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000235a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000235c:	4b07      	ldr	r3, [pc, #28]	@ (9000237c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000235e:	2128      	movs	r1, #40	@ 0x28
90002360:	4a07      	ldr	r2, [pc, #28]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002362:	4808      	ldr	r0, [pc, #32]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002364:	f027 f970 	bl	90029648 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002368:	4b07      	ldr	r3, [pc, #28]	@ (90002388 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000236a:	212c      	movs	r1, #44	@ 0x2c
9000236c:	4a04      	ldr	r2, [pc, #16]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000236e:	4805      	ldr	r0, [pc, #20]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002370:	f027 f96a 	bl	90029648 <__assert_func>
90002374:	2400602c 	.word	0x2400602c
90002378:	24006028 	.word	0x24006028
9000237c:	9002ab78 	.word	0x9002ab78
90002380:	9002abc4 	.word	0x9002abc4
90002384:	9002abf4 	.word	0x9002abf4
90002388:	9002ac58 	.word	0x9002ac58

9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000238c:	4b02      	ldr	r3, [pc, #8]	@ (90002398 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000238e:	f04f 31ff 	mov.w	r1, #4294967295
90002392:	6818      	ldr	r0, [r3, #0]
90002394:	f00b b854 	b.w	9000d440 <osSemaphoreAcquire>
90002398:	2400602c 	.word	0x2400602c

9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000239c:	4b01      	ldr	r3, [pc, #4]	@ (900023a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000239e:	6818      	ldr	r0, [r3, #0]
900023a0:	f00b b880 	b.w	9000d4a4 <osSemaphoreRelease>
900023a4:	2400602c 	.word	0x2400602c

900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900023a8:	4b02      	ldr	r3, [pc, #8]	@ (900023b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900023aa:	2100      	movs	r1, #0
900023ac:	6818      	ldr	r0, [r3, #0]
900023ae:	f00b b847 	b.w	9000d440 <osSemaphoreAcquire>
900023b2:	bf00      	nop
900023b4:	2400602c 	.word	0x2400602c

900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
900023b8:	4b01      	ldr	r3, [pc, #4]	@ (900023c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900023ba:	6818      	ldr	r0, [r3, #0]
900023bc:	f00b b872 	b.w	9000d4a4 <osSemaphoreRelease>
900023c0:	2400602c 	.word	0x2400602c

900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900023c4:	4803      	ldr	r0, [pc, #12]	@ (900023d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900023c6:	2300      	movs	r3, #0
900023c8:	4903      	ldr	r1, [pc, #12]	@ (900023d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900023ca:	461a      	mov	r2, r3
900023cc:	6800      	ldr	r0, [r0, #0]
900023ce:	f00b b8cf 	b.w	9000d570 <osMessageQueuePut>
900023d2:	bf00      	nop
900023d4:	24006028 	.word	0x24006028
900023d8:	2400003c 	.word	0x2400003c

900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900023dc:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023de:	2300      	movs	r3, #0
{
900023e0:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023e2:	4c07      	ldr	r4, [pc, #28]	@ (90002400 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023e4:	a901      	add	r1, sp, #4
900023e6:	461a      	mov	r2, r3
900023e8:	6820      	ldr	r0, [r4, #0]
900023ea:	f00b f8fd 	bl	9000d5e8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023ee:	f04f 33ff 	mov.w	r3, #4294967295
900023f2:	2200      	movs	r2, #0
900023f4:	a901      	add	r1, sp, #4
900023f6:	6820      	ldr	r0, [r4, #0]
900023f8:	f00b f8f6 	bl	9000d5e8 <osMessageQueueGet>
}
900023fc:	b002      	add	sp, #8
900023fe:	bd10      	pop	{r4, pc}
90002400:	24006028 	.word	0x24006028

90002404 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90002404:	6803      	ldr	r3, [r0, #0]
90002406:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002408:	4718      	bx	r3
9000240a:	bf00      	nop

9000240c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
9000240c:	2001      	movs	r0, #1
9000240e:	4770      	bx	lr

90002410 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
90002410:	e7fe      	b.n	90002410 <DMA2D_XferErrorCallback>
90002412:	bf00      	nop

90002414 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
90002414:	4905      	ldr	r1, [pc, #20]	@ (9000242c <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002416:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000241a:	4b05      	ldr	r3, [pc, #20]	@ (90002430 <_ZN8STM32DMAD1Ev+0x1c>)
9000241c:	6001      	str	r1, [r0, #0]
9000241e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002422:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002426:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
9000242a:	4770      	bx	lr
9000242c:	9002c4b8 	.word	0x9002c4b8
90002430:	e000e100 	.word	0xe000e100

90002434 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002434:	4b11      	ldr	r3, [pc, #68]	@ (9000247c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002436:	4912      	ldr	r1, [pc, #72]	@ (90002480 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002438:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
9000243c:	4811      	ldr	r0, [pc, #68]	@ (90002484 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000243e:	f042 0210 	orr.w	r2, r2, #16
{
90002442:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002444:	4c10      	ldr	r4, [pc, #64]	@ (90002488 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002446:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002448:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000244c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002450:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002454:	f002 0210 	and.w	r2, r2, #16
90002458:	9201      	str	r2, [sp, #4]
9000245a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000245c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000245e:	f042 0210 	orr.w	r2, r2, #16
90002462:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002464:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002466:	f022 0210 	bic.w	r2, r2, #16
9000246a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000246c:	4b07      	ldr	r3, [pc, #28]	@ (9000248c <_ZN8STM32DMA10initializeEv+0x58>)
9000246e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002472:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002474:	b003      	add	sp, #12
90002476:	f85d 4b04 	ldr.w	r4, [sp], #4
9000247a:	4770      	bx	lr
9000247c:	58024400 	.word	0x58024400
90002480:	24007788 	.word	0x24007788
90002484:	90002411 	.word	0x90002411
90002488:	90002859 	.word	0x90002859
9000248c:	e000e100 	.word	0xe000e100

90002490 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002490:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002498:	4909      	ldr	r1, [pc, #36]	@ (900024c0 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000249a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000249e:	4b09      	ldr	r3, [pc, #36]	@ (900024c4 <_ZN8STM32DMAD0Ev+0x2c>)
900024a0:	b510      	push	{r4, lr}
900024a2:	6001      	str	r1, [r0, #0]
900024a4:	4604      	mov	r4, r0
900024a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900024aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900024ae:	f3bf 8f6f 	isb	sy
}
900024b2:	f640 51a4 	movw	r1, #3492	@ 0xda4
900024b6:	f026 fd51 	bl	90028f5c <_ZdlPvj>
900024ba:	4620      	mov	r0, r4
900024bc:	bd10      	pop	{r4, pc}
900024be:	bf00      	nop
900024c0:	9002c4b8 	.word	0x9002c4b8
900024c4:	e000e100 	.word	0xe000e100

900024c8 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
900024c8:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
900024cc:	b510      	push	{r4, lr}
900024ce:	4604      	mov	r4, r0
        if (!started_by_external_job)
900024d0:	b963      	cbnz	r3, 900024ec <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
900024d2:	6803      	ldr	r3, [r0, #0]
900024d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900024d6:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024d8:	4924      	ldr	r1, [pc, #144]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
900024da:	4a25      	ldr	r2, [pc, #148]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024dc:	680b      	ldr	r3, [r1, #0]
900024de:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024e2:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024e6:	2b01      	cmp	r3, #1
900024e8:	d015      	beq.n	90002516 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024ea:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024ec:	7a03      	ldrb	r3, [r0, #8]
900024ee:	2b00      	cmp	r3, #0
900024f0:	d12b      	bne.n	9000254a <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024f2:	6860      	ldr	r0, [r4, #4]
900024f4:	6803      	ldr	r3, [r0, #0]
900024f6:	681b      	ldr	r3, [r3, #0]
900024f8:	4798      	blx	r3
900024fa:	4603      	mov	r3, r0
900024fc:	2800      	cmp	r0, #0
900024fe:	d1f4      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
90002500:	7a62      	ldrb	r2, [r4, #9]
90002502:	2a00      	cmp	r2, #0
90002504:	d0f1      	beq.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
90002506:	6822      	ldr	r2, [r4, #0]
90002508:	4620      	mov	r0, r4
                started_by_external_job = false;
9000250a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000250e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90002514:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002516:	4817      	ldr	r0, [pc, #92]	@ (90002574 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
90002518:	6800      	ldr	r0, [r0, #0]
9000251a:	2800      	cmp	r0, #0
9000251c:	d1e5      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
9000251e:	7a20      	ldrb	r0, [r4, #8]
90002520:	2800      	cmp	r0, #0
90002522:	d1e2      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002524:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002526:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000252a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
9000252e:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002530:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002534:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002536:	6808      	ldr	r0, [r1, #0]
90002538:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000253c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002540:	b17b      	cbz	r3, 90002562 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
90002542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002546:	f7ff be53 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254a:	4b08      	ldr	r3, [pc, #32]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
9000254c:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254e:	4808      	ldr	r0, [pc, #32]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002550:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002552:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002554:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002558:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000255c:	f7ff fec8 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002560:	e7c7      	b.n	900024f2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002566:	f7ff bdfd 	b.w	90002164 <DMA2D_CopyBuffer>
9000256a:	bf00      	nop
9000256c:	24005df0 	.word	0x24005df0
90002570:	24000004 	.word	0x24000004
90002574:	24005dec 	.word	0x24005dec

90002578 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002578:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000257a:	7f8b      	ldrb	r3, [r1, #30]
9000257c:	2b0a      	cmp	r3, #10
9000257e:	d83d      	bhi.n	900025fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002580:	e8df f003 	tbb	[pc, r3]
90002584:	3c2a063a 	.word	0x3c2a063a
90002588:	063c3c3c 	.word	0x063c3c3c
9000258c:	0606      	.short	0x0606
9000258e:	06          	.byte	0x06
9000258f:	00          	.byte	0x00
90002590:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002592:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002596:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002598:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000259a:	4b1b      	ldr	r3, [pc, #108]	@ (90002608 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000259c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a0:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025a2:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
900025a6:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900025a8:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025aa:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ac:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
900025ae:	680e      	ldr	r6, [r1, #0]
        return color;
900025b0:	68c8      	ldr	r0, [r1, #12]
900025b2:	2e08      	cmp	r6, #8
900025b4:	d012      	beq.n	900025dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025b6:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
900025b8:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025ba:	0941      	lsrs	r1, r0, #5
900025bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900025c0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900025c4:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
900025ca:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025cc:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025ce:	490f      	ldr	r1, [pc, #60]	@ (9000260c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025d0:	4302      	orrs	r2, r0
900025d2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025d4:	6019      	str	r1, [r3, #0]
    }
}
900025d6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025d8:	2400      	movs	r4, #0
900025da:	e7da      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025dc:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025de:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025e0:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025e2:	4a0b      	ldr	r2, [pc, #44]	@ (90002610 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025e4:	7f09      	ldrb	r1, [r1, #28]
900025e6:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025ea:	490a      	ldr	r1, [pc, #40]	@ (90002614 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025ec:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025ee:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025f4:	6019      	str	r1, [r3, #0]
}
900025f6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025f8:	2402      	movs	r4, #2
900025fa:	e7ca      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025fc:	4b06      	ldr	r3, [pc, #24]	@ (90002618 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025fe:	2191      	movs	r1, #145	@ 0x91
90002600:	4a06      	ldr	r2, [pc, #24]	@ (9000261c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90002602:	4807      	ldr	r0, [pc, #28]	@ (90002620 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90002604:	f027 f820 	bl	90029648 <__assert_func>
90002608:	52001000 	.word	0x52001000
9000260c:	00032301 	.word	0x00032301
90002610:	00010009 	.word	0x00010009
90002614:	00022301 	.word	0x00022301
90002618:	9002ac9c 	.word	0x9002ac9c
9000261c:	9002acb8 	.word	0x9002acb8
90002620:	9002ad04 	.word	0x9002ad04

90002624 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90002624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90002626:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
9000262a:	f1be 0f0b 	cmp.w	lr, #11
9000262e:	f200 80aa 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002632:	e8df f00e 	tbb	[pc, lr]
90002636:	585d      	.short	0x585d
90002638:	a8a8a846 	.word	0xa8a8a846
9000263c:	060606a8 	.word	0x060606a8
90002640:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
90002642:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002644:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002648:	f1bc 0f0b 	cmp.w	ip, #11
9000264c:	f200 809b 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002650:	e8df f00c 	tbb	[pc, ip]
90002654:	990d4b50 	.word	0x990d4b50
90002658:	06999999 	.word	0x06999999
9000265c:	06060606 	.word	0x06060606
    switch (format)
90002660:	f1bc 0f0b 	cmp.w	ip, #11
90002664:	f000 8095 	beq.w	90002792 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002668:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000266a:	2701      	movs	r7, #1
9000266c:	e001      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000266e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002670:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002672:	8a8b      	ldrh	r3, [r1, #20]
90002674:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002676:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002678:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000267a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000267c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000267e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002682:	4b4a      	ldr	r3, [pc, #296]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002684:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002686:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002688:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000268a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000268c:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000268e:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002690:	6908      	ldr	r0, [r1, #16]
90002692:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002694:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002696:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002698:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000269a:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269c:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
900026a0:	d03c      	beq.n	9000271c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
900026a2:	d810      	bhi.n	900026c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
900026a4:	2d20      	cmp	r5, #32
900026a6:	d036      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026a8:	2d40      	cmp	r5, #64	@ 0x40
900026aa:	d034      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026ac:	2d04      	cmp	r5, #4
900026ae:	d124      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b0:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026b2:	493f      	ldr	r1, [pc, #252]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
900026b8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026ba:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026bc:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026be:	6019      	str	r1, [r3, #0]
}
900026c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
900026c2:	2600      	movs	r6, #0
900026c4:	e7be      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
900026c6:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900026ca:	d022      	beq.n	90002712 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
900026cc:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
900026d0:	d113      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d2:	4d38      	ldr	r5, [pc, #224]	@ (900027b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026d4:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026d6:	4a36      	ldr	r2, [pc, #216]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d8:	61dd      	str	r5, [r3, #28]
900026da:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900026dc:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026de:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026e0:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026e2:	601a      	str	r2, [r3, #0]
}
900026e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026e6:	2601      	movs	r6, #1
900026e8:	e7ac      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026ea:	2401      	movs	r4, #1
900026ec:	4627      	mov	r7, r4
900026ee:	e7c0      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900026f0:	2602      	movs	r6, #2
900026f2:	e7a7      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
900026f4:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026f6:	4627      	mov	r7, r4
900026f8:	e7bb      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fa:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
900026fc:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fe:	4b2b      	ldr	r3, [pc, #172]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002700:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002704:	bf14      	ite	ne
90002706:	4a2c      	ldrne	r2, [pc, #176]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002708:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000270c:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000270e:	601a      	str	r2, [r3, #0]
}
90002710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002712:	4d2a      	ldr	r5, [pc, #168]	@ (900027bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002714:	e7de      	b.n	900026d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002716:	4332      	orrs	r2, r6
90002718:	4b24      	ldr	r3, [pc, #144]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000271a:	e7ca      	b.n	900026b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
9000271c:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271e:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002720:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002722:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002726:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002728:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
9000272a:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000272c:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000272e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90002730:	b1e2      	cbz	r2, 9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
90002732:	2a01      	cmp	r2, #1
90002734:	d133      	bne.n	9000279e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002736:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
90002738:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000273a:	8849      	ldrh	r1, [r1, #2]
9000273c:	4a20      	ldr	r2, [pc, #128]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
9000273e:	bf18      	it	ne
90002740:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002742:	3901      	subs	r1, #1
90002744:	4002      	ands	r2, r0
90002746:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000274a:	f042 0210 	orr.w	r2, r2, #16
9000274e:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90002750:	4a16      	ldr	r2, [pc, #88]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002752:	69d3      	ldr	r3, [r2, #28]
90002754:	f043 0320 	orr.w	r3, r3, #32
90002758:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
9000275a:	69d3      	ldr	r3, [r2, #28]
9000275c:	069b      	lsls	r3, r3, #26
9000275e:	d4fc      	bmi.n	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90002760:	2310      	movs	r3, #16
90002762:	6093      	str	r3, [r2, #8]
            if (blend)
90002764:	b167      	cbz	r7, 90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002766:	4b12      	ldr	r3, [pc, #72]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002768:	6013      	str	r3, [r2, #0]
}
9000276a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000276c:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
9000276e:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002770:	8849      	ldrh	r1, [r1, #2]
90002772:	4a13      	ldr	r2, [pc, #76]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002774:	3901      	subs	r1, #1
90002776:	4002      	ands	r2, r0
90002778:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000277c:	61da      	str	r2, [r3, #28]
                break;
9000277e:	e7e7      	b.n	90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002780:	4b0d      	ldr	r3, [pc, #52]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002782:	6013      	str	r3, [r2, #0]
}
90002784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90002786:	4b0f      	ldr	r3, [pc, #60]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002788:	2170      	movs	r1, #112	@ 0x70
9000278a:	4a0f      	ldr	r2, [pc, #60]	@ (900027c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000278c:	480f      	ldr	r0, [pc, #60]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000278e:	f026 ff5b 	bl	90029648 <__assert_func>
        assert(0 && "Unsupported Format!");
90002792:	4b0c      	ldr	r3, [pc, #48]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002794:	2191      	movs	r1, #145	@ 0x91
90002796:	4a0e      	ldr	r2, [pc, #56]	@ (900027d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002798:	480c      	ldr	r0, [pc, #48]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000279a:	f026 ff55 	bl	90029648 <__assert_func>
                assert(0 && "Unsupported format");
9000279e:	4b0d      	ldr	r3, [pc, #52]	@ (900027d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
900027a0:	f240 111b 	movw	r1, #283	@ 0x11b
900027a4:	4a0c      	ldr	r2, [pc, #48]	@ (900027d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
900027a6:	4809      	ldr	r0, [pc, #36]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
900027a8:	f026 ff4e 	bl	90029648 <__assert_func>
900027ac:	52001000 	.word	0x52001000
900027b0:	00022301 	.word	0x00022301
900027b4:	00020009 	.word	0x00020009
900027b8:	00012301 	.word	0x00012301
900027bc:	0002000a 	.word	0x0002000a
900027c0:	ffff00ef 	.word	0xffff00ef
900027c4:	9002ac9c 	.word	0x9002ac9c
900027c8:	9002ad64 	.word	0x9002ad64
900027cc:	9002ad04 	.word	0x9002ad04
900027d0:	9002acb8 	.word	0x9002acb8
900027d4:	9002adb0 	.word	0x9002adb0
900027d8:	9002adcc 	.word	0x9002adcc

900027dc <_ZN8STM32DMA5startEv>:
    virtual void start()
900027dc:	b510      	push	{r4, lr}
900027de:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
900027e0:	6840      	ldr	r0, [r0, #4]
900027e2:	6803      	ldr	r3, [r0, #0]
900027e4:	681b      	ldr	r3, [r3, #0]
900027e6:	4798      	blx	r3
900027e8:	b958      	cbnz	r0, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ea:	7a63      	ldrb	r3, [r4, #9]
900027ec:	b14b      	cbz	r3, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ee:	7a23      	ldrb	r3, [r4, #8]
900027f0:	bb3b      	cbnz	r3, 90002842 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027f2:	6822      	ldr	r2, [r4, #0]
900027f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900027f6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027fa:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
90002800:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002802:	4913      	ldr	r1, [pc, #76]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002804:	4a13      	ldr	r2, [pc, #76]	@ (90002854 <_ZN8STM32DMA5startEv+0x78>)
90002806:	680b      	ldr	r3, [r1, #0]
90002808:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000280c:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002810:	2b01      	cmp	r3, #1
90002812:	d000      	beq.n	90002816 <_ZN8STM32DMA5startEv+0x3a>
    }
90002814:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002816:	7a20      	ldrb	r0, [r4, #8]
90002818:	2800      	cmp	r0, #0
9000281a:	d1fb      	bne.n	90002814 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000281c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
9000281e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002822:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002826:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002828:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000282c:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000282e:	6808      	ldr	r0, [r1, #0]
90002830:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002834:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002838:	b133      	cbz	r3, 90002848 <_ZN8STM32DMA5startEv+0x6c>
    }
9000283a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000283e:	f7ff bcd7 	b.w	900021f0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002842:	4b03      	ldr	r3, [pc, #12]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002844:	681b      	ldr	r3, [r3, #0]
    }
90002846:	bd10      	pop	{r4, pc}
90002848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000284c:	f7ff bc8a 	b.w	90002164 <DMA2D_CopyBuffer>
90002850:	24005df0 	.word	0x24005df0
90002854:	24000004 	.word	0x24000004

90002858 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90002858:	4b2c      	ldr	r3, [pc, #176]	@ (9000290c <DMA2D_XferCpltCallback+0xb4>)
9000285a:	492d      	ldr	r1, [pc, #180]	@ (90002910 <DMA2D_XferCpltCallback+0xb8>)
9000285c:	681b      	ldr	r3, [r3, #0]
    {
9000285e:	b510      	push	{r4, lr}
90002860:	685c      	ldr	r4, [r3, #4]
90002862:	6823      	ldr	r3, [r4, #0]
90002864:	695a      	ldr	r2, [r3, #20]
90002866:	428a      	cmp	r2, r1
90002868:	d122      	bne.n	900028b0 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000286a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000286e:	b192      	cbz	r2, 90002896 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002870:	7a23      	ldrb	r3, [r4, #8]
90002872:	2b00      	cmp	r3, #0
90002874:	d13a      	bne.n	900028ec <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
90002876:	6860      	ldr	r0, [r4, #4]
90002878:	6803      	ldr	r3, [r0, #0]
9000287a:	681b      	ldr	r3, [r3, #0]
9000287c:	4798      	blx	r3
9000287e:	4603      	mov	r3, r0
90002880:	b9a8      	cbnz	r0, 900028ae <DMA2D_XferCpltCallback+0x56>
90002882:	7a62      	ldrb	r2, [r4, #9]
90002884:	b19a      	cbz	r2, 900028ae <DMA2D_XferCpltCallback+0x56>
                execute();
90002886:	6822      	ldr	r2, [r4, #0]
90002888:	4620      	mov	r0, r4
                started_by_external_job = false;
9000288a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000288e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002894:	4718      	bx	r3
            executeCompleted();
90002896:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002898:	4620      	mov	r0, r4
9000289a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
9000289c:	491d      	ldr	r1, [pc, #116]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
9000289e:	4a1e      	ldr	r2, [pc, #120]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028a0:	680b      	ldr	r3, [r1, #0]
900028a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028a6:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900028aa:	2b01      	cmp	r3, #1
900028ac:	d004      	beq.n	900028b8 <DMA2D_XferCpltCallback+0x60>
900028ae:	bd10      	pop	{r4, pc}
900028b0:	4620      	mov	r0, r4
900028b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900028b6:	4710      	bx	r2
900028b8:	4818      	ldr	r0, [pc, #96]	@ (9000291c <DMA2D_XferCpltCallback+0xc4>)
900028ba:	6800      	ldr	r0, [r0, #0]
900028bc:	2800      	cmp	r0, #0
900028be:	d1f6      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
900028c0:	7a20      	ldrb	r0, [r4, #8]
900028c2:	2800      	cmp	r0, #0
900028c4:	d1f3      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028c6:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900028c8:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028cc:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900028d0:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028d2:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900028d6:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028d8:	6808      	ldr	r0, [r1, #0]
900028da:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900028de:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028e2:	b17b      	cbz	r3, 90002904 <DMA2D_XferCpltCallback+0xac>
900028e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028e8:	f7ff bc82 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ec:	4b09      	ldr	r3, [pc, #36]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028ee:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f0:	4809      	ldr	r0, [pc, #36]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028f2:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028f4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028fa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028fe:	f7ff fcf7 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002902:	e7b8      	b.n	90002876 <DMA2D_XferCpltCallback+0x1e>
90002904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002908:	f7ff bc2c 	b.w	90002164 <DMA2D_CopyBuffer>
9000290c:	2402198c 	.word	0x2402198c
90002910:	900024c9 	.word	0x900024c9
90002914:	24005df0 	.word	0x24005df0
90002918:	24000004 	.word	0x24000004
9000291c:	24005dec 	.word	0x24005dec

90002920 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90002920:	b570      	push	{r4, r5, r6, lr}
90002922:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002924:	4b0b      	ldr	r3, [pc, #44]	@ (90002954 <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90002926:	2500      	movs	r5, #0
90002928:	300c      	adds	r0, #12
9000292a:	4634      	mov	r4, r6
9000292c:	2260      	movs	r2, #96	@ 0x60
9000292e:	7235      	strb	r5, [r6, #8]
90002930:	7275      	strb	r5, [r6, #9]
90002932:	6070      	str	r0, [r6, #4]
90002934:	f844 3b20 	str.w	r3, [r4], #32
90002938:	4621      	mov	r1, r4
9000293a:	f00e fcf5 	bl	90011328 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000293e:	4621      	mov	r1, r4
90002940:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002944:	60cd      	str	r5, [r1, #12]
90002946:	3124      	adds	r1, #36	@ 0x24
90002948:	4299      	cmp	r1, r3
9000294a:	d1fb      	bne.n	90002944 <_ZN8STM32DMAC1Ev+0x24>
}
9000294c:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
9000294e:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002952:	bd70      	pop	{r4, r5, r6, pc}
90002954:	9002c4b8 	.word	0x9002c4b8

90002958 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002958:	4a03      	ldr	r2, [pc, #12]	@ (90002968 <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000295a:	6813      	ldr	r3, [r2, #0]
9000295c:	07db      	lsls	r3, r3, #31
9000295e:	d4fc      	bmi.n	9000295a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002960:	2323      	movs	r3, #35	@ 0x23
90002962:	6093      	str	r3, [r2, #8]
}
90002964:	4770      	bx	lr
90002966:	bf00      	nop
90002968:	52001000 	.word	0x52001000

9000296c <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000296c:	4a0b      	ldr	r2, [pc, #44]	@ (9000299c <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
9000296e:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002970:	03db      	lsls	r3, r3, #15
90002972:	d501      	bpl.n	90002978 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002974:	2900      	cmp	r1, #0
90002976:	dc00      	bgt.n	9000297a <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002978:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000297a:	f000 031f 	and.w	r3, r0, #31
9000297e:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002980:	f3bf 8f4f 	dsb	sy
90002984:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90002986:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000298a:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
9000298c:	1a0b      	subs	r3, r1, r0
9000298e:	2b00      	cmp	r3, #0
90002990:	dcf9      	bgt.n	90002986 <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002992:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002996:	f3bf 8f6f 	isb	sy
9000299a:	4770      	bx	lr
9000299c:	e000ed00 	.word	0xe000ed00

900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
900029a0:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029a2:	4c11      	ldr	r4, [pc, #68]	@ (900029e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
900029a4:	6825      	ldr	r5, [r4, #0]
900029a6:	07ed      	lsls	r5, r5, #31
900029a8:	d4fc      	bmi.n	900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029aa:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ac:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
900029ae:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029b0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b2:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b6:	f04f 0502 	mov.w	r5, #2
900029ba:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029bc:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029be:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
900029c0:	d00b      	beq.n	900029da <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c2:	490a      	ldr	r1, [pc, #40]	@ (900029ec <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029c4:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c6:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029ca:	4909      	ldr	r1, [pc, #36]	@ (900029f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029cc:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
900029ce:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
900029d0:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
900029d2:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029d4:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
900029d6:	bc30      	pop	{r4, r5}
900029d8:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900029da:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
900029dc:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029de:	4b05      	ldr	r3, [pc, #20]	@ (900029f4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
900029e0:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029e2:	6023      	str	r3, [r4, #0]
}
900029e4:	bc30      	pop	{r4, r5}
900029e6:	4770      	bx	lr
900029e8:	52001000 	.word	0x52001000
900029ec:	00010009 	.word	0x00010009
900029f0:	00020001 	.word	0x00020001
900029f4:	00030001 	.word	0x00030001

900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029f8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029fa:	4c10      	ldr	r4, [pc, #64]	@ (90002a3c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029fc:	6825      	ldr	r5, [r4, #0]
900029fe:	07ed      	lsls	r5, r5, #31
90002a00:	d4fc      	bmi.n	900029fc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a02:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a04:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
90002a06:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a08:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a0e:	f04f 0502 	mov.w	r5, #2
90002a12:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a14:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a18:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
90002a1a:	d009      	beq.n	90002a30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a1c:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a1e:	4a08      	ldr	r2, [pc, #32]	@ (90002a40 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a20:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
90002a24:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a26:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a28:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a2a:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
90002a2c:	bc30      	pop	{r4, r5}
90002a2e:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a30:	4a04      	ldr	r2, [pc, #16]	@ (90002a44 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a32:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a34:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a36:	6023      	str	r3, [r4, #0]
}
90002a38:	bc30      	pop	{r4, r5}
90002a3a:	4770      	bx	lr
90002a3c:	52001000 	.word	0x52001000
90002a40:	00020001 	.word	0x00020001
90002a44:	ff020002 	.word	0xff020002

90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a48:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a4a:	4c0c      	ldr	r4, [pc, #48]	@ (90002a7c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a4c:	6825      	ldr	r5, [r4, #0]
90002a4e:	07ed      	lsls	r5, r5, #31
90002a50:	d4fc      	bmi.n	90002a4c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a52:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a54:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a56:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a58:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a5a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a5e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a62:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a64:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a66:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a68:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a6a:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a6c:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a6e:	4b04      	ldr	r3, [pc, #16]	@ (90002a80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a70:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a72:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a74:	6023      	str	r3, [r4, #0]
}
90002a76:	bc70      	pop	{r4, r5, r6}
90002a78:	4770      	bx	lr
90002a7a:	bf00      	nop
90002a7c:	52001000 	.word	0x52001000
90002a80:	00020001 	.word	0x00020001

90002a84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a84:	2001      	movs	r0, #1
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a88:	200c      	movs	r0, #12
90002a8a:	4770      	bx	lr

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a8c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a90:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a98:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a9c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002aa0:	3008      	adds	r0, #8
90002aa2:	4770      	bx	lr

90002aa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002aa4:	2001      	movs	r0, #1
90002aa6:	4770      	bx	lr

90002aa8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002aa8:	f44f 7021 	mov.w	r0, #644	@ 0x284
90002aac:	4770      	bx	lr
90002aae:	bf00      	nop

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ab0:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ab4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ab8:	3008      	adds	r0, #8
90002aba:	4770      	bx	lr

90002abc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002abc:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ac0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ac4:	3008      	adds	r0, #8
90002ac6:	4770      	bx	lr

90002ac8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002ac8:	2001      	movs	r0, #1
90002aca:	4770      	bx	lr

90002acc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002acc:	2010      	movs	r0, #16
90002ace:	4770      	bx	lr

90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ad4:	3008      	adds	r0, #8
90002ad6:	4770      	bx	lr

90002ad8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002adc:	3008      	adds	r0, #8
90002ade:	4770      	bx	lr

90002ae0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
90002ae0:	4608      	mov	r0, r1
90002ae2:	f002 bbe7 	b.w	900052b4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
90002ae6:	bf00      	nop

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ae8:	4b03      	ldr	r3, [pc, #12]	@ (90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00d fa29 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	4620      	mov	r0, r4
90002af6:	bd10      	pop	{r4, pc}
90002af8:	9002c570 	.word	0x9002c570

90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002afc:	4b05      	ldr	r3, [pc, #20]	@ (90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afe:	b510      	push	{r4, lr}
90002b00:	4604      	mov	r4, r0
90002b02:	6003      	str	r3, [r0, #0]
90002b04:	f00d fa1f 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	2114      	movs	r1, #20
90002b0a:	4620      	mov	r0, r4
90002b0c:	f026 fa26 	bl	90028f5c <_ZdlPvj>
90002b10:	4620      	mov	r0, r4
90002b12:	bd10      	pop	{r4, pc}
90002b14:	9002c570 	.word	0x9002c570

90002b18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b18:	4b03      	ldr	r3, [pc, #12]	@ (90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b1a:	b510      	push	{r4, lr}
90002b1c:	4604      	mov	r4, r0
90002b1e:	6003      	str	r3, [r0, #0]
90002b20:	f00d fa11 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b24:	4620      	mov	r0, r4
90002b26:	bd10      	pop	{r4, pc}
90002b28:	9002c53c 	.word	0x9002c53c

90002b2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b2c:	4b06      	ldr	r3, [pc, #24]	@ (90002b48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002b2e:	b510      	push	{r4, lr}
90002b30:	4604      	mov	r4, r0
90002b32:	6003      	str	r3, [r0, #0]
90002b34:	f00d fa07 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b38:	f44f 7123 	mov.w	r1, #652	@ 0x28c
90002b3c:	4620      	mov	r0, r4
90002b3e:	f026 fa0d 	bl	90028f5c <_ZdlPvj>
90002b42:	4620      	mov	r0, r4
90002b44:	bd10      	pop	{r4, pc}
90002b46:	bf00      	nop
90002b48:	9002c53c 	.word	0x9002c53c

90002b4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b4c:	4b03      	ldr	r3, [pc, #12]	@ (90002b5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b4e:	b510      	push	{r4, lr}
90002b50:	4604      	mov	r4, r0
90002b52:	6003      	str	r3, [r0, #0]
90002b54:	f00d f9f7 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b58:	4620      	mov	r0, r4
90002b5a:	bd10      	pop	{r4, pc}
90002b5c:	9002c508 	.word	0x9002c508

90002b60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b60:	4b05      	ldr	r3, [pc, #20]	@ (90002b78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b62:	b510      	push	{r4, lr}
90002b64:	4604      	mov	r4, r0
90002b66:	6003      	str	r3, [r0, #0]
90002b68:	f00d f9ed 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6c:	2118      	movs	r1, #24
90002b6e:	4620      	mov	r0, r4
90002b70:	f026 f9f4 	bl	90028f5c <_ZdlPvj>
90002b74:	4620      	mov	r0, r4
90002b76:	bd10      	pop	{r4, pc}
90002b78:	9002c508 	.word	0x9002c508

90002b7c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b7c:	b510      	push	{r4, lr}
90002b7e:	4a0c      	ldr	r2, [pc, #48]	@ (90002bb0 <_ZN12FrontendHeapD1Ev+0x34>)
90002b80:	4604      	mov	r4, r0
90002b82:	4b0c      	ldr	r3, [pc, #48]	@ (90002bb4 <_ZN12FrontendHeapD1Ev+0x38>)
90002b84:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002b88:	6022      	str	r2, [r4, #0]
90002b8a:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002b8e:	f00d f9da 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b92:	4b09      	ldr	r3, [pc, #36]	@ (90002bb8 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b94:	4620      	mov	r0, r4
90002b96:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b9a:	f00d f9d4 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b9e:	4b07      	ldr	r3, [pc, #28]	@ (90002bbc <_ZN12FrontendHeapD1Ev+0x40>)
90002ba0:	4620      	mov	r0, r4
90002ba2:	f840 3f14 	str.w	r3, [r0, #20]!
90002ba6:	f00d f9ce 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002baa:	4620      	mov	r0, r4
90002bac:	bd10      	pop	{r4, pc}
90002bae:	bf00      	nop
90002bb0:	9002c5a4 	.word	0x9002c5a4
90002bb4:	9002c570 	.word	0x9002c570
90002bb8:	9002c53c 	.word	0x9002c53c
90002bbc:	9002c508 	.word	0x9002c508

90002bc0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002bc0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002bc2:	4c0c      	ldr	r4, [pc, #48]	@ (90002bf4 <__tcf_0+0x34>)
90002bc4:	4a0c      	ldr	r2, [pc, #48]	@ (90002bf8 <__tcf_0+0x38>)
90002bc6:	4b0d      	ldr	r3, [pc, #52]	@ (90002bfc <__tcf_0+0x3c>)
90002bc8:	f504 702e 	add.w	r0, r4, #696	@ 0x2b8
90002bcc:	6022      	str	r2, [r4, #0]
90002bce:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002bd2:	f00d f9b8 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd6:	4b0a      	ldr	r3, [pc, #40]	@ (90002c00 <__tcf_0+0x40>)
90002bd8:	4620      	mov	r0, r4
90002bda:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bde:	f00d f9b2 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be2:	4620      	mov	r0, r4
90002be4:	4b07      	ldr	r3, [pc, #28]	@ (90002c04 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bea:	f840 3f14 	str.w	r3, [r0, #20]!
90002bee:	f00d b9aa 	b.w	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf2:	bf00      	nop
90002bf4:	24006f18 	.word	0x24006f18
90002bf8:	9002c5a4 	.word	0x9002c5a4
90002bfc:	9002c570 	.word	0x9002c570
90002c00:	9002c53c 	.word	0x9002c53c
90002c04:	9002c508 	.word	0x9002c508

90002c08 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002c08:	b510      	push	{r4, lr}
90002c0a:	4a0e      	ldr	r2, [pc, #56]	@ (90002c44 <_ZN12FrontendHeapD0Ev+0x3c>)
90002c0c:	4604      	mov	r4, r0
90002c0e:	4b0e      	ldr	r3, [pc, #56]	@ (90002c48 <_ZN12FrontendHeapD0Ev+0x40>)
90002c10:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002c14:	6022      	str	r2, [r4, #0]
90002c16:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002c1a:	f00d f994 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c1e:	4b0b      	ldr	r3, [pc, #44]	@ (90002c4c <_ZN12FrontendHeapD0Ev+0x44>)
90002c20:	4620      	mov	r0, r4
90002c22:	f840 3f2c 	str.w	r3, [r0, #44]!
90002c26:	f00d f98e 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c2a:	4b09      	ldr	r3, [pc, #36]	@ (90002c50 <_ZN12FrontendHeapD0Ev+0x48>)
90002c2c:	4620      	mov	r0, r4
90002c2e:	f840 3f14 	str.w	r3, [r0, #20]!
90002c32:	f00d f988 	bl	9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c36:	4620      	mov	r0, r4
90002c38:	f240 412c 	movw	r1, #1068	@ 0x42c
90002c3c:	f026 f98e 	bl	90028f5c <_ZdlPvj>
90002c40:	4620      	mov	r0, r4
90002c42:	bd10      	pop	{r4, pc}
90002c44:	9002c5a4 	.word	0x9002c5a4
90002c48:	9002c570 	.word	0x9002c570
90002c4c:	9002c53c 	.word	0x9002c53c
90002c50:	9002c508 	.word	0x9002c508

90002c54 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c58:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c5a:	2400      	movs	r4, #0
90002c5c:	f001 fce0 	bl	90004620 <_ZN14BitmapDatabase11getInstanceEv>
90002c60:	4605      	mov	r5, r0
90002c62:	f001 fce1 	bl	90004628 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c66:	4623      	mov	r3, r4
90002c68:	4601      	mov	r1, r0
90002c6a:	4622      	mov	r2, r4
90002c6c:	4628      	mov	r0, r5
90002c6e:	9400      	str	r4, [sp, #0]
90002c70:	f017 f8b2 	bl	90019dd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c74:	4b29      	ldr	r3, [pc, #164]	@ (90002d1c <touchgfx_init+0xc8>)
90002c76:	4a2a      	ldr	r2, [pc, #168]	@ (90002d20 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c78:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c7a:	4c2a      	ldr	r4, [pc, #168]	@ (90002d24 <touchgfx_init+0xd0>)
90002c7c:	601a      	str	r2, [r3, #0]
90002c7e:	f002 fec5 	bl	90005a0c <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c82:	4b29      	ldr	r3, [pc, #164]	@ (90002d28 <touchgfx_init+0xd4>)
90002c84:	4a29      	ldr	r2, [pc, #164]	@ (90002d2c <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c86:	482a      	ldr	r0, [pc, #168]	@ (90002d30 <touchgfx_init+0xdc>)
90002c88:	609a      	str	r2, [r3, #8]
90002c8a:	f017 f80d 	bl	90019ca8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c8e:	6823      	ldr	r3, [r4, #0]
90002c90:	f3bf 8f5b 	dmb	ish
90002c94:	07db      	lsls	r3, r3, #31
90002c96:	d505      	bpl.n	90002ca4 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c98:	4826      	ldr	r0, [pc, #152]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002c9a:	b002      	add	sp, #8
90002c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002ca0:	f7fe b950 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002ca4:	4620      	mov	r0, r4
90002ca6:	f026 f95b 	bl	90028f60 <__cxa_guard_acquire>
90002caa:	2800      	cmp	r0, #0
90002cac:	d0f4      	beq.n	90002c98 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002cae:	4d22      	ldr	r5, [pc, #136]	@ (90002d38 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002cb0:	4b22      	ldr	r3, [pc, #136]	@ (90002d3c <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002cb2:	f505 7634 	add.w	r6, r5, #720	@ 0x2d0
        : presenterStorage(pres),
90002cb6:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002cba:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002cbe:	f505 772e 	add.w	r7, r5, #696	@ 0x2b8
90002cc2:	602b      	str	r3, [r5, #0]
90002cc4:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002cc6:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002cc8:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002ccc:	f00d f93c 	bl	9000ff48 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cd0:	4b1b      	ldr	r3, [pc, #108]	@ (90002d40 <touchgfx_init+0xec>)
90002cd2:	4640      	mov	r0, r8
90002cd4:	616b      	str	r3, [r5, #20]
90002cd6:	f00d f937 	bl	9000ff48 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cda:	4b1a      	ldr	r3, [pc, #104]	@ (90002d44 <touchgfx_init+0xf0>)
90002cdc:	4638      	mov	r0, r7
90002cde:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002ce0:	f00d f932 	bl	9000ff48 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ce4:	4b18      	ldr	r3, [pc, #96]	@ (90002d48 <touchgfx_init+0xf4>)
90002ce6:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
90002cea:	f8c5 32b8 	str.w	r3, [r5, #696]	@ 0x2b8
90002cee:	f002 ff69 	bl	90005bc4 <_ZN5ModelC1Ev>
90002cf2:	462a      	mov	r2, r5
90002cf4:	f505 7133 	add.w	r1, r5, #716	@ 0x2cc
90002cf8:	4630      	mov	r0, r6
90002cfa:	f002 ff59 	bl	90005bb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cfe:	4630      	mov	r0, r6
90002d00:	f002 fad8 	bl	900052b4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002d04:	4811      	ldr	r0, [pc, #68]	@ (90002d4c <touchgfx_init+0xf8>)
90002d06:	f026 fcbd 	bl	90029684 <atexit>
90002d0a:	4620      	mov	r0, r4
90002d0c:	f026 f934 	bl	90028f78 <__cxa_guard_release>
90002d10:	4808      	ldr	r0, [pc, #32]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002d12:	b002      	add	sp, #8
90002d14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002d18:	f7fe b914 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002d1c:	240219f0 	.word	0x240219f0
90002d20:	240060c0 	.word	0x240060c0
90002d24:	24006f14 	.word	0x24006f14
90002d28:	240060e0 	.word	0x240060e0
90002d2c:	240060c4 	.word	0x240060c4
90002d30:	24000040 	.word	0x24000040
90002d34:	24006030 	.word	0x24006030
90002d38:	24006f18 	.word	0x24006f18
90002d3c:	9002c5a4 	.word	0x9002c5a4
90002d40:	9002c508 	.word	0x9002c508
90002d44:	9002c53c 	.word	0x9002c53c
90002d48:	9002c570 	.word	0x9002c570
90002d4c:	90002bc1 	.word	0x90002bc1

90002d50 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d50:	4770      	bx	lr
90002d52:	bf00      	nop

90002d54 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d54:	4801      	ldr	r0, [pc, #4]	@ (90002d5c <touchgfx_taskEntry+0x8>)
90002d56:	f7fe b943 	b.w	90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>
90002d5a:	bf00      	nop
90002d5c:	24006030 	.word	0x24006030

90002d60 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d60:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d62:	4e2a      	ldr	r6, [pc, #168]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002d64:	4b2a      	ldr	r3, [pc, #168]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d66:	4c2b      	ldr	r4, [pc, #172]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d68:	4630      	mov	r0, r6
static LCD16bpp display;
90002d6a:	4d2b      	ldr	r5, [pc, #172]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d6c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d6e:	f7ff fdd7 	bl	90002920 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d72:	4628      	mov	r0, r5
90002d74:	f01c f940 	bl	9001eff8 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d78:	4828      	ldr	r0, [pc, #160]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d7a:	f014 fd37 	bl	900177ec <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d7e:	4b28      	ldr	r3, [pc, #160]	@ (90002e20 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d80:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d82:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d86:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d8a:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d8c:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d8e:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d90:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d94:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d96:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d98:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d9c:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002da0:	4c20      	ldr	r4, [pc, #128]	@ (90002e24 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002da2:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002da4:	4c20      	ldr	r4, [pc, #128]	@ (90002e28 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002da6:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002da8:	4c20      	ldr	r4, [pc, #128]	@ (90002e2c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002daa:	8020      	strh	r0, [r4, #0]
90002dac:	4c20      	ldr	r4, [pc, #128]	@ (90002e30 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002dae:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002db0:	4c20      	ldr	r4, [pc, #128]	@ (90002e34 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002db2:	4821      	ldr	r0, [pc, #132]	@ (90002e38 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002db4:	8021      	strh	r1, [r4, #0]
90002db6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002db8:	4820      	ldr	r0, [pc, #128]	@ (90002e3c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002dba:	4921      	ldr	r1, [pc, #132]	@ (90002e40 <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dbc:	4c21      	ldr	r4, [pc, #132]	@ (90002e44 <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002dbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dc2:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002dc6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dca:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002dcc:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002dd0:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002dd4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002dd8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002ddc:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002de0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002de4:	7002      	strb	r2, [r0, #0]
90002de6:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002de8:	4917      	ldr	r1, [pc, #92]	@ (90002e48 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002dea:	4818      	ldr	r0, [pc, #96]	@ (90002e4c <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002dec:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002dee:	4918      	ldr	r1, [pc, #96]	@ (90002e50 <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002df0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002df4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002df8:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002dfc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002e00:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002e04:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002e08:	bd70      	pop	{r4, r5, r6, pc}
90002e0a:	bf00      	nop
90002e0c:	2400616c 	.word	0x2400616c
90002e10:	9002a730 	.word	0x9002a730
90002e14:	24006f10 	.word	0x24006f10
90002e18:	240060e0 	.word	0x240060e0
90002e1c:	240060c4 	.word	0x240060c4
90002e20:	24006030 	.word	0x24006030
90002e24:	01000001 	.word	0x01000001
90002e28:	2402198c 	.word	0x2402198c
90002e2c:	24021980 	.word	0x24021980
90002e30:	24021986 	.word	0x24021986
90002e34:	24021982 	.word	0x24021982
90002e38:	24021988 	.word	0x24021988
90002e3c:	24021984 	.word	0x24021984
90002e40:	9002c388 	.word	0x9002c388
90002e44:	01010000 	.word	0x01010000
90002e48:	00440400 	.word	0x00440400
90002e4c:	00140016 	.word	0x00140016
90002e50:	9002a708 	.word	0x9002a708

90002e54 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e54:	4801      	ldr	r0, [pc, #4]	@ (90002e5c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e56:	f7ff badd 	b.w	90002414 <_ZN8STM32DMAD1Ev>
90002e5a:	bf00      	nop
90002e5c:	2400616c 	.word	0x2400616c

90002e60 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e60:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e64:	b112      	cbz	r2, 90002e6c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e66:	6803      	ldr	r3, [r0, #0]
90002e68:	695b      	ldr	r3, [r3, #20]
90002e6a:	4718      	bx	r3
        }
    }
90002e6c:	4770      	bx	lr
90002e6e:	bf00      	nop

90002e70 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e70:	2000      	movs	r0, #0
90002e72:	4770      	bx	lr

90002e74 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e74:	8081      	strh	r1, [r0, #4]
    }
90002e76:	4770      	bx	lr

90002e78 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e78:	80c1      	strh	r1, [r0, #6]
    }
90002e7a:	4770      	bx	lr

90002e7c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e7c:	8101      	strh	r1, [r0, #8]
    }
90002e7e:	4770      	bx	lr

90002e80 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e80:	8141      	strh	r1, [r0, #10]
    }
90002e82:	4770      	bx	lr

90002e84 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e8c:	4770      	bx	lr
90002e8e:	bf00      	nop

90002e90 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e90:	4770      	bx	lr
90002e92:	bf00      	nop

90002e94 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e98:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e9c:	6803      	ldr	r3, [r0, #0]
90002e9e:	eba2 020c 	sub.w	r2, r2, ip
90002ea2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002ea6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002ea8:	eba1 010c 	sub.w	r1, r1, ip
90002eac:	b212      	sxth	r2, r2
90002eae:	b209      	sxth	r1, r1
90002eb0:	4718      	bx	r3
90002eb2:	bf00      	nop

90002eb4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002eb4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002eb6:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002eba:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002ebe:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002ec2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002ec6:	6010      	str	r0, [r2, #0]
    }
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002ecc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002ed0:	b11a      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002ed2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002ed6:	b102      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002ed8:	6018      	str	r0, [r3, #0]
        }
    }
90002eda:	4770      	bx	lr

90002edc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002edc:	2000      	movs	r0, #0
90002ede:	4770      	bx	lr

90002ee0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002ee0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002ee2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ee4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ee6:	809a      	strh	r2, [r3, #4]
    }
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eec:	4770      	bx	lr
90002eee:	bf00      	nop

90002ef0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ef0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ef4:	4770      	bx	lr
90002ef6:	bf00      	nop

90002ef8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ef8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002efc:	4770      	bx	lr
90002efe:	bf00      	nop

90002f00 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002f00:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002f04:	688a      	ldr	r2, [r1, #8]
90002f06:	f8c0 c000 	str.w	ip, [r0]
90002f0a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002f0c:	4770      	bx	lr
90002f0e:	bf00      	nop

90002f10 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002f10:	2200      	movs	r2, #0
90002f12:	6002      	str	r2, [r0, #0]
90002f14:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002f16:	4770      	bx	lr

90002f18 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002f18:	2000      	movs	r0, #0
90002f1a:	4770      	bx	lr

90002f1c <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002f1c:	7701      	strb	r1, [r0, #28]
    }
90002f1e:	4770      	bx	lr

90002f20 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002f20:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop

90002f28 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002f28:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002f2c:	4770      	bx	lr
90002f2e:	bf00      	nop

90002f30 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002f30:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f34:	4770      	bx	lr
90002f36:	bf00      	nop

90002f38 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f38:	2001      	movs	r0, #1
90002f3a:	4770      	bx	lr

90002f3c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f3c:	3098      	adds	r0, #152	@ 0x98
90002f3e:	4770      	bx	lr

90002f40 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f40:	308c      	adds	r0, #140	@ 0x8c
90002f42:	4770      	bx	lr

90002f44 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f44:	3084      	adds	r0, #132	@ 0x84
90002f46:	4770      	bx	lr

90002f48 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f48:	4770      	bx	lr
90002f4a:	bf00      	nop

90002f4c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f50:	4770      	bx	lr
90002f52:	bf00      	nop

90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f54:	4b03      	ldr	r3, [pc, #12]	@ (90002f64 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f56:	2290      	movs	r2, #144	@ 0x90
90002f58:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f5c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f60:	4770      	bx	lr
90002f62:	bf00      	nop
90002f64:	e000e100 	.word	0xe000e100

90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f68:	4a09      	ldr	r2, [pc, #36]	@ (90002f90 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f6a:	490a      	ldr	r1, [pc, #40]	@ (90002f94 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f6c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f6e:	480a      	ldr	r0, [pc, #40]	@ (90002f98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f70:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f74:	3b01      	subs	r3, #1
90002f76:	b29b      	uxth	r3, r3
90002f78:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f7a:	6911      	ldr	r1, [r2, #16]
90002f7c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f80:	3901      	subs	r1, #1
90002f82:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f84:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f86:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f88:	f043 0301 	orr.w	r3, r3, #1
90002f8c:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f8e:	4770      	bx	lr
90002f90:	50001000 	.word	0x50001000
90002f94:	24007346 	.word	0x24007346
90002f98:	24007344 	.word	0x24007344

90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f9c:	4b01      	ldr	r3, [pc, #4]	@ (90002fa4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f9e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002fa2:	4770      	bx	lr
90002fa4:	50001000 	.word	0x50001000

90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fa8:	4b02      	ldr	r3, [pc, #8]	@ (90002fb4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002faa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fac:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002fb0:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002fb2:	4770      	bx	lr
90002fb4:	50001000 	.word	0x50001000

90002fb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fb8:	4770      	bx	lr
90002fba:	bf00      	nop

90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002fbc:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002fc0:	2300      	movs	r3, #0
90002fc2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002fc6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002fca:	4770      	bx	lr

90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002fcc:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002fd0:	4770      	bx	lr
90002fd2:	bf00      	nop

90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fd4:	b510      	push	{r4, lr}
90002fd6:	4604      	mov	r4, r0
90002fd8:	2130      	movs	r1, #48	@ 0x30
90002fda:	f025 ffbf 	bl	90028f5c <_ZdlPvj>
90002fde:	4620      	mov	r0, r4
90002fe0:	bd10      	pop	{r4, pc}
90002fe2:	bf00      	nop

90002fe4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002fe4:	b510      	push	{r4, lr}
90002fe6:	4604      	mov	r4, r0
90002fe8:	212c      	movs	r1, #44	@ 0x2c
90002fea:	f025 ffb7 	bl	90028f5c <_ZdlPvj>
90002fee:	4620      	mov	r0, r4
90002ff0:	bd10      	pop	{r4, pc}
90002ff2:	bf00      	nop

90002ff4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ff4:	b510      	push	{r4, lr}
90002ff6:	4604      	mov	r4, r0
90002ff8:	21bc      	movs	r1, #188	@ 0xbc
90002ffa:	f025 ffaf 	bl	90028f5c <_ZdlPvj>
90002ffe:	4620      	mov	r0, r4
90003000:	bd10      	pop	{r4, pc}
90003002:	bf00      	nop

90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90003004:	b911      	cbnz	r1, 9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90003006:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
9000300a:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
9000300c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000300e:	4a03      	ldr	r2, [pc, #12]	@ (9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90003010:	f44f 7192 	mov.w	r1, #292	@ 0x124
90003014:	4b02      	ldr	r3, [pc, #8]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90003016:	4803      	ldr	r0, [pc, #12]	@ (90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90003018:	f026 fb16 	bl	90029648 <__assert_func>
9000301c:	9002ae20 	.word	0x9002ae20
90003020:	9002ae0c 	.word	0x9002ae0c
90003024:	9002af3c 	.word	0x9002af3c

90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90003028:	b921      	cbnz	r1, 90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
9000302a:	6840      	ldr	r0, [r0, #4]
9000302c:	4611      	mov	r1, r2
9000302e:	6803      	ldr	r3, [r0, #0]
90003030:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003032:	4718      	bx	r3
        assert(handle < no_streams);
90003034:	4b03      	ldr	r3, [pc, #12]	@ (90003044 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003036:	f44f 718f 	mov.w	r1, #286	@ 0x11e
9000303a:	4a03      	ldr	r2, [pc, #12]	@ (90003048 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
9000303c:	4803      	ldr	r0, [pc, #12]	@ (9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000303e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003040:	f026 fb02 	bl	90029648 <__assert_func>
90003044:	9002ae0c 	.word	0x9002ae0c
90003048:	9002af84 	.word	0x9002af84
9000304c:	9002af3c 	.word	0x9002af3c

90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90003050:	b909      	cbnz	r1, 90003056 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90003052:	68c0      	ldr	r0, [r0, #12]
90003054:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003056:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003058:	4a03      	ldr	r2, [pc, #12]	@ (90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000305a:	f44f 718b 	mov.w	r1, #278	@ 0x116
9000305e:	4b03      	ldr	r3, [pc, #12]	@ (9000306c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003060:	4803      	ldr	r0, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90003062:	f026 faf1 	bl	90029648 <__assert_func>
90003066:	bf00      	nop
90003068:	9002b0c4 	.word	0x9002b0c4
9000306c:	9002ae0c 	.word	0x9002ae0c
90003070:	9002af3c 	.word	0x9002af3c

90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003074:	b921      	cbnz	r1, 90003080 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003076:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003078:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000307a:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000307e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003080:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003082:	4a03      	ldr	r2, [pc, #12]	@ (90003090 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003084:	2141      	movs	r1, #65	@ 0x41
90003086:	4b03      	ldr	r3, [pc, #12]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003088:	4803      	ldr	r0, [pc, #12]	@ (90003098 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000308a:	f026 fadd 	bl	90029648 <__assert_func>
9000308e:	bf00      	nop
90003090:	9002b20c 	.word	0x9002b20c
90003094:	9002ae0c 	.word	0x9002ae0c
90003098:	9002af3c 	.word	0x9002af3c

9000309c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000309c:	b508      	push	{r3, lr}
9000309e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900030a0:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
900030a4:	b940      	cbnz	r0, 900030b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
900030a6:	2201      	movs	r2, #1
900030a8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
900030ac:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
900030b0:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
900030b4:	6308      	str	r0, [r1, #48]	@ 0x30
    }
900030b6:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900030b8:	4b03      	ldr	r3, [pc, #12]	@ (900030c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
900030ba:	f240 116d 	movw	r1, #365	@ 0x16d
900030be:	4a03      	ldr	r2, [pc, #12]	@ (900030cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
900030c0:	4803      	ldr	r0, [pc, #12]	@ (900030d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
900030c2:	f026 fac1 	bl	90029648 <__assert_func>
900030c6:	bf00      	nop
900030c8:	9002b358 	.word	0x9002b358
900030cc:	9002b388 	.word	0x9002b388
900030d0:	9002af3c 	.word	0x9002af3c

900030d4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030d4:	f00d ba1c 	b.w	90010510 <_ZN8touchgfx3HAL10beginFrameEv>

900030d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030d8:	f00d ba26 	b.w	90010528 <_ZN8touchgfx3HAL8endFrameEv>

900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030dc:	f00d b9e2 	b.w	900104a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030e0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030e0:	f00d bb51 	b.w	90010786 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030e4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030e4:	4814      	ldr	r0, [pc, #80]	@ (90003138 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030e6:	6943      	ldr	r3, [r0, #20]
900030e8:	03d9      	lsls	r1, r3, #15
900030ea:	d523      	bpl.n	90003134 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030ec:	2300      	movs	r3, #0
{
900030ee:	b510      	push	{r4, lr}
900030f0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030f4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030f8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030fc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003100:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003104:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003108:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000310c:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003110:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003112:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003116:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003118:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
9000311c:	1c5a      	adds	r2, r3, #1
9000311e:	d1f8      	bne.n	90003112 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90003120:	f1ac 0c20 	sub.w	ip, ip, #32
90003124:	f11c 0f20 	cmn.w	ip, #32
90003128:	d1f0      	bne.n	9000310c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000312a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000312e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003132:	bd10      	pop	{r4, pc}
90003134:	4770      	bx	lr
90003136:	bf00      	nop
90003138:	e000ed00 	.word	0xe000ed00

9000313c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
9000313c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000313e:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003140:	bb59      	cbnz	r1, 9000319a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
90003142:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003144:	6840      	ldr	r0, [r0, #4]
90003146:	461d      	mov	r5, r3
90003148:	4616      	mov	r6, r2
9000314a:	6803      	ldr	r3, [r0, #0]
9000314c:	691b      	ldr	r3, [r3, #16]
9000314e:	4798      	blx	r3
90003150:	b908      	cbnz	r0, 90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003152:	b003      	add	sp, #12
90003154:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003156:	4f14      	ldr	r7, [pc, #80]	@ (900031a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003158:	2101      	movs	r1, #1
9000315a:	6838      	ldr	r0, [r7, #0]
9000315c:	f00d ffe8 	bl	90011130 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003160:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003162:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003164:	4668      	mov	r0, sp
90003166:	f014 fb27 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
9000316a:	4668      	mov	r0, sp
9000316c:	f012 feec 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003170:	4b0e      	ldr	r3, [pc, #56]	@ (900031ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003172:	6860      	ldr	r0, [r4, #4]
90003174:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003176:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
9000317a:	881b      	ldrh	r3, [r3, #0]
9000317c:	f9bd 2000 	ldrsh.w	r2, [sp]
90003180:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003184:	6804      	ldr	r4, [r0, #0]
90003186:	eb05 0242 	add.w	r2, r5, r2, lsl #1
9000318a:	69e4      	ldr	r4, [r4, #28]
9000318c:	47a0      	blx	r4
9000318e:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003190:	6803      	ldr	r3, [r0, #0]
90003192:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003194:	4798      	blx	r3
    }
90003196:	b003      	add	sp, #12
90003198:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
9000319a:	4b05      	ldr	r3, [pc, #20]	@ (900031b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000319c:	21ea      	movs	r1, #234	@ 0xea
9000319e:	4a05      	ldr	r2, [pc, #20]	@ (900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
900031a0:	4805      	ldr	r0, [pc, #20]	@ (900031b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
900031a2:	f026 fa51 	bl	90029648 <__assert_func>
900031a6:	bf00      	nop
900031a8:	2402198c 	.word	0x2402198c
900031ac:	24021986 	.word	0x24021986
900031b0:	9002ae0c 	.word	0x9002ae0c
900031b4:	9002b4a0 	.word	0x9002b4a0
900031b8:	9002af3c 	.word	0x9002af3c

900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031bc:	4b08      	ldr	r3, [pc, #32]	@ (900031e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900031be:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031ca:	f3bf 8f6f 	isb	sy
900031ce:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031d2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031da:	f3bf 8f6f 	isb	sy
}
900031de:	4770      	bx	lr
900031e0:	e000e100 	.word	0xe000e100

900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031e4:	4b03      	ldr	r3, [pc, #12]	@ (900031f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031ea:	609a      	str	r2, [r3, #8]
900031ec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031f0:	609a      	str	r2, [r3, #8]
}
900031f2:	4770      	bx	lr
900031f4:	e000e100 	.word	0xe000e100

900031f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031fc:	2900      	cmp	r1, #0
900031fe:	f040 8096 	bne.w	9000332e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
90003202:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90003206:	4604      	mov	r4, r0
90003208:	b933      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
9000320a:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
9000320e:	b91b      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
90003210:	2501      	movs	r5, #1
    }
90003212:	4628      	mov	r0, r5
90003214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
90003218:	4b48      	ldr	r3, [pc, #288]	@ (9000333c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
9000321a:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000321c:	6921      	ldr	r1, [r4, #16]
9000321e:	681b      	ldr	r3, [r3, #0]
90003220:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
90003224:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90003228:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
9000322a:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000322e:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
90003230:	b979      	cbnz	r1, 90003252 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003232:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003234:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003236:	6961      	ldr	r1, [r4, #20]
90003238:	fb01 f303 	mul.w	r3, r1, r3
9000323c:	69a1      	ldr	r1, [r4, #24]
9000323e:	fb01 f202 	mul.w	r2, r1, r2
90003242:	4293      	cmp	r3, r2
90003244:	d824      	bhi.n	90003290 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003246:	2300      	movs	r3, #0
    }
90003248:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
9000324a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000324e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
90003252:	6813      	ldr	r3, [r2, #0]
90003254:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003256:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003258:	695b      	ldr	r3, [r3, #20]
9000325a:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
9000325c:	69e1      	ldr	r1, [r4, #28]
9000325e:	bb21      	cbnz	r1, 900032aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003260:	6a23      	ldr	r3, [r4, #32]
90003262:	2b00      	cmp	r3, #0
90003264:	d142      	bne.n	900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003266:	4f36      	ldr	r7, [pc, #216]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003268:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
9000326c:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000326e:	2d00      	cmp	r5, #0
90003270:	d02c      	beq.n	900032cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
90003272:	699b      	ldr	r3, [r3, #24]
90003274:	4630      	mov	r0, r6
90003276:	4798      	blx	r3
90003278:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000327a:	6833      	ldr	r3, [r6, #0]
9000327c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000327e:	42bb      	cmp	r3, r7
90003280:	d145      	bne.n	9000330e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
90003282:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003284:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003286:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003288:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000328a:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
9000328c:	60a2      	str	r2, [r4, #8]
9000328e:	e7d2      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003290:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003294:	b138      	cbz	r0, 900032a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003296:	1a9b      	subs	r3, r3, r2
90003298:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000329c:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000329e:	bf98      	it	ls
900032a0:	f102 32ff 	addls.w	r2, r2, #4294967295
900032a4:	6222      	str	r2, [r4, #32]
            return true;
900032a6:	2301      	movs	r3, #1
900032a8:	e7ce      	b.n	90003248 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
900032aa:	6833      	ldr	r3, [r6, #0]
900032ac:	4630      	mov	r0, r6
900032ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900032b0:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032b2:	6833      	ldr	r3, [r6, #0]
900032b4:	69e5      	ldr	r5, [r4, #28]
900032b6:	4630      	mov	r0, r6
900032b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032ba:	4798      	blx	r3
900032bc:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
900032be:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032c0:	bf28      	it	cs
900032c2:	2500      	movcs	r5, #0
900032c4:	4f1e      	ldr	r7, [pc, #120]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
900032c6:	bf38      	it	cc
900032c8:	2501      	movcc	r5, #1
900032ca:	e7d6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032cc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900032ce:	42ba      	cmp	r2, r7
900032d0:	d124      	bne.n	9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
900032d2:	f8d6 8014 	ldr.w	r8, [r6, #20]
900032d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032d8:	4630      	mov	r0, r6
900032da:	4798      	blx	r3
900032dc:	4580      	cmp	r8, r0
900032de:	d219      	bcs.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032e0:	6833      	ldr	r3, [r6, #0]
900032e2:	4630      	mov	r0, r6
900032e4:	699b      	ldr	r3, [r3, #24]
900032e6:	4798      	blx	r3
900032e8:	4605      	mov	r5, r0
900032ea:	e7c6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032ec:	6832      	ldr	r2, [r6, #0]
900032ee:	4f14      	ldr	r7, [pc, #80]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032f0:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032f4:	42ba      	cmp	r2, r7
900032f6:	d116      	bne.n	90003326 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032f8:	6970      	ldr	r0, [r6, #20]
900032fa:	18c1      	adds	r1, r0, r3
900032fc:	4630      	mov	r0, r6
900032fe:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003300:	6a22      	ldr	r2, [r4, #32]
90003302:	68a3      	ldr	r3, [r4, #8]
90003304:	4413      	add	r3, r2
                        stream.skip_frames = 0;
90003306:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
90003308:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
9000330a:	6222      	str	r2, [r4, #32]
9000330c:	e7ac      	b.n	90003268 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000330e:	4630      	mov	r0, r6
90003310:	4798      	blx	r3
90003312:	e7b7      	b.n	90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
90003314:	2300      	movs	r3, #0
90003316:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
9000331a:	e7ae      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
9000331c:	4630      	mov	r0, r6
9000331e:	4790      	blx	r2
90003320:	6833      	ldr	r3, [r6, #0]
90003322:	4680      	mov	r8, r0
90003324:	e7d7      	b.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003326:	4630      	mov	r0, r6
90003328:	4790      	blx	r2
9000332a:	6a23      	ldr	r3, [r4, #32]
9000332c:	e7e5      	b.n	900032fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
9000332e:	4b05      	ldr	r3, [pc, #20]	@ (90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
90003330:	21aa      	movs	r1, #170	@ 0xaa
90003332:	4a05      	ldr	r2, [pc, #20]	@ (90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003334:	4805      	ldr	r0, [pc, #20]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003336:	f026 f987 	bl	90029648 <__assert_func>
9000333a:	bf00      	nop
9000333c:	2402198c 	.word	0x2402198c
90003340:	90001065 	.word	0x90001065
90003344:	9002ae0c 	.word	0x9002ae0c
90003348:	9002b5e8 	.word	0x9002b5e8
9000334c:	9002af3c 	.word	0x9002af3c

90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003350:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003352:	bb11      	cbnz	r1, 9000339a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003354:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003356:	6840      	ldr	r0, [r0, #4]
90003358:	4611      	mov	r1, r2
9000335a:	461a      	mov	r2, r3
9000335c:	6803      	ldr	r3, [r0, #0]
9000335e:	689b      	ldr	r3, [r3, #8]
90003360:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003362:	6860      	ldr	r0, [r4, #4]
90003364:	4a10      	ldr	r2, [pc, #64]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003366:	6803      	ldr	r3, [r0, #0]
90003368:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000336a:	4293      	cmp	r3, r2
9000336c:	d10c      	bne.n	90003388 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000336e:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003370:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003372:	2300      	movs	r3, #0
90003374:	4a0d      	ldr	r2, [pc, #52]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003376:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003378:	60e0      	str	r0, [r4, #12]
9000337a:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000337c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003380:	d104      	bne.n	9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
90003382:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003386:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003388:	4798      	blx	r3
9000338a:	e7f1      	b.n	90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
9000338c:	4620      	mov	r0, r4
9000338e:	46ac      	mov	ip, r5
90003390:	2201      	movs	r2, #1
90003392:	4619      	mov	r1, r3
    }
90003394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003398:	4760      	bx	ip
        assert(handle < no_streams);
9000339a:	4b05      	ldr	r3, [pc, #20]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
9000339c:	214f      	movs	r1, #79	@ 0x4f
9000339e:	4a05      	ldr	r2, [pc, #20]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
900033a0:	4805      	ldr	r0, [pc, #20]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
900033a2:	f026 f951 	bl	90029648 <__assert_func>
900033a6:	bf00      	nop
900033a8:	90001065 	.word	0x90001065
900033ac:	90003425 	.word	0x90003425
900033b0:	9002ae0c 	.word	0x9002ae0c
900033b4:	9002b71c 	.word	0x9002b71c
900033b8:	9002af3c 	.word	0x9002af3c

900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
900033bc:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033be:	bb09      	cbnz	r1, 90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
900033c0:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
900033c2:	6840      	ldr	r0, [r0, #4]
900033c4:	4611      	mov	r1, r2
900033c6:	6803      	ldr	r3, [r0, #0]
900033c8:	68db      	ldr	r3, [r3, #12]
900033ca:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033cc:	6860      	ldr	r0, [r4, #4]
900033ce:	4a10      	ldr	r2, [pc, #64]	@ (90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
900033d0:	6803      	ldr	r3, [r0, #0]
900033d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900033d4:	4293      	cmp	r3, r2
900033d6:	d10c      	bne.n	900033f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033d8:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033da:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033dc:	2300      	movs	r3, #0
900033de:	4a0d      	ldr	r2, [pc, #52]	@ (90003414 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033e0:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033e2:	60e0      	str	r0, [r4, #12]
900033e4:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033e6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033ea:	d104      	bne.n	900033f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033ec:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033f0:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033f2:	4798      	blx	r3
900033f4:	e7f1      	b.n	900033da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033f6:	4620      	mov	r0, r4
900033f8:	46ac      	mov	ip, r5
900033fa:	2201      	movs	r2, #1
900033fc:	4619      	mov	r1, r3
    }
900033fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003402:	4760      	bx	ip
        assert(handle < no_streams);
90003404:	4b04      	ldr	r3, [pc, #16]	@ (90003418 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
90003406:	215f      	movs	r1, #95	@ 0x5f
90003408:	4a04      	ldr	r2, [pc, #16]	@ (9000341c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
9000340a:	4805      	ldr	r0, [pc, #20]	@ (90003420 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
9000340c:	f026 f91c 	bl	90029648 <__assert_func>
90003410:	90001065 	.word	0x90001065
90003414:	90003425 	.word	0x90003425
90003418:	9002ae0c 	.word	0x9002ae0c
9000341c:	9002b888 	.word	0x9002b888
90003420:	9002af3c 	.word	0x9002af3c

90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003424:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003426:	2900      	cmp	r1, #0
90003428:	d14f      	bne.n	900034ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
9000342a:	4604      	mov	r4, r0
        switch (cmd)
9000342c:	2a05      	cmp	r2, #5
9000342e:	d80b      	bhi.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003430:	e8df f002 	tbb	[pc, r2]
90003434:	3c373311 	.word	0x3c373311
90003438:	0b03      	.short	0x0b03
            stream.isPlaying = false;
9000343a:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
9000343c:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000343e:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
90003442:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003444:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003446:	6103      	str	r3, [r0, #16]
    }
90003448:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
9000344a:	3b00      	subs	r3, #0
9000344c:	bf18      	it	ne
9000344e:	2301      	movne	r3, #1
90003450:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003454:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003456:	6840      	ldr	r0, [r0, #4]
90003458:	6803      	ldr	r3, [r0, #0]
9000345a:	691b      	ldr	r3, [r3, #16]
9000345c:	4798      	blx	r3
9000345e:	2800      	cmp	r0, #0
90003460:	d0f2      	beq.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
90003462:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003464:	2101      	movs	r1, #1
                if (!stream.repeat)
90003466:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
9000346a:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000346e:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003470:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
90003472:	2a00      	cmp	r2, #0
90003474:	d1e8      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003476:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003478:	4917      	ldr	r1, [pc, #92]	@ (900034d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000347a:	6823      	ldr	r3, [r4, #0]
9000347c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000347e:	428a      	cmp	r2, r1
90003480:	d11e      	bne.n	900034c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
90003482:	6965      	ldr	r5, [r4, #20]
90003484:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003486:	4620      	mov	r0, r4
90003488:	4798      	blx	r3
9000348a:	4285      	cmp	r5, r0
9000348c:	d1dc      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000348e:	6823      	ldr	r3, [r4, #0]
90003490:	4620      	mov	r0, r4
90003492:	699b      	ldr	r3, [r3, #24]
    }
90003494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003498:	4718      	bx	r3
            stream.isPlaying = false;
9000349a:	2300      	movs	r3, #0
9000349c:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
900034a0:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
900034a2:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034a4:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
900034a6:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034a8:	6102      	str	r2, [r0, #16]
    }
900034aa:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
900034ac:	2101      	movs	r1, #1
            stream.frameCount = 0;
900034ae:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034b0:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
900034b2:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
900034b6:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
900034ba:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034bc:	6102      	str	r2, [r0, #16]
    }
900034be:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
900034c0:	4620      	mov	r0, r4
900034c2:	4790      	blx	r2
900034c4:	6823      	ldr	r3, [r4, #0]
900034c6:	4605      	mov	r5, r0
900034c8:	e7dc      	b.n	90003484 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
900034ca:	4b04      	ldr	r3, [pc, #16]	@ (900034dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
900034cc:	216f      	movs	r1, #111	@ 0x6f
900034ce:	4a04      	ldr	r2, [pc, #16]	@ (900034e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
900034d0:	4804      	ldr	r0, [pc, #16]	@ (900034e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
900034d2:	f026 f8b9 	bl	90029648 <__assert_func>
900034d6:	bf00      	nop
900034d8:	90001065 	.word	0x90001065
900034dc:	9002ae0c 	.word	0x9002ae0c
900034e0:	9002b9c0 	.word	0x9002b9c0
900034e4:	9002af3c 	.word	0x9002af3c

900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034e8:	b538      	push	{r3, r4, r5, lr}
900034ea:	4604      	mov	r4, r0
    HAL::initialize();
900034ec:	f00d f829 	bl	90010542 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034f0:	6823      	ldr	r3, [r4, #0]
900034f2:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900034f4:	f012 fec2 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
900034f8:	4601      	mov	r1, r0
900034fa:	4620      	mov	r0, r4
900034fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034fe:	6823      	ldr	r3, [r4, #0]
90003500:	4a13      	ldr	r2, [pc, #76]	@ (90003550 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
90003502:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
90003506:	4295      	cmp	r5, r2
90003508:	d116      	bne.n	90003538 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000350a:	4a12      	ldr	r2, [pc, #72]	@ (90003554 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000350c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000350e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90003512:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003516:	4810      	ldr	r0, [pc, #64]	@ (90003558 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003518:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
9000351c:	4a0f      	ldr	r2, [pc, #60]	@ (9000355c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000351e:	7005      	strb	r5, [r0, #0]
90003520:	4293      	cmp	r3, r2
90003522:	d110      	bne.n	90003546 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003524:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003526:	4a0e      	ldr	r2, [pc, #56]	@ (90003560 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003528:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000352a:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
9000352c:	4b0d      	ldr	r3, [pc, #52]	@ (90003564 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
9000352e:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
90003530:	4a0d      	ldr	r2, [pc, #52]	@ (90003568 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
90003532:	6459      	str	r1, [r3, #68]	@ 0x44
90003534:	6053      	str	r3, [r2, #4]
}
90003536:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003538:	4a0c      	ldr	r2, [pc, #48]	@ (9000356c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
9000353a:	2300      	movs	r3, #0
9000353c:	4620      	mov	r0, r4
9000353e:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
90003542:	47a8      	blx	r5
90003544:	e7f2      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003546:	2100      	movs	r1, #0
90003548:	4620      	mov	r0, r4
9000354a:	4798      	blx	r3
9000354c:	e7ee      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000354e:	bf00      	nop
90003550:	90000f89 	.word	0x90000f89
90003554:	d003fc00 	.word	0xd003fc00
90003558:	2402198a 	.word	0x2402198a
9000355c:	90000db9 	.word	0x90000db9
90003560:	2402198b 	.word	0x2402198b
90003564:	24007438 	.word	0x24007438
90003568:	24007408 	.word	0x24007408
9000356c:	d007f800 	.word	0xd007f800

90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003570:	4843      	ldr	r0, [pc, #268]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
90003572:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003574:	6804      	ldr	r4, [r0, #0]
90003576:	f3bf 8f5b 	dmb	ish
9000357a:	f014 0401 	ands.w	r4, r4, #1
9000357e:	d001      	beq.n	90003584 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003580:	4840      	ldr	r0, [pc, #256]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003582:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003584:	f025 fcec 	bl	90028f60 <__cxa_guard_acquire>
90003588:	2800      	cmp	r0, #0
9000358a:	d0f9      	beq.n	90003580 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
9000358c:	4d3d      	ldr	r5, [pc, #244]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000358e:	4b3e      	ldr	r3, [pc, #248]	@ (90003688 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003590:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003594:	612c      	str	r4, [r5, #16]
90003596:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
9000359a:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000359e:	4e3b      	ldr	r6, [pc, #236]	@ (9000368c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
900035a0:	e9c5 3400 	strd	r3, r4, [r5]
900035a4:	e9c5 4402 	strd	r4, r4, [r5, #8]
900035a8:	f014 fc05 	bl	90017db6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
900035ac:	f105 0058 	add.w	r0, r5, #88	@ 0x58
900035b0:	f00f fb72 	bl	90012c98 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
900035b4:	4b36      	ldr	r3, [pc, #216]	@ (90003690 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
900035b6:	4a37      	ldr	r2, [pc, #220]	@ (90003694 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
900035b8:	602b      	str	r3, [r5, #0]
900035ba:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
900035bc:	4936      	ldr	r1, [pc, #216]	@ (90003698 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900035be:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
900035c2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
900035c6:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
900035ca:	65a9      	str	r1, [r5, #88]	@ 0x58
900035cc:	b192      	cbz	r2, 900035f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
900035ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035d0:	2800      	cmp	r0, #0
900035d2:	d040      	beq.n	90003656 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900035d4:	6803      	ldr	r3, [r0, #0]
900035d6:	4c31      	ldr	r4, [pc, #196]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
900035d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035da:	42a2      	cmp	r2, r4
900035dc:	d017      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035de:	4790      	blx	r2
        return auxiliaryLCD;
900035e0:	6833      	ldr	r3, [r6, #0]
900035e2:	fab0 f680 	clz	r6, r0
900035e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035e8:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035ea:	2800      	cmp	r0, #0
900035ec:	d03f      	beq.n	9000366e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ee:	6803      	ldr	r3, [r0, #0]
900035f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035f2:	e00a      	b.n	9000360a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035f4:	6898      	ldr	r0, [r3, #8]
900035f6:	4c29      	ldr	r4, [pc, #164]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035f8:	6802      	ldr	r2, [r0, #0]
900035fa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035fc:	42a2      	cmp	r2, r4
900035fe:	d1ee      	bne.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003600:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90003602:	b120      	cbz	r0, 9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90003604:	6803      	ldr	r3, [r0, #0]
90003606:	2601      	movs	r6, #1
90003608:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000360a:	42a3      	cmp	r3, r4
9000360c:	d12a      	bne.n	90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000360e:	4924      	ldr	r1, [pc, #144]	@ (900036a0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90003610:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003612:	2300      	movs	r3, #0
90003614:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
90003618:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
9000361c:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
90003620:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003624:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
90003628:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
9000362c:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
90003630:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
90003634:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003638:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
9000363c:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90003640:	4a18      	ldr	r2, [pc, #96]	@ (900036a4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
90003642:	4819      	ldr	r0, [pc, #100]	@ (900036a8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003644:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003648:	f026 f81c 	bl	90029684 <atexit>
9000364c:	480c      	ldr	r0, [pc, #48]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000364e:	f025 fc93 	bl	90028f78 <__cxa_guard_release>
}
90003652:	480c      	ldr	r0, [pc, #48]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003654:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003656:	6898      	ldr	r0, [r3, #8]
90003658:	4c10      	ldr	r4, [pc, #64]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000365a:	6803      	ldr	r3, [r0, #0]
9000365c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000365e:	42a2      	cmp	r2, r4
90003660:	d0d5      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003662:	e7bc      	b.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003664:	4798      	blx	r3
90003666:	2800      	cmp	r0, #0
90003668:	bf08      	it	eq
9000366a:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000366e:	2e00      	cmp	r6, #0
90003670:	d1cd      	bne.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003672:	4b0e      	ldr	r3, [pc, #56]	@ (900036ac <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003674:	212c      	movs	r1, #44	@ 0x2c
90003676:	4a0e      	ldr	r2, [pc, #56]	@ (900036b0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003678:	480e      	ldr	r0, [pc, #56]	@ (900036b4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
9000367a:	f025 ffe5 	bl	90029648 <__assert_func>
9000367e:	bf00      	nop
90003680:	24007348 	.word	0x24007348
90003684:	2400734c 	.word	0x2400734c
90003688:	9002d348 	.word	0x9002d348
9000368c:	2402198c 	.word	0x2402198c
90003690:	9002c650 	.word	0x9002c650
90003694:	9002c5b8 	.word	0x9002c5b8
90003698:	9002c5d8 	.word	0x9002c5d8
9000369c:	90002f19 	.word	0x90002f19
900036a0:	9002d2fc 	.word	0x9002d2fc
900036a4:	9002d2dc 	.word	0x9002d2dc
900036a8:	90002f51 	.word	0x90002f51
900036ac:	9002bb24 	.word	0x9002bb24
900036b0:	9002bb84 	.word	0x9002bb84
900036b4:	9002bbc0 	.word	0x9002bbc0

900036b8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
900036b8:	b538      	push	{r3, r4, r5, lr}
        return instance;
900036ba:	4c18      	ldr	r4, [pc, #96]	@ (9000371c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
900036bc:	6823      	ldr	r3, [r4, #0]
900036be:	b35b      	cbz	r3, 90003718 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
900036c0:	4b17      	ldr	r3, [pc, #92]	@ (90003720 <HAL_LTDC_LineEventCallback+0x68>)
900036c2:	4a18      	ldr	r2, [pc, #96]	@ (90003724 <HAL_LTDC_LineEventCallback+0x6c>)
900036c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900036c6:	8811      	ldrh	r1, [r2, #0]
900036c8:	428b      	cmp	r3, r1
900036ca:	d00e      	beq.n	900036ea <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900036cc:	f006 fcea 	bl	9000a0a4 <HAL_LTDC_ProgramLineEvent>
900036d0:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
900036d2:	6823      	ldr	r3, [r4, #0]
900036d4:	4620      	mov	r0, r4
900036d6:	6a1b      	ldr	r3, [r3, #32]
900036d8:	4798      	blx	r3
        isFrontPorchEntered = true;
900036da:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900036dc:	2000      	movs	r0, #0
900036de:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
900036e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036e6:	f7fd bb09 	b.w	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036ea:	4b0f      	ldr	r3, [pc, #60]	@ (90003728 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
900036ec:	2500      	movs	r5, #0
900036ee:	8819      	ldrh	r1, [r3, #0]
900036f0:	f006 fcd8 	bl	9000a0a4 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036f4:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
900036f6:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
900036fa:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900036fe:	3201      	adds	r2, #1
90003700:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
90003704:	f7fe fe5e 	bl	900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003708:	6820      	ldr	r0, [r4, #0]
9000370a:	f00d fcb1 	bl	90011070 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
9000370e:	4628      	mov	r0, r5
    }
90003710:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90003714:	f7fd babe 	b.w	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90003718:	bd38      	pop	{r3, r4, r5, pc}
9000371a:	bf00      	nop
9000371c:	2402198c 	.word	0x2402198c
90003720:	50001000 	.word	0x50001000
90003724:	24007346 	.word	0x24007346
90003728:	24007344 	.word	0x24007344

9000372c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000372c:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000372e:	480b      	ldr	r0, [pc, #44]	@ (9000375c <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
90003730:	f7fd fe0e 	bl	90001350 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
90003734:	4c0a      	ldr	r4, [pc, #40]	@ (90003760 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
90003736:	4b0b      	ldr	r3, [pc, #44]	@ (90003764 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
90003738:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
9000373a:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
9000373e:	2101      	movs	r1, #1
90003740:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
90003742:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
90003744:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003748:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
9000374c:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
9000374e:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
90003752:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
90003756:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
9000375a:	bd10      	pop	{r4, pc}
9000375c:	24007438 	.word	0x24007438
90003760:	9002c69c 	.word	0x9002c69c
90003764:	24007408 	.word	0x24007408

90003768 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003768:	4901      	ldr	r1, [pc, #4]	@ (90003770 <vApplicationIdleHook+0x8>)
9000376a:	2000      	movs	r0, #0
9000376c:	f00b bf4c 	b.w	9000f608 <vTaskSetApplicationTaskTag>
90003770:	90001045 	.word	0x90001045

90003774 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003774:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003776:	2064      	movs	r0, #100	@ 0x64
90003778:	f009 fdfe 	bl	9000d378 <osDelay>
  for(;;)
9000377c:	e7fb      	b.n	90003776 <StartDefaultTask+0x2>
9000377e:	bf00      	nop

90003780 <InitializeEquipment>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_InitializeEquipment */
void InitializeEquipment(void *argument)
{
90003780:	b508      	push	{r3, lr}
  /* USER CODE BEGIN InitializeEquipment */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
90003782:	2001      	movs	r0, #1
90003784:	f009 fdf8 	bl	9000d378 <osDelay>
  for(;;)
90003788:	e7fb      	b.n	90003782 <InitializeEquipment+0x2>
9000378a:	bf00      	nop

9000378c <CalculateData>:
* @brief Function implementing the calcData thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_CalculateData */
void CalculateData(void *argument)
9000378c:	b508      	push	{r3, lr}
9000378e:	2001      	movs	r0, #1
90003790:	f009 fdf2 	bl	9000d378 <osDelay>
90003794:	e7fb      	b.n	9000378e <CalculateData+0x2>
90003796:	bf00      	nop

90003798 <SystemClock_Config>:
{
90003798:	b570      	push	{r4, r5, r6, lr}
9000379a:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
9000379c:	224c      	movs	r2, #76	@ 0x4c
9000379e:	2100      	movs	r1, #0
900037a0:	a80a      	add	r0, sp, #40	@ 0x28
900037a2:	f026 f9ed 	bl	90029b80 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900037a6:	2220      	movs	r2, #32
900037a8:	2100      	movs	r1, #0
900037aa:	a802      	add	r0, sp, #8
900037ac:	f026 f9e8 	bl	90029b80 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900037b0:	2002      	movs	r0, #2
900037b2:	f006 fedb 	bl	9000a56c <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037b6:	4a22      	ldr	r2, [pc, #136]	@ (90003840 <SystemClock_Config+0xa8>)
900037b8:	2100      	movs	r1, #0
900037ba:	4b22      	ldr	r3, [pc, #136]	@ (90003844 <SystemClock_Config+0xac>)
900037bc:	9101      	str	r1, [sp, #4]
900037be:	6991      	ldr	r1, [r2, #24]
900037c0:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
900037c4:	6191      	str	r1, [r2, #24]
900037c6:	6991      	ldr	r1, [r2, #24]
900037c8:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
900037cc:	9101      	str	r1, [sp, #4]
900037ce:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900037d0:	f041 0101 	orr.w	r1, r1, #1
900037d4:	62d9      	str	r1, [r3, #44]	@ 0x2c
900037d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900037d8:	f003 0301 	and.w	r3, r3, #1
900037dc:	9301      	str	r3, [sp, #4]
900037de:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037e0:	6993      	ldr	r3, [r2, #24]
900037e2:	049b      	lsls	r3, r3, #18
900037e4:	d5fc      	bpl.n	900037e0 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037e6:	2401      	movs	r4, #1
900037e8:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
900037ec:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
900037ee:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
900037f0:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
900037f2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900037f4:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037f6:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900037fa:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900037fc:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
900037fe:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003802:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003806:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
9000380a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
9000380e:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003812:	f006 ff41 	bl	9000a698 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003816:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003818:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
9000381a:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
9000381c:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
9000381e:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003820:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003822:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003826:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
9000382a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
9000382c:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
9000382e:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003832:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003836:	f007 faab 	bl	9000ad90 <HAL_RCC_ClockConfig>
}
9000383a:	b01e      	add	sp, #120	@ 0x78
9000383c:	bd70      	pop	{r4, r5, r6, pc}
9000383e:	bf00      	nop
90003840:	58024800 	.word	0x58024800
90003844:	58000400 	.word	0x58000400

90003848 <main>:
{
90003848:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000384a:	2400      	movs	r4, #0
{
9000384c:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
9000384e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003850:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003852:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003854:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003858:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
9000385c:	f003 fbee 	bl	9000703c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003860:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003864:	4bd4      	ldr	r3, [pc, #848]	@ (90003bb8 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003866:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003868:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000386c:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
90003870:	4bd2      	ldr	r3, [pc, #840]	@ (90003bbc <main+0x374>)
90003872:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003874:	f003 fc00 	bl	90007078 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003878:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000387c:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000387e:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
90003882:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003884:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003888:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000388c:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003890:	f003 fbf2 	bl	90007078 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003894:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003896:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003898:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
9000389c:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
900038a0:	231a      	movs	r3, #26
900038a2:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038a6:	f240 1301 	movw	r3, #257	@ 0x101
900038aa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038ae:	f003 fbe3 	bl	90007078 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038b2:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038b6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900038b8:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038bc:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038be:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038c2:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900038c6:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038ca:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900038cc:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038d0:	f003 fbd2 	bl	90007078 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038d4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038d6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900038d8:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038dc:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038e0:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038e4:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038e8:	f003 fbc6 	bl	90007078 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900038ec:	4620      	mov	r0, r4
900038ee:	f003 fbb3 	bl	90007058 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900038f2:	4ab3      	ldr	r2, [pc, #716]	@ (90003bc0 <main+0x378>)
900038f4:	6953      	ldr	r3, [r2, #20]
900038f6:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
900038fa:	d111      	bne.n	90003920 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
900038fc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003900:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003904:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003908:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000390c:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003910:	6953      	ldr	r3, [r2, #20]
90003912:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003916:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003918:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000391c:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003920:	48a7      	ldr	r0, [pc, #668]	@ (90003bc0 <main+0x378>)
90003922:	6943      	ldr	r3, [r0, #20]
90003924:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003928:	d124      	bne.n	90003974 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000392a:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000392e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003932:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003936:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000393a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000393e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003942:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003944:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003948:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000394a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000394e:	3b01      	subs	r3, #1
90003950:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003952:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003956:	d1f8      	bne.n	9000394a <main+0x102>
    } while(sets-- != 0U);
90003958:	3c20      	subs	r4, #32
9000395a:	f114 0f20 	cmn.w	r4, #32
9000395e:	d1f1      	bne.n	90003944 <main+0xfc>
90003960:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003964:	6943      	ldr	r3, [r0, #20]
90003966:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000396a:	6143      	str	r3, [r0, #20]
9000396c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003970:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003974:	f003 faac 	bl	90006ed0 <HAL_Init>
  SystemClock_Config();
90003978:	f7ff ff0e 	bl	90003798 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
9000397c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000397e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003980:	4d90      	ldr	r5, [pc, #576]	@ (90003bc4 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003982:	21c0      	movs	r1, #192	@ 0xc0
90003984:	4890      	ldr	r0, [pc, #576]	@ (90003bc8 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003986:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003988:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000398a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000398c:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003990:	2708      	movs	r7, #8
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003992:	f04f 0905 	mov.w	r9, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003996:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
9000399a:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
9000399e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039a2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
900039a6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039aa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ae:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
900039b2:	9302      	str	r3, [sp, #8]
900039b4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900039b6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900039be:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039c2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039c6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
900039ca:	9303      	str	r3, [sp, #12]
900039cc:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
900039ce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039d2:	f043 0304 	orr.w	r3, r3, #4
900039d6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039da:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039de:	f003 0304 	and.w	r3, r3, #4
900039e2:	9304      	str	r3, [sp, #16]
900039e4:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900039e6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
900039ee:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039f2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900039fa:	9305      	str	r3, [sp, #20]
900039fc:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900039fe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a02:	f043 0310 	orr.w	r3, r3, #16
90003a06:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a0e:	f003 0310 	and.w	r3, r3, #16
90003a12:	9306      	str	r3, [sp, #24]
90003a14:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003a16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a1a:	f043 0302 	orr.w	r3, r3, #2
90003a1e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a26:	f003 0302 	and.w	r3, r3, #2
90003a2a:	9307      	str	r3, [sp, #28]
90003a2c:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003a2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003a36:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a3e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003a42:	9308      	str	r3, [sp, #32]
90003a44:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003a46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a4a:	f043 0308 	orr.w	r3, r3, #8
90003a4e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a56:	f003 0308 	and.w	r3, r3, #8
90003a5a:	9309      	str	r3, [sp, #36]	@ 0x24
90003a5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003a5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a62:	f043 0320 	orr.w	r3, r3, #32
90003a66:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a6e:	f003 0320 	and.w	r3, r3, #32
90003a72:	930a      	str	r3, [sp, #40]	@ 0x28
90003a74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003a76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a7a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003a7e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003a8a:	930b      	str	r3, [sp, #44]	@ 0x2c
90003a8c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003a8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a92:	f043 0301 	orr.w	r3, r3, #1
90003a96:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a9e:	f003 0301 	and.w	r3, r3, #1
90003aa2:	930c      	str	r3, [sp, #48]	@ 0x30
90003aa4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003aa6:	f004 f809 	bl	90007abc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003aaa:	4622      	mov	r2, r4
90003aac:	2180      	movs	r1, #128	@ 0x80
90003aae:	4847      	ldr	r0, [pc, #284]	@ (90003bcc <main+0x384>)
90003ab0:	f004 f804 	bl	90007abc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003ab4:	4622      	mov	r2, r4
90003ab6:	2108      	movs	r1, #8
90003ab8:	4845      	ldr	r0, [pc, #276]	@ (90003bd0 <main+0x388>)
90003aba:	f003 ffff 	bl	90007abc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003abe:	2201      	movs	r2, #1
90003ac0:	4844      	ldr	r0, [pc, #272]	@ (90003bd4 <main+0x38c>)
90003ac2:	4611      	mov	r1, r2
90003ac4:	f003 fffa 	bl	90007abc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003ac8:	4622      	mov	r2, r4
90003aca:	2140      	movs	r1, #64	@ 0x40
90003acc:	4842      	ldr	r0, [pc, #264]	@ (90003bd8 <main+0x390>)
90003ace:	f003 fff5 	bl	90007abc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003ad2:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003ad4:	a90d      	add	r1, sp, #52	@ 0x34
90003ad6:	483c      	ldr	r0, [pc, #240]	@ (90003bc8 <main+0x380>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ad8:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003adc:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003ade:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003ae2:	f003 fcaf 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003ae6:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003ae8:	a90d      	add	r1, sp, #52	@ 0x34
90003aea:	4838      	ldr	r0, [pc, #224]	@ (90003bcc <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003aec:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003aee:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003af0:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003af4:	f003 fca6 	bl	90007444 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003af8:	a90d      	add	r1, sp, #52	@ 0x34
90003afa:	4835      	ldr	r0, [pc, #212]	@ (90003bd0 <main+0x388>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003afc:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003b00:	970d      	str	r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b02:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003b06:	f003 fc9d 	bl	90007444 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b0a:	a90d      	add	r1, sp, #52	@ 0x34
90003b0c:	4831      	ldr	r0, [pc, #196]	@ (90003bd4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b0e:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003b12:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b16:	f003 fc95 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b1a:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b1e:	f04f 0840 	mov.w	r8, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b22:	a90d      	add	r1, sp, #52	@ 0x34
90003b24:	482c      	ldr	r0, [pc, #176]	@ (90003bd8 <main+0x390>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b26:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b2a:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b2e:	f003 fc89 	bl	90007444 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b32:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b36:	4622      	mov	r2, r4
90003b38:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b3a:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b3c:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b3e:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003b42:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003b46:	4d25      	ldr	r5, [pc, #148]	@ (90003bdc <main+0x394>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b48:	4033      	ands	r3, r6
90003b4a:	9301      	str	r3, [sp, #4]
90003b4c:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b4e:	f003 fa19 	bl	90006f84 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003b52:	207a      	movs	r0, #122	@ 0x7a
90003b54:	f003 fa52 	bl	90006ffc <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003b58:	2234      	movs	r2, #52	@ 0x34
90003b5a:	4621      	mov	r1, r4
90003b5c:	eb0d 0002 	add.w	r0, sp, r2
90003b60:	f026 f80e 	bl	90029b80 <memset>
  hltdc.Instance = LTDC;
90003b64:	4b1e      	ldr	r3, [pc, #120]	@ (90003be0 <main+0x398>)
  hltdc.Init.AccumulatedVBP = 11;
90003b66:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003b68:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003b6a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003b6c:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003b6e:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003b72:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003b76:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003b78:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003b7a:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003b7c:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003b80:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003b84:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003b88:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003b8a:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003b8e:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.Alpha = 255;
90003b92:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003b94:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003b98:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003b9c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003ba0:	f006 f900 	bl	90009da4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003ba4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ba8:	4622      	mov	r2, r4
90003baa:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90003bac:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003bae:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003bb0:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90003bb2:	f44f 7388 	mov.w	r3, #272	@ 0x110
90003bb6:	e015      	b.n	90003be4 <main+0x39c>
90003bb8:	03000012 	.word	0x03000012
90003bbc:	01010001 	.word	0x01010001
90003bc0:	e000ed00 	.word	0xe000ed00
90003bc4:	58024400 	.word	0x58024400
90003bc8:	58020400 	.word	0x58020400
90003bcc:	58020c00 	.word	0x58020c00
90003bd0:	58021800 	.word	0x58021800
90003bd4:	58022800 	.word	0x58022800
90003bd8:	58020000 	.word	0x58020000
90003bdc:	2400755c 	.word	0x2400755c
90003be0:	50001000 	.word	0x50001000
  hdma2d.Instance = DMA2D;
90003be4:	4d66      	ldr	r5, [pc, #408]	@ (90003d80 <main+0x538>)
  pLayerCfg.WindowY1 = 272;
90003be6:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90003be8:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90003bea:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003bec:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.WindowY0 = 0;
90003bee:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.Alpha0 = 0;
90003bf0:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
90003bf2:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90003bf4:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
90003bf8:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha = 255;
90003bfc:	e9cd 7311 	strd	r7, r3, [sp, #68]	@ 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c00:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003c04:	e9cd 3914 	strd	r3, r9, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003c08:	f006 f98a 	bl	90009f20 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003c0c:	4b5d      	ldr	r3, [pc, #372]	@ (90003d84 <main+0x53c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c0e:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003c10:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003c12:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003c14:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003c16:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003c1a:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003c1e:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003c22:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c26:	f003 facd 	bl	900071c4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c2a:	4631      	mov	r1, r6
90003c2c:	4628      	mov	r0, r5
  huart3.Instance = USART3;
90003c2e:	4d56      	ldr	r5, [pc, #344]	@ (90003d88 <main+0x540>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c30:	f003 fb9e 	bl	90007370 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c34:	4855      	ldr	r0, [pc, #340]	@ (90003d8c <main+0x544>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c36:	2304      	movs	r3, #4
  SdramTiming.WriteRecoveryTime = 5;
90003c38:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003c3c:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c40:	f44f 6900 	mov.w	r9, #2048	@ 0x800
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c44:	60c3      	str	r3, [r0, #12]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c46:	f04f 0810 	mov.w	r8, #16
  SdramTiming.SelfRefreshTime = 4;
90003c4a:	930f      	str	r3, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c4c:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c4e:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.LoadToActiveDelay = 2;
90003c50:	970d      	str	r7, [sp, #52]	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c52:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
90003c54:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c56:	4b4e      	ldr	r3, [pc, #312]	@ (90003d90 <main+0x548>)
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003c58:	61c4      	str	r4, [r0, #28]
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c5a:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c5c:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003c60:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c62:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c64:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c68:	f8c0 8010 	str.w	r8, [r0, #16]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c6c:	e9c0 9308 	strd	r9, r3, [r0, #32]
  SdramTiming.RCDDelay = 2;
90003c70:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003c74:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c78:	f008 fc1a 	bl	9000c4b0 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003c7c:	4a45      	ldr	r2, [pc, #276]	@ (90003d94 <main+0x54c>)
  BSP_SDRAM_DeInit(0);
90003c7e:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003c80:	6813      	ldr	r3, [r2, #0]
90003c82:	f023 0301 	bic.w	r3, r3, #1
90003c86:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003c88:	f002 fec0 	bl	90006a0c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003c8c:	4620      	mov	r0, r4
90003c8e:	f002 ff07 	bl	90006aa0 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003c92:	f7fc ff41 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003c96:	4b40      	ldr	r3, [pc, #256]	@ (90003d98 <main+0x550>)
90003c98:	4840      	ldr	r0, [pc, #256]	@ (90003d9c <main+0x554>)
90003c9a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003c9c:	f004 ffd2 	bl	90008c44 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003ca0:	483f      	ldr	r0, [pc, #252]	@ (90003da0 <main+0x558>)
90003ca2:	4b40      	ldr	r3, [pc, #256]	@ (90003da4 <main+0x55c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003ca4:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003ca6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003ca8:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003caa:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003cae:	f003 fa13 	bl	900070d8 <HAL_CRC_Init>
  huart3.Init.BaudRate = 115200;
90003cb2:	4a3d      	ldr	r2, [pc, #244]	@ (90003da8 <main+0x560>)
90003cb4:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003cb8:	4628      	mov	r0, r5
  huart3.Init.Parity = UART_PARITY_NONE;
90003cba:	612c      	str	r4, [r5, #16]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003cbc:	62ac      	str	r4, [r5, #40]	@ 0x28
  huart3.Init.BaudRate = 115200;
90003cbe:	e9c5 2300 	strd	r2, r3, [r5]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003cc2:	230c      	movs	r3, #12
  huart3.Init.StopBits = UART_STOPBITS_1;
90003cc4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003cc8:	616b      	str	r3, [r5, #20]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
90003cca:	e9c5 4406 	strd	r4, r4, [r5, #24]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
90003cce:	e9c5 4408 	strd	r4, r4, [r5, #32]
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003cd2:	f009 f951 	bl	9000cf78 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90003cd6:	4621      	mov	r1, r4
90003cd8:	4628      	mov	r0, r5
90003cda:	f009 f99f 	bl	9000d01c <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003cde:	4621      	mov	r1, r4
90003ce0:	4628      	mov	r0, r5
90003ce2:	f009 f9dd 	bl	9000d0a0 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
90003ce6:	4628      	mov	r0, r5
90003ce8:	f009 f97a 	bl	9000cfe0 <HAL_UARTEx_DisableFifoMode>
  hi2c4.Instance = I2C4;
90003cec:	4d2f      	ldr	r5, [pc, #188]	@ (90003dac <main+0x564>)
90003cee:	4b30      	ldr	r3, [pc, #192]	@ (90003db0 <main+0x568>)
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003cf0:	4628      	mov	r0, r5
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
90003cf2:	60ee      	str	r6, [r5, #12]
  hi2c4.Instance = I2C4;
90003cf4:	602b      	str	r3, [r5, #0]
  hi2c4.Init.Timing = 0x307075B1;
90003cf6:	f1a3 531e 	sub.w	r3, r3, #662700032	@ 0x27800000
  hi2c4.Init.OwnAddress1 = 0;
90003cfa:	60ac      	str	r4, [r5, #8]
  hi2c4.Init.Timing = 0x307075B1;
90003cfc:	f5a3 237a 	sub.w	r3, r3, #1024000	@ 0xfa000
  hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
90003d00:	622c      	str	r4, [r5, #32]
  hi2c4.Init.Timing = 0x307075B1;
90003d02:	f2a3 634f 	subw	r3, r3, #1615	@ 0x64f
  hi2c4.Init.OwnAddress2 = 0;
90003d06:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c4.Init.Timing = 0x307075B1;
90003d0a:	606b      	str	r3, [r5, #4]
  hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
90003d0c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003d10:	f004 f9ba 	bl	90008088 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
90003d14:	4621      	mov	r1, r4
90003d16:	4628      	mov	r0, r5
90003d18:	f004 fc2e 	bl	90008578 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
90003d1c:	4621      	mov	r1, r4
90003d1e:	4628      	mov	r0, r5
90003d20:	f004 fc54 	bl	900085cc <HAL_I2CEx_ConfigDigitalFilter>
  MX_TouchGFX_Init();
90003d24:	f7fc fefc 	bl	90000b20 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003d28:	f7fc fef8 	bl	90000b1c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003d2c:	f009 fab4 	bl	9000d298 <osKernelInitialize>
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90003d30:	4a20      	ldr	r2, [pc, #128]	@ (90003db4 <main+0x56c>)
90003d32:	4639      	mov	r1, r7
90003d34:	4640      	mov	r0, r8
90003d36:	f009 fbdf 	bl	9000d4f8 <osMessageQueueNew>
90003d3a:	4b1f      	ldr	r3, [pc, #124]	@ (90003db8 <main+0x570>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d3c:	4a1f      	ldr	r2, [pc, #124]	@ (90003dbc <main+0x574>)
90003d3e:	4621      	mov	r1, r4
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90003d40:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d42:	481f      	ldr	r0, [pc, #124]	@ (90003dc0 <main+0x578>)
90003d44:	f009 fad4 	bl	9000d2f0 <osThreadNew>
90003d48:	4b1e      	ldr	r3, [pc, #120]	@ (90003dc4 <main+0x57c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d4a:	4a1f      	ldr	r2, [pc, #124]	@ (90003dc8 <main+0x580>)
90003d4c:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d4e:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d50:	481e      	ldr	r0, [pc, #120]	@ (90003dcc <main+0x584>)
90003d52:	f009 facd 	bl	9000d2f0 <osThreadNew>
90003d56:	4b1e      	ldr	r3, [pc, #120]	@ (90003dd0 <main+0x588>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d58:	4a1e      	ldr	r2, [pc, #120]	@ (90003dd4 <main+0x58c>)
90003d5a:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d5c:	6018      	str	r0, [r3, #0]
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d5e:	481e      	ldr	r0, [pc, #120]	@ (90003dd8 <main+0x590>)
90003d60:	f009 fac6 	bl	9000d2f0 <osThreadNew>
90003d64:	4b1d      	ldr	r3, [pc, #116]	@ (90003ddc <main+0x594>)
90003d66:	4605      	mov	r5, r0
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90003d68:	4a1d      	ldr	r2, [pc, #116]	@ (90003de0 <main+0x598>)
90003d6a:	4621      	mov	r1, r4
90003d6c:	481d      	ldr	r0, [pc, #116]	@ (90003de4 <main+0x59c>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d6e:	601d      	str	r5, [r3, #0]
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90003d70:	f009 fabe 	bl	9000d2f0 <osThreadNew>
90003d74:	4b1c      	ldr	r3, [pc, #112]	@ (90003de8 <main+0x5a0>)
90003d76:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003d78:	f009 faa0 	bl	9000d2bc <osKernelStart>
  while (1)
90003d7c:	e7fe      	b.n	90003d7c <main+0x534>
90003d7e:	bf00      	nop
90003d80:	24007788 	.word	0x24007788
90003d84:	52001000 	.word	0x52001000
90003d88:	240074c8 	.word	0x240074c8
90003d8c:	24007494 	.word	0x24007494
90003d90:	52004140 	.word	0x52004140
90003d94:	52004000 	.word	0x52004000
90003d98:	52003000 	.word	0x52003000
90003d9c:	240076dc 	.word	0x240076dc
90003da0:	240077f0 	.word	0x240077f0
90003da4:	58024c00 	.word	0x58024c00
90003da8:	40004800 	.word	0x40004800
90003dac:	24007734 	.word	0x24007734
90003db0:	58001c00 	.word	0x58001c00
90003db4:	9002c6d4 	.word	0x9002c6d4
90003db8:	24007480 	.word	0x24007480
90003dbc:	9002c758 	.word	0x9002c758
90003dc0:	90003775 	.word	0x90003775
90003dc4:	24007490 	.word	0x24007490
90003dc8:	9002c734 	.word	0x9002c734
90003dcc:	90000b31 	.word	0x90000b31
90003dd0:	2400748c 	.word	0x2400748c
90003dd4:	9002c710 	.word	0x9002c710
90003dd8:	90003781 	.word	0x90003781
90003ddc:	24007488 	.word	0x24007488
90003de0:	9002c6ec 	.word	0x9002c6ec
90003de4:	9000378d 	.word	0x9000378d
90003de8:	24007484 	.word	0x24007484

90003dec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
90003dec:	4b03      	ldr	r3, [pc, #12]	@ (90003dfc <HAL_TIM_PeriodElapsedCallback+0x10>)
90003dee:	6802      	ldr	r2, [r0, #0]
90003df0:	429a      	cmp	r2, r3
90003df2:	d000      	beq.n	90003df6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003df4:	4770      	bx	lr
    HAL_IncTick();
90003df6:	f003 b89b 	b.w	90006f30 <HAL_IncTick>
90003dfa:	bf00      	nop
90003dfc:	40001000 	.word	0x40001000

90003e00 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003e00:	4770      	bx	lr
90003e02:	bf00      	nop

90003e04 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e04:	4b0b      	ldr	r3, [pc, #44]	@ (90003e34 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003e06:	2200      	movs	r2, #0
90003e08:	210f      	movs	r1, #15
90003e0a:	f06f 0001 	mvn.w	r0, #1
{
90003e0e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e10:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003e14:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e16:	f044 0402 	orr.w	r4, r4, #2
90003e1a:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003e1e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003e22:	f003 0302 	and.w	r3, r3, #2
90003e26:	9301      	str	r3, [sp, #4]
90003e28:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003e2a:	b003      	add	sp, #12
90003e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003e30:	f003 b8a8 	b.w	90006f84 <HAL_NVIC_SetPriority>
90003e34:	58024400 	.word	0x58024400

90003e38 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003e38:	4b0a      	ldr	r3, [pc, #40]	@ (90003e64 <HAL_CRC_MspInit+0x2c>)
90003e3a:	6802      	ldr	r2, [r0, #0]
90003e3c:	429a      	cmp	r2, r3
90003e3e:	d000      	beq.n	90003e42 <HAL_CRC_MspInit+0xa>
90003e40:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003e42:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003e46:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003e48:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e4c:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003e50:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e54:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003e58:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003e5c:	9301      	str	r3, [sp, #4]
90003e5e:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
90003e60:	b002      	add	sp, #8
90003e62:	4770      	bx	lr
90003e64:	58024c00 	.word	0x58024c00

90003e68 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003e68:	4b0f      	ldr	r3, [pc, #60]	@ (90003ea8 <HAL_DMA2D_MspInit+0x40>)
90003e6a:	6802      	ldr	r2, [r0, #0]
90003e6c:	429a      	cmp	r2, r3
90003e6e:	d000      	beq.n	90003e72 <HAL_DMA2D_MspInit+0xa>
90003e70:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e72:	4b0e      	ldr	r3, [pc, #56]	@ (90003eac <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e74:	2200      	movs	r2, #0
90003e76:	2105      	movs	r1, #5
90003e78:	205a      	movs	r0, #90	@ 0x5a
{
90003e7a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e7c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003e80:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e82:	f044 0410 	orr.w	r4, r4, #16
90003e86:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003e8a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003e8e:	f003 0310 	and.w	r3, r3, #16
90003e92:	9301      	str	r3, [sp, #4]
90003e94:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e96:	f003 f875 	bl	90006f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003e9a:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
90003e9c:	b002      	add	sp, #8
90003e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003ea2:	f003 b8ab 	b.w	90006ffc <HAL_NVIC_EnableIRQ>
90003ea6:	bf00      	nop
90003ea8:	52001000 	.word	0x52001000
90003eac:	58024400 	.word	0x58024400

90003eb0 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
90003eb0:	b510      	push	{r4, lr}
90003eb2:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003eb4:	2100      	movs	r1, #0
{
90003eb6:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003eb8:	22c0      	movs	r2, #192	@ 0xc0
90003eba:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003ebc:	9106      	str	r1, [sp, #24]
90003ebe:	e9cd 1102 	strd	r1, r1, [sp, #8]
90003ec2:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003ec6:	f025 fe5b 	bl	90029b80 <memset>
  if(hi2c->Instance==I2C4)
90003eca:	4b1f      	ldr	r3, [pc, #124]	@ (90003f48 <HAL_I2C_MspInit+0x98>)
90003ecc:	6822      	ldr	r2, [r4, #0]
90003ece:	429a      	cmp	r2, r3
90003ed0:	d001      	beq.n	90003ed6 <HAL_I2C_MspInit+0x26>

    /* USER CODE END I2C4_MspInit 1 */

  }

}
90003ed2:	b038      	add	sp, #224	@ 0xe0
90003ed4:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C4;
90003ed6:	2210      	movs	r2, #16
90003ed8:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003eda:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C4;
90003edc:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003ee0:	f007 fa5c 	bl	9000b39c <HAL_RCCEx_PeriphCLKConfig>
90003ee4:	bb40      	cbnz	r0, 90003f38 <HAL_I2C_MspInit+0x88>
    __HAL_RCC_GPIOD_CLK_ENABLE();
90003ee6:	4c19      	ldr	r4, [pc, #100]	@ (90003f4c <HAL_I2C_MspInit+0x9c>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90003ee8:	2204      	movs	r2, #4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003eea:	a902      	add	r1, sp, #8
90003eec:	4818      	ldr	r0, [pc, #96]	@ (90003f50 <HAL_I2C_MspInit+0xa0>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
90003eee:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003ef2:	f043 0308 	orr.w	r3, r3, #8
90003ef6:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003efa:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
90003efe:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90003f00:	2200      	movs	r2, #0
    __HAL_RCC_GPIOD_CLK_ENABLE();
90003f02:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90003f06:	ed9f 7b0e 	vldr	d7, [pc, #56]	@ 90003f40 <HAL_I2C_MspInit+0x90>
    __HAL_RCC_GPIOD_CLK_ENABLE();
90003f0a:	9300      	str	r3, [sp, #0]
90003f0c:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
90003f0e:	2300      	movs	r3, #0
90003f10:	ed8d 7b02 	vstr	d7, [sp, #8]
90003f14:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003f18:	f003 fa94 	bl	90007444 <HAL_GPIO_Init>
    __HAL_RCC_I2C4_CLK_ENABLE();
90003f1c:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
90003f20:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003f24:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
90003f28:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
90003f2c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003f30:	9301      	str	r3, [sp, #4]
90003f32:	9b01      	ldr	r3, [sp, #4]
}
90003f34:	b038      	add	sp, #224	@ 0xe0
90003f36:	bd10      	pop	{r4, pc}
      Error_Handler();
90003f38:	f7ff ff62 	bl	90003e00 <Error_Handler>
90003f3c:	e7d3      	b.n	90003ee6 <HAL_I2C_MspInit+0x36>
90003f3e:	bf00      	nop
90003f40:	00003000 	.word	0x00003000
90003f44:	00000012 	.word	0x00000012
90003f48:	58001c00 	.word	0x58001c00
90003f4c:	58024400 	.word	0x58024400
90003f50:	58020c00 	.word	0x58020c00

90003f54 <HAL_I2C_MspDeInit>:
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C4)
90003f54:	6802      	ldr	r2, [r0, #0]
{
90003f56:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C4)
90003f58:	4b0b      	ldr	r3, [pc, #44]	@ (90003f88 <HAL_I2C_MspDeInit+0x34>)
90003f5a:	429a      	cmp	r2, r3
90003f5c:	d000      	beq.n	90003f60 <HAL_I2C_MspDeInit+0xc>
    /* USER CODE BEGIN I2C4_MspDeInit 1 */

    /* USER CODE END I2C4_MspDeInit 1 */
  }

}
90003f5e:	bd08      	pop	{r3, pc}
    __HAL_RCC_I2C4_CLK_DISABLE();
90003f60:	4a0a      	ldr	r2, [pc, #40]	@ (90003f8c <HAL_I2C_MspDeInit+0x38>)
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12);
90003f62:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90003f66:	480a      	ldr	r0, [pc, #40]	@ (90003f90 <HAL_I2C_MspDeInit+0x3c>)
    __HAL_RCC_I2C4_CLK_DISABLE();
90003f68:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90003f6c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90003f70:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12);
90003f74:	f003 fc6c 	bl	90007850 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_13);
90003f78:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003f7c:	4804      	ldr	r0, [pc, #16]	@ (90003f90 <HAL_I2C_MspDeInit+0x3c>)
}
90003f7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_13);
90003f82:	f003 bc65 	b.w	90007850 <HAL_GPIO_DeInit>
90003f86:	bf00      	nop
90003f88:	58001c00 	.word	0x58001c00
90003f8c:	58024400 	.word	0x58024400
90003f90:	58020c00 	.word	0x58020c00

90003f94 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003f94:	4b3f      	ldr	r3, [pc, #252]	@ (90004094 <HAL_JPEG_MspInit+0x100>)
90003f96:	6802      	ldr	r2, [r0, #0]
90003f98:	429a      	cmp	r2, r3
90003f9a:	d000      	beq.n	90003f9e <HAL_JPEG_MspInit+0xa>
90003f9c:	4770      	bx	lr
{
90003f9e:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fa0:	4b3d      	ldr	r3, [pc, #244]	@ (90004098 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003fa2:	2211      	movs	r2, #17
90003fa4:	4e3d      	ldr	r6, [pc, #244]	@ (9000409c <HAL_JPEG_MspInit+0x108>)
{
90003fa6:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003fa8:	4d3d      	ldr	r5, [pc, #244]	@ (900040a0 <HAL_JPEG_MspInit+0x10c>)
90003faa:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003fac:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003fae:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fb0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003fb4:	493b      	ldr	r1, [pc, #236]	@ (900040a4 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fb6:	f042 0220 	orr.w	r2, r2, #32
90003fba:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003fbe:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fc0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003fc4:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fc6:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003fca:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fcc:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003fce:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003fd0:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003fd2:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003fd4:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003fd8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003fdc:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003fde:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003fe0:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003fe4:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003fe8:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003fea:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003fee:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003ff2:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003ff6:	2313      	movs	r3, #19
90003ff8:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003ffa:	2302      	movs	r3, #2
90003ffc:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003ffe:	f006 f873 	bl	9000a0e8 <HAL_MDMA_Init>
90004002:	2800      	cmp	r0, #0
90004004:	d13a      	bne.n	9000407c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004006:	2200      	movs	r2, #0
90004008:	4824      	ldr	r0, [pc, #144]	@ (9000409c <HAL_JPEG_MspInit+0x108>)
9000400a:	4611      	mov	r1, r2
9000400c:	f006 f90a 	bl	9000a224 <HAL_MDMA_ConfigPostRequestMask>
90004010:	2800      	cmp	r0, #0
90004012:	d13c      	bne.n	9000408e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004014:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004016:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004018:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000401a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000401c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000401e:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004020:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004024:	4920      	ldr	r1, [pc, #128]	@ (900040a8 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004026:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90004028:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
9000402a:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000402c:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000402e:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004032:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004036:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004038:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000403a:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000403e:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004040:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004044:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004048:	4815      	ldr	r0, [pc, #84]	@ (900040a0 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000404a:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000404c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000404e:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004050:	f006 f84a 	bl	9000a0e8 <HAL_MDMA_Init>
90004054:	b9c0      	cbnz	r0, 90004088 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004056:	2200      	movs	r2, #0
90004058:	4811      	ldr	r0, [pc, #68]	@ (900040a0 <HAL_JPEG_MspInit+0x10c>)
9000405a:	4611      	mov	r1, r2
9000405c:	f006 f8e2 	bl	9000a224 <HAL_MDMA_ConfigPostRequestMask>
90004060:	b978      	cbnz	r0, 90004082 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004062:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004064:	2200      	movs	r2, #0
90004066:	2105      	movs	r1, #5
90004068:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000406a:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000406c:	f002 ff8a 	bl	90006f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004070:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
90004072:	b002      	add	sp, #8
90004074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004078:	f002 bfc0 	b.w	90006ffc <HAL_NVIC_EnableIRQ>
      Error_Handler();
9000407c:	f7ff fec0 	bl	90003e00 <Error_Handler>
90004080:	e7c1      	b.n	90004006 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90004082:	f7ff febd 	bl	90003e00 <Error_Handler>
90004086:	e7ec      	b.n	90004062 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004088:	f7ff feba 	bl	90003e00 <Error_Handler>
9000408c:	e7e3      	b.n	90004056 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000408e:	f7ff feb7 	bl	90003e00 <Error_Handler>
90004092:	e7bf      	b.n	90004014 <HAL_JPEG_MspInit+0x80>
90004094:	52003000 	.word	0x52003000
90004098:	58024400 	.word	0x58024400
9000409c:	24007670 	.word	0x24007670
900040a0:	24007604 	.word	0x24007604
900040a4:	52000200 	.word	0x52000200
900040a8:	520001c0 	.word	0x520001c0

900040ac <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900040ac:	b570      	push	{r4, r5, r6, lr}
900040ae:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040b0:	2100      	movs	r1, #0
{
900040b2:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900040b4:	22c0      	movs	r2, #192	@ 0xc0
900040b6:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040b8:	9109      	str	r1, [sp, #36]	@ 0x24
900040ba:	e9cd 1105 	strd	r1, r1, [sp, #20]
900040be:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900040c2:	f025 fd5d 	bl	90029b80 <memset>
  if(hltdc->Instance==LTDC)
900040c6:	4b4a      	ldr	r3, [pc, #296]	@ (900041f0 <HAL_LTDC_MspInit+0x144>)
900040c8:	6822      	ldr	r2, [r4, #0]
900040ca:	429a      	cmp	r2, r3
900040cc:	d001      	beq.n	900040d2 <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
900040ce:	b03a      	add	sp, #232	@ 0xe8
900040d0:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900040d2:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900040d4:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900040d6:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
900040da:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900040dc:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900040de:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900040e0:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040e2:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
900040e4:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040e6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040ea:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900040ec:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900040ee:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
900040f2:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040f6:	f007 f951 	bl	9000b39c <HAL_RCCEx_PeriphCLKConfig>
900040fa:	2800      	cmp	r0, #0
900040fc:	d174      	bne.n	900041e8 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900040fe:	4b3d      	ldr	r3, [pc, #244]	@ (900041f4 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004100:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004102:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004104:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
90004106:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000410a:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000410c:	483a      	ldr	r0, [pc, #232]	@ (900041f8 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000410e:	f042 0208 	orr.w	r2, r2, #8
90004112:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90004116:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
9000411a:	f002 0208 	and.w	r2, r2, #8
9000411e:	9200      	str	r2, [sp, #0]
90004120:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90004122:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004126:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000412a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000412e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004132:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90004136:	9201      	str	r2, [sp, #4]
90004138:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000413a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000413e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004142:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004146:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000414a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9000414e:	9202      	str	r2, [sp, #8]
90004150:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90004152:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004156:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
9000415a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000415e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004162:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004166:	9203      	str	r2, [sp, #12]
90004168:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000416a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000416e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90004172:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004176:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000417a:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000417c:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000417e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004182:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004184:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004186:	9304      	str	r3, [sp, #16]
90004188:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000418a:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000418e:	f003 f959 	bl	90007444 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004192:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004196:	a905      	add	r1, sp, #20
90004198:	4818      	ldr	r0, [pc, #96]	@ (900041fc <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000419a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000419c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900041a0:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900041a4:	f003 f94e 	bl	90007444 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900041a8:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900041ac:	a905      	add	r1, sp, #20
900041ae:	4814      	ldr	r0, [pc, #80]	@ (90004200 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900041b0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900041b2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900041b6:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900041ba:	f003 f943 	bl	90007444 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900041be:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900041c2:	a905      	add	r1, sp, #20
900041c4:	480f      	ldr	r0, [pc, #60]	@ (90004204 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900041c6:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900041c8:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900041cc:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900041d0:	f003 f938 	bl	90007444 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900041d4:	462a      	mov	r2, r5
900041d6:	2105      	movs	r1, #5
900041d8:	2058      	movs	r0, #88	@ 0x58
900041da:	f002 fed3 	bl	90006f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
900041de:	2058      	movs	r0, #88	@ 0x58
900041e0:	f002 ff0c 	bl	90006ffc <HAL_NVIC_EnableIRQ>
}
900041e4:	b03a      	add	sp, #232	@ 0xe8
900041e6:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
900041e8:	f7ff fe0a 	bl	90003e00 <Error_Handler>
900041ec:	e787      	b.n	900040fe <HAL_LTDC_MspInit+0x52>
900041ee:	bf00      	nop
900041f0:	50001000 	.word	0x50001000
900041f4:	58024400 	.word	0x58024400
900041f8:	58022800 	.word	0x58022800
900041fc:	58022000 	.word	0x58022000
90004200:	58022400 	.word	0x58022400
90004204:	58021c00 	.word	0x58021c00

90004208 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004208:	b510      	push	{r4, lr}
9000420a:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000420c:	2100      	movs	r1, #0
{
9000420e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004210:	22c0      	movs	r2, #192	@ 0xc0
90004212:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004214:	9106      	str	r1, [sp, #24]
90004216:	e9cd 1102 	strd	r1, r1, [sp, #8]
9000421a:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000421e:	f025 fcaf 	bl	90029b80 <memset>
  if(huart->Instance==USART3)
90004222:	4b21      	ldr	r3, [pc, #132]	@ (900042a8 <HAL_UART_MspInit+0xa0>)
90004224:	6822      	ldr	r2, [r4, #0]
90004226:	429a      	cmp	r2, r3
90004228:	d001      	beq.n	9000422e <HAL_UART_MspInit+0x26>

    /* USER CODE END USART3_MspInit 1 */

  }

}
9000422a:	b038      	add	sp, #224	@ 0xe0
9000422c:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
9000422e:	2202      	movs	r2, #2
90004230:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004232:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90004234:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004238:	f007 f8b0 	bl	9000b39c <HAL_RCCEx_PeriphCLKConfig>
9000423c:	bb40      	cbnz	r0, 90004290 <HAL_UART_MspInit+0x88>
    __HAL_RCC_USART3_CLK_ENABLE();
9000423e:	4b1b      	ldr	r3, [pc, #108]	@ (900042ac <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
90004240:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90004242:	a902      	add	r1, sp, #8
90004244:	481a      	ldr	r0, [pc, #104]	@ (900042b0 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART3_CLK_ENABLE();
90004246:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
9000424a:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000424e:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004252:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004256:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
9000425a:	9200      	str	r2, [sp, #0]
9000425c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
9000425e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004262:	f042 0204 	orr.w	r2, r2, #4
90004266:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000426a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
9000426e:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
90004270:	f003 0304 	and.w	r3, r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
90004274:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 90004298 <HAL_UART_MspInit+0x90>
    __HAL_RCC_GPIOC_CLK_ENABLE();
90004278:	9301      	str	r3, [sp, #4]
9000427a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
9000427c:	ed8d 7b02 	vstr	d7, [sp, #8]
90004280:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 900042a0 <HAL_UART_MspInit+0x98>
90004284:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90004288:	f003 f8dc 	bl	90007444 <HAL_GPIO_Init>
}
9000428c:	b038      	add	sp, #224	@ 0xe0
9000428e:	bd10      	pop	{r4, pc}
      Error_Handler();
90004290:	f7ff fdb6 	bl	90003e00 <Error_Handler>
90004294:	e7d3      	b.n	9000423e <HAL_UART_MspInit+0x36>
90004296:	bf00      	nop
90004298:	00000c00 	.word	0x00000c00
9000429c:	00000002 	.word	0x00000002
	...
900042a8:	40004800 	.word	0x40004800
900042ac:	58024400 	.word	0x58024400
900042b0:	58020800 	.word	0x58020800

900042b4 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900042b4:	4836      	ldr	r0, [pc, #216]	@ (90004390 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900042b6:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900042b8:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900042ba:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900042bc:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900042be:	e9cd 3302 	strd	r3, r3, [sp, #8]
900042c2:	e9cd 3304 	strd	r3, r3, [sp, #16]
900042c6:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900042c8:	b109      	cbz	r1, 900042ce <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900042ca:	b038      	add	sp, #224	@ 0xe0
900042cc:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900042ce:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900042d0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900042d2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900042d4:	a80a      	add	r0, sp, #40	@ 0x28
900042d6:	f025 fc53 	bl	90029b80 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900042da:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900042de:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900042e0:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900042e2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900042e6:	f007 f859 	bl	9000b39c <HAL_RCCEx_PeriphCLKConfig>
900042ea:	2800      	cmp	r0, #0
900042ec:	d14c      	bne.n	90004388 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900042ee:	4b29      	ldr	r3, [pc, #164]	@ (90004394 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042f0:	f64f 7083 	movw	r0, #65411	@ 0xff83
900042f4:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900042f6:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900042f8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042fc:	2600      	movs	r6, #0
900042fe:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004300:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004304:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004308:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000430c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000430e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004312:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004316:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004318:	a902      	add	r1, sp, #8
9000431a:	481f      	ldr	r0, [pc, #124]	@ (90004398 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000431c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000431e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004322:	f003 f88f 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004326:	f248 1233 	movw	r2, #33075	@ 0x8133
9000432a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000432c:	a902      	add	r1, sp, #8
9000432e:	481b      	ldr	r0, [pc, #108]	@ (9000439c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004330:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004332:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004336:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000433a:	f003 f883 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000433e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004342:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004344:	a902      	add	r1, sp, #8
90004346:	4816      	ldr	r0, [pc, #88]	@ (900043a0 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004348:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000434a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000434e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004352:	f003 f877 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004356:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000435a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000435c:	a902      	add	r1, sp, #8
9000435e:	4811      	ldr	r0, [pc, #68]	@ (900043a4 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004360:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004362:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004366:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000436a:	f003 f86b 	bl	90007444 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000436e:	22e0      	movs	r2, #224	@ 0xe0
90004370:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004372:	a902      	add	r1, sp, #8
90004374:	480c      	ldr	r0, [pc, #48]	@ (900043a8 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004376:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004378:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000437c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004380:	f003 f860 	bl	90007444 <HAL_GPIO_Init>
}
90004384:	b038      	add	sp, #224	@ 0xe0
90004386:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004388:	f7ff fd3a 	bl	90003e00 <Error_Handler>
9000438c:	e7af      	b.n	900042ee <HAL_SDRAM_MspInit+0x3a>
9000438e:	bf00      	nop
90004390:	24007818 	.word	0x24007818
90004394:	58024400 	.word	0x58024400
90004398:	58021000 	.word	0x58021000
9000439c:	58021800 	.word	0x58021800
900043a0:	58020c00 	.word	0x58020c00
900043a4:	58021400 	.word	0x58021400
900043a8:	58021c00 	.word	0x58021c00

900043ac <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900043ac:	4b13      	ldr	r3, [pc, #76]	@ (900043fc <HAL_SDRAM_MspDeInit+0x50>)
900043ae:	681a      	ldr	r2, [r3, #0]
900043b0:	b102      	cbz	r2, 900043b4 <HAL_SDRAM_MspDeInit+0x8>
900043b2:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900043b4:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900043b6:	4a12      	ldr	r2, [pc, #72]	@ (90004400 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900043b8:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900043ba:	f64f 7183 	movw	r1, #65411	@ 0xff83
900043be:	4811      	ldr	r0, [pc, #68]	@ (90004404 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900043c0:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900043c2:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900043c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900043ca:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900043ce:	f003 fa3f 	bl	90007850 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900043d2:	f248 1133 	movw	r1, #33075	@ 0x8133
900043d6:	480c      	ldr	r0, [pc, #48]	@ (90004408 <HAL_SDRAM_MspDeInit+0x5c>)
900043d8:	f003 fa3a 	bl	90007850 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900043dc:	f24c 7103 	movw	r1, #50947	@ 0xc703
900043e0:	480a      	ldr	r0, [pc, #40]	@ (9000440c <HAL_SDRAM_MspDeInit+0x60>)
900043e2:	f003 fa35 	bl	90007850 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900043e6:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900043ea:	4809      	ldr	r0, [pc, #36]	@ (90004410 <HAL_SDRAM_MspDeInit+0x64>)
900043ec:	f003 fa30 	bl	90007850 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900043f0:	21e0      	movs	r1, #224	@ 0xe0
900043f2:	4808      	ldr	r0, [pc, #32]	@ (90004414 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900043f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900043f8:	f003 ba2a 	b.w	90007850 <HAL_GPIO_DeInit>
900043fc:	24007814 	.word	0x24007814
90004400:	58024400 	.word	0x58024400
90004404:	58021000 	.word	0x58021000
90004408:	58021800 	.word	0x58021800
9000440c:	58020c00 	.word	0x58020c00
90004410:	58021400 	.word	0x58021400
90004414:	58021c00 	.word	0x58021c00

90004418 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004418:	280f      	cmp	r0, #15
9000441a:	d901      	bls.n	90004420 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
9000441c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000441e:	4770      	bx	lr
{
90004420:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004422:	4601      	mov	r1, r0
{
90004424:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004426:	2200      	movs	r2, #0
90004428:	4604      	mov	r4, r0
9000442a:	2036      	movs	r0, #54	@ 0x36
9000442c:	f002 fdaa 	bl	90006f84 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004430:	2036      	movs	r0, #54	@ 0x36
90004432:	f002 fde3 	bl	90006ffc <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004436:	4b1b      	ldr	r3, [pc, #108]	@ (900044a4 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004438:	4a1b      	ldr	r2, [pc, #108]	@ (900044a8 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000443a:	4669      	mov	r1, sp
9000443c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000443e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004440:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004444:	f042 0210 	orr.w	r2, r2, #16
90004448:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000444c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004450:	f003 0310 	and.w	r3, r3, #16
90004454:	9301      	str	r3, [sp, #4]
90004456:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004458:	f006 fe94 	bl	9000b184 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000445c:	9b07      	ldr	r3, [sp, #28]
9000445e:	b9c3      	cbnz	r3, 90004492 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004460:	f006 fe00 	bl	9000b064 <HAL_RCC_GetPCLK1Freq>
90004464:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004466:	4911      	ldr	r1, [pc, #68]	@ (900044ac <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004468:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000446a:	4c11      	ldr	r4, [pc, #68]	@ (900044b0 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000446c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004470:	4d10      	ldr	r5, [pc, #64]	@ (900044b4 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004472:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004476:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004478:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000447a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000447c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000447e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004480:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004484:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004486:	f008 f885 	bl	9000c594 <HAL_TIM_Base_Init>
9000448a:	b130      	cbz	r0, 9000449a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000448c:	2001      	movs	r0, #1
}
9000448e:	b00b      	add	sp, #44	@ 0x2c
90004490:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004492:	f006 fde7 	bl	9000b064 <HAL_RCC_GetPCLK1Freq>
90004496:	0043      	lsls	r3, r0, #1
90004498:	e7e5      	b.n	90004466 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000449a:	4620      	mov	r0, r4
9000449c:	f008 f920 	bl	9000c6e0 <HAL_TIM_Base_Start_IT>
900044a0:	e7f5      	b.n	9000448e <HAL_InitTick+0x76>
900044a2:	bf00      	nop
900044a4:	58024400 	.word	0x58024400
900044a8:	24000080 	.word	0x24000080
900044ac:	431bde83 	.word	0x431bde83
900044b0:	2400781c 	.word	0x2400781c
900044b4:	40001000 	.word	0x40001000

900044b8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900044b8:	4770      	bx	lr
900044ba:	bf00      	nop

900044bc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900044bc:	e7fe      	b.n	900044bc <HardFault_Handler>
900044be:	bf00      	nop

900044c0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900044c0:	e7fe      	b.n	900044c0 <MemManage_Handler>
900044c2:	bf00      	nop

900044c4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900044c4:	e7fe      	b.n	900044c4 <BusFault_Handler>
900044c6:	bf00      	nop

900044c8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900044c8:	e7fe      	b.n	900044c8 <UsageFault_Handler>
900044ca:	bf00      	nop

900044cc <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900044cc:	4770      	bx	lr
900044ce:	bf00      	nop

900044d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900044d0:	4801      	ldr	r0, [pc, #4]	@ (900044d8 <TIM6_DAC_IRQHandler+0x8>)
900044d2:	f008 b95f 	b.w	9000c794 <HAL_TIM_IRQHandler>
900044d6:	bf00      	nop
900044d8:	2400781c 	.word	0x2400781c

900044dc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900044dc:	4801      	ldr	r0, [pc, #4]	@ (900044e4 <LTDC_IRQHandler+0x8>)
900044de:	f005 bcbd 	b.w	90009e5c <HAL_LTDC_IRQHandler>
900044e2:	bf00      	nop
900044e4:	2400755c 	.word	0x2400755c

900044e8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900044e8:	4801      	ldr	r0, [pc, #4]	@ (900044f0 <DMA2D_IRQHandler+0x8>)
900044ea:	f002 bead 	b.w	90007248 <HAL_DMA2D_IRQHandler>
900044ee:	bf00      	nop
900044f0:	24007788 	.word	0x24007788

900044f4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900044f4:	4801      	ldr	r0, [pc, #4]	@ (900044fc <JPEG_IRQHandler+0x8>)
900044f6:	f005 bbb5 	b.w	90009c64 <HAL_JPEG_IRQHandler>
900044fa:	bf00      	nop
900044fc:	240076dc 	.word	0x240076dc

90004500 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004500:	4804      	ldr	r0, [pc, #16]	@ (90004514 <MDMA_IRQHandler+0x14>)
{
90004502:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004504:	f005 ff74 	bl	9000a3f0 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004508:	4803      	ldr	r0, [pc, #12]	@ (90004518 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000450a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000450e:	f005 bf6f 	b.w	9000a3f0 <HAL_MDMA_IRQHandler>
90004512:	bf00      	nop
90004514:	24007604 	.word	0x24007604
90004518:	24007670 	.word	0x24007670

9000451c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000451c:	2001      	movs	r0, #1
9000451e:	4770      	bx	lr

90004520 <_kill>:

int _kill(int pid, int sig)
{
90004520:	b508      	push	{r3, lr}
	errno = EINVAL;
90004522:	f025 fbe1 	bl	90029ce8 <__errno>
90004526:	2216      	movs	r2, #22
90004528:	4603      	mov	r3, r0
	return -1;
}
9000452a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000452e:	601a      	str	r2, [r3, #0]
}
90004530:	bd08      	pop	{r3, pc}
90004532:	bf00      	nop

90004534 <_exit>:

void _exit (int status)
{
90004534:	b508      	push	{r3, lr}
	errno = EINVAL;
90004536:	f025 fbd7 	bl	90029ce8 <__errno>
9000453a:	2316      	movs	r3, #22
9000453c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000453e:	e7fe      	b.n	9000453e <_exit+0xa>

90004540 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004540:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004542:	1e16      	subs	r6, r2, #0
90004544:	dd07      	ble.n	90004556 <_read+0x16>
90004546:	460c      	mov	r4, r1
90004548:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000454a:	f3af 8000 	nop.w
9000454e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004552:	42a5      	cmp	r5, r4
90004554:	d1f9      	bne.n	9000454a <_read+0xa>
	}

return len;
}
90004556:	4630      	mov	r0, r6
90004558:	bd70      	pop	{r4, r5, r6, pc}
9000455a:	bf00      	nop

9000455c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000455c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000455e:	1e16      	subs	r6, r2, #0
90004560:	dd07      	ble.n	90004572 <_write+0x16>
90004562:	460c      	mov	r4, r1
90004564:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004566:	f814 0b01 	ldrb.w	r0, [r4], #1
9000456a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000456e:	42a5      	cmp	r5, r4
90004570:	d1f9      	bne.n	90004566 <_write+0xa>
	}
	return len;
}
90004572:	4630      	mov	r0, r6
90004574:	bd70      	pop	{r4, r5, r6, pc}
90004576:	bf00      	nop

90004578 <_close>:

int _close(int file)
{
	return -1;
}
90004578:	f04f 30ff 	mov.w	r0, #4294967295
9000457c:	4770      	bx	lr
9000457e:	bf00      	nop

90004580 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004580:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004584:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004586:	604b      	str	r3, [r1, #4]
}
90004588:	4770      	bx	lr
9000458a:	bf00      	nop

9000458c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000458c:	2001      	movs	r0, #1
9000458e:	4770      	bx	lr

90004590 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90004590:	2000      	movs	r0, #0
90004592:	4770      	bx	lr

90004594 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004594:	4a0c      	ldr	r2, [pc, #48]	@ (900045c8 <_sbrk+0x34>)
{
90004596:	b508      	push	{r3, lr}
90004598:	4603      	mov	r3, r0
	if (heap_end == 0)
9000459a:	6810      	ldr	r0, [r2, #0]
9000459c:	b128      	cbz	r0, 900045aa <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000459e:	4403      	add	r3, r0
900045a0:	4669      	mov	r1, sp
900045a2:	428b      	cmp	r3, r1
900045a4:	d808      	bhi.n	900045b8 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900045a6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900045a8:	bd08      	pop	{r3, pc}
		heap_end = &end;
900045aa:	4908      	ldr	r1, [pc, #32]	@ (900045cc <_sbrk+0x38>)
900045ac:	4608      	mov	r0, r1
900045ae:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900045b0:	4669      	mov	r1, sp
900045b2:	4403      	add	r3, r0
900045b4:	428b      	cmp	r3, r1
900045b6:	d9f6      	bls.n	900045a6 <_sbrk+0x12>
		errno = ENOMEM;
900045b8:	f025 fb96 	bl	90029ce8 <__errno>
900045bc:	220c      	movs	r2, #12
900045be:	4603      	mov	r3, r0
		return (caddr_t) -1;
900045c0:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900045c4:	601a      	str	r2, [r3, #0]
}
900045c6:	bd08      	pop	{r3, pc}
900045c8:	24007868 	.word	0x24007868
900045cc:	240226d0 	.word	0x240226d0

900045d0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdana_20_4bpp
    static const touchgfx::FontId TEXTAREAS = 4;     // Siemens_TIA_Portal_basic_bold_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900045d0:	4770      	bx	lr
900045d2:	bf00      	nop

900045d4 <_ZN23ApplicationFontProviderD0Ev>:
900045d4:	b510      	push	{r4, lr}
900045d6:	4604      	mov	r4, r0
900045d8:	2104      	movs	r1, #4
900045da:	f024 fcbf 	bl	90028f5c <_ZdlPvj>
900045de:	4620      	mov	r0, r4
900045e0:	bd10      	pop	{r4, pc}
900045e2:	bf00      	nop

900045e4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
900045e4:	b508      	push	{r3, lr}
    switch (typography)
900045e6:	2904      	cmp	r1, #4
900045e8:	d818      	bhi.n	9000461c <_ZN23ApplicationFontProvider7getFontEt+0x38>
900045ea:	e8df f001 	tbb	[pc, r1]
900045ee:	1307      	.short	0x1307
900045f0:	0f0b      	.short	0x0f0b
900045f2:	03          	.byte	0x03
900045f3:	00          	.byte	0x00
    case Typography::TYPOGRAPHY_00:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    case Typography::TEXTAREAS:
        // Siemens_TIA_Portal_basic_bold_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
900045f4:	f001 fa58 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
900045f8:	6900      	ldr	r0, [r0, #16]
    default:
        return 0;
    }
}
900045fa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900045fc:	f001 fa54 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
90004600:	6800      	ldr	r0, [r0, #0]
}
90004602:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004604:	f001 fa50 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
90004608:	6880      	ldr	r0, [r0, #8]
}
9000460a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
9000460c:	f001 fa4c 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
90004610:	68c0      	ldr	r0, [r0, #12]
}
90004612:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004614:	f001 fa48 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
90004618:	6840      	ldr	r0, [r0, #4]
}
9000461a:	bd08      	pop	{r3, pc}
    switch (typography)
9000461c:	2000      	movs	r0, #0
}
9000461e:	bd08      	pop	{r3, pc}

90004620 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004620:	4800      	ldr	r0, [pc, #0]	@ (90004624 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004622:	4770      	bx	lr
90004624:	9002c790 	.word	0x9002c790

90004628 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004628:	2004      	movs	r0, #4
9000462a:	4770      	bx	lr

9000462c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000462c:	b169      	cbz	r1, 9000464a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000462e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004630:	b530      	push	{r4, r5, lr}
90004632:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004634:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004636:	6895      	ldr	r5, [r2, #8]
90004638:	f10d 0303 	add.w	r3, sp, #3
9000463c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000463e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004640:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004644:	47a8      	blx	r5
        return glyph;
    }
90004646:	b003      	add	sp, #12
90004648:	bd30      	pop	{r4, r5, pc}
            return 0;
9000464a:	4608      	mov	r0, r1
    }
9000464c:	4770      	bx	lr
9000464e:	bf00      	nop

90004650 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004650:	89c0      	ldrh	r0, [r0, #14]
90004652:	4770      	bx	lr

90004654 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004654:	8a00      	ldrh	r0, [r0, #16]
90004656:	4770      	bx	lr

90004658 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004658:	88c0      	ldrh	r0, [r0, #6]
9000465a:	4770      	bx	lr

9000465c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000465c:	8880      	ldrh	r0, [r0, #4]
9000465e:	4770      	bx	lr

90004660 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004660:	7a80      	ldrb	r0, [r0, #10]
    }
90004662:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004666:	4770      	bx	lr

90004668 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004668:	7a80      	ldrb	r0, [r0, #10]
    }
9000466a:	09c0      	lsrs	r0, r0, #7
9000466c:	4770      	bx	lr
9000466e:	bf00      	nop

90004670 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004670:	2000      	movs	r0, #0
90004672:	4770      	bx	lr

90004674 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004674:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 9000467c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004678:	4770      	bx	lr
9000467a:	bf00      	nop
9000467c:	00000000 	.word	0x00000000

90004680 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004680:	4770      	bx	lr
90004682:	bf00      	nop

90004684 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004684:	4770      	bx	lr
90004686:	bf00      	nop

90004688 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004688:	4770      	bx	lr
9000468a:	bf00      	nop

9000468c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000468c:	4770      	bx	lr
9000468e:	bf00      	nop

90004690 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004690:	4770      	bx	lr
90004692:	bf00      	nop

90004694 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004694:	b530      	push	{r4, r5, lr}
90004696:	b085      	sub	sp, #20
90004698:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000469a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
9000469c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000469e:	466d      	mov	r5, sp
900046a0:	4601      	mov	r1, r0
        rect.width = width;
900046a2:	8102      	strh	r2, [r0, #8]
900046a4:	343c      	adds	r4, #60	@ 0x3c
900046a6:	4628      	mov	r0, r5
900046a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900046ac:	4798      	blx	r3
900046ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900046b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900046b6:	b005      	add	sp, #20
900046b8:	bd30      	pop	{r4, r5, pc}
900046ba:	bf00      	nop

900046bc <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
900046bc:	b530      	push	{r4, r5, lr}
900046be:	b085      	sub	sp, #20
900046c0:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
900046c2:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
900046c4:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900046c6:	466d      	mov	r5, sp
900046c8:	4601      	mov	r1, r0
        rect.height = height;
900046ca:	8142      	strh	r2, [r0, #10]
900046cc:	343c      	adds	r4, #60	@ 0x3c
900046ce:	4628      	mov	r0, r5
900046d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900046d4:	4798      	blx	r3
900046d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900046da:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900046de:	b005      	add	sp, #20
900046e0:	bd30      	pop	{r4, r5, pc}
900046e2:	bf00      	nop

900046e4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900046e4:	2200      	movs	r2, #0
900046e6:	6002      	str	r2, [r0, #0]
900046e8:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900046ea:	4770      	bx	lr

900046ec <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900046ec:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
900046f0:	4770      	bx	lr
900046f2:	bf00      	nop

900046f4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900046f4:	2000      	movs	r0, #0
900046f6:	4770      	bx	lr

900046f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900046f8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900046fc:	b112      	cbz	r2, 90004704 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900046fe:	6803      	ldr	r3, [r0, #0]
90004700:	695b      	ldr	r3, [r3, #20]
90004702:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004704:	4770      	bx	lr
90004706:	bf00      	nop

90004708 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004708:	2200      	movs	r2, #0
9000470a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
9000470e:	6082      	str	r2, [r0, #8]
90004710:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004714:	4770      	bx	lr
90004716:	bf00      	nop

90004718 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004718:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9000471a:	4770      	bx	lr

9000471c <_ZN18DataScreenViewBase9Update_HREv>:
     * Custom Actions
     */
    virtual void Update_HR()
    {
        // Override and implement this function in Screen1
    }
9000471c:	4770      	bx	lr
9000471e:	bf00      	nop

90004720 <_ZN18DataScreenViewBase11Update_SpO2Ev>:
    
    virtual void Update_SpO2()
    {
        // Override and implement this function in Screen1
    }
90004720:	4770      	bx	lr
90004722:	bf00      	nop

90004724 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004724:	4770      	bx	lr
90004726:	bf00      	nop

90004728 <_ZN18DataScreenViewBaseD1Ev>:
}

DataScreenViewBase::~DataScreenViewBase()
{

}
90004728:	4770      	bx	lr
9000472a:	bf00      	nop

9000472c <_ZN18DataScreenViewBase11setupScreenEv>:

void DataScreenViewBase::setupScreen()
{

}
9000472c:	4770      	bx	lr
9000472e:	bf00      	nop

90004730 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004730:	b510      	push	{r4, lr}
90004732:	4604      	mov	r4, r0
    }
90004734:	2108      	movs	r1, #8
90004736:	f024 fc11 	bl	90028f5c <_ZdlPvj>
9000473a:	4620      	mov	r0, r4
9000473c:	bd10      	pop	{r4, pc}
9000473e:	bf00      	nop

90004740 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004740:	b510      	push	{r4, lr}
90004742:	4604      	mov	r4, r0
90004744:	214c      	movs	r1, #76	@ 0x4c
90004746:	f024 fc09 	bl	90028f5c <_ZdlPvj>
9000474a:	4620      	mov	r0, r4
9000474c:	bd10      	pop	{r4, pc}
9000474e:	bf00      	nop

90004750 <_ZN18DataScreenViewBaseD0Ev>:
DataScreenViewBase::~DataScreenViewBase()
90004750:	b510      	push	{r4, lr}
90004752:	4604      	mov	r4, r0
}
90004754:	f44f 7121 	mov.w	r1, #644	@ 0x284
90004758:	f024 fc00 	bl	90028f5c <_ZdlPvj>
9000475c:	4620      	mov	r0, r4
9000475e:	bd10      	pop	{r4, pc}

90004760 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004760:	4b1b      	ldr	r3, [pc, #108]	@ (900047d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004762:	6802      	ldr	r2, [r0, #0]
90004764:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004766:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004768:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000476a:	b323      	cbz	r3, 900047b6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
9000476c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000476e:	4919      	ldr	r1, [pc, #100]	@ (900047d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004770:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90004772:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004774:	8809      	ldrh	r1, [r1, #0]
90004776:	4291      	cmp	r1, r2
90004778:	d923      	bls.n	900047c2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000477a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000477e:	4b16      	ldr	r3, [pc, #88]	@ (900047d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004780:	681b      	ldr	r3, [r3, #0]
90004782:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004786:	4a15      	ldr	r2, [pc, #84]	@ (900047dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004788:	6803      	ldr	r3, [r0, #0]
9000478a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000478c:	4293      	cmp	r3, r2
9000478e:	d107      	bne.n	900047a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004790:	88c0      	ldrh	r0, [r0, #6]
90004792:	4b13      	ldr	r3, [pc, #76]	@ (900047e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004794:	1a31      	subs	r1, r6, r0
90004796:	429d      	cmp	r5, r3
90004798:	b209      	sxth	r1, r1
9000479a:	d107      	bne.n	900047ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
9000479c:	80e1      	strh	r1, [r4, #6]
    }
9000479e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047a0:	4798      	blx	r3
900047a2:	4b0f      	ldr	r3, [pc, #60]	@ (900047e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900047a4:	1a31      	subs	r1, r6, r0
900047a6:	429d      	cmp	r5, r3
900047a8:	b209      	sxth	r1, r1
900047aa:	d0f7      	beq.n	9000479c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900047ac:	4620      	mov	r0, r4
900047ae:	462b      	mov	r3, r5
    }
900047b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047b4:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900047b6:	4b0b      	ldr	r3, [pc, #44]	@ (900047e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900047b8:	216c      	movs	r1, #108	@ 0x6c
900047ba:	4a0b      	ldr	r2, [pc, #44]	@ (900047e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900047bc:	480b      	ldr	r0, [pc, #44]	@ (900047ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900047be:	f024 ff43 	bl	90029648 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900047c2:	4b0b      	ldr	r3, [pc, #44]	@ (900047f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900047c4:	216d      	movs	r1, #109	@ 0x6d
900047c6:	4a08      	ldr	r2, [pc, #32]	@ (900047e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900047c8:	4808      	ldr	r0, [pc, #32]	@ (900047ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900047ca:	f024 ff3d 	bl	90029648 <__assert_func>
900047ce:	bf00      	nop
900047d0:	240219e4 	.word	0x240219e4
900047d4:	240219e8 	.word	0x240219e8
900047d8:	240219ec 	.word	0x240219ec
900047dc:	90004659 	.word	0x90004659
900047e0:	90002e79 	.word	0x90002e79
900047e4:	9002bc5c 	.word	0x9002bc5c
900047e8:	9002bca0 	.word	0x9002bca0
900047ec:	9002bcdc 	.word	0x9002bcdc
900047f0:	9002bd24 	.word	0x9002bd24

900047f4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
900047f4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900047f6:	b570      	push	{r4, r5, r6, lr}
900047f8:	4614      	mov	r4, r2
900047fa:	4e23      	ldr	r6, [pc, #140]	@ (90004888 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
900047fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900047fe:	4605      	mov	r5, r0
90004800:	42b2      	cmp	r2, r6
90004802:	d122      	bne.n	9000484a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90004804:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90004806:	80a9      	strh	r1, [r5, #4]
90004808:	4920      	ldr	r1, [pc, #128]	@ (9000488c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
9000480a:	428a      	cmp	r2, r1
9000480c:	d123      	bne.n	90004856 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000480e:	4a20      	ldr	r2, [pc, #128]	@ (90004890 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004810:	b2a4      	uxth	r4, r4
90004812:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90004814:	6813      	ldr	r3, [r2, #0]
90004816:	2b00      	cmp	r3, #0
90004818:	d02f      	beq.n	9000487a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
9000481a:	491e      	ldr	r1, [pc, #120]	@ (90004894 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000481c:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000481e:	8809      	ldrh	r1, [r1, #0]
90004820:	4291      	cmp	r1, r2
90004822:	d924      	bls.n	9000486e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90004824:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004828:	4b1b      	ldr	r3, [pc, #108]	@ (90004898 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
9000482a:	681b      	ldr	r3, [r3, #0]
9000482c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004830:	4a1a      	ldr	r2, [pc, #104]	@ (9000489c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004832:	6803      	ldr	r3, [r0, #0]
90004834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004836:	4293      	cmp	r3, r2
90004838:	d117      	bne.n	9000486a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
9000483a:	88c0      	ldrh	r0, [r0, #6]
9000483c:	4b18      	ldr	r3, [pc, #96]	@ (900048a0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
9000483e:	1a24      	subs	r4, r4, r0
90004840:	429e      	cmp	r6, r3
90004842:	b221      	sxth	r1, r4
90004844:	d10c      	bne.n	90004860 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90004846:	80e9      	strh	r1, [r5, #6]
    }
90004848:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
9000484a:	4790      	blx	r2
        setBaselineY(baselineY);
9000484c:	682b      	ldr	r3, [r5, #0]
9000484e:	490f      	ldr	r1, [pc, #60]	@ (9000488c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90004850:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90004852:	428a      	cmp	r2, r1
90004854:	d0db      	beq.n	9000480e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90004856:	4621      	mov	r1, r4
90004858:	4628      	mov	r0, r5
    }
9000485a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
9000485e:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004860:	4628      	mov	r0, r5
90004862:	4633      	mov	r3, r6
    }
90004864:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004868:	4718      	bx	r3
9000486a:	4798      	blx	r3
9000486c:	e7e6      	b.n	9000483c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000486e:	4b0d      	ldr	r3, [pc, #52]	@ (900048a4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004870:	216d      	movs	r1, #109	@ 0x6d
90004872:	4a0d      	ldr	r2, [pc, #52]	@ (900048a8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004874:	480d      	ldr	r0, [pc, #52]	@ (900048ac <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004876:	f024 fee7 	bl	90029648 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000487a:	4b0d      	ldr	r3, [pc, #52]	@ (900048b0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000487c:	216c      	movs	r1, #108	@ 0x6c
9000487e:	4a0a      	ldr	r2, [pc, #40]	@ (900048a8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004880:	480a      	ldr	r0, [pc, #40]	@ (900048ac <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004882:	f024 fee1 	bl	90029648 <__assert_func>
90004886:	bf00      	nop
90004888:	90002e75 	.word	0x90002e75
9000488c:	90004761 	.word	0x90004761
90004890:	240219e4 	.word	0x240219e4
90004894:	240219e8 	.word	0x240219e8
90004898:	240219ec 	.word	0x240219ec
9000489c:	90004659 	.word	0x90004659
900048a0:	90002e79 	.word	0x90002e79
900048a4:	9002bd24 	.word	0x9002bd24
900048a8:	9002bca0 	.word	0x9002bca0
900048ac:	9002bcdc 	.word	0x9002bcdc
900048b0:	9002bc5c 	.word	0x9002bc5c

900048b4 <_ZN18DataScreenViewBaseC1Ev>:
DataScreenViewBase::DataScreenViewBase()
900048b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048b8:	b089      	sub	sp, #36	@ 0x24
900048ba:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
900048bc:	f013 fd34 	bl	90018328 <_ZN8touchgfx6ScreenC1Ev>
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
900048c0:	4be7      	ldr	r3, [pc, #924]	@ (90004c60 <_ZN18DataScreenViewBaseC1Ev+0x3ac>)
900048c2:	4ae8      	ldr	r2, [pc, #928]	@ (90004c64 <_ZN18DataScreenViewBaseC1Ev+0x3b0>)
900048c4:	2500      	movs	r5, #0
900048c6:	f04f 37ff 	mov.w	r7, #4294967295
          touchable(false),
900048ca:	f44f 7980 	mov.w	r9, #256	@ 0x100
        : typedTextId(id)
900048ce:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900048d2:	f04f 0bff 	mov.w	fp, #255	@ 0xff
900048d6:	f8df 83cc 	ldr.w	r8, [pc, #972]	@ 90004ca4 <_ZN18DataScreenViewBaseC1Ev+0x3f0>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
900048da:	f104 0ae0 	add.w	sl, r4, #224	@ 0xe0
900048de:	6022      	str	r2, [r4, #0]
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
900048e0:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
900048e2:	4ae1      	ldr	r2, [pc, #900]	@ (90004c68 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
        Image::setBitmap(bmp);
900048e4:	4650      	mov	r0, sl
900048e6:	6423      	str	r3, [r4, #64]	@ 0x40
900048e8:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900048ea:	4be0      	ldr	r3, [pc, #896]	@ (90004c6c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
900048ec:	f8a4 9064 	strh.w	r9, [r4, #100]	@ 0x64
900048f0:	f884 b066 	strb.w	fp, [r4, #102]	@ 0x66
900048f4:	f8a4 9090 	strh.w	r9, [r4, #144]	@ 0x90
900048f8:	f884 b092 	strb.w	fp, [r4, #146]	@ 0x92
900048fc:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900048fe:	66a5      	str	r5, [r4, #104]	@ 0x68
90004900:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        : x(0), y(0), width(0), height(0)
90004904:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90004908:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000490c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90004910:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90004914:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90004918:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000491c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90004920:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90004924:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
90004928:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
9000492c:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
90004930:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
          touchable(false),
90004934:	f8a4 90bc 	strh.w	r9, [r4, #188]	@ 0xbc
90004938:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
9000493c:	f8c4 b0ce 	str.w	fp, [r4, #206]	@ 0xce
90004940:	f8a4 9104 	strh.w	r9, [r4, #260]	@ 0x104
90004944:	f8a4 60c4 	strh.w	r6, [r4, #196]	@ 0xc4
        : Widget(), bitmap(bmp), alpha(255)
90004948:	f8a4 6106 	strh.w	r6, [r4, #262]	@ 0x106
9000494c:	f884 6108 	strb.w	r6, [r4, #264]	@ 0x108
90004950:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : color(col)
90004954:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
90004958:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000495c:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
              text(0)
90004960:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
90004964:	f8c4 70d8 	str.w	r7, [r4, #216]	@ 0xd8
90004968:	f8c4 80c0 	str.w	r8, [r4, #192]	@ 0xc0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
9000496c:	f8ad 7018 	strh.w	r7, [sp, #24]
        : x(0), y(0), width(0), height(0)
90004970:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
90004974:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
90004978:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
9000497c:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
        Image::setBitmap(bmp);
90004980:	f00e ffa9 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), bitmap(bmp), alpha(255)
90004984:	4ab8      	ldr	r2, [pc, #736]	@ (90004c68 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
          updateTicksInterval(updateInterval),
90004986:	2301      	movs	r3, #1
        Image::setBitmap(bmp);
90004988:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
9000498a:	f8c4 211c 	str.w	r2, [r4, #284]	@ 0x11c
9000498e:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
90004992:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
          running(false)
90004996:	4ab6      	ldr	r2, [pc, #728]	@ (90004c70 <_ZN18DataScreenViewBaseC1Ev+0x3bc>)
        Image::setBitmap(bmp);
90004998:	4618      	mov	r0, r3
          touchable(false),
9000499a:	f8a4 9140 	strh.w	r9, [r4, #320]	@ 0x140
9000499e:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : Widget(), bitmap(bmp), alpha(255)
900049a2:	f8a4 6142 	strh.w	r6, [r4, #322]	@ 0x142
900049a6:	f884 5118 	strb.w	r5, [r4, #280]	@ 0x118
900049aa:	f884 7144 	strb.w	r7, [r4, #324]	@ 0x144
900049ae:	f8ad 6018 	strh.w	r6, [sp, #24]
        Image::setBitmap(bmp);
900049b2:	9301      	str	r3, [sp, #4]
          startId(BITMAP_INVALID),
900049b4:	e9c4 5743 	strd	r5, r7, [r4, #268]	@ 0x10c
900049b8:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
900049bc:	e9c4 554a 	strd	r5, r5, [r4, #296]	@ 0x128
          nextSibling(0),
900049c0:	e9c4 554c 	strd	r5, r5, [r4, #304]	@ 0x130
          cachedAbsX(0),
900049c4:	e9c4 554e 	strd	r5, r5, [r4, #312]	@ 0x138
900049c8:	f00e ff85 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900049cc:	4ba7      	ldr	r3, [pc, #668]	@ (90004c6c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
          touchable(false),
900049ce:	f8a4 916c 	strh.w	r9, [r4, #364]	@ 0x16c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900049d2:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900049d6:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900049da:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
        : TextAreaWithWildcardBase(), wc1(0)
900049de:	4ba5      	ldr	r3, [pc, #660]	@ (90004c74 <_ZN18DataScreenViewBaseC1Ev+0x3c0>)
900049e0:	f8a4 6174 	strh.w	r6, [r4, #372]	@ 0x174
900049e4:	f8c4 b17e 	str.w	fp, [r4, #382]	@ 0x17e
900049e8:	f8a4 91b4 	strh.w	r9, [r4, #436]	@ 0x1b4
900049ec:	f8a4 61bc 	strh.w	r6, [r4, #444]	@ 0x1bc
900049f0:	f8c4 8170 	str.w	r8, [r4, #368]	@ 0x170
        : color(col)
900049f4:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
900049f8:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
              text(0)
900049fc:	f8c4 518c 	str.w	r5, [r4, #396]	@ 0x18c
90004a00:	f8c4 81b8 	str.w	r8, [r4, #440]	@ 0x1b8
90004a04:	f8c4 51c0 	str.w	r5, [r4, #448]	@ 0x1c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004a08:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        : x(0), y(0), width(0), height(0)
90004a0c:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
90004a10:	e9c4 5555 	strd	r5, r5, [r4, #340]	@ 0x154
          nextSibling(0),
90004a14:	e9c4 5557 	strd	r5, r5, [r4, #348]	@ 0x15c
          cachedAbsX(0),
90004a18:	e9c4 5559 	strd	r5, r5, [r4, #356]	@ 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004a1c:	e9c4 5761 	strd	r5, r7, [r4, #388]	@ 0x184
        : x(0), y(0), width(0), height(0)
90004a20:	e9c4 5565 	strd	r5, r5, [r4, #404]	@ 0x194
90004a24:	e9c4 5567 	strd	r5, r5, [r4, #412]	@ 0x19c
          nextSibling(0),
90004a28:	e9c4 5569 	strd	r5, r5, [r4, #420]	@ 0x1a4
          cachedAbsX(0),
90004a2c:	e9c4 556b 	strd	r5, r5, [r4, #428]	@ 0x1ac
90004a30:	f8c4 b1c6 	str.w	fp, [r4, #454]	@ 0x1c6
          touchable(false),
90004a34:	f8a4 91fc 	strh.w	r9, [r4, #508]	@ 0x1fc
90004a38:	f8a4 9248 	strh.w	r9, [r4, #584]	@ 0x248
90004a3c:	f104 0904 	add.w	r9, r4, #4
90004a40:	f8a4 6204 	strh.w	r6, [r4, #516]	@ 0x204
90004a44:	f8c4 b20e 	str.w	fp, [r4, #526]	@ 0x20e
90004a48:	4648      	mov	r0, r9
90004a4a:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
              text(0)
90004a4e:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
90004a52:	f8c4 8200 	str.w	r8, [r4, #512]	@ 0x200
        : color(col)
90004a56:	f8c4 5208 	str.w	r5, [r4, #520]	@ 0x208
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004a5a:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
90004a5e:	f8c4 824c 	str.w	r8, [r4, #588]	@ 0x24c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004a62:	e9c4 5773 	strd	r5, r7, [r4, #460]	@ 0x1cc
        : x(0), y(0), width(0), height(0)
90004a66:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
90004a6a:	e9c4 5579 	strd	r5, r5, [r4, #484]	@ 0x1e4
          nextSibling(0),
90004a6e:	e9c4 557b 	strd	r5, r5, [r4, #492]	@ 0x1ec
          cachedAbsX(0),
90004a72:	e9c4 557d 	strd	r5, r5, [r4, #500]	@ 0x1f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004a76:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
90004a7a:	e9c4 5587 	strd	r5, r5, [r4, #540]	@ 0x21c
        : x(0), y(0), width(0), height(0)
90004a7e:	e9c4 558a 	strd	r5, r5, [r4, #552]	@ 0x228
90004a82:	e9c4 558c 	strd	r5, r5, [r4, #560]	@ 0x230
          nextSibling(0),
90004a86:	e9c4 558e 	strd	r5, r5, [r4, #568]	@ 0x238
          cachedAbsX(0),
90004a8a:	e9c4 5590 	strd	r5, r5, [r4, #576]	@ 0x240
90004a8e:	f8a4 6250 	strh.w	r6, [r4, #592]	@ 0x250
        rect.x = x;
90004a92:	4e79      	ldr	r6, [pc, #484]	@ (90004c78 <_ZN18DataScreenViewBaseC1Ev+0x3c4>)
90004a94:	f8c4 3224 	str.w	r3, [r4, #548]	@ 0x224
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004a98:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90004a9c:	f8c4 b25a 	str.w	fp, [r4, #602]	@ 0x25a
    textArea1.setXY(99, 27);
90004aa0:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
90004aa4:	64a6      	str	r6, [r4, #72]	@ 0x48
90004aa6:	66a3      	str	r3, [r4, #104]	@ 0x68
        : color(col)
90004aa8:	f8c4 5254 	str.w	r5, [r4, #596]	@ 0x254
90004aac:	f8a4 5258 	strh.w	r5, [r4, #600]	@ 0x258
90004ab0:	6465      	str	r5, [r4, #68]	@ 0x44
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004ab2:	e9c4 5798 	strd	r5, r7, [r4, #608]	@ 0x260
90004ab6:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
90004aba:	f00b fa59 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004abe:	4b6f      	ldr	r3, [pc, #444]	@ (90004c7c <_ZN18DataScreenViewBaseC1Ev+0x3c8>)
90004ac0:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
90004ac4:	4648      	mov	r0, r9
90004ac6:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
90004aca:	e9c4 561c 	strd	r5, r6, [r4, #112]	@ 0x70
90004ace:	f00b fa4f 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
90004ad2:	ae02      	add	r6, sp, #8
90004ad4:	4b6a      	ldr	r3, [pc, #424]	@ (90004c80 <_ZN18DataScreenViewBaseC1Ev+0x3cc>)
90004ad6:	4659      	mov	r1, fp
90004ad8:	4630      	mov	r0, r6
        color = newColor;
90004ada:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
90004ade:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        linespace = space;
90004ae2:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
90004ae6:	f00e fabf 	bl	90013068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004aea:	2206      	movs	r2, #6
90004aec:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
90004af0:	f8cd 8018 	str.w	r8, [sp, #24]
90004af4:	f8ad 201c 	strh.w	r2, [sp, #28]
90004af8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004afc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NOMS));
90004b00:	4658      	mov	r0, fp
90004b02:	a906      	add	r1, sp, #24
90004b04:	f00e fd58 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004b08:	4659      	mov	r1, fp
90004b0a:	4648      	mov	r0, r9
90004b0c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90004ca8 <_ZN18DataScreenViewBaseC1Ev+0x3f4>
90004b10:	f00b fa2e 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b14:	f04f 1356 	mov.w	r3, #5636182	@ 0x560056
    animatedImage1.setBitmaps(BITMAP_HEARTLOGO100X100_ID, BITMAP_HEARTLOGO110X110_ID);
90004b18:	2202      	movs	r2, #2
90004b1a:	4650      	mov	r0, sl
90004b1c:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
90004b20:	2101      	movs	r1, #1
90004b22:	f00e f9a5 	bl	90012e70 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(18);
90004b26:	4650      	mov	r0, sl
90004b28:	2112      	movs	r1, #18
90004b2a:	f00e f9b4 	bl	90012e96 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    animatedImage1.startAnimation(false, true, true);
90004b2e:	2301      	movs	r3, #1
90004b30:	4650      	mov	r0, sl
90004b32:	4629      	mov	r1, r5
90004b34:	461a      	mov	r2, r3
90004b36:	f00e f8f3 	bl	90012d20 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
90004b3a:	4651      	mov	r1, sl
90004b3c:	4648      	mov	r0, r9
90004b3e:	f00b fa17 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b42:	4b50      	ldr	r3, [pc, #320]	@ (90004c84 <_ZN18DataScreenViewBaseC1Ev+0x3d0>)
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SP02_ID));
90004b44:	f8dd a004 	ldr.w	sl, [sp, #4]
90004b48:	a906      	add	r1, sp, #24
90004b4a:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
90004b4e:	2303      	movs	r3, #3
90004b50:	4650      	mov	r0, sl
90004b52:	f8ad 3018 	strh.w	r3, [sp, #24]
90004b56:	f00e febe 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004b5a:	4651      	mov	r1, sl
90004b5c:	4648      	mov	r0, r9
90004b5e:	f00b fa07 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(79, 174);
90004b62:	f504 7aa4 	add.w	sl, r4, #328	@ 0x148
90004b66:	4b48      	ldr	r3, [pc, #288]	@ (90004c88 <_ZN18DataScreenViewBaseC1Ev+0x3d4>)
90004b68:	4630      	mov	r0, r6
90004b6a:	4651      	mov	r1, sl
        color = newColor;
90004b6c:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
90004b70:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        linespace = space;
90004b74:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
90004b78:	f00e fa76 	bl	90013068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004b7c:	2205      	movs	r2, #5
90004b7e:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
90004b82:	f8cd 8018 	str.w	r8, [sp, #24]
90004b86:	f8ad 201c 	strh.w	r2, [sp, #28]
90004b8a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004b8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FE3G));
90004b92:	4650      	mov	r0, sl
90004b94:	a906      	add	r1, sp, #24
90004b96:	f00e fd0f 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004b9a:	4651      	mov	r1, sl
90004b9c:	4648      	mov	r0, r9
    textArea3.setXY(260, 174);
90004b9e:	f504 7ac8 	add.w	sl, r4, #400	@ 0x190
90004ba2:	f00b f9e5 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba6:	4b39      	ldr	r3, [pc, #228]	@ (90004c8c <_ZN18DataScreenViewBaseC1Ev+0x3d8>)
90004ba8:	4651      	mov	r1, sl
90004baa:	4630      	mov	r0, r6
90004bac:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
        color = newColor;
90004bb0:	f8c4 71c0 	str.w	r7, [r4, #448]	@ 0x1c0
        linespace = space;
90004bb4:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
90004bb8:	f00e fa56 	bl	90013068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004bbc:	2204      	movs	r2, #4
90004bbe:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
90004bc2:	f8cd 8018 	str.w	r8, [sp, #24]
90004bc6:	f8ad 201c 	strh.w	r2, [sp, #28]
90004bca:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004bce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4PEZ));
90004bd2:	4650      	mov	r0, sl
90004bd4:	a906      	add	r1, sp, #24
90004bd6:	f00e fcef 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004bda:	4651      	mov	r1, sl
90004bdc:	4648      	mov	r0, r9
    textArea4.setXY(107, 204);
90004bde:	f504 7aec 	add.w	sl, r4, #472	@ 0x1d8
90004be2:	f00b f9c5 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90004be6:	f8d4 31d8 	ldr.w	r3, [r4, #472]	@ 0x1d8
        rect.x = x;
90004bea:	4a29      	ldr	r2, [pc, #164]	@ (90004c90 <_ZN18DataScreenViewBaseC1Ev+0x3dc>)
90004bec:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
90004bf0:	f8c4 7208 	str.w	r7, [r4, #520]	@ 0x208
90004bf4:	455b      	cmp	r3, fp
        linespace = space;
90004bf6:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
90004bfa:	f8c4 21dc 	str.w	r2, [r4, #476]	@ 0x1dc
90004bfe:	f040 8097 	bne.w	90004d30 <_ZN18DataScreenViewBaseC1Ev+0x47c>
        boundingArea = calculateBoundingArea();
90004c02:	f8c4 521c 	str.w	r5, [r4, #540]	@ 0x21c
90004c06:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
    Unicode::snprintf(textArea4Buffer, TEXTAREA4_SIZE, "%s", touchgfx::TypedText(T_HR_DATA).getText());
90004c0a:	f504 731c 	add.w	r3, r4, #624	@ 0x270
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004c0e:	4d21      	ldr	r5, [pc, #132]	@ (90004c94 <_ZN18DataScreenViewBaseC1Ev+0x3e0>)
90004c10:	9301      	str	r3, [sp, #4]
90004c12:	682b      	ldr	r3, [r5, #0]
90004c14:	2b00      	cmp	r3, #0
90004c16:	f000 809f 	beq.w	90004d58 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        return typedTextId < numberOfTypedTexts;
90004c1a:	4f1f      	ldr	r7, [pc, #124]	@ (90004c98 <_ZN18DataScreenViewBaseC1Ev+0x3e4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004c1c:	883b      	ldrh	r3, [r7, #0]
90004c1e:	2b02      	cmp	r3, #2
90004c20:	f240 80a0 	bls.w	90004d64 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
90004c24:	4b1d      	ldr	r3, [pc, #116]	@ (90004c9c <_ZN18DataScreenViewBaseC1Ev+0x3e8>)
90004c26:	2102      	movs	r1, #2
90004c28:	6818      	ldr	r0, [r3, #0]
90004c2a:	f000 ff2d 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90004c2e:	4a1c      	ldr	r2, [pc, #112]	@ (90004ca0 <_ZN18DataScreenViewBaseC1Ev+0x3ec>)
90004c30:	4603      	mov	r3, r0
90004c32:	2105      	movs	r1, #5
90004c34:	9801      	ldr	r0, [sp, #4]
90004c36:	f015 f829 	bl	90019c8c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
90004c3a:	9b01      	ldr	r3, [sp, #4]
    textArea4.resizeToCurrentText();
90004c3c:	4650      	mov	r0, sl
90004c3e:	f8c4 3220 	str.w	r3, [r4, #544]	@ 0x220
90004c42:	f00e fc99 	bl	90013578 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90004c46:	2303      	movs	r3, #3
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MADA));
90004c48:	4650      	mov	r0, sl
90004c4a:	a906      	add	r1, sp, #24
90004c4c:	f8ad 301c 	strh.w	r3, [sp, #28]
90004c50:	f8cd 8018 	str.w	r8, [sp, #24]
90004c54:	f00e fcb0 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004c58:	4651      	mov	r1, sl
90004c5a:	4648      	mov	r0, r9
90004c5c:	e026      	b.n	90004cac <_ZN18DataScreenViewBaseC1Ev+0x3f8>
90004c5e:	bf00      	nop
90004c60:	9002d518 	.word	0x9002d518
90004c64:	9002c888 	.word	0x9002c888
90004c68:	9002d580 	.word	0x9002d580
90004c6c:	9002d488 	.word	0x9002d488
90004c70:	9002d40c 	.word	0x9002d40c
90004c74:	9002c7f8 	.word	0x9002c7f8
90004c78:	011001e0 	.word	0x011001e0
90004c7c:	ff7fa6eb 	.word	0xff7fa6eb
90004c80:	001b0063 	.word	0x001b0063
90004c84:	0056011a 	.word	0x0056011a
90004c88:	00ae004f 	.word	0x00ae004f
90004c8c:	00ae0104 	.word	0x00ae0104
90004c90:	00cc006b 	.word	0x00cc006b
90004c94:	240219e4 	.word	0x240219e4
90004c98:	240219e8 	.word	0x240219e8
90004c9c:	240219f0 	.word	0x240219f0
90004ca0:	9002bdb0 	.word	0x9002bdb0
90004ca4:	9002c7e8 	.word	0x9002c7e8
90004ca8:	90004709 	.word	0x90004709
90004cac:	f00b f960 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90004cb0:	f8d4 3224 	ldr.w	r3, [r4, #548]	@ 0x224
        color = newColor;
90004cb4:	f04f 31ff 	mov.w	r1, #4294967295
    textArea5.setXY(320, 204);
90004cb8:	f504 7a09 	add.w	sl, r4, #548	@ 0x224
        boundingArea = calculateBoundingArea();
90004cbc:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
90004cc0:	4b2b      	ldr	r3, [pc, #172]	@ (90004d70 <_ZN18DataScreenViewBaseC1Ev+0x4bc>)
90004cc2:	455a      	cmp	r2, fp
        color = newColor;
90004cc4:	f8c4 1254 	str.w	r1, [r4, #596]	@ 0x254
90004cc8:	f8c4 3228 	str.w	r3, [r4, #552]	@ 0x228
        linespace = space;
90004ccc:	f04f 0300 	mov.w	r3, #0
90004cd0:	f8a4 3258 	strh.w	r3, [r4, #600]	@ 0x258
90004cd4:	d136      	bne.n	90004d44 <_ZN18DataScreenViewBaseC1Ev+0x490>
        boundingArea = calculateBoundingArea();
90004cd6:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90004cda:	e9c4 3198 	strd	r3, r1, [r4, #608]	@ 0x260
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004cde:	682b      	ldr	r3, [r5, #0]
    Unicode::snprintf(textArea5Buffer, TEXTAREA5_SIZE, "%s", touchgfx::TypedText(T_SPO2_DATA).getText());
90004ce0:	f204 257a 	addw	r5, r4, #634	@ 0x27a
90004ce4:	2b00      	cmp	r3, #0
90004ce6:	d037      	beq.n	90004d58 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ce8:	883b      	ldrh	r3, [r7, #0]
90004cea:	2b00      	cmp	r3, #0
90004cec:	d03a      	beq.n	90004d64 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
90004cee:	4b21      	ldr	r3, [pc, #132]	@ (90004d74 <_ZN18DataScreenViewBaseC1Ev+0x4c0>)
90004cf0:	2100      	movs	r1, #0
90004cf2:	6818      	ldr	r0, [r3, #0]
90004cf4:	f000 fec8 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90004cf8:	4a1f      	ldr	r2, [pc, #124]	@ (90004d78 <_ZN18DataScreenViewBaseC1Ev+0x4c4>)
90004cfa:	4603      	mov	r3, r0
90004cfc:	2105      	movs	r1, #5
90004cfe:	4628      	mov	r0, r5
90004d00:	f014 ffc4 	bl	90019c8c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea5.resizeToCurrentText();
90004d04:	4650      	mov	r0, sl
90004d06:	f8c4 526c 	str.w	r5, [r4, #620]	@ 0x26c
90004d0a:	f00e fc35 	bl	90013578 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90004d0e:	2301      	movs	r3, #1
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ED91));
90004d10:	a906      	add	r1, sp, #24
90004d12:	4650      	mov	r0, sl
90004d14:	f8ad 301c 	strh.w	r3, [sp, #28]
90004d18:	f8cd 8018 	str.w	r8, [sp, #24]
90004d1c:	f00e fc4c 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004d20:	4648      	mov	r0, r9
90004d22:	4651      	mov	r1, sl
90004d24:	f00b f924 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004d28:	4620      	mov	r0, r4
90004d2a:	b009      	add	sp, #36	@ 0x24
90004d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004d30:	4651      	mov	r1, sl
90004d32:	4630      	mov	r0, r6
90004d34:	4798      	blx	r3
90004d36:	f504 7305 	add.w	r3, r4, #532	@ 0x214
90004d3a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004d3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004d42:	e762      	b.n	90004c0a <_ZN18DataScreenViewBaseC1Ev+0x356>
90004d44:	4651      	mov	r1, sl
90004d46:	4630      	mov	r0, r6
90004d48:	4790      	blx	r2
90004d4a:	f504 7318 	add.w	r3, r4, #608	@ 0x260
90004d4e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004d52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004d56:	e7c2      	b.n	90004cde <_ZN18DataScreenViewBaseC1Ev+0x42a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004d58:	4b08      	ldr	r3, [pc, #32]	@ (90004d7c <_ZN18DataScreenViewBaseC1Ev+0x4c8>)
90004d5a:	2160      	movs	r1, #96	@ 0x60
90004d5c:	4a08      	ldr	r2, [pc, #32]	@ (90004d80 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90004d5e:	4809      	ldr	r0, [pc, #36]	@ (90004d84 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90004d60:	f024 fc72 	bl	90029648 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004d64:	4b08      	ldr	r3, [pc, #32]	@ (90004d88 <_ZN18DataScreenViewBaseC1Ev+0x4d4>)
90004d66:	2161      	movs	r1, #97	@ 0x61
90004d68:	4a05      	ldr	r2, [pc, #20]	@ (90004d80 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90004d6a:	4806      	ldr	r0, [pc, #24]	@ (90004d84 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90004d6c:	f024 fc6c 	bl	90029648 <__assert_func>
90004d70:	00cc0140 	.word	0x00cc0140
90004d74:	240219f0 	.word	0x240219f0
90004d78:	9002bdb0 	.word	0x9002bdb0
90004d7c:	9002bc5c 	.word	0x9002bc5c
90004d80:	9002bd64 	.word	0x9002bd64
90004d84:	9002bcdc 	.word	0x9002bcdc
90004d88:	9002bd24 	.word	0x9002bd24

90004d8c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004d8c:	4770      	bx	lr
90004d8e:	bf00      	nop

90004d90 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004d90:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004d94:	6808      	ldr	r0, [r1, #0]
90004d96:	6849      	ldr	r1, [r1, #4]
90004d98:	c303      	stmia	r3!, {r0, r1}
    }
90004d9a:	4770      	bx	lr

90004d9c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004d9c:	4770      	bx	lr
90004d9e:	bf00      	nop

90004da0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004da0:	4770      	bx	lr
90004da2:	bf00      	nop

90004da4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004da4:	6041      	str	r1, [r0, #4]
    }
90004da6:	4770      	bx	lr

90004da8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004da8:	4770      	bx	lr
90004daa:	bf00      	nop

90004dac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004dac:	4770      	bx	lr
90004dae:	bf00      	nop

90004db0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90004db0:	4905      	ldr	r1, [pc, #20]	@ (90004dc8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004db2:	2200      	movs	r2, #0
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004db4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004db8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004dbc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004dc0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
90004dc4:	4770      	bx	lr
90004dc6:	bf00      	nop
90004dc8:	90004ff1 	.word	0x90004ff1

90004dcc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004dcc:	2301      	movs	r3, #1
90004dce:	7203      	strb	r3, [r0, #8]
    }
90004dd0:	4770      	bx	lr
90004dd2:	bf00      	nop

90004dd4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004dd4:	4770      	bx	lr
90004dd6:	bf00      	nop

90004dd8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004dd8:	1d01      	adds	r1, r0, #4
90004dda:	c90e      	ldmia	r1, {r1, r2, r3}
90004ddc:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004de0:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004de4:	07db      	lsls	r3, r3, #31
90004de6:	d502      	bpl.n	90004dee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004de8:	f851 300c 	ldr.w	r3, [r1, ip]
90004dec:	589a      	ldr	r2, [r3, r2]
90004dee:	4710      	bx	r2

90004df0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004df0:	6843      	ldr	r3, [r0, #4]
90004df2:	b13b      	cbz	r3, 90004e04 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004df4:	6883      	ldr	r3, [r0, #8]
90004df6:	b10b      	cbz	r3, 90004dfc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004df8:	2001      	movs	r0, #1
    }
90004dfa:	4770      	bx	lr
90004dfc:	68c0      	ldr	r0, [r0, #12]
90004dfe:	f000 0001 	and.w	r0, r0, #1
90004e02:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004e04:	4618      	mov	r0, r3
90004e06:	4770      	bx	lr

90004e08 <_ZN8touchgfx12NoTransitionD0Ev>:
90004e08:	b510      	push	{r4, lr}
90004e0a:	4604      	mov	r4, r0
90004e0c:	210c      	movs	r1, #12
90004e0e:	f024 f8a5 	bl	90028f5c <_ZdlPvj>
90004e12:	4620      	mov	r0, r4
90004e14:	bd10      	pop	{r4, pc}
90004e16:	bf00      	nop

90004e18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004e18:	b510      	push	{r4, lr}
90004e1a:	4604      	mov	r4, r0
90004e1c:	2110      	movs	r1, #16
90004e1e:	f024 f89d 	bl	90028f5c <_ZdlPvj>
90004e22:	4620      	mov	r0, r4
90004e24:	bd10      	pop	{r4, pc}
90004e26:	bf00      	nop

90004e28 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004e28:	b510      	push	{r4, lr}
90004e2a:	4604      	mov	r4, r0
90004e2c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004e30:	f024 f894 	bl	90028f5c <_ZdlPvj>
90004e34:	4620      	mov	r0, r4
90004e36:	bd10      	pop	{r4, pc}

90004e38 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004e38:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004e3a:	f011 fa1f 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90004e3e:	6803      	ldr	r3, [r0, #0]
    }
90004e40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004e44:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004e46:	4718      	bx	r3

90004e48 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl()
{
90004e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataScreenView, DataScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004e4c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004e50:	4607      	mov	r7, r0
90004e52:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004e54:	68b0      	ldr	r0, [r6, #8]
90004e56:	6803      	ldr	r3, [r0, #0]
90004e58:	6a1b      	ldr	r3, [r3, #32]
90004e5a:	4798      	blx	r3
90004e5c:	f5b0 7f21 	cmp.w	r0, #644	@ 0x284
90004e60:	f0c0 809d 	bcc.w	90004f9e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004e64:	6870      	ldr	r0, [r6, #4]
90004e66:	6803      	ldr	r3, [r0, #0]
90004e68:	6a1b      	ldr	r3, [r3, #32]
90004e6a:	4798      	blx	r3
90004e6c:	280f      	cmp	r0, #15
90004e6e:	f240 80a2 	bls.w	90004fb6 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004e72:	68f0      	ldr	r0, [r6, #12]
90004e74:	6803      	ldr	r3, [r0, #0]
90004e76:	6a1b      	ldr	r3, [r3, #32]
90004e78:	4798      	blx	r3
90004e7a:	280b      	cmp	r0, #11
90004e7c:	f240 8095 	bls.w	90004faa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004e80:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004fe8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004e84:	f011 f9fa 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004e88:	3004      	adds	r0, #4
90004e8a:	f011 fa35 	bl	900162f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004e8e:	f8d9 0000 	ldr.w	r0, [r9]
90004e92:	b130      	cbz	r0, 90004ea2 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004e94:	6803      	ldr	r3, [r0, #0]
90004e96:	494b      	ldr	r1, [pc, #300]	@ (90004fc4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x17c>)
90004e98:	68da      	ldr	r2, [r3, #12]
90004e9a:	428a      	cmp	r2, r1
90004e9c:	d178      	bne.n	90004f90 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004e9e:	681b      	ldr	r3, [r3, #0]
90004ea0:	4798      	blx	r3
    if (*currentScreen)
90004ea2:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004fec <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a4>
90004ea6:	f8d8 0000 	ldr.w	r0, [r8]
90004eaa:	2800      	cmp	r0, #0
90004eac:	d062      	beq.n	90004f74 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004eae:	6803      	ldr	r3, [r0, #0]
90004eb0:	695b      	ldr	r3, [r3, #20]
90004eb2:	4798      	blx	r3
    if (*currentPresenter)
90004eb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004eb8:	2800      	cmp	r0, #0
90004eba:	d056      	beq.n	90004f6a <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004ebc:	6803      	ldr	r3, [r0, #0]
90004ebe:	685b      	ldr	r3, [r3, #4]
90004ec0:	4798      	blx	r3
    if (*currentScreen)
90004ec2:	f8d8 0000 	ldr.w	r0, [r8]
90004ec6:	b110      	cbz	r0, 90004ece <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004ec8:	6803      	ldr	r3, [r0, #0]
90004eca:	681b      	ldr	r3, [r3, #0]
90004ecc:	4798      	blx	r3
    if (*currentPresenter)
90004ece:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004ed2:	b110      	cbz	r0, 90004eda <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004ed4:	6803      	ldr	r3, [r0, #0]
90004ed6:	689b      	ldr	r3, [r3, #8]
90004ed8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004eda:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004edc:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004ede:	f04f 0b00 	mov.w	fp, #0
90004ee2:	6803      	ldr	r3, [r0, #0]
90004ee4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004ee6:	4798      	blx	r3
90004ee8:	4b37      	ldr	r3, [pc, #220]	@ (90004fc8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x180>)
90004eea:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004eec:	68b0      	ldr	r0, [r6, #8]
90004eee:	4659      	mov	r1, fp
90004ef0:	6023      	str	r3, [r4, #0]
90004ef2:	6803      	ldr	r3, [r0, #0]
90004ef4:	f8c4 b004 	str.w	fp, [r4, #4]
90004ef8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004efa:	f884 b008 	strb.w	fp, [r4, #8]
90004efe:	4798      	blx	r3
90004f00:	4605      	mov	r5, r0
90004f02:	f000 fe33 	bl	90005b6c <_ZN14DataScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004f06:	6870      	ldr	r0, [r6, #4]
90004f08:	4659      	mov	r1, fp
90004f0a:	6803      	ldr	r3, [r0, #0]
90004f0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f0e:	4798      	blx	r3
90004f10:	4606      	mov	r6, r0
90004f12:	4629      	mov	r1, r5
90004f14:	f000 fe00 	bl	90005b18 <_ZN19DataScreenPresenterC1ER14DataScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004f18:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004f1a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004f1e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004f20:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004f24:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004f28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004f2c:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004f2e:	f8c6 a008 	str.w	sl, [r6, #8]
90004f32:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004f34:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004f36:	4798      	blx	r3
    newPresenter->activate();
90004f38:	6833      	ldr	r3, [r6, #0]
90004f3a:	4630      	mov	r0, r6
90004f3c:	681b      	ldr	r3, [r3, #0]
90004f3e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004f40:	4621      	mov	r1, r4
90004f42:	4628      	mov	r0, r5
90004f44:	f013 fb9c 	bl	90018680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004f48:	6823      	ldr	r3, [r4, #0]
90004f4a:	4920      	ldr	r1, [pc, #128]	@ (90004fcc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x184>)
90004f4c:	691a      	ldr	r2, [r3, #16]
90004f4e:	428a      	cmp	r2, r1
90004f50:	d11a      	bne.n	90004f88 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004f52:	695b      	ldr	r3, [r3, #20]
90004f54:	4a1e      	ldr	r2, [pc, #120]	@ (90004fd0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x188>)
90004f56:	4293      	cmp	r3, r2
90004f58:	d111      	bne.n	90004f7e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004f5a:	f011 f98f 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90004f5e:	6803      	ldr	r3, [r0, #0]
90004f60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004f62:	b001      	add	sp, #4
90004f64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f68:	4718      	bx	r3
    if (*currentScreen)
90004f6a:	f8d8 0000 	ldr.w	r0, [r8]
90004f6e:	2800      	cmp	r0, #0
90004f70:	d1aa      	bne.n	90004ec8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x80>
90004f72:	e7b2      	b.n	90004eda <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004f74:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f78:	2800      	cmp	r0, #0
90004f7a:	d19f      	bne.n	90004ebc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x74>
90004f7c:	e7ad      	b.n	90004eda <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004f7e:	4620      	mov	r0, r4
90004f80:	b001      	add	sp, #4
90004f82:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f86:	4718      	bx	r3
    newTransition->init();
90004f88:	4620      	mov	r0, r4
90004f8a:	4790      	blx	r2
    newTransition->invalidate();
90004f8c:	6823      	ldr	r3, [r4, #0]
90004f8e:	e7e0      	b.n	90004f52 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004f90:	4790      	blx	r2
    if (*currentTrans)
90004f92:	f8d9 0000 	ldr.w	r0, [r9]
90004f96:	2800      	cmp	r0, #0
90004f98:	d083      	beq.n	90004ea2 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004f9a:	6803      	ldr	r3, [r0, #0]
90004f9c:	e77f      	b.n	90004e9e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004f9e:	4b0d      	ldr	r3, [pc, #52]	@ (90004fd4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x18c>)
90004fa0:	21a3      	movs	r1, #163	@ 0xa3
90004fa2:	4a0d      	ldr	r2, [pc, #52]	@ (90004fd8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004fa4:	480d      	ldr	r0, [pc, #52]	@ (90004fdc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004fa6:	f024 fb4f 	bl	90029648 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004faa:	4b0d      	ldr	r3, [pc, #52]	@ (90004fe0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x198>)
90004fac:	21a5      	movs	r1, #165	@ 0xa5
90004fae:	4a0a      	ldr	r2, [pc, #40]	@ (90004fd8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004fb0:	480a      	ldr	r0, [pc, #40]	@ (90004fdc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004fb2:	f024 fb49 	bl	90029648 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004fb6:	4b0b      	ldr	r3, [pc, #44]	@ (90004fe4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x19c>)
90004fb8:	21a4      	movs	r1, #164	@ 0xa4
90004fba:	4a07      	ldr	r2, [pc, #28]	@ (90004fd8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004fbc:	4807      	ldr	r0, [pc, #28]	@ (90004fdc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004fbe:	f024 fb43 	bl	90029648 <__assert_func>
90004fc2:	bf00      	nop
90004fc4:	90004d9d 	.word	0x90004d9d
90004fc8:	9002c930 	.word	0x9002c930
90004fcc:	90004da1 	.word	0x90004da1
90004fd0:	90004e39 	.word	0x90004e39
90004fd4:	9002bdb4 	.word	0x9002bdb4
90004fd8:	9002be44 	.word	0x9002be44
90004fdc:	9002bf1c 	.word	0x9002bf1c
90004fe0:	9002c008 	.word	0x9002c008
90004fe4:	9002bf64 	.word	0x9002bf64
90004fe8:	240219d4 	.word	0x240219d4
90004fec:	240219d0 	.word	0x240219d0

90004ff0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
90004ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004ff4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004ff8:	4607      	mov	r7, r0
90004ffa:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004ffc:	68b0      	ldr	r0, [r6, #8]
90004ffe:	6803      	ldr	r3, [r0, #0]
90005000:	6a1b      	ldr	r3, [r3, #32]
90005002:	4798      	blx	r3
90005004:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
90005008:	f0c0 809d 	bcc.w	90005146 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000500c:	6870      	ldr	r0, [r6, #4]
9000500e:	6803      	ldr	r3, [r0, #0]
90005010:	6a1b      	ldr	r3, [r3, #32]
90005012:	4798      	blx	r3
90005014:	280f      	cmp	r0, #15
90005016:	f240 80a2 	bls.w	9000515e <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000501a:	68f0      	ldr	r0, [r6, #12]
9000501c:	6803      	ldr	r3, [r0, #0]
9000501e:	6a1b      	ldr	r3, [r3, #32]
90005020:	4798      	blx	r3
90005022:	280b      	cmp	r0, #11
90005024:	f240 8095 	bls.w	90005152 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90005028:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90005190 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
9000502c:	f011 f926 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90005030:	3004      	adds	r0, #4
90005032:	f011 f961 	bl	900162f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005036:	f8d9 0000 	ldr.w	r0, [r9]
9000503a:	b130      	cbz	r0, 9000504a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
9000503c:	6803      	ldr	r3, [r0, #0]
9000503e:	494b      	ldr	r1, [pc, #300]	@ (9000516c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x17c>)
90005040:	68da      	ldr	r2, [r3, #12]
90005042:	428a      	cmp	r2, r1
90005044:	d178      	bne.n	90005138 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90005046:	681b      	ldr	r3, [r3, #0]
90005048:	4798      	blx	r3
    if (*currentScreen)
9000504a:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90005194 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a4>
9000504e:	f8d8 0000 	ldr.w	r0, [r8]
90005052:	2800      	cmp	r0, #0
90005054:	d062      	beq.n	9000511c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90005056:	6803      	ldr	r3, [r0, #0]
90005058:	695b      	ldr	r3, [r3, #20]
9000505a:	4798      	blx	r3
    if (*currentPresenter)
9000505c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005060:	2800      	cmp	r0, #0
90005062:	d056      	beq.n	90005112 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90005064:	6803      	ldr	r3, [r0, #0]
90005066:	685b      	ldr	r3, [r3, #4]
90005068:	4798      	blx	r3
    if (*currentScreen)
9000506a:	f8d8 0000 	ldr.w	r0, [r8]
9000506e:	b110      	cbz	r0, 90005076 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90005070:	6803      	ldr	r3, [r0, #0]
90005072:	681b      	ldr	r3, [r3, #0]
90005074:	4798      	blx	r3
    if (*currentPresenter)
90005076:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000507a:	b110      	cbz	r0, 90005082 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
9000507c:	6803      	ldr	r3, [r0, #0]
9000507e:	689b      	ldr	r3, [r3, #8]
90005080:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005082:	68f0      	ldr	r0, [r6, #12]
90005084:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90005086:	f04f 0b00 	mov.w	fp, #0
9000508a:	6803      	ldr	r3, [r0, #0]
9000508c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000508e:	4798      	blx	r3
90005090:	4b37      	ldr	r3, [pc, #220]	@ (90005170 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x180>)
90005092:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005094:	68b0      	ldr	r0, [r6, #8]
90005096:	4659      	mov	r1, fp
90005098:	6023      	str	r3, [r4, #0]
9000509a:	6803      	ldr	r3, [r0, #0]
9000509c:	f8c4 b004 	str.w	fp, [r4, #4]
900050a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900050a2:	f884 b008 	strb.w	fp, [r4, #8]
900050a6:	4798      	blx	r3
900050a8:	4605      	mov	r5, r0
900050aa:	f000 fdd1 	bl	90005c50 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900050ae:	6870      	ldr	r0, [r6, #4]
900050b0:	4659      	mov	r1, fp
900050b2:	6803      	ldr	r3, [r0, #0]
900050b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900050b6:	4798      	blx	r3
900050b8:	4606      	mov	r6, r0
900050ba:	4629      	mov	r1, r5
900050bc:	f000 fd9e 	bl	90005bfc <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
900050c0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900050c2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900050c6:	4628      	mov	r0, r5
    *currentTrans = newTransition;
900050c8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
900050cc:	f8c8 5000 	str.w	r5, [r8]
900050d0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
900050d4:	682b      	ldr	r3, [r5, #0]
900050d6:	f8c6 a008 	str.w	sl, [r6, #8]
900050da:	68db      	ldr	r3, [r3, #12]
900050dc:	63ee      	str	r6, [r5, #60]	@ 0x3c
900050de:	4798      	blx	r3
    newPresenter->activate();
900050e0:	6833      	ldr	r3, [r6, #0]
900050e2:	4630      	mov	r0, r6
900050e4:	681b      	ldr	r3, [r3, #0]
900050e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900050e8:	4621      	mov	r1, r4
900050ea:	4628      	mov	r0, r5
900050ec:	f013 fac8 	bl	90018680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900050f0:	6823      	ldr	r3, [r4, #0]
900050f2:	4920      	ldr	r1, [pc, #128]	@ (90005174 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x184>)
900050f4:	691a      	ldr	r2, [r3, #16]
900050f6:	428a      	cmp	r2, r1
900050f8:	d11a      	bne.n	90005130 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
900050fa:	695b      	ldr	r3, [r3, #20]
900050fc:	4a1e      	ldr	r2, [pc, #120]	@ (90005178 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x188>)
900050fe:	4293      	cmp	r3, r2
90005100:	d111      	bne.n	90005126 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90005102:	f011 f8bb 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90005106:	6803      	ldr	r3, [r0, #0]
90005108:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
9000510a:	b001      	add	sp, #4
9000510c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005110:	4718      	bx	r3
    if (*currentScreen)
90005112:	f8d8 0000 	ldr.w	r0, [r8]
90005116:	2800      	cmp	r0, #0
90005118:	d1aa      	bne.n	90005070 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x80>
9000511a:	e7b2      	b.n	90005082 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
9000511c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005120:	2800      	cmp	r0, #0
90005122:	d19f      	bne.n	90005064 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
90005124:	e7ad      	b.n	90005082 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90005126:	4620      	mov	r0, r4
90005128:	b001      	add	sp, #4
9000512a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000512e:	4718      	bx	r3
    newTransition->init();
90005130:	4620      	mov	r0, r4
90005132:	4790      	blx	r2
    newTransition->invalidate();
90005134:	6823      	ldr	r3, [r4, #0]
90005136:	e7e0      	b.n	900050fa <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005138:	4790      	blx	r2
    if (*currentTrans)
9000513a:	f8d9 0000 	ldr.w	r0, [r9]
9000513e:	2800      	cmp	r0, #0
90005140:	d083      	beq.n	9000504a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90005142:	6803      	ldr	r3, [r0, #0]
90005144:	e77f      	b.n	90005046 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005146:	4b0d      	ldr	r3, [pc, #52]	@ (9000517c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x18c>)
90005148:	21a3      	movs	r1, #163	@ 0xa3
9000514a:	4a0d      	ldr	r2, [pc, #52]	@ (90005180 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
9000514c:	480d      	ldr	r0, [pc, #52]	@ (90005184 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
9000514e:	f024 fa7b 	bl	90029648 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005152:	4b0d      	ldr	r3, [pc, #52]	@ (90005188 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x198>)
90005154:	21a5      	movs	r1, #165	@ 0xa5
90005156:	4a0a      	ldr	r2, [pc, #40]	@ (90005180 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005158:	480a      	ldr	r0, [pc, #40]	@ (90005184 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
9000515a:	f024 fa75 	bl	90029648 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000515e:	4b0b      	ldr	r3, [pc, #44]	@ (9000518c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x19c>)
90005160:	21a4      	movs	r1, #164	@ 0xa4
90005162:	4a07      	ldr	r2, [pc, #28]	@ (90005180 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005164:	4807      	ldr	r0, [pc, #28]	@ (90005184 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
90005166:	f024 fa6f 	bl	90029648 <__assert_func>
9000516a:	bf00      	nop
9000516c:	90004d9d 	.word	0x90004d9d
90005170:	9002c930 	.word	0x9002c930
90005174:	90004da1 	.word	0x90004da1
90005178:	90004e39 	.word	0x90004e39
9000517c:	9002bdb4 	.word	0x9002bdb4
90005180:	9002c0ac 	.word	0x9002c0ac
90005184:	9002bf1c 	.word	0x9002bf1c
90005188:	9002c008 	.word	0x9002c008
9000518c:	9002bf64 	.word	0x9002bf64
90005190:	240219d4 	.word	0x240219d4
90005194:	240219d0 	.word	0x240219d0

90005198 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90005198:	b570      	push	{r4, r5, r6, lr}
9000519a:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
9000519c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
900051a0:	b1b8      	cbz	r0, 900051d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900051a2:	6802      	ldr	r2, [r0, #0]
900051a4:	4916      	ldr	r1, [pc, #88]	@ (90005200 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
900051a6:	68d3      	ldr	r3, [r2, #12]
900051a8:	428b      	cmp	r3, r1
900051aa:	d11f      	bne.n	900051ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
900051ac:	6843      	ldr	r3, [r0, #4]
900051ae:	b183      	cbz	r3, 900051d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900051b0:	6881      	ldr	r1, [r0, #8]
900051b2:	b179      	cbz	r1, 900051d4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
900051b4:	6892      	ldr	r2, [r2, #8]
900051b6:	4b13      	ldr	r3, [pc, #76]	@ (90005204 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900051b8:	429a      	cmp	r2, r3
900051ba:	d11e      	bne.n	900051fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900051bc:	68c2      	ldr	r2, [r0, #12]
900051be:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900051c2:	eb03 0062 	add.w	r0, r3, r2, asr #1
900051c6:	07d3      	lsls	r3, r2, #31
900051c8:	d40d      	bmi.n	900051e6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
900051ca:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
900051cc:	2300      	movs	r3, #0
900051ce:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
900051d2:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
900051d4:	68c5      	ldr	r5, [r0, #12]
900051d6:	07ee      	lsls	r6, r5, #31
900051d8:	d5fb      	bpl.n	900051d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
900051da:	6892      	ldr	r2, [r2, #8]
900051dc:	4e09      	ldr	r6, [pc, #36]	@ (90005204 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900051de:	42b2      	cmp	r2, r6
900051e0:	d10b      	bne.n	900051fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900051e2:	eb03 0065 	add.w	r0, r3, r5, asr #1
900051e6:	6803      	ldr	r3, [r0, #0]
900051e8:	5859      	ldr	r1, [r3, r1]
900051ea:	e7ee      	b.n	900051ca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
900051ec:	4798      	blx	r3
900051ee:	2800      	cmp	r0, #0
900051f0:	d0ef      	beq.n	900051d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
900051f2:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
900051f6:	6802      	ldr	r2, [r0, #0]
900051f8:	e7dc      	b.n	900051b4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
900051fa:	4790      	blx	r2
900051fc:	e7e6      	b.n	900051cc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
900051fe:	bf00      	nop
90005200:	90004df1 	.word	0x90004df1
90005204:	90004dd9 	.word	0x90004dd9

90005208 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005208:	b570      	push	{r4, r5, r6, lr}
9000520a:	4604      	mov	r4, r0
9000520c:	4615      	mov	r5, r2
9000520e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005210:	f011 f944 	bl	9001649c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005214:	4a22      	ldr	r2, [pc, #136]	@ (900052a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90005216:	2300      	movs	r3, #0
      frontendHeap(heap),
90005218:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
9000521c:	6014      	str	r4, [r2, #0]
        return instance;
9000521e:	4d21      	ldr	r5, [pc, #132]	@ (900052a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005220:	4a21      	ldr	r2, [pc, #132]	@ (900052a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005222:	6828      	ldr	r0, [r5, #0]
90005224:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005226:	4a21      	ldr	r2, [pc, #132]	@ (900052ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90005228:	4921      	ldr	r1, [pc, #132]	@ (900052b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
9000522a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000522e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90005232:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90005236:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
9000523a:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000523e:	6802      	ldr	r2, [r0, #0]
90005240:	6892      	ldr	r2, [r2, #8]
90005242:	428a      	cmp	r2, r1
90005244:	d129      	bne.n	9000529a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90005246:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000524a:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
9000524e:	2000      	movs	r0, #0
90005250:	f000 fbdc 	bl	90005a0c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005254:	682b      	ldr	r3, [r5, #0]
90005256:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000525a:	b1e2      	cbz	r2, 90005296 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
9000525c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000525e:	b1d0      	cbz	r0, 90005296 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90005260:	f01b fd75 	bl	90020d4e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90005264:	682b      	ldr	r3, [r5, #0]
90005266:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000526a:	b192      	cbz	r2, 90005292 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
9000526c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000526e:	b180      	cbz	r0, 90005292 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90005270:	f01b fde8 	bl	90020e44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90005274:	682b      	ldr	r3, [r5, #0]
90005276:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000527a:	b12a      	cbz	r2, 90005288 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
9000527c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000527e:	b118      	cbz	r0, 90005288 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90005280:	f01b fdec 	bl	90020e5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90005284:	4620      	mov	r0, r4
90005286:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90005288:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
9000528a:	f01b fde7 	bl	90020e5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
9000528e:	4620      	mov	r0, r4
90005290:	bd70      	pop	{r4, r5, r6, pc}
90005292:	6898      	ldr	r0, [r3, #8]
90005294:	e7ec      	b.n	90005270 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90005296:	6898      	ldr	r0, [r3, #8]
90005298:	e7e2      	b.n	90005260 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000529a:	4619      	mov	r1, r3
9000529c:	4790      	blx	r2
9000529e:	e7d6      	b.n	9000524e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900052a0:	240219e0 	.word	0x240219e0
900052a4:	2402198c 	.word	0x2402198c
900052a8:	9002c8dc 	.word	0x9002c8dc
900052ac:	9002c8c4 	.word	0x9002c8c4
900052b0:	90000da5 	.word	0x90000da5

900052b4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900052b4:	4905      	ldr	r1, [pc, #20]	@ (900052cc <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x18>)
900052b6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900052b8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900052bc:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900052c0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900052c4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900052c8:	4770      	bx	lr
900052ca:	bf00      	nop
900052cc:	90004ff1 	.word	0x90004ff1

900052d0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>:
900052d0:	4905      	ldr	r1, [pc, #20]	@ (900052e8 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv+0x18>)
900052d2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900052d4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900052d8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900052dc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900052e0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900052e4:	4770      	bx	lr
900052e6:	bf00      	nop
900052e8:	90004e49 	.word	0x90004e49

900052ec <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900052ec:	6a40      	ldr	r0, [r0, #36]	@ 0x24
900052ee:	4770      	bx	lr

900052f0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900052f0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900052f2:	4770      	bx	lr

900052f4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900052f4:	4770      	bx	lr
900052f6:	bf00      	nop

900052f8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
900052f8:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
900052fa:	888a      	ldrh	r2, [r1, #4]
900052fc:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
900052fe:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
90005300:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90005302:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90005304:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90005308:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
9000530c:	4418      	add	r0, r3
9000530e:	4770      	bx	lr

90005310 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005310:	b1fa      	cbz	r2, 90005352 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90005312:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005314:	7b14      	ldrb	r4, [r2, #12]
90005316:	b1d4      	cbz	r4, 9000534e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005318:	f892 c00d 	ldrb.w	ip, [r2, #13]
9000531c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90005320:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90005324:	6a03      	ldr	r3, [r0, #32]
90005326:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000532a:	ea4e 0202 	orr.w	r2, lr, r2
9000532e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90005332:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90005336:	e004      	b.n	90005342 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90005338:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
9000533c:	d807      	bhi.n	9000534e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000533e:	4283      	cmp	r3, r0
90005340:	d005      	beq.n	9000534e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90005342:	881a      	ldrh	r2, [r3, #0]
90005344:	428a      	cmp	r2, r1
90005346:	d1f7      	bne.n	90005338 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90005348:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
9000534c:	bd10      	pop	{r4, pc}
        return 0;
9000534e:	2000      	movs	r0, #0
}
90005350:	bd10      	pop	{r4, pc}
        return 0;
90005352:	4610      	mov	r0, r2
}
90005354:	4770      	bx	lr
90005356:	bf00      	nop

90005358 <_ZN8touchgfx13GeneratedFontD0Ev>:
90005358:	b510      	push	{r4, lr}
9000535a:	4604      	mov	r4, r0
9000535c:	212c      	movs	r1, #44	@ 0x2c
9000535e:	f023 fdfd 	bl	90028f5c <_ZdlPvj>
90005362:	4620      	mov	r0, r4
90005364:	bd10      	pop	{r4, pc}
90005366:	bf00      	nop

90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005368:	b530      	push	{r4, r5, lr}
9000536a:	b08b      	sub	sp, #44	@ 0x2c
9000536c:	4604      	mov	r4, r0
9000536e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90005372:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005374:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90005378:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000537a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
9000537e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005380:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90005384:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005386:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
9000538a:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000538c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90005390:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005392:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90005396:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005398:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
9000539c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000539e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
900053a2:	9508      	str	r5, [sp, #32]
900053a4:	f012 fdc4 	bl	90017f30 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900053a8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
900053aa:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900053ac:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900053ae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900053b0:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900053b2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900053b4:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
900053b6:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900053b8:	62a3      	str	r3, [r4, #40]	@ 0x28
900053ba:	4b02      	ldr	r3, [pc, #8]	@ (900053c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900053bc:	6023      	str	r3, [r4, #0]
}
900053be:	b00b      	add	sp, #44	@ 0x2c
900053c0:	bd30      	pop	{r4, r5, pc}
900053c2:	bf00      	nop
900053c4:	9002c954 	.word	0x9002c954

900053c8 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900053c8:	4770      	bx	lr
900053ca:	bf00      	nop

900053cc <_ZN19StartScreenViewBaseD1Ev>:
}

StartScreenViewBase::~StartScreenViewBase()
{

}
900053cc:	4770      	bx	lr
900053ce:	bf00      	nop

900053d0 <_ZN19StartScreenViewBase11setupScreenEv>:

void StartScreenViewBase::setupScreen()
{

}
900053d0:	4770      	bx	lr
900053d2:	bf00      	nop

900053d4 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900053d4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900053d6:	68c3      	ldr	r3, [r0, #12]
900053d8:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900053dc:	f013 0f01 	tst.w	r3, #1
900053e0:	eb04 0063 	add.w	r0, r4, r3, asr #1
900053e4:	d004      	beq.n	900053f0 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
900053e6:	ea4f 0c63 	mov.w	ip, r3, asr #1
900053ea:	f854 300c 	ldr.w	r3, [r4, ip]
900053ee:	589a      	ldr	r2, [r3, r2]
    }
900053f0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900053f4:	4710      	bx	r2
900053f6:	bf00      	nop

900053f8 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900053f8:	6843      	ldr	r3, [r0, #4]
900053fa:	b13b      	cbz	r3, 9000540c <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900053fc:	6883      	ldr	r3, [r0, #8]
900053fe:	b10b      	cbz	r3, 90005404 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005400:	2001      	movs	r0, #1
    }
90005402:	4770      	bx	lr
90005404:	68c0      	ldr	r0, [r0, #12]
90005406:	f000 0001 	and.w	r0, r0, #1
9000540a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000540c:	4618      	mov	r0, r3
9000540e:	4770      	bx	lr

90005410 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005410:	b510      	push	{r4, lr}
90005412:	4604      	mov	r4, r0
90005414:	2110      	movs	r1, #16
90005416:	f023 fda1 	bl	90028f5c <_ZdlPvj>
9000541a:	4620      	mov	r0, r4
9000541c:	bd10      	pop	{r4, pc}
9000541e:	bf00      	nop

90005420 <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
90005420:	b510      	push	{r4, lr}
90005422:	4604      	mov	r4, r0
}
90005424:	f44f 719c 	mov.w	r1, #312	@ 0x138
90005428:	f023 fd98 	bl	90028f5c <_ZdlPvj>
9000542c:	4620      	mov	r0, r4
9000542e:	bd10      	pop	{r4, pc}

90005430 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
90005430:	30e0      	adds	r0, #224	@ 0xe0
90005432:	4288      	cmp	r0, r1
90005434:	d000      	beq.n	90005438 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90005436:	4770      	bx	lr
{
90005438:	b508      	push	{r3, lr}
    virtual ~StartScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000543a:	f010 ff1f 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to DataScreen
        //Go to DataScreen with no screen transition
        application().gotoDataScreenScreenNoTransition();
    }
}
9000543e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataScreenScreenNoTransition();
90005442:	f7ff bf45 	b.w	900052d0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>
90005446:	bf00      	nop

90005448 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
90005448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000544c:	b088      	sub	sp, #32
9000544e:	4604      	mov	r4, r0
        : presenter(0)
90005450:	2500      	movs	r5, #0
90005452:	f012 ff69 	bl	90018328 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90005456:	22ff      	movs	r2, #255	@ 0xff
          touchable(false),
90005458:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000545c:	4970      	ldr	r1, [pc, #448]	@ (90005620 <_ZN19StartScreenViewBaseC1Ev+0x1d8>)
9000545e:	f04f 38ff 	mov.w	r8, #4294967295
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
90005462:	4870      	ldr	r0, [pc, #448]	@ (90005624 <_ZN19StartScreenViewBaseC1Ev+0x1dc>)
90005464:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
90005468:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
9000546c:	1d26      	adds	r6, r4, #4
9000546e:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
        : typedTextId(id)
90005472:	f8df a1ec 	ldr.w	sl, [pc, #492]	@ 90005660 <_ZN19StartScreenViewBaseC1Ev+0x218>
90005476:	6020      	str	r0, [r4, #0]
90005478:	4638      	mov	r0, r7
9000547a:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
9000547e:	6421      	str	r1, [r4, #64]	@ 0x40
90005480:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
90005484:	66e1      	str	r1, [r4, #108]	@ 0x6c
90005486:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005488:	4967      	ldr	r1, [pc, #412]	@ (90005628 <_ZN19StartScreenViewBaseC1Ev+0x1e0>)
        : color(col)
9000548a:	66a5      	str	r5, [r4, #104]	@ 0x68
9000548c:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        rect.x = x;
90005490:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90005664 <_ZN19StartScreenViewBaseC1Ev+0x21c>
        : x(0), y(0), width(0), height(0)
90005494:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90005498:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000549c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900054a0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900054a4:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900054a8:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900054ac:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
900054b0:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
900054b4:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900054b8:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900054bc:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          nextDrawChainElement(0),
900054c0:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
          touchable(false),
900054c4:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
900054c8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900054cc:	f8c4 20ce 	str.w	r2, [r4, #206]	@ 0xce
900054d0:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
900054d4:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
          cachedAbsX(0),
900054d8:	f8c4 50b8 	str.w	r5, [r4, #184]	@ 0xb8
        : color(col)
900054dc:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
900054e0:	f8c4 a0c0 	str.w	sl, [r4, #192]	@ 0xc0
900054e4:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
              text(0)
900054e8:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900054ec:	e9c4 5835 	strd	r5, r8, [r4, #212]	@ 0xd4
900054f0:	f00e fb28 	bl	90013b44 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
900054f4:	4b4d      	ldr	r3, [pc, #308]	@ (9000562c <_ZN19StartScreenViewBaseC1Ev+0x1e4>)
900054f6:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900054fa:	4630      	mov	r0, r6
900054fc:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
90005500:	4b4b      	ldr	r3, [pc, #300]	@ (90005630 <_ZN19StartScreenViewBaseC1Ev+0x1e8>)
        rect.x = x;
90005502:	f8c4 9048 	str.w	r9, [r4, #72]	@ 0x48
90005506:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        color = newColor;
9000550a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000550e:	f8c4 412c 	str.w	r4, [r4, #300]	@ 0x12c
90005512:	66a3      	str	r3, [r4, #104]	@ 0x68
90005514:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90005518:	6465      	str	r5, [r4, #68]	@ 0x44
9000551a:	f00a fd29 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000551e:	4b45      	ldr	r3, [pc, #276]	@ (90005634 <_ZN19StartScreenViewBaseC1Ev+0x1ec>)
90005520:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
90005524:	4630      	mov	r0, r6
90005526:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
9000552a:	e9c4 591c 	strd	r5, r9, [r4, #112]	@ 0x70
9000552e:	f00a fd1f 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(99, 27);
90005532:	f104 0998 	add.w	r9, r4, #152	@ 0x98
90005536:	4b40      	ldr	r3, [pc, #256]	@ (90005638 <_ZN19StartScreenViewBaseC1Ev+0x1f0>)
        color = newColor;
90005538:	f8c4 80c8 	str.w	r8, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
9000553c:	46e8      	mov	r8, sp
9000553e:	4649      	mov	r1, r9
90005540:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005544:	4640      	mov	r0, r8
        linespace = space;
90005546:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
9000554a:	f00d fd8d 	bl	90013068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000554e:	2208      	movs	r2, #8
90005550:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
90005554:	f8cd a018 	str.w	sl, [sp, #24]
90005558:	f8ad 201c 	strh.w	r2, [sp, #28]
9000555c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005560:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9XXE));
90005564:	a906      	add	r1, sp, #24
90005566:	4648      	mov	r0, r9
90005568:	f00e f826 	bl	900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000556c:	4649      	mov	r1, r9
9000556e:	4630      	mov	r0, r6
90005570:	f00a fcfe 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005574:	4b31      	ldr	r3, [pc, #196]	@ (9000563c <_ZN19StartScreenViewBaseC1Ev+0x1f4>)
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID));
90005576:	a905      	add	r1, sp, #20
90005578:	aa06      	add	r2, sp, #24
9000557a:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
9000557e:	4638      	mov	r0, r7
90005580:	f8ad 5014 	strh.w	r5, [sp, #20]
90005584:	f8ad 5018 	strh.w	r5, [sp, #24]
90005588:	f00e f873 	bl	90013672 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
9000558c:	4b2c      	ldr	r3, [pc, #176]	@ (90005640 <_ZN19StartScreenViewBaseC1Ev+0x1f8>)
class TypedText
9000558e:	2107      	movs	r1, #7
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90005590:	881b      	ldrh	r3, [r3, #0]
90005592:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
90005596:	428b      	cmp	r3, r1
90005598:	d924      	bls.n	900055e4 <_ZN19StartScreenViewBaseC1Ev+0x19c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000559a:	4b2a      	ldr	r3, [pc, #168]	@ (90005644 <_ZN19StartScreenViewBaseC1Ev+0x1fc>)
9000559c:	681b      	ldr	r3, [r3, #0]
9000559e:	2b00      	cmp	r3, #0
900055a0:	d038      	beq.n	90005614 <_ZN19StartScreenViewBaseC1Ev+0x1cc>
        return fonts[typedTexts[typedTextId].fontIdx];
900055a2:	7b9a      	ldrb	r2, [r3, #14]
900055a4:	4b28      	ldr	r3, [pc, #160]	@ (90005648 <_ZN19StartScreenViewBaseC1Ev+0x200>)
900055a6:	681b      	ldr	r3, [r3, #0]
900055a8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900055ac:	4b27      	ldr	r3, [pc, #156]	@ (9000564c <_ZN19StartScreenViewBaseC1Ev+0x204>)
900055ae:	6818      	ldr	r0, [r3, #0]
900055b0:	f000 fa6a 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900055b4:	f8d8 3000 	ldr.w	r3, [r8]
900055b8:	4925      	ldr	r1, [pc, #148]	@ (90005650 <_ZN19StartScreenViewBaseC1Ev+0x208>)
900055ba:	4681      	mov	r9, r0
900055bc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900055be:	428a      	cmp	r2, r1
900055c0:	d122      	bne.n	90005608 <_ZN19StartScreenViewBaseC1Ev+0x1c0>
        return fontHeight;
900055c2:	f8b8 5004 	ldrh.w	r5, [r8, #4]
900055c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900055c8:	4649      	mov	r1, r9
900055ca:	4640      	mov	r0, r8
900055cc:	4798      	blx	r3
900055ce:	fb15 f500 	smulbb	r5, r5, r0
900055d2:	f8d8 3000 	ldr.w	r3, [r8]
900055d6:	4649      	mov	r1, r9
900055d8:	b2ad      	uxth	r5, r5
900055da:	4640      	mov	r0, r8
900055dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900055de:	4798      	blx	r3
900055e0:	4405      	add	r5, r0
900055e2:	b22d      	sxth	r5, r5
        color = col;
900055e4:	f04f 33ff 	mov.w	r3, #4294967295
900055e8:	4630      	mov	r0, r6
900055ea:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900055ec:	f8a4 5126 	strh.w	r5, [r4, #294]	@ 0x126
        colorPressed = col;
900055f0:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
    buttonWithLabel1.setAction(buttonCallback);
900055f4:	f504 7394 	add.w	r3, r4, #296	@ 0x128
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900055f8:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
900055fc:	f00a fcb8 	bl	9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005600:	4620      	mov	r0, r4
90005602:	b008      	add	sp, #32
90005604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005608:	4640      	mov	r0, r8
9000560a:	4790      	blx	r2
9000560c:	f8d8 3000 	ldr.w	r3, [r8]
90005610:	4605      	mov	r5, r0
90005612:	e7d8      	b.n	900055c6 <_ZN19StartScreenViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005614:	4b0f      	ldr	r3, [pc, #60]	@ (90005654 <_ZN19StartScreenViewBaseC1Ev+0x20c>)
90005616:	216c      	movs	r1, #108	@ 0x6c
90005618:	4a0f      	ldr	r2, [pc, #60]	@ (90005658 <_ZN19StartScreenViewBaseC1Ev+0x210>)
9000561a:	4810      	ldr	r0, [pc, #64]	@ (9000565c <_ZN19StartScreenViewBaseC1Ev+0x214>)
9000561c:	f024 f814 	bl	90029648 <__assert_func>
90005620:	9002d518 	.word	0x9002d518
90005624:	9002c9d4 	.word	0x9002c9d4
90005628:	9002d488 	.word	0x9002d488
9000562c:	9002c9bc 	.word	0x9002c9bc
90005630:	90005431 	.word	0x90005431
90005634:	ff7fa6eb 	.word	0xff7fa6eb
90005638:	001b0063 	.word	0x001b0063
9000563c:	00790099 	.word	0x00790099
90005640:	240219e8 	.word	0x240219e8
90005644:	240219e4 	.word	0x240219e4
90005648:	240219ec 	.word	0x240219ec
9000564c:	240219f0 	.word	0x240219f0
90005650:	9000465d 	.word	0x9000465d
90005654:	9002bc5c 	.word	0x9002bc5c
90005658:	9002bca0 	.word	0x9002bca0
9000565c:	9002bcdc 	.word	0x9002bcdc
90005660:	9002c7e8 	.word	0x9002c7e8
90005664:	011001e0 	.word	0x011001e0

90005668 <__tcf_0>:

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005668:	4770      	bx	lr
9000566a:	bf00      	nop

9000566c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>:
{
9000566c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000566e:	4d19      	ldr	r5, [pc, #100]	@ (900056d4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x68>)
{
90005670:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005672:	682c      	ldr	r4, [r5, #0]
90005674:	f3bf 8f5b 	dmb	ish
90005678:	f014 0401 	ands.w	r4, r4, #1
9000567c:	d002      	beq.n	90005684 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_25_4bpp;
}
9000567e:	4816      	ldr	r0, [pc, #88]	@ (900056d8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
90005680:	b00f      	add	sp, #60	@ 0x3c
90005682:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005684:	4628      	mov	r0, r5
90005686:	f023 fc6b 	bl	90028f60 <__cxa_guard_acquire>
9000568a:	2800      	cmp	r0, #0
9000568c:	d0f7      	beq.n	9000567e <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x12>
9000568e:	233f      	movs	r3, #63	@ 0x3f
90005690:	4a12      	ldr	r2, [pc, #72]	@ (900056dc <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x70>)
90005692:	4913      	ldr	r1, [pc, #76]	@ (900056e0 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x74>)
90005694:	4810      	ldr	r0, [pc, #64]	@ (900056d8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
90005696:	e9cd 3409 	strd	r3, r4, [sp, #36]	@ 0x24
9000569a:	4b12      	ldr	r3, [pc, #72]	@ (900056e4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x78>)
9000569c:	e9cd 420b 	strd	r4, r2, [sp, #44]	@ 0x2c
900056a0:	e9cd 3107 	strd	r3, r1, [sp, #28]
900056a4:	2201      	movs	r2, #1
900056a6:	2304      	movs	r3, #4
900056a8:	2119      	movs	r1, #25
900056aa:	e9cd 3203 	strd	r3, r2, [sp, #12]
900056ae:	9100      	str	r1, [sp, #0]
900056b0:	231e      	movs	r3, #30
900056b2:	2211      	movs	r2, #17
900056b4:	490c      	ldr	r1, [pc, #48]	@ (900056e8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x7c>)
900056b6:	e9cd 4405 	strd	r4, r4, [sp, #20]
900056ba:	e9cd 4401 	strd	r4, r4, [sp, #4]
900056be:	f7ff fe53 	bl	90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900056c2:	480a      	ldr	r0, [pc, #40]	@ (900056ec <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x80>)
900056c4:	f023 ffde 	bl	90029684 <atexit>
900056c8:	4628      	mov	r0, r5
900056ca:	f023 fc55 	bl	90028f78 <__cxa_guard_release>
}
900056ce:	4802      	ldr	r0, [pc, #8]	@ (900056d8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
900056d0:	b00f      	add	sp, #60	@ 0x3c
900056d2:	bd30      	pop	{r4, r5, pc}
900056d4:	2400786c 	.word	0x2400786c
900056d8:	24007870 	.word	0x24007870
900056dc:	9002ca00 	.word	0x9002ca00
900056e0:	9002dc9c 	.word	0x9002dc9c
900056e4:	9002dcb0 	.word	0x9002dcb0
900056e8:	90201344 	.word	0x90201344
900056ec:	90005669 	.word	0x90005669

900056f0 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900056f0:	4770      	bx	lr
900056f2:	bf00      	nop

900056f4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>:
{
900056f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900056f6:	4d19      	ldr	r5, [pc, #100]	@ (9000575c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x68>)
{
900056f8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900056fa:	682c      	ldr	r4, [r5, #0]
900056fc:	f3bf 8f5b 	dmb	ish
90005700:	f014 0401 	ands.w	r4, r4, #1
90005704:	d002      	beq.n	9000570c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_30_4bpp;
}
90005706:	4816      	ldr	r0, [pc, #88]	@ (90005760 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005708:	b00f      	add	sp, #60	@ 0x3c
9000570a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000570c:	4628      	mov	r0, r5
9000570e:	f023 fc27 	bl	90028f60 <__cxa_guard_acquire>
90005712:	2800      	cmp	r0, #0
90005714:	d0f7      	beq.n	90005706 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x12>
90005716:	2201      	movs	r2, #1
90005718:	4912      	ldr	r1, [pc, #72]	@ (90005764 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x70>)
9000571a:	203f      	movs	r0, #63	@ 0x3f
9000571c:	231e      	movs	r3, #30
9000571e:	9206      	str	r2, [sp, #24]
90005720:	910c      	str	r1, [sp, #48]	@ 0x30
90005722:	2104      	movs	r1, #4
90005724:	9009      	str	r0, [sp, #36]	@ 0x24
90005726:	4810      	ldr	r0, [pc, #64]	@ (90005768 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x74>)
90005728:	e9cd 2404 	strd	r2, r4, [sp, #16]
9000572c:	4a0f      	ldr	r2, [pc, #60]	@ (9000576c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x78>)
9000572e:	9007      	str	r0, [sp, #28]
90005730:	9208      	str	r2, [sp, #32]
90005732:	2205      	movs	r2, #5
90005734:	480a      	ldr	r0, [pc, #40]	@ (90005760 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005736:	e9cd 3400 	strd	r3, r4, [sp]
9000573a:	e9cd 4102 	strd	r4, r1, [sp, #8]
9000573e:	e9cd 440a 	strd	r4, r4, [sp, #40]	@ 0x28
90005742:	490b      	ldr	r1, [pc, #44]	@ (90005770 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x7c>)
90005744:	f7ff fe10 	bl	90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005748:	480a      	ldr	r0, [pc, #40]	@ (90005774 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x80>)
9000574a:	f023 ff9b 	bl	90029684 <atexit>
9000574e:	4628      	mov	r0, r5
90005750:	f023 fc12 	bl	90028f78 <__cxa_guard_release>
}
90005754:	4802      	ldr	r0, [pc, #8]	@ (90005760 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005756:	b00f      	add	sp, #60	@ 0x3c
90005758:	bd30      	pop	{r4, r5, pc}
9000575a:	bf00      	nop
9000575c:	2400789c 	.word	0x2400789c
90005760:	240078a0 	.word	0x240078a0
90005764:	9002ca00 	.word	0x9002ca00
90005768:	9002dcb4 	.word	0x9002dcb4
9000576c:	9002dca0 	.word	0x9002dca0
90005770:	90201434 	.word	0x90201434
90005774:	900056f1 	.word	0x900056f1

90005778 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005778:	4770      	bx	lr
9000577a:	bf00      	nop

9000577c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>:
{
9000577c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000577e:	4d19      	ldr	r5, [pc, #100]	@ (900057e4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x68>)
{
90005780:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005782:	682c      	ldr	r4, [r5, #0]
90005784:	f3bf 8f5b 	dmb	ish
90005788:	f014 0401 	ands.w	r4, r4, #1
9000578c:	d002      	beq.n	90005794 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_40_4bpp;
}
9000578e:	4816      	ldr	r0, [pc, #88]	@ (900057e8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
90005790:	b00f      	add	sp, #60	@ 0x3c
90005792:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005794:	4628      	mov	r0, r5
90005796:	f023 fbe3 	bl	90028f60 <__cxa_guard_acquire>
9000579a:	2800      	cmp	r0, #0
9000579c:	d0f7      	beq.n	9000578e <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x12>
9000579e:	4913      	ldr	r1, [pc, #76]	@ (900057ec <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x70>)
900057a0:	223f      	movs	r2, #63	@ 0x3f
900057a2:	2328      	movs	r3, #40	@ 0x28
900057a4:	9406      	str	r4, [sp, #24]
900057a6:	9405      	str	r4, [sp, #20]
900057a8:	9300      	str	r3, [sp, #0]
900057aa:	9402      	str	r4, [sp, #8]
900057ac:	9401      	str	r4, [sp, #4]
900057ae:	480e      	ldr	r0, [pc, #56]	@ (900057e8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900057b0:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
900057b4:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
900057b8:	490d      	ldr	r1, [pc, #52]	@ (900057f0 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x74>)
900057ba:	4a0e      	ldr	r2, [pc, #56]	@ (900057f4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x78>)
900057bc:	9108      	str	r1, [sp, #32]
900057be:	2104      	movs	r1, #4
900057c0:	9207      	str	r2, [sp, #28]
900057c2:	2201      	movs	r2, #1
900057c4:	9103      	str	r1, [sp, #12]
900057c6:	9204      	str	r2, [sp, #16]
900057c8:	220d      	movs	r2, #13
900057ca:	490b      	ldr	r1, [pc, #44]	@ (900057f8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x7c>)
900057cc:	f7ff fdcc 	bl	90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900057d0:	480a      	ldr	r0, [pc, #40]	@ (900057fc <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x80>)
900057d2:	f023 ff57 	bl	90029684 <atexit>
900057d6:	4628      	mov	r0, r5
900057d8:	f023 fbce 	bl	90028f78 <__cxa_guard_release>
}
900057dc:	4802      	ldr	r0, [pc, #8]	@ (900057e8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900057de:	b00f      	add	sp, #60	@ 0x3c
900057e0:	bd30      	pop	{r4, r5, pc}
900057e2:	bf00      	nop
900057e4:	240078cc 	.word	0x240078cc
900057e8:	240078d0 	.word	0x240078d0
900057ec:	9002ca00 	.word	0x9002ca00
900057f0:	9002dca4 	.word	0x9002dca4
900057f4:	9002dcb8 	.word	0x9002dcb8
900057f8:	9020147c 	.word	0x9020147c
900057fc:	90005779 	.word	0x90005779

90005800 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005800:	4770      	bx	lr
90005802:	bf00      	nop

90005804 <_Z23getFont_verdana_10_4bppv>:
{
90005804:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005806:	4d18      	ldr	r5, [pc, #96]	@ (90005868 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005808:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000580a:	682c      	ldr	r4, [r5, #0]
9000580c:	f3bf 8f5b 	dmb	ish
90005810:	f014 0401 	ands.w	r4, r4, #1
90005814:	d002      	beq.n	9000581c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005816:	4815      	ldr	r0, [pc, #84]	@ (9000586c <_Z23getFont_verdana_10_4bppv+0x68>)
90005818:	b00f      	add	sp, #60	@ 0x3c
9000581a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000581c:	4628      	mov	r0, r5
9000581e:	f023 fb9f 	bl	90028f60 <__cxa_guard_acquire>
90005822:	2800      	cmp	r0, #0
90005824:	d0f7      	beq.n	90005816 <_Z23getFont_verdana_10_4bppv+0x12>
90005826:	213f      	movs	r1, #63	@ 0x3f
90005828:	2201      	movs	r2, #1
9000582a:	230a      	movs	r3, #10
9000582c:	2004      	movs	r0, #4
9000582e:	9204      	str	r2, [sp, #16]
90005830:	9300      	str	r3, [sp, #0]
90005832:	9003      	str	r0, [sp, #12]
90005834:	480d      	ldr	r0, [pc, #52]	@ (9000586c <_Z23getFont_verdana_10_4bppv+0x68>)
90005836:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000583a:	490d      	ldr	r1, [pc, #52]	@ (90005870 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000583c:	9108      	str	r1, [sp, #32]
9000583e:	490d      	ldr	r1, [pc, #52]	@ (90005874 <_Z23getFont_verdana_10_4bppv+0x70>)
90005840:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005844:	9107      	str	r1, [sp, #28]
90005846:	490c      	ldr	r1, [pc, #48]	@ (90005878 <_Z23getFont_verdana_10_4bppv+0x74>)
90005848:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000584c:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005850:	f7ff fd8a 	bl	90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005854:	4809      	ldr	r0, [pc, #36]	@ (9000587c <_Z23getFont_verdana_10_4bppv+0x78>)
90005856:	f023 ff15 	bl	90029684 <atexit>
9000585a:	4628      	mov	r0, r5
9000585c:	f023 fb8c 	bl	90028f78 <__cxa_guard_release>
}
90005860:	4802      	ldr	r0, [pc, #8]	@ (9000586c <_Z23getFont_verdana_10_4bppv+0x68>)
90005862:	b00f      	add	sp, #60	@ 0x3c
90005864:	bd30      	pop	{r4, r5, pc}
90005866:	bf00      	nop
90005868:	240078fc 	.word	0x240078fc
9000586c:	24007900 	.word	0x24007900
90005870:	9002dca8 	.word	0x9002dca8
90005874:	9002dcbc 	.word	0x9002dcbc
90005878:	90201534 	.word	0x90201534
9000587c:	90005801 	.word	0x90005801

90005880 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005880:	4770      	bx	lr
90005882:	bf00      	nop

90005884 <_Z23getFont_verdana_20_4bppv>:
{
90005884:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005886:	4d18      	ldr	r5, [pc, #96]	@ (900058e8 <_Z23getFont_verdana_20_4bppv+0x64>)
{
90005888:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000588a:	682c      	ldr	r4, [r5, #0]
9000588c:	f3bf 8f5b 	dmb	ish
90005890:	f014 0401 	ands.w	r4, r4, #1
90005894:	d002      	beq.n	9000589c <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90005896:	4815      	ldr	r0, [pc, #84]	@ (900058ec <_Z23getFont_verdana_20_4bppv+0x68>)
90005898:	b00f      	add	sp, #60	@ 0x3c
9000589a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000589c:	4628      	mov	r0, r5
9000589e:	f023 fb5f 	bl	90028f60 <__cxa_guard_acquire>
900058a2:	2800      	cmp	r0, #0
900058a4:	d0f7      	beq.n	90005896 <_Z23getFont_verdana_20_4bppv+0x12>
900058a6:	213f      	movs	r1, #63	@ 0x3f
900058a8:	2201      	movs	r2, #1
900058aa:	2314      	movs	r3, #20
900058ac:	2004      	movs	r0, #4
900058ae:	9204      	str	r2, [sp, #16]
900058b0:	9300      	str	r3, [sp, #0]
900058b2:	9003      	str	r0, [sp, #12]
900058b4:	480d      	ldr	r0, [pc, #52]	@ (900058ec <_Z23getFont_verdana_20_4bppv+0x68>)
900058b6:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900058ba:	490d      	ldr	r1, [pc, #52]	@ (900058f0 <_Z23getFont_verdana_20_4bppv+0x6c>)
900058bc:	9108      	str	r1, [sp, #32]
900058be:	490d      	ldr	r1, [pc, #52]	@ (900058f4 <_Z23getFont_verdana_20_4bppv+0x70>)
900058c0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900058c4:	9107      	str	r1, [sp, #28]
900058c6:	490c      	ldr	r1, [pc, #48]	@ (900058f8 <_Z23getFont_verdana_20_4bppv+0x74>)
900058c8:	e9cd 4405 	strd	r4, r4, [sp, #20]
900058cc:	e9cd 4401 	strd	r4, r4, [sp, #4]
900058d0:	f7ff fd4a 	bl	90005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900058d4:	4809      	ldr	r0, [pc, #36]	@ (900058fc <_Z23getFont_verdana_20_4bppv+0x78>)
900058d6:	f023 fed5 	bl	90029684 <atexit>
900058da:	4628      	mov	r0, r5
900058dc:	f023 fb4c 	bl	90028f78 <__cxa_guard_release>
}
900058e0:	4802      	ldr	r0, [pc, #8]	@ (900058ec <_Z23getFont_verdana_20_4bppv+0x68>)
900058e2:	b00f      	add	sp, #60	@ 0x3c
900058e4:	bd30      	pop	{r4, r5, pc}
900058e6:	bf00      	nop
900058e8:	2400792c 	.word	0x2400792c
900058ec:	24007930 	.word	0x24007930
900058f0:	9002dcac 	.word	0x9002dcac
900058f4:	9002dcc0 	.word	0x9002dcc0
900058f8:	90201544 	.word	0x90201544
900058fc:	90005881 	.word	0x90005881

90005900 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90005900:	2000      	movs	r0, #0
90005902:	4770      	bx	lr

90005904 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005904:	2000      	movs	r0, #0
90005906:	4770      	bx	lr

90005908 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005908:	b40e      	push	{r1, r2, r3}
9000590a:	b500      	push	{lr}
9000590c:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000590e:	2100      	movs	r1, #0
{
90005910:	ab03      	add	r3, sp, #12
90005912:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005916:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005918:	f011 fd88 	bl	9001742c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000591c:	b002      	add	sp, #8
9000591e:	f85d eb04 	ldr.w	lr, [sp], #4
90005922:	b003      	add	sp, #12
90005924:	4770      	bx	lr
90005926:	bf00      	nop

90005928 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005928:	b40c      	push	{r2, r3}
9000592a:	b500      	push	{lr}
9000592c:	b083      	sub	sp, #12
9000592e:	ab04      	add	r3, sp, #16
90005930:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005934:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005936:	f011 fd79 	bl	9001742c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000593a:	b003      	add	sp, #12
9000593c:	f85d eb04 	ldr.w	lr, [sp], #4
90005940:	b002      	add	sp, #8
90005942:	4770      	bx	lr

90005944 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005944:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005946:	b510      	push	{r4, lr}
90005948:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000594a:	b133      	cbz	r3, 9000595a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000594c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000594e:	b39b      	cbz	r3, 900059b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005950:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005952:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005956:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005958:	b923      	cbnz	r3, 90005964 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000595a:	4620      	mov	r0, r4
}
9000595c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005960:	f013 baee 	b.w	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005964:	f013 fbea 	bl	9001913c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005968:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000596a:	2b01      	cmp	r3, #1
9000596c:	d92a      	bls.n	900059c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000596e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005970:	1c53      	adds	r3, r2, #1
90005972:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005974:	2b09      	cmp	r3, #9
90005976:	d812      	bhi.n	9000599e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005978:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000597c:	f640 103f 	movw	r0, #2367	@ 0x93f
90005980:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005982:	4281      	cmp	r1, r0
90005984:	d1e9      	bne.n	9000595a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005986:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000598a:	0052      	lsls	r2, r2, #1
9000598c:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000598e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005992:	4422      	add	r2, r4
90005994:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005998:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
9000599a:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
9000599c:	e7dd      	b.n	9000595a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000599e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900059a2:	f640 113f 	movw	r1, #2367	@ 0x93f
900059a6:	89db      	ldrh	r3, [r3, #14]
900059a8:	428b      	cmp	r3, r1
900059aa:	d1d6      	bne.n	9000595a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900059ac:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900059b0:	2300      	movs	r3, #0
900059b2:	0052      	lsls	r2, r2, #1
900059b4:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900059b6:	e7ea      	b.n	9000598e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900059b8:	4b05      	ldr	r3, [pc, #20]	@ (900059d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900059ba:	21c5      	movs	r1, #197	@ 0xc5
900059bc:	4a05      	ldr	r2, [pc, #20]	@ (900059d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900059be:	4806      	ldr	r0, [pc, #24]	@ (900059d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900059c0:	f023 fe42 	bl	90029648 <__assert_func>
            assert(offset < used);
900059c4:	4b05      	ldr	r3, [pc, #20]	@ (900059dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900059c6:	21cb      	movs	r1, #203	@ 0xcb
900059c8:	4a05      	ldr	r2, [pc, #20]	@ (900059e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900059ca:	4803      	ldr	r0, [pc, #12]	@ (900059d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900059cc:	f023 fe3c 	bl	90029648 <__assert_func>
900059d0:	9002c188 	.word	0x9002c188
900059d4:	9002c194 	.word	0x9002c194
900059d8:	9002c240 	.word	0x9002c240
900059dc:	9002c28c 	.word	0x9002c28c
900059e0:	9002c29c 	.word	0x9002c29c

900059e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900059e4:	f013 ba75 	b.w	90018ed2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900059e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900059e8:	b510      	push	{r4, lr}
900059ea:	b086      	sub	sp, #24
900059ec:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900059f0:	ac0a      	add	r4, sp, #40	@ 0x28
{
900059f2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900059f6:	461a      	mov	r2, r3
900059f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900059fa:	4661      	mov	r1, ip
900059fc:	9401      	str	r4, [sp, #4]
900059fe:	9300      	str	r3, [sp, #0]
90005a00:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90005a02:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005a04:	f00f ffd6 	bl	900159b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005a08:	b006      	add	sp, #24
90005a0a:	bd10      	pop	{r4, pc}

90005a0c <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005a0c:	b9e0      	cbnz	r0, 90005a48 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90005a0e:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005a10:	4b13      	ldr	r3, [pc, #76]	@ (90005a60 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005a12:	681b      	ldr	r3, [r3, #0]
90005a14:	b1cb      	cbz	r3, 90005a4a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005a16:	4c13      	ldr	r4, [pc, #76]	@ (90005a64 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005a18:	4813      	ldr	r0, [pc, #76]	@ (90005a68 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005a1a:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005a1e:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005a20:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005a22:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005a24:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005a26:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005a28:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005a2a:	4b10      	ldr	r3, [pc, #64]	@ (90005a6c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005a2c:	2200      	movs	r2, #0
90005a2e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005a30:	f000 f83a 	bl	90005aa8 <_ZN17TypedTextDatabase8getFontsEv>
90005a34:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005a36:	f000 f835 	bl	90005aa4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005a3a:	4b0d      	ldr	r3, [pc, #52]	@ (90005a70 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005a3c:	4a0d      	ldr	r2, [pc, #52]	@ (90005a74 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005a3e:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005a40:	4b0d      	ldr	r3, [pc, #52]	@ (90005a78 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005a42:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005a44:	8018      	strh	r0, [r3, #0]
    }
}
90005a46:	bd38      	pop	{r3, r4, r5, pc}
90005a48:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005a4a:	4c0c      	ldr	r4, [pc, #48]	@ (90005a7c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005a4c:	4905      	ldr	r1, [pc, #20]	@ (90005a64 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005a4e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005a50:	480b      	ldr	r0, [pc, #44]	@ (90005a80 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005a52:	4b05      	ldr	r3, [pc, #20]	@ (90005a68 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005a54:	4a0b      	ldr	r2, [pc, #44]	@ (90005a84 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005a56:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005a58:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005a5a:	2c00      	cmp	r4, #0
90005a5c:	d1e5      	bne.n	90005a2a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005a5e:	bd38      	pop	{r3, r4, r5, pc}
90005a60:	24007968 	.word	0x24007968
90005a64:	24007960 	.word	0x24007960
90005a68:	2400795c 	.word	0x2400795c
90005a6c:	24007964 	.word	0x24007964
90005a70:	240219e4 	.word	0x240219e4
90005a74:	240219ec 	.word	0x240219ec
90005a78:	240219e8 	.word	0x240219e8
90005a7c:	902015e4 	.word	0x902015e4
90005a80:	90201578 	.word	0x90201578
90005a84:	90201554 	.word	0x90201554

90005a88 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005a88:	4a04      	ldr	r2, [pc, #16]	@ (90005a9c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005a8a:	4b05      	ldr	r3, [pc, #20]	@ (90005aa0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005a8c:	6812      	ldr	r2, [r2, #0]
90005a8e:	681b      	ldr	r3, [r3, #0]
90005a90:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005a94:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005a98:	4770      	bx	lr
90005a9a:	bf00      	nop
90005a9c:	2400795c 	.word	0x2400795c
90005aa0:	24007960 	.word	0x24007960

90005aa4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90005aa4:	2009      	movs	r0, #9
90005aa6:	4770      	bx	lr

90005aa8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90005aa8:	4800      	ldr	r0, [pc, #0]	@ (90005aac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90005aaa:	4770      	bx	lr
90005aac:	2400796c 	.word	0x2400796c

90005ab0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90005ab0:	b510      	push	{r4, lr}
};
90005ab2:	4c08      	ldr	r4, [pc, #32]	@ (90005ad4 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
    &(getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()),
90005ab4:	f7ff fe1e 	bl	900056f4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>
};
90005ab8:	6020      	str	r0, [r4, #0]
    &(getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()),
90005aba:	f7ff fe5f 	bl	9000577c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>
};
90005abe:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90005ac0:	f7ff fea0 	bl	90005804 <_Z23getFont_verdana_10_4bppv>
};
90005ac4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_20_4bpp()),
90005ac6:	f7ff fedd 	bl	90005884 <_Z23getFont_verdana_20_4bppv>
};
90005aca:	60e0      	str	r0, [r4, #12]
    &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp())
90005acc:	f7ff fdce 	bl	9000566c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>
};
90005ad0:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
90005ad2:	bd10      	pop	{r4, pc}
90005ad4:	2400796c 	.word	0x2400796c

90005ad8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90005ad8:	b410      	push	{r4}
    pointArray = 0;
90005ada:	2400      	movs	r4, #0
90005adc:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90005ade:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90005ae0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90005ae2:	601c      	str	r4, [r3, #0]
}
90005ae4:	f85d 4b04 	ldr.w	r4, [sp], #4
90005ae8:	4770      	bx	lr
90005aea:	bf00      	nop

90005aec <_ZN19DataScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataScreenPresenter() {}
90005aec:	4770      	bx	lr
90005aee:	bf00      	nop

90005af0 <_ZThn4_N19DataScreenPresenterD1Ev>:
90005af0:	3804      	subs	r0, #4
90005af2:	4770      	bx	lr

90005af4 <_ZN19DataScreenPresenter10deactivateEv>:
}

void DataScreenPresenter::activate()
{

}
90005af4:	4770      	bx	lr
90005af6:	bf00      	nop

90005af8 <_ZN19DataScreenPresenterD0Ev>:
90005af8:	b510      	push	{r4, lr}
90005afa:	4604      	mov	r4, r0
90005afc:	2110      	movs	r1, #16
90005afe:	f023 fa2d 	bl	90028f5c <_ZdlPvj>
90005b02:	4620      	mov	r0, r4
90005b04:	bd10      	pop	{r4, pc}
90005b06:	bf00      	nop

90005b08 <_ZThn4_N19DataScreenPresenterD0Ev>:
90005b08:	b510      	push	{r4, lr}
90005b0a:	1f04      	subs	r4, r0, #4
90005b0c:	2110      	movs	r1, #16
90005b0e:	4620      	mov	r0, r4
90005b10:	f023 fa24 	bl	90028f5c <_ZdlPvj>
90005b14:	4620      	mov	r0, r4
90005b16:	bd10      	pop	{r4, pc}

90005b18 <_ZN19DataScreenPresenterC1ER14DataScreenView>:
DataScreenPresenter::DataScreenPresenter(DataScreenView& v)
90005b18:	b410      	push	{r4}
    : view(v)
90005b1a:	4a05      	ldr	r2, [pc, #20]	@ (90005b30 <_ZN19DataScreenPresenterC1ER14DataScreenView+0x18>)
    ModelListener() : model(0) {}
90005b1c:	2400      	movs	r4, #0
90005b1e:	60c1      	str	r1, [r0, #12]
90005b20:	6084      	str	r4, [r0, #8]
90005b22:	f102 0418 	add.w	r4, r2, #24
90005b26:	6002      	str	r2, [r0, #0]
90005b28:	6044      	str	r4, [r0, #4]
}
90005b2a:	f85d 4b04 	ldr.w	r4, [sp], #4
90005b2e:	4770      	bx	lr
90005b30:	9002ce1c 	.word	0x9002ce1c

90005b34 <_ZN14DataScreenView14tearDownScreenEv>:
}

void DataScreenView::tearDownScreen()
{
    DataScreenViewBase::tearDownScreen();
}
90005b34:	4770      	bx	lr
90005b36:	bf00      	nop

90005b38 <_ZN14DataScreenViewD1Ev>:

class DataScreenView : public DataScreenViewBase
{
public:
    DataScreenView();
    virtual ~DataScreenView() {}
90005b38:	4b03      	ldr	r3, [pc, #12]	@ (90005b48 <_ZN14DataScreenViewD1Ev+0x10>)
90005b3a:	b510      	push	{r4, lr}
90005b3c:	4604      	mov	r4, r0
90005b3e:	6003      	str	r3, [r0, #0]
90005b40:	f7fe fdf2 	bl	90004728 <_ZN18DataScreenViewBaseD1Ev>
90005b44:	4620      	mov	r0, r4
90005b46:	bd10      	pop	{r4, pc}
90005b48:	9002ce44 	.word	0x9002ce44

90005b4c <_ZN14DataScreenViewD0Ev>:
90005b4c:	4b06      	ldr	r3, [pc, #24]	@ (90005b68 <_ZN14DataScreenViewD0Ev+0x1c>)
90005b4e:	b510      	push	{r4, lr}
90005b50:	4604      	mov	r4, r0
90005b52:	6003      	str	r3, [r0, #0]
90005b54:	f7fe fde8 	bl	90004728 <_ZN18DataScreenViewBaseD1Ev>
90005b58:	f44f 7121 	mov.w	r1, #644	@ 0x284
90005b5c:	4620      	mov	r0, r4
90005b5e:	f023 f9fd 	bl	90028f5c <_ZdlPvj>
90005b62:	4620      	mov	r0, r4
90005b64:	bd10      	pop	{r4, pc}
90005b66:	bf00      	nop
90005b68:	9002ce44 	.word	0x9002ce44

90005b6c <_ZN14DataScreenViewC1Ev>:
DataScreenView::DataScreenView()
90005b6c:	b510      	push	{r4, lr}
90005b6e:	4604      	mov	r4, r0
90005b70:	f7fe fea0 	bl	900048b4 <_ZN18DataScreenViewBaseC1Ev>
90005b74:	4b01      	ldr	r3, [pc, #4]	@ (90005b7c <_ZN14DataScreenViewC1Ev+0x10>)
}
90005b76:	4620      	mov	r0, r4
DataScreenView::DataScreenView()
90005b78:	6023      	str	r3, [r4, #0]
}
90005b7a:	bd10      	pop	{r4, pc}
90005b7c:	9002ce44 	.word	0x9002ce44

90005b80 <_ZN14DataScreenView11setupScreenEv>:
    DataScreenViewBase::setupScreen();
90005b80:	f7fe bdd4 	b.w	9000472c <_ZN18DataScreenViewBase11setupScreenEv>

90005b84 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005b84:	4770      	bx	lr
90005b86:	bf00      	nop

90005b88 <_ZN19FrontendApplicationD0Ev>:
90005b88:	b510      	push	{r4, lr}
90005b8a:	4604      	mov	r4, r0
90005b8c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90005b90:	f023 f9e4 	bl	90028f5c <_ZdlPvj>
90005b94:	4620      	mov	r0, r4
90005b96:	bd10      	pop	{r4, pc}

90005b98 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005b98:	b510      	push	{r4, lr}
90005b9a:	4604      	mov	r4, r0
    {
        model.tick();
90005b9c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90005ba0:	f000 f814 	bl	90005bcc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005ba4:	4620      	mov	r0, r4
    }
90005ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005baa:	f010 bc03 	b.w	900163b4 <_ZN8touchgfx11Application15handleTickEventEv>
90005bae:	bf00      	nop

90005bb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005bb0:	b510      	push	{r4, lr}
90005bb2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005bb4:	f7ff fb28 	bl	90005208 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005bb8:	4b01      	ldr	r3, [pc, #4]	@ (90005bc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005bba:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005bbc:	6023      	str	r3, [r4, #0]
}
90005bbe:	bd10      	pop	{r4, pc}
90005bc0:	9002ce80 	.word	0x9002ce80

90005bc4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90005bc4:	2200      	movs	r2, #0
90005bc6:	6002      	str	r2, [r0, #0]
{

}
90005bc8:	4770      	bx	lr
90005bca:	bf00      	nop

90005bcc <_ZN5Model4tickEv>:

void Model::tick()
{

}
90005bcc:	4770      	bx	lr
90005bce:	bf00      	nop

90005bd0 <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
90005bd0:	4770      	bx	lr
90005bd2:	bf00      	nop

90005bd4 <_ZThn4_N20StartScreenPresenterD1Ev>:
90005bd4:	3804      	subs	r0, #4
90005bd6:	4770      	bx	lr

90005bd8 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
90005bd8:	4770      	bx	lr
90005bda:	bf00      	nop

90005bdc <_ZN20StartScreenPresenterD0Ev>:
90005bdc:	b510      	push	{r4, lr}
90005bde:	4604      	mov	r4, r0
90005be0:	2110      	movs	r1, #16
90005be2:	f023 f9bb 	bl	90028f5c <_ZdlPvj>
90005be6:	4620      	mov	r0, r4
90005be8:	bd10      	pop	{r4, pc}
90005bea:	bf00      	nop

90005bec <_ZThn4_N20StartScreenPresenterD0Ev>:
90005bec:	b510      	push	{r4, lr}
90005bee:	1f04      	subs	r4, r0, #4
90005bf0:	2110      	movs	r1, #16
90005bf2:	4620      	mov	r0, r4
90005bf4:	f023 f9b2 	bl	90028f5c <_ZdlPvj>
90005bf8:	4620      	mov	r0, r4
90005bfa:	bd10      	pop	{r4, pc}

90005bfc <_ZN20StartScreenPresenterC1ER15StartScreenView>:
StartScreenPresenter::StartScreenPresenter(StartScreenView& v)
90005bfc:	b410      	push	{r4}
    : view(v)
90005bfe:	4a05      	ldr	r2, [pc, #20]	@ (90005c14 <_ZN20StartScreenPresenterC1ER15StartScreenView+0x18>)
90005c00:	2400      	movs	r4, #0
90005c02:	60c1      	str	r1, [r0, #12]
90005c04:	6084      	str	r4, [r0, #8]
90005c06:	f102 0418 	add.w	r4, r2, #24
90005c0a:	6002      	str	r2, [r0, #0]
90005c0c:	6044      	str	r4, [r0, #4]
}
90005c0e:	f85d 4b04 	ldr.w	r4, [sp], #4
90005c12:	4770      	bx	lr
90005c14:	9002ced4 	.word	0x9002ced4

90005c18 <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
90005c18:	4770      	bx	lr
90005c1a:	bf00      	nop

90005c1c <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
90005c1c:	4b03      	ldr	r3, [pc, #12]	@ (90005c2c <_ZN15StartScreenViewD1Ev+0x10>)
90005c1e:	b510      	push	{r4, lr}
90005c20:	4604      	mov	r4, r0
90005c22:	6003      	str	r3, [r0, #0]
90005c24:	f7ff fbd2 	bl	900053cc <_ZN19StartScreenViewBaseD1Ev>
90005c28:	4620      	mov	r0, r4
90005c2a:	bd10      	pop	{r4, pc}
90005c2c:	9002cefc 	.word	0x9002cefc

90005c30 <_ZN15StartScreenViewD0Ev>:
90005c30:	4b06      	ldr	r3, [pc, #24]	@ (90005c4c <_ZN15StartScreenViewD0Ev+0x1c>)
90005c32:	b510      	push	{r4, lr}
90005c34:	4604      	mov	r4, r0
90005c36:	6003      	str	r3, [r0, #0]
90005c38:	f7ff fbc8 	bl	900053cc <_ZN19StartScreenViewBaseD1Ev>
90005c3c:	f44f 719c 	mov.w	r1, #312	@ 0x138
90005c40:	4620      	mov	r0, r4
90005c42:	f023 f98b 	bl	90028f5c <_ZdlPvj>
90005c46:	4620      	mov	r0, r4
90005c48:	bd10      	pop	{r4, pc}
90005c4a:	bf00      	nop
90005c4c:	9002cefc 	.word	0x9002cefc

90005c50 <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
90005c50:	b510      	push	{r4, lr}
90005c52:	4604      	mov	r4, r0
90005c54:	f7ff fbf8 	bl	90005448 <_ZN19StartScreenViewBaseC1Ev>
90005c58:	4b01      	ldr	r3, [pc, #4]	@ (90005c60 <_ZN15StartScreenViewC1Ev+0x10>)
}
90005c5a:	4620      	mov	r0, r4
StartScreenView::StartScreenView()
90005c5c:	6023      	str	r3, [r4, #0]
}
90005c5e:	bd10      	pop	{r4, pc}
90005c60:	9002cefc 	.word	0x9002cefc

90005c64 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
90005c64:	f7ff bbb4 	b.w	900053d0 <_ZN19StartScreenViewBase11setupScreenEv>

90005c68 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90005c68:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005c6c:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90005c6e:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005c72:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005c76:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90005c78:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90005c7a:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005c7e:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90005c82:	4770      	bx	lr

90005c84 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90005c84:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90005c88:	2b01      	cmp	r3, #1
90005c8a:	d102      	bne.n	90005c92 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90005c8c:	2300      	movs	r3, #0
90005c8e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90005c92:	2000      	movs	r0, #0
90005c94:	4770      	bx	lr
90005c96:	bf00      	nop

90005c98 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90005c98:	2000      	movs	r0, #0
90005c9a:	4770      	bx	lr

90005c9c <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005c9c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005c9e:	6904      	ldr	r4, [r0, #16]
90005ca0:	8900      	ldrh	r0, [r0, #8]
90005ca2:	46a4      	mov	ip, r4
}
90005ca4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005ca8:	4760      	bx	ip
90005caa:	bf00      	nop

90005cac <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005cac:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005cae:	68c4      	ldr	r4, [r0, #12]
90005cb0:	8900      	ldrh	r0, [r0, #8]
90005cb2:	46a4      	mov	ip, r4
}
90005cb4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005cb8:	4760      	bx	ip
90005cba:	bf00      	nop

90005cbc <FT5336_GestureConfig>:
{
90005cbc:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005cbe:	f100 0518 	add.w	r5, r0, #24
{
90005cc2:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005cc4:	7809      	ldrb	r1, [r1, #0]
90005cc6:	4628      	mov	r0, r5
90005cc8:	f000 f96c 	bl	90005fa4 <ft5336_radian_value>
90005ccc:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005cce:	7931      	ldrb	r1, [r6, #4]
90005cd0:	4628      	mov	r0, r5
90005cd2:	f000 f975 	bl	90005fc0 <ft5336_offset_left_right>
90005cd6:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90005cd8:	7a31      	ldrb	r1, [r6, #8]
90005cda:	4628      	mov	r0, r5
90005cdc:	f000 f97e 	bl	90005fdc <ft5336_offset_up_down>
90005ce0:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005ce2:	7b31      	ldrb	r1, [r6, #12]
90005ce4:	4628      	mov	r0, r5
90005ce6:	f000 f987 	bl	90005ff8 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005cea:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005cec:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005cee:	4628      	mov	r0, r5
90005cf0:	f000 f990 	bl	90006014 <ft5336_distance_up_down>
90005cf4:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005cf6:	7d31      	ldrb	r1, [r6, #20]
90005cf8:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005cfa:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005cfc:	f000 f998 	bl	90006030 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90005d00:	42c4      	cmn	r4, r0
}
90005d02:	bf14      	ite	ne
90005d04:	f04f 30ff 	movne.w	r0, #4294967295
90005d08:	2000      	moveq	r0, #0
90005d0a:	bd70      	pop	{r4, r5, r6, pc}

90005d0c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90005d0c:	3018      	adds	r0, #24
90005d0e:	f000 b9ab 	b.w	90006068 <ft5336_chip_id>
90005d12:	bf00      	nop

90005d14 <FT5336_GetState>:
{
90005d14:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005d16:	f100 0518 	add.w	r5, r0, #24
{
90005d1a:	b083      	sub	sp, #12
90005d1c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005d1e:	4628      	mov	r0, r5
90005d20:	a901      	add	r1, sp, #4
90005d22:	f000 f931 	bl	90005f88 <ft5336_td_status>
90005d26:	bb10      	cbnz	r0, 90005d6e <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005d28:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005d2c:	2b05      	cmp	r3, #5
90005d2e:	bf94      	ite	ls
90005d30:	4619      	movls	r1, r3
90005d32:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005d34:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005d36:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005d38:	4628      	mov	r0, r5
90005d3a:	2103      	movs	r1, #3
90005d3c:	eb0d 0203 	add.w	r2, sp, r3
90005d40:	f000 f910 	bl	90005f64 <ft5336_read_reg>
90005d44:	b9b0      	cbnz	r0, 90005d74 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005d46:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005d4a:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005d4e:	0212      	lsls	r2, r2, #8
90005d50:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005d54:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005d56:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005d5a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005d5e:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005d60:	f89d 1007 	ldrb.w	r1, [sp, #7]
90005d64:	430b      	orrs	r3, r1
90005d66:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90005d6a:	b003      	add	sp, #12
90005d6c:	bd30      	pop	{r4, r5, pc}
90005d6e:	f04f 31ff 	mov.w	r1, #4294967295
90005d72:	e7df      	b.n	90005d34 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90005d74:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005d78:	e7f7      	b.n	90005d6a <FT5336_GetState+0x56>
90005d7a:	bf00      	nop

90005d7c <FT5336_GetMultiTouchState>:
{
90005d7c:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005d7e:	f100 0518 	add.w	r5, r0, #24
{
90005d82:	b088      	sub	sp, #32
90005d84:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005d86:	4628      	mov	r0, r5
90005d88:	4669      	mov	r1, sp
90005d8a:	f000 f8fd 	bl	90005f88 <ft5336_td_status>
90005d8e:	2800      	cmp	r0, #0
90005d90:	f040 809a 	bne.w	90005ec8 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005d94:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005d98:	2b05      	cmp	r3, #5
90005d9a:	bf94      	ite	ls
90005d9c:	4619      	movls	r1, r3
90005d9e:	2100      	movhi	r1, #0
90005da0:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005da2:	231e      	movs	r3, #30
90005da4:	466a      	mov	r2, sp
90005da6:	4628      	mov	r0, r5
90005da8:	2103      	movs	r1, #3
90005daa:	f000 f8db 	bl	90005f64 <ft5336_read_reg>
90005dae:	2800      	cmp	r0, #0
90005db0:	f040 808d 	bne.w	90005ece <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005db4:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005db8:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005dbc:	020a      	lsls	r2, r1, #8
90005dbe:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005dc2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005dc4:	f89d c007 	ldrb.w	ip, [sp, #7]
90005dc8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005dcc:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005dce:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dd2:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005dd6:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005dd8:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005ddc:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dde:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005de0:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005de2:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005de4:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005de8:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dea:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005dee:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005df2:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005df4:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005df6:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005dfa:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dfc:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005dfe:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e00:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e04:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e06:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e08:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e0c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e10:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e12:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e14:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e16:	ea45 050c 	orr.w	r5, r5, ip
90005e1a:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e1e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e22:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e24:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e26:	0212      	lsls	r2, r2, #8
90005e28:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e2c:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e2e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e32:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e36:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e38:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e3a:	f89d 300e 	ldrb.w	r3, [sp, #14]
90005e3e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e40:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e44:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e46:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e48:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e4c:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e4e:	f89d 200f 	ldrb.w	r2, [sp, #15]
90005e52:	4313      	orrs	r3, r2
90005e54:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e56:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e58:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e5c:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e60:	020a      	lsls	r2, r1, #8
90005e62:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e66:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e68:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e6c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e6e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e72:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e74:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e78:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e7a:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e7c:	f89d 1018 	ldrb.w	r1, [sp, #24]
90005e80:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005e82:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e84:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e86:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e8a:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e8c:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005e90:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005e92:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e96:	f89d 301d 	ldrb.w	r3, [sp, #29]
90005e9a:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005e9c:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005e9e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005ea0:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005ea4:	6625      	str	r5, [r4, #96]	@ 0x60
90005ea6:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005ea8:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005eac:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005eae:	021b      	lsls	r3, r3, #8
90005eb0:	f89d 101b 	ldrb.w	r1, [sp, #27]
90005eb4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90005eb8:	430b      	orrs	r3, r1
90005eba:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005ebc:	f89d 3019 	ldrb.w	r3, [sp, #25]
90005ec0:	4313      	orrs	r3, r2
90005ec2:	6163      	str	r3, [r4, #20]
}
90005ec4:	b008      	add	sp, #32
90005ec6:	bd70      	pop	{r4, r5, r6, pc}
90005ec8:	f04f 31ff 	mov.w	r1, #4294967295
90005ecc:	e768      	b.n	90005da0 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90005ece:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005ed2:	e7f7      	b.n	90005ec4 <FT5336_GetMultiTouchState+0x148>

90005ed4 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90005ed4:	3018      	adds	r0, #24
90005ed6:	f000 b84d 	b.w	90005f74 <ft5336_gest_id>
90005eda:	bf00      	nop

90005edc <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90005edc:	2101      	movs	r1, #1
90005ede:	3018      	adds	r0, #24
90005ee0:	f000 b8b4 	b.w	9000604c <ft5336_g_mode>

90005ee4 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005ee4:	2100      	movs	r1, #0
90005ee6:	3018      	adds	r0, #24
90005ee8:	f000 b8b0 	b.w	9000604c <ft5336_g_mode>

90005eec <FT5336_Init>:
{
90005eec:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90005eee:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90005ef2:	b98d      	cbnz	r5, 90005f18 <FT5336_Init+0x2c>
    pObj->IO.Init();
90005ef4:	4606      	mov	r6, r0
90005ef6:	4604      	mov	r4, r0
90005ef8:	f856 3b18 	ldr.w	r3, [r6], #24
90005efc:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005efe:	4629      	mov	r1, r5
90005f00:	4630      	mov	r0, r6
90005f02:	f000 f8a3 	bl	9000604c <ft5336_g_mode>
  if(ret != FT5336_OK)
90005f06:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90005f08:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90005f0c:	bf18      	it	ne
90005f0e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90005f10:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90005f14:	4240      	negs	r0, r0
}
90005f16:	bd70      	pop	{r4, r5, r6, pc}
90005f18:	2000      	movs	r0, #0
90005f1a:	bd70      	pop	{r4, r5, r6, pc}

90005f1c <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90005f1c:	2000      	movs	r0, #0
90005f1e:	4770      	bx	lr

90005f20 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90005f20:	b1c0      	cbz	r0, 90005f54 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90005f22:	890a      	ldrh	r2, [r1, #8]
{
90005f24:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90005f26:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90005f2a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90005f2c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90005f30:	694a      	ldr	r2, [r1, #20]
90005f32:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90005f36:	4909      	ldr	r1, [pc, #36]	@ (90005f5c <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90005f38:	60c5      	str	r5, [r0, #12]
90005f3a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90005f3e:	4a08      	ldr	r2, [pc, #32]	@ (90005f60 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90005f40:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90005f44:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90005f46:	b10b      	cbz	r3, 90005f4c <FT5336_RegisterBusIO+0x2c>
}
90005f48:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90005f4a:	4718      	bx	r3
}
90005f4c:	f04f 30ff 	mov.w	r0, #4294967295
90005f50:	bc30      	pop	{r4, r5}
90005f52:	4770      	bx	lr
90005f54:	f04f 30ff 	mov.w	r0, #4294967295
90005f58:	4770      	bx	lr
90005f5a:	bf00      	nop
90005f5c:	90005c9d 	.word	0x90005c9d
90005f60:	90005cad 	.word	0x90005cad

90005f64 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90005f64:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f66:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005f6a:	46a4      	mov	ip, r4
}
90005f6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f70:	4760      	bx	ip
90005f72:	bf00      	nop

90005f74 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90005f74:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f76:	2301      	movs	r3, #1
{
90005f78:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f7a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005f7e:	4619      	mov	r1, r3
90005f80:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90005f82:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f86:	4760      	bx	ip

90005f88 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90005f88:	b538      	push	{r3, r4, r5, lr}
90005f8a:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f8c:	2301      	movs	r3, #1
90005f8e:	2102      	movs	r1, #2
90005f90:	4622      	mov	r2, r4
90005f92:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90005f96:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90005f98:	b918      	cbnz	r0, 90005fa2 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90005f9a:	7823      	ldrb	r3, [r4, #0]
90005f9c:	f003 030f 	and.w	r3, r3, #15
90005fa0:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90005fa2:	bd38      	pop	{r3, r4, r5, pc}

90005fa4 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90005fa4:	b510      	push	{r4, lr}
90005fa6:	460c      	mov	r4, r1
90005fa8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005faa:	2301      	movs	r3, #1
90005fac:	2191      	movs	r1, #145	@ 0x91
{
90005fae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005fb2:	f10d 0207 	add.w	r2, sp, #7
90005fb6:	6804      	ldr	r4, [r0, #0]
90005fb8:	6880      	ldr	r0, [r0, #8]
90005fba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90005fbc:	b002      	add	sp, #8
90005fbe:	bd10      	pop	{r4, pc}

90005fc0 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005fc0:	b510      	push	{r4, lr}
90005fc2:	460c      	mov	r4, r1
90005fc4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005fc6:	2301      	movs	r3, #1
90005fc8:	2192      	movs	r1, #146	@ 0x92
{
90005fca:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005fce:	f10d 0207 	add.w	r2, sp, #7
90005fd2:	6804      	ldr	r4, [r0, #0]
90005fd4:	6880      	ldr	r0, [r0, #8]
90005fd6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90005fd8:	b002      	add	sp, #8
90005fda:	bd10      	pop	{r4, pc}

90005fdc <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005fdc:	b510      	push	{r4, lr}
90005fde:	460c      	mov	r4, r1
90005fe0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005fe2:	2301      	movs	r3, #1
90005fe4:	2193      	movs	r1, #147	@ 0x93
{
90005fe6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005fea:	f10d 0207 	add.w	r2, sp, #7
90005fee:	6804      	ldr	r4, [r0, #0]
90005ff0:	6880      	ldr	r0, [r0, #8]
90005ff2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90005ff4:	b002      	add	sp, #8
90005ff6:	bd10      	pop	{r4, pc}

90005ff8 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005ff8:	b510      	push	{r4, lr}
90005ffa:	460c      	mov	r4, r1
90005ffc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ffe:	2301      	movs	r3, #1
90006000:	2194      	movs	r1, #148	@ 0x94
{
90006002:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006006:	f10d 0207 	add.w	r2, sp, #7
9000600a:	6804      	ldr	r4, [r0, #0]
9000600c:	6880      	ldr	r0, [r0, #8]
9000600e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006010:	b002      	add	sp, #8
90006012:	bd10      	pop	{r4, pc}

90006014 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006014:	b510      	push	{r4, lr}
90006016:	460c      	mov	r4, r1
90006018:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000601a:	2301      	movs	r3, #1
9000601c:	2195      	movs	r1, #149	@ 0x95
{
9000601e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006022:	f10d 0207 	add.w	r2, sp, #7
90006026:	6804      	ldr	r4, [r0, #0]
90006028:	6880      	ldr	r0, [r0, #8]
9000602a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
9000602c:	b002      	add	sp, #8
9000602e:	bd10      	pop	{r4, pc}

90006030 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006030:	b510      	push	{r4, lr}
90006032:	460c      	mov	r4, r1
90006034:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006036:	2301      	movs	r3, #1
90006038:	2196      	movs	r1, #150	@ 0x96
{
9000603a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000603e:	f10d 0207 	add.w	r2, sp, #7
90006042:	6804      	ldr	r4, [r0, #0]
90006044:	6880      	ldr	r0, [r0, #8]
90006046:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006048:	b002      	add	sp, #8
9000604a:	bd10      	pop	{r4, pc}

9000604c <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
9000604c:	b510      	push	{r4, lr}
9000604e:	460c      	mov	r4, r1
90006050:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006052:	2301      	movs	r3, #1
90006054:	21a4      	movs	r1, #164	@ 0xa4
{
90006056:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000605a:	f10d 0207 	add.w	r2, sp, #7
9000605e:	6804      	ldr	r4, [r0, #0]
90006060:	6880      	ldr	r0, [r0, #8]
90006062:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006064:	b002      	add	sp, #8
90006066:	bd10      	pop	{r4, pc}

90006068 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006068:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000606a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
9000606e:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006070:	2301      	movs	r3, #1
90006072:	46a4      	mov	ip, r4
90006074:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006076:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000607a:	4760      	bx	ip

9000607c <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
9000607c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000607e:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006080:	4c2a      	ldr	r4, [pc, #168]	@ (9000612c <MT48LC4M32B2_Init+0xb0>)
90006082:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
90006084:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006086:	682a      	ldr	r2, [r5, #0]
{
90006088:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
9000608a:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000608c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
9000608e:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006090:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006094:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90006098:	f006 fa42 	bl	9000c520 <HAL_SDRAM_SendCommand>
9000609c:	2800      	cmp	r0, #0
9000609e:	d142      	bne.n	90006126 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900060a0:	f000 ff52 	bl	90006f48 <HAL_GetTick>
900060a4:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900060a6:	f000 ff4f 	bl	90006f48 <HAL_GetTick>
900060aa:	4286      	cmp	r6, r0
900060ac:	d0fb      	beq.n	900060a6 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900060ae:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900060b0:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
900060b2:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060b4:	491d      	ldr	r1, [pc, #116]	@ (9000612c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900060b6:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
900060b8:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
900060ba:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060bc:	4638      	mov	r0, r7
900060be:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
900060c2:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
900060c4:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060c6:	f006 fa2b 	bl	9000c520 <HAL_SDRAM_SendCommand>
900060ca:	bb60      	cbnz	r0, 90006126 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060cc:	4917      	ldr	r1, [pc, #92]	@ (9000612c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
900060ce:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
900060d2:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060d4:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
900060d6:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
900060da:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060dc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
900060e0:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060e2:	f006 fa1d 	bl	9000c520 <HAL_SDRAM_SendCommand>
900060e6:	b9f0      	cbnz	r0, 90006126 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900060e8:	4910      	ldr	r1, [pc, #64]	@ (9000612c <MT48LC4M32B2_Init+0xb0>)
900060ea:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900060ec:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
900060f0:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900060f2:	696a      	ldr	r2, [r5, #20]
900060f4:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900060f6:	69aa      	ldr	r2, [r5, #24]
900060f8:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900060fa:	69ea      	ldr	r2, [r5, #28]
900060fc:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
900060fe:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006100:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006102:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006104:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006108:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000610c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000610e:	f006 fa07 	bl	9000c520 <HAL_SDRAM_SendCommand>
90006112:	b940      	cbnz	r0, 90006126 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006114:	68a9      	ldr	r1, [r5, #8]
90006116:	4638      	mov	r0, r7
90006118:	f006 fa22 	bl	9000c560 <HAL_SDRAM_ProgramRefreshRate>
9000611c:	3800      	subs	r0, #0
9000611e:	bf18      	it	ne
90006120:	2001      	movne	r0, #1
90006122:	4240      	negs	r0, r0
}
90006124:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006126:	f04f 30ff 	mov.w	r0, #4294967295
}
9000612a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000612c:	24007980 	.word	0x24007980

90006130 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006130:	4a10      	ldr	r2, [pc, #64]	@ (90006174 <BSP_I2C4_DeInit+0x44>)
{
90006132:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006134:	6813      	ldr	r3, [r2, #0]
90006136:	3b01      	subs	r3, #1
90006138:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000613a:	b10b      	cbz	r3, 90006140 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000613c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000613e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006140:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90006144:	480c      	ldr	r0, [pc, #48]	@ (90006178 <BSP_I2C4_DeInit+0x48>)
90006146:	f001 fb83 	bl	90007850 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000614a:	480b      	ldr	r0, [pc, #44]	@ (90006178 <BSP_I2C4_DeInit+0x48>)
9000614c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006150:	f001 fb7e 	bl	90007850 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006154:	4a09      	ldr	r2, [pc, #36]	@ (9000617c <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006156:	480a      	ldr	r0, [pc, #40]	@ (90006180 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006158:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
9000615c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006160:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006164:	f001 ffea 	bl	9000813c <HAL_I2C_DeInit>
90006168:	2800      	cmp	r0, #0
9000616a:	d0e7      	beq.n	9000613c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
9000616c:	f06f 0007 	mvn.w	r0, #7
}
90006170:	bd08      	pop	{r3, pc}
90006172:	bf00      	nop
90006174:	240083e8 	.word	0x240083e8
90006178:	58020c00 	.word	0x58020c00
9000617c:	58024400 	.word	0x58024400
90006180:	24007990 	.word	0x24007990

90006184 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006184:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006186:	2201      	movs	r2, #1
{
90006188:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
9000618a:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
9000618e:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006192:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006196:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
9000619a:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
9000619c:	f001 ff74 	bl	90008088 <HAL_I2C_Init>
900061a0:	b108      	cbz	r0, 900061a6 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900061a2:	2001      	movs	r0, #1
}
900061a4:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900061a6:	4601      	mov	r1, r0
900061a8:	4620      	mov	r0, r4
900061aa:	f002 f9e5 	bl	90008578 <HAL_I2CEx_ConfigAnalogFilter>
900061ae:	2800      	cmp	r0, #0
900061b0:	d1f7      	bne.n	900061a2 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900061b2:	4601      	mov	r1, r0
900061b4:	4620      	mov	r0, r4
900061b6:	f002 fa09 	bl	900085cc <HAL_I2CEx_ConfigDigitalFilter>
900061ba:	3800      	subs	r0, #0
900061bc:	bf18      	it	ne
900061be:	2001      	movne	r0, #1
}
900061c0:	bd10      	pop	{r4, pc}
900061c2:	bf00      	nop

900061c4 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
900061c4:	4b9b      	ldr	r3, [pc, #620]	@ (90006434 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
900061c6:	489c      	ldr	r0, [pc, #624]	@ (90006438 <BSP_I2C4_Init+0x274>)
900061c8:	4a9c      	ldr	r2, [pc, #624]	@ (9000643c <BSP_I2C4_Init+0x278>)
{
900061ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
900061ce:	681c      	ldr	r4, [r3, #0]
{
900061d0:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
900061d2:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
900061d4:	b11c      	cbz	r4, 900061de <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
900061d6:	2000      	movs	r0, #0
}
900061d8:	b01f      	add	sp, #124	@ 0x7c
900061da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900061de:	2201      	movs	r2, #1
900061e0:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900061e2:	f002 f9c3 	bl	9000856c <HAL_I2C_GetState>
900061e6:	2800      	cmp	r0, #0
900061e8:	d1f5      	bne.n	900061d6 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900061ea:	4d95      	ldr	r5, [pc, #596]	@ (90006440 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900061ec:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900061f0:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900061f2:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900061f4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900061f8:	f04f 0800 	mov.w	r8, #0
900061fc:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006200:	f043 0308 	orr.w	r3, r3, #8
90006204:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006208:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000620c:	f003 0308 	and.w	r3, r3, #8
90006210:	9315      	str	r3, [sp, #84]	@ 0x54
90006212:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006214:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006218:	f043 0308 	orr.w	r3, r3, #8
9000621c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006220:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006224:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006226:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000622a:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000622e:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006230:	a918      	add	r1, sp, #96	@ 0x60
90006232:	4884      	ldr	r0, [pc, #528]	@ (90006444 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006234:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006236:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000623a:	f001 f903 	bl	90007444 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000623e:	2312      	movs	r3, #18
90006240:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006244:	a918      	add	r1, sp, #96	@ 0x60
90006246:	487f      	ldr	r0, [pc, #508]	@ (90006444 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006248:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000624a:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
9000624e:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006252:	f001 f8f7 	bl	90007444 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006256:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000625a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000625e:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90006262:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90006266:	f003 0380 	and.w	r3, r3, #128	@ 0x80
9000626a:	9317      	str	r3, [sp, #92]	@ 0x5c
9000626c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
9000626e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006272:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006276:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
9000627a:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000627e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006282:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006286:	f004 ff35 	bl	9000b0f4 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
9000628a:	2800      	cmp	r0, #0
9000628c:	f000 8196 	beq.w	900065bc <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006290:	4b6d      	ldr	r3, [pc, #436]	@ (90006448 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
90006292:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90006294:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006298:	4e6c      	ldr	r6, [pc, #432]	@ (9000644c <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000629a:	eb03 0350 	add.w	r3, r3, r0, lsr #1
9000629e:	9402      	str	r4, [sp, #8]
900062a0:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900062a4:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
900062a6:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900062a8:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900062ac:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900062ae:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
900062b2:	4b67      	ldr	r3, [pc, #412]	@ (90006450 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900062b4:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900062b8:	0041      	lsls	r1, r0, #1
900062ba:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
900062bc:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
900062c0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900062c4:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
900062c6:	46a9      	mov	r9, r5
900062c8:	9513      	str	r5, [sp, #76]	@ 0x4c
900062ca:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900062cc:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
900062d0:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
900062d4:	bf2c      	ite	cs
900062d6:	2001      	movcs	r0, #1
900062d8:	2000      	movcc	r0, #0
900062da:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
900062de:	f000 0001 	and.w	r0, r0, #1
900062e2:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
900062e6:	bf88      	it	hi
900062e8:	2000      	movhi	r0, #0
900062ea:	4590      	cmp	r8, r2
900062ec:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
900062f0:	9004      	str	r0, [sp, #16]
900062f2:	bf8c      	ite	hi
900062f4:	2000      	movhi	r0, #0
900062f6:	2001      	movls	r0, #1
900062f8:	4596      	cmp	lr, r2
900062fa:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
900062fe:	bf38      	it	cc
90006300:	2000      	movcc	r0, #0
90006302:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90006306:	9411      	str	r4, [sp, #68]	@ 0x44
90006308:	465c      	mov	r4, fp
9000630a:	9006      	str	r0, [sp, #24]
9000630c:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
90006310:	9007      	str	r0, [sp, #28]
90006312:	bf94      	ite	ls
90006314:	2001      	movls	r0, #1
90006316:	2000      	movhi	r0, #0
90006318:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
9000631c:	f000 0501 	and.w	r5, r0, #1
90006320:	bf38      	it	cc
90006322:	2500      	movcc	r5, #0
90006324:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006326:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000632a:	9508      	str	r5, [sp, #32]
9000632c:	bf8c      	ite	hi
9000632e:	2500      	movhi	r5, #0
90006330:	2501      	movls	r5, #1
90006332:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006334:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006336:	bf38      	it	cc
90006338:	2500      	movcc	r5, #0
9000633a:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
9000633e:	bf98      	it	ls
90006340:	2001      	movls	r0, #1
90006342:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90006346:	9509      	str	r5, [sp, #36]	@ 0x24
90006348:	4665      	mov	r5, ip
9000634a:	f000 0001 	and.w	r0, r0, #1
9000634e:	bf38      	it	cc
90006350:	2000      	movcc	r0, #0
90006352:	45d8      	cmp	r8, fp
90006354:	900a      	str	r0, [sp, #40]	@ 0x28
90006356:	4658      	mov	r0, fp
90006358:	bf8c      	ite	hi
9000635a:	2000      	movhi	r0, #0
9000635c:	2001      	movls	r0, #1
9000635e:	45de      	cmp	lr, fp
90006360:	bf38      	it	cc
90006362:	2000      	movcc	r0, #0
90006364:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
90006368:	4683      	mov	fp, r0
9000636a:	bf94      	ite	ls
9000636c:	f04f 0b01 	movls.w	fp, #1
90006370:	f04f 0b00 	movhi.w	fp, #0
90006374:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
90006378:	900b      	str	r0, [sp, #44]	@ 0x2c
9000637a:	f00b 0b01 	and.w	fp, fp, #1
9000637e:	bf38      	it	cc
90006380:	f04f 0b00 	movcc.w	fp, #0
90006384:	4658      	mov	r0, fp
90006386:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
9000638a:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
9000638e:	45d8      	cmp	r8, fp
90006390:	bf8c      	ite	hi
90006392:	2000      	movhi	r0, #0
90006394:	2001      	movls	r0, #1
90006396:	45de      	cmp	lr, fp
90006398:	bf38      	it	cc
9000639a:	2000      	movcc	r0, #0
9000639c:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
900063a0:	900d      	str	r0, [sp, #52]	@ 0x34
900063a2:	bf98      	it	ls
900063a4:	f04f 0b01 	movls.w	fp, #1
900063a8:	9807      	ldr	r0, [sp, #28]
900063aa:	bf88      	it	hi
900063ac:	f04f 0b00 	movhi.w	fp, #0
900063b0:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900063b4:	f00b 0101 	and.w	r1, fp, #1
900063b8:	bf38      	it	cc
900063ba:	2100      	movcc	r1, #0
900063bc:	4580      	cmp	r8, r0
900063be:	910e      	str	r1, [sp, #56]	@ 0x38
900063c0:	4601      	mov	r1, r0
900063c2:	bf8c      	ite	hi
900063c4:	2100      	movhi	r1, #0
900063c6:	2101      	movls	r1, #1
900063c8:	4586      	cmp	lr, r0
900063ca:	4620      	mov	r0, r4
900063cc:	bf38      	it	cc
900063ce:	2100      	movcc	r1, #0
900063d0:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
900063d4:	910f      	str	r1, [sp, #60]	@ 0x3c
900063d6:	bf94      	ite	ls
900063d8:	2101      	movls	r1, #1
900063da:	2100      	movhi	r1, #0
900063dc:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
900063e0:	f001 0101 	and.w	r1, r1, #1
900063e4:	bf38      	it	cc
900063e6:	2100      	movcc	r1, #0
900063e8:	9110      	str	r1, [sp, #64]	@ 0x40
900063ea:	9911      	ldr	r1, [sp, #68]	@ 0x44
900063ec:	4588      	cmp	r8, r1
900063ee:	460a      	mov	r2, r1
900063f0:	bf8c      	ite	hi
900063f2:	2200      	movhi	r2, #0
900063f4:	2201      	movls	r2, #1
900063f6:	458e      	cmp	lr, r1
900063f8:	bf38      	it	cc
900063fa:	2200      	movcc	r2, #0
900063fc:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
90006400:	9211      	str	r2, [sp, #68]	@ 0x44
90006402:	bf94      	ite	ls
90006404:	2201      	movls	r2, #1
90006406:	2200      	movhi	r2, #0
90006408:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
9000640c:	f04f 0400 	mov.w	r4, #0
90006410:	f002 0201 	and.w	r2, r2, #1
90006414:	bf38      	it	cc
90006416:	2200      	movcc	r2, #0
90006418:	9212      	str	r2, [sp, #72]	@ 0x48
9000641a:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
9000641e:	4590      	cmp	r8, r2
90006420:	bf8c      	ite	hi
90006422:	2100      	movhi	r1, #0
90006424:	2101      	movls	r1, #1
90006426:	4596      	cmp	lr, r2
90006428:	bf38      	it	cc
9000642a:	2100      	movcc	r1, #0
9000642c:	460a      	mov	r2, r1
9000642e:	9107      	str	r1, [sp, #28]
90006430:	e014      	b.n	9000645c <BSP_I2C4_Init+0x298>
90006432:	bf00      	nop
90006434:	240083e8 	.word	0x240083e8
90006438:	24007990 	.word	0x24007990
9000643c:	58001c00 	.word	0x58001c00
90006440:	58024400 	.word	0x58024400
90006444:	58020c00 	.word	0x58020c00
90006448:	3b9aca00 	.word	0x3b9aca00
9000644c:	240079e8 	.word	0x240079e8
90006450:	240079e4 	.word	0x240079e4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006454:	2c10      	cmp	r4, #16
90006456:	4465      	add	r5, ip
90006458:	f000 827d 	beq.w	90006956 <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
9000645c:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90006460:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006462:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006466:	d3f5      	bcc.n	90006454 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006468:	fab8 fb88 	clz	fp, r8
9000646c:	4557      	cmp	r7, sl
9000646e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90006472:	bf08      	it	eq
90006474:	f04f 0b00 	moveq.w	fp, #0
90006478:	f1bb 0f00 	cmp.w	fp, #0
9000647c:	f040 8200 	bne.w	90006880 <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006480:	45f4      	cmp	ip, lr
90006482:	bf8c      	ite	hi
90006484:	2200      	movhi	r2, #0
90006486:	2201      	movls	r2, #1
90006488:	45c4      	cmp	ip, r8
9000648a:	bf38      	it	cc
9000648c:	2200      	movcc	r2, #0
            if(presc != prev_presc)
9000648e:	4557      	cmp	r7, sl
90006490:	bf0c      	ite	eq
90006492:	2200      	moveq	r2, #0
90006494:	f002 0201 	andne.w	r2, r2, #1
90006498:	2a00      	cmp	r2, #0
9000649a:	f000 8099 	beq.w	900065d0 <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000649e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900064a2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900064a6:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064a8:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900064ac:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064b0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900064b4:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064b6:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900064b8:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900064ba:	f200 80f2 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900064be:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900064c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900064c2:	4557      	cmp	r7, sl
900064c4:	bf0c      	ite	eq
900064c6:	2300      	moveq	r3, #0
900064c8:	f003 0301 	andne.w	r3, r3, #1
900064cc:	469b      	mov	fp, r3
900064ce:	2b00      	cmp	r3, #0
900064d0:	f000 8097 	beq.w	90006602 <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064d4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900064d8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900064dc:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064de:	4630      	mov	r0, r6
900064e0:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900064e4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900064e8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900064ec:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900064ee:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900064f0:	f200 80d7 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
900064f4:	465a      	mov	r2, fp
              prev_presc = presc;
900064f6:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900064f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900064fa:	4557      	cmp	r7, sl
900064fc:	bf0c      	ite	eq
900064fe:	2300      	moveq	r3, #0
90006500:	f003 0301 	andne.w	r3, r3, #1
90006504:	469b      	mov	fp, r3
90006506:	2b00      	cmp	r3, #0
90006508:	f000 8096 	beq.w	90006638 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000650c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006510:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006514:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006516:	4630      	mov	r0, r6
90006518:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000651c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006520:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006524:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006526:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006528:	f200 80bb 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
9000652c:	465a      	mov	r2, fp
              prev_presc = presc;
9000652e:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006530:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90006532:	4557      	cmp	r7, sl
90006534:	bf0c      	ite	eq
90006536:	2300      	moveq	r3, #0
90006538:	f003 0301 	andne.w	r3, r3, #1
9000653c:	2b00      	cmp	r3, #0
9000653e:	f000 8096 	beq.w	9000666e <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006542:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006546:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000654a:	4630      	mov	r0, r6
9000654c:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006550:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006554:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006558:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000655a:	f04f 010d 	mov.w	r1, #13
9000655e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006560:	f200 809f 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006564:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006566:	e775      	b.n	90006454 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006568:	9a06      	ldr	r2, [sp, #24]
9000656a:	4661      	mov	r1, ip
9000656c:	f109 0914 	add.w	r9, r9, #20
90006570:	3201      	adds	r2, #1
90006572:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90006576:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
9000657a:	4572      	cmp	r2, lr
9000657c:	9206      	str	r2, [sp, #24]
9000657e:	f040 80b4 	bne.w	900066ea <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
90006582:	9b01      	ldr	r3, [sp, #4]
90006584:	2b7f      	cmp	r3, #127	@ 0x7f
90006586:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
9000658a:	d817      	bhi.n	900065bc <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000658c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90006590:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90006594:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006598:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000659a:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000659c:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000659e:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900065a2:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900065a6:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900065aa:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900065ac:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900065ae:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900065b0:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900065b4:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900065b6:	430b      	orrs	r3, r1
900065b8:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900065bc:	4621      	mov	r1, r4
900065be:	48ad      	ldr	r0, [pc, #692]	@ (90006874 <BSP_I2C4_Init+0x6b0>)
900065c0:	f7ff fde0 	bl	90006184 <MX_I2C4_Init>
900065c4:	2800      	cmp	r0, #0
900065c6:	f43f ae06 	beq.w	900061d6 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
900065ca:	f06f 0007 	mvn.w	r0, #7
  return ret;
900065ce:	e603      	b.n	900061d8 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
900065d0:	9a04      	ldr	r2, [sp, #16]
900065d2:	4557      	cmp	r7, sl
900065d4:	bf0c      	ite	eq
900065d6:	2200      	moveq	r2, #0
900065d8:	f002 0201 	andne.w	r2, r2, #1
900065dc:	2a00      	cmp	r2, #0
900065de:	f000 81cf 	beq.w	90006980 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065e2:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900065e6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900065ea:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065ec:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900065f0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065f4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900065f8:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065fa:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900065fc:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900065fe:	d850      	bhi.n	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006600:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006602:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90006604:	4557      	cmp	r7, sl
90006606:	bf0c      	ite	eq
90006608:	2300      	moveq	r3, #0
9000660a:	f003 0301 	andne.w	r3, r3, #1
9000660e:	469b      	mov	fp, r3
90006610:	2b00      	cmp	r3, #0
90006612:	f000 80da 	beq.w	900067ca <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006616:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000661a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000661e:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006620:	4630      	mov	r0, r6
90006622:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006626:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000662a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000662e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006630:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006632:	d836      	bhi.n	900066a2 <BSP_I2C4_Init+0x4de>
90006634:	465a      	mov	r2, fp
              prev_presc = presc;
90006636:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006638:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9000663a:	4557      	cmp	r7, sl
9000663c:	bf0c      	ite	eq
9000663e:	2300      	moveq	r3, #0
90006640:	f003 0301 	andne.w	r3, r3, #1
90006644:	469b      	mov	fp, r3
90006646:	2b00      	cmp	r3, #0
90006648:	f000 80db 	beq.w	90006802 <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000664c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006650:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006654:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006656:	4630      	mov	r0, r6
90006658:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000665c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006660:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006664:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006666:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006668:	d81b      	bhi.n	900066a2 <BSP_I2C4_Init+0x4de>
9000666a:	465a      	mov	r2, fp
              prev_presc = presc;
9000666c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000666e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90006670:	4557      	cmp	r7, sl
90006672:	bf0c      	ite	eq
90006674:	2300      	moveq	r3, #0
90006676:	f003 0301 	andne.w	r3, r3, #1
9000667a:	2b00      	cmp	r3, #0
9000667c:	f000 80dd 	beq.w	9000683a <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006680:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006684:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006688:	4630      	mov	r0, r6
9000668a:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000668e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006692:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006696:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006698:	f04f 010e 	mov.w	r1, #14
9000669c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000669e:	f67f af61 	bls.w	90006564 <BSP_I2C4_Init+0x3a0>
900066a2:	4b75      	ldr	r3, [pc, #468]	@ (90006878 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
900066a4:	464d      	mov	r5, r9
900066a6:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
900066aa:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900066ae:	f640 0234 	movw	r2, #2100	@ 0x834
900066b2:	f101 0332 	add.w	r3, r1, #50	@ 0x32
900066b6:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900066ba:	2700      	movs	r7, #0
900066bc:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900066be:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900066c0:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900066c2:	461c      	mov	r4, r3
900066c4:	eba2 0c03 	sub.w	ip, r2, r3
900066c8:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900066ca:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900066ce:	460b      	mov	r3, r1
900066d0:	4296      	cmp	r6, r2
900066d2:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 9000687c <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900066d6:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900066da:	f240 4a12 	movw	sl, #1042	@ 0x412
900066de:	bf38      	it	cc
900066e0:	4616      	movcc	r6, r2
900066e2:	46ae      	mov	lr, r5
900066e4:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900066e6:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900066e8:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900066ea:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900066ee:	2500      	movs	r5, #0
900066f0:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900066f4:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900066f8:	930d      	str	r3, [sp, #52]	@ 0x34
900066fa:	18c2      	adds	r2, r0, r3
900066fc:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
90006700:	1907      	adds	r7, r0, r4
90006702:	468c      	mov	ip, r1
90006704:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
90006708:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
9000670c:	9207      	str	r2, [sp, #28]
9000670e:	e006      	b.n	9000671e <BSP_I2C4_Init+0x55a>
90006710:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90006714:	4407      	add	r7, r0
90006716:	eba8 0800 	sub.w	r8, r8, r0
9000671a:	f43f af25 	beq.w	90006568 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000671e:	f240 5314 	movw	r3, #1300	@ 0x514
90006722:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006724:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006726:	429f      	cmp	r7, r3
90006728:	d9f2      	bls.n	90006710 <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000672a:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000672e:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90006732:	d2ed      	bcs.n	90006710 <BSP_I2C4_Init+0x54c>
90006734:	f640 0e34 	movw	lr, #2100	@ 0x834
90006738:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000673a:	f8cd 8010 	str.w	r8, [sp, #16]
9000673e:	2200      	movs	r2, #0
90006740:	ebae 0e03 	sub.w	lr, lr, r3
90006744:	9b07      	ldr	r3, [sp, #28]
90006746:	9705      	str	r7, [sp, #20]
90006748:	443b      	add	r3, r7
9000674a:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000674e:	460f      	mov	r7, r1
90006750:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90006754:	46b4      	mov	ip, r6
90006756:	e005      	b.n	90006764 <BSP_I2C4_Init+0x5a0>
90006758:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000675c:	4403      	add	r3, r0
9000675e:	eba4 0400 	sub.w	r4, r4, r0
90006762:	d01a      	beq.n	9000679a <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006764:	eb0e 0103 	add.w	r1, lr, r3
90006768:	4616      	mov	r6, r2
9000676a:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000676e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006770:	4561      	cmp	r1, ip
90006772:	d9f1      	bls.n	90006758 <BSP_I2C4_Init+0x594>
90006774:	4555      	cmp	r5, sl
90006776:	d8ef      	bhi.n	90006758 <BSP_I2C4_Init+0x594>
            if (error < 0)
90006778:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000677c:	bf28      	it	cs
9000677e:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90006780:	458b      	cmp	fp, r1
90006782:	d9e9      	bls.n	90006758 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006784:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
90006788:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000678a:	4403      	add	r3, r0
9000678c:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
90006790:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90006794:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006798:	d1e4      	bne.n	90006764 <BSP_I2C4_Init+0x5a0>
9000679a:	4666      	mov	r6, ip
9000679c:	9d02      	ldr	r5, [sp, #8]
9000679e:	f8dd c00c 	ldr.w	ip, [sp, #12]
900067a2:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
900067a6:	e7b3      	b.n	90006710 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067a8:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900067ac:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067b0:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067b2:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067b6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067ba:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067be:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067c0:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067c2:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067c4:	f63f af6d 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900067c8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900067ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900067cc:	4557      	cmp	r7, sl
900067ce:	bf0c      	ite	eq
900067d0:	2300      	moveq	r3, #0
900067d2:	f003 0301 	andne.w	r3, r3, #1
900067d6:	469b      	mov	fp, r3
900067d8:	2b00      	cmp	r3, #0
900067da:	f000 8084 	beq.w	900068e6 <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067de:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900067e2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067e6:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067e8:	4630      	mov	r0, r6
900067ea:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067ee:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067f2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067f6:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067f8:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067fa:	f63f af52 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
900067fe:	465a      	mov	r2, fp
              prev_presc = presc;
90006800:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006802:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90006804:	4557      	cmp	r7, sl
90006806:	bf0c      	ite	eq
90006808:	2300      	moveq	r3, #0
9000680a:	f003 0301 	andne.w	r3, r3, #1
9000680e:	469b      	mov	fp, r3
90006810:	2b00      	cmp	r3, #0
90006812:	f000 8084 	beq.w	9000691e <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006816:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000681a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000681e:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006820:	4630      	mov	r0, r6
90006822:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006826:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000682a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000682e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006830:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006832:	f63f af36 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
90006836:	465a      	mov	r2, fp
              prev_presc = presc;
90006838:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000683a:	9b07      	ldr	r3, [sp, #28]
9000683c:	4557      	cmp	r7, sl
9000683e:	bf0c      	ite	eq
90006840:	2300      	moveq	r3, #0
90006842:	f003 0301 	andne.w	r3, r3, #1
90006846:	2b00      	cmp	r3, #0
90006848:	f000 8098 	beq.w	9000697c <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000684c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90006850:	480a      	ldr	r0, [pc, #40]	@ (9000687c <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90006852:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006856:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
9000685a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000685e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006862:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006864:	f04f 010f 	mov.w	r1, #15
90006868:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000686a:	f63f af1a 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000686e:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006870:	e5f0      	b.n	90006454 <BSP_I2C4_Init+0x290>
90006872:	bf00      	nop
90006874:	24007990 	.word	0x24007990
90006878:	240079e4 	.word	0x240079e4
9000687c:	240079e8 	.word	0x240079e8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006880:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006884:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006888:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000688a:	4630      	mov	r0, r6
9000688c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006890:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006894:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006898:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000689a:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000689c:	f63f af01 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900068a0:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900068a2:	9a06      	ldr	r2, [sp, #24]
900068a4:	45ba      	cmp	sl, r7
900068a6:	bf0c      	ite	eq
900068a8:	2200      	moveq	r2, #0
900068aa:	f002 0201 	andne.w	r2, r2, #1
900068ae:	2a00      	cmp	r2, #0
900068b0:	f47f af7a 	bne.w	900067a8 <BSP_I2C4_Init+0x5e4>
900068b4:	9a08      	ldr	r2, [sp, #32]
900068b6:	45ba      	cmp	sl, r7
900068b8:	bf0c      	ite	eq
900068ba:	2200      	moveq	r2, #0
900068bc:	f002 0201 	andne.w	r2, r2, #1
900068c0:	2a00      	cmp	r2, #0
900068c2:	d05f      	beq.n	90006984 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068c4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900068c8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900068cc:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068ce:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900068d2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068d6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900068da:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068dc:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900068de:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900068e0:	f63f aedf 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900068e4:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900068e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900068e8:	4557      	cmp	r7, sl
900068ea:	bf0c      	ite	eq
900068ec:	2300      	moveq	r3, #0
900068ee:	f003 0301 	andne.w	r3, r3, #1
900068f2:	469b      	mov	fp, r3
900068f4:	2b00      	cmp	r3, #0
900068f6:	f43f adff 	beq.w	900064f8 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068fa:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900068fe:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006902:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006904:	4630      	mov	r0, r6
90006906:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000690a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000690e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006912:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006914:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006916:	f63f aec4 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
9000691a:	465a      	mov	r2, fp
              prev_presc = presc;
9000691c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000691e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90006920:	4557      	cmp	r7, sl
90006922:	bf0c      	ite	eq
90006924:	2300      	moveq	r3, #0
90006926:	f003 0301 	andne.w	r3, r3, #1
9000692a:	2b00      	cmp	r3, #0
9000692c:	f43f ae00 	beq.w	90006530 <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006930:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006934:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006938:	4630      	mov	r0, r6
9000693a:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000693e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006942:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006946:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006948:	f04f 010c 	mov.w	r1, #12
9000694c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000694e:	f63f aea8 	bhi.w	900066a2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006952:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006954:	e57e      	b.n	90006454 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006956:	3701      	adds	r7, #1
90006958:	9a01      	ldr	r2, [sp, #4]
9000695a:	2f10      	cmp	r7, #16
9000695c:	4494      	add	ip, r2
9000695e:	f47f acb5 	bne.w	900062cc <BSP_I2C4_Init+0x108>
90006962:	9c02      	ldr	r4, [sp, #8]
90006964:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90006966:	9903      	ldr	r1, [sp, #12]
90006968:	b11b      	cbz	r3, 90006972 <BSP_I2C4_Init+0x7ae>
9000696a:	4b07      	ldr	r3, [pc, #28]	@ (90006988 <BSP_I2C4_Init+0x7c4>)
9000696c:	464d      	mov	r5, r9
9000696e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006972:	2d00      	cmp	r5, #0
90006974:	f43f ae22 	beq.w	900065bc <BSP_I2C4_Init+0x3f8>
90006978:	4804      	ldr	r0, [pc, #16]	@ (9000698c <BSP_I2C4_Init+0x7c8>)
9000697a:	e698      	b.n	900066ae <BSP_I2C4_Init+0x4ea>
9000697c:	4613      	mov	r3, r2
9000697e:	e569      	b.n	90006454 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006980:	469b      	mov	fp, r3
90006982:	e78e      	b.n	900068a2 <BSP_I2C4_Init+0x6de>
90006984:	465a      	mov	r2, fp
90006986:	e59b      	b.n	900064c0 <BSP_I2C4_Init+0x2fc>
90006988:	240079e4 	.word	0x240079e4
9000698c:	240079e8 	.word	0x240079e8

90006990 <BSP_I2C4_WriteReg>:
{
90006990:	b530      	push	{r4, r5, lr}
90006992:	4614      	mov	r4, r2
90006994:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006996:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000699a:	460a      	mov	r2, r1
9000699c:	9301      	str	r3, [sp, #4]
9000699e:	4601      	mov	r1, r0
900069a0:	2301      	movs	r3, #1
900069a2:	4809      	ldr	r0, [pc, #36]	@ (900069c8 <BSP_I2C4_WriteReg+0x38>)
900069a4:	9502      	str	r5, [sp, #8]
900069a6:	9400      	str	r4, [sp, #0]
900069a8:	f001 fbe2 	bl	90008170 <HAL_I2C_Mem_Write>
900069ac:	b908      	cbnz	r0, 900069b2 <BSP_I2C4_WriteReg+0x22>
}
900069ae:	b005      	add	sp, #20
900069b0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900069b2:	4805      	ldr	r0, [pc, #20]	@ (900069c8 <BSP_I2C4_WriteReg+0x38>)
900069b4:	f001 fdde 	bl	90008574 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900069b8:	2804      	cmp	r0, #4
900069ba:	bf14      	ite	ne
900069bc:	f06f 0003 	mvnne.w	r0, #3
900069c0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900069c4:	e7f3      	b.n	900069ae <BSP_I2C4_WriteReg+0x1e>
900069c6:	bf00      	nop
900069c8:	24007990 	.word	0x24007990

900069cc <BSP_I2C4_ReadReg>:
{
900069cc:	b530      	push	{r4, r5, lr}
900069ce:	4614      	mov	r4, r2
900069d0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900069d2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900069d6:	460a      	mov	r2, r1
900069d8:	9301      	str	r3, [sp, #4]
900069da:	4601      	mov	r1, r0
900069dc:	2301      	movs	r3, #1
900069de:	4809      	ldr	r0, [pc, #36]	@ (90006a04 <BSP_I2C4_ReadReg+0x38>)
900069e0:	9502      	str	r5, [sp, #8]
900069e2:	9400      	str	r4, [sp, #0]
900069e4:	f001 fcc2 	bl	9000836c <HAL_I2C_Mem_Read>
900069e8:	b908      	cbnz	r0, 900069ee <BSP_I2C4_ReadReg+0x22>
}
900069ea:	b005      	add	sp, #20
900069ec:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900069ee:	4805      	ldr	r0, [pc, #20]	@ (90006a04 <BSP_I2C4_ReadReg+0x38>)
900069f0:	f001 fdc0 	bl	90008574 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900069f4:	2804      	cmp	r0, #4
900069f6:	bf14      	ite	ne
900069f8:	f06f 0003 	mvnne.w	r0, #3
900069fc:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006a00:	e7f3      	b.n	900069ea <BSP_I2C4_ReadReg+0x1e>
90006a02:	bf00      	nop
90006a04:	24007990 	.word	0x24007990

90006a08 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90006a08:	f000 ba9e 	b.w	90006f48 <HAL_GetTick>

90006a0c <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90006a0c:	b970      	cbnz	r0, 90006a2c <BSP_SDRAM_DeInit+0x20>
{
90006a0e:	b510      	push	{r4, lr}
90006a10:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90006a12:	4808      	ldr	r0, [pc, #32]	@ (90006a34 <BSP_SDRAM_DeInit+0x28>)
90006a14:	f005 fd76 	bl	9000c504 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90006a18:	207a      	movs	r0, #122	@ 0x7a
90006a1a:	f000 fafd 	bl	90007018 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006a1e:	4b06      	ldr	r3, [pc, #24]	@ (90006a38 <BSP_SDRAM_DeInit+0x2c>)
90006a20:	4806      	ldr	r0, [pc, #24]	@ (90006a3c <BSP_SDRAM_DeInit+0x30>)
90006a22:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90006a24:	f003 fbda 	bl	9000a1dc <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90006a28:	4620      	mov	r0, r4
}
90006a2a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006a2c:	f06f 0001 	mvn.w	r0, #1
}
90006a30:	4770      	bx	lr
90006a32:	bf00      	nop
90006a34:	240084e4 	.word	0x240084e4
90006a38:	52000040 	.word	0x52000040
90006a3c:	240083ec 	.word	0x240083ec

90006a40 <MX_SDRAM_BANK2_Init>:
{
90006a40:	b530      	push	{r4, r5, lr}
90006a42:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90006a44:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006a46:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006a48:	4c13      	ldr	r4, [pc, #76]	@ (90006a98 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90006a4a:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90006a4c:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006a4e:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
90006a50:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90006a52:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006a54:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90006a58:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90006a5a:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
90006a5c:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
90006a5e:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90006a60:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006a62:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006a64:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90006a66:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006a68:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006a6a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90006a6e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006a70:	f44f 6500 	mov.w	r5, #2048	@ 0x800
90006a74:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90006a78:	2204      	movs	r2, #4
90006a7a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90006a7e:	2202      	movs	r2, #2
90006a80:	2302      	movs	r3, #2
90006a82:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006a86:	4b05      	ldr	r3, [pc, #20]	@ (90006a9c <MX_SDRAM_BANK2_Init+0x5c>)
90006a88:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90006a8a:	f005 fd11 	bl	9000c4b0 <HAL_SDRAM_Init>
}
90006a8e:	3800      	subs	r0, #0
90006a90:	bf18      	it	ne
90006a92:	2001      	movne	r0, #1
90006a94:	b009      	add	sp, #36	@ 0x24
90006a96:	bd30      	pop	{r4, r5, pc}
90006a98:	240084e4 	.word	0x240084e4
90006a9c:	52004140 	.word	0x52004140

90006aa0 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90006aa0:	2800      	cmp	r0, #0
90006aa2:	f040 80cd 	bne.w	90006c40 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90006aa6:	4b69      	ldr	r3, [pc, #420]	@ (90006c4c <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006aa8:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90006aaa:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006aae:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90006ab2:	b5f0      	push	{r4, r5, r6, r7, lr}
90006ab4:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90006ab6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90006aba:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006abe:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006ac0:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90006ac2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90006ac4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006ac8:	4c61      	ldr	r4, [pc, #388]	@ (90006c50 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006aca:	4e62      	ldr	r6, [pc, #392]	@ (90006c54 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006acc:	9200      	str	r2, [sp, #0]
90006ace:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90006ad0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006ad4:	430a      	orrs	r2, r1
90006ad6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90006ada:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006ade:	400a      	ands	r2, r1
90006ae0:	9201      	str	r2, [sp, #4]
90006ae2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90006ae4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006ae8:	f042 0208 	orr.w	r2, r2, #8
90006aec:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006af0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006af4:	f002 0208 	and.w	r2, r2, #8
90006af8:	9202      	str	r2, [sp, #8]
90006afa:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90006afc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b00:	f042 0210 	orr.w	r2, r2, #16
90006b04:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006b08:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b0c:	f002 0210 	and.w	r2, r2, #16
90006b10:	9203      	str	r2, [sp, #12]
90006b12:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90006b14:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b18:	f042 0220 	orr.w	r2, r2, #32
90006b1c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006b20:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b24:	f002 0220 	and.w	r2, r2, #32
90006b28:	9204      	str	r2, [sp, #16]
90006b2a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90006b2c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b30:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90006b34:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006b38:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b3c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90006b40:	9205      	str	r2, [sp, #20]
90006b42:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006b44:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006b48:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90006b4c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006b50:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006b52:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006b56:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006b58:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006b5c:	483e      	ldr	r0, [pc, #248]	@ (90006c58 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006b5e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006b60:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006b62:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006b66:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006b68:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006b6a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006b6c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006b70:	f000 fc68 	bl	90007444 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006b74:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006b78:	a907      	add	r1, sp, #28
90006b7a:	4838      	ldr	r0, [pc, #224]	@ (90006c5c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006b7c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006b7e:	f000 fc61 	bl	90007444 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006b82:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006b86:	a907      	add	r1, sp, #28
90006b88:	4835      	ldr	r0, [pc, #212]	@ (90006c60 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006b8a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006b8c:	f000 fc5a 	bl	90007444 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006b90:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006b94:	a907      	add	r1, sp, #28
90006b96:	4833      	ldr	r0, [pc, #204]	@ (90006c64 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006b98:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006b9a:	f000 fc53 	bl	90007444 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006b9e:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006ba0:	a907      	add	r1, sp, #28
90006ba2:	4831      	ldr	r0, [pc, #196]	@ (90006c68 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006ba4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006ba6:	f000 fc4d 	bl	90007444 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006baa:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006bac:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006bb0:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90006bb4:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90006bb6:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90006bb8:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006bba:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006bbc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006bc0:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006bc2:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006bc4:	4a29      	ldr	r2, [pc, #164]	@ (90006c6c <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
90006bc6:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006bc8:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90006bca:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006bcc:	6334      	str	r4, [r6, #48]	@ 0x30
90006bce:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90006bd0:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90006bd4:	f640 0308 	movw	r3, #2056	@ 0x808
90006bd8:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90006bda:	2320      	movs	r3, #32
90006bdc:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006bde:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90006be2:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006be6:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90006be8:	f003 faf8 	bl	9000a1dc <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006bec:	4620      	mov	r0, r4
90006bee:	f003 fa7b 	bl	9000a0e8 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90006bf2:	462a      	mov	r2, r5
90006bf4:	210f      	movs	r1, #15
90006bf6:	207a      	movs	r0, #122	@ 0x7a
90006bf8:	f000 f9c4 	bl	90006f84 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90006bfc:	207a      	movs	r0, #122	@ 0x7a
90006bfe:	f000 f9fd 	bl	90006ffc <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90006c02:	2210      	movs	r2, #16
90006c04:	2104      	movs	r1, #4
90006c06:	4630      	mov	r0, r6
90006c08:	f7ff ff1a 	bl	90006a40 <MX_SDRAM_BANK2_Init>
90006c0c:	4603      	mov	r3, r0
90006c0e:	b9d0      	cbnz	r0, 90006c46 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006c10:	4917      	ldr	r1, [pc, #92]	@ (90006c70 <BSP_SDRAM_Init+0x1d0>)
90006c12:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006c14:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006c16:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006c18:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006c1a:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90006c1e:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006c20:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006c24:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006c28:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006c2c:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006c30:	f7ff fa24 	bl	9000607c <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90006c34:	2800      	cmp	r0, #0
90006c36:	bf18      	it	ne
90006c38:	f06f 0004 	mvnne.w	r0, #4
}
90006c3c:	b00d      	add	sp, #52	@ 0x34
90006c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006c40:	f06f 0001 	mvn.w	r0, #1
}
90006c44:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90006c46:	f04f 30ff 	mov.w	r0, #4294967295
90006c4a:	e7f7      	b.n	90006c3c <BSP_SDRAM_Init+0x19c>
90006c4c:	58024400 	.word	0x58024400
90006c50:	24008458 	.word	0x24008458
90006c54:	240084e4 	.word	0x240084e4
90006c58:	58020c00 	.word	0x58020c00
90006c5c:	58021000 	.word	0x58021000
90006c60:	58021400 	.word	0x58021400
90006c64:	58021800 	.word	0x58021800
90006c68:	58021c00 	.word	0x58021c00
90006c6c:	52000040 	.word	0x52000040
90006c70:	240084c4 	.word	0x240084c4

90006c74 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90006c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006c78:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90006c7a:	2800      	cmp	r0, #0
90006c7c:	d16b      	bne.n	90006d56 <BSP_TS_Init+0xe2>
90006c7e:	680b      	ldr	r3, [r1, #0]
90006c80:	460d      	mov	r5, r1
90006c82:	1e5a      	subs	r2, r3, #1
90006c84:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90006c88:	d265      	bcs.n	90006d56 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006c8a:	684a      	ldr	r2, [r1, #4]
90006c8c:	1e51      	subs	r1, r2, #1
90006c8e:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90006c92:	d260      	bcs.n	90006d56 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90006c94:	4293      	cmp	r3, r2
90006c96:	bf28      	it	cs
90006c98:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006c9a:	68ea      	ldr	r2, [r5, #12]
90006c9c:	429a      	cmp	r2, r3
90006c9e:	d85a      	bhi.n	90006d56 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90006ca0:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90006ca2:	4b31      	ldr	r3, [pc, #196]	@ (90006d68 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006ca4:	4c31      	ldr	r4, [pc, #196]	@ (90006d6c <BSP_TS_Init+0xf8>)
90006ca6:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90006ca8:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90006cac:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006cae:	4a30      	ldr	r2, [pc, #192]	@ (90006d70 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006cb0:	4b30      	ldr	r3, [pc, #192]	@ (90006d74 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006cb2:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006cb4:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006cb6:	4a30      	ldr	r2, [pc, #192]	@ (90006d78 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90006cb8:	4b30      	ldr	r3, [pc, #192]	@ (90006d7c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90006cba:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006cbc:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006cbe:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90006cc0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006cc2:	f7ff f92d 	bl	90005f20 <FT5336_RegisterBusIO>
90006cc6:	2800      	cmp	r0, #0
90006cc8:	d14b      	bne.n	90006d62 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90006cca:	a901      	add	r1, sp, #4
90006ccc:	4620      	mov	r0, r4
90006cce:	f7ff f81d 	bl	90005d0c <FT5336_ReadID>
90006cd2:	2800      	cmp	r0, #0
90006cd4:	d145      	bne.n	90006d62 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90006cd6:	9b01      	ldr	r3, [sp, #4]
90006cd8:	2b51      	cmp	r3, #81	@ 0x51
90006cda:	d142      	bne.n	90006d62 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006cdc:	4b28      	ldr	r3, [pc, #160]	@ (90006d80 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006cde:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006ce0:	4f28      	ldr	r7, [pc, #160]	@ (90006d84 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006ce2:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90006d8c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90006ce6:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006ce8:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006cec:	681b      	ldr	r3, [r3, #0]
90006cee:	4798      	blx	r3
90006cf0:	4606      	mov	r6, r0
90006cf2:	2800      	cmp	r0, #0
90006cf4:	d135      	bne.n	90006d62 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006cf6:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006cf8:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006cfa:	4c23      	ldr	r4, [pc, #140]	@ (90006d88 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006cfc:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006d00:	6022      	str	r2, [r4, #0]
90006d02:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006d04:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006d06:	6062      	str	r2, [r4, #4]
90006d08:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006d0a:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006d0c:	60a2      	str	r2, [r4, #8]
90006d0e:	68ea      	ldr	r2, [r5, #12]
90006d10:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006d12:	4798      	blx	r3
90006d14:	2800      	cmp	r0, #0
90006d16:	db18      	blt.n	90006d4a <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90006d18:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90006d1c:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d20:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d22:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d26:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d28:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d2a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d2c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d2e:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d32:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d36:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d3a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006d3e:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006d40:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90006d42:	4630      	mov	r0, r6
90006d44:	b008      	add	sp, #32
90006d46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90006d4a:	f06f 0604 	mvn.w	r6, #4
}
90006d4e:	4630      	mov	r0, r6
90006d50:	b008      	add	sp, #32
90006d52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90006d56:	f06f 0601 	mvn.w	r6, #1
}
90006d5a:	4630      	mov	r0, r6
90006d5c:	b008      	add	sp, #32
90006d5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90006d62:	f04f 36ff 	mov.w	r6, #4294967295
90006d66:	e7ec      	b.n	90006d42 <BSP_TS_Init+0xce>
90006d68:	900061c5 	.word	0x900061c5
90006d6c:	24008518 	.word	0x24008518
90006d70:	90006131 	.word	0x90006131
90006d74:	900069cd 	.word	0x900069cd
90006d78:	90006991 	.word	0x90006991
90006d7c:	90006a09 	.word	0x90006a09
90006d80:	24000044 	.word	0x24000044
90006d84:	24008580 	.word	0x24008580
90006d88:	24008540 	.word	0x24008540
90006d8c:	24008584 	.word	0x24008584

90006d90 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90006d90:	2800      	cmp	r0, #0
90006d92:	d154      	bne.n	90006e3e <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006d94:	4b2b      	ldr	r3, [pc, #172]	@ (90006e44 <BSP_TS_GetState+0xb4>)
90006d96:	4a2c      	ldr	r2, [pc, #176]	@ (90006e48 <BSP_TS_GetState+0xb8>)
90006d98:	681b      	ldr	r3, [r3, #0]
90006d9a:	6810      	ldr	r0, [r2, #0]
90006d9c:	691b      	ldr	r3, [r3, #16]
{
90006d9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006da2:	b084      	sub	sp, #16
90006da4:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006da6:	a901      	add	r1, sp, #4
90006da8:	4798      	blx	r3
90006daa:	2800      	cmp	r0, #0
90006dac:	db3f      	blt.n	90006e2e <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006dae:	4b27      	ldr	r3, [pc, #156]	@ (90006e4c <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90006db0:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006db2:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90006db4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90006db6:	b930      	cbnz	r0, 90006dc6 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90006db8:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006dba:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90006dbe:	2000      	movs	r0, #0
}
90006dc0:	b004      	add	sp, #16
90006dc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006dc6:	689f      	ldr	r7, [r3, #8]
90006dc8:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90006dca:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006dce:	d433      	bmi.n	90006e38 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90006dd0:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90006dd2:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006dd4:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006dd8:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006ddc:	d003      	beq.n	90006de6 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006dde:	f10e 32ff 	add.w	r2, lr, #4294967295
90006de2:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006de6:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90006dea:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006dec:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006dee:	bf48      	it	mi
90006df0:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006df4:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006df8:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90006dfa:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006dfc:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006e00:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006e04:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006e08:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006e0a:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006e0c:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006e0e:	bf8c      	ite	hi
90006e10:	1b90      	subhi	r0, r2, r6
90006e12:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90006e14:	42a9      	cmp	r1, r5
90006e16:	bf8c      	ite	hi
90006e18:	1b4f      	subhi	r7, r1, r5
90006e1a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006e1c:	42b8      	cmp	r0, r7
90006e1e:	bf38      	it	cc
90006e20:	4638      	movcc	r0, r7
90006e22:	68df      	ldr	r7, [r3, #12]
90006e24:	4287      	cmp	r7, r0
90006e26:	d2c8      	bcs.n	90006dba <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90006e28:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90006e2a:	62d9      	str	r1, [r3, #44]	@ 0x2c
90006e2c:	e7c7      	b.n	90006dbe <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90006e2e:	f06f 0004 	mvn.w	r0, #4
}
90006e32:	b004      	add	sp, #16
90006e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90006e38:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90006e3a:	4642      	mov	r2, r8
90006e3c:	e7ca      	b.n	90006dd4 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90006e3e:	f06f 0001 	mvn.w	r0, #1
}
90006e42:	4770      	bx	lr
90006e44:	24008584 	.word	0x24008584
90006e48:	24008580 	.word	0x24008580
90006e4c:	24008540 	.word	0x24008540

90006e50 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90006e50:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006e52:	4c19      	ldr	r4, [pc, #100]	@ (90006eb8 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90006e54:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90006e56:	4b19      	ldr	r3, [pc, #100]	@ (90006ebc <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006e58:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90006e5c:	4918      	ldr	r1, [pc, #96]	@ (90006ec0 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006e5e:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
90006e62:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90006e66:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90006e68:	4c16      	ldr	r4, [pc, #88]	@ (90006ec4 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90006e6a:	f040 0001 	orr.w	r0, r0, #1
90006e6e:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
90006e70:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90006e72:	6818      	ldr	r0, [r3, #0]
90006e74:	4001      	ands	r1, r0
90006e76:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90006e78:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90006e7a:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90006e7c:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90006e7e:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90006e80:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90006e82:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90006e84:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90006e86:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90006e88:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90006e8a:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90006e8c:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90006e8e:	6819      	ldr	r1, [r3, #0]
90006e90:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
90006e94:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
90006e96:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90006e98:	6823      	ldr	r3, [r4, #0]
90006e9a:	f36f 030f 	bfc	r3, #0, #16
90006e9e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
90006ea2:	d203      	bcs.n	90006eac <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90006ea4:	4b08      	ldr	r3, [pc, #32]	@ (90006ec8 <SystemInit+0x78>)
90006ea6:	2201      	movs	r2, #1
90006ea8:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006eac:	4a07      	ldr	r2, [pc, #28]	@ (90006ecc <SystemInit+0x7c>)
90006eae:	4b02      	ldr	r3, [pc, #8]	@ (90006eb8 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90006eb0:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006eb4:	609a      	str	r2, [r3, #8]
}
90006eb6:	4770      	bx	lr
90006eb8:	e000ed00 	.word	0xe000ed00
90006ebc:	58024400 	.word	0x58024400
90006ec0:	eaf6ed7f 	.word	0xeaf6ed7f
90006ec4:	5c001000 	.word	0x5c001000
90006ec8:	51008000 	.word	0x51008000
90006ecc:	90000000 	.word	0x90000000

90006ed0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90006ed0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006ed2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006ed4:	4c12      	ldr	r4, [pc, #72]	@ (90006f20 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006ed6:	f000 f843 	bl	90006f60 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006eda:	f003 fecb 	bl	9000ac74 <HAL_RCC_GetSysClockFreq>
90006ede:	4b11      	ldr	r3, [pc, #68]	@ (90006f24 <HAL_Init+0x54>)
90006ee0:	4911      	ldr	r1, [pc, #68]	@ (90006f28 <HAL_Init+0x58>)
90006ee2:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006ee4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006ee6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006eea:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006eee:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006ef0:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006ef2:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90006ef6:	490d      	ldr	r1, [pc, #52]	@ (90006f2c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006ef8:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006efc:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006efe:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90006f02:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006f04:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006f06:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006f08:	f7fd fa86 	bl	90004418 <HAL_InitTick>
90006f0c:	b110      	cbz	r0, 90006f14 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90006f0e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90006f10:	4620      	mov	r0, r4
90006f12:	bd10      	pop	{r4, pc}
90006f14:	4604      	mov	r4, r0
  HAL_MspInit();
90006f16:	f7fc ff75 	bl	90003e04 <HAL_MspInit>
}
90006f1a:	4620      	mov	r0, r4
90006f1c:	bd10      	pop	{r4, pc}
90006f1e:	bf00      	nop
90006f20:	24000074 	.word	0x24000074
90006f24:	58024400 	.word	0x58024400
90006f28:	9002cf28 	.word	0x9002cf28
90006f2c:	24000078 	.word	0x24000078

90006f30 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90006f30:	4a03      	ldr	r2, [pc, #12]	@ (90006f40 <HAL_IncTick+0x10>)
90006f32:	4b04      	ldr	r3, [pc, #16]	@ (90006f44 <HAL_IncTick+0x14>)
90006f34:	6811      	ldr	r1, [r2, #0]
90006f36:	781b      	ldrb	r3, [r3, #0]
90006f38:	440b      	add	r3, r1
90006f3a:	6013      	str	r3, [r2, #0]
}
90006f3c:	4770      	bx	lr
90006f3e:	bf00      	nop
90006f40:	24008588 	.word	0x24008588
90006f44:	2400007c 	.word	0x2400007c

90006f48 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90006f48:	4b01      	ldr	r3, [pc, #4]	@ (90006f50 <HAL_GetTick+0x8>)
90006f4a:	6818      	ldr	r0, [r3, #0]
}
90006f4c:	4770      	bx	lr
90006f4e:	bf00      	nop
90006f50:	24008588 	.word	0x24008588

90006f54 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90006f54:	4b01      	ldr	r3, [pc, #4]	@ (90006f5c <HAL_GetREVID+0x8>)
90006f56:	6818      	ldr	r0, [r3, #0]
}
90006f58:	0c00      	lsrs	r0, r0, #16
90006f5a:	4770      	bx	lr
90006f5c:	5c001000 	.word	0x5c001000

90006f60 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006f60:	4906      	ldr	r1, [pc, #24]	@ (90006f7c <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006f62:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006f66:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90006f68:	4b05      	ldr	r3, [pc, #20]	@ (90006f80 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006f6a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006f6c:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006f70:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90006f74:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90006f76:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90006f78:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90006f7a:	4770      	bx	lr
90006f7c:	e000ed00 	.word	0xe000ed00
90006f80:	05fa0000 	.word	0x05fa0000

90006f84 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90006f84:	4b1a      	ldr	r3, [pc, #104]	@ (90006ff0 <HAL_NVIC_SetPriority+0x6c>)
90006f86:	68db      	ldr	r3, [r3, #12]
90006f88:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90006f8c:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006f8e:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006f92:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006f96:	f1be 0f04 	cmp.w	lr, #4
90006f9a:	bf28      	it	cs
90006f9c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006fa0:	f1bc 0f06 	cmp.w	ip, #6
90006fa4:	d91a      	bls.n	90006fdc <HAL_NVIC_SetPriority+0x58>
90006fa6:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006faa:	f04f 33ff 	mov.w	r3, #4294967295
90006fae:	fa03 f30c 	lsl.w	r3, r3, ip
90006fb2:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006fb6:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90006fba:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006fbc:	fa03 f30e 	lsl.w	r3, r3, lr
90006fc0:	ea21 0303 	bic.w	r3, r1, r3
90006fc4:	fa03 f30c 	lsl.w	r3, r3, ip
90006fc8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006fcc:	ea4f 1303 	mov.w	r3, r3, lsl #4
90006fd0:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90006fd2:	db06      	blt.n	90006fe2 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006fd4:	4a07      	ldr	r2, [pc, #28]	@ (90006ff4 <HAL_NVIC_SetPriority+0x70>)
90006fd6:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90006fd8:	f85d fb04 	ldr.w	pc, [sp], #4
90006fdc:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006fde:	4694      	mov	ip, r2
90006fe0:	e7e9      	b.n	90006fb6 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006fe2:	f000 000f 	and.w	r0, r0, #15
90006fe6:	4a04      	ldr	r2, [pc, #16]	@ (90006ff8 <HAL_NVIC_SetPriority+0x74>)
90006fe8:	5413      	strb	r3, [r2, r0]
90006fea:	f85d fb04 	ldr.w	pc, [sp], #4
90006fee:	bf00      	nop
90006ff0:	e000ed00 	.word	0xe000ed00
90006ff4:	e000e400 	.word	0xe000e400
90006ff8:	e000ed14 	.word	0xe000ed14

90006ffc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006ffc:	2800      	cmp	r0, #0
90006ffe:	db07      	blt.n	90007010 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007000:	2301      	movs	r3, #1
90007002:	f000 011f 	and.w	r1, r0, #31
90007006:	4a03      	ldr	r2, [pc, #12]	@ (90007014 <HAL_NVIC_EnableIRQ+0x18>)
90007008:	0940      	lsrs	r0, r0, #5
9000700a:	408b      	lsls	r3, r1
9000700c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007010:	4770      	bx	lr
90007012:	bf00      	nop
90007014:	e000e100 	.word	0xe000e100

90007018 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007018:	2800      	cmp	r0, #0
9000701a:	db0c      	blt.n	90007036 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000701c:	0943      	lsrs	r3, r0, #5
9000701e:	2201      	movs	r2, #1
90007020:	f000 001f 	and.w	r0, r0, #31
90007024:	4904      	ldr	r1, [pc, #16]	@ (90007038 <HAL_NVIC_DisableIRQ+0x20>)
90007026:	3320      	adds	r3, #32
90007028:	4082      	lsls	r2, r0
9000702a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000702e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007032:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007036:	4770      	bx	lr
90007038:	e000e100 	.word	0xe000e100

9000703c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000703c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007040:	4b04      	ldr	r3, [pc, #16]	@ (90007054 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007042:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007044:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007046:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000704a:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
9000704c:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90007050:	4770      	bx	lr
90007052:	bf00      	nop
90007054:	e000ed00 	.word	0xe000ed00

90007058 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007058:	4b06      	ldr	r3, [pc, #24]	@ (90007074 <HAL_MPU_Enable+0x1c>)
9000705a:	f040 0001 	orr.w	r0, r0, #1
9000705e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007062:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007064:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90007068:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000706a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000706e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007072:	4770      	bx	lr
90007074:	e000ed00 	.word	0xe000ed00

90007078 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007078:	4a16      	ldr	r2, [pc, #88]	@ (900070d4 <HAL_MPU_ConfigRegion+0x5c>)
9000707a:	7843      	ldrb	r3, [r0, #1]
9000707c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90007080:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90007084:	f023 0301 	bic.w	r3, r3, #1
90007088:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
9000708c:	6843      	ldr	r3, [r0, #4]
9000708e:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007092:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007094:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007098:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
9000709a:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000709c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900070a0:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900070a4:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900070a6:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900070a8:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900070ac:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900070b0:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900070b4:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900070b6:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900070ba:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900070be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900070c2:	7a01      	ldrb	r1, [r0, #8]
900070c4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900070c8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900070cc:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
900070d0:	4770      	bx	lr
900070d2:	bf00      	nop
900070d4:	e000ed00 	.word	0xe000ed00

900070d8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
900070d8:	2800      	cmp	r0, #0
900070da:	d036      	beq.n	9000714a <HAL_CRC_Init+0x72>
{
900070dc:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
900070de:	7f43      	ldrb	r3, [r0, #29]
900070e0:	4604      	mov	r4, r0
900070e2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900070e6:	b363      	cbz	r3, 90007142 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
900070e8:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900070ea:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
900070ec:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900070ee:	b9f3      	cbnz	r3, 9000712e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
900070f0:	6823      	ldr	r3, [r4, #0]
900070f2:	4a17      	ldr	r2, [pc, #92]	@ (90007150 <HAL_CRC_Init+0x78>)
900070f4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
900070f6:	689a      	ldr	r2, [r3, #8]
900070f8:	f022 0218 	bic.w	r2, r2, #24
900070fc:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
900070fe:	7962      	ldrb	r2, [r4, #5]
90007100:	b18a      	cbz	r2, 90007126 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007102:	6922      	ldr	r2, [r4, #16]
90007104:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007106:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007108:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000710c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90007110:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007112:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007114:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007116:	689a      	ldr	r2, [r3, #8]
90007118:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000711c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000711e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007120:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007122:	7761      	strb	r1, [r4, #29]
}
90007124:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007126:	f04f 32ff 	mov.w	r2, #4294967295
9000712a:	611a      	str	r2, [r3, #16]
9000712c:	e7eb      	b.n	90007106 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000712e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007132:	4620      	mov	r0, r4
90007134:	f000 f80e 	bl	90007154 <HAL_CRCEx_Polynomial_Set>
90007138:	b908      	cbnz	r0, 9000713e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000713a:	6823      	ldr	r3, [r4, #0]
9000713c:	e7df      	b.n	900070fe <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000713e:	2001      	movs	r0, #1
}
90007140:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007142:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007144:	f7fc fe78 	bl	90003e38 <HAL_CRC_MspInit>
90007148:	e7ce      	b.n	900070e8 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000714a:	2001      	movs	r0, #1
}
9000714c:	4770      	bx	lr
9000714e:	bf00      	nop
90007150:	04c11db7 	.word	0x04c11db7

90007154 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007154:	07cb      	lsls	r3, r1, #31
90007156:	d51a      	bpl.n	9000718e <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90007158:	231f      	movs	r3, #31
{
9000715a:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000715c:	3b01      	subs	r3, #1
9000715e:	1c5c      	adds	r4, r3, #1
90007160:	fa21 fc03 	lsr.w	ip, r1, r3
90007164:	d015      	beq.n	90007192 <HAL_CRCEx_Polynomial_Set+0x3e>
90007166:	f01c 0f01 	tst.w	ip, #1
9000716a:	d0f7      	beq.n	9000715c <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
9000716c:	2a18      	cmp	r2, #24
9000716e:	d811      	bhi.n	90007194 <HAL_CRCEx_Polynomial_Set+0x40>
90007170:	e8df f002 	tbb	[pc, r2]
90007174:	10101016 	.word	0x10101016
90007178:	10101010 	.word	0x10101010
9000717c:	10101024 	.word	0x10101024
90007180:	10101010 	.word	0x10101010
90007184:	10101021 	.word	0x10101021
90007188:	10101010 	.word	0x10101010
9000718c:	14          	.byte	0x14
9000718d:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
9000718e:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007190:	4770      	bx	lr
    switch (PolyLength)
90007192:	b12a      	cbz	r2, 900071a0 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
90007194:	2001      	movs	r0, #1
}
90007196:	f85d 4b04 	ldr.w	r4, [sp], #4
9000719a:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000719c:	2b06      	cmp	r3, #6
9000719e:	d8f9      	bhi.n	90007194 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900071a0:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900071a2:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900071a4:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900071a6:	68a3      	ldr	r3, [r4, #8]
900071a8:	f023 0318 	bic.w	r3, r3, #24
900071ac:	4313      	orrs	r3, r2
900071ae:	60a3      	str	r3, [r4, #8]
}
900071b0:	f85d 4b04 	ldr.w	r4, [sp], #4
900071b4:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900071b6:	2b07      	cmp	r3, #7
900071b8:	d9f2      	bls.n	900071a0 <HAL_CRCEx_Polynomial_Set+0x4c>
900071ba:	e7eb      	b.n	90007194 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900071bc:	2b0f      	cmp	r3, #15
900071be:	d9ef      	bls.n	900071a0 <HAL_CRCEx_Polynomial_Set+0x4c>
900071c0:	e7e8      	b.n	90007194 <HAL_CRCEx_Polynomial_Set+0x40>
900071c2:	bf00      	nop

900071c4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900071c4:	2800      	cmp	r0, #0
900071c6:	d035      	beq.n	90007234 <HAL_DMA2D_Init+0x70>
{
900071c8:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900071ca:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900071ce:	4604      	mov	r4, r0
900071d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900071d4:	b34b      	cbz	r3, 9000722a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900071d6:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900071d8:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900071da:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900071dc:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900071e0:	69e1      	ldr	r1, [r4, #28]
900071e2:	681d      	ldr	r5, [r3, #0]
900071e4:	4814      	ldr	r0, [pc, #80]	@ (90007238 <HAL_DMA2D_Init+0x74>)
900071e6:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900071e8:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900071ea:	4028      	ands	r0, r5
900071ec:	4301      	orrs	r1, r0
900071ee:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900071f0:	69a1      	ldr	r1, [r4, #24]
900071f2:	6b58      	ldr	r0, [r3, #52]	@ 0x34
900071f4:	430a      	orrs	r2, r1
900071f6:	4911      	ldr	r1, [pc, #68]	@ (9000723c <HAL_DMA2D_Init+0x78>)
900071f8:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900071fa:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900071fc:	430a      	orrs	r2, r1
900071fe:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007200:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90007202:	f36f 010f 	bfc	r1, #0, #16
90007206:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007208:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000720c:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000720e:	0552      	lsls	r2, r2, #21
90007210:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007212:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
90007216:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000721a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000721c:	430a      	orrs	r2, r1
9000721e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007220:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007222:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007224:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90007228:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000722a:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000722e:	f7fc fe1b 	bl	90003e68 <HAL_DMA2D_MspInit>
90007232:	e7d0      	b.n	900071d6 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007234:	2001      	movs	r0, #1
}
90007236:	4770      	bx	lr
90007238:	fff8ffbf 	.word	0xfff8ffbf
9000723c:	fffffef8 	.word	0xfffffef8

90007240 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90007240:	4770      	bx	lr
90007242:	bf00      	nop

90007244 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90007244:	4770      	bx	lr
90007246:	bf00      	nop

90007248 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007248:	6803      	ldr	r3, [r0, #0]
{
9000724a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000724c:	685d      	ldr	r5, [r3, #4]
{
9000724e:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007250:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007252:	07ea      	lsls	r2, r5, #31
90007254:	d501      	bpl.n	9000725a <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90007256:	05f1      	lsls	r1, r6, #23
90007258:	d456      	bmi.n	90007308 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000725a:	06aa      	lsls	r2, r5, #26
9000725c:	d501      	bpl.n	90007262 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000725e:	04b3      	lsls	r3, r6, #18
90007260:	d43b      	bmi.n	900072da <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007262:	0728      	lsls	r0, r5, #28
90007264:	d501      	bpl.n	9000726a <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007266:	0531      	lsls	r1, r6, #20
90007268:	d421      	bmi.n	900072ae <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000726a:	076a      	lsls	r2, r5, #29
9000726c:	d501      	bpl.n	90007272 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000726e:	0573      	lsls	r3, r6, #21
90007270:	d472      	bmi.n	90007358 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007272:	07a8      	lsls	r0, r5, #30
90007274:	d501      	bpl.n	9000727a <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90007276:	05b1      	lsls	r1, r6, #22
90007278:	d404      	bmi.n	90007284 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000727a:	06ea      	lsls	r2, r5, #27
9000727c:	d501      	bpl.n	90007282 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000727e:	04f3      	lsls	r3, r6, #19
90007280:	d457      	bmi.n	90007332 <HAL_DMA2D_IRQHandler+0xea>
}
90007282:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007284:	6823      	ldr	r3, [r4, #0]
90007286:	681a      	ldr	r2, [r3, #0]
90007288:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000728c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000728e:	2202      	movs	r2, #2
90007290:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007292:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007294:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007296:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007298:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000729a:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000729e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900072a2:	6a23      	ldr	r3, [r4, #32]
900072a4:	2b00      	cmp	r3, #0
900072a6:	d0e8      	beq.n	9000727a <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900072a8:	4620      	mov	r0, r4
900072aa:	4798      	blx	r3
900072ac:	e7e5      	b.n	9000727a <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900072ae:	6823      	ldr	r3, [r4, #0]
900072b0:	681a      	ldr	r2, [r3, #0]
900072b2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900072b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900072b8:	2208      	movs	r2, #8
900072ba:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900072bc:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900072be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900072c0:	4313      	orrs	r3, r2
900072c2:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900072c4:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900072c8:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900072ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900072cc:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900072d0:	2b00      	cmp	r3, #0
900072d2:	d0ca      	beq.n	9000726a <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900072d4:	4620      	mov	r0, r4
900072d6:	4798      	blx	r3
900072d8:	e7c7      	b.n	9000726a <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900072da:	6823      	ldr	r3, [r4, #0]
900072dc:	681a      	ldr	r2, [r3, #0]
900072de:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900072e2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900072e4:	2220      	movs	r2, #32
900072e6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900072e8:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900072ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900072ec:	f043 0302 	orr.w	r3, r3, #2
900072f0:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900072f2:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900072f6:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900072f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900072fa:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900072fe:	2b00      	cmp	r3, #0
90007300:	d0af      	beq.n	90007262 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007302:	4620      	mov	r0, r4
90007304:	4798      	blx	r3
90007306:	e7ac      	b.n	90007262 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007308:	681a      	ldr	r2, [r3, #0]
9000730a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000730e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007310:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90007312:	f042 0201 	orr.w	r2, r2, #1
90007316:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007318:	2201      	movs	r2, #1
9000731a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000731c:	2304      	movs	r3, #4
9000731e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007322:	2300      	movs	r3, #0
90007324:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007328:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000732a:	2b00      	cmp	r3, #0
9000732c:	d095      	beq.n	9000725a <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000732e:	4798      	blx	r3
90007330:	e793      	b.n	9000725a <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007332:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007334:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007336:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007338:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000733a:	681a      	ldr	r2, [r3, #0]
9000733c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90007340:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007342:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007344:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007346:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007348:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000734c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000734e:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007352:	f7ff ff77 	bl	90007244 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007356:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007358:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000735a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000735c:	681a      	ldr	r2, [r3, #0]
9000735e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007362:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007364:	2204      	movs	r2, #4
90007366:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007368:	f7ff ff6a 	bl	90007240 <HAL_DMA2D_LineEventCallback>
9000736c:	e781      	b.n	90007272 <HAL_DMA2D_IRQHandler+0x2a>
9000736e:	bf00      	nop

90007370 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007370:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007374:	2a01      	cmp	r2, #1
90007376:	d05f      	beq.n	90007438 <HAL_DMA2D_ConfigLayer+0xc8>
90007378:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000737a:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000737e:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007380:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90007384:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007388:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000738a:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000738c:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007390:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007394:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007396:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90007398:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000739a:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000739c:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000739e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900073a2:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900073a6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900073a8:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900073aa:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900073ae:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073b2:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900073b4:	d923      	bls.n	900073fe <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900073b6:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900073ba:	b971      	cbnz	r1, 900073da <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073bc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900073be:	491f      	ldr	r1, [pc, #124]	@ (9000743c <HAL_DMA2D_ConfigLayer+0xcc>)
900073c0:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900073c2:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073c4:	4311      	orrs	r1, r2
900073c6:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900073c8:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900073ca:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900073cc:	2101      	movs	r1, #1

  return HAL_OK;
900073ce:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900073d0:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900073d4:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900073d8:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900073da:	2d0b      	cmp	r5, #11
900073dc:	d12a      	bne.n	90007434 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900073de:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900073e0:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
900073e4:	4816      	ldr	r0, [pc, #88]	@ (90007440 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073e6:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073ea:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073ec:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073f0:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073f2:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073f6:	430a      	orrs	r2, r1
900073f8:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073fa:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900073fc:	e7e5      	b.n	900073ca <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900073fe:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90007402:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007404:	b959      	cbnz	r1, 9000741e <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007406:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007408:	490c      	ldr	r1, [pc, #48]	@ (9000743c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000740a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000740c:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000740e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007410:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007412:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007416:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007418:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000741a:	62a0      	str	r0, [r4, #40]	@ 0x28
9000741c:	e7d5      	b.n	900073ca <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000741e:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007420:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007424:	4905      	ldr	r1, [pc, #20]	@ (9000743c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007426:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007428:	4029      	ands	r1, r5
9000742a:	4311      	orrs	r1, r2
9000742c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000742e:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007430:	6226      	str	r6, [r4, #32]
90007432:	e7ca      	b.n	900073ca <HAL_DMA2D_ConfigLayer+0x5a>
90007434:	4801      	ldr	r0, [pc, #4]	@ (9000743c <HAL_DMA2D_ConfigLayer+0xcc>)
90007436:	e7d6      	b.n	900073e6 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007438:	2002      	movs	r0, #2
}
9000743a:	4770      	bx	lr
9000743c:	00ccfff0 	.word	0x00ccfff0
90007440:	00c0fff0 	.word	0x00c0fff0

90007444 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007444:	680b      	ldr	r3, [r1, #0]
90007446:	2b00      	cmp	r3, #0
90007448:	f000 81dc 	beq.w	90007804 <HAL_GPIO_Init+0x3c0>
9000744c:	4ab4      	ldr	r2, [pc, #720]	@ (90007720 <HAL_GPIO_Init+0x2dc>)
9000744e:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
90007450:	f04f 0200 	mov.w	r2, #0
{
90007454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007458:	f04f 0b01 	mov.w	fp, #1
{
9000745c:	b085      	sub	sp, #20
9000745e:	f000 8105 	beq.w	9000766c <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007462:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007466:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007468:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
9000746c:	9b00      	ldr	r3, [sp, #0]
9000746e:	ea1c 0a03 	ands.w	sl, ip, r3
90007472:	f000 814b 	beq.w	9000770c <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007476:	684d      	ldr	r5, [r1, #4]
90007478:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000747a:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000747c:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007480:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007484:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007488:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000748a:	f1b8 0f01 	cmp.w	r8, #1
9000748e:	f240 815d 	bls.w	9000774c <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007492:	2f03      	cmp	r7, #3
90007494:	f040 81cf 	bne.w	90007836 <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007498:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
9000749c:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000749e:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900074a2:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900074a6:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
900074aa:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900074ac:	f000 812e 	beq.w	9000770c <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074b0:	4e9c      	ldr	r6, [pc, #624]	@ (90007724 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900074b2:	f002 0703 	and.w	r7, r2, #3
900074b6:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074b8:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900074bc:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074be:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900074c2:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900074c6:	4b98      	ldr	r3, [pc, #608]	@ (90007728 <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074c8:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
900074cc:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
900074d0:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900074d4:	4298      	cmp	r0, r3
900074d6:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074da:	f004 0402 	and.w	r4, r4, #2
900074de:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
900074e2:	9403      	str	r4, [sp, #12]
900074e4:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
900074e6:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900074e8:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900074ec:	f000 8178 	beq.w	900077e0 <HAL_GPIO_Init+0x39c>
900074f0:	4b8e      	ldr	r3, [pc, #568]	@ (9000772c <HAL_GPIO_Init+0x2e8>)
900074f2:	4298      	cmp	r0, r3
900074f4:	f000 80de 	beq.w	900076b4 <HAL_GPIO_Init+0x270>
900074f8:	f8df c234 	ldr.w	ip, [pc, #564]	@ 90007730 <HAL_GPIO_Init+0x2ec>
900074fc:	4560      	cmp	r0, ip
900074fe:	f000 817b 	beq.w	900077f8 <HAL_GPIO_Init+0x3b4>
90007502:	f8df c230 	ldr.w	ip, [pc, #560]	@ 90007734 <HAL_GPIO_Init+0x2f0>
90007506:	4560      	cmp	r0, ip
90007508:	f000 817d 	beq.w	90007806 <HAL_GPIO_Init+0x3c2>
9000750c:	f8df c228 	ldr.w	ip, [pc, #552]	@ 90007738 <HAL_GPIO_Init+0x2f4>
90007510:	4560      	cmp	r0, ip
90007512:	f000 816b 	beq.w	900077ec <HAL_GPIO_Init+0x3a8>
90007516:	f8df c224 	ldr.w	ip, [pc, #548]	@ 9000773c <HAL_GPIO_Init+0x2f8>
9000751a:	4560      	cmp	r0, ip
9000751c:	f000 8179 	beq.w	90007812 <HAL_GPIO_Init+0x3ce>
90007520:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 90007740 <HAL_GPIO_Init+0x2fc>
90007524:	4560      	cmp	r0, ip
90007526:	f000 817a 	beq.w	9000781e <HAL_GPIO_Init+0x3da>
9000752a:	f8df c218 	ldr.w	ip, [pc, #536]	@ 90007744 <HAL_GPIO_Init+0x300>
9000752e:	4560      	cmp	r0, ip
90007530:	f000 817b 	beq.w	9000782a <HAL_GPIO_Init+0x3e6>
90007534:	f8df c210 	ldr.w	ip, [pc, #528]	@ 90007748 <HAL_GPIO_Init+0x304>
90007538:	4560      	cmp	r0, ip
9000753a:	bf0c      	ite	eq
9000753c:	f04f 0c09 	moveq.w	ip, #9
90007540:	f04f 0c0a 	movne.w	ip, #10
90007544:	fa0c f707 	lsl.w	r7, ip, r7
90007548:	433c      	orrs	r4, r7
9000754a:	e0b8      	b.n	900076be <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
9000754c:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007550:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90007552:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007554:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
90007558:	fa06 f807 	lsl.w	r8, r6, r7
9000755c:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007560:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007564:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90007568:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000756c:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007570:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007574:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
90007578:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
9000757c:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007580:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007582:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007586:	fa06 fe07 	lsl.w	lr, r6, r7
9000758a:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
9000758e:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007592:	d117      	bne.n	900075c4 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007594:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007598:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
9000759a:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000759e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
900075a2:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900075a6:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
900075aa:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900075ae:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900075b0:	260f      	movs	r6, #15
900075b2:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900075b6:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900075b8:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900075bc:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
900075c0:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900075c4:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
900075c6:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900075c8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900075cc:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900075d0:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
900075d4:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900075d6:	d045      	beq.n	90007664 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900075d8:	4f52      	ldr	r7, [pc, #328]	@ (90007724 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075da:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900075dc:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
900075e0:	f044 0402 	orr.w	r4, r4, #2
900075e4:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
900075e8:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
900075ec:	f022 0703 	bic.w	r7, r2, #3
900075f0:	f004 0402 	and.w	r4, r4, #2
900075f4:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
900075f8:	9403      	str	r4, [sp, #12]
900075fa:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
900075fe:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007600:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
90007604:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007608:	00a4      	lsls	r4, r4, #2
9000760a:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000760e:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007610:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
90007614:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
90007616:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
9000761a:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
9000761e:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007620:	f100 80d2 	bmi.w	900077c8 <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
90007624:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90007626:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000762a:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
9000762c:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000762e:	02ae      	lsls	r6, r5, #10
90007630:	f100 80d3 	bmi.w	900077da <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
90007634:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90007636:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000763a:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
9000763c:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007640:	03ae      	lsls	r6, r5, #14
90007642:	f100 80c7 	bmi.w	900077d4 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
90007646:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90007648:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000764c:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000764e:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90007652:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007656:	f100 80ba 	bmi.w	900077ce <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
9000765a:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000765c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
90007660:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
90007664:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007666:	fa33 f402 	lsrs.w	r4, r3, r2
9000766a:	d055      	beq.n	90007718 <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000766c:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
90007670:	ea13 0c0e 	ands.w	ip, r3, lr
90007674:	d0f6      	beq.n	90007664 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007676:	684d      	ldr	r5, [r1, #4]
90007678:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000767a:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000767c:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007680:	fa06 f807 	lsl.w	r8, r6, r7
90007684:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007688:	f104 38ff 	add.w	r8, r4, #4294967295
9000768c:	f1b8 0f01 	cmp.w	r8, #1
90007690:	f67f af5c 	bls.w	9000754c <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007694:	2c03      	cmp	r4, #3
90007696:	d095      	beq.n	900075c4 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
90007698:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90007720 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000769c:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
9000769e:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900076a2:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900076a6:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900076aa:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
900076ae:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900076b2:	e787      	b.n	900075c4 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900076b4:	f04f 0c02 	mov.w	ip, #2
900076b8:	fa0c f707 	lsl.w	r7, ip, r7
900076bc:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
900076be:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900076c0:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
900076c2:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
900076c6:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
900076ca:	bf4c      	ite	mi
900076cc:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
900076d0:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900076d2:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
900076d4:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
900076d8:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
900076dc:	bf54      	ite	pl
900076de:	4034      	andpl	r4, r6
          temp |= iocurrent;
900076e0:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900076e4:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
900076e6:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
900076ea:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
900076ee:	bf54      	ite	pl
900076f0:	4034      	andpl	r4, r6
          temp |= iocurrent;
900076f2:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900076f6:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900076f8:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900076fc:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90007700:	bf54      	ite	pl
90007702:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007704:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
90007708:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
9000770c:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000770e:	9b00      	ldr	r3, [sp, #0]
90007710:	fa33 f402 	lsrs.w	r4, r3, r2
90007714:	f47f aea8 	bne.w	90007468 <HAL_GPIO_Init+0x24>
  }
}
90007718:	b005      	add	sp, #20
9000771a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000771e:	bf00      	nop
90007720:	58020000 	.word	0x58020000
90007724:	58024400 	.word	0x58024400
90007728:	58020400 	.word	0x58020400
9000772c:	58020800 	.word	0x58020800
90007730:	58020c00 	.word	0x58020c00
90007734:	58021000 	.word	0x58021000
90007738:	58021400 	.word	0x58021400
9000773c:	58021800 	.word	0x58021800
90007740:	58021c00 	.word	0x58021c00
90007744:	58022000 	.word	0x58022000
90007748:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
9000774c:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007750:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90007752:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007754:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90007758:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000775c:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000775e:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007762:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007766:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000776a:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000776e:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007772:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007776:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000777a:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000777e:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
90007782:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007786:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000778a:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
9000778e:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007792:	f47f ae81 	bne.w	90007498 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007796:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000779a:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
9000779c:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077a0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
900077a4:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077a8:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
900077ac:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077b0:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077b2:	230f      	movs	r3, #15
900077b4:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077b8:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077ba:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077be:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
900077c2:	f8c8 c020 	str.w	ip, [r8, #32]
900077c6:	e667      	b.n	90007498 <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
900077c8:	ea44 040c 	orr.w	r4, r4, ip
900077cc:	e72b      	b.n	90007626 <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
900077ce:	ea44 040c 	orr.w	r4, r4, ip
900077d2:	e743      	b.n	9000765c <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
900077d4:	ea4c 0404 	orr.w	r4, ip, r4
900077d8:	e736      	b.n	90007648 <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
900077da:	ea44 040c 	orr.w	r4, r4, ip
900077de:	e72a      	b.n	90007636 <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900077e0:	f04f 0c01 	mov.w	ip, #1
900077e4:	fa0c f707 	lsl.w	r7, ip, r7
900077e8:	433c      	orrs	r4, r7
900077ea:	e768      	b.n	900076be <HAL_GPIO_Init+0x27a>
900077ec:	f04f 0c05 	mov.w	ip, #5
900077f0:	fa0c f707 	lsl.w	r7, ip, r7
900077f4:	433c      	orrs	r4, r7
900077f6:	e762      	b.n	900076be <HAL_GPIO_Init+0x27a>
900077f8:	f04f 0c03 	mov.w	ip, #3
900077fc:	fa0c f707 	lsl.w	r7, ip, r7
90007800:	433c      	orrs	r4, r7
90007802:	e75c      	b.n	900076be <HAL_GPIO_Init+0x27a>
90007804:	4770      	bx	lr
90007806:	f04f 0c04 	mov.w	ip, #4
9000780a:	fa0c f707 	lsl.w	r7, ip, r7
9000780e:	433c      	orrs	r4, r7
90007810:	e755      	b.n	900076be <HAL_GPIO_Init+0x27a>
90007812:	f04f 0c06 	mov.w	ip, #6
90007816:	fa0c f707 	lsl.w	r7, ip, r7
9000781a:	433c      	orrs	r4, r7
9000781c:	e74f      	b.n	900076be <HAL_GPIO_Init+0x27a>
9000781e:	f04f 0c07 	mov.w	ip, #7
90007822:	fa0c f707 	lsl.w	r7, ip, r7
90007826:	433c      	orrs	r4, r7
90007828:	e749      	b.n	900076be <HAL_GPIO_Init+0x27a>
9000782a:	f04f 0c08 	mov.w	ip, #8
9000782e:	fa0c f707 	lsl.w	r7, ip, r7
90007832:	433c      	orrs	r4, r7
90007834:	e743      	b.n	900076be <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
90007836:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000783a:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000783c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007840:	fa03 fc04 	lsl.w	ip, r3, r4
90007844:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90007848:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000784c:	e624      	b.n	90007498 <HAL_GPIO_Init+0x54>
9000784e:	bf00      	nop

90007850 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90007850:	2900      	cmp	r1, #0
90007852:	f000 810c 	beq.w	90007a6e <HAL_GPIO_DeInit+0x21e>
90007856:	4b8b      	ldr	r3, [pc, #556]	@ (90007a84 <HAL_GPIO_DeInit+0x234>)
90007858:	4298      	cmp	r0, r3
{
9000785a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000785e:	f000 809a 	beq.w	90007996 <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
90007862:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007864:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007868:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000786c:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
90007870:	2201      	movs	r2, #1
90007872:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90007874:	ea12 0e01 	ands.w	lr, r2, r1
90007878:	d077      	beq.n	9000796a <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000787a:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000787e:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007882:	4f81      	ldr	r7, [pc, #516]	@ (90007a88 <HAL_GPIO_DeInit+0x238>)
90007884:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007888:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000788a:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000788c:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
90007890:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007894:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
90007898:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000789c:	d027      	beq.n	900078ee <HAL_GPIO_DeInit+0x9e>
9000789e:	4f7b      	ldr	r7, [pc, #492]	@ (90007a8c <HAL_GPIO_DeInit+0x23c>)
900078a0:	42b8      	cmp	r0, r7
900078a2:	d06e      	beq.n	90007982 <HAL_GPIO_DeInit+0x132>
900078a4:	4f7a      	ldr	r7, [pc, #488]	@ (90007a90 <HAL_GPIO_DeInit+0x240>)
900078a6:	42b8      	cmp	r0, r7
900078a8:	d070      	beq.n	9000798c <HAL_GPIO_DeInit+0x13c>
900078aa:	4f7a      	ldr	r7, [pc, #488]	@ (90007a94 <HAL_GPIO_DeInit+0x244>)
900078ac:	42b8      	cmp	r0, r7
900078ae:	d063      	beq.n	90007978 <HAL_GPIO_DeInit+0x128>
900078b0:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 90007a9c <HAL_GPIO_DeInit+0x24c>
900078b4:	4558      	cmp	r0, fp
900078b6:	f000 80d5 	beq.w	90007a64 <HAL_GPIO_DeInit+0x214>
900078ba:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 90007aa0 <HAL_GPIO_DeInit+0x250>
900078be:	4558      	cmp	r0, fp
900078c0:	f000 80d6 	beq.w	90007a70 <HAL_GPIO_DeInit+0x220>
900078c4:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 90007aa4 <HAL_GPIO_DeInit+0x254>
900078c8:	4558      	cmp	r0, fp
900078ca:	f000 80c6 	beq.w	90007a5a <HAL_GPIO_DeInit+0x20a>
900078ce:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90007aa8 <HAL_GPIO_DeInit+0x258>
900078d2:	4558      	cmp	r0, fp
900078d4:	f000 80d1 	beq.w	90007a7a <HAL_GPIO_DeInit+0x22a>
900078d8:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 90007aac <HAL_GPIO_DeInit+0x25c>
900078dc:	4558      	cmp	r0, fp
900078de:	bf0c      	ite	eq
900078e0:	f04f 0b09 	moveq.w	fp, #9
900078e4:	f04f 0b0a 	movne.w	fp, #10
900078e8:	fa0b f404 	lsl.w	r4, fp, r4
900078ec:	e002      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
900078ee:	2701      	movs	r7, #1
900078f0:	fa07 f404 	lsl.w	r4, r7, r4
900078f4:	45a4      	cmp	ip, r4
900078f6:	d117      	bne.n	90007928 <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900078f8:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
900078fc:	ea24 040e 	bic.w	r4, r4, lr
90007900:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90007904:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
90007908:	ea24 040e 	bic.w	r4, r4, lr
9000790c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007910:	6874      	ldr	r4, [r6, #4]
90007912:	ea24 040e 	bic.w	r4, r4, lr
90007916:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007918:	6834      	ldr	r4, [r6, #0]
9000791a:	ea24 040e 	bic.w	r4, r4, lr
9000791e:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007920:	68ac      	ldr	r4, [r5, #8]
90007922:	ea24 0408 	bic.w	r4, r4, r8
90007926:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007928:	005d      	lsls	r5, r3, #1
9000792a:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000792c:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007930:	fa0a f505 	lsl.w	r5, sl, r5
90007934:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
90007938:	432c      	orrs	r4, r5
9000793a:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000793c:	f003 0407 	and.w	r4, r3, #7
90007940:	f8dc e020 	ldr.w	lr, [ip, #32]
90007944:	00a4      	lsls	r4, r4, #2
90007946:	fa09 f404 	lsl.w	r4, r9, r4
9000794a:	ea2e 0404 	bic.w	r4, lr, r4
9000794e:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007952:	68c4      	ldr	r4, [r0, #12]
90007954:	ea24 0405 	bic.w	r4, r4, r5
90007958:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000795a:	6844      	ldr	r4, [r0, #4]
9000795c:	ea24 0202 	bic.w	r2, r4, r2
90007960:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007962:	6882      	ldr	r2, [r0, #8]
90007964:	ea22 0205 	bic.w	r2, r2, r5
90007968:	6082      	str	r2, [r0, #8]
    }

    position++;
9000796a:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000796c:	fa31 f203 	lsrs.w	r2, r1, r3
90007970:	f47f af7e 	bne.w	90007870 <HAL_GPIO_DeInit+0x20>
  }
}
90007974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007978:	f04f 0b04 	mov.w	fp, #4
9000797c:	fa0b f404 	lsl.w	r4, fp, r4
90007980:	e7b8      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
90007982:	f04f 0b02 	mov.w	fp, #2
90007986:	fa0b f404 	lsl.w	r4, fp, r4
9000798a:	e7b3      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
9000798c:	f04f 0b03 	mov.w	fp, #3
90007990:	fa0b f404 	lsl.w	r4, fp, r4
90007994:	e7ae      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
90007996:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
90007998:	f04f 0c01 	mov.w	ip, #1
9000799c:	4f3e      	ldr	r7, [pc, #248]	@ (90007a98 <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000799e:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900079a0:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900079a4:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900079a8:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900079ac:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
900079b0:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900079b4:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
900079b6:	ea11 0904 	ands.w	r9, r1, r4
900079ba:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900079bc:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
900079c0:	d045      	beq.n	90007a4e <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
900079c2:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900079c6:	ea13 0f0a 	tst.w	r3, sl
900079ca:	d11d      	bne.n	90007a08 <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900079cc:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
900079d0:	ea2a 0a09 	bic.w	sl, sl, r9
900079d4:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900079d8:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
900079dc:	ea2a 0a09 	bic.w	sl, sl, r9
900079e0:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
900079e4:	f8d6 a004 	ldr.w	sl, [r6, #4]
900079e8:	ea2a 0a09 	bic.w	sl, sl, r9
900079ec:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900079f0:	f8d6 a000 	ldr.w	sl, [r6]
900079f4:	ea2a 0909 	bic.w	r9, sl, r9
900079f8:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900079fc:	f8d8 9008 	ldr.w	r9, [r8, #8]
90007a00:	ea29 0303 	bic.w	r3, r9, r3
90007a04:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007a08:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007a0c:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007a0e:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007a12:	fa0e f808 	lsl.w	r8, lr, r8
90007a16:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90007a1a:	ea43 0308 	orr.w	r3, r3, r8
90007a1e:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007a20:	f002 0307 	and.w	r3, r2, #7
90007a24:	f8d9 a020 	ldr.w	sl, [r9, #32]
90007a28:	009b      	lsls	r3, r3, #2
90007a2a:	fa05 f303 	lsl.w	r3, r5, r3
90007a2e:	ea2a 0303 	bic.w	r3, sl, r3
90007a32:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007a36:	68c3      	ldr	r3, [r0, #12]
90007a38:	ea23 0308 	bic.w	r3, r3, r8
90007a3c:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90007a3e:	6843      	ldr	r3, [r0, #4]
90007a40:	ea23 0304 	bic.w	r3, r3, r4
90007a44:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007a46:	6883      	ldr	r3, [r0, #8]
90007a48:	ea23 0308 	bic.w	r3, r3, r8
90007a4c:	6083      	str	r3, [r0, #8]
    position++;
90007a4e:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007a50:	fa31 f302 	lsrs.w	r3, r1, r2
90007a54:	d1a8      	bne.n	900079a8 <HAL_GPIO_DeInit+0x158>
}
90007a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007a5a:	f04f 0b07 	mov.w	fp, #7
90007a5e:	fa0b f404 	lsl.w	r4, fp, r4
90007a62:	e747      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
90007a64:	f04f 0b05 	mov.w	fp, #5
90007a68:	fa0b f404 	lsl.w	r4, fp, r4
90007a6c:	e742      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
90007a6e:	4770      	bx	lr
90007a70:	f04f 0b06 	mov.w	fp, #6
90007a74:	fa0b f404 	lsl.w	r4, fp, r4
90007a78:	e73c      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
90007a7a:	f04f 0b08 	mov.w	fp, #8
90007a7e:	fa0b f404 	lsl.w	r4, fp, r4
90007a82:	e737      	b.n	900078f4 <HAL_GPIO_DeInit+0xa4>
90007a84:	58020000 	.word	0x58020000
90007a88:	58020400 	.word	0x58020400
90007a8c:	58020800 	.word	0x58020800
90007a90:	58020c00 	.word	0x58020c00
90007a94:	58021000 	.word	0x58021000
90007a98:	58000400 	.word	0x58000400
90007a9c:	58021400 	.word	0x58021400
90007aa0:	58021800 	.word	0x58021800
90007aa4:	58021c00 	.word	0x58021c00
90007aa8:	58022000 	.word	0x58022000
90007aac:	58022400 	.word	0x58022400

90007ab0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90007ab0:	6903      	ldr	r3, [r0, #16]
90007ab2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90007ab4:	bf14      	ite	ne
90007ab6:	2001      	movne	r0, #1
90007ab8:	2000      	moveq	r0, #0
90007aba:	4770      	bx	lr

90007abc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90007abc:	b902      	cbnz	r2, 90007ac0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90007abe:	0409      	lsls	r1, r1, #16
90007ac0:	6181      	str	r1, [r0, #24]
  }
}
90007ac2:	4770      	bx	lr

90007ac4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90007ac4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90007ac6:	ea01 0203 	and.w	r2, r1, r3
90007aca:	ea21 0103 	bic.w	r1, r1, r3
90007ace:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90007ad2:	6181      	str	r1, [r0, #24]
}
90007ad4:	4770      	bx	lr
90007ad6:	bf00      	nop

90007ad8 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007ad8:	6803      	ldr	r3, [r0, #0]
90007ada:	699a      	ldr	r2, [r3, #24]
90007adc:	0412      	lsls	r2, r2, #16
90007ade:	f140 8097 	bpl.w	90007c10 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90007ae2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007ae6:	4604      	mov	r4, r0
90007ae8:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007aea:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007aec:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007aee:	f012 0810 	ands.w	r8, r2, #16
90007af2:	d07f      	beq.n	90007bf4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90007af4:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007af6:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007af8:	699a      	ldr	r2, [r3, #24]
90007afa:	f012 0820 	ands.w	r8, r2, #32
90007afe:	d17b      	bne.n	90007bf8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007b00:	f7ff fa22 	bl	90006f48 <HAL_GetTick>
90007b04:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007b06:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007b08:	2819      	cmp	r0, #25
90007b0a:	d83d      	bhi.n	90007b88 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b0c:	699a      	ldr	r2, [r3, #24]
90007b0e:	0690      	lsls	r0, r2, #26
90007b10:	d5f6      	bpl.n	90007b00 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007b12:	2220      	movs	r2, #32
90007b14:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90007b16:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90007b1a:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007b1c:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007b1e:	05d1      	lsls	r1, r2, #23
90007b20:	d552      	bpl.n	90007bc8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007b22:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b26:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007b28:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007b2c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b2e:	d504      	bpl.n	90007b3a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007b30:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007b34:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007b38:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007b3a:	0591      	lsls	r1, r2, #22
90007b3c:	d504      	bpl.n	90007b48 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007b3e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007b42:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007b46:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007b48:	699a      	ldr	r2, [r3, #24]
90007b4a:	0795      	lsls	r5, r2, #30
90007b4c:	d501      	bpl.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
90007b4e:	2200      	movs	r2, #0
90007b50:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007b52:	699a      	ldr	r2, [r3, #24]
90007b54:	07d0      	lsls	r0, r2, #31
90007b56:	d403      	bmi.n	90007b60 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007b58:	699a      	ldr	r2, [r3, #24]
90007b5a:	f042 0201 	orr.w	r2, r2, #1
90007b5e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90007b60:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90007b62:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007b64:	4d2b      	ldr	r5, [pc, #172]	@ (90007c14 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b66:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007b68:	402a      	ands	r2, r5
90007b6a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007b6c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90007b6e:	ea43 0308 	orr.w	r3, r3, r8
90007b72:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007b74:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b78:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007b7c:	2300      	movs	r3, #0
      return HAL_ERROR;
90007b7e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007b80:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90007b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007b88:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007b8a:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b8e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007b90:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b92:	0409      	lsls	r1, r1, #16
90007b94:	d50b      	bpl.n	90007bae <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
90007b96:	0441      	lsls	r1, r0, #17
90007b98:	d409      	bmi.n	90007bae <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
90007b9a:	2a20      	cmp	r2, #32
90007b9c:	d007      	beq.n	90007bae <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007b9e:	685a      	ldr	r2, [r3, #4]
90007ba0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007ba4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007ba6:	f7ff f9cf 	bl	90006f48 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007baa:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007bac:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007bae:	699a      	ldr	r2, [r3, #24]
90007bb0:	0690      	lsls	r0, r2, #26
90007bb2:	d4a1      	bmi.n	90007af8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007bb4:	f7ff f9c8 	bl	90006f48 <HAL_GetTick>
90007bb8:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007bba:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007bbc:	2819      	cmp	r0, #25
90007bbe:	d9f6      	bls.n	90007bae <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007bc0:	f04f 0820 	mov.w	r8, #32
90007bc4:	699a      	ldr	r2, [r3, #24]
90007bc6:	e7a6      	b.n	90007b16 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007bc8:	0550      	lsls	r0, r2, #21
90007bca:	d4b1      	bmi.n	90007b30 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007bcc:	0592      	lsls	r2, r2, #22
90007bce:	d4b6      	bmi.n	90007b3e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90007bd0:	2d00      	cmp	r5, #0
90007bd2:	d1b9      	bne.n	90007b48 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007bd4:	f7ff f9b8 	bl	90006f48 <HAL_GetTick>
90007bd8:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007bda:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007bdc:	2819      	cmp	r0, #25
90007bde:	d902      	bls.n	90007be6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007be0:	699a      	ldr	r2, [r3, #24]
90007be2:	0411      	lsls	r1, r2, #16
90007be4:	d40b      	bmi.n	90007bfe <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007be6:	699a      	ldr	r2, [r3, #24]
90007be8:	0412      	lsls	r2, r2, #16
90007bea:	f53f af7f 	bmi.w	90007aec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
90007bee:	2000      	movs	r0, #0
}
90007bf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007bf4:	4645      	mov	r5, r8
90007bf6:	e791      	b.n	90007b1c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90007bf8:	f04f 0800 	mov.w	r8, #0
90007bfc:	e789      	b.n	90007b12 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007bfe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c00:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c02:	4313      	orrs	r3, r2
90007c04:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c06:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007c0a:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007c0e:	e7b5      	b.n	90007b7c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90007c10:	2000      	movs	r0, #0
}
90007c12:	4770      	bx	lr
90007c14:	fe00e800 	.word	0xfe00e800

90007c18 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007c18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007c1c:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007c1e:	2710      	movs	r7, #16
{
90007c20:	4605      	mov	r5, r0
90007c22:	460e      	mov	r6, r1
90007c24:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007c26:	699a      	ldr	r2, [r3, #24]
90007c28:	f012 0202 	ands.w	r2, r2, #2
90007c2c:	d168      	bne.n	90007d00 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
90007c2e:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007c30:	f011 0c10 	ands.w	ip, r1, #16
90007c34:	d062      	beq.n	90007cfc <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007c36:	1c74      	adds	r4, r6, #1
90007c38:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c3a:	d166      	bne.n	90007d0a <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90007c3c:	699c      	ldr	r4, [r3, #24]
90007c3e:	f014 0420 	ands.w	r4, r4, #32
90007c42:	d160      	bne.n	90007d06 <I2C_WaitOnTXISFlagUntilTimeout+0xee>
90007c44:	699a      	ldr	r2, [r3, #24]
90007c46:	0691      	lsls	r1, r2, #26
90007c48:	d5fc      	bpl.n	90007c44 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007c4a:	2220      	movs	r2, #32
90007c4c:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007c4e:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007c52:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007c54:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007c56:	05d0      	lsls	r0, r2, #23
90007c58:	d532      	bpl.n	90007cc0 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007c5a:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c5e:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007c60:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007c64:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c66:	d504      	bpl.n	90007c72 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007c68:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007c6c:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007c70:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007c72:	0596      	lsls	r6, r2, #22
90007c74:	d504      	bpl.n	90007c80 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007c76:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007c7a:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007c7e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007c80:	699a      	ldr	r2, [r3, #24]
90007c82:	0790      	lsls	r0, r2, #30
90007c84:	d501      	bpl.n	90007c8a <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
90007c86:	2200      	movs	r2, #0
90007c88:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007c8a:	699a      	ldr	r2, [r3, #24]
90007c8c:	07d1      	lsls	r1, r2, #31
90007c8e:	d403      	bmi.n	90007c98 <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007c90:	699a      	ldr	r2, [r3, #24]
90007c92:	f042 0201 	orr.w	r2, r2, #1
90007c96:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007c98:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007c9a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007c9c:	4c38      	ldr	r4, [pc, #224]	@ (90007d80 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c9e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007ca0:	4022      	ands	r2, r4
90007ca2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007ca4:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007ca6:	ea43 030c 	orr.w	r3, r3, ip
90007caa:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007cac:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007cb0:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007cb4:	2300      	movs	r3, #0
      return HAL_ERROR;
90007cb6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007cb8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007cbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007cc0:	0550      	lsls	r0, r2, #21
90007cc2:	d4d1      	bmi.n	90007c68 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007cc4:	0594      	lsls	r4, r2, #22
90007cc6:	d4d6      	bmi.n	90007c76 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90007cc8:	2900      	cmp	r1, #0
90007cca:	d1d9      	bne.n	90007c80 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90007ccc:	1c72      	adds	r2, r6, #1
90007cce:	d0aa      	beq.n	90007c26 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007cd0:	f7ff f93a 	bl	90006f48 <HAL_GetTick>
90007cd4:	eba0 0308 	sub.w	r3, r0, r8
90007cd8:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007cda:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007cdc:	d801      	bhi.n	90007ce2 <I2C_WaitOnTXISFlagUntilTimeout+0xca>
90007cde:	2e00      	cmp	r6, #0
90007ce0:	d1a1      	bne.n	90007c26 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007ce2:	699a      	ldr	r2, [r3, #24]
90007ce4:	f012 0202 	ands.w	r2, r2, #2
90007ce8:	d19d      	bne.n	90007c26 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007cea:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007cec:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007cee:	430b      	orrs	r3, r1
90007cf0:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007cf2:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007cf6:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90007cfa:	e7db      	b.n	90007cb4 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90007cfc:	4661      	mov	r1, ip
90007cfe:	e7a9      	b.n	90007c54 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90007d00:	2000      	movs	r0, #0
}
90007d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d06:	4614      	mov	r4, r2
90007d08:	e79f      	b.n	90007c4a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007d0a:	4614      	mov	r4, r2
90007d0c:	46c1      	mov	r9, r8
90007d0e:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d10:	699a      	ldr	r2, [r3, #24]
90007d12:	0692      	lsls	r2, r2, #26
90007d14:	d40e      	bmi.n	90007d34 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90007d16:	f1ba 0f00 	cmp.w	sl, #0
90007d1a:	d198      	bne.n	90007c4e <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007d1c:	f7ff f914 	bl	90006f48 <HAL_GetTick>
90007d20:	eba0 0309 	sub.w	r3, r0, r9
90007d24:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007d26:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007d28:	d308      	bcc.n	90007d3c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90007d2a:	b13e      	cbz	r6, 90007d3c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d2c:	699a      	ldr	r2, [r3, #24]
90007d2e:	0690      	lsls	r0, r2, #26
90007d30:	d5f4      	bpl.n	90007d1c <I2C_WaitOnTXISFlagUntilTimeout+0x104>
90007d32:	e78a      	b.n	90007c4a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90007d34:	f1ba 0f00 	cmp.w	sl, #0
90007d38:	d189      	bne.n	90007c4e <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90007d3a:	e786      	b.n	90007c4a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007d3c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007d3e:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007d42:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007d44:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007d46:	0409      	lsls	r1, r1, #16
90007d48:	d50b      	bpl.n	90007d62 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
90007d4a:	0441      	lsls	r1, r0, #17
90007d4c:	d409      	bmi.n	90007d62 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
90007d4e:	2a20      	cmp	r2, #32
90007d50:	d007      	beq.n	90007d62 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007d52:	685a      	ldr	r2, [r3, #4]
90007d54:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007d58:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007d5a:	f7ff f8f5 	bl	90006f48 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007d5e:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007d60:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007d62:	699a      	ldr	r2, [r3, #24]
90007d64:	0690      	lsls	r0, r2, #26
90007d66:	d4d3      	bmi.n	90007d10 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007d68:	f7ff f8ee 	bl	90006f48 <HAL_GetTick>
90007d6c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d70:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007d72:	2819      	cmp	r0, #25
90007d74:	d9f5      	bls.n	90007d62 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007d76:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007d78:	f04f 0a01 	mov.w	sl, #1
90007d7c:	e7c8      	b.n	90007d10 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90007d7e:	bf00      	nop
90007d80:	fe00e800 	.word	0xfe00e800

90007d84 <I2C_WaitOnFlagUntilTimeout>:
{
90007d84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007d88:	461d      	mov	r5, r3
90007d8a:	4683      	mov	fp, r0
90007d8c:	460f      	mov	r7, r1
90007d8e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007d90:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007d92:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007d96:	699a      	ldr	r2, [r3, #24]
90007d98:	ea37 0202 	bics.w	r2, r7, r2
90007d9c:	bf0c      	ite	eq
90007d9e:	2201      	moveq	r2, #1
90007da0:	2200      	movne	r2, #0
90007da2:	42b2      	cmp	r2, r6
90007da4:	d173      	bne.n	90007e8e <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90007da6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007da8:	f012 0c10 	ands.w	ip, r2, #16
90007dac:	d06d      	beq.n	90007e8a <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007dae:	1c6c      	adds	r4, r5, #1
90007db0:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007db4:	d170      	bne.n	90007e98 <I2C_WaitOnFlagUntilTimeout+0x114>
90007db6:	699c      	ldr	r4, [r3, #24]
90007db8:	f014 0420 	ands.w	r4, r4, #32
90007dbc:	d16a      	bne.n	90007e94 <I2C_WaitOnFlagUntilTimeout+0x110>
90007dbe:	699a      	ldr	r2, [r3, #24]
90007dc0:	0691      	lsls	r1, r2, #26
90007dc2:	d5fc      	bpl.n	90007dbe <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007dc4:	2220      	movs	r2, #32
90007dc6:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007dc8:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007dcc:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007dce:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007dd0:	05d0      	lsls	r0, r2, #23
90007dd2:	d534      	bpl.n	90007e3e <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007dd4:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007dd8:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007dda:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007dde:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007de0:	d504      	bpl.n	90007dec <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007de2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007de6:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007dea:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007dec:	0595      	lsls	r5, r2, #22
90007dee:	d504      	bpl.n	90007dfa <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007df0:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007df4:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007df8:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007dfa:	699a      	ldr	r2, [r3, #24]
90007dfc:	0790      	lsls	r0, r2, #30
90007dfe:	d501      	bpl.n	90007e04 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90007e00:	2200      	movs	r2, #0
90007e02:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007e04:	699a      	ldr	r2, [r3, #24]
90007e06:	07d1      	lsls	r1, r2, #31
90007e08:	d403      	bmi.n	90007e12 <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007e0a:	699a      	ldr	r2, [r3, #24]
90007e0c:	f042 0201 	orr.w	r2, r2, #1
90007e10:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007e12:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007e14:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007e16:	4c40      	ldr	r4, [pc, #256]	@ (90007f18 <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007e18:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007e1a:	4022      	ands	r2, r4
90007e1c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007e1e:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90007e22:	ea43 030c 	orr.w	r3, r3, ip
90007e26:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007e2a:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007e2e:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007e32:	2300      	movs	r3, #0
      return HAL_ERROR;
90007e34:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007e36:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90007e3a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007e3e:	0550      	lsls	r0, r2, #21
90007e40:	d4cf      	bmi.n	90007de2 <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007e42:	0594      	lsls	r4, r2, #22
90007e44:	d4d4      	bmi.n	90007df0 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
90007e46:	2900      	cmp	r1, #0
90007e48:	d1d7      	bne.n	90007dfa <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
90007e4a:	1c6a      	adds	r2, r5, #1
90007e4c:	d0a3      	beq.n	90007d96 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007e4e:	f7ff f87b 	bl	90006f48 <HAL_GetTick>
90007e52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007e54:	1ac3      	subs	r3, r0, r3
90007e56:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007e58:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007e5c:	d801      	bhi.n	90007e62 <I2C_WaitOnFlagUntilTimeout+0xde>
90007e5e:	2d00      	cmp	r5, #0
90007e60:	d199      	bne.n	90007d96 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007e62:	699a      	ldr	r2, [r3, #24]
90007e64:	ea37 0202 	bics.w	r2, r7, r2
90007e68:	bf0c      	ite	eq
90007e6a:	2201      	moveq	r2, #1
90007e6c:	2200      	movne	r2, #0
90007e6e:	42b2      	cmp	r2, r6
90007e70:	d191      	bne.n	90007d96 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e72:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e76:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e78:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e7a:	430b      	orrs	r3, r1
90007e7c:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e80:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e84:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90007e88:	e7d3      	b.n	90007e32 <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
90007e8a:	4661      	mov	r1, ip
90007e8c:	e79f      	b.n	90007dce <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
90007e8e:	2000      	movs	r0, #0
}
90007e90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e94:	2400      	movs	r4, #0
90007e96:	e795      	b.n	90007dc4 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e98:	2400      	movs	r4, #0
90007e9a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90007e9e:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ea0:	699a      	ldr	r2, [r3, #24]
90007ea2:	0692      	lsls	r2, r2, #26
90007ea4:	d40f      	bmi.n	90007ec6 <I2C_WaitOnFlagUntilTimeout+0x142>
90007ea6:	f1ba 0f00 	cmp.w	sl, #0
90007eaa:	d18d      	bne.n	90007dc8 <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007eac:	f7ff f84c 	bl	90006f48 <HAL_GetTick>
90007eb0:	eba0 0309 	sub.w	r3, r0, r9
90007eb4:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007eb6:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007eba:	d309      	bcc.n	90007ed0 <I2C_WaitOnFlagUntilTimeout+0x14c>
90007ebc:	b145      	cbz	r5, 90007ed0 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ebe:	699a      	ldr	r2, [r3, #24]
90007ec0:	0690      	lsls	r0, r2, #26
90007ec2:	d5f3      	bpl.n	90007eac <I2C_WaitOnFlagUntilTimeout+0x128>
90007ec4:	e77e      	b.n	90007dc4 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90007ec6:	f1ba 0f00 	cmp.w	sl, #0
90007eca:	f47f af7d 	bne.w	90007dc8 <I2C_WaitOnFlagUntilTimeout+0x44>
90007ece:	e779      	b.n	90007dc4 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007ed0:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007ed2:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007ed6:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007ed8:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007eda:	0409      	lsls	r1, r1, #16
90007edc:	d50c      	bpl.n	90007ef8 <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90007ede:	0441      	lsls	r1, r0, #17
90007ee0:	d40a      	bmi.n	90007ef8 <I2C_WaitOnFlagUntilTimeout+0x174>
90007ee2:	2a20      	cmp	r2, #32
90007ee4:	d008      	beq.n	90007ef8 <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007ee6:	685a      	ldr	r2, [r3, #4]
90007ee8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007eec:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007eee:	f7ff f82b 	bl	90006f48 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ef2:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90007ef6:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ef8:	699a      	ldr	r2, [r3, #24]
90007efa:	0690      	lsls	r0, r2, #26
90007efc:	d4d0      	bmi.n	90007ea0 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007efe:	f7ff f823 	bl	90006f48 <HAL_GetTick>
90007f02:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f06:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007f0a:	2819      	cmp	r0, #25
90007f0c:	d9f4      	bls.n	90007ef8 <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007f0e:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007f10:	f04f 0a01 	mov.w	sl, #1
90007f14:	e7c4      	b.n	90007ea0 <I2C_WaitOnFlagUntilTimeout+0x11c>
90007f16:	bf00      	nop
90007f18:	fe00e800 	.word	0xfe00e800

90007f1c <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f1c:	6803      	ldr	r3, [r0, #0]
{
90007f1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007f22:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f24:	699a      	ldr	r2, [r3, #24]
90007f26:	0695      	lsls	r5, r2, #26
90007f28:	d461      	bmi.n	90007fee <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90007f2a:	4605      	mov	r5, r0
90007f2c:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007f2e:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007f32:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007f34:	f012 0c10 	ands.w	ip, r2, #16
90007f38:	d05c      	beq.n	90007ff4 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007f3a:	1c74      	adds	r4, r6, #1
90007f3c:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f40:	d165      	bne.n	9000800e <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90007f42:	699c      	ldr	r4, [r3, #24]
90007f44:	f014 0420 	ands.w	r4, r4, #32
90007f48:	d15f      	bne.n	9000800a <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007f4a:	699a      	ldr	r2, [r3, #24]
90007f4c:	0691      	lsls	r1, r2, #26
90007f4e:	d5fc      	bpl.n	90007f4a <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007f50:	2220      	movs	r2, #32
90007f52:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007f54:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007f58:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007f5a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007f5c:	05d0      	lsls	r0, r2, #23
90007f5e:	d532      	bpl.n	90007fc6 <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f60:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f64:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007f66:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f6a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f6c:	d504      	bpl.n	90007f78 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f6e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007f72:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f76:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f78:	0596      	lsls	r6, r2, #22
90007f7a:	d504      	bpl.n	90007f86 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f7c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007f80:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f84:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007f86:	699a      	ldr	r2, [r3, #24]
90007f88:	0790      	lsls	r0, r2, #30
90007f8a:	d501      	bpl.n	90007f90 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90007f8c:	2200      	movs	r2, #0
90007f8e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007f90:	699a      	ldr	r2, [r3, #24]
90007f92:	07d1      	lsls	r1, r2, #31
90007f94:	d403      	bmi.n	90007f9e <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007f96:	699a      	ldr	r2, [r3, #24]
90007f98:	f042 0201 	orr.w	r2, r2, #1
90007f9c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007f9e:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007fa0:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007fa2:	4c38      	ldr	r4, [pc, #224]	@ (90008084 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007fa4:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007fa6:	4022      	ands	r2, r4
90007fa8:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007faa:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007fac:	ea43 030c 	orr.w	r3, r3, ip
90007fb0:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007fb2:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007fb6:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90007fba:	2300      	movs	r3, #0
      return HAL_ERROR;
90007fbc:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90007fbe:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007fc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007fc6:	0550      	lsls	r0, r2, #21
90007fc8:	d4d1      	bmi.n	90007f6e <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007fca:	0594      	lsls	r4, r2, #22
90007fcc:	d4d6      	bmi.n	90007f7c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90007fce:	2900      	cmp	r1, #0
90007fd0:	d1d9      	bne.n	90007f86 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007fd2:	f7fe ffb9 	bl	90006f48 <HAL_GetTick>
90007fd6:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007fd8:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007fda:	42b0      	cmp	r0, r6
90007fdc:	d800      	bhi.n	90007fe0 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90007fde:	b91e      	cbnz	r6, 90007fe8 <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007fe0:	699a      	ldr	r2, [r3, #24]
90007fe2:	f012 0220 	ands.w	r2, r2, #32
90007fe6:	d007      	beq.n	90007ff8 <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007fe8:	699a      	ldr	r2, [r3, #24]
90007fea:	0692      	lsls	r2, r2, #26
90007fec:	d5a1      	bpl.n	90007f32 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90007fee:	2000      	movs	r0, #0
}
90007ff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007ff4:	4661      	mov	r1, ip
90007ff6:	e7b0      	b.n	90007f5a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007ff8:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007ffa:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007ffc:	430b      	orrs	r3, r1
90007ffe:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008000:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008004:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008008:	e7d7      	b.n	90007fba <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000800a:	2400      	movs	r4, #0
9000800c:	e7a0      	b.n	90007f50 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000800e:	2400      	movs	r4, #0
90008010:	46b9      	mov	r9, r7
90008012:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008014:	699a      	ldr	r2, [r3, #24]
90008016:	0692      	lsls	r2, r2, #26
90008018:	d42f      	bmi.n	9000807a <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
9000801a:	f1ba 0f00 	cmp.w	sl, #0
9000801e:	d199      	bne.n	90007f54 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008020:	f7fe ff92 	bl	90006f48 <HAL_GetTick>
90008024:	eba0 0309 	sub.w	r3, r0, r9
90008028:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000802a:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000802c:	d304      	bcc.n	90008038 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
9000802e:	b11e      	cbz	r6, 90008038 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008030:	699a      	ldr	r2, [r3, #24]
90008032:	0690      	lsls	r0, r2, #26
90008034:	d5f4      	bpl.n	90008020 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90008036:	e78b      	b.n	90007f50 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008038:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000803a:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000803e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008040:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008042:	0409      	lsls	r1, r1, #16
90008044:	d50b      	bpl.n	9000805e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90008046:	0441      	lsls	r1, r0, #17
90008048:	d409      	bmi.n	9000805e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
9000804a:	2a20      	cmp	r2, #32
9000804c:	d007      	beq.n	9000805e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000804e:	685a      	ldr	r2, [r3, #4]
90008050:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008054:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008056:	f7fe ff77 	bl	90006f48 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000805a:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000805c:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000805e:	699a      	ldr	r2, [r3, #24]
90008060:	0690      	lsls	r0, r2, #26
90008062:	d4d7      	bmi.n	90008014 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008064:	f7fe ff70 	bl	90006f48 <HAL_GetTick>
90008068:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000806c:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000806e:	2819      	cmp	r0, #25
90008070:	d9f5      	bls.n	9000805e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008072:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008074:	f04f 0a01 	mov.w	sl, #1
90008078:	e7cc      	b.n	90008014 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
9000807a:	f1ba 0f00 	cmp.w	sl, #0
9000807e:	f47f af69 	bne.w	90007f54 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008082:	e765      	b.n	90007f50 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90008084:	fe00e800 	.word	0xfe00e800

90008088 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008088:	2800      	cmp	r0, #0
9000808a:	d053      	beq.n	90008134 <HAL_I2C_Init+0xac>
{
9000808c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000808e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008092:	4604      	mov	r4, r0
90008094:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008098:	2b00      	cmp	r3, #0
9000809a:	d046      	beq.n	9000812a <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
9000809c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000809e:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900080a0:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900080a2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
900080a6:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900080a8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900080ac:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900080ae:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900080b2:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900080b4:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900080b6:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900080b8:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900080ba:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900080bc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
900080c0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900080c2:	d009      	beq.n	900080d8 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900080c4:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900080c8:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900080ca:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900080cc:	d107      	bne.n	900080de <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
900080ce:	685a      	ldr	r2, [r3, #4]
900080d0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
900080d4:	605a      	str	r2, [r3, #4]
900080d6:	e006      	b.n	900080e6 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900080d8:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
900080dc:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
900080de:	685a      	ldr	r2, [r3, #4]
900080e0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900080e4:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900080e6:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
900080e8:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900080ec:	4912      	ldr	r1, [pc, #72]	@ (90008138 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900080ee:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900080f0:	4301      	orrs	r1, r0
900080f2:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
900080f4:	68d9      	ldr	r1, [r3, #12]
900080f6:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
900080fa:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900080fc:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008100:	4302      	orrs	r2, r0
90008102:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008106:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000810a:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000810c:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000810e:	4301      	orrs	r1, r0
  return HAL_OK;
90008110:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008112:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008114:	6819      	ldr	r1, [r3, #0]
90008116:	f041 0101 	orr.w	r1, r1, #1
9000811a:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000811c:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000811e:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008122:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008124:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008128:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
9000812a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
9000812e:	f7fb febf 	bl	90003eb0 <HAL_I2C_MspInit>
90008132:	e7b3      	b.n	9000809c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008134:	2001      	movs	r0, #1
}
90008136:	4770      	bx	lr
90008138:	02008000 	.word	0x02008000

9000813c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000813c:	b1b0      	cbz	r0, 9000816c <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000813e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008140:	2324      	movs	r3, #36	@ 0x24
{
90008142:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90008144:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008148:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000814a:	6813      	ldr	r3, [r2, #0]
9000814c:	f023 0301 	bic.w	r3, r3, #1
90008150:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90008152:	f7fb feff 	bl	90003f54 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008156:	2300      	movs	r3, #0
90008158:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
9000815a:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000815c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008160:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008164:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008166:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
9000816a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000816c:	2001      	movs	r0, #1
}
9000816e:	4770      	bx	lr

90008170 <HAL_I2C_Mem_Write>:
{
90008170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008174:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008176:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000817a:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
9000817c:	2820      	cmp	r0, #32
{
9000817e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90008182:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90008184:	d11e      	bne.n	900081c4 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90008186:	4698      	mov	r8, r3
90008188:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9000818a:	b1bb      	cbz	r3, 900081bc <HAL_I2C_Mem_Write+0x4c>
9000818c:	f1ba 0f00 	cmp.w	sl, #0
90008190:	d014      	beq.n	900081bc <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90008192:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008196:	2b01      	cmp	r3, #1
90008198:	d014      	beq.n	900081c4 <HAL_I2C_Mem_Write+0x54>
9000819a:	2301      	movs	r3, #1
9000819c:	460d      	mov	r5, r1
9000819e:	4691      	mov	r9, r2
900081a0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900081a4:	f7fe fed0 	bl	90006f48 <HAL_GetTick>
900081a8:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900081aa:	4620      	mov	r0, r4
900081ac:	4631      	mov	r1, r6
900081ae:	f7ff fc93 	bl	90007ad8 <I2C_WaitOnFlagUntilTimeout.constprop.0>
900081b2:	b158      	cbz	r0, 900081cc <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
900081b4:	2001      	movs	r0, #1
}
900081b6:	b003      	add	sp, #12
900081b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900081bc:	f44f 7300 	mov.w	r3, #512	@ 0x200
900081c0:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900081c2:	e7f7      	b.n	900081b4 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
900081c4:	2002      	movs	r0, #2
}
900081c6:	b003      	add	sp, #12
900081c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900081cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900081ce:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900081d2:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
900081d4:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900081d6:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
900081d8:	4a5f      	ldr	r2, [pc, #380]	@ (90008358 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900081da:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900081de:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900081e0:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900081e2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900081e6:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900081e8:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900081ea:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900081ee:	684b      	ldr	r3, [r1, #4]
900081f0:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900081f2:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900081f6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900081fa:	4a58      	ldr	r2, [pc, #352]	@ (9000835c <HAL_I2C_Mem_Write+0x1ec>)
900081fc:	ea43 030b 	orr.w	r3, r3, fp
90008200:	431a      	orrs	r2, r3
90008202:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008204:	4632      	mov	r2, r6
90008206:	4639      	mov	r1, r7
90008208:	f7ff fd06 	bl	90007c18 <I2C_WaitOnTXISFlagUntilTimeout>
9000820c:	2800      	cmp	r0, #0
9000820e:	d176      	bne.n	900082fe <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008210:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008214:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008216:	d169      	bne.n	900082ec <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008218:	fa5f f289 	uxtb.w	r2, r9
9000821c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
9000821e:	463b      	mov	r3, r7
90008220:	2200      	movs	r2, #0
90008222:	2180      	movs	r1, #128	@ 0x80
90008224:	4620      	mov	r0, r4
90008226:	9600      	str	r6, [sp, #0]
90008228:	f7ff fdac 	bl	90007d84 <I2C_WaitOnFlagUntilTimeout>
9000822c:	2800      	cmp	r0, #0
9000822e:	d166      	bne.n	900082fe <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008230:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008232:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008234:	b29b      	uxth	r3, r3
90008236:	2bff      	cmp	r3, #255	@ 0xff
90008238:	d965      	bls.n	90008306 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
9000823a:	6853      	ldr	r3, [r2, #4]
9000823c:	4948      	ldr	r1, [pc, #288]	@ (90008360 <HAL_I2C_Mem_Write+0x1f0>)
9000823e:	400b      	ands	r3, r1
90008240:	4948      	ldr	r1, [pc, #288]	@ (90008364 <HAL_I2C_Mem_Write+0x1f4>)
90008242:	ea43 030b 	orr.w	r3, r3, fp
90008246:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008248:	23ff      	movs	r3, #255	@ 0xff
9000824a:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000824c:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000824e:	e003      	b.n	90008258 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90008250:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008252:	b29b      	uxth	r3, r3
90008254:	2b00      	cmp	r3, #0
90008256:	d069      	beq.n	9000832c <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008258:	4632      	mov	r2, r6
9000825a:	4639      	mov	r1, r7
9000825c:	4620      	mov	r0, r4
9000825e:	f7ff fcdb 	bl	90007c18 <I2C_WaitOnTXISFlagUntilTimeout>
90008262:	4602      	mov	r2, r0
90008264:	2800      	cmp	r0, #0
90008266:	d1a5      	bne.n	900081b4 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008268:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000826a:	6825      	ldr	r5, [r4, #0]
9000826c:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90008270:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008272:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90008274:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008278:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000827a:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000827c:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008280:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90008282:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008286:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90008288:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000828c:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
9000828e:	b289      	uxth	r1, r1
90008290:	2900      	cmp	r1, #0
90008292:	d0dd      	beq.n	90008250 <HAL_I2C_Mem_Write+0xe0>
90008294:	2b00      	cmp	r3, #0
90008296:	d1db      	bne.n	90008250 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008298:	463b      	mov	r3, r7
9000829a:	2180      	movs	r1, #128	@ 0x80
9000829c:	4620      	mov	r0, r4
9000829e:	9600      	str	r6, [sp, #0]
900082a0:	f7ff fd70 	bl	90007d84 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900082a4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900082a8:	2800      	cmp	r0, #0
900082aa:	d183      	bne.n	900081b4 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900082ac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900082ae:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90008360 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900082b2:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900082b4:	492b      	ldr	r1, [pc, #172]	@ (90008364 <HAL_I2C_Mem_Write+0x1f4>)
900082b6:	4670      	mov	r0, lr
900082b8:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900082ba:	4563      	cmp	r3, ip
900082bc:	d909      	bls.n	900082d2 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900082be:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900082c0:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900082c4:	ea03 030e 	and.w	r3, r3, lr
900082c8:	ea43 030b 	orr.w	r3, r3, fp
900082cc:	4319      	orrs	r1, r3
900082ce:	6051      	str	r1, [r2, #4]
}
900082d0:	e7be      	b.n	90008250 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
900082d2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900082d4:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900082d6:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900082d8:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900082da:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900082dc:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900082de:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900082e2:	430b      	orrs	r3, r1
900082e4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900082e8:	6053      	str	r3, [r2, #4]
}
900082ea:	e7b1      	b.n	90008250 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900082ec:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900082f0:	4639      	mov	r1, r7
900082f2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900082f4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900082f6:	4632      	mov	r2, r6
900082f8:	f7ff fc8e 	bl	90007c18 <I2C_WaitOnTXISFlagUntilTimeout>
900082fc:	b188      	cbz	r0, 90008322 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
900082fe:	2300      	movs	r3, #0
90008300:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008304:	e756      	b.n	900081b4 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90008306:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008308:	4815      	ldr	r0, [pc, #84]	@ (90008360 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
9000830a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000830c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000830e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008310:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008312:	4001      	ands	r1, r0
90008314:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90008318:	430b      	orrs	r3, r1
9000831a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000831e:	6053      	str	r3, [r2, #4]
}
90008320:	e79a      	b.n	90008258 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008322:	fa5f f289 	uxtb.w	r2, r9
90008326:	6823      	ldr	r3, [r4, #0]
90008328:	629a      	str	r2, [r3, #40]	@ 0x28
9000832a:	e778      	b.n	9000821e <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000832c:	4632      	mov	r2, r6
9000832e:	4639      	mov	r1, r7
90008330:	4620      	mov	r0, r4
90008332:	f7ff fdf3 	bl	90007f1c <I2C_WaitOnSTOPFlagUntilTimeout>
90008336:	2800      	cmp	r0, #0
90008338:	f47f af3c 	bne.w	900081b4 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000833c:	6823      	ldr	r3, [r4, #0]
9000833e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008340:	4d09      	ldr	r5, [pc, #36]	@ (90008368 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008342:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008344:	685a      	ldr	r2, [r3, #4]
90008346:	402a      	ands	r2, r5
90008348:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000834a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000834e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008352:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90008356:	e72e      	b.n	900081b6 <HAL_I2C_Mem_Write+0x46>
90008358:	fc009800 	.word	0xfc009800
9000835c:	01002000 	.word	0x01002000
90008360:	fc009c00 	.word	0xfc009c00
90008364:	01ff0000 	.word	0x01ff0000
90008368:	fe00e800 	.word	0xfe00e800

9000836c <HAL_I2C_Mem_Read>:
{
9000836c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008370:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008372:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008376:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90008378:	2820      	cmp	r0, #32
{
9000837a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
9000837e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008380:	d11e      	bne.n	900083c0 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90008382:	4698      	mov	r8, r3
90008384:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008386:	b1bb      	cbz	r3, 900083b8 <HAL_I2C_Mem_Read+0x4c>
90008388:	f1ba 0f00 	cmp.w	sl, #0
9000838c:	d014      	beq.n	900083b8 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
9000838e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008392:	2b01      	cmp	r3, #1
90008394:	d014      	beq.n	900083c0 <HAL_I2C_Mem_Read+0x54>
90008396:	2301      	movs	r3, #1
90008398:	460d      	mov	r5, r1
9000839a:	4691      	mov	r9, r2
9000839c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900083a0:	f7fe fdd2 	bl	90006f48 <HAL_GetTick>
900083a4:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900083a6:	4620      	mov	r0, r4
900083a8:	4631      	mov	r1, r6
900083aa:	f7ff fb95 	bl	90007ad8 <I2C_WaitOnFlagUntilTimeout.constprop.0>
900083ae:	b158      	cbz	r0, 900083c8 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
900083b0:	2001      	movs	r0, #1
}
900083b2:	b002      	add	sp, #8
900083b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900083b8:	f44f 7300 	mov.w	r3, #512	@ 0x200
900083bc:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900083be:	e7f7      	b.n	900083b0 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
900083c0:	2002      	movs	r0, #2
}
900083c2:	b002      	add	sp, #8
900083c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900083c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900083ca:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
900083ce:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
900083d0:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900083d2:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
900083d4:	495f      	ldr	r1, [pc, #380]	@ (90008554 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900083d6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900083da:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900083dc:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900083de:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900083e2:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900083e4:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900083e6:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900083ea:	6853      	ldr	r3, [r2, #4]
900083ec:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900083ee:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900083f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900083f6:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
900083f8:	432b      	orrs	r3, r5
900083fa:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900083fe:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008400:	4632      	mov	r2, r6
90008402:	f7ff fc09 	bl	90007c18 <I2C_WaitOnTXISFlagUntilTimeout>
90008406:	2800      	cmp	r0, #0
90008408:	d177      	bne.n	900084fa <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000840a:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000840e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008410:	d16a      	bne.n	900084e8 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008412:	fa5f f289 	uxtb.w	r2, r9
90008416:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90008418:	463b      	mov	r3, r7
9000841a:	2200      	movs	r2, #0
9000841c:	2140      	movs	r1, #64	@ 0x40
9000841e:	4620      	mov	r0, r4
90008420:	9600      	str	r6, [sp, #0]
90008422:	f7ff fcaf 	bl	90007d84 <I2C_WaitOnFlagUntilTimeout>
90008426:	2800      	cmp	r0, #0
90008428:	d167      	bne.n	900084fa <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000842a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000842c:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000842e:	b29b      	uxth	r3, r3
90008430:	2bff      	cmp	r3, #255	@ 0xff
90008432:	d966      	bls.n	90008502 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008434:	6853      	ldr	r3, [r2, #4]
90008436:	4947      	ldr	r1, [pc, #284]	@ (90008554 <HAL_I2C_Mem_Read+0x1e8>)
90008438:	400b      	ands	r3, r1
9000843a:	4947      	ldr	r1, [pc, #284]	@ (90008558 <HAL_I2C_Mem_Read+0x1ec>)
9000843c:	432b      	orrs	r3, r5
9000843e:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008440:	23ff      	movs	r3, #255	@ 0xff
90008442:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008444:	6051      	str	r1, [r2, #4]
}
90008446:	e003      	b.n	90008450 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
90008448:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000844a:	b29b      	uxth	r3, r3
9000844c:	2b00      	cmp	r3, #0
9000844e:	d06b      	beq.n	90008528 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90008450:	463b      	mov	r3, r7
90008452:	2200      	movs	r2, #0
90008454:	2104      	movs	r1, #4
90008456:	4620      	mov	r0, r4
90008458:	9600      	str	r6, [sp, #0]
9000845a:	f7ff fc93 	bl	90007d84 <I2C_WaitOnFlagUntilTimeout>
9000845e:	2800      	cmp	r0, #0
90008460:	d1a6      	bne.n	900083b0 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008462:	6821      	ldr	r1, [r4, #0]
90008464:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008466:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90008468:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
9000846a:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
9000846e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008470:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008474:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90008476:	3101      	adds	r1, #1
      hi2c->XferCount--;
90008478:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
9000847c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000847e:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008480:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008484:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008486:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008488:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000848a:	b289      	uxth	r1, r1
9000848c:	2900      	cmp	r1, #0
9000848e:	d0db      	beq.n	90008448 <HAL_I2C_Mem_Read+0xdc>
90008490:	2b00      	cmp	r3, #0
90008492:	d1d9      	bne.n	90008448 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008494:	4602      	mov	r2, r0
90008496:	463b      	mov	r3, r7
90008498:	2180      	movs	r1, #128	@ 0x80
9000849a:	4620      	mov	r0, r4
9000849c:	9600      	str	r6, [sp, #0]
9000849e:	f7ff fc71 	bl	90007d84 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900084a2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900084a6:	2800      	cmp	r0, #0
900084a8:	d182      	bne.n	900083b0 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900084aa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900084ac:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 90008568 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900084b0:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900084b2:	492a      	ldr	r1, [pc, #168]	@ (9000855c <HAL_I2C_Mem_Read+0x1f0>)
900084b4:	4670      	mov	r0, lr
900084b6:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900084b8:	4563      	cmp	r3, ip
900084ba:	d908      	bls.n	900084ce <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900084bc:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900084be:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900084c2:	ea03 030e 	and.w	r3, r3, lr
900084c6:	432b      	orrs	r3, r5
900084c8:	4319      	orrs	r1, r3
900084ca:	6051      	str	r1, [r2, #4]
}
900084cc:	e7bc      	b.n	90008448 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
900084ce:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900084d0:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900084d2:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900084d4:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900084d6:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900084d8:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900084da:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900084de:	430b      	orrs	r3, r1
900084e0:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900084e4:	6053      	str	r3, [r2, #4]
}
900084e6:	e7af      	b.n	90008448 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900084e8:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900084ec:	4639      	mov	r1, r7
900084ee:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900084f0:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900084f2:	4632      	mov	r2, r6
900084f4:	f7ff fb90 	bl	90007c18 <I2C_WaitOnTXISFlagUntilTimeout>
900084f8:	b188      	cbz	r0, 9000851e <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
900084fa:	2300      	movs	r3, #0
900084fc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008500:	e756      	b.n	900083b0 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90008502:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008504:	4813      	ldr	r0, [pc, #76]	@ (90008554 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90008506:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008508:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000850a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000850c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000850e:	4001      	ands	r1, r0
90008510:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90008514:	430b      	orrs	r3, r1
90008516:	4912      	ldr	r1, [pc, #72]	@ (90008560 <HAL_I2C_Mem_Read+0x1f4>)
90008518:	4319      	orrs	r1, r3
9000851a:	6051      	str	r1, [r2, #4]
}
9000851c:	e798      	b.n	90008450 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000851e:	fa5f f289 	uxtb.w	r2, r9
90008522:	6823      	ldr	r3, [r4, #0]
90008524:	629a      	str	r2, [r3, #40]	@ 0x28
90008526:	e777      	b.n	90008418 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008528:	4632      	mov	r2, r6
9000852a:	4639      	mov	r1, r7
9000852c:	4620      	mov	r0, r4
9000852e:	f7ff fcf5 	bl	90007f1c <I2C_WaitOnSTOPFlagUntilTimeout>
90008532:	2800      	cmp	r0, #0
90008534:	f47f af3c 	bne.w	900083b0 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008538:	6823      	ldr	r3, [r4, #0]
9000853a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000853c:	4d09      	ldr	r5, [pc, #36]	@ (90008564 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000853e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008540:	685a      	ldr	r2, [r3, #4]
90008542:	402a      	ands	r2, r5
90008544:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008546:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000854a:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000854e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90008552:	e72e      	b.n	900083b2 <HAL_I2C_Mem_Read+0x46>
90008554:	fc009800 	.word	0xfc009800
90008558:	01ff2400 	.word	0x01ff2400
9000855c:	01ff0000 	.word	0x01ff0000
90008560:	02002400 	.word	0x02002400
90008564:	fe00e800 	.word	0xfe00e800
90008568:	fc009c00 	.word	0xfc009c00

9000856c <HAL_I2C_GetState>:
  return hi2c->State;
9000856c:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90008570:	4770      	bx	lr
90008572:	bf00      	nop

90008574 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008574:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
90008576:	4770      	bx	lr

90008578 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008578:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
9000857c:	2a20      	cmp	r2, #32
9000857e:	d123      	bne.n	900085c8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008580:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008584:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008588:	4603      	mov	r3, r0
9000858a:	2a01      	cmp	r2, #1
9000858c:	d01c      	beq.n	900085c8 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000858e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008590:	2024      	movs	r0, #36	@ 0x24
{
90008592:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008594:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008598:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000859c:	6810      	ldr	r0, [r2, #0]
9000859e:	f020 0001 	bic.w	r0, r0, #1
900085a2:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
900085a4:	6810      	ldr	r0, [r2, #0]
900085a6:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
900085aa:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
900085ac:	6810      	ldr	r0, [r2, #0]
900085ae:	4301      	orrs	r1, r0

    return HAL_OK;
900085b0:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
900085b2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900085b4:	6811      	ldr	r1, [r2, #0]
900085b6:	f041 0101 	orr.w	r1, r1, #1
900085ba:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900085bc:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900085c0:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900085c4:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900085c8:	2002      	movs	r0, #2
}
900085ca:	4770      	bx	lr

900085cc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900085cc:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900085d0:	2a20      	cmp	r2, #32
900085d2:	d122      	bne.n	9000861a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
900085d4:	4603      	mov	r3, r0
{
900085d6:	b500      	push	{lr}
900085d8:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900085dc:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900085e0:	2a01      	cmp	r2, #1
900085e2:	d01c      	beq.n	9000861e <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900085e4:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900085e6:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900085e8:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
900085ec:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
900085f0:	6810      	ldr	r0, [r2, #0]
900085f2:	f020 0001 	bic.w	r0, r0, #1
900085f6:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900085f8:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900085fa:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900085fe:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008602:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008604:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008606:	6811      	ldr	r1, [r2, #0]
90008608:	f041 0101 	orr.w	r1, r1, #1
9000860c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000860e:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008612:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008616:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000861a:	2002      	movs	r0, #2
}
9000861c:	4770      	bx	lr
    __HAL_LOCK(hi2c);
9000861e:	2002      	movs	r0, #2
}
90008620:	f85d fb04 	ldr.w	pc, [sp], #4

90008624 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008628:	4681      	mov	r9, r0
9000862a:	460d      	mov	r5, r1
9000862c:	4614      	mov	r4, r2
9000862e:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008630:	7806      	ldrb	r6, [r0, #0]
90008632:	2701      	movs	r7, #1
  p = 0;
90008634:	f04f 0800 	mov.w	r8, #0
90008638:	e006      	b.n	90008648 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000863a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000863e:	eb06 0308 	add.w	r3, r6, r8
90008642:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90008646:	d83c      	bhi.n	900086c2 <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008648:	4632      	mov	r2, r6
9000864a:	4639      	mov	r1, r7
9000864c:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
90008650:	b116      	cbz	r6, 90008658 <JPEG_Bits_To_SizeCodes+0x34>
90008652:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008654:	f021 fa94 	bl	90029b80 <memset>
  for (l = 0; l < 16UL; l++)
90008658:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000865a:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000865e:	d1ec      	bne.n	9000863a <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
90008660:	f04f 0900 	mov.w	r9, #0
90008664:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
90008668:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000866c:	7829      	ldrb	r1, [r5, #0]
9000866e:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90008670:	b321      	cbz	r1, 900086bc <JPEG_Bits_To_SizeCodes+0x98>
90008672:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008676:	2701      	movs	r7, #1
  p = 0;
90008678:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
9000867a:	4291      	cmp	r1, r2
9000867c:	d124      	bne.n	900086c8 <JPEG_Bits_To_SizeCodes+0xa4>
9000867e:	eb06 0008 	add.w	r0, r6, r8
90008682:	eb05 0c06 	add.w	ip, r5, r6
90008686:	464b      	mov	r3, r9
90008688:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
9000868c:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90008690:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90008692:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008696:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008698:	4596      	cmp	lr, r2
9000869a:	d0f7      	beq.n	9000868c <JPEG_Bits_To_SizeCodes+0x68>
9000869c:	3601      	adds	r6, #1
9000869e:	eba6 0609 	sub.w	r6, r6, r9
      p++;
900086a2:	440e      	add	r6, r1
    if(si > 31UL)
900086a4:	2a1f      	cmp	r2, #31
900086a6:	d80c      	bhi.n	900086c2 <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900086a8:	fa07 f102 	lsl.w	r1, r7, r2
900086ac:	4299      	cmp	r1, r3
900086ae:	d908      	bls.n	900086c2 <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
900086b0:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
900086b2:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
900086b6:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
900086b8:	2900      	cmp	r1, #0
900086ba:	d1de      	bne.n	9000867a <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
900086bc:	2000      	movs	r0, #0
}
900086be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
900086c2:	2001      	movs	r0, #1
}
900086c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
900086c8:	464b      	mov	r3, r9
900086ca:	e7eb      	b.n	900086a4 <JPEG_Bits_To_SizeCodes+0x80>

900086cc <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
900086cc:	b5f0      	push	{r4, r5, r6, r7, lr}
900086ce:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
900086d2:	460d      	mov	r5, r1
900086d4:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900086d6:	ab01      	add	r3, sp, #4
900086d8:	aa43      	add	r2, sp, #268	@ 0x10c
900086da:	a902      	add	r1, sp, #8
900086dc:	f7ff ffa2 	bl	90008624 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
900086e0:	b9d0      	cbnz	r0, 90008718 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
900086e2:	9f01      	ldr	r7, [sp, #4]
900086e4:	b1c7      	cbz	r7, 90008718 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
900086e6:	370f      	adds	r7, #15
900086e8:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
900086ec:	a902      	add	r1, sp, #8
900086ee:	f104 0c0f 	add.w	ip, r4, #15
900086f2:	4427      	add	r7, r4
900086f4:	e009      	b.n	9000870a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900086f6:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
900086fa:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900086fc:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008700:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008704:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008706:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008708:	d006      	beq.n	90008718 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000870a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000870e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008710:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008714:	d9ef      	bls.n	900086f6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008716:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008718:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
9000871c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000871e:	bf00      	nop

90008720 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008724:	6804      	ldr	r4, [r0, #0]
{
90008726:	b093      	sub	sp, #76	@ 0x4c
90008728:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000872a:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
9000872e:	429a      	cmp	r2, r3
90008730:	f000 809d 	beq.w	9000886e <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008734:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90008738:	429a      	cmp	r2, r3
9000873a:	d003      	beq.n	90008744 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000873c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000873e:	b013      	add	sp, #76	@ 0x4c
90008740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008744:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008748:	a903      	add	r1, sp, #12
9000874a:	f7ff ffbf 	bl	900086cc <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000874e:	2800      	cmp	r0, #0
90008750:	d1f5      	bne.n	9000873e <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90008752:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008756:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000875a:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000875e:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008760:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008764:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008766:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000876a:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000876e:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90008772:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008776:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
9000877a:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000877c:	f89d 9015 	ldrb.w	r9, [sp, #21]
90008780:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008784:	f89d c014 	ldrb.w	ip, [sp, #20]
90008788:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000878c:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008790:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008794:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008798:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000879a:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000879e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
900087a2:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
900087a6:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087aa:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ae:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087b2:	f89d 7011 	ldrb.w	r7, [sp, #17]
900087b6:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ba:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
900087bc:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087c0:	f89d 2010 	ldrb.w	r2, [sp, #16]
900087c4:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087c8:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
900087ca:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ce:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087d0:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
900087d4:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087d8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087dc:	f89d 600f 	ldrb.w	r6, [sp, #15]
900087e0:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087e4:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087e8:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ea:	9b01      	ldr	r3, [sp, #4]
900087ec:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087f0:	f89d 500d 	ldrb.w	r5, [sp, #13]
900087f4:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087f8:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900087fc:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008800:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008802:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008806:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000880a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9000880e:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008812:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008816:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000881a:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
9000881e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008822:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008826:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000882a:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
9000882e:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008830:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90008834:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008836:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000883a:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000883e:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90008842:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008844:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008848:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000884a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000884e:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008852:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008856:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008858:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000885c:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008860:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008864:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008868:	b013      	add	sp, #76	@ 0x4c
9000886a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000886e:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90008872:	e769      	b.n	90008748 <JPEG_Set_HuffDC_Mem+0x28>

90008874 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008874:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008878:	6804      	ldr	r4, [r0, #0]
{
9000887a:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
9000887e:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008880:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90008884:	429a      	cmp	r2, r3
90008886:	d041      	beq.n	9000890c <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008888:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
9000888c:	429a      	cmp	r2, r3
9000888e:	d004      	beq.n	9000889a <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008890:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008892:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008896:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000889a:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000889e:	4628      	mov	r0, r5
900088a0:	466b      	mov	r3, sp
900088a2:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
900088a6:	a901      	add	r1, sp, #4
900088a8:	f7ff febc 	bl	90008624 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
900088ac:	2800      	cmp	r0, #0
900088ae:	d1f0      	bne.n	90008892 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
900088b0:	9b00      	ldr	r3, [sp, #0]
900088b2:	b373      	cbz	r3, 90008912 <JPEG_Set_HuffAC_Mem+0x9e>
900088b4:	330f      	adds	r3, #15
900088b6:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
900088ba:	af01      	add	r7, sp, #4
900088bc:	f105 020f 	add.w	r2, r5, #15
900088c0:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900088c4:	ae42      	add	r6, sp, #264	@ 0x108
900088c6:	e011      	b.n	900088ec <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
900088c8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
900088cc:	2ba1      	cmp	r3, #161	@ 0xa1
900088ce:	d8df      	bhi.n	90008890 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900088d0:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900088d4:	eb06 0883 	add.w	r8, r6, r3, lsl #2
900088d8:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
900088dc:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900088de:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900088e2:	46b1      	mov	r9, r6
900088e4:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900088e8:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
900088ea:	d014      	beq.n	90008916 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
900088ec:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
900088f0:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
900088f2:	2900      	cmp	r1, #0
900088f4:	d0ec      	beq.n	900088d0 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
900088f6:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900088f8:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900088fc:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900088fe:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90008902:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008906:	d1df      	bne.n	900088c8 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90008908:	23a1      	movs	r3, #161	@ 0xa1
9000890a:	e7e1      	b.n	900088d0 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000890c:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90008910:	e7c5      	b.n	9000889e <JPEG_Set_HuffAC_Mem+0x2a>
90008912:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90008916:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000891a:	4a1a      	ldr	r2, [pc, #104]	@ (90008984 <JPEG_Set_HuffAC_Mem+0x110>)
9000891c:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90008920:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90008922:	6023      	str	r3, [r4, #0]
90008924:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90008928:	6063      	str	r3, [r4, #4]
9000892a:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000892e:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008930:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90008934:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90008936:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000893a:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000893e:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90008940:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90008944:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90008946:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000894a:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000894c:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008950:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008954:	0212      	lsls	r2, r2, #8
90008956:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000895a:	021b      	lsls	r3, r3, #8
9000895c:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008960:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90008964:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008966:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000896a:	433a      	orrs	r2, r7
    while (i > 1UL)
9000896c:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000896e:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90008972:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008976:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000897a:	d1e7      	bne.n	9000894c <JPEG_Set_HuffAC_Mem+0xd8>
}
9000897c:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008980:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008984:	0fd10fd0 	.word	0x0fd10fd0

90008988 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008988:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000898a:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000898c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90008990:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008992:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008994:	f002 0203 	and.w	r2, r2, #3
90008998:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000899a:	685a      	ldr	r2, [r3, #4]
9000899c:	bf0c      	ite	eq
9000899e:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
900089a2:	f022 0208 	bicne.w	r2, r2, #8
900089a6:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900089a8:	681a      	ldr	r2, [r3, #0]
900089aa:	f022 0201 	bic.w	r2, r2, #1
900089ae:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900089b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089b2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900089b6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900089b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089ba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900089be:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900089c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089c2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900089c6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900089c8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900089ca:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900089ce:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
900089d0:	681a      	ldr	r2, [r3, #0]
900089d2:	f042 0201 	orr.w	r2, r2, #1
900089d6:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900089d8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900089da:	f002 020c 	and.w	r2, r2, #12
900089de:	2a08      	cmp	r2, #8
900089e0:	d00a      	beq.n	900089f8 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900089e2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900089e4:	f002 020c 	and.w	r2, r2, #12
900089e8:	2a0c      	cmp	r2, #12
900089ea:	d000      	beq.n	900089ee <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
900089ec:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900089ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089f0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900089f4:	631a      	str	r2, [r3, #48]	@ 0x30
}
900089f6:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
900089f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089fa:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
900089fe:	631a      	str	r2, [r3, #48]	@ 0x30
90008a00:	4770      	bx	lr
90008a02:	bf00      	nop

90008a04 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008a04:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008a06:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90008a08:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008a0a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90008a0c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008a0e:	42aa      	cmp	r2, r5
90008a10:	d32a      	bcc.n	90008a68 <JPEG_DMA_StartProcess+0x64>
90008a12:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008a14:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008a16:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008a18:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008a1a:	42b3      	cmp	r3, r6
90008a1c:	d324      	bcc.n	90008a68 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008a1e:	4f19      	ldr	r7, [pc, #100]	@ (90008a84 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008a20:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90008a90 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008a24:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008a26:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008a2a:	4917      	ldr	r1, [pc, #92]	@ (90008a88 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90008a2c:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008a2e:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008a30:	4916      	ldr	r1, [pc, #88]	@ (90008a8c <JPEG_DMA_StartProcess+0x88>)
90008a32:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90008a34:	b1a5      	cbz	r5, 90008a60 <JPEG_DMA_StartProcess+0x5c>
90008a36:	b19e      	cbz	r6, 90008a60 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008a38:	fbb2 f1f5 	udiv	r1, r2, r5
90008a3c:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008a40:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008a42:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008a44:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008a46:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008a48:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90008a4a:	fbb3 f2f6 	udiv	r2, r3, r6
90008a4e:	fb06 3212 	mls	r2, r6, r2, r3
90008a52:	1a9b      	subs	r3, r3, r2
90008a54:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008a56:	9500      	str	r5, [sp, #0]
90008a58:	69e2      	ldr	r2, [r4, #28]
90008a5a:	f001 fc0f 	bl	9000a27c <HAL_MDMA_Start_IT>
90008a5e:	b130      	cbz	r0, 90008a6e <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008a60:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008a62:	f043 0304 	orr.w	r3, r3, #4
90008a66:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90008a68:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90008a6a:	b003      	add	sp, #12
90008a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008a6e:	6822      	ldr	r2, [r4, #0]
90008a70:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008a72:	69a1      	ldr	r1, [r4, #24]
90008a74:	3240      	adds	r2, #64	@ 0x40
90008a76:	9500      	str	r5, [sp, #0]
90008a78:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008a7a:	f001 fbff 	bl	9000a27c <HAL_MDMA_Start_IT>
90008a7e:	2800      	cmp	r0, #0
90008a80:	d0f3      	beq.n	90008a6a <JPEG_DMA_StartProcess+0x66>
90008a82:	e7ed      	b.n	90008a60 <JPEG_DMA_StartProcess+0x5c>
90008a84:	90009081 	.word	0x90009081
90008a88:	900092f5 	.word	0x900092f5
90008a8c:	90009375 	.word	0x90009375
90008a90:	900090ad 	.word	0x900090ad

90008a94 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008a94:	6803      	ldr	r3, [r0, #0]
90008a96:	685a      	ldr	r2, [r3, #4]
90008a98:	f002 0203 	and.w	r2, r2, #3
90008a9c:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a9e:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90008aa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90008aa4:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008aa6:	f000 80a0 	beq.w	90008bea <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90008aaa:	f012 0203 	ands.w	r2, r2, #3
90008aae:	d177      	bne.n	90008ba0 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008ab0:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008ab2:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008ab6:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008ab8:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008aba:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008abc:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008ac0:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008ac4:	2100      	movs	r1, #0
90008ac6:	4a5e      	ldr	r2, [pc, #376]	@ (90008c40 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008ac8:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90008acc:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90008ad0:	2600      	movs	r6, #0
90008ad2:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ad6:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008ada:	f241 3188 	movw	r1, #5000	@ 0x1388
90008ade:	e033      	b.n	90008b48 <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ae0:	f892 8001 	ldrb.w	r8, [r2, #1]
90008ae4:	fb0e f707 	mul.w	r7, lr, r7
90008ae8:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008aea:	f815 8008 	ldrb.w	r8, [r5, r8]
90008aee:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008af2:	2f64      	cmp	r7, #100	@ 0x64
90008af4:	d96a      	bls.n	90008bcc <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
90008af6:	fbb1 f7f7 	udiv	r7, r1, r7
90008afa:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008afc:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008b00:	2f01      	cmp	r7, #1
90008b02:	d03d      	beq.n	90008b80 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008b04:	f892 8002 	ldrb.w	r8, [r2, #2]
90008b08:	fb0e f707 	mul.w	r7, lr, r7
90008b0c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008b0e:	f815 8008 	ldrb.w	r8, [r5, r8]
90008b12:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008b16:	2f64      	cmp	r7, #100	@ 0x64
90008b18:	d953      	bls.n	90008bc2 <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
90008b1a:	fbb1 f7f7 	udiv	r7, r1, r7
90008b1e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b20:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008b22:	2b01      	cmp	r3, #1
90008b24:	d030      	beq.n	90008b88 <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008b26:	78d7      	ldrb	r7, [r2, #3]
90008b28:	fb0e f303 	mul.w	r3, lr, r3
90008b2c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008b2e:	5def      	ldrb	r7, [r5, r7]
90008b30:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008b34:	2b64      	cmp	r3, #100	@ 0x64
90008b36:	d953      	bls.n	90008be0 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
90008b38:	fbb1 f3f3 	udiv	r3, r1, r3
90008b3c:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b3e:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008b40:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b44:	42a2      	cmp	r2, r4
90008b46:	d025      	beq.n	90008b94 <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
90008b48:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b4c:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008b4e:	2f01      	cmp	r7, #1
90008b50:	d035      	beq.n	90008bbe <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008b52:	f892 8000 	ldrb.w	r8, [r2]
90008b56:	fb0e f707 	mul.w	r7, lr, r7
90008b5a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008b5c:	f815 8008 	ldrb.w	r8, [r5, r8]
90008b60:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008b64:	2f64      	cmp	r7, #100	@ 0x64
90008b66:	d936      	bls.n	90008bd6 <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
90008b68:	fbb1 f7f7 	udiv	r7, r1, r7
90008b6c:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b6e:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008b72:	2f01      	cmp	r7, #1
90008b74:	d1b4      	bne.n	90008ae0 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b76:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008b7a:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b7c:	2f01      	cmp	r7, #1
90008b7e:	d1c1      	bne.n	90008b04 <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b80:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008b82:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b84:	2b01      	cmp	r3, #1
90008b86:	d1ce      	bne.n	90008b26 <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b88:	3204      	adds	r2, #4
        quality += 100UL;
90008b8a:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90008b8c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b90:	42a2      	cmp	r2, r4
90008b92:	d1d9      	bne.n	90008b48 <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
90008b94:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008b96:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008b98:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008b9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008ba0:	685a      	ldr	r2, [r3, #4]
90008ba2:	f002 0203 	and.w	r2, r2, #3
90008ba6:	2a03      	cmp	r2, #3
90008ba8:	d147      	bne.n	90008c3a <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008baa:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008bac:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008bae:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008bb0:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008bb4:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008bb8:	68da      	ldr	r2, [r3, #12]
90008bba:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008bbc:	e01d      	b.n	90008bfa <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
90008bbe:	3664      	adds	r6, #100	@ 0x64
90008bc0:	e7d5      	b.n	90008b6e <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90008bc2:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008bc6:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008bca:	e7a9      	b.n	90008b20 <HAL_JPEG_GetInfo.part.0+0x8c>
90008bcc:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008bd0:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008bd4:	e792      	b.n	90008afc <HAL_JPEG_GetInfo.part.0+0x68>
90008bd6:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008bda:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008bde:	e7c6      	b.n	90008b6e <HAL_JPEG_GetInfo.part.0+0xda>
90008be0:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008be4:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008be8:	e7a9      	b.n	90008b3e <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008bea:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008bec:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008bee:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008bf2:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008bf6:	68da      	ldr	r2, [r3, #12]
90008bf8:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008bfa:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008bfc:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008bfe:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008c02:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008c06:	699a      	ldr	r2, [r3, #24]
90008c08:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008c0c:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008c0e:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008c12:	d105      	bne.n	90008c20 <HAL_JPEG_GetInfo.part.0+0x18c>
90008c14:	b927      	cbnz	r7, 90008c20 <HAL_JPEG_GetInfo.part.0+0x18c>
90008c16:	2a00      	cmp	r2, #0
90008c18:	f47f af54 	bne.w	90008ac4 <HAL_JPEG_GetInfo.part.0+0x30>
90008c1c:	2102      	movs	r1, #2
90008c1e:	e752      	b.n	90008ac6 <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008c20:	4321      	orrs	r1, r4
90008c22:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
90008c26:	f43f af4d 	beq.w	90008ac4 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008c2a:	433a      	orrs	r2, r7
90008c2c:	f47f af4a 	bne.w	90008ac4 <HAL_JPEG_GetInfo.part.0+0x30>
90008c30:	2e03      	cmp	r6, #3
90008c32:	f47f af47 	bne.w	90008ac4 <HAL_JPEG_GetInfo.part.0+0x30>
90008c36:	2101      	movs	r1, #1
90008c38:	e745      	b.n	90008ac6 <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
90008c3a:	2001      	movs	r0, #1
}
90008c3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008c40:	9002cfb8 	.word	0x9002cfb8

90008c44 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90008c44:	2800      	cmp	r0, #0
90008c46:	f000 8108 	beq.w	90008e5a <HAL_JPEG_Init+0x216>
{
90008c4a:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90008c4c:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90008c50:	4605      	mov	r5, r0
90008c52:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008c56:	2b00      	cmp	r3, #0
90008c58:	f000 80fa 	beq.w	90008e50 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
90008c5c:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008c5e:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90008c60:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008c62:	497f      	ldr	r1, [pc, #508]	@ (90008e60 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008c64:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90008c68:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c6a:	f042 0201 	orr.w	r2, r2, #1
90008c6e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008c70:	6822      	ldr	r2, [r4, #0]
90008c72:	f022 0201 	bic.w	r2, r2, #1
90008c76:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008c78:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c7a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008c7e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008c80:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c82:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008c86:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008c88:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c8a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c8e:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008c90:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008c92:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008c96:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008c98:	4a72      	ldr	r2, [pc, #456]	@ (90008e64 <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008c9a:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c9c:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90008c9e:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008ca0:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008ca4:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90008ca8:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90008cac:	4b6e      	ldr	r3, [pc, #440]	@ (90008e68 <HAL_JPEG_Init+0x224>)
90008cae:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90008cb2:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cb6:	496d      	ldr	r1, [pc, #436]	@ (90008e6c <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008cb8:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cbc:	4b6c      	ldr	r3, [pc, #432]	@ (90008e70 <HAL_JPEG_Init+0x22c>)
90008cbe:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90008cc2:	4a6c      	ldr	r2, [pc, #432]	@ (90008e74 <HAL_JPEG_Init+0x230>)
90008cc4:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008cc8:	4b6b      	ldr	r3, [pc, #428]	@ (90008e78 <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cca:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008cce:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90008cd2:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90008cd6:	4969      	ldr	r1, [pc, #420]	@ (90008e7c <HAL_JPEG_Init+0x238>)
90008cd8:	4b69      	ldr	r3, [pc, #420]	@ (90008e80 <HAL_JPEG_Init+0x23c>)
90008cda:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90008cde:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008ce2:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008ce6:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008cea:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
90008cee:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90008cf2:	4a64      	ldr	r2, [pc, #400]	@ (90008e84 <HAL_JPEG_Init+0x240>)
90008cf4:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008cf8:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90008cfc:	4303      	orrs	r3, r0
  *address = value;
90008cfe:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008d02:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90008d06:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008d08:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008d0c:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90008d0e:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008d12:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90008d16:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008d18:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008d1c:	ea43 030c 	orr.w	r3, r3, ip
90008d20:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008d24:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008d28:	d1eb      	bne.n	90008d02 <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
90008d2a:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d2e:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90008d32:	4955      	ldr	r1, [pc, #340]	@ (90008e88 <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d34:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90008d36:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90008d38:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90008d3c:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90008d40:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008d44:	400b      	ands	r3, r1
  *address = value;
90008d46:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d4a:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90008d4e:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90008d52:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008d56:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90008d5a:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008d5e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90008d60:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008d64:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90008d68:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008d6c:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008d6e:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d70:	4b46      	ldr	r3, [pc, #280]	@ (90008e8c <HAL_JPEG_Init+0x248>)
  *address = value;
90008d72:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008d76:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d7a:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90008d7e:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90008d82:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90008d86:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008d8a:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90008d8c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90008d90:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90008d94:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90008d98:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d9a:	493d      	ldr	r1, [pc, #244]	@ (90008e90 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008d9c:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d9e:	4b3d      	ldr	r3, [pc, #244]	@ (90008e94 <HAL_JPEG_Init+0x250>)
  *address = value;
90008da0:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008da4:	4a3c      	ldr	r2, [pc, #240]	@ (90008e98 <HAL_JPEG_Init+0x254>)
90008da6:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90008daa:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008dae:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90008db2:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90008db6:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008dba:	4a38      	ldr	r2, [pc, #224]	@ (90008e9c <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90008dbc:	b29b      	uxth	r3, r3
90008dbe:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008dc2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008dc6:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008dca:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90008dce:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008dd0:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008dd4:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90008dd6:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008dda:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90008dde:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008de0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90008de4:	ea43 030c 	orr.w	r3, r3, ip
90008de8:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008dec:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008df0:	d1eb      	bne.n	90008dca <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90008df2:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90008df6:	4923      	ldr	r1, [pc, #140]	@ (90008e84 <HAL_JPEG_Init+0x240>)
90008df8:	4628      	mov	r0, r5
90008dfa:	f7ff fd3b 	bl	90008874 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008dfe:	b118      	cbz	r0, 90008e08 <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008e00:	2301      	movs	r3, #1
    return HAL_ERROR;
90008e02:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008e04:	652b      	str	r3, [r5, #80]	@ 0x50
}
90008e06:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90008e08:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90008e0c:	4923      	ldr	r1, [pc, #140]	@ (90008e9c <HAL_JPEG_Init+0x258>)
90008e0e:	4628      	mov	r0, r5
90008e10:	f7ff fd30 	bl	90008874 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008e14:	2800      	cmp	r0, #0
90008e16:	d1f3      	bne.n	90008e00 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90008e18:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90008e1c:	4920      	ldr	r1, [pc, #128]	@ (90008ea0 <HAL_JPEG_Init+0x25c>)
90008e1e:	4628      	mov	r0, r5
90008e20:	f7ff fc7e 	bl	90008720 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90008e24:	2800      	cmp	r0, #0
90008e26:	d1eb      	bne.n	90008e00 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90008e28:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90008e2c:	491d      	ldr	r1, [pc, #116]	@ (90008ea4 <HAL_JPEG_Init+0x260>)
90008e2e:	4628      	mov	r0, r5
90008e30:	f7ff fc76 	bl	90008720 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90008e34:	2800      	cmp	r0, #0
90008e36:	d1e3      	bne.n	90008e00 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008e38:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90008e3a:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008e3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90008e40:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90008e42:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90008e44:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90008e46:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90008e4a:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90008e4c:	6568      	str	r0, [r5, #84]	@ 0x54
}
90008e4e:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90008e50:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90008e54:	f7fb f89e 	bl	90003f94 <HAL_JPEG_MspInit>
90008e58:	e700      	b.n	90008c5c <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90008e5a:	2001      	movs	r0, #1
}
90008e5c:	4770      	bx	lr
90008e5e:	bf00      	nop
90008e60:	9002cf78 	.word	0x9002cf78
90008e64:	9002cf38 	.word	0x9002cf38
90008e68:	01050100 	.word	0x01050100
90008e6c:	0b0a0908 	.word	0x0b0a0908
90008e70:	07060504 	.word	0x07060504
90008e74:	03020100 	.word	0x03020100
90008e78:	7d010000 	.word	0x7d010000
90008e7c:	04040505 	.word	0x04040505
90008e80:	03040203 	.word	0x03040203
90008e84:	9002d0ac 	.word	0x9002d0ac
90008e88:	ffff0000 	.word	0xffff0000
90008e8c:	09080706 	.word	0x09080706
90008e90:	01000404 	.word	0x01000404
90008e94:	04040201 	.word	0x04040201
90008e98:	05070403 	.word	0x05070403
90008e9c:	9002cff8 	.word	0x9002cff8
90008ea0:	9002d17c 	.word	0x9002d17c
90008ea4:	9002d160 	.word	0x9002d160

90008ea8 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008ea8:	2b00      	cmp	r3, #0
90008eaa:	bf18      	it	ne
90008eac:	2900      	cmpne	r1, #0
90008eae:	d036      	beq.n	90008f1e <HAL_JPEG_Decode_DMA+0x76>
{
90008eb0:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008eb2:	fab0 f580 	clz	r5, r0
90008eb6:	4604      	mov	r4, r0
90008eb8:	096d      	lsrs	r5, r5, #5
90008eba:	b370      	cbz	r0, 90008f1a <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90008ebc:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90008ec0:	f1bc 0f01 	cmp.w	ip, #1
90008ec4:	d022      	beq.n	90008f0c <HAL_JPEG_Decode_DMA+0x64>
90008ec6:	f04f 0c01 	mov.w	ip, #1
90008eca:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90008ece:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90008ed2:	f1bc 0f01 	cmp.w	ip, #1
90008ed6:	d117      	bne.n	90008f08 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90008ed8:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90008eda:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90008ede:	9b04      	ldr	r3, [sp, #16]
90008ee0:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90008ee2:	2304      	movs	r3, #4
90008ee4:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90008ee8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008eea:	f023 030f 	bic.w	r3, r3, #15
90008eee:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90008ef0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008ef2:	f043 030e 	orr.w	r3, r3, #14
90008ef6:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90008ef8:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90008efa:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90008efc:	f7ff fd44 	bl	90008988 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90008f00:	f7ff fd80 	bl	90008a04 <JPEG_DMA_StartProcess>
90008f04:	b920      	cbnz	r0, 90008f10 <HAL_JPEG_Decode_DMA+0x68>
}
90008f06:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90008f08:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90008f0c:	2002      	movs	r0, #2
}
90008f0e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f10:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90008f12:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f16:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008f1a:	2001      	movs	r0, #1
}
90008f1c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90008f1e:	2001      	movs	r0, #1
}
90008f20:	4770      	bx	lr
90008f22:	bf00      	nop

90008f24 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008f24:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f26:	f003 030c 	and.w	r3, r3, #12
90008f2a:	2b0c      	cmp	r3, #12
90008f2c:	d01a      	beq.n	90008f64 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008f2e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f30:	f003 030c 	and.w	r3, r3, #12
90008f34:	2b08      	cmp	r3, #8
90008f36:	d001      	beq.n	90008f3c <HAL_JPEG_Pause+0x18>
}
90008f38:	2000      	movs	r0, #0
90008f3a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008f3c:	07ca      	lsls	r2, r1, #31
90008f3e:	d41f      	bmi.n	90008f80 <HAL_JPEG_Pause+0x5c>
90008f40:	f04f 3cff 	mov.w	ip, #4294967295
90008f44:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008f48:	078b      	lsls	r3, r1, #30
90008f4a:	d504      	bpl.n	90008f56 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008f4c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f4e:	4694      	mov	ip, r2
90008f50:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008f54:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008f56:	6802      	ldr	r2, [r0, #0]
}
90008f58:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008f5a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008f5c:	ea03 030c 	and.w	r3, r3, ip
90008f60:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008f62:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008f64:	07cb      	lsls	r3, r1, #31
90008f66:	d503      	bpl.n	90008f70 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008f68:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f6a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008f6e:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008f70:	0789      	lsls	r1, r1, #30
90008f72:	d5e1      	bpl.n	90008f38 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008f74:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f76:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008f7a:	6543      	str	r3, [r0, #84]	@ 0x54
}
90008f7c:	2000      	movs	r0, #0
90008f7e:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008f80:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f82:	f06f 0c06 	mvn.w	ip, #6
90008f86:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90008f8a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008f8e:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008f90:	e7da      	b.n	90008f48 <HAL_JPEG_Pause+0x24>
90008f92:	bf00      	nop

90008f94 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90008f94:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90008f96:	6282      	str	r2, [r0, #40]	@ 0x28
}
90008f98:	4770      	bx	lr
90008f9a:	bf00      	nop

90008f9c <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90008f9c:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90008f9e:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90008fa0:	4770      	bx	lr
90008fa2:	bf00      	nop

90008fa4 <HAL_JPEG_Abort>:
{
90008fa4:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90008fa6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90008fa8:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008faa:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90008fac:	4a32      	ldr	r2, [pc, #200]	@ (90009078 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008fae:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008fb2:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008fb4:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008fb6:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008fb8:	d043      	beq.n	90009042 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008fba:	6822      	ldr	r2, [r4, #0]
90008fbc:	6813      	ldr	r3, [r2, #0]
90008fbe:	f023 0301 	bic.w	r3, r3, #1
90008fc2:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90008fc4:	f7fd ffc0 	bl	90006f48 <HAL_GetTick>
90008fc8:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008fca:	e005      	b.n	90008fd8 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90008fcc:	f7fd ffbc 	bl	90006f48 <HAL_GetTick>
90008fd0:	1b40      	subs	r0, r0, r5
90008fd2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90008fd6:	d82b      	bhi.n	90009030 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008fd8:	6823      	ldr	r3, [r4, #0]
90008fda:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008fdc:	0612      	lsls	r2, r2, #24
90008fde:	d4f5      	bmi.n	90008fcc <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fe0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90008fe2:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fe4:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008fe8:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008fea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008fec:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008ff0:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008ff2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008ff4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008ff8:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008ffa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008ffc:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009000:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009002:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009004:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009006:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009008:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000900c:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000900e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009010:	b138      	cbz	r0, 90009022 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009012:	2306      	movs	r3, #6
    return HAL_ERROR;
90009014:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009016:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000901a:	2300      	movs	r3, #0
9000901c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009020:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009022:	2301      	movs	r3, #1
90009024:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009028:	2300      	movs	r3, #0
9000902a:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000902e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009030:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009032:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009034:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009036:	f042 0208 	orr.w	r2, r2, #8
9000903a:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000903c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009040:	e7ce      	b.n	90008fe0 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009042:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009044:	f001 f986 	bl	9000a354 <HAL_MDMA_Abort>
90009048:	b118      	cbz	r0, 90009052 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000904a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000904c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000904e:	2b40      	cmp	r3, #64	@ 0x40
90009050:	d00d      	beq.n	9000906e <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009052:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009054:	f001 f97e 	bl	9000a354 <HAL_MDMA_Abort>
90009058:	2800      	cmp	r0, #0
9000905a:	d0ae      	beq.n	90008fba <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000905c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000905e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009060:	2b40      	cmp	r3, #64	@ 0x40
90009062:	d1aa      	bne.n	90008fba <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009064:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009066:	f043 0304 	orr.w	r3, r3, #4
9000906a:	6523      	str	r3, [r4, #80]	@ 0x50
9000906c:	e7a5      	b.n	90008fba <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000906e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009070:	f043 0304 	orr.w	r3, r3, #4
90009074:	6523      	str	r3, [r4, #80]	@ 0x50
90009076:	e7ec      	b.n	90009052 <HAL_JPEG_Abort+0xae>
90009078:	ffff7ff0 	.word	0xffff7ff0

9000907c <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000907c:	4770      	bx	lr
9000907e:	bf00      	nop

90009080 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009080:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009082:	2101      	movs	r1, #1
{
90009084:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009086:	6803      	ldr	r3, [r0, #0]
90009088:	681a      	ldr	r2, [r3, #0]
9000908a:	f022 0201 	bic.w	r2, r2, #1
9000908e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009090:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009092:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009096:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009098:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000909c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000909e:	f043 0304 	orr.w	r3, r3, #4
900090a2:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
900090a4:	f7f9 f856 	bl	90002154 <HAL_JPEG_ErrorCallback>
}
900090a8:	bd08      	pop	{r3, pc}
900090aa:	bf00      	nop

900090ac <JPEG_MDMAInCpltCallback>:
{
900090ac:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900090ae:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
900090b0:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900090b2:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900090b6:	6822      	ldr	r2, [r4, #0]
900090b8:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900090ba:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
900090be:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900090c0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900090c2:	400b      	ands	r3, r1
900090c4:	2b0c      	cmp	r3, #12
900090c6:	d001      	beq.n	900090cc <JPEG_MDMAInCpltCallback+0x20>
}
900090c8:	b003      	add	sp, #12
900090ca:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900090cc:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900090ce:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900090d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900090d2:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900090d4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900090d6:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900090da:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900090dc:	1a9b      	subs	r3, r3, r2
900090de:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900090e0:	6a21      	ldr	r1, [r4, #32]
900090e2:	f7f8 ff6b 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
900090e6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900090e8:	42ab      	cmp	r3, r5
900090ea:	d311      	bcc.n	90009110 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
900090ec:	b305      	cbz	r5, 90009130 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900090ee:	fbb3 f2f5 	udiv	r2, r3, r5
900090f2:	fb05 3212 	mls	r2, r5, r2, r3
900090f6:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090f8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900090fa:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090fc:	04d1      	lsls	r1, r2, #19
900090fe:	d400      	bmi.n	90009102 <JPEG_MDMAInCpltCallback+0x56>
90009100:	b963      	cbnz	r3, 9000911c <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009102:	6822      	ldr	r2, [r4, #0]
90009104:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009106:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000910a:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000910c:	b003      	add	sp, #12
9000910e:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009110:	b1cb      	cbz	r3, 90009146 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009112:	0798      	lsls	r0, r3, #30
90009114:	d119      	bne.n	9000914a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009116:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009118:	04d2      	lsls	r2, r2, #19
9000911a:	d4f2      	bmi.n	90009102 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000911c:	6822      	ldr	r2, [r4, #0]
9000911e:	2501      	movs	r5, #1
90009120:	69a1      	ldr	r1, [r4, #24]
90009122:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009124:	3240      	adds	r2, #64	@ 0x40
90009126:	9500      	str	r5, [sp, #0]
90009128:	f001 f8a8 	bl	9000a27c <HAL_MDMA_Start_IT>
9000912c:	2800      	cmp	r0, #0
9000912e:	d0e8      	beq.n	90009102 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009130:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009132:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009134:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009136:	f043 0304 	orr.w	r3, r3, #4
9000913a:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000913c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009140:	f7f9 f808 	bl	90002154 <HAL_JPEG_ErrorCallback>
        return;
90009144:	e7c0      	b.n	900090c8 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009146:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009148:	e7db      	b.n	90009102 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000914a:	f023 0303 	bic.w	r3, r3, #3
9000914e:	3304      	adds	r3, #4
90009150:	e7d2      	b.n	900090f8 <JPEG_MDMAInCpltCallback+0x4c>
90009152:	bf00      	nop

90009154 <JPEG_DMA_PollResidualData>:
{
90009154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009156:	6802      	ldr	r2, [r0, #0]
90009158:	2610      	movs	r6, #16
{
9000915a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000915c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000915e:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009162:	d11d      	bne.n	900091a0 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009164:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009166:	06df      	lsls	r7, r3, #27
90009168:	d51a      	bpl.n	900091a0 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000916a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000916c:	69e7      	ldr	r7, [r4, #28]
9000916e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009170:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009172:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009174:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009176:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009178:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000917a:	69e2      	ldr	r2, [r4, #28]
9000917c:	443a      	add	r2, r7
9000917e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009180:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009182:	69e2      	ldr	r2, [r4, #28]
90009184:	4402      	add	r2, r0
90009186:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009188:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000918a:	69e2      	ldr	r2, [r4, #28]
9000918c:	440a      	add	r2, r1
9000918e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009190:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009192:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009194:	3304      	adds	r3, #4
90009196:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009198:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000919a:	4293      	cmp	r3, r2
9000919c:	d021      	beq.n	900091e2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000919e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
900091a0:	3e01      	subs	r6, #1
900091a2:	d1db      	bne.n	9000915c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
900091a4:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900091a6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900091a8:	06d8      	lsls	r0, r3, #27
900091aa:	d501      	bpl.n	900091b0 <JPEG_DMA_PollResidualData+0x5c>
900091ac:	048b      	lsls	r3, r1, #18
900091ae:	d417      	bmi.n	900091e0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900091b0:	6813      	ldr	r3, [r2, #0]
900091b2:	f023 0301 	bic.w	r3, r3, #1
900091b6:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
900091b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900091ba:	b9eb      	cbnz	r3, 900091f8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
900091bc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900091be:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900091c0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900091c2:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900091c4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900091c8:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900091cc:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900091d0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900091d2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900091d4:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900091d6:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900091da:	d00a      	beq.n	900091f2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900091dc:	f7ff ff4e 	bl	9000907c <HAL_JPEG_EncodeCpltCallback>
}
900091e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900091e2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091e4:	4620      	mov	r0, r4
900091e6:	69e1      	ldr	r1, [r4, #28]
900091e8:	f7f8 ff08 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900091ec:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
900091ee:	6265      	str	r5, [r4, #36]	@ 0x24
900091f0:	e7d6      	b.n	900091a0 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900091f2:	f7f8 ffb1 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
900091f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900091f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091fa:	4620      	mov	r0, r4
900091fc:	69e1      	ldr	r1, [r4, #28]
900091fe:	f7f8 fefd 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009202:	2300      	movs	r3, #0
90009204:	6263      	str	r3, [r4, #36]	@ 0x24
90009206:	e7d9      	b.n	900091bc <JPEG_DMA_PollResidualData+0x68>

90009208 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009208:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000920a:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000920e:	d06f      	beq.n	900092f0 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009210:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009212:	f003 030c 	and.w	r3, r3, #12
90009216:	2b0c      	cmp	r3, #12
{
90009218:	b530      	push	{r4, r5, lr}
9000921a:	4604      	mov	r4, r0
9000921c:	b083      	sub	sp, #12
9000921e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009220:	d007      	beq.n	90009232 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009222:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009224:	f003 030c 	and.w	r3, r3, #12
90009228:	2b08      	cmp	r3, #8
9000922a:	d035      	beq.n	90009298 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000922c:	2000      	movs	r0, #0
}
9000922e:	b003      	add	sp, #12
90009230:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009232:	07c8      	lsls	r0, r1, #31
90009234:	d415      	bmi.n	90009262 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009236:	07a9      	lsls	r1, r5, #30
90009238:	d5f8      	bpl.n	9000922c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000923a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000923c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009240:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009242:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009244:	041a      	lsls	r2, r3, #16
90009246:	d44f      	bmi.n	900092e8 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009248:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000924a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000924c:	2a00      	cmp	r2, #0
9000924e:	d13a      	bne.n	900092c6 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009250:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009252:	2206      	movs	r2, #6
    return HAL_ERROR;
90009254:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009256:	f043 0304 	orr.w	r3, r3, #4
9000925a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000925c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009260:	e7e5      	b.n	9000922e <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009262:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009264:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009266:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000926a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000926c:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000926e:	2a00      	cmp	r2, #0
90009270:	d0ee      	beq.n	90009250 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009272:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009274:	fbb3 f1f2 	udiv	r1, r3, r2
90009278:	fb02 3211 	mls	r2, r2, r1, r3
9000927c:	1a9b      	subs	r3, r3, r2
9000927e:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90009280:	2b00      	cmp	r3, #0
90009282:	d0d8      	beq.n	90009236 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009284:	6822      	ldr	r2, [r4, #0]
90009286:	2101      	movs	r1, #1
90009288:	3240      	adds	r2, #64	@ 0x40
9000928a:	9100      	str	r1, [sp, #0]
9000928c:	69a1      	ldr	r1, [r4, #24]
9000928e:	f000 fff5 	bl	9000a27c <HAL_MDMA_Start_IT>
90009292:	2800      	cmp	r0, #0
90009294:	d0cf      	beq.n	90009236 <HAL_JPEG_Resume+0x2e>
90009296:	e7db      	b.n	90009250 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009298:	f011 0101 	ands.w	r1, r1, #1
9000929c:	d011      	beq.n	900092c2 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000929e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900092a0:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900092a2:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900092a4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900092a8:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900092aa:	07ab      	lsls	r3, r5, #30
900092ac:	d504      	bpl.n	900092b8 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900092ae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
900092b0:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900092b2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900092b6:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
900092b8:	6822      	ldr	r2, [r4, #0]
900092ba:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900092bc:	430b      	orrs	r3, r1
900092be:	6313      	str	r3, [r2, #48]	@ 0x30
900092c0:	e7b4      	b.n	9000922c <HAL_JPEG_Resume+0x24>
900092c2:	2228      	movs	r2, #40	@ 0x28
900092c4:	e7f1      	b.n	900092aa <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900092c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900092c8:	fbb3 f1f2 	udiv	r1, r3, r2
900092cc:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092d0:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900092d2:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092d4:	2201      	movs	r2, #1
900092d6:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900092d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092da:	9200      	str	r2, [sp, #0]
900092dc:	69e2      	ldr	r2, [r4, #28]
900092de:	f000 ffcd 	bl	9000a27c <HAL_MDMA_Start_IT>
900092e2:	2800      	cmp	r0, #0
900092e4:	d0a2      	beq.n	9000922c <HAL_JPEG_Resume+0x24>
900092e6:	e7b3      	b.n	90009250 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
900092e8:	4620      	mov	r0, r4
900092ea:	f7ff ff33 	bl	90009154 <JPEG_DMA_PollResidualData>
900092ee:	e79d      	b.n	9000922c <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
900092f0:	2001      	movs	r0, #1
}
900092f2:	4770      	bx	lr

900092f4 <JPEG_MDMAOutCpltCallback>:
{
900092f4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900092f6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
900092f8:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
900092fa:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900092fe:	6823      	ldr	r3, [r4, #0]
90009300:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009302:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009306:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009308:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000930a:	400a      	ands	r2, r1
9000930c:	2a0c      	cmp	r2, #12
9000930e:	d001      	beq.n	90009314 <JPEG_MDMAOutCpltCallback+0x20>
}
90009310:	b003      	add	sp, #12
90009312:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009314:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009316:	0692      	lsls	r2, r2, #26
90009318:	d505      	bpl.n	90009326 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000931a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000931c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009320:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009322:	b003      	add	sp, #12
90009324:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009326:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009328:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000932a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000932c:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000932e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009330:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009334:	1a9b      	subs	r3, r3, r2
90009336:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009338:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000933a:	f7f8 fe5f 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000933e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009340:	049b      	lsls	r3, r3, #18
90009342:	d501      	bpl.n	90009348 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009344:	6823      	ldr	r3, [r4, #0]
90009346:	e7e8      	b.n	9000931a <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009348:	6821      	ldr	r1, [r4, #0]
9000934a:	2501      	movs	r5, #1
9000934c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000934e:	69e2      	ldr	r2, [r4, #28]
90009350:	3144      	adds	r1, #68	@ 0x44
90009352:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009354:	9500      	str	r5, [sp, #0]
90009356:	f000 ff91 	bl	9000a27c <HAL_MDMA_Start_IT>
9000935a:	2800      	cmp	r0, #0
9000935c:	d0f2      	beq.n	90009344 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000935e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009360:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90009362:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009364:	f043 0304 	orr.w	r3, r3, #4
90009368:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000936a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000936e:	f7f8 fef1 	bl	90002154 <HAL_JPEG_ErrorCallback>
          return;
90009372:	e7cd      	b.n	90009310 <JPEG_MDMAOutCpltCallback+0x1c>

90009374 <JPEG_MDMAOutAbortCallback>:
{
90009374:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009376:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009378:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000937a:	041a      	lsls	r2, r3, #16
9000937c:	d400      	bmi.n	90009380 <JPEG_MDMAOutAbortCallback+0xc>
}
9000937e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009380:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009382:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009384:	681b      	ldr	r3, [r3, #0]
90009386:	695b      	ldr	r3, [r3, #20]
90009388:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000938c:	1ad3      	subs	r3, r2, r3
9000938e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009390:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009392:	429a      	cmp	r2, r3
90009394:	d025      	beq.n	900093e2 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009396:	6822      	ldr	r2, [r4, #0]
90009398:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000939a:	f015 0510 	ands.w	r5, r5, #16
9000939e:	d118      	bne.n	900093d2 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
900093a0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900093a2:	bb4b      	cbnz	r3, 900093f8 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093a4:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
900093a6:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
900093a8:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093aa:	f023 0301 	bic.w	r3, r3, #1
900093ae:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
900093b0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093b2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093b4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900093b8:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093bc:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900093c0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093c2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093c4:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900093c6:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093ca:	d012      	beq.n	900093f2 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900093cc:	f7ff fe56 	bl	9000907c <HAL_JPEG_EncodeCpltCallback>
}
900093d0:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900093d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900093d4:	049b      	lsls	r3, r3, #18
900093d6:	d4d2      	bmi.n	9000937e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
900093d8:	4620      	mov	r0, r4
}
900093da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
900093de:	f7ff beb9 	b.w	90009154 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900093e2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900093e4:	4620      	mov	r0, r4
900093e6:	69e1      	ldr	r1, [r4, #28]
900093e8:	f7f8 fe08 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
900093ec:	2300      	movs	r3, #0
900093ee:	6263      	str	r3, [r4, #36]	@ 0x24
900093f0:	e7d1      	b.n	90009396 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900093f2:	f7f8 feb1 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
900093f6:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900093f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900093fa:	4620      	mov	r0, r4
900093fc:	69e1      	ldr	r1, [r4, #28]
900093fe:	f7f8 fdfd 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009402:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009404:	6265      	str	r5, [r4, #36]	@ 0x24
90009406:	e7cd      	b.n	900093a4 <JPEG_MDMAOutAbortCallback+0x30>

90009408 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009408:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000940a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000940c:	f002 0203 	and.w	r2, r2, #3
90009410:	2a02      	cmp	r2, #2
{
90009412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009416:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009418:	d01e      	beq.n	90009458 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000941a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000941c:	04d7      	lsls	r7, r2, #19
9000941e:	d407      	bmi.n	90009430 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009420:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009422:	0796      	lsls	r6, r2, #30
90009424:	f100 811b 	bmi.w	9000965e <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009428:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000942a:	0750      	lsls	r0, r2, #29
9000942c:	f100 81cc 	bmi.w	900097c8 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009430:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009432:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009436:	d107      	bne.n	90009448 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009438:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000943a:	f016 0608 	ands.w	r6, r6, #8
9000943e:	d14a      	bne.n	900094d6 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009440:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009442:	06d2      	lsls	r2, r2, #27
90009444:	f100 81fe 	bmi.w	90009844 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009448:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000944a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000944e:	2a20      	cmp	r2, #32
90009450:	d019      	beq.n	90009486 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
90009452:	2000      	movs	r0, #0
}
90009454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009458:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000945a:	0652      	lsls	r2, r2, #25
9000945c:	d5dd      	bpl.n	9000941a <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000945e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009460:	4629      	mov	r1, r5
90009462:	f7ff fb17 	bl	90008a94 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009466:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009468:	4629      	mov	r1, r5
9000946a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000946c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000946e:	f7f8 fd77 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009472:	6823      	ldr	r3, [r4, #0]
90009474:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009476:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000947a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000947c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000947e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009482:	639a      	str	r2, [r3, #56]	@ 0x38
90009484:	e7c9      	b.n	9000941a <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009486:	681a      	ldr	r2, [r3, #0]
90009488:	f022 0201 	bic.w	r2, r2, #1
9000948c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000948e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009490:	f002 020c 	and.w	r2, r2, #12
90009494:	2a08      	cmp	r2, #8
90009496:	f000 8201 	beq.w	9000989c <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000949a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000949c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900094a0:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
900094a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900094a4:	2b00      	cmp	r3, #0
900094a6:	f040 81fe 	bne.w	900098a6 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
900094aa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900094ac:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900094ae:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900094b0:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900094b2:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900094b6:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900094ba:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900094be:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900094c0:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900094c2:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900094c4:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900094c8:	f000 81e5 	beq.w	90009896 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900094cc:	f7ff fdd6 	bl	9000907c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
900094d0:	2001      	movs	r0, #1
}
900094d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
900094d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094d8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
900094da:	3220      	adds	r2, #32
900094dc:	4296      	cmp	r6, r2
900094de:	f0c0 8200 	bcc.w	900098e2 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
900094e2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094e4:	69e1      	ldr	r1, [r4, #28]
900094e6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094e8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094ea:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094ec:	69e2      	ldr	r2, [r4, #28]
900094ee:	440a      	add	r2, r1
900094f0:	0a19      	lsrs	r1, r3, #8
900094f2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094f4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094f6:	69e2      	ldr	r2, [r4, #28]
900094f8:	440a      	add	r2, r1
900094fa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094fc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094fe:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009500:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009502:	69e2      	ldr	r2, [r4, #28]
90009504:	440a      	add	r2, r1
90009506:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009508:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000950a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000950c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000950e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009510:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009512:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009514:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009516:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009518:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000951a:	69e2      	ldr	r2, [r4, #28]
9000951c:	440a      	add	r2, r1
9000951e:	0a19      	lsrs	r1, r3, #8
90009520:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009522:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009524:	69e2      	ldr	r2, [r4, #28]
90009526:	440a      	add	r2, r1
90009528:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000952a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000952c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000952e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009530:	69e2      	ldr	r2, [r4, #28]
90009532:	440a      	add	r2, r1
90009534:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009536:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009538:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000953a:	3304      	adds	r3, #4
9000953c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000953e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009540:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009542:	69e1      	ldr	r1, [r4, #28]
90009544:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009546:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009548:	69e2      	ldr	r2, [r4, #28]
9000954a:	440a      	add	r2, r1
9000954c:	0a19      	lsrs	r1, r3, #8
9000954e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009550:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009552:	69e2      	ldr	r2, [r4, #28]
90009554:	440a      	add	r2, r1
90009556:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009558:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000955a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000955c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000955e:	69e2      	ldr	r2, [r4, #28]
90009560:	440a      	add	r2, r1
90009562:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009564:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009566:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009568:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000956a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000956c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000956e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009570:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009572:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009574:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009576:	69e2      	ldr	r2, [r4, #28]
90009578:	440a      	add	r2, r1
9000957a:	0a19      	lsrs	r1, r3, #8
9000957c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000957e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009580:	69e2      	ldr	r2, [r4, #28]
90009582:	440a      	add	r2, r1
90009584:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009586:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009588:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000958a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000958c:	69e2      	ldr	r2, [r4, #28]
9000958e:	440a      	add	r2, r1
90009590:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009592:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009594:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009596:	3304      	adds	r3, #4
90009598:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000959a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000959c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000959e:	69e1      	ldr	r1, [r4, #28]
900095a0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900095a2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095a4:	69e2      	ldr	r2, [r4, #28]
900095a6:	440a      	add	r2, r1
900095a8:	0a19      	lsrs	r1, r3, #8
900095aa:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095ae:	69e2      	ldr	r2, [r4, #28]
900095b0:	440a      	add	r2, r1
900095b2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095b4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095b6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095ba:	69e2      	ldr	r2, [r4, #28]
900095bc:	440a      	add	r2, r1
900095be:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900095c0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900095c2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900095c4:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095c6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900095c8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900095ca:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095cc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900095ce:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900095d0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095d2:	69e2      	ldr	r2, [r4, #28]
900095d4:	440a      	add	r2, r1
900095d6:	0a19      	lsrs	r1, r3, #8
900095d8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095da:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095dc:	69e2      	ldr	r2, [r4, #28]
900095de:	440a      	add	r2, r1
900095e0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095e2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095e4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095e6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095e8:	69e2      	ldr	r2, [r4, #28]
900095ea:	440a      	add	r2, r1
900095ec:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900095ee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900095f0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900095f2:	3304      	adds	r3, #4
900095f4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900095f6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900095fa:	69e1      	ldr	r1, [r4, #28]
900095fc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900095fe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009600:	69e2      	ldr	r2, [r4, #28]
90009602:	440a      	add	r2, r1
90009604:	0a19      	lsrs	r1, r3, #8
90009606:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009608:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000960a:	69e2      	ldr	r2, [r4, #28]
9000960c:	440a      	add	r2, r1
9000960e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009610:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009612:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009614:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009616:	69e2      	ldr	r2, [r4, #28]
90009618:	440a      	add	r2, r1
9000961a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000961c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000961e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009620:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009622:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009624:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009626:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009628:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000962a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000962c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000962e:	69e2      	ldr	r2, [r4, #28]
90009630:	440a      	add	r2, r1
90009632:	0a19      	lsrs	r1, r3, #8
90009634:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009636:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009638:	69e2      	ldr	r2, [r4, #28]
9000963a:	440a      	add	r2, r1
9000963c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000963e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009640:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009642:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009644:	69e2      	ldr	r2, [r4, #28]
90009646:	440a      	add	r2, r1
90009648:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000964a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000964c:	3304      	adds	r3, #4
9000964e:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009650:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009652:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009654:	429a      	cmp	r2, r3
90009656:	f000 82d8 	beq.w	90009c0a <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000965a:	6823      	ldr	r3, [r4, #0]
9000965c:	e6f4      	b.n	90009448 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000965e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009660:	2a00      	cmp	r2, #0
90009662:	f000 8128 	beq.w	900098b6 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009666:	6a21      	ldr	r1, [r4, #32]
90009668:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000966a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000966c:	f240 81b9 	bls.w	900099e2 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009670:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009672:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009674:	04cd      	lsls	r5, r1, #19
90009676:	f53f aedb 	bmi.w	90009430 <JPEG_Process+0x28>
9000967a:	2a00      	cmp	r2, #0
9000967c:	f43f aed8 	beq.w	90009430 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009680:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009682:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009686:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
90009688:	f200 824e 	bhi.w	90009b28 <JPEG_Process+0x720>
      if (nb_words > 0UL)
9000968c:	2a03      	cmp	r2, #3
9000968e:	f240 82cc 	bls.w	90009c2a <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
90009692:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009694:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009696:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000969a:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000969c:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000969e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096a0:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096a4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096a6:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900096aa:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096ae:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096b2:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096b4:	6a22      	ldr	r2, [r4, #32]
900096b6:	f102 0204 	add.w	r2, r2, #4
900096ba:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096bc:	f43f aeb8 	beq.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096c0:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096c2:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096c4:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096c8:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096ca:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096cc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096ce:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096d2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096d4:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900096d8:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096dc:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096e0:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096e2:	6a22      	ldr	r2, [r4, #32]
900096e4:	f102 0204 	add.w	r2, r2, #4
900096e8:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096ea:	f43f aea1 	beq.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096ee:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096f0:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096f2:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096f6:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096f8:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096fa:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096fc:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009700:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009702:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009706:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000970a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000970e:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009710:	6a22      	ldr	r2, [r4, #32]
90009712:	f102 0204 	add.w	r2, r2, #4
90009716:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009718:	f43f ae8a 	beq.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000971c:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000971e:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009720:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009724:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009726:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009728:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000972a:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000972e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009730:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009734:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009738:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000973c:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000973e:	6a22      	ldr	r2, [r4, #32]
90009740:	f102 0204 	add.w	r2, r2, #4
90009744:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009746:	f43f ae73 	beq.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000974a:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000974c:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000974e:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009752:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009754:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009756:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009758:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000975c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000975e:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009762:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009766:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000976a:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000976c:	6a22      	ldr	r2, [r4, #32]
9000976e:	f102 0204 	add.w	r2, r2, #4
90009772:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009774:	f43f ae5c 	beq.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009778:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000977a:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000977c:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009780:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009782:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009784:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009786:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000978a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000978c:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009790:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009794:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009798:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000979a:	6a22      	ldr	r2, [r4, #32]
9000979c:	f102 0204 	add.w	r2, r2, #4
900097a0:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900097a2:	f47f ae45 	bne.w	90009430 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900097a6:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097a8:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097aa:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097ac:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900097ae:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097b0:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097b2:	7840      	ldrb	r0, [r0, #1]
900097b4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
900097b8:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097ba:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097be:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900097c0:	6a22      	ldr	r2, [r4, #32]
900097c2:	3204      	adds	r2, #4
900097c4:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900097c6:	e633      	b.n	90009430 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900097c8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900097ca:	2a00      	cmp	r2, #0
900097cc:	d073      	beq.n	900098b6 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900097ce:	6a21      	ldr	r1, [r4, #32]
900097d0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900097d2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900097d4:	f200 8182 	bhi.w	90009adc <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
900097d8:	428a      	cmp	r2, r1
900097da:	f040 8104 	bne.w	900099e6 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900097de:	6a21      	ldr	r1, [r4, #32]
900097e0:	4620      	mov	r0, r4
900097e2:	f7f8 fbeb 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
900097e6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900097e8:	2a04      	cmp	r2, #4
900097ea:	d902      	bls.n	900097f2 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
900097ec:	f022 0203 	bic.w	r2, r2, #3
900097f0:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
900097f2:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097f4:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
900097f6:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900097f8:	6d61      	ldr	r1, [r4, #84]	@ 0x54
900097fa:	04c9      	lsls	r1, r1, #19
900097fc:	f53f ae18 	bmi.w	90009430 <JPEG_Process+0x28>
90009800:	2a00      	cmp	r2, #0
90009802:	f43f ae15 	beq.w	90009430 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009806:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009808:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000980a:	f040 8177 	bne.w	90009afc <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000980e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009810:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009812:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009814:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
90009816:	f105 0501 	add.w	r5, r5, #1
9000981a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000981c:	d010      	beq.n	90009840 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000981e:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009820:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009822:	5d45      	ldrb	r5, [r0, r5]
90009824:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
90009828:	6a25      	ldr	r5, [r4, #32]
9000982a:	f105 0501 	add.w	r5, r5, #1
9000982e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009830:	d106      	bne.n	90009840 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009832:	6a22      	ldr	r2, [r4, #32]
90009834:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
90009836:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009838:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000983c:	3201      	adds	r2, #1
9000983e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009840:	6419      	str	r1, [r3, #64]	@ 0x40
90009842:	e5f5      	b.n	90009430 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009844:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009846:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009848:	3204      	adds	r2, #4
9000984a:	4295      	cmp	r5, r2
9000984c:	f0c0 80cd 	bcc.w	900099ea <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
90009850:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009852:	69e1      	ldr	r1, [r4, #28]
90009854:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009856:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009858:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000985a:	69e2      	ldr	r2, [r4, #28]
9000985c:	440a      	add	r2, r1
9000985e:	0a19      	lsrs	r1, r3, #8
90009860:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009862:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009864:	69e2      	ldr	r2, [r4, #28]
90009866:	440a      	add	r2, r1
90009868:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000986a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000986c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000986e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009870:	69e2      	ldr	r2, [r4, #28]
90009872:	440a      	add	r2, r1
90009874:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009876:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009878:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000987a:	3304      	adds	r3, #4
9000987c:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000987e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009880:	429a      	cmp	r2, r3
90009882:	f47f aeea 	bne.w	9000965a <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009886:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009888:	4620      	mov	r0, r4
9000988a:	69e1      	ldr	r1, [r4, #28]
9000988c:	f7f8 fbb6 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009890:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009892:	6266      	str	r6, [r4, #36]	@ 0x24
90009894:	e5d8      	b.n	90009448 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009896:	f7f8 fc5f 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
9000989a:	e619      	b.n	900094d0 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000989c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000989e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900098a2:	631a      	str	r2, [r3, #48]	@ 0x30
900098a4:	e5f9      	b.n	9000949a <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098a6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098a8:	4620      	mov	r0, r4
900098aa:	69e1      	ldr	r1, [r4, #28]
900098ac:	f7f8 fba6 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900098b0:	2300      	movs	r3, #0
900098b2:	6263      	str	r3, [r4, #36]	@ 0x24
900098b4:	e5f9      	b.n	900094aa <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098b6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900098b8:	f002 020c 	and.w	r2, r2, #12
900098bc:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900098be:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098c0:	f000 812d 	beq.w	90009b1e <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098c4:	f002 020c 	and.w	r2, r2, #12
900098c8:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900098ca:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098cc:	f47f adb0 	bne.w	90009430 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900098d0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900098d4:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900098d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900098d8:	f022 0206 	bic.w	r2, r2, #6
900098dc:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900098de:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900098e0:	e5a6      	b.n	90009430 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
900098e2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098e4:	4296      	cmp	r6, r2
900098e6:	f67f adaf 	bls.w	90009448 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
900098ea:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900098ec:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
900098ee:	0880      	lsrs	r0, r0, #2
900098f0:	d020      	beq.n	90009934 <JPEG_Process+0x52c>
900098f2:	4629      	mov	r1, r5
900098f4:	e000      	b.n	900098f8 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
900098f6:	6823      	ldr	r3, [r4, #0]
900098f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
900098fa:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098fc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098fe:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009900:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009902:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009904:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009906:	69e2      	ldr	r2, [r4, #28]
90009908:	4432      	add	r2, r6
9000990a:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000990e:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009910:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009912:	69e2      	ldr	r2, [r4, #28]
90009914:	4432      	add	r2, r6
90009916:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000991a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000991e:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009920:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009922:	69e2      	ldr	r2, [r4, #28]
90009924:	4432      	add	r2, r6
90009926:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009928:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000992a:	f103 0304 	add.w	r3, r3, #4
9000992e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009930:	d1e1      	bne.n	900098f6 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009932:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009934:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009936:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009938:	429e      	cmp	r6, r3
9000993a:	f000 816e 	beq.w	90009c1a <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000993e:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009942:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009944:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
90009948:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000994a:	d00e      	beq.n	9000996a <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000994c:	f005 0303 	and.w	r3, r5, #3
90009950:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009952:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009954:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009956:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009958:	fa27 f303 	lsr.w	r3, r7, r3
9000995c:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000995e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009960:	69e1      	ldr	r1, [r4, #28]
90009962:	f103 0301 	add.w	r3, r3, #1
90009966:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009968:	d1f0      	bne.n	9000994c <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000996a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000996e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009970:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
90009972:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009976:	f7f8 fb41 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000997a:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000997c:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000997e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009980:	f63f ae6b 	bhi.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009984:	ea4f 02c6 	mov.w	r2, r6, lsl #3
90009988:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000998a:	69e0      	ldr	r0, [r4, #28]
9000998c:	fa27 f502 	lsr.w	r5, r7, r2
90009990:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
90009992:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009994:	f101 0101 	add.w	r1, r1, #1
90009998:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000999a:	f43f ae5e 	beq.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000999e:	f102 0108 	add.w	r1, r2, #8
900099a2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099a4:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
900099a6:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099a8:	fa27 f101 	lsr.w	r1, r7, r1
900099ac:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
900099ae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099b0:	f101 0101 	add.w	r1, r1, #1
900099b4:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099b6:	f43f ae50 	beq.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099ba:	3210      	adds	r2, #16
900099bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099be:	69e0      	ldr	r0, [r4, #28]
900099c0:	fa27 f202 	lsr.w	r2, r7, r2
900099c4:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
900099c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099c8:	3201      	adds	r2, #1
900099ca:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099cc:	2e00      	cmp	r6, #0
900099ce:	f47f ae44 	bne.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099d4:	0e3f      	lsrs	r7, r7, #24
900099d6:	69e2      	ldr	r2, [r4, #28]
900099d8:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
900099da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099dc:	3301      	adds	r3, #1
900099de:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099e0:	e63b      	b.n	9000965a <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
900099e2:	428a      	cmp	r2, r1
900099e4:	d07c      	beq.n	90009ae0 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900099e6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900099e8:	e522      	b.n	90009430 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
900099ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099ec:	4295      	cmp	r5, r2
900099ee:	f67f ad2b 	bls.w	90009448 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
900099f2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099f4:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
900099f6:	0880      	lsrs	r0, r0, #2
900099f8:	d020      	beq.n	90009a3c <JPEG_Process+0x634>
900099fa:	4631      	mov	r1, r6
900099fc:	e000      	b.n	90009a00 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
900099fe:	6823      	ldr	r3, [r4, #0]
90009a00:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009a02:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009a04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a06:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009a08:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009a0a:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009a0c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009a0e:	69e2      	ldr	r2, [r4, #28]
90009a10:	442a      	add	r2, r5
90009a12:	ea4f 2513 	mov.w	r5, r3, lsr #8
90009a16:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009a18:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009a1a:	69e2      	ldr	r2, [r4, #28]
90009a1c:	442a      	add	r2, r5
90009a1e:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009a22:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009a26:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009a28:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009a2a:	69e2      	ldr	r2, [r4, #28]
90009a2c:	442a      	add	r2, r5
90009a2e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009a30:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009a32:	f103 0304 	add.w	r3, r3, #4
90009a36:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009a38:	d1e1      	bne.n	900099fe <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009a3a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009a3c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a3e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009a40:	429d      	cmp	r5, r3
90009a42:	f000 80ea 	beq.w	90009c1a <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009a46:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009a4a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009a4c:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
90009a50:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
90009a52:	d00e      	beq.n	90009a72 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a54:	f006 0303 	and.w	r3, r6, #3
90009a58:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009a5a:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a5c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009a5e:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a60:	fa27 f303 	lsr.w	r3, r7, r3
90009a64:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009a66:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009a68:	69e1      	ldr	r1, [r4, #28]
90009a6a:	f103 0301 	add.w	r3, r3, #1
90009a6e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009a70:	d1f0      	bne.n	90009a54 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
90009a72:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a76:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a78:	4620      	mov	r0, r4
90009a7a:	f7f8 fabf 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
90009a7e:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
90009a82:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
90009a84:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
90009a86:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a88:	f63f ade7 	bhi.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a8c:	ea4f 02c3 	mov.w	r2, r3, lsl #3
90009a90:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a92:	69e0      	ldr	r0, [r4, #28]
90009a94:	fa27 f502 	lsr.w	r5, r7, r2
90009a98:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
90009a9a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a9c:	f101 0101 	add.w	r1, r1, #1
90009aa0:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009aa2:	f43f adda 	beq.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009aa6:	f102 0108 	add.w	r1, r2, #8
90009aaa:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009aac:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009aae:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009ab0:	fa27 f101 	lsr.w	r1, r7, r1
90009ab4:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
90009ab6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009ab8:	f101 0101 	add.w	r1, r1, #1
90009abc:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009abe:	f43f adcc 	beq.w	9000965a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009ac2:	3210      	adds	r2, #16
90009ac4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009ac6:	69e0      	ldr	r0, [r4, #28]
90009ac8:	fa27 f202 	lsr.w	r2, r7, r2
90009acc:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009ace:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009ad0:	3201      	adds	r2, #1
90009ad2:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009ad4:	2b00      	cmp	r3, #0
90009ad6:	f43f af7c 	beq.w	900099d2 <JPEG_Process+0x5ca>
90009ada:	e5be      	b.n	9000965a <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009adc:	1a52      	subs	r2, r2, r1
90009ade:	e68b      	b.n	900097f8 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009ae0:	6a21      	ldr	r1, [r4, #32]
90009ae2:	4620      	mov	r0, r4
90009ae4:	f7f8 fa6a 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009ae8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009aea:	2a04      	cmp	r2, #4
90009aec:	d902      	bls.n	90009af4 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009aee:	f022 0203 	bic.w	r2, r2, #3
90009af2:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009af4:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009af6:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009af8:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009afa:	e5ba      	b.n	90009672 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
90009afc:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009afe:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b00:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b02:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b04:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b06:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b08:	7849      	ldrb	r1, [r1, #1]
90009b0a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009b0e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b10:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b14:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b16:	6a22      	ldr	r2, [r4, #32]
90009b18:	3204      	adds	r2, #4
90009b1a:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009b1c:	e488      	b.n	90009430 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009b1e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009b22:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009b24:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009b26:	e483      	b.n	90009430 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
90009b28:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b2a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b2c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b2e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b30:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b32:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b34:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b36:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b3a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b3c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b40:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b42:	6a22      	ldr	r2, [r4, #32]
90009b44:	3204      	adds	r2, #4
90009b46:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b48:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b4a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b4c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b4e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b50:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b52:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b54:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b56:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b5a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b5c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b60:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b62:	6a22      	ldr	r2, [r4, #32]
90009b64:	3204      	adds	r2, #4
90009b66:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b68:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b6a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b6c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b6e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b70:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b72:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b74:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b76:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b7a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b7c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b80:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b82:	6a22      	ldr	r2, [r4, #32]
90009b84:	3204      	adds	r2, #4
90009b86:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b88:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b8a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b8c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b8e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b90:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b92:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b94:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b96:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b9a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b9c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ba0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ba2:	6a22      	ldr	r2, [r4, #32]
90009ba4:	3204      	adds	r2, #4
90009ba6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ba8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009baa:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009bac:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bae:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bb0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bb2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009bb4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bb6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009bba:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bbc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009bc0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009bc2:	6a22      	ldr	r2, [r4, #32]
90009bc4:	3204      	adds	r2, #4
90009bc6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009bc8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bca:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009bcc:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bce:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bd0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bd2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009bd4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bd6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009bda:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bdc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009be0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009be2:	6a22      	ldr	r2, [r4, #32]
90009be4:	3204      	adds	r2, #4
90009be6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009be8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bea:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009bec:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bee:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bf0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bf2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009bf4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009bf6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009bfa:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009bfc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009c00:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009c02:	6a22      	ldr	r2, [r4, #32]
90009c04:	3204      	adds	r2, #4
90009c06:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009c08:	e5cd      	b.n	900097a6 <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c0a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c0c:	4620      	mov	r0, r4
90009c0e:	69e1      	ldr	r1, [r4, #28]
90009c10:	f7f8 f9f4 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c14:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009c16:	6265      	str	r5, [r4, #36]	@ 0x24
90009c18:	e416      	b.n	90009448 <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c1a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c1c:	4620      	mov	r0, r4
90009c1e:	f7f8 f9ed 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009c22:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c24:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009c26:	6262      	str	r2, [r4, #36]	@ 0x24
90009c28:	e40e      	b.n	90009448 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c2a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009c2c:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009c2e:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c30:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
90009c32:	f105 0501 	add.w	r5, r5, #1
90009c36:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009c38:	d010      	beq.n	90009c5c <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c3a:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009c3c:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c3e:	5d4d      	ldrb	r5, [r1, r5]
90009c40:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
90009c44:	6a25      	ldr	r5, [r4, #32]
90009c46:	f105 0501 	add.w	r5, r5, #1
90009c4a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009c4c:	d106      	bne.n	90009c5c <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c4e:	6a22      	ldr	r2, [r4, #32]
90009c50:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
90009c52:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c54:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009c58:	3201      	adds	r2, #1
90009c5a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009c5c:	6418      	str	r0, [r3, #64]	@ 0x40
90009c5e:	f7ff bbe7 	b.w	90009430 <JPEG_Process+0x28>
90009c62:	bf00      	nop

90009c64 <HAL_JPEG_IRQHandler>:
{
90009c64:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
90009c66:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009c6a:	3b03      	subs	r3, #3
90009c6c:	2b01      	cmp	r3, #1
90009c6e:	d900      	bls.n	90009c72 <HAL_JPEG_IRQHandler+0xe>
}
90009c70:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c72:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c74:	4604      	mov	r4, r0
90009c76:	f003 030c 	and.w	r3, r3, #12
90009c7a:	2b08      	cmp	r3, #8
90009c7c:	d050      	beq.n	90009d20 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009c7e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c80:	f003 030c 	and.w	r3, r3, #12
90009c84:	2b0c      	cmp	r3, #12
90009c86:	d1f3      	bne.n	90009c70 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c88:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c8a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c8c:	f002 0203 	and.w	r2, r2, #3
90009c90:	2a02      	cmp	r2, #2
90009c92:	d049      	beq.n	90009d28 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
90009c94:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009c96:	0692      	lsls	r2, r2, #26
90009c98:	d5ea      	bpl.n	90009c70 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009c9a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009c9c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009c9e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90009ca2:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009ca4:	681a      	ldr	r2, [r3, #0]
90009ca6:	f022 0201 	bic.w	r2, r2, #1
90009caa:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009cac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009cae:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009cb2:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009cb4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009cb6:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009cba:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009cbc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009cc0:	2b02      	cmp	r3, #2
90009cc2:	d054      	beq.n	90009d6e <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009cc4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009cc6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009cca:	2b02      	cmp	r3, #2
90009ccc:	d043      	beq.n	90009d56 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009cce:	6803      	ldr	r3, [r0, #0]
90009cd0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009cd2:	695b      	ldr	r3, [r3, #20]
90009cd4:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009cd8:	1ad3      	subs	r3, r2, r3
90009cda:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009cdc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009cde:	429a      	cmp	r2, r3
90009ce0:	d048      	beq.n	90009d74 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009ce2:	6822      	ldr	r2, [r4, #0]
90009ce4:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009ce6:	f015 0510 	ands.w	r5, r5, #16
90009cea:	d138      	bne.n	90009d5e <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
90009cec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009cee:	2b00      	cmp	r3, #0
90009cf0:	d14b      	bne.n	90009d8a <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009cf2:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009cf4:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009cf6:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009cf8:	f023 0301 	bic.w	r3, r3, #1
90009cfc:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009cfe:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d00:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d02:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009d06:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d0a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d0e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d10:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d12:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d14:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d18:	d034      	beq.n	90009d84 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009d1a:	f7ff f9af 	bl	9000907c <HAL_JPEG_EncodeCpltCallback>
}
90009d1e:	bd38      	pop	{r3, r4, r5, pc}
90009d20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009d24:	f7ff bb70 	b.w	90009408 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009d28:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009d2a:	0651      	lsls	r1, r2, #25
90009d2c:	d5b2      	bpl.n	90009c94 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009d2e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009d30:	4629      	mov	r1, r5
90009d32:	f7fe feaf 	bl	90008a94 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009d36:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009d38:	4629      	mov	r1, r5
90009d3a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009d3c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009d3e:	f7f8 f90f 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009d42:	6823      	ldr	r3, [r4, #0]
90009d44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009d46:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009d4a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009d4c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009d4e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009d52:	639a      	str	r2, [r3, #56]	@ 0x38
90009d54:	e79e      	b.n	90009c94 <HAL_JPEG_IRQHandler+0x30>
}
90009d56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
90009d5a:	f000 bb35 	b.w	9000a3c8 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009d5e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009d60:	049b      	lsls	r3, r3, #18
90009d62:	d485      	bmi.n	90009c70 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
90009d64:	4620      	mov	r0, r4
}
90009d66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009d6a:	f7ff b9f3 	b.w	90009154 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
90009d6e:	f000 fb2b 	bl	9000a3c8 <HAL_MDMA_Abort_IT>
90009d72:	e7a7      	b.n	90009cc4 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d74:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d76:	4620      	mov	r0, r4
90009d78:	69e1      	ldr	r1, [r4, #28]
90009d7a:	f7f8 f93f 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009d7e:	2300      	movs	r3, #0
90009d80:	6263      	str	r3, [r4, #36]	@ 0x24
90009d82:	e7ae      	b.n	90009ce2 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d84:	f7f8 f9e8 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
90009d88:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d8a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d8c:	4620      	mov	r0, r4
90009d8e:	69e1      	ldr	r1, [r4, #28]
90009d90:	f7f8 f934 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d94:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009d96:	6265      	str	r5, [r4, #36]	@ 0x24
90009d98:	e7ab      	b.n	90009cf2 <HAL_JPEG_IRQHandler+0x8e>
90009d9a:	bf00      	nop

90009d9c <HAL_JPEG_GetState>:
  return hjpeg->State;
90009d9c:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
90009da0:	4770      	bx	lr
90009da2:	bf00      	nop

90009da4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
90009da4:	2800      	cmp	r0, #0
90009da6:	d052      	beq.n	90009e4e <HAL_LTDC_Init+0xaa>
{
90009da8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90009daa:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90009dae:	4604      	mov	r4, r0
90009db0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009db4:	2b00      	cmp	r3, #0
90009db6:	d045      	beq.n	90009e44 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009db8:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009dba:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009dbc:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009dc0:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009dc4:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009dc6:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009dc8:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009dca:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009dce:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009dd0:	6920      	ldr	r0, [r4, #16]
90009dd2:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
90009dd4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009dd6:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009dd8:	6999      	ldr	r1, [r3, #24]
90009dda:	430a      	orrs	r2, r1
90009ddc:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90009dde:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
90009de2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009de6:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90009de8:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
90009dec:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009df0:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
90009df2:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
90009df6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009dfa:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
90009dfc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009dfe:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009e02:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009e04:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90009e06:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009e0a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90009e0e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009e12:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009e14:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90009e16:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90009e1a:	432a      	orrs	r2, r5
90009e1c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009e20:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009e22:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009e26:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90009e28:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e2a:	f042 0206 	orr.w	r2, r2, #6
90009e2e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90009e30:	699a      	ldr	r2, [r3, #24]
90009e32:	f042 0201 	orr.w	r2, r2, #1
90009e36:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
90009e38:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009e3a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90009e3e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
90009e42:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
90009e44:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90009e48:	f7fa f930 	bl	900040ac <HAL_LTDC_MspInit>
90009e4c:	e7b4      	b.n	90009db8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90009e4e:	2001      	movs	r0, #1
}
90009e50:	4770      	bx	lr
90009e52:	bf00      	nop

90009e54 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90009e54:	4770      	bx	lr
90009e56:	bf00      	nop

90009e58 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90009e58:	4770      	bx	lr
90009e5a:	bf00      	nop

90009e5c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009e5c:	6803      	ldr	r3, [r0, #0]
{
90009e5e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009e60:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
90009e62:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90009e64:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90009e66:	076a      	lsls	r2, r5, #29
90009e68:	d501      	bpl.n	90009e6e <HAL_LTDC_IRQHandler+0x12>
90009e6a:	0771      	lsls	r1, r6, #29
90009e6c:	d41d      	bmi.n	90009eaa <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90009e6e:	07aa      	lsls	r2, r5, #30
90009e70:	d501      	bpl.n	90009e76 <HAL_LTDC_IRQHandler+0x1a>
90009e72:	07b3      	lsls	r3, r6, #30
90009e74:	d42d      	bmi.n	90009ed2 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90009e76:	07e8      	lsls	r0, r5, #31
90009e78:	d501      	bpl.n	90009e7e <HAL_LTDC_IRQHandler+0x22>
90009e7a:	07f1      	lsls	r1, r6, #31
90009e7c:	d440      	bmi.n	90009f00 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90009e7e:	072a      	lsls	r2, r5, #28
90009e80:	d501      	bpl.n	90009e86 <HAL_LTDC_IRQHandler+0x2a>
90009e82:	0733      	lsls	r3, r6, #28
90009e84:	d400      	bmi.n	90009e88 <HAL_LTDC_IRQHandler+0x2c>
}
90009e86:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009e88:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009e8a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90009e8c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90009e8e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009e90:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e92:	f022 0208 	bic.w	r2, r2, #8
90009e96:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009e98:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
90009e9a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
90009e9c:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009ea0:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90009ea4:	f7ff ffd8 	bl	90009e58 <HAL_LTDC_ReloadEventCallback>
}
90009ea8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90009eaa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009eac:	f022 0204 	bic.w	r2, r2, #4
90009eb0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90009eb2:	2204      	movs	r2, #4
90009eb4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90009eb6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90009eba:	f043 0301 	orr.w	r3, r3, #1
90009ebe:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009ec2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009ec4:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009ec8:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009ecc:	f7ff ffc2 	bl	90009e54 <HAL_LTDC_ErrorCallback>
90009ed0:	e7cd      	b.n	90009e6e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009ed2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90009ed4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009ed6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009ed8:	f022 0202 	bic.w	r2, r2, #2
90009edc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90009ede:	2202      	movs	r2, #2
90009ee0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009ee2:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90009ee4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90009ee8:	f043 0302 	orr.w	r3, r3, #2
90009eec:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009ef0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009ef2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009ef6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009efa:	f7ff ffab 	bl	90009e54 <HAL_LTDC_ErrorCallback>
90009efe:	e7ba      	b.n	90009e76 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009f00:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90009f02:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009f04:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009f06:	f022 0201 	bic.w	r2, r2, #1
90009f0a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90009f0c:	2201      	movs	r2, #1
90009f0e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90009f10:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90009f12:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009f16:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90009f1a:	f7f9 fbcd 	bl	900036b8 <HAL_LTDC_LineEventCallback>
90009f1e:	e7ae      	b.n	90009e7e <HAL_LTDC_IRQHandler+0x22>

90009f20 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
90009f20:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
90009f24:	2b01      	cmp	r3, #1
90009f26:	f000 80b6 	beq.w	9000a096 <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009f2a:	2302      	movs	r3, #2
{
90009f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f30:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f34:	f8d0 9000 	ldr.w	r9, [r0]
{
90009f38:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009f3a:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f3e:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f42:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f44:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f48:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f4a:	f102 0684 	add.w	r6, r2, #132	@ 0x84
90009f4e:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f50:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
90009f54:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f56:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f5a:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f5e:	f8df a140 	ldr.w	sl, [pc, #320]	@ 9000a0a0 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f62:	f8dc 3004 	ldr.w	r3, [ip, #4]
90009f66:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
90009f6a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f6c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009f6e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f74:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f76:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009f7c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f80:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f82:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009f84:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f86:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f8a:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009f8c:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f8e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f90:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009f94:	f8d9 300c 	ldr.w	r3, [r9, #12]
90009f98:	f3c3 430b 	ubfx	r3, r3, #16, #12
90009f9c:	440b      	add	r3, r1
90009f9e:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009fa2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009fa6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009faa:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009fae:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009fb2:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009fb6:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009fb8:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009fbc:	68ab      	ldr	r3, [r5, #8]
90009fbe:	f8d9 000c 	ldr.w	r0, [r9, #12]
90009fc2:	3301      	adds	r3, #1
90009fc4:	f3c0 000a 	ubfx	r0, r0, #0, #11
90009fc8:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90009fca:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009fcc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009fd0:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009fd2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90009fd6:	2907      	cmp	r1, #7
90009fd8:	f8dc 3010 	ldr.w	r3, [ip, #16]
90009fdc:	f023 0307 	bic.w	r3, r3, #7
90009fe0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009fe4:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009fe8:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
90009fec:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90009ff0:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009ff4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90009ff8:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009ffc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a000:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a004:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a008:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000a00c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a010:	696b      	ldr	r3, [r5, #20]
9000a012:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a016:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a01a:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a01c:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a020:	6a28      	ldr	r0, [r5, #32]
9000a022:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a026:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a02a:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000a02e:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000a030:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a034:	d82d      	bhi.n	9000a092 <HAL_LTDC_ConfigLayer+0x172>
9000a036:	4b19      	ldr	r3, [pc, #100]	@ (9000a09c <HAL_LTDC_ConfigLayer+0x17c>)
9000a038:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a03c:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a03e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a040:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a044:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a048:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a04a:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a04c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a050:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000a054:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000a058:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a05c:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a060:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
9000a064:	f36f 030a 	bfc	r3, #0, #11
9000a068:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a06c:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a070:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a072:	f859 3006 	ldr.w	r3, [r9, r6]
9000a076:	4313      	orrs	r3, r2
9000a078:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a07c:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a07e:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000a082:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a084:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000a088:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000a08c:	b003      	add	sp, #12
9000a08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000a092:	2301      	movs	r3, #1
9000a094:	e7d2      	b.n	9000a03c <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
9000a096:	2002      	movs	r0, #2
}
9000a098:	4770      	bx	lr
9000a09a:	bf00      	nop
9000a09c:	9002d198 	.word	0x9002d198
9000a0a0:	fffff8f8 	.word	0xfffff8f8

9000a0a4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a0a4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000a0a8:	2a01      	cmp	r2, #1
9000a0aa:	d019      	beq.n	9000a0e0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a0ac:	6802      	ldr	r2, [r0, #0]
9000a0ae:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a0b0:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a0b2:	f04f 0c00 	mov.w	ip, #0
{
9000a0b6:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a0b8:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a0bc:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a0be:	4c09      	ldr	r4, [pc, #36]	@ (9000a0e4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a0c0:	f020 0001 	bic.w	r0, r0, #1
9000a0c4:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a0c6:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a0c8:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a0ca:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000a0cc:	4301      	orrs	r1, r0
9000a0ce:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a0d0:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000a0d4:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a0d6:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a0da:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a0de:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a0e0:	2002      	movs	r0, #2
}
9000a0e2:	4770      	bx	lr
9000a0e4:	50001000 	.word	0x50001000

9000a0e8 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a0e8:	b538      	push	{r3, r4, r5, lr}
9000a0ea:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a0ec:	f7fc ff2c 	bl	90006f48 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a0f0:	2c00      	cmp	r4, #0
9000a0f2:	d058      	beq.n	9000a1a6 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a0f4:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a0f6:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a0f8:	2100      	movs	r1, #0
9000a0fa:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a0fc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a100:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a104:	68da      	ldr	r2, [r3, #12]
9000a106:	f022 0201 	bic.w	r2, r2, #1
9000a10a:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a10c:	e005      	b.n	9000a11a <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a10e:	f7fc ff1b 	bl	90006f48 <HAL_GetTick>
9000a112:	1b43      	subs	r3, r0, r5
9000a114:	2b05      	cmp	r3, #5
9000a116:	d841      	bhi.n	9000a19c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a118:	6823      	ldr	r3, [r4, #0]
9000a11a:	68da      	ldr	r2, [r3, #12]
9000a11c:	07d2      	lsls	r2, r2, #31
9000a11e:	d4f6      	bmi.n	9000a10e <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a120:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a124:	69e0      	ldr	r0, [r4, #28]
9000a126:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a128:	68e1      	ldr	r1, [r4, #12]
9000a12a:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a12c:	4302      	orrs	r2, r0
9000a12e:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a130:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a132:	4302      	orrs	r2, r0
9000a134:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a136:	4302      	orrs	r2, r0
9000a138:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a13a:	4302      	orrs	r2, r0
9000a13c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a13e:	4302      	orrs	r2, r0
9000a140:	68a0      	ldr	r0, [r4, #8]
9000a142:	4302      	orrs	r2, r0
9000a144:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a146:	3801      	subs	r0, #1
9000a148:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a14c:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a14e:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a150:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a154:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a156:	d103      	bne.n	9000a160 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a158:	691a      	ldr	r2, [r3, #16]
9000a15a:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a15e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a160:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a162:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a164:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a166:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a168:	db1f      	blt.n	9000a1aa <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a16a:	b292      	uxth	r2, r2
9000a16c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a16e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a170:	2a00      	cmp	r2, #0
9000a172:	db24      	blt.n	9000a1be <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a174:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a176:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a17a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a17e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a180:	d029      	beq.n	9000a1d6 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a182:	b2c0      	uxtb	r0, r0
9000a184:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a186:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a188:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a18a:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a18c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a18e:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a190:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a192:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a196:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a19a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a19c:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a19e:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a1a0:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a1a2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a1a6:	2001      	movs	r0, #1
}
9000a1a8:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a1aa:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a1ac:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a1ae:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a1b2:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a1b4:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a1b6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a1b8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a1ba:	2a00      	cmp	r2, #0
9000a1bc:	dada      	bge.n	9000a174 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a1be:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a1c0:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a1c2:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a1c6:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a1ca:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a1cc:	6a19      	ldr	r1, [r3, #32]
9000a1ce:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a1d2:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a1d4:	d1d5      	bne.n	9000a182 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a1d6:	2200      	movs	r2, #0
9000a1d8:	629a      	str	r2, [r3, #40]	@ 0x28
9000a1da:	e7d4      	b.n	9000a186 <HAL_MDMA_Init+0x9e>

9000a1dc <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a1dc:	b1f8      	cbz	r0, 9000a21e <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a1de:	6802      	ldr	r2, [r0, #0]
9000a1e0:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a1e2:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a1e4:	68d0      	ldr	r0, [r2, #12]
{
9000a1e6:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a1e8:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a1ec:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a1ee:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a1f0:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a1f2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a1f4:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a1f6:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a1f8:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a1fa:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a1fc:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a1fe:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a200:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a202:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a204:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a206:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a208:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a20a:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a20e:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a212:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a216:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a218:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a21c:	4770      	bx	lr
    return HAL_ERROR;
9000a21e:	2001      	movs	r0, #1
}
9000a220:	4770      	bx	lr
9000a222:	bf00      	nop

9000a224 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a224:	b308      	cbz	r0, 9000a26a <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a226:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a228:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a22c:	2801      	cmp	r0, #1
9000a22e:	d01e      	beq.n	9000a26e <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a230:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a232:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a236:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a23a:	45f4      	cmp	ip, lr
9000a23c:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a240:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a244:	d004      	beq.n	9000a250 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a246:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a248:	2200      	movs	r2, #0
9000a24a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a24e:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a250:	681c      	ldr	r4, [r3, #0]
9000a252:	6925      	ldr	r5, [r4, #16]
9000a254:	006d      	lsls	r5, r5, #1
9000a256:	d4f7      	bmi.n	9000a248 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a258:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a25a:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a25c:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a25e:	b941      	cbnz	r1, 9000a272 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a260:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a264:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a266:	2000      	movs	r0, #0
9000a268:	e7ee      	b.n	9000a248 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a26a:	2001      	movs	r0, #1
9000a26c:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a26e:	2002      	movs	r0, #2
}
9000a270:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a272:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a276:	6122      	str	r2, [r4, #16]
9000a278:	e7f5      	b.n	9000a266 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a27a:	bf00      	nop

9000a27c <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a27c:	2800      	cmp	r0, #0
9000a27e:	d066      	beq.n	9000a34e <HAL_MDMA_Start_IT+0xd2>
{
9000a280:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a282:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a286:	2c01      	cmp	r4, #1
9000a288:	d009      	beq.n	9000a29e <HAL_MDMA_Start_IT+0x22>
9000a28a:	2401      	movs	r4, #1
9000a28c:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a290:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a294:	2c01      	cmp	r4, #1
9000a296:	d005      	beq.n	9000a2a4 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a298:	2300      	movs	r3, #0
9000a29a:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a29e:	2002      	movs	r0, #2
}
9000a2a0:	bc70      	pop	{r4, r5, r6}
9000a2a2:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a2a4:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a2a6:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a2a8:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a2aa:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a2ae:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a2b2:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a2b6:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a2ba:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a2bc:	6804      	ldr	r4, [r0, #0]
9000a2be:	68e5      	ldr	r5, [r4, #12]
9000a2c0:	f025 0501 	bic.w	r5, r5, #1
9000a2c4:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a2c6:	6965      	ldr	r5, [r4, #20]
9000a2c8:	f363 0510 	bfi	r5, r3, #0, #17
9000a2cc:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a2ce:	6963      	ldr	r3, [r4, #20]
9000a2d0:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a2d4:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000a2d8:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a2da:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a2dc:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a2de:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a2e0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a2e2:	bf0c      	ite	eq
9000a2e4:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a2e8:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a2ec:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a2f0:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a2f2:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a2f4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a2f6:	bf0c      	ite	eq
9000a2f8:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a2fc:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000a300:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a302:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000a304:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a306:	68e3      	ldr	r3, [r4, #12]
9000a308:	f043 0306 	orr.w	r3, r3, #6
9000a30c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a30e:	b11a      	cbz	r2, 9000a318 <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a310:	68e3      	ldr	r3, [r4, #12]
9000a312:	f043 0310 	orr.w	r3, r3, #16
9000a316:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a318:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a31a:	b11b      	cbz	r3, 9000a324 <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a31c:	68e3      	ldr	r3, [r4, #12]
9000a31e:	f043 0308 	orr.w	r3, r3, #8
9000a322:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a324:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000a326:	b11b      	cbz	r3, 9000a330 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a328:	68e3      	ldr	r3, [r4, #12]
9000a32a:	f043 0320 	orr.w	r3, r3, #32
9000a32e:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a330:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a332:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a334:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a338:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a33c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a33e:	d103      	bne.n	9000a348 <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a340:	68e3      	ldr	r3, [r4, #12]
9000a342:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a346:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000a348:	2000      	movs	r0, #0
}
9000a34a:	bc70      	pop	{r4, r5, r6}
9000a34c:	4770      	bx	lr
    return HAL_ERROR;
9000a34e:	2001      	movs	r0, #1
}
9000a350:	4770      	bx	lr
9000a352:	bf00      	nop

9000a354 <HAL_MDMA_Abort>:
{
9000a354:	b538      	push	{r3, r4, r5, lr}
9000a356:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000a358:	f7fc fdf6 	bl	90006f48 <HAL_GetTick>
  if(hmdma == NULL)
9000a35c:	b334      	cbz	r4, 9000a3ac <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a35e:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000a362:	2b02      	cmp	r3, #2
9000a364:	d11d      	bne.n	9000a3a2 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a366:	6822      	ldr	r2, [r4, #0]
9000a368:	4605      	mov	r5, r0
9000a36a:	68d3      	ldr	r3, [r2, #12]
9000a36c:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000a370:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000a372:	68d3      	ldr	r3, [r2, #12]
9000a374:	f023 0301 	bic.w	r3, r3, #1
9000a378:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a37a:	e005      	b.n	9000a388 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a37c:	f7fc fde4 	bl	90006f48 <HAL_GetTick>
9000a380:	1b43      	subs	r3, r0, r5
9000a382:	2b05      	cmp	r3, #5
9000a384:	d814      	bhi.n	9000a3b0 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a386:	6822      	ldr	r2, [r4, #0]
9000a388:	68d3      	ldr	r3, [r2, #12]
9000a38a:	f013 0301 	ands.w	r3, r3, #1
9000a38e:	d1f5      	bne.n	9000a37c <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a390:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000a392:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a394:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000a396:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000a398:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000a39c:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a3a0:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a3a2:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a3a4:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a3a6:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a3a8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a3ac:	2001      	movs	r0, #1
}
9000a3ae:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a3b0:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a3b2:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a3b4:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a3b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a3ba:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a3be:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a3c0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a3c4:	e7f2      	b.n	9000a3ac <HAL_MDMA_Abort+0x58>
9000a3c6:	bf00      	nop

9000a3c8 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a3c8:	4603      	mov	r3, r0
9000a3ca:	b128      	cbz	r0, 9000a3d8 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a3cc:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a3d0:	2a02      	cmp	r2, #2
9000a3d2:	d003      	beq.n	9000a3dc <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a3d4:	2280      	movs	r2, #128	@ 0x80
9000a3d6:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a3d8:	2001      	movs	r0, #1
9000a3da:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a3dc:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a3de:	2104      	movs	r1, #4
  return HAL_OK;
9000a3e0:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a3e2:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a3e6:	68d3      	ldr	r3, [r2, #12]
9000a3e8:	f023 0301 	bic.w	r3, r3, #1
9000a3ec:	60d3      	str	r3, [r2, #12]
}
9000a3ee:	4770      	bx	lr

9000a3f0 <HAL_MDMA_IRQHandler>:
{
9000a3f0:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a3f2:	2300      	movs	r3, #0
{
9000a3f4:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a3f6:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a3fa:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a3fc:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a3fe:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a400:	4b57      	ldr	r3, [pc, #348]	@ (9000a560 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a402:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a404:	4a57      	ldr	r2, [pc, #348]	@ (9000a564 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a406:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a408:	6823      	ldr	r3, [r4, #0]
9000a40a:	441a      	add	r2, r3
9000a40c:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a410:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a414:	4202      	tst	r2, r0
9000a416:	f000 80a0 	beq.w	9000a55a <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a41a:	681a      	ldr	r2, [r3, #0]
9000a41c:	07d1      	lsls	r1, r2, #31
9000a41e:	d529      	bpl.n	9000a474 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a420:	68da      	ldr	r2, [r3, #12]
9000a422:	0792      	lsls	r2, r2, #30
9000a424:	d526      	bpl.n	9000a474 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a426:	68da      	ldr	r2, [r3, #12]
9000a428:	f022 0202 	bic.w	r2, r2, #2
9000a42c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a42e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a430:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a432:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a434:	bf54      	ite	pl
9000a436:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a43a:	f041 0102 	orrmi.w	r1, r1, #2
9000a43e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a440:	0591      	lsls	r1, r2, #22
9000a442:	d503      	bpl.n	9000a44c <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a444:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a446:	f041 0104 	orr.w	r1, r1, #4
9000a44a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a44c:	05d0      	lsls	r0, r2, #23
9000a44e:	d503      	bpl.n	9000a458 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a450:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a452:	f041 0108 	orr.w	r1, r1, #8
9000a456:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a458:	0551      	lsls	r1, r2, #21
9000a45a:	d503      	bpl.n	9000a464 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a45c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a45e:	f041 0110 	orr.w	r1, r1, #16
9000a462:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a464:	0510      	lsls	r0, r2, #20
9000a466:	d503      	bpl.n	9000a470 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a468:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a46a:	f042 0220 	orr.w	r2, r2, #32
9000a46e:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a470:	2201      	movs	r2, #1
9000a472:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a474:	681a      	ldr	r2, [r3, #0]
9000a476:	06d1      	lsls	r1, r2, #27
9000a478:	d509      	bpl.n	9000a48e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a47a:	68da      	ldr	r2, [r3, #12]
9000a47c:	0692      	lsls	r2, r2, #26
9000a47e:	d506      	bpl.n	9000a48e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a480:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a482:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a484:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a486:	b112      	cbz	r2, 9000a48e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a488:	4620      	mov	r0, r4
9000a48a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a48c:	6823      	ldr	r3, [r4, #0]
9000a48e:	681a      	ldr	r2, [r3, #0]
9000a490:	0710      	lsls	r0, r2, #28
9000a492:	d509      	bpl.n	9000a4a8 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a494:	68da      	ldr	r2, [r3, #12]
9000a496:	06d1      	lsls	r1, r2, #27
9000a498:	d506      	bpl.n	9000a4a8 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a49a:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a49c:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a49e:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a4a0:	b112      	cbz	r2, 9000a4a8 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a4a2:	4620      	mov	r0, r4
9000a4a4:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a4a6:	6823      	ldr	r3, [r4, #0]
9000a4a8:	681a      	ldr	r2, [r3, #0]
9000a4aa:	0752      	lsls	r2, r2, #29
9000a4ac:	d509      	bpl.n	9000a4c2 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a4ae:	68da      	ldr	r2, [r3, #12]
9000a4b0:	0710      	lsls	r0, r2, #28
9000a4b2:	d506      	bpl.n	9000a4c2 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a4b4:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a4b6:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a4b8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a4ba:	b112      	cbz	r2, 9000a4c2 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a4bc:	4620      	mov	r0, r4
9000a4be:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a4c0:	6823      	ldr	r3, [r4, #0]
9000a4c2:	681a      	ldr	r2, [r3, #0]
9000a4c4:	0791      	lsls	r1, r2, #30
9000a4c6:	d516      	bpl.n	9000a4f6 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a4c8:	68da      	ldr	r2, [r3, #12]
9000a4ca:	0752      	lsls	r2, r2, #29
9000a4cc:	d513      	bpl.n	9000a4f6 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a4ce:	68da      	ldr	r2, [r3, #12]
9000a4d0:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a4d4:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a4d6:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a4da:	2a04      	cmp	r2, #4
9000a4dc:	d034      	beq.n	9000a548 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a4de:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a4e0:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a4e2:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a4e4:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a4e6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a4e8:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a4ec:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a4f0:	b10b      	cbz	r3, 9000a4f6 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a4f2:	4620      	mov	r0, r4
9000a4f4:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a4f6:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a4f8:	2b00      	cmp	r3, #0
9000a4fa:	d02e      	beq.n	9000a55a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a4fc:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a4fe:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a500:	4b19      	ldr	r3, [pc, #100]	@ (9000a568 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a502:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a506:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a50a:	68cb      	ldr	r3, [r1, #12]
9000a50c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a510:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a512:	60cb      	str	r3, [r1, #12]
9000a514:	e002      	b.n	9000a51c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a516:	68cb      	ldr	r3, [r1, #12]
9000a518:	07d8      	lsls	r0, r3, #31
9000a51a:	d504      	bpl.n	9000a526 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a51c:	9b01      	ldr	r3, [sp, #4]
9000a51e:	3301      	adds	r3, #1
9000a520:	4293      	cmp	r3, r2
9000a522:	9301      	str	r3, [sp, #4]
9000a524:	d9f7      	bls.n	9000a516 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a526:	2300      	movs	r3, #0
9000a528:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a52c:	68cb      	ldr	r3, [r1, #12]
9000a52e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a530:	bf4c      	ite	mi
9000a532:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a534:	2301      	movpl	r3, #1
9000a536:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a53a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a53c:	b16b      	cbz	r3, 9000a55a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a53e:	4620      	mov	r0, r4
}
9000a540:	b003      	add	sp, #12
9000a542:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a546:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a548:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a54a:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a54c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a54e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a552:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a556:	2b00      	cmp	r3, #0
9000a558:	d1f1      	bne.n	9000a53e <HAL_MDMA_IRQHandler+0x14e>
}
9000a55a:	b003      	add	sp, #12
9000a55c:	bd30      	pop	{r4, r5, pc}
9000a55e:	bf00      	nop
9000a560:	24000078 	.word	0x24000078
9000a564:	adffffc0 	.word	0xadffffc0
9000a568:	1b4e81b5 	.word	0x1b4e81b5

9000a56c <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a56c:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a56e:	4c10      	ldr	r4, [pc, #64]	@ (9000a5b0 <HAL_PWREx_ConfigSupply+0x44>)
9000a570:	68e3      	ldr	r3, [r4, #12]
9000a572:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a576:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a578:	d105      	bne.n	9000a586 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a57a:	f003 0307 	and.w	r3, r3, #7
9000a57e:	1a18      	subs	r0, r3, r0
9000a580:	bf18      	it	ne
9000a582:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a584:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a586:	f023 0307 	bic.w	r3, r3, #7
9000a58a:	4303      	orrs	r3, r0
9000a58c:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a58e:	f7fc fcdb 	bl	90006f48 <HAL_GetTick>
9000a592:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a594:	e005      	b.n	9000a5a2 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a596:	f7fc fcd7 	bl	90006f48 <HAL_GetTick>
9000a59a:	1b40      	subs	r0, r0, r5
9000a59c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a5a0:	d804      	bhi.n	9000a5ac <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a5a2:	6863      	ldr	r3, [r4, #4]
9000a5a4:	049b      	lsls	r3, r3, #18
9000a5a6:	d5f6      	bpl.n	9000a596 <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a5a8:	2000      	movs	r0, #0
}
9000a5aa:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a5ac:	2001      	movs	r0, #1
}
9000a5ae:	bd38      	pop	{r3, r4, r5, pc}
9000a5b0:	58024800 	.word	0x58024800

9000a5b4 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a5b4:	4b33      	ldr	r3, [pc, #204]	@ (9000a684 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a5b6:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a5b8:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a5ba:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a5bc:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a5be:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a5c2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a5c4:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a5c8:	d036      	beq.n	9000a638 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a5ca:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a5ce:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a5d2:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5d6:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a5da:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000a5de:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5e0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a5e4:	ee06 2a90 	vmov	s13, r2
9000a5e8:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000a5ec:	d002      	beq.n	9000a5f4 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a5ee:	2902      	cmp	r1, #2
9000a5f0:	d042      	beq.n	9000a678 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a5f2:	b319      	cbz	r1, 9000a63c <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5f4:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000a688 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a5f8:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a5fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a5fe:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a602:	ee07 3a90 	vmov	s15, r3
9000a606:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a60a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a60e:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a612:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a616:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a61a:	4b1a      	ldr	r3, [pc, #104]	@ (9000a684 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a61c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a61e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a622:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a624:	ee07 3a10 	vmov	s14, r3
9000a628:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000a62c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000a630:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000a634:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a638:	bc30      	pop	{r4, r5}
9000a63a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a63c:	681a      	ldr	r2, [r3, #0]
9000a63e:	0692      	lsls	r2, r2, #26
9000a640:	d51d      	bpl.n	9000a67e <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a642:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a644:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a648:	4a10      	ldr	r2, [pc, #64]	@ (9000a68c <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a64a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a64c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a650:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a654:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a656:	ee07 3a90 	vmov	s15, r3
9000a65a:	ee06 2a10 	vmov	s12, r2
9000a65e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a662:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a666:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000a66a:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000a66e:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000a672:	ee67 7a87 	vmul.f32	s15, s15, s14
9000a676:	e7d0      	b.n	9000a61a <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a678:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a690 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000a67c:	e7bc      	b.n	9000a5f8 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a67e:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a694 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000a682:	e7b9      	b.n	9000a5f8 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a684:	58024400 	.word	0x58024400
9000a688:	4a742400 	.word	0x4a742400
9000a68c:	03d09000 	.word	0x03d09000
9000a690:	4bbebc20 	.word	0x4bbebc20
9000a694:	4c742400 	.word	0x4c742400

9000a698 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a698:	2800      	cmp	r0, #0
9000a69a:	f000 82e7 	beq.w	9000ac6c <HAL_RCC_OscConfig+0x5d4>
{
9000a69e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a6a0:	6803      	ldr	r3, [r0, #0]
9000a6a2:	4604      	mov	r4, r0
9000a6a4:	07d9      	lsls	r1, r3, #31
9000a6a6:	d52e      	bpl.n	9000a706 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a6a8:	4997      	ldr	r1, [pc, #604]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a6aa:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a6ac:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a6ae:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a6b2:	2a10      	cmp	r2, #16
9000a6b4:	f000 80ee 	beq.w	9000a894 <HAL_RCC_OscConfig+0x1fc>
9000a6b8:	2a18      	cmp	r2, #24
9000a6ba:	f000 80e6 	beq.w	9000a88a <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a6be:	6863      	ldr	r3, [r4, #4]
9000a6c0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000a6c4:	f000 8111 	beq.w	9000a8ea <HAL_RCC_OscConfig+0x252>
9000a6c8:	2b00      	cmp	r3, #0
9000a6ca:	f000 8167 	beq.w	9000a99c <HAL_RCC_OscConfig+0x304>
9000a6ce:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000a6d2:	4b8d      	ldr	r3, [pc, #564]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a6d4:	681a      	ldr	r2, [r3, #0]
9000a6d6:	f000 8288 	beq.w	9000abea <HAL_RCC_OscConfig+0x552>
9000a6da:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000a6de:	601a      	str	r2, [r3, #0]
9000a6e0:	681a      	ldr	r2, [r3, #0]
9000a6e2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000a6e6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000a6e8:	f7fc fc2e 	bl	90006f48 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a6ec:	4e86      	ldr	r6, [pc, #536]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000a6ee:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a6f0:	e005      	b.n	9000a6fe <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a6f2:	f7fc fc29 	bl	90006f48 <HAL_GetTick>
9000a6f6:	1b40      	subs	r0, r0, r5
9000a6f8:	2864      	cmp	r0, #100	@ 0x64
9000a6fa:	f200 814d 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a6fe:	6833      	ldr	r3, [r6, #0]
9000a700:	039b      	lsls	r3, r3, #14
9000a702:	d5f6      	bpl.n	9000a6f2 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000a704:	6823      	ldr	r3, [r4, #0]
9000a706:	079d      	lsls	r5, r3, #30
9000a708:	d470      	bmi.n	9000a7ec <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a70a:	06d9      	lsls	r1, r3, #27
9000a70c:	d533      	bpl.n	9000a776 <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a70e:	4a7e      	ldr	r2, [pc, #504]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a710:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a712:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a714:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a718:	2b08      	cmp	r3, #8
9000a71a:	f000 80cb 	beq.w	9000a8b4 <HAL_RCC_OscConfig+0x21c>
9000a71e:	2b18      	cmp	r3, #24
9000a720:	f000 80c3 	beq.w	9000a8aa <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a724:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000a726:	4d78      	ldr	r5, [pc, #480]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a728:	2b00      	cmp	r3, #0
9000a72a:	f000 816f 	beq.w	9000aa0c <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000a72e:	682b      	ldr	r3, [r5, #0]
9000a730:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000a734:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a736:	f7fc fc07 	bl	90006f48 <HAL_GetTick>
9000a73a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a73c:	e005      	b.n	9000a74a <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a73e:	f7fc fc03 	bl	90006f48 <HAL_GetTick>
9000a742:	1b80      	subs	r0, r0, r6
9000a744:	2802      	cmp	r0, #2
9000a746:	f200 8127 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a74a:	682b      	ldr	r3, [r5, #0]
9000a74c:	05db      	lsls	r3, r3, #23
9000a74e:	d5f6      	bpl.n	9000a73e <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a750:	f7fc fc00 	bl	90006f54 <HAL_GetREVID>
9000a754:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a758:	4298      	cmp	r0, r3
9000a75a:	f200 8267 	bhi.w	9000ac2c <HAL_RCC_OscConfig+0x594>
9000a75e:	6a22      	ldr	r2, [r4, #32]
9000a760:	686b      	ldr	r3, [r5, #4]
9000a762:	2a20      	cmp	r2, #32
9000a764:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a768:	bf0c      	ite	eq
9000a76a:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000a76e:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000a772:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a774:	6823      	ldr	r3, [r4, #0]
9000a776:	071d      	lsls	r5, r3, #28
9000a778:	d516      	bpl.n	9000a7a8 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a77a:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000a77c:	4d62      	ldr	r5, [pc, #392]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a77e:	2b00      	cmp	r3, #0
9000a780:	f000 8122 	beq.w	9000a9c8 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000a784:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a786:	f043 0301 	orr.w	r3, r3, #1
9000a78a:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a78c:	f7fc fbdc 	bl	90006f48 <HAL_GetTick>
9000a790:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a792:	e005      	b.n	9000a7a0 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a794:	f7fc fbd8 	bl	90006f48 <HAL_GetTick>
9000a798:	1b80      	subs	r0, r0, r6
9000a79a:	2802      	cmp	r0, #2
9000a79c:	f200 80fc 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a7a0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a7a2:	0798      	lsls	r0, r3, #30
9000a7a4:	d5f6      	bpl.n	9000a794 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000a7a6:	6823      	ldr	r3, [r4, #0]
9000a7a8:	069a      	lsls	r2, r3, #26
9000a7aa:	d516      	bpl.n	9000a7da <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a7ac:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000a7ae:	4d56      	ldr	r5, [pc, #344]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a7b0:	2b00      	cmp	r3, #0
9000a7b2:	f000 811a 	beq.w	9000a9ea <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000a7b6:	682b      	ldr	r3, [r5, #0]
9000a7b8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a7bc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a7be:	f7fc fbc3 	bl	90006f48 <HAL_GetTick>
9000a7c2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a7c4:	e005      	b.n	9000a7d2 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a7c6:	f7fc fbbf 	bl	90006f48 <HAL_GetTick>
9000a7ca:	1b80      	subs	r0, r0, r6
9000a7cc:	2802      	cmp	r0, #2
9000a7ce:	f200 80e3 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a7d2:	682b      	ldr	r3, [r5, #0]
9000a7d4:	049f      	lsls	r7, r3, #18
9000a7d6:	d5f6      	bpl.n	9000a7c6 <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000a7d8:	6823      	ldr	r3, [r4, #0]
9000a7da:	0759      	lsls	r1, r3, #29
9000a7dc:	f100 808b 	bmi.w	9000a8f6 <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000a7e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7e2:	2b00      	cmp	r3, #0
9000a7e4:	f040 80bf 	bne.w	9000a966 <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000a7e8:	2000      	movs	r0, #0
}
9000a7ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a7ec:	4a46      	ldr	r2, [pc, #280]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a7ee:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a7f0:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a7f2:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000a7f6:	d12d      	bne.n	9000a854 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a7f8:	4b43      	ldr	r3, [pc, #268]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a7fa:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a7fc:	681b      	ldr	r3, [r3, #0]
9000a7fe:	0759      	lsls	r1, r3, #29
9000a800:	d501      	bpl.n	9000a806 <HAL_RCC_OscConfig+0x16e>
9000a802:	2a00      	cmp	r2, #0
9000a804:	d04f      	beq.n	9000a8a6 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a806:	4d40      	ldr	r5, [pc, #256]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a808:	682b      	ldr	r3, [r5, #0]
9000a80a:	f023 0319 	bic.w	r3, r3, #25
9000a80e:	4313      	orrs	r3, r2
9000a810:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a812:	f7fc fb99 	bl	90006f48 <HAL_GetTick>
9000a816:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a818:	e005      	b.n	9000a826 <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a81a:	f7fc fb95 	bl	90006f48 <HAL_GetTick>
9000a81e:	1b80      	subs	r0, r0, r6
9000a820:	2802      	cmp	r0, #2
9000a822:	f200 80b9 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a826:	682b      	ldr	r3, [r5, #0]
9000a828:	075b      	lsls	r3, r3, #29
9000a82a:	d5f6      	bpl.n	9000a81a <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a82c:	f7fc fb92 	bl	90006f54 <HAL_GetREVID>
9000a830:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a834:	4298      	cmp	r0, r3
9000a836:	f200 8110 	bhi.w	9000aa5a <HAL_RCC_OscConfig+0x3c2>
9000a83a:	6922      	ldr	r2, [r4, #16]
9000a83c:	686b      	ldr	r3, [r5, #4]
9000a83e:	2a40      	cmp	r2, #64	@ 0x40
9000a840:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000a844:	bf0c      	ite	eq
9000a846:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000a84a:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000a84e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a850:	6823      	ldr	r3, [r4, #0]
9000a852:	e75a      	b.n	9000a70a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a854:	2b18      	cmp	r3, #24
9000a856:	f000 80fc 	beq.w	9000aa52 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a85a:	4d2b      	ldr	r5, [pc, #172]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a85c:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a85e:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a860:	2a00      	cmp	r2, #0
9000a862:	f000 80e5 	beq.w	9000aa30 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a866:	f023 0319 	bic.w	r3, r3, #25
9000a86a:	4313      	orrs	r3, r2
9000a86c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a86e:	f7fc fb6b 	bl	90006f48 <HAL_GetTick>
9000a872:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a874:	e005      	b.n	9000a882 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a876:	f7fc fb67 	bl	90006f48 <HAL_GetTick>
9000a87a:	1b80      	subs	r0, r0, r6
9000a87c:	2802      	cmp	r0, #2
9000a87e:	f200 808b 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a882:	682b      	ldr	r3, [r5, #0]
9000a884:	075f      	lsls	r7, r3, #29
9000a886:	d5f6      	bpl.n	9000a876 <HAL_RCC_OscConfig+0x1de>
9000a888:	e7d0      	b.n	9000a82c <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a88a:	f001 0103 	and.w	r1, r1, #3
9000a88e:	2902      	cmp	r1, #2
9000a890:	f47f af15 	bne.w	9000a6be <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000a894:	4a1c      	ldr	r2, [pc, #112]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a896:	6812      	ldr	r2, [r2, #0]
9000a898:	0392      	lsls	r2, r2, #14
9000a89a:	f57f af34 	bpl.w	9000a706 <HAL_RCC_OscConfig+0x6e>
9000a89e:	6862      	ldr	r2, [r4, #4]
9000a8a0:	2a00      	cmp	r2, #0
9000a8a2:	f47f af30 	bne.w	9000a706 <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000a8a6:	2001      	movs	r0, #1
}
9000a8a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a8aa:	f002 0203 	and.w	r2, r2, #3
9000a8ae:	2a01      	cmp	r2, #1
9000a8b0:	f47f af38 	bne.w	9000a724 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000a8b4:	4b14      	ldr	r3, [pc, #80]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a8b6:	681b      	ldr	r3, [r3, #0]
9000a8b8:	05da      	lsls	r2, r3, #23
9000a8ba:	d502      	bpl.n	9000a8c2 <HAL_RCC_OscConfig+0x22a>
9000a8bc:	69e3      	ldr	r3, [r4, #28]
9000a8be:	2b80      	cmp	r3, #128	@ 0x80
9000a8c0:	d1f1      	bne.n	9000a8a6 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a8c2:	f7fc fb47 	bl	90006f54 <HAL_GetREVID>
9000a8c6:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a8ca:	4298      	cmp	r0, r3
9000a8cc:	f200 80ce 	bhi.w	9000aa6c <HAL_RCC_OscConfig+0x3d4>
9000a8d0:	6a22      	ldr	r2, [r4, #32]
9000a8d2:	2a20      	cmp	r2, #32
9000a8d4:	f000 81b9 	beq.w	9000ac4a <HAL_RCC_OscConfig+0x5b2>
9000a8d8:	490b      	ldr	r1, [pc, #44]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a8da:	684b      	ldr	r3, [r1, #4]
9000a8dc:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a8e0:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000a8e4:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a8e6:	6823      	ldr	r3, [r4, #0]
9000a8e8:	e745      	b.n	9000a776 <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a8ea:	4a07      	ldr	r2, [pc, #28]	@ (9000a908 <HAL_RCC_OscConfig+0x270>)
9000a8ec:	6813      	ldr	r3, [r2, #0]
9000a8ee:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a8f2:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a8f4:	e6f8      	b.n	9000a6e8 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000a8f6:	4d05      	ldr	r5, [pc, #20]	@ (9000a90c <HAL_RCC_OscConfig+0x274>)
9000a8f8:	682b      	ldr	r3, [r5, #0]
9000a8fa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a8fe:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000a900:	f7fc fb22 	bl	90006f48 <HAL_GetTick>
9000a904:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a906:	e008      	b.n	9000a91a <HAL_RCC_OscConfig+0x282>
9000a908:	58024400 	.word	0x58024400
9000a90c:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000a910:	f7fc fb1a 	bl	90006f48 <HAL_GetTick>
9000a914:	1b80      	subs	r0, r0, r6
9000a916:	2864      	cmp	r0, #100	@ 0x64
9000a918:	d83e      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a91a:	682b      	ldr	r3, [r5, #0]
9000a91c:	05da      	lsls	r2, r3, #23
9000a91e:	d5f7      	bpl.n	9000a910 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a920:	68a3      	ldr	r3, [r4, #8]
9000a922:	2b01      	cmp	r3, #1
9000a924:	f000 818b 	beq.w	9000ac3e <HAL_RCC_OscConfig+0x5a6>
9000a928:	2b00      	cmp	r3, #0
9000a92a:	f000 8166 	beq.w	9000abfa <HAL_RCC_OscConfig+0x562>
9000a92e:	2b05      	cmp	r3, #5
9000a930:	4b85      	ldr	r3, [pc, #532]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
9000a932:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a934:	f000 8192 	beq.w	9000ac5c <HAL_RCC_OscConfig+0x5c4>
9000a938:	f022 0201 	bic.w	r2, r2, #1
9000a93c:	671a      	str	r2, [r3, #112]	@ 0x70
9000a93e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a940:	f022 0204 	bic.w	r2, r2, #4
9000a944:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a946:	f7fc faff 	bl	90006f48 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a94a:	4e7f      	ldr	r6, [pc, #508]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a94c:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000a950:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a952:	e004      	b.n	9000a95e <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a954:	f7fc faf8 	bl	90006f48 <HAL_GetTick>
9000a958:	1b40      	subs	r0, r0, r5
9000a95a:	42b8      	cmp	r0, r7
9000a95c:	d81c      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a95e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000a960:	079b      	lsls	r3, r3, #30
9000a962:	d5f7      	bpl.n	9000a954 <HAL_RCC_OscConfig+0x2bc>
9000a964:	e73c      	b.n	9000a7e0 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000a966:	4d78      	ldr	r5, [pc, #480]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
9000a968:	692a      	ldr	r2, [r5, #16]
9000a96a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a96e:	2a18      	cmp	r2, #24
9000a970:	f000 80ee 	beq.w	9000ab50 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a974:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000a976:	682b      	ldr	r3, [r5, #0]
9000a978:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000a97c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a97e:	d07f      	beq.n	9000aa80 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000a980:	f7fc fae2 	bl	90006f48 <HAL_GetTick>
9000a984:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a986:	682b      	ldr	r3, [r5, #0]
9000a988:	019b      	lsls	r3, r3, #6
9000a98a:	f57f af2d 	bpl.w	9000a7e8 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a98e:	f7fc fadb 	bl	90006f48 <HAL_GetTick>
9000a992:	1b00      	subs	r0, r0, r4
9000a994:	2802      	cmp	r0, #2
9000a996:	d9f6      	bls.n	9000a986 <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000a998:	2003      	movs	r0, #3
}
9000a99a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a99c:	4d6a      	ldr	r5, [pc, #424]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
9000a99e:	682b      	ldr	r3, [r5, #0]
9000a9a0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000a9a4:	602b      	str	r3, [r5, #0]
9000a9a6:	682b      	ldr	r3, [r5, #0]
9000a9a8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000a9ac:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a9ae:	f7fc facb 	bl	90006f48 <HAL_GetTick>
9000a9b2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a9b4:	e004      	b.n	9000a9c0 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a9b6:	f7fc fac7 	bl	90006f48 <HAL_GetTick>
9000a9ba:	1b80      	subs	r0, r0, r6
9000a9bc:	2864      	cmp	r0, #100	@ 0x64
9000a9be:	d8eb      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a9c0:	682b      	ldr	r3, [r5, #0]
9000a9c2:	039f      	lsls	r7, r3, #14
9000a9c4:	d4f7      	bmi.n	9000a9b6 <HAL_RCC_OscConfig+0x31e>
9000a9c6:	e69d      	b.n	9000a704 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000a9c8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a9ca:	f023 0301 	bic.w	r3, r3, #1
9000a9ce:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a9d0:	f7fc faba 	bl	90006f48 <HAL_GetTick>
9000a9d4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a9d6:	e004      	b.n	9000a9e2 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a9d8:	f7fc fab6 	bl	90006f48 <HAL_GetTick>
9000a9dc:	1b80      	subs	r0, r0, r6
9000a9de:	2802      	cmp	r0, #2
9000a9e0:	d8da      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a9e2:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a9e4:	0799      	lsls	r1, r3, #30
9000a9e6:	d4f7      	bmi.n	9000a9d8 <HAL_RCC_OscConfig+0x340>
9000a9e8:	e6dd      	b.n	9000a7a6 <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000a9ea:	682b      	ldr	r3, [r5, #0]
9000a9ec:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a9f0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a9f2:	f7fc faa9 	bl	90006f48 <HAL_GetTick>
9000a9f6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a9f8:	e004      	b.n	9000aa04 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a9fa:	f7fc faa5 	bl	90006f48 <HAL_GetTick>
9000a9fe:	1b80      	subs	r0, r0, r6
9000aa00:	2802      	cmp	r0, #2
9000aa02:	d8c9      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000aa04:	682b      	ldr	r3, [r5, #0]
9000aa06:	0498      	lsls	r0, r3, #18
9000aa08:	d4f7      	bmi.n	9000a9fa <HAL_RCC_OscConfig+0x362>
9000aa0a:	e6e5      	b.n	9000a7d8 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000aa0c:	682b      	ldr	r3, [r5, #0]
9000aa0e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000aa12:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aa14:	f7fc fa98 	bl	90006f48 <HAL_GetTick>
9000aa18:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000aa1a:	e004      	b.n	9000aa26 <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000aa1c:	f7fc fa94 	bl	90006f48 <HAL_GetTick>
9000aa20:	1b80      	subs	r0, r0, r6
9000aa22:	2802      	cmp	r0, #2
9000aa24:	d8b8      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000aa26:	682b      	ldr	r3, [r5, #0]
9000aa28:	05df      	lsls	r7, r3, #23
9000aa2a:	d4f7      	bmi.n	9000aa1c <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aa2c:	6823      	ldr	r3, [r4, #0]
9000aa2e:	e6a2      	b.n	9000a776 <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000aa30:	f023 0301 	bic.w	r3, r3, #1
9000aa34:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aa36:	f7fc fa87 	bl	90006f48 <HAL_GetTick>
9000aa3a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000aa3c:	e004      	b.n	9000aa48 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000aa3e:	f7fc fa83 	bl	90006f48 <HAL_GetTick>
9000aa42:	1b80      	subs	r0, r0, r6
9000aa44:	2802      	cmp	r0, #2
9000aa46:	d8a7      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000aa48:	682b      	ldr	r3, [r5, #0]
9000aa4a:	0758      	lsls	r0, r3, #29
9000aa4c:	d4f7      	bmi.n	9000aa3e <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aa4e:	6823      	ldr	r3, [r4, #0]
9000aa50:	e65b      	b.n	9000a70a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000aa52:	0790      	lsls	r0, r2, #30
9000aa54:	f47f af01 	bne.w	9000a85a <HAL_RCC_OscConfig+0x1c2>
9000aa58:	e6ce      	b.n	9000a7f8 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000aa5a:	686b      	ldr	r3, [r5, #4]
9000aa5c:	6922      	ldr	r2, [r4, #16]
9000aa5e:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000aa62:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000aa66:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aa68:	6823      	ldr	r3, [r4, #0]
9000aa6a:	e64e      	b.n	9000a70a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000aa6c:	4a36      	ldr	r2, [pc, #216]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
9000aa6e:	6a21      	ldr	r1, [r4, #32]
9000aa70:	68d3      	ldr	r3, [r2, #12]
9000aa72:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000aa76:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000aa7a:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aa7c:	6823      	ldr	r3, [r4, #0]
9000aa7e:	e67a      	b.n	9000a776 <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000aa80:	f7fc fa62 	bl	90006f48 <HAL_GetTick>
9000aa84:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa86:	e004      	b.n	9000aa92 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aa88:	f7fc fa5e 	bl	90006f48 <HAL_GetTick>
9000aa8c:	1b80      	subs	r0, r0, r6
9000aa8e:	2802      	cmp	r0, #2
9000aa90:	d882      	bhi.n	9000a998 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa92:	682b      	ldr	r3, [r5, #0]
9000aa94:	0199      	lsls	r1, r3, #6
9000aa96:	d4f7      	bmi.n	9000aa88 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000aa98:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000aa9a:	4b2c      	ldr	r3, [pc, #176]	@ (9000ab4c <HAL_RCC_OscConfig+0x4b4>)
9000aa9c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000aa9e:	400b      	ands	r3, r1
9000aaa0:	4313      	orrs	r3, r2
9000aaa2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aaa4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000aaa8:	62ab      	str	r3, [r5, #40]	@ 0x28
9000aaaa:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000aaac:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000aab0:	3901      	subs	r1, #1
9000aab2:	3b01      	subs	r3, #1
9000aab4:	3a01      	subs	r2, #1
9000aab6:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000aaba:	025b      	lsls	r3, r3, #9
9000aabc:	0412      	lsls	r2, r2, #16
9000aabe:	b29b      	uxth	r3, r3
9000aac0:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000aac4:	4313      	orrs	r3, r2
9000aac6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000aac8:	3a01      	subs	r2, #1
9000aaca:	430b      	orrs	r3, r1
9000aacc:	0612      	lsls	r2, r2, #24
9000aace:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000aad2:	4313      	orrs	r3, r2
9000aad4:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000aad6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aad8:	f023 0301 	bic.w	r3, r3, #1
9000aadc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aade:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000aae0:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000aae2:	f36f 03cf 	bfc	r3, #3, #13
9000aae6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000aaea:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000aaec:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaee:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000aaf0:	f023 030c 	bic.w	r3, r3, #12
9000aaf4:	4313      	orrs	r3, r2
9000aaf6:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000aaf8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aafa:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000aafc:	f023 0302 	bic.w	r3, r3, #2
9000ab00:	4313      	orrs	r3, r2
9000ab02:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ab04:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ab06:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000ab0a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ab0c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ab0e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000ab12:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ab14:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ab16:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000ab1a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ab1c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ab1e:	f043 0301 	orr.w	r3, r3, #1
9000ab22:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ab24:	682b      	ldr	r3, [r5, #0]
9000ab26:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000ab2a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ab2c:	f7fc fa0c 	bl	90006f48 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ab30:	4d05      	ldr	r5, [pc, #20]	@ (9000ab48 <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000ab32:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ab34:	682b      	ldr	r3, [r5, #0]
9000ab36:	019a      	lsls	r2, r3, #6
9000ab38:	f53f ae56 	bmi.w	9000a7e8 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ab3c:	f7fc fa04 	bl	90006f48 <HAL_GetTick>
9000ab40:	1b00      	subs	r0, r0, r4
9000ab42:	2802      	cmp	r0, #2
9000ab44:	d9f6      	bls.n	9000ab34 <HAL_RCC_OscConfig+0x49c>
9000ab46:	e727      	b.n	9000a998 <HAL_RCC_OscConfig+0x300>
9000ab48:	58024400 	.word	0x58024400
9000ab4c:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ab50:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000ab52:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000ab54:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ab56:	f43f aea6 	beq.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ab5a:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ab5e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000ab60:	428b      	cmp	r3, r1
9000ab62:	f47f aea0 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ab66:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ab6a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ab6c:	429a      	cmp	r2, r3
9000ab6e:	f47f ae9a 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ab72:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ab74:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000ab78:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ab7a:	429a      	cmp	r2, r3
9000ab7c:	f47f ae93 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab80:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000ab82:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000ab86:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ab88:	429a      	cmp	r2, r3
9000ab8a:	f47f ae8c 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000ab8e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ab90:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000ab94:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab96:	429a      	cmp	r2, r3
9000ab98:	f47f ae85 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000ab9c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ab9e:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000aba2:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000aba4:	4298      	cmp	r0, r3
9000aba6:	f47f ae7e 	bne.w	9000a8a6 <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000abaa:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000abac:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000abae:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000abb2:	429a      	cmp	r2, r3
9000abb4:	f43f ae18 	beq.w	9000a7e8 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000abb8:	4a2d      	ldr	r2, [pc, #180]	@ (9000ac70 <HAL_RCC_OscConfig+0x5d8>)
9000abba:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000abbc:	f023 0301 	bic.w	r3, r3, #1
9000abc0:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000abc2:	f7fc f9c1 	bl	90006f48 <HAL_GetTick>
9000abc6:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000abc8:	f7fc f9be 	bl	90006f48 <HAL_GetTick>
9000abcc:	42a8      	cmp	r0, r5
9000abce:	d0fb      	beq.n	9000abc8 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000abd0:	4a27      	ldr	r2, [pc, #156]	@ (9000ac70 <HAL_RCC_OscConfig+0x5d8>)
9000abd2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000abd4:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000abd6:	f36f 03cf 	bfc	r3, #3, #13
9000abda:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000abde:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000abe0:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000abe2:	f043 0301 	orr.w	r3, r3, #1
9000abe6:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000abe8:	e5fe      	b.n	9000a7e8 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000abea:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000abee:	601a      	str	r2, [r3, #0]
9000abf0:	681a      	ldr	r2, [r3, #0]
9000abf2:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000abf6:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000abf8:	e576      	b.n	9000a6e8 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000abfa:	4d1d      	ldr	r5, [pc, #116]	@ (9000ac70 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000abfc:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ac00:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ac02:	f023 0301 	bic.w	r3, r3, #1
9000ac06:	672b      	str	r3, [r5, #112]	@ 0x70
9000ac08:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ac0a:	f023 0304 	bic.w	r3, r3, #4
9000ac0e:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ac10:	f7fc f99a 	bl	90006f48 <HAL_GetTick>
9000ac14:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ac16:	e005      	b.n	9000ac24 <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ac18:	f7fc f996 	bl	90006f48 <HAL_GetTick>
9000ac1c:	1b80      	subs	r0, r0, r6
9000ac1e:	42b8      	cmp	r0, r7
9000ac20:	f63f aeba 	bhi.w	9000a998 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ac24:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ac26:	0798      	lsls	r0, r3, #30
9000ac28:	d4f6      	bmi.n	9000ac18 <HAL_RCC_OscConfig+0x580>
9000ac2a:	e5d9      	b.n	9000a7e0 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ac2c:	68eb      	ldr	r3, [r5, #12]
9000ac2e:	6a22      	ldr	r2, [r4, #32]
9000ac30:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ac34:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ac38:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ac3a:	6823      	ldr	r3, [r4, #0]
9000ac3c:	e59b      	b.n	9000a776 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ac3e:	4a0c      	ldr	r2, [pc, #48]	@ (9000ac70 <HAL_RCC_OscConfig+0x5d8>)
9000ac40:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000ac42:	f043 0301 	orr.w	r3, r3, #1
9000ac46:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ac48:	e67d      	b.n	9000a946 <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ac4a:	4a09      	ldr	r2, [pc, #36]	@ (9000ac70 <HAL_RCC_OscConfig+0x5d8>)
9000ac4c:	6853      	ldr	r3, [r2, #4]
9000ac4e:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ac52:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ac56:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ac58:	6823      	ldr	r3, [r4, #0]
9000ac5a:	e58c      	b.n	9000a776 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ac5c:	f042 0204 	orr.w	r2, r2, #4
9000ac60:	671a      	str	r2, [r3, #112]	@ 0x70
9000ac62:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ac64:	f042 0201 	orr.w	r2, r2, #1
9000ac68:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ac6a:	e66c      	b.n	9000a946 <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ac6c:	2001      	movs	r0, #1
}
9000ac6e:	4770      	bx	lr
9000ac70:	58024400 	.word	0x58024400

9000ac74 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac74:	4a3f      	ldr	r2, [pc, #252]	@ (9000ad74 <HAL_RCC_GetSysClockFreq+0x100>)
9000ac76:	6913      	ldr	r3, [r2, #16]
9000ac78:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ac7c:	2b10      	cmp	r3, #16
9000ac7e:	d04f      	beq.n	9000ad20 <HAL_RCC_GetSysClockFreq+0xac>
9000ac80:	2b18      	cmp	r3, #24
9000ac82:	d00a      	beq.n	9000ac9a <HAL_RCC_GetSysClockFreq+0x26>
9000ac84:	2b00      	cmp	r3, #0
9000ac86:	d14d      	bne.n	9000ad24 <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac88:	6813      	ldr	r3, [r2, #0]
9000ac8a:	0699      	lsls	r1, r3, #26
9000ac8c:	d54c      	bpl.n	9000ad28 <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac8e:	6813      	ldr	r3, [r2, #0]
9000ac90:	4839      	ldr	r0, [pc, #228]	@ (9000ad78 <HAL_RCC_GetSysClockFreq+0x104>)
9000ac92:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ac96:	40d8      	lsrs	r0, r3
9000ac98:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac9a:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ac9c:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac9e:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000aca0:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000aca2:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000aca6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000aca8:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000acac:	d036      	beq.n	9000ad1c <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000acae:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000acb2:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000acb6:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acba:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000acbe:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000acc2:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000acc8:	ee06 3a90 	vmov	s13, r3
9000accc:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000acd0:	d002      	beq.n	9000acd8 <HAL_RCC_GetSysClockFreq+0x64>
9000acd2:	2902      	cmp	r1, #2
9000acd4:	d048      	beq.n	9000ad68 <HAL_RCC_GetSysClockFreq+0xf4>
9000acd6:	b349      	cbz	r1, 9000ad2c <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acd8:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000ad7c <HAL_RCC_GetSysClockFreq+0x108>
9000acdc:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000ace0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000ace2:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ace6:	ee07 3a10 	vmov	s14, r3
9000acea:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000acee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000acf2:	ee37 7a26 	vadd.f32	s14, s14, s13
9000acf6:	ee37 7a25 	vadd.f32	s14, s14, s11
9000acfa:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000acfe:	4b1d      	ldr	r3, [pc, #116]	@ (9000ad74 <HAL_RCC_GetSysClockFreq+0x100>)
9000ad00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ad02:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ad06:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ad08:	ee07 3a90 	vmov	s15, r3
9000ad0c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000ad10:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000ad14:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ad18:	ee17 0a90 	vmov	r0, s15
}
9000ad1c:	bc30      	pop	{r4, r5}
9000ad1e:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ad20:	4817      	ldr	r0, [pc, #92]	@ (9000ad80 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ad22:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000ad24:	4817      	ldr	r0, [pc, #92]	@ (9000ad84 <HAL_RCC_GetSysClockFreq+0x110>)
9000ad26:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000ad28:	4813      	ldr	r0, [pc, #76]	@ (9000ad78 <HAL_RCC_GetSysClockFreq+0x104>)
}
9000ad2a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ad2c:	6813      	ldr	r3, [r2, #0]
9000ad2e:	069b      	lsls	r3, r3, #26
9000ad30:	d51d      	bpl.n	9000ad6e <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad32:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad34:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ad38:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad3a:	490f      	ldr	r1, [pc, #60]	@ (9000ad78 <HAL_RCC_GetSysClockFreq+0x104>)
9000ad3c:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad40:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad44:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad46:	ee07 3a10 	vmov	s14, r3
9000ad4a:	ee06 1a10 	vmov	s12, r1
9000ad4e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ad52:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ad56:	ee77 6a26 	vadd.f32	s13, s14, s13
9000ad5a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ad5e:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000ad62:	ee27 7a27 	vmul.f32	s14, s14, s15
9000ad66:	e7ca      	b.n	9000acfe <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad68:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ad88 <HAL_RCC_GetSysClockFreq+0x114>
9000ad6c:	e7b6      	b.n	9000acdc <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad6e:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ad8c <HAL_RCC_GetSysClockFreq+0x118>
9000ad72:	e7b3      	b.n	9000acdc <HAL_RCC_GetSysClockFreq+0x68>
9000ad74:	58024400 	.word	0x58024400
9000ad78:	03d09000 	.word	0x03d09000
9000ad7c:	4a742400 	.word	0x4a742400
9000ad80:	017d7840 	.word	0x017d7840
9000ad84:	003d0900 	.word	0x003d0900
9000ad88:	4bbebc20 	.word	0x4bbebc20
9000ad8c:	4c742400 	.word	0x4c742400

9000ad90 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000ad90:	2800      	cmp	r0, #0
9000ad92:	f000 810e 	beq.w	9000afb2 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ad96:	4a8d      	ldr	r2, [pc, #564]	@ (9000afcc <HAL_RCC_ClockConfig+0x23c>)
9000ad98:	6813      	ldr	r3, [r2, #0]
9000ad9a:	f003 030f 	and.w	r3, r3, #15
9000ad9e:	428b      	cmp	r3, r1
{
9000ada0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ada4:	4604      	mov	r4, r0
9000ada6:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ada8:	d20c      	bcs.n	9000adc4 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000adaa:	6813      	ldr	r3, [r2, #0]
9000adac:	f023 030f 	bic.w	r3, r3, #15
9000adb0:	430b      	orrs	r3, r1
9000adb2:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000adb4:	6813      	ldr	r3, [r2, #0]
9000adb6:	f003 030f 	and.w	r3, r3, #15
9000adba:	428b      	cmp	r3, r1
9000adbc:	d002      	beq.n	9000adc4 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000adbe:	2001      	movs	r0, #1
}
9000adc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000adc4:	6823      	ldr	r3, [r4, #0]
9000adc6:	0758      	lsls	r0, r3, #29
9000adc8:	d50b      	bpl.n	9000ade2 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000adca:	4981      	ldr	r1, [pc, #516]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000adcc:	6920      	ldr	r0, [r4, #16]
9000adce:	698a      	ldr	r2, [r1, #24]
9000add0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000add4:	4290      	cmp	r0, r2
9000add6:	d904      	bls.n	9000ade2 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000add8:	698a      	ldr	r2, [r1, #24]
9000adda:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000adde:	4302      	orrs	r2, r0
9000ade0:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ade2:	0719      	lsls	r1, r3, #28
9000ade4:	d50b      	bpl.n	9000adfe <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ade6:	497a      	ldr	r1, [pc, #488]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000ade8:	6960      	ldr	r0, [r4, #20]
9000adea:	69ca      	ldr	r2, [r1, #28]
9000adec:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000adf0:	4290      	cmp	r0, r2
9000adf2:	d904      	bls.n	9000adfe <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000adf4:	69ca      	ldr	r2, [r1, #28]
9000adf6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000adfa:	4302      	orrs	r2, r0
9000adfc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000adfe:	06da      	lsls	r2, r3, #27
9000ae00:	d50b      	bpl.n	9000ae1a <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ae02:	4973      	ldr	r1, [pc, #460]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000ae04:	69a0      	ldr	r0, [r4, #24]
9000ae06:	69ca      	ldr	r2, [r1, #28]
9000ae08:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ae0c:	4290      	cmp	r0, r2
9000ae0e:	d904      	bls.n	9000ae1a <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ae10:	69ca      	ldr	r2, [r1, #28]
9000ae12:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000ae16:	4302      	orrs	r2, r0
9000ae18:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000ae1a:	069f      	lsls	r7, r3, #26
9000ae1c:	d50b      	bpl.n	9000ae36 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000ae1e:	496c      	ldr	r1, [pc, #432]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000ae20:	69e0      	ldr	r0, [r4, #28]
9000ae22:	6a0a      	ldr	r2, [r1, #32]
9000ae24:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae28:	4290      	cmp	r0, r2
9000ae2a:	d904      	bls.n	9000ae36 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000ae2c:	6a0a      	ldr	r2, [r1, #32]
9000ae2e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ae32:	4302      	orrs	r2, r0
9000ae34:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ae36:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ae38:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ae3c:	f140 80ab 	bpl.w	9000af96 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ae40:	4e63      	ldr	r6, [pc, #396]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000ae42:	68e0      	ldr	r0, [r4, #12]
9000ae44:	69b1      	ldr	r1, [r6, #24]
9000ae46:	f001 010f 	and.w	r1, r1, #15
9000ae4a:	4288      	cmp	r0, r1
9000ae4c:	d904      	bls.n	9000ae58 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000ae4e:	69b1      	ldr	r1, [r6, #24]
9000ae50:	f021 010f 	bic.w	r1, r1, #15
9000ae54:	4301      	orrs	r1, r0
9000ae56:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ae58:	2a00      	cmp	r2, #0
9000ae5a:	d030      	beq.n	9000aebe <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000ae5c:	4a5c      	ldr	r2, [pc, #368]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000ae5e:	68a1      	ldr	r1, [r4, #8]
9000ae60:	6993      	ldr	r3, [r2, #24]
9000ae62:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000ae66:	430b      	orrs	r3, r1
9000ae68:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ae6a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ae6c:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ae6e:	2902      	cmp	r1, #2
9000ae70:	f000 80a1 	beq.w	9000afb6 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ae74:	2903      	cmp	r1, #3
9000ae76:	f000 8098 	beq.w	9000afaa <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ae7a:	2901      	cmp	r1, #1
9000ae7c:	f000 80a1 	beq.w	9000afc2 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ae80:	075f      	lsls	r7, r3, #29
9000ae82:	d59c      	bpl.n	9000adbe <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae84:	4e52      	ldr	r6, [pc, #328]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae86:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae8a:	6933      	ldr	r3, [r6, #16]
9000ae8c:	f023 0307 	bic.w	r3, r3, #7
9000ae90:	430b      	orrs	r3, r1
9000ae92:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ae94:	f7fc f858 	bl	90006f48 <HAL_GetTick>
9000ae98:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ae9a:	e005      	b.n	9000aea8 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae9c:	f7fc f854 	bl	90006f48 <HAL_GetTick>
9000aea0:	1bc0      	subs	r0, r0, r7
9000aea2:	4540      	cmp	r0, r8
9000aea4:	f200 808b 	bhi.w	9000afbe <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000aea8:	6933      	ldr	r3, [r6, #16]
9000aeaa:	6862      	ldr	r2, [r4, #4]
9000aeac:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000aeb0:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000aeb4:	d1f2      	bne.n	9000ae9c <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000aeb6:	6823      	ldr	r3, [r4, #0]
9000aeb8:	079e      	lsls	r6, r3, #30
9000aeba:	d506      	bpl.n	9000aeca <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000aebc:	68e0      	ldr	r0, [r4, #12]
9000aebe:	4944      	ldr	r1, [pc, #272]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000aec0:	698a      	ldr	r2, [r1, #24]
9000aec2:	f002 020f 	and.w	r2, r2, #15
9000aec6:	4290      	cmp	r0, r2
9000aec8:	d369      	bcc.n	9000af9e <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000aeca:	4940      	ldr	r1, [pc, #256]	@ (9000afcc <HAL_RCC_ClockConfig+0x23c>)
9000aecc:	680a      	ldr	r2, [r1, #0]
9000aece:	f002 020f 	and.w	r2, r2, #15
9000aed2:	42aa      	cmp	r2, r5
9000aed4:	d90a      	bls.n	9000aeec <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000aed6:	680a      	ldr	r2, [r1, #0]
9000aed8:	f022 020f 	bic.w	r2, r2, #15
9000aedc:	432a      	orrs	r2, r5
9000aede:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000aee0:	680a      	ldr	r2, [r1, #0]
9000aee2:	f002 020f 	and.w	r2, r2, #15
9000aee6:	42aa      	cmp	r2, r5
9000aee8:	f47f af69 	bne.w	9000adbe <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000aeec:	0758      	lsls	r0, r3, #29
9000aeee:	d50b      	bpl.n	9000af08 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000aef0:	4937      	ldr	r1, [pc, #220]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000aef2:	6920      	ldr	r0, [r4, #16]
9000aef4:	698a      	ldr	r2, [r1, #24]
9000aef6:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aefa:	4290      	cmp	r0, r2
9000aefc:	d204      	bcs.n	9000af08 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000aefe:	698a      	ldr	r2, [r1, #24]
9000af00:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000af04:	4302      	orrs	r2, r0
9000af06:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000af08:	0719      	lsls	r1, r3, #28
9000af0a:	d50b      	bpl.n	9000af24 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000af0c:	4930      	ldr	r1, [pc, #192]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000af0e:	6960      	ldr	r0, [r4, #20]
9000af10:	69ca      	ldr	r2, [r1, #28]
9000af12:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000af16:	4290      	cmp	r0, r2
9000af18:	d204      	bcs.n	9000af24 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000af1a:	69ca      	ldr	r2, [r1, #28]
9000af1c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000af20:	4302      	orrs	r2, r0
9000af22:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000af24:	06da      	lsls	r2, r3, #27
9000af26:	d50b      	bpl.n	9000af40 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000af28:	4929      	ldr	r1, [pc, #164]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000af2a:	69a0      	ldr	r0, [r4, #24]
9000af2c:	69ca      	ldr	r2, [r1, #28]
9000af2e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000af32:	4290      	cmp	r0, r2
9000af34:	d204      	bcs.n	9000af40 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000af36:	69ca      	ldr	r2, [r1, #28]
9000af38:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000af3c:	4302      	orrs	r2, r0
9000af3e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000af40:	069b      	lsls	r3, r3, #26
9000af42:	d50b      	bpl.n	9000af5c <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000af44:	4a22      	ldr	r2, [pc, #136]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000af46:	69e1      	ldr	r1, [r4, #28]
9000af48:	6a13      	ldr	r3, [r2, #32]
9000af4a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000af4e:	4299      	cmp	r1, r3
9000af50:	d204      	bcs.n	9000af5c <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000af52:	6a13      	ldr	r3, [r2, #32]
9000af54:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000af58:	430b      	orrs	r3, r1
9000af5a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af5c:	f7ff fe8a 	bl	9000ac74 <HAL_RCC_GetSysClockFreq>
9000af60:	4a1b      	ldr	r2, [pc, #108]	@ (9000afd0 <HAL_RCC_ClockConfig+0x240>)
9000af62:	4603      	mov	r3, r0
9000af64:	481b      	ldr	r0, [pc, #108]	@ (9000afd4 <HAL_RCC_ClockConfig+0x244>)
9000af66:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af68:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af6a:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000af6e:	4d1a      	ldr	r5, [pc, #104]	@ (9000afd8 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af70:	f002 020f 	and.w	r2, r2, #15
9000af74:	4c19      	ldr	r4, [pc, #100]	@ (9000afdc <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af76:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af78:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af7a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000af7e:	4818      	ldr	r0, [pc, #96]	@ (9000afe0 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af80:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af84:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000af86:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000af88:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af8a:	40d3      	lsrs	r3, r2
9000af8c:	6023      	str	r3, [r4, #0]
}
9000af8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000af92:	f7f9 ba41 	b.w	90004418 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000af96:	2a00      	cmp	r2, #0
9000af98:	f47f af60 	bne.w	9000ae5c <HAL_RCC_ClockConfig+0xcc>
9000af9c:	e795      	b.n	9000aeca <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000af9e:	698a      	ldr	r2, [r1, #24]
9000afa0:	f022 020f 	bic.w	r2, r2, #15
9000afa4:	4302      	orrs	r2, r0
9000afa6:	618a      	str	r2, [r1, #24]
9000afa8:	e78f      	b.n	9000aeca <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000afaa:	019a      	lsls	r2, r3, #6
9000afac:	f53f af6a 	bmi.w	9000ae84 <HAL_RCC_ClockConfig+0xf4>
9000afb0:	e705      	b.n	9000adbe <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000afb2:	2001      	movs	r0, #1
}
9000afb4:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000afb6:	0398      	lsls	r0, r3, #14
9000afb8:	f53f af64 	bmi.w	9000ae84 <HAL_RCC_ClockConfig+0xf4>
9000afbc:	e6ff      	b.n	9000adbe <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000afbe:	2003      	movs	r0, #3
9000afc0:	e6fe      	b.n	9000adc0 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000afc2:	05db      	lsls	r3, r3, #23
9000afc4:	f53f af5e 	bmi.w	9000ae84 <HAL_RCC_ClockConfig+0xf4>
9000afc8:	e6f9      	b.n	9000adbe <HAL_RCC_ClockConfig+0x2e>
9000afca:	bf00      	nop
9000afcc:	52002000 	.word	0x52002000
9000afd0:	58024400 	.word	0x58024400
9000afd4:	9002cf28 	.word	0x9002cf28
9000afd8:	24000078 	.word	0x24000078
9000afdc:	24000074 	.word	0x24000074
9000afe0:	24000080 	.word	0x24000080

9000afe4 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afe4:	4a18      	ldr	r2, [pc, #96]	@ (9000b048 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000afe6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afe8:	6913      	ldr	r3, [r2, #16]
9000afea:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000afee:	2b10      	cmp	r3, #16
9000aff0:	d024      	beq.n	9000b03c <HAL_RCC_GetHCLKFreq+0x58>
9000aff2:	2b18      	cmp	r3, #24
9000aff4:	d009      	beq.n	9000b00a <HAL_RCC_GetHCLKFreq+0x26>
9000aff6:	bb1b      	cbnz	r3, 9000b040 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000aff8:	6813      	ldr	r3, [r2, #0]
9000affa:	069b      	lsls	r3, r3, #26
9000affc:	d522      	bpl.n	9000b044 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000affe:	6812      	ldr	r2, [r2, #0]
9000b000:	4b12      	ldr	r3, [pc, #72]	@ (9000b04c <HAL_RCC_GetHCLKFreq+0x68>)
9000b002:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b006:	40d3      	lsrs	r3, r2
9000b008:	e002      	b.n	9000b010 <HAL_RCC_GetHCLKFreq+0x2c>
9000b00a:	f7ff fad3 	bl	9000a5b4 <HAL_RCC_GetSysClockFreq.part.0>
9000b00e:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b010:	490d      	ldr	r1, [pc, #52]	@ (9000b048 <HAL_RCC_GetHCLKFreq+0x64>)
9000b012:	480f      	ldr	r0, [pc, #60]	@ (9000b050 <HAL_RCC_GetHCLKFreq+0x6c>)
9000b014:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b016:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b018:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b01c:	4c0d      	ldr	r4, [pc, #52]	@ (9000b054 <HAL_RCC_GetHCLKFreq+0x70>)
9000b01e:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000b022:	4d0d      	ldr	r5, [pc, #52]	@ (9000b058 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b024:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b026:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b028:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b02c:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b030:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b032:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000b036:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b038:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000b03a:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b03c:	4b07      	ldr	r3, [pc, #28]	@ (9000b05c <HAL_RCC_GetHCLKFreq+0x78>)
9000b03e:	e7e7      	b.n	9000b010 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b040:	4b07      	ldr	r3, [pc, #28]	@ (9000b060 <HAL_RCC_GetHCLKFreq+0x7c>)
9000b042:	e7e5      	b.n	9000b010 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b044:	4b01      	ldr	r3, [pc, #4]	@ (9000b04c <HAL_RCC_GetHCLKFreq+0x68>)
9000b046:	e7e3      	b.n	9000b010 <HAL_RCC_GetHCLKFreq+0x2c>
9000b048:	58024400 	.word	0x58024400
9000b04c:	03d09000 	.word	0x03d09000
9000b050:	9002cf28 	.word	0x9002cf28
9000b054:	24000074 	.word	0x24000074
9000b058:	24000078 	.word	0x24000078
9000b05c:	017d7840 	.word	0x017d7840
9000b060:	003d0900 	.word	0x003d0900

9000b064 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b064:	4a1c      	ldr	r2, [pc, #112]	@ (9000b0d8 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b066:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b068:	6913      	ldr	r3, [r2, #16]
9000b06a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b06e:	2b10      	cmp	r3, #16
9000b070:	d02b      	beq.n	9000b0ca <HAL_RCC_GetPCLK1Freq+0x66>
9000b072:	2b18      	cmp	r3, #24
9000b074:	d009      	beq.n	9000b08a <HAL_RCC_GetPCLK1Freq+0x26>
9000b076:	bb53      	cbnz	r3, 9000b0ce <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b078:	6813      	ldr	r3, [r2, #0]
9000b07a:	069b      	lsls	r3, r3, #26
9000b07c:	d529      	bpl.n	9000b0d2 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b07e:	6812      	ldr	r2, [r2, #0]
9000b080:	4b16      	ldr	r3, [pc, #88]	@ (9000b0dc <HAL_RCC_GetPCLK1Freq+0x78>)
9000b082:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b086:	40d3      	lsrs	r3, r2
9000b088:	e002      	b.n	9000b090 <HAL_RCC_GetPCLK1Freq+0x2c>
9000b08a:	f7ff fa93 	bl	9000a5b4 <HAL_RCC_GetSysClockFreq.part.0>
9000b08e:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b090:	4a11      	ldr	r2, [pc, #68]	@ (9000b0d8 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b092:	4913      	ldr	r1, [pc, #76]	@ (9000b0e0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b094:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b096:	4d13      	ldr	r5, [pc, #76]	@ (9000b0e4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b098:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b09c:	4c12      	ldr	r4, [pc, #72]	@ (9000b0e8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b09e:	5c08      	ldrb	r0, [r1, r0]
9000b0a0:	f000 001f 	and.w	r0, r0, #31
9000b0a4:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b0a6:	6990      	ldr	r0, [r2, #24]
9000b0a8:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b0ac:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b0ae:	5c08      	ldrb	r0, [r1, r0]
9000b0b0:	f000 001f 	and.w	r0, r0, #31
9000b0b4:	40c3      	lsrs	r3, r0
9000b0b6:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b0b8:	69d2      	ldr	r2, [r2, #28]
9000b0ba:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b0be:	5c88      	ldrb	r0, [r1, r2]
9000b0c0:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b0c4:	fa23 f000 	lsr.w	r0, r3, r0
9000b0c8:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b0ca:	4b08      	ldr	r3, [pc, #32]	@ (9000b0ec <HAL_RCC_GetPCLK1Freq+0x88>)
9000b0cc:	e7e0      	b.n	9000b090 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b0ce:	4b08      	ldr	r3, [pc, #32]	@ (9000b0f0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b0d0:	e7de      	b.n	9000b090 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b0d2:	4b02      	ldr	r3, [pc, #8]	@ (9000b0dc <HAL_RCC_GetPCLK1Freq+0x78>)
9000b0d4:	e7dc      	b.n	9000b090 <HAL_RCC_GetPCLK1Freq+0x2c>
9000b0d6:	bf00      	nop
9000b0d8:	58024400 	.word	0x58024400
9000b0dc:	03d09000 	.word	0x03d09000
9000b0e0:	9002cf28 	.word	0x9002cf28
9000b0e4:	24000078 	.word	0x24000078
9000b0e8:	24000074 	.word	0x24000074
9000b0ec:	017d7840 	.word	0x017d7840
9000b0f0:	003d0900 	.word	0x003d0900

9000b0f4 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b0f4:	4a1c      	ldr	r2, [pc, #112]	@ (9000b168 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b0f6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b0f8:	6913      	ldr	r3, [r2, #16]
9000b0fa:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b0fe:	2b10      	cmp	r3, #16
9000b100:	d02b      	beq.n	9000b15a <HAL_RCC_GetPCLK2Freq+0x66>
9000b102:	2b18      	cmp	r3, #24
9000b104:	d009      	beq.n	9000b11a <HAL_RCC_GetPCLK2Freq+0x26>
9000b106:	bb53      	cbnz	r3, 9000b15e <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b108:	6813      	ldr	r3, [r2, #0]
9000b10a:	069b      	lsls	r3, r3, #26
9000b10c:	d529      	bpl.n	9000b162 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b10e:	6812      	ldr	r2, [r2, #0]
9000b110:	4b16      	ldr	r3, [pc, #88]	@ (9000b16c <HAL_RCC_GetPCLK2Freq+0x78>)
9000b112:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b116:	40d3      	lsrs	r3, r2
9000b118:	e002      	b.n	9000b120 <HAL_RCC_GetPCLK2Freq+0x2c>
9000b11a:	f7ff fa4b 	bl	9000a5b4 <HAL_RCC_GetSysClockFreq.part.0>
9000b11e:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b120:	4a11      	ldr	r2, [pc, #68]	@ (9000b168 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b122:	4913      	ldr	r1, [pc, #76]	@ (9000b170 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b124:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b126:	4d13      	ldr	r5, [pc, #76]	@ (9000b174 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b128:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b12c:	4c12      	ldr	r4, [pc, #72]	@ (9000b178 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b12e:	5c08      	ldrb	r0, [r1, r0]
9000b130:	f000 001f 	and.w	r0, r0, #31
9000b134:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b136:	6990      	ldr	r0, [r2, #24]
9000b138:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b13c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b13e:	5c08      	ldrb	r0, [r1, r0]
9000b140:	f000 001f 	and.w	r0, r0, #31
9000b144:	40c3      	lsrs	r3, r0
9000b146:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b148:	69d2      	ldr	r2, [r2, #28]
9000b14a:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b14e:	5c88      	ldrb	r0, [r1, r2]
9000b150:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b154:	fa23 f000 	lsr.w	r0, r3, r0
9000b158:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b15a:	4b08      	ldr	r3, [pc, #32]	@ (9000b17c <HAL_RCC_GetPCLK2Freq+0x88>)
9000b15c:	e7e0      	b.n	9000b120 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b15e:	4b08      	ldr	r3, [pc, #32]	@ (9000b180 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b160:	e7de      	b.n	9000b120 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b162:	4b02      	ldr	r3, [pc, #8]	@ (9000b16c <HAL_RCC_GetPCLK2Freq+0x78>)
9000b164:	e7dc      	b.n	9000b120 <HAL_RCC_GetPCLK2Freq+0x2c>
9000b166:	bf00      	nop
9000b168:	58024400 	.word	0x58024400
9000b16c:	03d09000 	.word	0x03d09000
9000b170:	9002cf28 	.word	0x9002cf28
9000b174:	24000078 	.word	0x24000078
9000b178:	24000074 	.word	0x24000074
9000b17c:	017d7840 	.word	0x017d7840
9000b180:	003d0900 	.word	0x003d0900

9000b184 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b184:	4b13      	ldr	r3, [pc, #76]	@ (9000b1d4 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b186:	223f      	movs	r2, #63	@ 0x3f
{
9000b188:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b18a:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b18c:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b18e:	4c12      	ldr	r4, [pc, #72]	@ (9000b1d8 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b190:	f002 0207 	and.w	r2, r2, #7
9000b194:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b196:	699a      	ldr	r2, [r3, #24]
9000b198:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b19c:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b19e:	699a      	ldr	r2, [r3, #24]
9000b1a0:	f002 020f 	and.w	r2, r2, #15
9000b1a4:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b1a6:	699a      	ldr	r2, [r3, #24]
9000b1a8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b1ac:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b1ae:	69da      	ldr	r2, [r3, #28]
9000b1b0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b1b4:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b1b6:	69da      	ldr	r2, [r3, #28]
9000b1b8:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b1bc:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b1be:	6a1b      	ldr	r3, [r3, #32]
9000b1c0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000b1c4:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b1c6:	6823      	ldr	r3, [r4, #0]
}
9000b1c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b1cc:	f003 030f 	and.w	r3, r3, #15
9000b1d0:	600b      	str	r3, [r1, #0]
}
9000b1d2:	4770      	bx	lr
9000b1d4:	58024400 	.word	0x58024400
9000b1d8:	52002000 	.word	0x52002000

9000b1dc <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b1dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b1de:	4c36      	ldr	r4, [pc, #216]	@ (9000b2b8 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b1e0:	4606      	mov	r6, r0
9000b1e2:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b1e4:	6823      	ldr	r3, [r4, #0]
9000b1e6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b1ea:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b1ec:	f7fb feac 	bl	90006f48 <HAL_GetTick>
9000b1f0:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b1f2:	e004      	b.n	9000b1fe <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b1f4:	f7fb fea8 	bl	90006f48 <HAL_GetTick>
9000b1f8:	1b40      	subs	r0, r0, r5
9000b1fa:	2802      	cmp	r0, #2
9000b1fc:	d856      	bhi.n	9000b2ac <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b1fe:	6823      	ldr	r3, [r4, #0]
9000b200:	011a      	lsls	r2, r3, #4
9000b202:	d4f7      	bmi.n	9000b1f4 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b204:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b206:	6832      	ldr	r2, [r6, #0]
9000b208:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b20c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b210:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b212:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b216:	3b01      	subs	r3, #1
9000b218:	3a01      	subs	r2, #1
9000b21a:	025b      	lsls	r3, r3, #9
9000b21c:	0412      	lsls	r2, r2, #16
9000b21e:	b29b      	uxth	r3, r3
9000b220:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b224:	4313      	orrs	r3, r2
9000b226:	6872      	ldr	r2, [r6, #4]
9000b228:	3a01      	subs	r2, #1
9000b22a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b22e:	4313      	orrs	r3, r2
9000b230:	6932      	ldr	r2, [r6, #16]
9000b232:	3a01      	subs	r2, #1
9000b234:	0612      	lsls	r2, r2, #24
9000b236:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b23a:	4313      	orrs	r3, r2
9000b23c:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b23e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b240:	6972      	ldr	r2, [r6, #20]
9000b242:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b246:	4313      	orrs	r3, r2
9000b248:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b24a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b24c:	69b2      	ldr	r2, [r6, #24]
9000b24e:	f023 0320 	bic.w	r3, r3, #32
9000b252:	4313      	orrs	r3, r2
9000b254:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b256:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b258:	f023 0310 	bic.w	r3, r3, #16
9000b25c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b25e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000b260:	69f2      	ldr	r2, [r6, #28]
9000b262:	f36f 03cf 	bfc	r3, #3, #13
9000b266:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b26a:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b26c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b26e:	f043 0310 	orr.w	r3, r3, #16
9000b272:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b274:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b276:	b1df      	cbz	r7, 9000b2b0 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b278:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b27a:	bf0c      	ite	eq
9000b27c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b280:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b284:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b286:	4c0c      	ldr	r4, [pc, #48]	@ (9000b2b8 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b288:	6823      	ldr	r3, [r4, #0]
9000b28a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b28e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b290:	f7fb fe5a 	bl	90006f48 <HAL_GetTick>
9000b294:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b296:	e004      	b.n	9000b2a2 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b298:	f7fb fe56 	bl	90006f48 <HAL_GetTick>
9000b29c:	1b40      	subs	r0, r0, r5
9000b29e:	2802      	cmp	r0, #2
9000b2a0:	d804      	bhi.n	9000b2ac <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b2a2:	6823      	ldr	r3, [r4, #0]
9000b2a4:	011b      	lsls	r3, r3, #4
9000b2a6:	d5f7      	bpl.n	9000b298 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b2a8:	2000      	movs	r0, #0
}
9000b2aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b2ac:	2003      	movs	r0, #3
}
9000b2ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b2b0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b2b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b2b6:	e7e6      	b.n	9000b286 <RCCEx_PLL2_Config.part.0+0xaa>
9000b2b8:	58024400 	.word	0x58024400

9000b2bc <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b2be:	4c36      	ldr	r4, [pc, #216]	@ (9000b398 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b2c0:	4606      	mov	r6, r0
9000b2c2:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b2c4:	6823      	ldr	r3, [r4, #0]
9000b2c6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b2ca:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b2cc:	f7fb fe3c 	bl	90006f48 <HAL_GetTick>
9000b2d0:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b2d2:	e004      	b.n	9000b2de <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b2d4:	f7fb fe38 	bl	90006f48 <HAL_GetTick>
9000b2d8:	1b40      	subs	r0, r0, r5
9000b2da:	2802      	cmp	r0, #2
9000b2dc:	d856      	bhi.n	9000b38c <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b2de:	6823      	ldr	r3, [r4, #0]
9000b2e0:	009a      	lsls	r2, r3, #2
9000b2e2:	d4f7      	bmi.n	9000b2d4 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b2e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b2e6:	6832      	ldr	r2, [r6, #0]
9000b2e8:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b2ec:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b2f0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b2f2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b2f6:	3b01      	subs	r3, #1
9000b2f8:	3a01      	subs	r2, #1
9000b2fa:	025b      	lsls	r3, r3, #9
9000b2fc:	0412      	lsls	r2, r2, #16
9000b2fe:	b29b      	uxth	r3, r3
9000b300:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b304:	4313      	orrs	r3, r2
9000b306:	6872      	ldr	r2, [r6, #4]
9000b308:	3a01      	subs	r2, #1
9000b30a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b30e:	4313      	orrs	r3, r2
9000b310:	6932      	ldr	r2, [r6, #16]
9000b312:	3a01      	subs	r2, #1
9000b314:	0612      	lsls	r2, r2, #24
9000b316:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b31a:	4313      	orrs	r3, r2
9000b31c:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b31e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b320:	6972      	ldr	r2, [r6, #20]
9000b322:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b326:	4313      	orrs	r3, r2
9000b328:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b32a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b32c:	69b2      	ldr	r2, [r6, #24]
9000b32e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000b332:	4313      	orrs	r3, r2
9000b334:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b336:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b338:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000b33c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b33e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000b340:	69f2      	ldr	r2, [r6, #28]
9000b342:	f36f 03cf 	bfc	r3, #3, #13
9000b346:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b34a:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b34c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b34e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b352:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b354:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b356:	b1df      	cbz	r7, 9000b390 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b358:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b35a:	bf0c      	ite	eq
9000b35c:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b360:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000b364:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b366:	4c0c      	ldr	r4, [pc, #48]	@ (9000b398 <RCCEx_PLL3_Config.part.0+0xdc>)
9000b368:	6823      	ldr	r3, [r4, #0]
9000b36a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000b36e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b370:	f7fb fdea 	bl	90006f48 <HAL_GetTick>
9000b374:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b376:	e004      	b.n	9000b382 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b378:	f7fb fde6 	bl	90006f48 <HAL_GetTick>
9000b37c:	1b40      	subs	r0, r0, r5
9000b37e:	2802      	cmp	r0, #2
9000b380:	d804      	bhi.n	9000b38c <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b382:	6823      	ldr	r3, [r4, #0]
9000b384:	009b      	lsls	r3, r3, #2
9000b386:	d5f7      	bpl.n	9000b378 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000b388:	2000      	movs	r0, #0
}
9000b38a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b38c:	2003      	movs	r0, #3
}
9000b38e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b390:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000b394:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b396:	e7e6      	b.n	9000b366 <RCCEx_PLL3_Config.part.0+0xaa>
9000b398:	58024400 	.word	0x58024400

9000b39c <HAL_RCCEx_PeriphCLKConfig>:
{
9000b39c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b3a0:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b3a4:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b3a6:	011d      	lsls	r5, r3, #4
9000b3a8:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b3ac:	d524      	bpl.n	9000b3f8 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b3ae:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b3b0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b3b4:	f000 85df 	beq.w	9000bf76 <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000b3b8:	f200 86a8 	bhi.w	9000c10c <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000b3bc:	2900      	cmp	r1, #0
9000b3be:	f000 85f6 	beq.w	9000bfae <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000b3c2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b3c6:	f040 86a5 	bne.w	9000c114 <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3ca:	49a9      	ldr	r1, [pc, #676]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b3cc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3ce:	f001 0103 	and.w	r1, r1, #3
9000b3d2:	2903      	cmp	r1, #3
9000b3d4:	f000 869e 	beq.w	9000c114 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000b3d8:	2102      	movs	r1, #2
9000b3da:	3008      	adds	r0, #8
9000b3dc:	f7ff fefe 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b3e0:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b3e2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b3e6:	b93e      	cbnz	r6, 9000b3f8 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b3e8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b3ea:	4da1      	ldr	r5, [pc, #644]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b3ec:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b3ee:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b3f0:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b3f4:	4301      	orrs	r1, r0
9000b3f6:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b3f8:	05d8      	lsls	r0, r3, #23
9000b3fa:	d50a      	bpl.n	9000b412 <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b3fc:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b3fe:	2904      	cmp	r1, #4
9000b400:	d806      	bhi.n	9000b410 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000b402:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b406:	03ff      	.short	0x03ff
9000b408:	0582056d 	.word	0x0582056d
9000b40c:	04040404 	.word	0x04040404
      status = ret;
9000b410:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b412:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b414:	0599      	lsls	r1, r3, #22
9000b416:	d524      	bpl.n	9000b462 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b418:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b41a:	2980      	cmp	r1, #128	@ 0x80
9000b41c:	f000 854b 	beq.w	9000beb6 <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000b420:	f200 8687 	bhi.w	9000c132 <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000b424:	2900      	cmp	r1, #0
9000b426:	f000 85bb 	beq.w	9000bfa0 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000b42a:	2940      	cmp	r1, #64	@ 0x40
9000b42c:	f040 8688 	bne.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b430:	498f      	ldr	r1, [pc, #572]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b432:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b434:	f001 0103 	and.w	r1, r1, #3
9000b438:	2903      	cmp	r1, #3
9000b43a:	f000 8681 	beq.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000b43e:	2100      	movs	r1, #0
9000b440:	f104 0008 	add.w	r0, r4, #8
9000b444:	f7ff feca 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b448:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b44a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b44e:	2d00      	cmp	r5, #0
9000b450:	f040 8543 	bne.w	9000beda <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b454:	4f86      	ldr	r7, [pc, #536]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b456:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b458:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b45a:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b45e:	4301      	orrs	r1, r0
9000b460:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b462:	055f      	lsls	r7, r3, #21
9000b464:	d528      	bpl.n	9000b4b8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b466:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b46a:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b46e:	f000 855c 	beq.w	9000bf2a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000b472:	f200 8652 	bhi.w	9000c11a <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000b476:	2900      	cmp	r1, #0
9000b478:	f000 858b 	beq.w	9000bf92 <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000b47c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b480:	f040 8653 	bne.w	9000c12a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b484:	497a      	ldr	r1, [pc, #488]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b486:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b488:	f001 0103 	and.w	r1, r1, #3
9000b48c:	2903      	cmp	r1, #3
9000b48e:	f000 864c 	beq.w	9000c12a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000b492:	2100      	movs	r1, #0
9000b494:	f104 0008 	add.w	r0, r4, #8
9000b498:	f7ff fea0 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b49c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b49e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4a2:	2d00      	cmp	r5, #0
9000b4a4:	f040 8553 	bne.w	9000bf4e <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b4a8:	4f71      	ldr	r7, [pc, #452]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4aa:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b4ae:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b4b0:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b4b4:	4301      	orrs	r1, r0
9000b4b6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b4b8:	0518      	lsls	r0, r3, #20
9000b4ba:	d528      	bpl.n	9000b50e <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b4bc:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b4c0:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b4c4:	f000 8546 	beq.w	9000bf54 <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000b4c8:	f200 8614 	bhi.w	9000c0f4 <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000b4cc:	2900      	cmp	r1, #0
9000b4ce:	f000 84d6 	beq.w	9000be7e <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000b4d2:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b4d6:	f040 8615 	bne.w	9000c104 <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b4da:	4965      	ldr	r1, [pc, #404]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4dc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b4de:	f001 0103 	and.w	r1, r1, #3
9000b4e2:	2903      	cmp	r1, #3
9000b4e4:	f000 860e 	beq.w	9000c104 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000b4e8:	2100      	movs	r1, #0
9000b4ea:	f104 0008 	add.w	r0, r4, #8
9000b4ee:	f7ff fe75 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b4f2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b4f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4f8:	2d00      	cmp	r5, #0
9000b4fa:	f040 84c8 	bne.w	9000be8e <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b4fe:	4f5c      	ldr	r7, [pc, #368]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b500:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b504:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b506:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b50a:	4301      	orrs	r1, r0
9000b50c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b50e:	0199      	lsls	r1, r3, #6
9000b510:	d518      	bpl.n	9000b544 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000b512:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b514:	2920      	cmp	r1, #32
9000b516:	f000 8434 	beq.w	9000bd82 <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000b51a:	f200 8615 	bhi.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000b51e:	b139      	cbz	r1, 9000b530 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000b520:	2910      	cmp	r1, #16
9000b522:	f040 8614 	bne.w	9000c14e <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b526:	4852      	ldr	r0, [pc, #328]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b528:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b52a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b52e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b530:	2d00      	cmp	r5, #0
9000b532:	f040 83bf 	bne.w	9000bcb4 <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b536:	4f4e      	ldr	r7, [pc, #312]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b538:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b53a:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b53c:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b540:	4301      	orrs	r1, r0
9000b542:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b544:	04df      	lsls	r7, r3, #19
9000b546:	d526      	bpl.n	9000b596 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b548:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b54a:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b54e:	f000 84a1 	beq.w	9000be94 <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000b552:	f200 85c3 	bhi.w	9000c0dc <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000b556:	2900      	cmp	r1, #0
9000b558:	f000 8486 	beq.w	9000be68 <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000b55c:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b560:	f040 85c4 	bne.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b564:	4942      	ldr	r1, [pc, #264]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b566:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b568:	f001 0103 	and.w	r1, r1, #3
9000b56c:	2903      	cmp	r1, #3
9000b56e:	f000 85bd 	beq.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000b572:	2100      	movs	r1, #0
9000b574:	f104 0008 	add.w	r0, r4, #8
9000b578:	f7ff fe30 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b57c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b57e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b582:	2d00      	cmp	r5, #0
9000b584:	f040 8478 	bne.w	9000be78 <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b588:	4f39      	ldr	r7, [pc, #228]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b58a:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b58c:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b58e:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b592:	4301      	orrs	r1, r0
9000b594:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b596:	0498      	lsls	r0, r3, #18
9000b598:	d524      	bpl.n	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b59a:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b59c:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b5a0:	f000 8415 	beq.w	9000bdce <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000b5a4:	f200 8556 	bhi.w	9000c054 <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000b5a8:	b191      	cbz	r1, 9000b5d0 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000b5aa:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b5ae:	f040 855b 	bne.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b5b2:	492f      	ldr	r1, [pc, #188]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b5b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b5b6:	f001 0103 	and.w	r1, r1, #3
9000b5ba:	2903      	cmp	r1, #3
9000b5bc:	f000 8554 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000b5c0:	2101      	movs	r1, #1
9000b5c2:	f104 0008 	add.w	r0, r4, #8
9000b5c6:	f7ff fe09 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b5ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b5cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b5d0:	2d00      	cmp	r5, #0
9000b5d2:	f040 838f 	bne.w	9000bcf4 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b5d6:	4f26      	ldr	r7, [pc, #152]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b5d8:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b5da:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b5dc:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b5e0:	4301      	orrs	r1, r0
9000b5e2:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b5e4:	0459      	lsls	r1, r3, #17
9000b5e6:	d526      	bpl.n	9000b636 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b5e8:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b5ec:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b5f0:	f000 8426 	beq.w	9000be40 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000b5f4:	f200 854a 	bhi.w	9000c08c <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000b5f8:	b191      	cbz	r1, 9000b620 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000b5fa:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b5fe:	f040 854f 	bne.w	9000c0a0 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b602:	491b      	ldr	r1, [pc, #108]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b604:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b606:	f001 0103 	and.w	r1, r1, #3
9000b60a:	2903      	cmp	r1, #3
9000b60c:	f000 8548 	beq.w	9000c0a0 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000b610:	2101      	movs	r1, #1
9000b612:	f104 0008 	add.w	r0, r4, #8
9000b616:	f7ff fde1 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b61a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b61c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b620:	2d00      	cmp	r5, #0
9000b622:	f040 835b 	bne.w	9000bcdc <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b626:	4f12      	ldr	r7, [pc, #72]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b628:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b62c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b62e:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b632:	4301      	orrs	r1, r0
9000b634:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b636:	041f      	lsls	r7, r3, #16
9000b638:	d50d      	bpl.n	9000b656 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000b63a:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b63c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b640:	f000 8260 	beq.w	9000bb04 <HAL_RCCEx_PeriphCLKConfig+0x768>
9000b644:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b648:	f000 8591 	beq.w	9000c16e <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000b64c:	2900      	cmp	r1, #0
9000b64e:	f000 825e 	beq.w	9000bb0e <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000b652:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b654:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b656:	01d8      	lsls	r0, r3, #7
9000b658:	d515      	bpl.n	9000b686 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000b65a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b65c:	2903      	cmp	r1, #3
9000b65e:	f200 85b4 	bhi.w	9000c1ca <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b662:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b666:	000c      	.short	0x000c
9000b668:	03a10007 	.word	0x03a10007
9000b66c:	000c      	.short	0x000c
9000b66e:	bf00      	nop
9000b670:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b674:	4836      	ldr	r0, [pc, #216]	@ (9000b750 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b676:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b678:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b67c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b67e:	2d00      	cmp	r5, #0
9000b680:	f000 831a 	beq.w	9000bcb8 <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000b684:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b686:	0259      	lsls	r1, r3, #9
9000b688:	f100 827a 	bmi.w	9000bb80 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b68c:	07df      	lsls	r7, r3, #31
9000b68e:	d52f      	bpl.n	9000b6f0 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b690:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000b692:	2928      	cmp	r1, #40	@ 0x28
9000b694:	d82a      	bhi.n	9000b6ec <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b696:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b69a:	0257      	.short	0x0257
9000b69c:	00290029 	.word	0x00290029
9000b6a0:	00290029 	.word	0x00290029
9000b6a4:	00290029 	.word	0x00290029
9000b6a8:	02480029 	.word	0x02480029
9000b6ac:	00290029 	.word	0x00290029
9000b6b0:	00290029 	.word	0x00290029
9000b6b4:	00290029 	.word	0x00290029
9000b6b8:	04b90029 	.word	0x04b90029
9000b6bc:	00290029 	.word	0x00290029
9000b6c0:	00290029 	.word	0x00290029
9000b6c4:	00290029 	.word	0x00290029
9000b6c8:	02570029 	.word	0x02570029
9000b6cc:	00290029 	.word	0x00290029
9000b6d0:	00290029 	.word	0x00290029
9000b6d4:	00290029 	.word	0x00290029
9000b6d8:	02570029 	.word	0x02570029
9000b6dc:	00290029 	.word	0x00290029
9000b6e0:	00290029 	.word	0x00290029
9000b6e4:	00290029 	.word	0x00290029
9000b6e8:	02570029 	.word	0x02570029
      status = ret;
9000b6ec:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b6ee:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b6f0:	0798      	lsls	r0, r3, #30
9000b6f2:	d51e      	bpl.n	9000b732 <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000b6f4:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000b6f6:	2905      	cmp	r1, #5
9000b6f8:	f200 8550 	bhi.w	9000c19c <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b6fc:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b700:	00060015 	.word	0x00060015
9000b704:	00150471 	.word	0x00150471
9000b708:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b70c:	4910      	ldr	r1, [pc, #64]	@ (9000b750 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b70e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b710:	f001 0103 	and.w	r1, r1, #3
9000b714:	2903      	cmp	r1, #3
9000b716:	f000 8541 	beq.w	9000c19c <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b71a:	2101      	movs	r1, #1
9000b71c:	f104 0008 	add.w	r0, r4, #8
9000b720:	f7ff fd5c 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b724:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b726:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b72a:	2d00      	cmp	r5, #0
9000b72c:	f000 82cc 	beq.w	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000b730:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b732:	0759      	lsls	r1, r3, #29
9000b734:	d521      	bpl.n	9000b77a <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000b736:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000b73a:	2905      	cmp	r1, #5
9000b73c:	f200 852a 	bhi.w	9000c194 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b740:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b744:	00080017 	.word	0x00080017
9000b748:	0017043c 	.word	0x0017043c
9000b74c:	00170017 	.word	0x00170017
9000b750:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b754:	49ae      	ldr	r1, [pc, #696]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b756:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b758:	f001 0103 	and.w	r1, r1, #3
9000b75c:	2903      	cmp	r1, #3
9000b75e:	f000 8519 	beq.w	9000c194 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b762:	2101      	movs	r1, #1
9000b764:	f104 0008 	add.w	r0, r4, #8
9000b768:	f7ff fd38 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b76c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b76e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b772:	2d00      	cmp	r5, #0
9000b774:	f000 82c2 	beq.w	9000bcfc <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000b778:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b77a:	069f      	lsls	r7, r3, #26
9000b77c:	d526      	bpl.n	9000b7cc <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000b77e:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000b782:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b786:	f000 82c6 	beq.w	9000bd16 <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000b78a:	f200 8455 	bhi.w	9000c038 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000b78e:	b191      	cbz	r1, 9000b7b6 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000b790:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b794:	f040 845a 	bne.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b798:	499d      	ldr	r1, [pc, #628]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b79a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b79c:	f001 0103 	and.w	r1, r1, #3
9000b7a0:	2903      	cmp	r1, #3
9000b7a2:	f000 8453 	beq.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000b7a6:	2100      	movs	r1, #0
9000b7a8:	f104 0008 	add.w	r0, r4, #8
9000b7ac:	f7ff fd16 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b7b0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b7b2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7b6:	2d00      	cmp	r5, #0
9000b7b8:	f040 828e 	bne.w	9000bcd8 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000b7bc:	4f94      	ldr	r7, [pc, #592]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7be:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000b7c2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b7c4:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b7c8:	4301      	orrs	r1, r0
9000b7ca:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b7cc:	0658      	lsls	r0, r3, #25
9000b7ce:	d526      	bpl.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000b7d0:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000b7d4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000b7d8:	f000 82af 	beq.w	9000bd3a <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000b7dc:	f200 8464 	bhi.w	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000b7e0:	b191      	cbz	r1, 9000b808 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000b7e2:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000b7e6:	f040 8469 	bne.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7ea:	4989      	ldr	r1, [pc, #548]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7ec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b7ee:	f001 0103 	and.w	r1, r1, #3
9000b7f2:	2903      	cmp	r1, #3
9000b7f4:	f000 8462 	beq.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000b7f8:	2100      	movs	r1, #0
9000b7fa:	f104 0008 	add.w	r0, r4, #8
9000b7fe:	f7ff fced 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b802:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b804:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b808:	2d00      	cmp	r5, #0
9000b80a:	f040 8269 	bne.w	9000bce0 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000b80e:	4f80      	ldr	r7, [pc, #512]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b810:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000b814:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b816:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000b81a:	4301      	orrs	r1, r0
9000b81c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b81e:	0619      	lsls	r1, r3, #24
9000b820:	d526      	bpl.n	9000b870 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000b822:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000b826:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b82a:	f000 8298 	beq.w	9000bd5e <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000b82e:	f200 841f 	bhi.w	9000c070 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000b832:	b191      	cbz	r1, 9000b85a <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000b834:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b838:	f040 8424 	bne.w	9000c084 <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b83c:	4974      	ldr	r1, [pc, #464]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b83e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b840:	f001 0103 	and.w	r1, r1, #3
9000b844:	2903      	cmp	r1, #3
9000b846:	f000 841d 	beq.w	9000c084 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000b84a:	2100      	movs	r1, #0
9000b84c:	f104 0008 	add.w	r0, r4, #8
9000b850:	f7ff fcc4 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b854:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b856:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b85a:	2d00      	cmp	r5, #0
9000b85c:	f040 8244 	bne.w	9000bce8 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000b860:	4f6b      	ldr	r7, [pc, #428]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b862:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000b866:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b868:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000b86c:	4301      	orrs	r1, r0
9000b86e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b870:	071f      	lsls	r7, r3, #28
9000b872:	d50b      	bpl.n	9000b88c <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000b874:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000b878:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000b87c:	f000 81d4 	beq.w	9000bc28 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b880:	4f63      	ldr	r7, [pc, #396]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b882:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b884:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000b888:	4301      	orrs	r1, r0
9000b88a:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b88c:	06d8      	lsls	r0, r3, #27
9000b88e:	d50b      	bpl.n	9000b8a8 <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000b890:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000b894:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000b898:	f000 81db 	beq.w	9000bc52 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b89c:	4f5c      	ldr	r7, [pc, #368]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b89e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b8a0:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000b8a4:	4301      	orrs	r1, r0
9000b8a6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b8a8:	0319      	lsls	r1, r3, #12
9000b8aa:	d524      	bpl.n	9000b8f6 <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000b8ac:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000b8b0:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b8b4:	f000 82b1 	beq.w	9000be1a <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000b8b8:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b8bc:	d010      	beq.n	9000b8e0 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000b8be:	2900      	cmp	r1, #0
9000b8c0:	f040 8130 	bne.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8c4:	4852      	ldr	r0, [pc, #328]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8c6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000b8c8:	f000 0003 	and.w	r0, r0, #3
9000b8cc:	2803      	cmp	r0, #3
9000b8ce:	f000 8129 	beq.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000b8d2:	f104 0008 	add.w	r0, r4, #8
9000b8d6:	f7ff fc81 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b8da:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b8dc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8e0:	2d00      	cmp	r5, #0
9000b8e2:	f040 81ff 	bne.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000b8e6:	4f4a      	ldr	r7, [pc, #296]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8e8:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000b8ec:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b8ee:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000b8f2:	4301      	orrs	r1, r0
9000b8f4:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b8f6:	035f      	lsls	r7, r3, #13
9000b8f8:	d50f      	bpl.n	9000b91a <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000b8fa:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000b8fe:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b902:	f000 8277 	beq.w	9000bdf4 <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000b906:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b90a:	f000 812d 	beq.w	9000bb68 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000b90e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b912:	f000 8124 	beq.w	9000bb5e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000b916:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b918:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000b91a:	03d8      	lsls	r0, r3, #15
9000b91c:	d520      	bpl.n	9000b960 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000b91e:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000b920:	2900      	cmp	r1, #0
9000b922:	f000 81aa 	beq.w	9000bc7a <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000b926:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b92a:	f040 80e8 	bne.w	9000bafe <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b92e:	4938      	ldr	r1, [pc, #224]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b930:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b932:	f001 0103 	and.w	r1, r1, #3
9000b936:	2903      	cmp	r1, #3
9000b938:	f000 80e1 	beq.w	9000bafe <HAL_RCCEx_PeriphCLKConfig+0x762>
9000b93c:	2102      	movs	r1, #2
9000b93e:	f104 0008 	add.w	r0, r4, #8
9000b942:	f7ff fc4b 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000b946:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b948:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b94c:	2d00      	cmp	r5, #0
9000b94e:	f040 819c 	bne.w	9000bc8a <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000b952:	4f2f      	ldr	r7, [pc, #188]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b954:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000b956:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b958:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000b95c:	4301      	orrs	r1, r0
9000b95e:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b960:	0099      	lsls	r1, r3, #2
9000b962:	d50e      	bpl.n	9000b982 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b964:	492a      	ldr	r1, [pc, #168]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b966:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b968:	f001 0103 	and.w	r1, r1, #3
9000b96c:	2903      	cmp	r1, #3
9000b96e:	d007      	beq.n	9000b980 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000b970:	2102      	movs	r1, #2
9000b972:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b976:	f7ff fca1 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b97a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b97e:	b100      	cbz	r0, 9000b982 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000b980:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b982:	039f      	lsls	r7, r3, #14
9000b984:	f100 80ab 	bmi.w	9000bade <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000b988:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000b98a:	02d8      	lsls	r0, r3, #11
9000b98c:	d506      	bpl.n	9000b99c <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000b98e:	4820      	ldr	r0, [pc, #128]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b990:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000b992:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b994:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000b998:	4331      	orrs	r1, r6
9000b99a:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000b99c:	00d9      	lsls	r1, r3, #3
9000b99e:	d507      	bpl.n	9000b9b0 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000b9a0:	481b      	ldr	r0, [pc, #108]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9a2:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000b9a6:	6901      	ldr	r1, [r0, #16]
9000b9a8:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000b9ac:	4331      	orrs	r1, r6
9000b9ae:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000b9b0:	029f      	lsls	r7, r3, #10
9000b9b2:	d506      	bpl.n	9000b9c2 <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000b9b4:	4816      	ldr	r0, [pc, #88]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9b6:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000b9b8:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b9ba:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000b9be:	4331      	orrs	r1, r6
9000b9c0:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000b9c2:	005e      	lsls	r6, r3, #1
9000b9c4:	d509      	bpl.n	9000b9da <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000b9c6:	4912      	ldr	r1, [pc, #72]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9c8:	6908      	ldr	r0, [r1, #16]
9000b9ca:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000b9ce:	6108      	str	r0, [r1, #16]
9000b9d0:	6908      	ldr	r0, [r1, #16]
9000b9d2:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000b9d6:	4330      	orrs	r0, r6
9000b9d8:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000b9da:	2b00      	cmp	r3, #0
9000b9dc:	da06      	bge.n	9000b9ec <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000b9de:	480c      	ldr	r0, [pc, #48]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9e0:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000b9e2:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000b9e4:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b9e8:	4331      	orrs	r1, r6
9000b9ea:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000b9ec:	0218      	lsls	r0, r3, #8
9000b9ee:	d507      	bpl.n	9000ba00 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000b9f0:	4907      	ldr	r1, [pc, #28]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9f2:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000b9f6:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000b9f8:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000b9fc:	4303      	orrs	r3, r0
9000b9fe:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000ba00:	07d1      	lsls	r1, r2, #31
9000ba02:	d511      	bpl.n	9000ba28 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba04:	4b02      	ldr	r3, [pc, #8]	@ (9000ba10 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000ba06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba08:	f003 0303 	and.w	r3, r3, #3
9000ba0c:	2b03      	cmp	r3, #3
9000ba0e:	e001      	b.n	9000ba14 <HAL_RCCEx_PeriphCLKConfig+0x678>
9000ba10:	58024400 	.word	0x58024400
9000ba14:	f000 835c 	beq.w	9000c0d0 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000ba18:	2100      	movs	r1, #0
9000ba1a:	f104 0008 	add.w	r0, r4, #8
9000ba1e:	f7ff fbdd 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ba22:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba24:	b100      	cbz	r0, 9000ba28 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ba26:	4605      	mov	r5, r0
9000ba28:	0793      	lsls	r3, r2, #30
9000ba2a:	d50e      	bpl.n	9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba2c:	4baf      	ldr	r3, [pc, #700]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba30:	f003 0303 	and.w	r3, r3, #3
9000ba34:	2b03      	cmp	r3, #3
9000ba36:	f000 834d 	beq.w	9000c0d4 <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000ba3a:	2101      	movs	r1, #1
9000ba3c:	f104 0008 	add.w	r0, r4, #8
9000ba40:	f7ff fbcc 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ba44:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba46:	b100      	cbz	r0, 9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ba48:	4605      	mov	r5, r0
9000ba4a:	0757      	lsls	r7, r2, #29
9000ba4c:	d50e      	bpl.n	9000ba6c <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba4e:	4ba7      	ldr	r3, [pc, #668]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba52:	f003 0303 	and.w	r3, r3, #3
9000ba56:	2b03      	cmp	r3, #3
9000ba58:	f000 833e 	beq.w	9000c0d8 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000ba5c:	2102      	movs	r1, #2
9000ba5e:	f104 0008 	add.w	r0, r4, #8
9000ba62:	f7ff fbbb 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba66:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba68:	b100      	cbz	r0, 9000ba6c <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba6a:	4605      	mov	r5, r0
9000ba6c:	0716      	lsls	r6, r2, #28
9000ba6e:	d50e      	bpl.n	9000ba8e <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba70:	4b9e      	ldr	r3, [pc, #632]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba74:	f003 0303 	and.w	r3, r3, #3
9000ba78:	2b03      	cmp	r3, #3
9000ba7a:	f000 8323 	beq.w	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000ba7e:	2100      	movs	r1, #0
9000ba80:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba84:	f7ff fc1a 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba88:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba8a:	b100      	cbz	r0, 9000ba8e <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba8c:	4605      	mov	r5, r0
9000ba8e:	06d0      	lsls	r0, r2, #27
9000ba90:	d50f      	bpl.n	9000bab2 <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba92:	4b96      	ldr	r3, [pc, #600]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba96:	f003 0303 	and.w	r3, r3, #3
9000ba9a:	2b03      	cmp	r3, #3
9000ba9c:	f000 8314 	beq.w	9000c0c8 <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000baa0:	2101      	movs	r1, #1
9000baa2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000baa6:	f7ff fc09 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000baaa:	2800      	cmp	r0, #0
9000baac:	f040 8359 	bne.w	9000c162 <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bab0:	6862      	ldr	r2, [r4, #4]
9000bab2:	0693      	lsls	r3, r2, #26
9000bab4:	d50e      	bpl.n	9000bad4 <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bab6:	4b8d      	ldr	r3, [pc, #564]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bab8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000baba:	f003 0303 	and.w	r3, r3, #3
9000babe:	2b03      	cmp	r3, #3
9000bac0:	f000 82b7 	beq.w	9000c032 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000bac4:	2102      	movs	r1, #2
9000bac6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000baca:	f7ff fbf7 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000bace:	2800      	cmp	r0, #0
9000bad0:	f040 82af 	bne.w	9000c032 <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000bad4:	1e28      	subs	r0, r5, #0
9000bad6:	bf18      	it	ne
9000bad8:	2001      	movne	r0, #1
}
9000bada:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000bade:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000bae2:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000bae6:	f000 80d2 	beq.w	9000bc8e <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000baea:	f240 8110 	bls.w	9000bd0e <HAL_RCCEx_PeriphCLKConfig+0x972>
9000baee:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000baf2:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000baf6:	f000 80cf 	beq.w	9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000bafa:	2501      	movs	r5, #1
9000bafc:	e745      	b.n	9000b98a <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000bafe:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bb00:	4635      	mov	r5, r6
9000bb02:	e72d      	b.n	9000b960 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb04:	4879      	ldr	r0, [pc, #484]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb06:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bb08:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb0c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bb0e:	2d00      	cmp	r5, #0
9000bb10:	f040 80ce 	bne.w	9000bcb0 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000bb14:	4f75      	ldr	r7, [pc, #468]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb16:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000bb18:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bb1a:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000bb1e:	4301      	orrs	r1, r0
9000bb20:	6539      	str	r1, [r7, #80]	@ 0x50
9000bb22:	e598      	b.n	9000b656 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000bb24:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bb26:	4635      	mov	r5, r6
9000bb28:	e6e5      	b.n	9000b8f6 <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb2a:	4970      	ldr	r1, [pc, #448]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb2c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb2e:	f001 0103 	and.w	r1, r1, #3
9000bb32:	2903      	cmp	r1, #3
9000bb34:	f43f adda 	beq.w	9000b6ec <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bb38:	2101      	movs	r1, #1
9000bb3a:	f104 0008 	add.w	r0, r4, #8
9000bb3e:	f7ff fb4d 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000bb42:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bb44:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb48:	2d00      	cmp	r5, #0
9000bb4a:	f040 80d5 	bne.w	9000bcf8 <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000bb4e:	4f67      	ldr	r7, [pc, #412]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb50:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000bb52:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bb54:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000bb58:	4301      	orrs	r1, r0
9000bb5a:	6579      	str	r1, [r7, #84]	@ 0x54
9000bb5c:	e5c8      	b.n	9000b6f0 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb5e:	4863      	ldr	r0, [pc, #396]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb60:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bb62:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb66:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bb68:	2d00      	cmp	r5, #0
9000bb6a:	f040 809f 	bne.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000bb6e:	4f5f      	ldr	r7, [pc, #380]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb70:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000bb74:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bb76:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000bb7a:	4301      	orrs	r1, r0
9000bb7c:	6579      	str	r1, [r7, #84]	@ 0x54
9000bb7e:	e6cc      	b.n	9000b91a <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000bb80:	4f5b      	ldr	r7, [pc, #364]	@ (9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000bb82:	683b      	ldr	r3, [r7, #0]
9000bb84:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bb88:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000bb8a:	f7fb f9dd 	bl	90006f48 <HAL_GetTick>
9000bb8e:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bb90:	e006      	b.n	9000bba0 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bb92:	f7fb f9d9 	bl	90006f48 <HAL_GetTick>
9000bb96:	eba0 0008 	sub.w	r0, r0, r8
9000bb9a:	2864      	cmp	r0, #100	@ 0x64
9000bb9c:	f200 82db 	bhi.w	9000c156 <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bba0:	683b      	ldr	r3, [r7, #0]
9000bba2:	05da      	lsls	r2, r3, #23
9000bba4:	d5f5      	bpl.n	9000bb92 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000bba6:	2d00      	cmp	r5, #0
9000bba8:	f040 82d6 	bne.w	9000c158 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000bbac:	4a4f      	ldr	r2, [pc, #316]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbae:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000bbb2:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000bbb4:	4059      	eors	r1, r3
9000bbb6:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000bbba:	d00b      	beq.n	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bbbc:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000bbbe:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bbc0:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000bbc4:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000bbc8:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000bbca:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000bbcc:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000bbd0:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000bbd2:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000bbd4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000bbd8:	f000 82fb 	beq.w	9000c1d2 <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bbdc:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000bbe0:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000bbe4:	f000 8309 	beq.w	9000c1fa <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000bbe8:	4940      	ldr	r1, [pc, #256]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbea:	690a      	ldr	r2, [r1, #16]
9000bbec:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000bbf0:	610a      	str	r2, [r1, #16]
9000bbf2:	483e      	ldr	r0, [pc, #248]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbf4:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000bbf8:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000bbfa:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bbfc:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bc00:	6701      	str	r1, [r0, #112]	@ 0x70
9000bc02:	e543      	b.n	9000b68c <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc04:	4839      	ldr	r0, [pc, #228]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc06:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc08:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc0c:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000bc0e:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000bc10:	2d00      	cmp	r5, #0
9000bc12:	f040 8177 	bne.w	9000bf04 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000bc16:	4f35      	ldr	r7, [pc, #212]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000bc1a:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bc1c:	f021 0107 	bic.w	r1, r1, #7
9000bc20:	4301      	orrs	r1, r0
9000bc22:	6539      	str	r1, [r7, #80]	@ 0x50
9000bc24:	f7ff bbf6 	b.w	9000b414 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc28:	4930      	ldr	r1, [pc, #192]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc2a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc2c:	f001 0103 	and.w	r1, r1, #3
9000bc30:	2903      	cmp	r1, #3
9000bc32:	f000 82ba 	beq.w	9000c1aa <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000bc36:	2102      	movs	r1, #2
9000bc38:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc3c:	f7ff fb3e 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bc40:	2800      	cmp	r0, #0
9000bc42:	f000 82b5 	beq.w	9000c1b0 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bc46:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000bc4a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bc4c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bc50:	e616      	b.n	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc52:	4926      	ldr	r1, [pc, #152]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc54:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc56:	f001 0103 	and.w	r1, r1, #3
9000bc5a:	2903      	cmp	r1, #3
9000bc5c:	f000 82a2 	beq.w	9000c1a4 <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000bc60:	2102      	movs	r1, #2
9000bc62:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc66:	f7ff fb29 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bc6a:	2800      	cmp	r0, #0
9000bc6c:	f040 82a6 	bne.w	9000c1bc <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bc70:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bc74:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bc78:	e610      	b.n	9000b89c <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc7a:	481c      	ldr	r0, [pc, #112]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc7c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc7e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc82:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc84:	2d00      	cmp	r5, #0
9000bc86:	f43f ae64 	beq.w	9000b952 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000bc8a:	462e      	mov	r6, r5
9000bc8c:	e668      	b.n	9000b960 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc8e:	4f17      	ldr	r7, [pc, #92]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc90:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000bc92:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bc96:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc98:	2d00      	cmp	r5, #0
9000bc9a:	f47f ae76 	bne.w	9000b98a <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bc9e:	4d13      	ldr	r5, [pc, #76]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bca0:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000bca2:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000bca6:	4301      	orrs	r1, r0
9000bca8:	6569      	str	r1, [r5, #84]	@ 0x54
9000bcaa:	e66d      	b.n	9000b988 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000bcac:	462e      	mov	r6, r5
9000bcae:	e634      	b.n	9000b91a <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000bcb0:	462e      	mov	r6, r5
9000bcb2:	e4d0      	b.n	9000b656 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000bcb4:	462e      	mov	r6, r5
9000bcb6:	e445      	b.n	9000b544 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bcb8:	4f0c      	ldr	r7, [pc, #48]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bcba:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000bcbc:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bcbe:	f021 0103 	bic.w	r1, r1, #3
9000bcc2:	4301      	orrs	r1, r0
9000bcc4:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000bcc6:	e4de      	b.n	9000b686 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bcc8:	4f08      	ldr	r7, [pc, #32]	@ (9000bcec <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bcca:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000bccc:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bcce:	f021 0107 	bic.w	r1, r1, #7
9000bcd2:	4301      	orrs	r1, r0
9000bcd4:	6579      	str	r1, [r7, #84]	@ 0x54
9000bcd6:	e52c      	b.n	9000b732 <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000bcd8:	462e      	mov	r6, r5
9000bcda:	e577      	b.n	9000b7cc <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000bcdc:	462e      	mov	r6, r5
9000bcde:	e4aa      	b.n	9000b636 <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000bce0:	462e      	mov	r6, r5
9000bce2:	e59c      	b.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000bce4:	462e      	mov	r6, r5
9000bce6:	e606      	b.n	9000b8f6 <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000bce8:	462e      	mov	r6, r5
9000bcea:	e5c1      	b.n	9000b870 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bcec:	58024400 	.word	0x58024400
9000bcf0:	58024800 	.word	0x58024800
      status = ret;
9000bcf4:	462e      	mov	r6, r5
9000bcf6:	e475      	b.n	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000bcf8:	462e      	mov	r6, r5
9000bcfa:	e4f9      	b.n	9000b6f0 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bcfc:	4fc2      	ldr	r7, [pc, #776]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcfe:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000bd02:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bd04:	f021 0107 	bic.w	r1, r1, #7
9000bd08:	4301      	orrs	r1, r0
9000bd0a:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bd0c:	e535      	b.n	9000b77a <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000bd0e:	2900      	cmp	r1, #0
9000bd10:	f47f aef3 	bne.w	9000bafa <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000bd14:	e7c0      	b.n	9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd16:	49bc      	ldr	r1, [pc, #752]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd18:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd1a:	f001 0103 	and.w	r1, r1, #3
9000bd1e:	2903      	cmp	r1, #3
9000bd20:	f000 8194 	beq.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000bd24:	2102      	movs	r1, #2
9000bd26:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd2a:	f7ff fac7 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bd2e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bd30:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd34:	2d00      	cmp	r5, #0
9000bd36:	d1cf      	bne.n	9000bcd8 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000bd38:	e540      	b.n	9000b7bc <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd3a:	49b3      	ldr	r1, [pc, #716]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd3c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd3e:	f001 0103 	and.w	r1, r1, #3
9000bd42:	2903      	cmp	r1, #3
9000bd44:	f000 81ba 	beq.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000bd48:	2102      	movs	r1, #2
9000bd4a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd4e:	f7ff fab5 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bd52:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bd54:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd58:	2d00      	cmp	r5, #0
9000bd5a:	d1c1      	bne.n	9000bce0 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000bd5c:	e557      	b.n	9000b80e <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd5e:	49aa      	ldr	r1, [pc, #680]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd60:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd62:	f001 0103 	and.w	r1, r1, #3
9000bd66:	2903      	cmp	r1, #3
9000bd68:	f000 818c 	beq.w	9000c084 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000bd6c:	2102      	movs	r1, #2
9000bd6e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd72:	f7ff faa3 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bd76:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bd78:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd7c:	2d00      	cmp	r5, #0
9000bd7e:	d1b3      	bne.n	9000bce8 <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000bd80:	e56e      	b.n	9000b860 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd82:	49a1      	ldr	r1, [pc, #644]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd84:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd86:	f001 0103 	and.w	r1, r1, #3
9000bd8a:	2903      	cmp	r1, #3
9000bd8c:	f000 81df 	beq.w	9000c14e <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000bd90:	2102      	movs	r1, #2
9000bd92:	f104 0008 	add.w	r0, r4, #8
9000bd96:	f7ff fa21 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000bd9a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bd9c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bda0:	2d00      	cmp	r5, #0
9000bda2:	d187      	bne.n	9000bcb4 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000bda4:	f7ff bbc7 	b.w	9000b536 <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bda8:	4997      	ldr	r1, [pc, #604]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdaa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdac:	f001 0103 	and.w	r1, r1, #3
9000bdb0:	2903      	cmp	r1, #3
9000bdb2:	f000 820a 	beq.w	9000c1ca <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bdb6:	2102      	movs	r1, #2
9000bdb8:	f104 0008 	add.w	r0, r4, #8
9000bdbc:	f7ff fa0e 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000bdc0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bdc2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdc6:	2d00      	cmp	r5, #0
9000bdc8:	f47f ac5c 	bne.w	9000b684 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000bdcc:	e774      	b.n	9000bcb8 <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdce:	498e      	ldr	r1, [pc, #568]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdd0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdd2:	f001 0103 	and.w	r1, r1, #3
9000bdd6:	2903      	cmp	r1, #3
9000bdd8:	f000 8146 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000bddc:	2101      	movs	r1, #1
9000bdde:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bde2:	f7ff fa6b 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bde6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bde8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdec:	2d00      	cmp	r5, #0
9000bdee:	d181      	bne.n	9000bcf4 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000bdf0:	f7ff bbf1 	b.w	9000b5d6 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdf4:	4984      	ldr	r1, [pc, #528]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdf6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdf8:	f001 0103 	and.w	r1, r1, #3
9000bdfc:	2903      	cmp	r1, #3
9000bdfe:	f43f ad8a 	beq.w	9000b916 <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000be02:	2101      	movs	r1, #1
9000be04:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be08:	f7ff fa58 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000be0c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000be0e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be12:	2d00      	cmp	r5, #0
9000be14:	f47f af4a 	bne.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0x910>
9000be18:	e6a9      	b.n	9000bb6e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be1a:	497b      	ldr	r1, [pc, #492]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be1c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be1e:	f001 0103 	and.w	r1, r1, #3
9000be22:	2903      	cmp	r1, #3
9000be24:	f43f ae7e 	beq.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000be28:	2102      	movs	r1, #2
9000be2a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be2e:	f7ff fa45 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000be32:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000be34:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be38:	2d00      	cmp	r5, #0
9000be3a:	f47f af53 	bne.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000be3e:	e552      	b.n	9000b8e6 <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be40:	4971      	ldr	r1, [pc, #452]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be44:	f001 0103 	and.w	r1, r1, #3
9000be48:	2903      	cmp	r1, #3
9000be4a:	f000 8129 	beq.w	9000c0a0 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000be4e:	2101      	movs	r1, #1
9000be50:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be54:	f7ff fa32 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000be58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000be5a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be5e:	2d00      	cmp	r5, #0
9000be60:	f47f af3c 	bne.w	9000bcdc <HAL_RCCEx_PeriphCLKConfig+0x940>
9000be64:	f7ff bbdf 	b.w	9000b626 <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000be68:	4867      	ldr	r0, [pc, #412]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be6a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000be6c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000be70:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000be72:	2d00      	cmp	r5, #0
9000be74:	f43f ab88 	beq.w	9000b588 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000be78:	462e      	mov	r6, r5
9000be7a:	f7ff bb8c 	b.w	9000b596 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000be7e:	4862      	ldr	r0, [pc, #392]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be80:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000be82:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000be86:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000be88:	2d00      	cmp	r5, #0
9000be8a:	f43f ab38 	beq.w	9000b4fe <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000be8e:	462e      	mov	r6, r5
9000be90:	f7ff bb3d 	b.w	9000b50e <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be94:	495c      	ldr	r1, [pc, #368]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be96:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be98:	f001 0103 	and.w	r1, r1, #3
9000be9c:	2903      	cmp	r1, #3
9000be9e:	f000 8125 	beq.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000bea2:	2100      	movs	r1, #0
9000bea4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bea8:	f7ff fa08 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000beac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000beae:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000beb2:	f7ff bb66 	b.w	9000b582 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000beb6:	4954      	ldr	r1, [pc, #336]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000beb8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000beba:	f001 0103 	and.w	r1, r1, #3
9000bebe:	2903      	cmp	r1, #3
9000bec0:	f000 813e 	beq.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000bec4:	2100      	movs	r1, #0
9000bec6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000beca:	f7ff f9f7 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bece:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bed0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bed4:	2d00      	cmp	r5, #0
9000bed6:	f43f aabd 	beq.w	9000b454 <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000beda:	462e      	mov	r6, r5
9000bedc:	f7ff bac1 	b.w	9000b462 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bee0:	4949      	ldr	r1, [pc, #292]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bee2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bee4:	f001 0103 	and.w	r1, r1, #3
9000bee8:	2903      	cmp	r1, #3
9000beea:	f43f aa91 	beq.w	9000b410 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000beee:	2100      	movs	r1, #0
9000bef0:	f104 0008 	add.w	r0, r4, #8
9000bef4:	f7ff f972 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000bef8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000befa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000befe:	2d00      	cmp	r5, #0
9000bf00:	f43f ae89 	beq.w	9000bc16 <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000bf04:	462e      	mov	r6, r5
9000bf06:	f7ff ba85 	b.w	9000b414 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf0a:	493f      	ldr	r1, [pc, #252]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf0c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf0e:	f001 0103 	and.w	r1, r1, #3
9000bf12:	2903      	cmp	r1, #3
9000bf14:	f43f aa7c 	beq.w	9000b410 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000bf18:	2100      	movs	r1, #0
9000bf1a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf1e:	f7ff f9cd 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bf22:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bf24:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bf28:	e672      	b.n	9000bc10 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf2a:	4937      	ldr	r1, [pc, #220]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf2c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf2e:	f001 0103 	and.w	r1, r1, #3
9000bf32:	2903      	cmp	r1, #3
9000bf34:	f000 80f9 	beq.w	9000c12a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000bf38:	2100      	movs	r1, #0
9000bf3a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf3e:	f7ff f9bd 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bf42:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bf44:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf48:	2d00      	cmp	r5, #0
9000bf4a:	f43f aaad 	beq.w	9000b4a8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000bf4e:	462e      	mov	r6, r5
9000bf50:	f7ff bab2 	b.w	9000b4b8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf54:	492c      	ldr	r1, [pc, #176]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf56:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf58:	f001 0103 	and.w	r1, r1, #3
9000bf5c:	2903      	cmp	r1, #3
9000bf5e:	f000 80d1 	beq.w	9000c104 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000bf62:	2100      	movs	r1, #0
9000bf64:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf68:	f7ff f9a8 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bf6c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bf6e:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bf72:	f7ff bac1 	b.w	9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf76:	4924      	ldr	r1, [pc, #144]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf78:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf7a:	f001 0103 	and.w	r1, r1, #3
9000bf7e:	2903      	cmp	r1, #3
9000bf80:	f000 80c8 	beq.w	9000c114 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000bf84:	2102      	movs	r1, #2
9000bf86:	3028      	adds	r0, #40	@ 0x28
9000bf88:	f7ff f998 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bf8c:	4606      	mov	r6, r0
        break;
9000bf8e:	f7ff ba28 	b.w	9000b3e2 <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf92:	481d      	ldr	r0, [pc, #116]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf94:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bf96:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bf9a:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bf9c:	f7ff ba81 	b.w	9000b4a2 <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bfa0:	4819      	ldr	r0, [pc, #100]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bfa2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bfa4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bfa8:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bfaa:	f7ff ba50 	b.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bfae:	4d16      	ldr	r5, [pc, #88]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bfb0:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000bfb2:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bfb6:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bfb8:	f7ff ba17 	b.w	9000b3ea <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfbc:	4912      	ldr	r1, [pc, #72]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bfbe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfc0:	f001 0103 	and.w	r1, r1, #3
9000bfc4:	2903      	cmp	r1, #3
9000bfc6:	f000 80e5 	beq.w	9000c194 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000bfca:	2101      	movs	r1, #1
9000bfcc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bfd0:	f7ff f974 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bfd4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bfd6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfda:	2d00      	cmp	r5, #0
9000bfdc:	f47f abcc 	bne.w	9000b778 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000bfe0:	e68c      	b.n	9000bcfc <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfe2:	4909      	ldr	r1, [pc, #36]	@ (9000c008 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bfe4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfe6:	f001 0103 	and.w	r1, r1, #3
9000bfea:	2903      	cmp	r1, #3
9000bfec:	f000 80d6 	beq.w	9000c19c <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000bff0:	2101      	movs	r1, #1
9000bff2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bff6:	f7ff f961 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000bffa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bffc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c000:	2d00      	cmp	r5, #0
9000c002:	f47f ab95 	bne.w	9000b730 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000c006:	e65f      	b.n	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000c008:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c00c:	4983      	ldr	r1, [pc, #524]	@ (9000c21c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c00e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c010:	f001 0103 	and.w	r1, r1, #3
9000c014:	2903      	cmp	r1, #3
9000c016:	f43f ab69 	beq.w	9000b6ec <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c01a:	2101      	movs	r1, #1
9000c01c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c020:	f7ff f94c 	bl	9000b2bc <RCCEx_PLL3_Config.part.0>
9000c024:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c026:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c02a:	2d00      	cmp	r5, #0
9000c02c:	f47f ae64 	bne.w	9000bcf8 <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000c030:	e58d      	b.n	9000bb4e <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000c032:	2001      	movs	r0, #1
}
9000c034:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c038:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c03c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c040:	f43f abb9 	beq.w	9000b7b6 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000c044:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c048:	f43f abb5 	beq.w	9000b7b6 <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000c04c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c04e:	4635      	mov	r5, r6
9000c050:	f7ff bbbc 	b.w	9000b7cc <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c054:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000c058:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000c05c:	f43f aab8 	beq.w	9000b5d0 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000c060:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000c064:	f43f aab4 	beq.w	9000b5d0 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000c068:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c06a:	4635      	mov	r5, r6
9000c06c:	f7ff baba 	b.w	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c070:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000c074:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c078:	f43f abef 	beq.w	9000b85a <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000c07c:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000c080:	f43f abeb 	beq.w	9000b85a <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000c084:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c086:	4635      	mov	r5, r6
9000c088:	f7ff bbf2 	b.w	9000b870 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c08c:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c090:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c094:	f43f aac4 	beq.w	9000b620 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000c098:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c09c:	f43f aac0 	beq.w	9000b620 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000c0a0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0a2:	4635      	mov	r5, r6
9000c0a4:	f7ff bac7 	b.w	9000b636 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c0a8:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000c0ac:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c0b0:	f43f abaa 	beq.w	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c0b4:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000c0b8:	f43f aba6 	beq.w	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000c0bc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0be:	4635      	mov	r5, r6
9000c0c0:	f7ff bbad 	b.w	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000c0c4:	2501      	movs	r5, #1
9000c0c6:	e4e2      	b.n	9000ba8e <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c0c8:	0691      	lsls	r1, r2, #26
9000c0ca:	d5b2      	bpl.n	9000c032 <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000c0cc:	2501      	movs	r5, #1
9000c0ce:	e4f2      	b.n	9000bab6 <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000c0d0:	2501      	movs	r5, #1
9000c0d2:	e4a9      	b.n	9000ba28 <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000c0d4:	2501      	movs	r5, #1
9000c0d6:	e4b8      	b.n	9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000c0d8:	2501      	movs	r5, #1
9000c0da:	e4c7      	b.n	9000ba6c <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c0dc:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000c0e0:	f43f aa4f 	beq.w	9000b582 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000c0e4:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c0e8:	f43f aa4b 	beq.w	9000b582 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000c0ec:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0ee:	4635      	mov	r5, r6
9000c0f0:	f7ff ba51 	b.w	9000b596 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c0f4:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000c0f8:	f43f a9fe 	beq.w	9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000c0fc:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000c100:	f43f a9fa 	beq.w	9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000c104:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c106:	4635      	mov	r5, r6
9000c108:	f7ff ba01 	b.w	9000b50e <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c10c:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c110:	f43f a96b 	beq.w	9000b3ea <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000c114:	2601      	movs	r6, #1
9000c116:	f7ff b96f 	b.w	9000b3f8 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c11a:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000c11e:	f43f a9c0 	beq.w	9000b4a2 <HAL_RCCEx_PeriphCLKConfig+0x106>
9000c122:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000c126:	f43f a9bc 	beq.w	9000b4a2 <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000c12a:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c12c:	4635      	mov	r5, r6
9000c12e:	f7ff b9c3 	b.w	9000b4b8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c132:	29c0      	cmp	r1, #192	@ 0xc0
9000c134:	f43f a98b 	beq.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000c138:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c13c:	f43f a987 	beq.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000c140:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c142:	4635      	mov	r5, r6
9000c144:	f7ff b98d 	b.w	9000b462 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000c148:	2930      	cmp	r1, #48	@ 0x30
9000c14a:	f43f a9f1 	beq.w	9000b530 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000c14e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c150:	4635      	mov	r5, r6
9000c152:	f7ff b9f7 	b.w	9000b544 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000c156:	2503      	movs	r5, #3
      status = ret;
9000c158:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c15a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c15e:	f7ff ba95 	b.w	9000b68c <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c162:	6863      	ldr	r3, [r4, #4]
9000c164:	069a      	lsls	r2, r3, #26
9000c166:	f57f af64 	bpl.w	9000c032 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000c16a:	4605      	mov	r5, r0
9000c16c:	e4a3      	b.n	9000bab6 <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c16e:	492b      	ldr	r1, [pc, #172]	@ (9000c21c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c170:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c172:	f001 0103 	and.w	r1, r1, #3
9000c176:	2903      	cmp	r1, #3
9000c178:	f43f aa6b 	beq.w	9000b652 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000c17c:	2101      	movs	r1, #1
9000c17e:	f104 0008 	add.w	r0, r4, #8
9000c182:	f7ff f82b 	bl	9000b1dc <RCCEx_PLL2_Config.part.0>
9000c186:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c188:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c18c:	2d00      	cmp	r5, #0
9000c18e:	f47f ad8f 	bne.w	9000bcb0 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000c192:	e4bf      	b.n	9000bb14 <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000c194:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c196:	4635      	mov	r5, r6
9000c198:	f7ff baef 	b.w	9000b77a <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000c19c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c19e:	4635      	mov	r5, r6
9000c1a0:	f7ff bac7 	b.w	9000b732 <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000c1a4:	2601      	movs	r6, #1
9000c1a6:	f7ff bb79 	b.w	9000b89c <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000c1aa:	2601      	movs	r6, #1
9000c1ac:	f7ff bb68 	b.w	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c1b0:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c1b4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c1b8:	f7ff bb62 	b.w	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c1bc:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c1c0:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c1c2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c1c6:	f7ff bb69 	b.w	9000b89c <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000c1ca:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c1cc:	4635      	mov	r5, r6
9000c1ce:	f7ff ba5a 	b.w	9000b686 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000c1d2:	f7fa feb9 	bl	90006f48 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c1d6:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000c21c <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000c1da:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c1dc:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c1e0:	e004      	b.n	9000c1ec <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c1e2:	f7fa feb1 	bl	90006f48 <HAL_GetTick>
9000c1e6:	1bc0      	subs	r0, r0, r7
9000c1e8:	4548      	cmp	r0, r9
9000c1ea:	d810      	bhi.n	9000c20e <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c1ec:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c1f0:	079b      	lsls	r3, r3, #30
9000c1f2:	d5f6      	bpl.n	9000c1e2 <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c1f4:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c1f8:	e4f0      	b.n	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x840>
9000c1fa:	4808      	ldr	r0, [pc, #32]	@ (9000c21c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c1fc:	4a08      	ldr	r2, [pc, #32]	@ (9000c220 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000c1fe:	6901      	ldr	r1, [r0, #16]
9000c200:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c204:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c208:	430a      	orrs	r2, r1
9000c20a:	6102      	str	r2, [r0, #16]
9000c20c:	e4f1      	b.n	9000bbf2 <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000c20e:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c210:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c214:	4635      	mov	r5, r6
9000c216:	f7ff ba39 	b.w	9000b68c <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000c21a:	bf00      	nop
9000c21c:	58024400 	.word	0x58024400
9000c220:	00ffffcf 	.word	0x00ffffcf

9000c224 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000c224:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000c226:	f7fe fedd 	bl	9000afe4 <HAL_RCC_GetHCLKFreq>
9000c22a:	4b05      	ldr	r3, [pc, #20]	@ (9000c240 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000c22c:	4a05      	ldr	r2, [pc, #20]	@ (9000c244 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000c22e:	6a1b      	ldr	r3, [r3, #32]
9000c230:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000c234:	5cd3      	ldrb	r3, [r2, r3]
9000c236:	f003 031f 	and.w	r3, r3, #31
}
9000c23a:	40d8      	lsrs	r0, r3
9000c23c:	bd08      	pop	{r3, pc}
9000c23e:	bf00      	nop
9000c240:	58024400 	.word	0x58024400
9000c244:	9002cf28 	.word	0x9002cf28

9000c248 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c248:	4a47      	ldr	r2, [pc, #284]	@ (9000c368 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000c24a:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c24c:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c24e:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c250:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000c252:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c256:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c25a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000c25c:	d05b      	beq.n	9000c316 <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c25e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c262:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c266:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c26a:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c26e:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c272:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c274:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c278:	ee06 1a90 	vmov	s13, r1
9000c27c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c280:	d003      	beq.n	9000c28a <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000c282:	2c02      	cmp	r4, #2
9000c284:	d06a      	beq.n	9000c35c <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000c286:	2c00      	cmp	r4, #0
9000c288:	d04a      	beq.n	9000c320 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c28a:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c36c <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000c28e:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c292:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c294:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c298:	ee07 3a90 	vmov	s15, r3
9000c29c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c2a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c2a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c2a8:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c2ac:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c2b0:	4a2d      	ldr	r2, [pc, #180]	@ (9000c368 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000c2b2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c2b6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c2b8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c2bc:	ee07 3a10 	vmov	s14, r3
9000c2c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c2c4:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c2c6:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c2ca:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c2ce:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c2d2:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000c2d6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c2d8:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c2dc:	ee07 3a10 	vmov	s14, r3
9000c2e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c2e4:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c2e8:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c2ec:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c2f0:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c2f4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c2f6:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c2fa:	ee06 3a90 	vmov	s13, r3
9000c2fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c302:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c306:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c30a:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c30e:	ee17 3a90 	vmov	r3, s15
9000c312:	6083      	str	r3, [r0, #8]
}
9000c314:	4770      	bx	lr
9000c316:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000c318:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c31c:	6083      	str	r3, [r0, #8]
}
9000c31e:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c320:	6813      	ldr	r3, [r2, #0]
9000c322:	069b      	lsls	r3, r3, #26
9000c324:	d51d      	bpl.n	9000c362 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c326:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c328:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c32c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c32e:	4910      	ldr	r1, [pc, #64]	@ (9000c370 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000c330:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c334:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c338:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c33a:	ee07 3a90 	vmov	s15, r3
9000c33e:	ee06 1a10 	vmov	s12, r1
9000c342:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c346:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c34a:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c34e:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c352:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c356:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c35a:	e7a9      	b.n	9000c2b0 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c35c:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c374 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000c360:	e795      	b.n	9000c28e <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c362:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c378 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000c366:	e792      	b.n	9000c28e <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000c368:	58024400 	.word	0x58024400
9000c36c:	4a742400 	.word	0x4a742400
9000c370:	03d09000 	.word	0x03d09000
9000c374:	4bbebc20 	.word	0x4bbebc20
9000c378:	4c742400 	.word	0x4c742400

9000c37c <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c37c:	4a47      	ldr	r2, [pc, #284]	@ (9000c49c <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000c37e:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c380:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c382:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c384:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000c386:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c38a:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c38e:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000c390:	d05b      	beq.n	9000c44a <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c392:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c396:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c39a:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c39e:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c3a2:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c3a6:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c3a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c3ac:	ee06 1a90 	vmov	s13, r1
9000c3b0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c3b4:	d003      	beq.n	9000c3be <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000c3b6:	2c02      	cmp	r4, #2
9000c3b8:	d06a      	beq.n	9000c490 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000c3ba:	2c00      	cmp	r4, #0
9000c3bc:	d04a      	beq.n	9000c454 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c3be:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c4a0 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000c3c2:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c3c6:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c3c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c3cc:	ee07 3a90 	vmov	s15, r3
9000c3d0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c3d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c3d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c3dc:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c3e0:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c3e4:	4a2d      	ldr	r2, [pc, #180]	@ (9000c49c <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000c3e6:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c3ea:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c3ec:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c3f0:	ee07 3a10 	vmov	s14, r3
9000c3f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c3f8:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c3fa:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c3fe:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c402:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c406:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000c40a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c40c:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c410:	ee07 3a10 	vmov	s14, r3
9000c414:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c418:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c41c:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c420:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c424:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c428:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c42a:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c42e:	ee06 3a90 	vmov	s13, r3
9000c432:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c436:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c43a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c43e:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c442:	ee17 3a90 	vmov	r3, s15
9000c446:	6083      	str	r3, [r0, #8]
}
9000c448:	4770      	bx	lr
9000c44a:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000c44c:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c450:	6083      	str	r3, [r0, #8]
}
9000c452:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c454:	6813      	ldr	r3, [r2, #0]
9000c456:	069b      	lsls	r3, r3, #26
9000c458:	d51d      	bpl.n	9000c496 <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c45a:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c45c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c460:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c462:	4910      	ldr	r1, [pc, #64]	@ (9000c4a4 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000c464:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c468:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c46c:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c46e:	ee07 3a90 	vmov	s15, r3
9000c472:	ee06 1a10 	vmov	s12, r1
9000c476:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c47a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c47e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c482:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c486:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c48a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c48e:	e7a9      	b.n	9000c3e4 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c490:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c4a8 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000c494:	e795      	b.n	9000c3c2 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c496:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c4ac <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000c49a:	e792      	b.n	9000c3c2 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000c49c:	58024400 	.word	0x58024400
9000c4a0:	4a742400 	.word	0x4a742400
9000c4a4:	03d09000 	.word	0x03d09000
9000c4a8:	4bbebc20 	.word	0x4bbebc20
9000c4ac:	4c742400 	.word	0x4c742400

9000c4b0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c4b0:	b318      	cbz	r0, 9000c4fa <HAL_SDRAM_Init+0x4a>
{
9000c4b2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c4b4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c4b8:	4604      	mov	r4, r0
9000c4ba:	460d      	mov	r5, r1
9000c4bc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c4c0:	b1b3      	cbz	r3, 9000c4f0 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c4c2:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c4c4:	2302      	movs	r3, #2
9000c4c6:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c4ca:	f851 0b04 	ldr.w	r0, [r1], #4
9000c4ce:	f000 fe29 	bl	9000d124 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c4d2:	6862      	ldr	r2, [r4, #4]
9000c4d4:	4629      	mov	r1, r5
9000c4d6:	6820      	ldr	r0, [r4, #0]
9000c4d8:	f000 fe5a 	bl	9000d190 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c4dc:	4a08      	ldr	r2, [pc, #32]	@ (9000c500 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c4de:	2101      	movs	r1, #1

  return HAL_OK;
9000c4e0:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c4e2:	6813      	ldr	r3, [r2, #0]
9000c4e4:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c4e8:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c4ea:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c4ee:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c4f0:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c4f4:	f7f7 fede 	bl	900042b4 <HAL_SDRAM_MspInit>
9000c4f8:	e7e3      	b.n	9000c4c2 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c4fa:	2001      	movs	r0, #1
}
9000c4fc:	4770      	bx	lr
9000c4fe:	bf00      	nop
9000c500:	52004000 	.word	0x52004000

9000c504 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c504:	b510      	push	{r4, lr}
9000c506:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c508:	f7f7 ff50 	bl	900043ac <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c50c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c510:	f000 fe7c 	bl	9000d20c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c514:	2000      	movs	r0, #0
9000c516:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c51a:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c51e:	bd10      	pop	{r4, pc}

9000c520 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c520:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c522:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c526:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c528:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c52a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c52c:	d004      	beq.n	9000c538 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c52e:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c532:	2c01      	cmp	r4, #1
9000c534:	d001      	beq.n	9000c53a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c536:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c538:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c53a:	2302      	movs	r3, #2
9000c53c:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c53e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c540:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c544:	f000 fe76 	bl	9000d234 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c548:	6833      	ldr	r3, [r6, #0]
9000c54a:	2b02      	cmp	r3, #2
9000c54c:	d003      	beq.n	9000c556 <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c54e:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c552:	2000      	movs	r0, #0
}
9000c554:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c556:	2305      	movs	r3, #5
9000c558:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c55c:	e7f9      	b.n	9000c552 <HAL_SDRAM_SendCommand+0x32>
9000c55e:	bf00      	nop

9000c560 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c560:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c562:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c566:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c568:	2b02      	cmp	r3, #2
9000c56a:	b2d8      	uxtb	r0, r3
9000c56c:	d005      	beq.n	9000c57a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c56e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c572:	2b01      	cmp	r3, #1
9000c574:	b2dd      	uxtb	r5, r3
9000c576:	d001      	beq.n	9000c57c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c578:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c57a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c57c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c57e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c580:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c584:	f000 fe70 	bl	9000d268 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c588:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c58a:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c58e:	bd38      	pop	{r3, r4, r5, pc}

9000c590 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c590:	4770      	bx	lr
9000c592:	bf00      	nop

9000c594 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c594:	2800      	cmp	r0, #0
9000c596:	f000 8095 	beq.w	9000c6c4 <HAL_TIM_Base_Init+0x130>
{
9000c59a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c59c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c5a0:	4604      	mov	r4, r0
9000c5a2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c5a6:	2b00      	cmp	r3, #0
9000c5a8:	f000 8087 	beq.w	9000c6ba <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c5ac:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c5ae:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5b0:	4945      	ldr	r1, [pc, #276]	@ (9000c6c8 <HAL_TIM_Base_Init+0x134>)
9000c5b2:	4d46      	ldr	r5, [pc, #280]	@ (9000c6cc <HAL_TIM_Base_Init+0x138>)
9000c5b4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c5b8:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c5bc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5c0:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000c5c4:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5c6:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c5ca:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5cc:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c5d0:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5d2:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c5d6:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c5d8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c5dc:	d01f      	beq.n	9000c61e <HAL_TIM_Base_Init+0x8a>
9000c5de:	b9f1      	cbnz	r1, 9000c61e <HAL_TIM_Base_Init+0x8a>
9000c5e0:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000c6dc <HAL_TIM_Base_Init+0x148>
9000c5e4:	4563      	cmp	r3, ip
9000c5e6:	d050      	beq.n	9000c68a <HAL_TIM_Base_Init+0xf6>
9000c5e8:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c5ec:	4563      	cmp	r3, ip
9000c5ee:	d04c      	beq.n	9000c68a <HAL_TIM_Base_Init+0xf6>
9000c5f0:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c5f4:	4563      	cmp	r3, ip
9000c5f6:	d012      	beq.n	9000c61e <HAL_TIM_Base_Init+0x8a>
9000c5f8:	f1be 0f00 	cmp.w	lr, #0
9000c5fc:	d10f      	bne.n	9000c61e <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c5fe:	4d34      	ldr	r5, [pc, #208]	@ (9000c6d0 <HAL_TIM_Base_Init+0x13c>)
9000c600:	4934      	ldr	r1, [pc, #208]	@ (9000c6d4 <HAL_TIM_Base_Init+0x140>)
9000c602:	428b      	cmp	r3, r1
9000c604:	bf18      	it	ne
9000c606:	42ab      	cmpne	r3, r5
9000c608:	d043      	beq.n	9000c692 <HAL_TIM_Base_Init+0xfe>
9000c60a:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c60e:	428b      	cmp	r3, r1
9000c610:	d03f      	beq.n	9000c692 <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c612:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c616:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c618:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c61a:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c61c:	e014      	b.n	9000c648 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000c61e:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c620:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c624:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000c628:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c62a:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c62c:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000c62e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c632:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c636:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c63a:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c63c:	b911      	cbnz	r1, 9000c644 <HAL_TIM_Base_Init+0xb0>
9000c63e:	f1be 0f00 	cmp.w	lr, #0
9000c642:	d02f      	beq.n	9000c6a4 <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c644:	6962      	ldr	r2, [r4, #20]
9000c646:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c648:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c64a:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c64c:	f041 0104 	orr.w	r1, r1, #4
9000c650:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000c652:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000c654:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000c656:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c658:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c65c:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000c660:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000c664:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000c668:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000c66c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000c670:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c674:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000c678:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000c67c:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000c680:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c684:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000c688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c68a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c68e:	68a1      	ldr	r1, [r4, #8]
9000c690:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c692:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c694:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c698:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c69a:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000c69c:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c69e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c6a2:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c6a4:	490c      	ldr	r1, [pc, #48]	@ (9000c6d8 <HAL_TIM_Base_Init+0x144>)
9000c6a6:	4a0a      	ldr	r2, [pc, #40]	@ (9000c6d0 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c6a8:	4293      	cmp	r3, r2
9000c6aa:	bf18      	it	ne
9000c6ac:	428b      	cmpne	r3, r1
9000c6ae:	d0c9      	beq.n	9000c644 <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c6b0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c6b4:	4293      	cmp	r3, r2
9000c6b6:	d0c5      	beq.n	9000c644 <HAL_TIM_Base_Init+0xb0>
9000c6b8:	e7c6      	b.n	9000c648 <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000c6ba:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c6be:	f7ff ff67 	bl	9000c590 <HAL_TIM_Base_MspInit>
9000c6c2:	e773      	b.n	9000c5ac <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000c6c4:	2001      	movs	r0, #1
}
9000c6c6:	4770      	bx	lr
9000c6c8:	40010000 	.word	0x40010000
9000c6cc:	40010400 	.word	0x40010400
9000c6d0:	40014000 	.word	0x40014000
9000c6d4:	40014400 	.word	0x40014400
9000c6d8:	40014800 	.word	0x40014800
9000c6dc:	40000400 	.word	0x40000400

9000c6e0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c6e0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c6e4:	2b01      	cmp	r3, #1
9000c6e6:	d13d      	bne.n	9000c764 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c6e8:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c6ea:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6ec:	4b1e      	ldr	r3, [pc, #120]	@ (9000c768 <HAL_TIM_Base_Start_IT+0x88>)
9000c6ee:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c6f2:	bf18      	it	ne
9000c6f4:	429a      	cmpne	r2, r3
{
9000c6f6:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6f8:	bf0c      	ite	eq
9000c6fa:	2301      	moveq	r3, #1
9000c6fc:	2300      	movne	r3, #0
9000c6fe:	4d1b      	ldr	r5, [pc, #108]	@ (9000c76c <HAL_TIM_Base_Start_IT+0x8c>)
9000c700:	4c1b      	ldr	r4, [pc, #108]	@ (9000c770 <HAL_TIM_Base_Start_IT+0x90>)
9000c702:	42aa      	cmp	r2, r5
9000c704:	bf08      	it	eq
9000c706:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c70a:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c70e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c710:	42a2      	cmp	r2, r4
9000c712:	bf08      	it	eq
9000c714:	f043 0301 	orreq.w	r3, r3, #1
9000c718:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c71c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c720:	4814      	ldr	r0, [pc, #80]	@ (9000c774 <HAL_TIM_Base_Start_IT+0x94>)
9000c722:	42a2      	cmp	r2, r4
9000c724:	bf08      	it	eq
9000c726:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c72a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c72c:	4282      	cmp	r2, r0
9000c72e:	bf08      	it	eq
9000c730:	f043 0301 	orreq.w	r3, r3, #1
9000c734:	4910      	ldr	r1, [pc, #64]	@ (9000c778 <HAL_TIM_Base_Start_IT+0x98>)
9000c736:	428a      	cmp	r2, r1
9000c738:	bf08      	it	eq
9000c73a:	f043 0301 	orreq.w	r3, r3, #1
9000c73e:	b913      	cbnz	r3, 9000c746 <HAL_TIM_Base_Start_IT+0x66>
9000c740:	4b0e      	ldr	r3, [pc, #56]	@ (9000c77c <HAL_TIM_Base_Start_IT+0x9c>)
9000c742:	429a      	cmp	r2, r3
9000c744:	d107      	bne.n	9000c756 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c746:	6891      	ldr	r1, [r2, #8]
9000c748:	4b0d      	ldr	r3, [pc, #52]	@ (9000c780 <HAL_TIM_Base_Start_IT+0xa0>)
9000c74a:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c74c:	2b06      	cmp	r3, #6
9000c74e:	d006      	beq.n	9000c75e <HAL_TIM_Base_Start_IT+0x7e>
9000c750:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c754:	d003      	beq.n	9000c75e <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000c756:	6813      	ldr	r3, [r2, #0]
9000c758:	f043 0301 	orr.w	r3, r3, #1
9000c75c:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000c75e:	2000      	movs	r0, #0
}
9000c760:	bc30      	pop	{r4, r5}
9000c762:	4770      	bx	lr
    return HAL_ERROR;
9000c764:	2001      	movs	r0, #1
}
9000c766:	4770      	bx	lr
9000c768:	40010000 	.word	0x40010000
9000c76c:	40000400 	.word	0x40000400
9000c770:	40000800 	.word	0x40000800
9000c774:	40010400 	.word	0x40010400
9000c778:	40001800 	.word	0x40001800
9000c77c:	40014000 	.word	0x40014000
9000c780:	00010007 	.word	0x00010007

9000c784 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000c784:	4770      	bx	lr
9000c786:	bf00      	nop

9000c788 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000c788:	4770      	bx	lr
9000c78a:	bf00      	nop

9000c78c <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000c78c:	4770      	bx	lr
9000c78e:	bf00      	nop

9000c790 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000c790:	4770      	bx	lr
9000c792:	bf00      	nop

9000c794 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000c794:	6803      	ldr	r3, [r0, #0]
{
9000c796:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000c798:	68de      	ldr	r6, [r3, #12]
{
9000c79a:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000c79c:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000c79e:	07aa      	lsls	r2, r5, #30
9000c7a0:	d501      	bpl.n	9000c7a6 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000c7a2:	07b1      	lsls	r1, r6, #30
9000c7a4:	d452      	bmi.n	9000c84c <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000c7a6:	076b      	lsls	r3, r5, #29
9000c7a8:	d501      	bpl.n	9000c7ae <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000c7aa:	0770      	lsls	r0, r6, #29
9000c7ac:	d43b      	bmi.n	9000c826 <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000c7ae:	0729      	lsls	r1, r5, #28
9000c7b0:	d501      	bpl.n	9000c7b6 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000c7b2:	0732      	lsls	r2, r6, #28
9000c7b4:	d425      	bmi.n	9000c802 <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000c7b6:	06e8      	lsls	r0, r5, #27
9000c7b8:	d501      	bpl.n	9000c7be <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000c7ba:	06f1      	lsls	r1, r6, #27
9000c7bc:	d411      	bmi.n	9000c7e2 <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000c7be:	07ea      	lsls	r2, r5, #31
9000c7c0:	d501      	bpl.n	9000c7c6 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000c7c2:	07f3      	lsls	r3, r6, #31
9000c7c4:	d464      	bmi.n	9000c890 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c7c6:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000c7ca:	d04c      	beq.n	9000c866 <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c7cc:	0630      	lsls	r0, r6, #24
9000c7ce:	d467      	bmi.n	9000c8a0 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000c7d0:	0668      	lsls	r0, r5, #25
9000c7d2:	d501      	bpl.n	9000c7d8 <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000c7d4:	0671      	lsls	r1, r6, #25
9000c7d6:	d46d      	bmi.n	9000c8b4 <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000c7d8:	06aa      	lsls	r2, r5, #26
9000c7da:	d501      	bpl.n	9000c7e0 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000c7dc:	06b3      	lsls	r3, r6, #26
9000c7de:	d44e      	bmi.n	9000c87e <HAL_TIM_IRQHandler+0xea>
}
9000c7e0:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c7e2:	6823      	ldr	r3, [r4, #0]
9000c7e4:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000c7e8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c7ea:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c7ec:	2208      	movs	r2, #8
9000c7ee:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c7f0:	69db      	ldr	r3, [r3, #28]
9000c7f2:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c7f6:	d071      	beq.n	9000c8dc <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000c7f8:	f7ff ffc6 	bl	9000c788 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c7fc:	2300      	movs	r3, #0
9000c7fe:	7723      	strb	r3, [r4, #28]
9000c800:	e7dd      	b.n	9000c7be <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c802:	6823      	ldr	r3, [r4, #0]
9000c804:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c808:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c80a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c80c:	2204      	movs	r2, #4
9000c80e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c810:	69db      	ldr	r3, [r3, #28]
9000c812:	079b      	lsls	r3, r3, #30
9000c814:	d15f      	bne.n	9000c8d6 <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c816:	f7ff ffb5 	bl	9000c784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c81a:	4620      	mov	r0, r4
9000c81c:	f7ff ffb6 	bl	9000c78c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c820:	2300      	movs	r3, #0
9000c822:	7723      	strb	r3, [r4, #28]
9000c824:	e7c7      	b.n	9000c7b6 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c826:	6823      	ldr	r3, [r4, #0]
9000c828:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c82c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c82e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c830:	2202      	movs	r2, #2
9000c832:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c834:	699b      	ldr	r3, [r3, #24]
9000c836:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c83a:	d149      	bne.n	9000c8d0 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c83c:	f7ff ffa2 	bl	9000c784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c840:	4620      	mov	r0, r4
9000c842:	f7ff ffa3 	bl	9000c78c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c846:	2300      	movs	r3, #0
9000c848:	7723      	strb	r3, [r4, #28]
9000c84a:	e7b0      	b.n	9000c7ae <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000c84c:	f06f 0202 	mvn.w	r2, #2
9000c850:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c852:	2201      	movs	r2, #1
9000c854:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c856:	699b      	ldr	r3, [r3, #24]
9000c858:	079a      	lsls	r2, r3, #30
9000c85a:	d033      	beq.n	9000c8c4 <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000c85c:	f7ff ff94 	bl	9000c788 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c860:	2300      	movs	r3, #0
9000c862:	7723      	strb	r3, [r4, #28]
9000c864:	e79f      	b.n	9000c7a6 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c866:	05ea      	lsls	r2, r5, #23
9000c868:	d5b2      	bpl.n	9000c7d0 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c86a:	0633      	lsls	r3, r6, #24
9000c86c:	d5b0      	bpl.n	9000c7d0 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c86e:	6823      	ldr	r3, [r4, #0]
9000c870:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c874:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c876:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c878:	f000 f83a 	bl	9000c8f0 <HAL_TIMEx_Break2Callback>
9000c87c:	e7a8      	b.n	9000c7d0 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c87e:	6823      	ldr	r3, [r4, #0]
9000c880:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c884:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c886:	611a      	str	r2, [r3, #16]
}
9000c888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c88c:	f000 b82c 	b.w	9000c8e8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c890:	6823      	ldr	r3, [r4, #0]
9000c892:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c896:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c898:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c89a:	f7f7 faa7 	bl	90003dec <HAL_TIM_PeriodElapsedCallback>
9000c89e:	e792      	b.n	9000c7c6 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c8a0:	6823      	ldr	r3, [r4, #0]
9000c8a2:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000c8a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c8a8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c8aa:	f000 f81f 	bl	9000c8ec <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c8ae:	05e9      	lsls	r1, r5, #23
9000c8b0:	d58e      	bpl.n	9000c7d0 <HAL_TIM_IRQHandler+0x3c>
9000c8b2:	e7dc      	b.n	9000c86e <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c8b4:	6823      	ldr	r3, [r4, #0]
9000c8b6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000c8ba:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c8bc:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c8be:	f7ff ff67 	bl	9000c790 <HAL_TIM_TriggerCallback>
9000c8c2:	e789      	b.n	9000c7d8 <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c8c4:	f7ff ff5e 	bl	9000c784 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c8c8:	4620      	mov	r0, r4
9000c8ca:	f7ff ff5f 	bl	9000c78c <HAL_TIM_PWM_PulseFinishedCallback>
9000c8ce:	e7c7      	b.n	9000c860 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c8d0:	f7ff ff5a 	bl	9000c788 <HAL_TIM_IC_CaptureCallback>
9000c8d4:	e7b7      	b.n	9000c846 <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000c8d6:	f7ff ff57 	bl	9000c788 <HAL_TIM_IC_CaptureCallback>
9000c8da:	e7a1      	b.n	9000c820 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c8dc:	f7ff ff52 	bl	9000c784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c8e0:	4620      	mov	r0, r4
9000c8e2:	f7ff ff53 	bl	9000c78c <HAL_TIM_PWM_PulseFinishedCallback>
9000c8e6:	e789      	b.n	9000c7fc <HAL_TIM_IRQHandler+0x68>

9000c8e8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000c8e8:	4770      	bx	lr
9000c8ea:	bf00      	nop

9000c8ec <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000c8ec:	4770      	bx	lr
9000c8ee:	bf00      	nop

9000c8f0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000c8f0:	4770      	bx	lr
9000c8f2:	bf00      	nop

9000c8f4 <UART_SetConfig>:
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c8f4:	6901      	ldr	r1, [r0, #16]
9000c8f6:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c8f8:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c8fa:	430a      	orrs	r2, r1
{
9000c8fc:	b570      	push	{r4, r5, r6, lr}
9000c8fe:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c900:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c902:	69c0      	ldr	r0, [r0, #28]
{
9000c904:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c906:	6961      	ldr	r1, [r4, #20]
9000c908:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c90a:	49a0      	ldr	r1, [pc, #640]	@ (9000cb8c <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c90c:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c90e:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000c910:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c912:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c914:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c916:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c918:	685a      	ldr	r2, [r3, #4]
9000c91a:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000c91e:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000c920:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c922:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000c924:	4a9a      	ldr	r2, [pc, #616]	@ (9000cb90 <UART_SetConfig+0x29c>)
9000c926:	4293      	cmp	r3, r2
9000c928:	f000 8119 	beq.w	9000cb5e <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000c92c:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000c92e:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000c930:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000c932:	4a98      	ldr	r2, [pc, #608]	@ (9000cb94 <UART_SetConfig+0x2a0>)
9000c934:	4032      	ands	r2, r6
9000c936:	4311      	orrs	r1, r2
9000c938:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000c93a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000c93c:	f022 020f 	bic.w	r2, r2, #15
9000c940:	432a      	orrs	r2, r5
9000c942:	62da      	str	r2, [r3, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
9000c944:	4a94      	ldr	r2, [pc, #592]	@ (9000cb98 <UART_SetConfig+0x2a4>)
9000c946:	4293      	cmp	r3, r2
9000c948:	d028      	beq.n	9000c99c <UART_SetConfig+0xa8>
9000c94a:	4a94      	ldr	r2, [pc, #592]	@ (9000cb9c <UART_SetConfig+0x2a8>)
9000c94c:	4293      	cmp	r3, r2
9000c94e:	d01a      	beq.n	9000c986 <UART_SetConfig+0x92>
9000c950:	4a93      	ldr	r2, [pc, #588]	@ (9000cba0 <UART_SetConfig+0x2ac>)
9000c952:	4293      	cmp	r3, r2
9000c954:	d017      	beq.n	9000c986 <UART_SetConfig+0x92>
9000c956:	4a93      	ldr	r2, [pc, #588]	@ (9000cba4 <UART_SetConfig+0x2b0>)
9000c958:	4293      	cmp	r3, r2
9000c95a:	d014      	beq.n	9000c986 <UART_SetConfig+0x92>
9000c95c:	4a92      	ldr	r2, [pc, #584]	@ (9000cba8 <UART_SetConfig+0x2b4>)
9000c95e:	4293      	cmp	r3, r2
9000c960:	d011      	beq.n	9000c986 <UART_SetConfig+0x92>
9000c962:	4a92      	ldr	r2, [pc, #584]	@ (9000cbac <UART_SetConfig+0x2b8>)
9000c964:	4293      	cmp	r3, r2
9000c966:	d019      	beq.n	9000c99c <UART_SetConfig+0xa8>
9000c968:	4a91      	ldr	r2, [pc, #580]	@ (9000cbb0 <UART_SetConfig+0x2bc>)
9000c96a:	4293      	cmp	r3, r2
9000c96c:	d00b      	beq.n	9000c986 <UART_SetConfig+0x92>
9000c96e:	4a91      	ldr	r2, [pc, #580]	@ (9000cbb4 <UART_SetConfig+0x2c0>)
9000c970:	4293      	cmp	r3, r2
9000c972:	d008      	beq.n	9000c986 <UART_SetConfig+0x92>

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
      {
        ret = HAL_ERROR;
9000c974:	2001      	movs	r0, #1
  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
9000c976:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000c978:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000c97c:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000c97e:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000c980:	67a3      	str	r3, [r4, #120]	@ 0x78

  return ret;
}
9000c982:	b006      	add	sp, #24
9000c984:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000c986:	4b8c      	ldr	r3, [pc, #560]	@ (9000cbb8 <UART_SetConfig+0x2c4>)
9000c988:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000c98a:	f003 0307 	and.w	r3, r3, #7
9000c98e:	2b05      	cmp	r3, #5
9000c990:	d8f0      	bhi.n	9000c974 <UART_SetConfig+0x80>
9000c992:	e8df f003 	tbb	[pc, r3]
9000c996:	7e9e      	.short	0x7e9e
9000c998:	785f9189 	.word	0x785f9189
9000c99c:	4b86      	ldr	r3, [pc, #536]	@ (9000cbb8 <UART_SetConfig+0x2c4>)
9000c99e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000c9a0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c9a4:	2b28      	cmp	r3, #40	@ 0x28
9000c9a6:	d8e5      	bhi.n	9000c974 <UART_SetConfig+0x80>
9000c9a8:	a201      	add	r2, pc, #4	@ (adr r2, 9000c9b0 <UART_SetConfig+0xbc>)
9000c9aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000c9ae:	bf00      	nop
9000c9b0:	9000cb2d 	.word	0x9000cb2d
9000c9b4:	9000c975 	.word	0x9000c975
9000c9b8:	9000c975 	.word	0x9000c975
9000c9bc:	9000c975 	.word	0x9000c975
9000c9c0:	9000c975 	.word	0x9000c975
9000c9c4:	9000c975 	.word	0x9000c975
9000c9c8:	9000c975 	.word	0x9000c975
9000c9cc:	9000c975 	.word	0x9000c975
9000c9d0:	9000ca93 	.word	0x9000ca93
9000c9d4:	9000c975 	.word	0x9000c975
9000c9d8:	9000c975 	.word	0x9000c975
9000c9dc:	9000c975 	.word	0x9000c975
9000c9e0:	9000c975 	.word	0x9000c975
9000c9e4:	9000c975 	.word	0x9000c975
9000c9e8:	9000c975 	.word	0x9000c975
9000c9ec:	9000c975 	.word	0x9000c975
9000c9f0:	9000caa9 	.word	0x9000caa9
9000c9f4:	9000c975 	.word	0x9000c975
9000c9f8:	9000c975 	.word	0x9000c975
9000c9fc:	9000c975 	.word	0x9000c975
9000ca00:	9000c975 	.word	0x9000c975
9000ca04:	9000c975 	.word	0x9000c975
9000ca08:	9000c975 	.word	0x9000c975
9000ca0c:	9000c975 	.word	0x9000c975
9000ca10:	9000cab9 	.word	0x9000cab9
9000ca14:	9000c975 	.word	0x9000c975
9000ca18:	9000c975 	.word	0x9000c975
9000ca1c:	9000c975 	.word	0x9000c975
9000ca20:	9000c975 	.word	0x9000c975
9000ca24:	9000c975 	.word	0x9000c975
9000ca28:	9000c975 	.word	0x9000c975
9000ca2c:	9000c975 	.word	0x9000c975
9000ca30:	9000ca55 	.word	0x9000ca55
9000ca34:	9000c975 	.word	0x9000c975
9000ca38:	9000c975 	.word	0x9000c975
9000ca3c:	9000c975 	.word	0x9000c975
9000ca40:	9000c975 	.word	0x9000c975
9000ca44:	9000c975 	.word	0x9000c975
9000ca48:	9000c975 	.word	0x9000c975
9000ca4c:	9000c975 	.word	0x9000c975
9000ca50:	9000ca87 	.word	0x9000ca87
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ca54:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000ca58:	4858      	ldr	r0, [pc, #352]	@ (9000cbbc <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ca5a:	d047      	beq.n	9000caec <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ca5c:	4a58      	ldr	r2, [pc, #352]	@ (9000cbc0 <UART_SetConfig+0x2cc>)
9000ca5e:	6863      	ldr	r3, [r4, #4]
9000ca60:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ca64:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ca68:	fbb0 f0f1 	udiv	r0, r0, r1
9000ca6c:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000ca70:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ca74:	f1a0 0310 	sub.w	r3, r0, #16
9000ca78:	4293      	cmp	r3, r2
9000ca7a:	f63f af7b 	bhi.w	9000c974 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000ca7e:	6823      	ldr	r3, [r4, #0]
9000ca80:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000ca82:	2000      	movs	r0, #0
9000ca84:	e777      	b.n	9000c976 <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ca86:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ca8a:	d02f      	beq.n	9000caec <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000ca8c:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000ca90:	e7e4      	b.n	9000ca5c <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ca92:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ca96:	d022      	beq.n	9000cade <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000ca98:	4668      	mov	r0, sp
9000ca9a:	f7ff fbd5 	bl	9000c248 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000ca9e:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000caa0:	2800      	cmp	r0, #0
9000caa2:	d0ee      	beq.n	9000ca82 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000caa4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000caa6:	e7d9      	b.n	9000ca5c <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000caa8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000caac:	d04f      	beq.n	9000cb4e <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000caae:	a803      	add	r0, sp, #12
9000cab0:	f7ff fc64 	bl	9000c37c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000cab4:	9804      	ldr	r0, [sp, #16]
        break;
9000cab6:	e7f3      	b.n	9000caa0 <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000cab8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000cabc:	d03c      	beq.n	9000cb38 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cabe:	4b3e      	ldr	r3, [pc, #248]	@ (9000cbb8 <UART_SetConfig+0x2c4>)
9000cac0:	681a      	ldr	r2, [r3, #0]
9000cac2:	0691      	lsls	r1, r2, #26
9000cac4:	d52d      	bpl.n	9000cb22 <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000cac6:	681b      	ldr	r3, [r3, #0]
9000cac8:	483e      	ldr	r0, [pc, #248]	@ (9000cbc4 <UART_SetConfig+0x2d0>)
9000caca:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cace:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000cad0:	e7c4      	b.n	9000ca5c <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000cad2:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000cad6:	d026      	beq.n	9000cb26 <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000cad8:	f7fe fac4 	bl	9000b064 <HAL_RCC_GetPCLK1Freq>
        break;
9000cadc:	e7e0      	b.n	9000caa0 <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000cade:	4668      	mov	r0, sp
9000cae0:	f7ff fbb2 	bl	9000c248 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000cae4:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000cae6:	2800      	cmp	r0, #0
9000cae8:	d0cb      	beq.n	9000ca82 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000caea:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000caec:	4b34      	ldr	r3, [pc, #208]	@ (9000cbc0 <UART_SetConfig+0x2cc>)
9000caee:	6862      	ldr	r2, [r4, #4]
9000caf0:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000caf4:	0853      	lsrs	r3, r2, #1
9000caf6:	fbb0 f0f1 	udiv	r0, r0, r1
9000cafa:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000cafe:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000cb02:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000cb06:	f1a3 0210 	sub.w	r2, r3, #16
9000cb0a:	428a      	cmp	r2, r1
9000cb0c:	f63f af32 	bhi.w	9000c974 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000cb10:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000cb14:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000cb18:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000cb1a:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000cb1c:	4313      	orrs	r3, r2
9000cb1e:	60cb      	str	r3, [r1, #12]
9000cb20:	e7af      	b.n	9000ca82 <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000cb22:	4828      	ldr	r0, [pc, #160]	@ (9000cbc4 <UART_SetConfig+0x2d0>)
9000cb24:	e79a      	b.n	9000ca5c <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000cb26:	f7fe fa9d 	bl	9000b064 <HAL_RCC_GetPCLK1Freq>
        break;
9000cb2a:	e7dc      	b.n	9000cae6 <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000cb2c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000cb30:	d012      	beq.n	9000cb58 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000cb32:	f7fe fadf 	bl	9000b0f4 <HAL_RCC_GetPCLK2Freq>
        break;
9000cb36:	e7b3      	b.n	9000caa0 <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cb38:	4b1f      	ldr	r3, [pc, #124]	@ (9000cbb8 <UART_SetConfig+0x2c4>)
9000cb3a:	681a      	ldr	r2, [r3, #0]
9000cb3c:	0690      	lsls	r0, r2, #26
9000cb3e:	f140 808b 	bpl.w	9000cc58 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000cb42:	681b      	ldr	r3, [r3, #0]
9000cb44:	481f      	ldr	r0, [pc, #124]	@ (9000cbc4 <UART_SetConfig+0x2d0>)
9000cb46:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cb4a:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000cb4c:	e7ce      	b.n	9000caec <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000cb4e:	a803      	add	r0, sp, #12
9000cb50:	f7ff fc14 	bl	9000c37c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000cb54:	9804      	ldr	r0, [sp, #16]
        break;
9000cb56:	e7c6      	b.n	9000cae6 <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000cb58:	f7fe facc 	bl	9000b0f4 <HAL_RCC_GetPCLK2Freq>
        break;
9000cb5c:	e7c3      	b.n	9000cae6 <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000cb5e:	6898      	ldr	r0, [r3, #8]
9000cb60:	4a0c      	ldr	r2, [pc, #48]	@ (9000cb94 <UART_SetConfig+0x2a0>)
9000cb62:	4002      	ands	r2, r0
9000cb64:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000cb66:	4914      	ldr	r1, [pc, #80]	@ (9000cbb8 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000cb68:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000cb6a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000cb6c:	f022 020f 	bic.w	r2, r2, #15
9000cb70:	432a      	orrs	r2, r5
9000cb72:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000cb74:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000cb76:	f003 0307 	and.w	r3, r3, #7
9000cb7a:	2b05      	cmp	r3, #5
9000cb7c:	f63f aefa 	bhi.w	9000c974 <UART_SetConfig+0x80>
9000cb80:	e8df f003 	tbb	[pc, r3]
9000cb84:	224e575c 	.word	0x224e575c
9000cb88:	5f62      	.short	0x5f62
9000cb8a:	bf00      	nop
9000cb8c:	cfff69f3 	.word	0xcfff69f3
9000cb90:	58000c00 	.word	0x58000c00
9000cb94:	11fff4ff 	.word	0x11fff4ff
9000cb98:	40011000 	.word	0x40011000
9000cb9c:	40004400 	.word	0x40004400
9000cba0:	40004800 	.word	0x40004800
9000cba4:	40004c00 	.word	0x40004c00
9000cba8:	40005000 	.word	0x40005000
9000cbac:	40011400 	.word	0x40011400
9000cbb0:	40007800 	.word	0x40007800
9000cbb4:	40007c00 	.word	0x40007c00
9000cbb8:	58024400 	.word	0x58024400
9000cbbc:	003d0900 	.word	0x003d0900
9000cbc0:	9002d1b8 	.word	0x9002d1b8
9000cbc4:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cbc8:	4b24      	ldr	r3, [pc, #144]	@ (9000cc5c <UART_SetConfig+0x368>)
9000cbca:	681a      	ldr	r2, [r3, #0]
9000cbcc:	0692      	lsls	r2, r2, #26
9000cbce:	d43d      	bmi.n	9000cc4c <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000cbd0:	4823      	ldr	r0, [pc, #140]	@ (9000cc60 <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cbd2:	4b24      	ldr	r3, [pc, #144]	@ (9000cc64 <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cbd4:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cbd6:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cbda:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cbde:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cbe2:	4299      	cmp	r1, r3
9000cbe4:	f63f aec6 	bhi.w	9000c974 <UART_SetConfig+0x80>
9000cbe8:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000cbec:	f63f aec2 	bhi.w	9000c974 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000cbf0:	2300      	movs	r3, #0
9000cbf2:	4619      	mov	r1, r3
9000cbf4:	f7f3 fdd0 	bl	90000798 <__aeabi_uldivmod>
9000cbf8:	4632      	mov	r2, r6
9000cbfa:	0209      	lsls	r1, r1, #8
9000cbfc:	0203      	lsls	r3, r0, #8
9000cbfe:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000cc02:	0870      	lsrs	r0, r6, #1
9000cc04:	1818      	adds	r0, r3, r0
9000cc06:	f04f 0300 	mov.w	r3, #0
9000cc0a:	f141 0100 	adc.w	r1, r1, #0
9000cc0e:	f7f3 fdc3 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000cc12:	4b15      	ldr	r3, [pc, #84]	@ (9000cc68 <UART_SetConfig+0x374>)
9000cc14:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000cc18:	429a      	cmp	r2, r3
9000cc1a:	f63f aeab 	bhi.w	9000c974 <UART_SetConfig+0x80>
9000cc1e:	e72e      	b.n	9000ca7e <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000cc20:	a803      	add	r0, sp, #12
9000cc22:	f7ff fbab 	bl	9000c37c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000cc26:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000cc28:	2800      	cmp	r0, #0
9000cc2a:	f43f af2a 	beq.w	9000ca82 <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cc2e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000cc30:	e7cf      	b.n	9000cbd2 <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000cc32:	4668      	mov	r0, sp
9000cc34:	f7ff fb08 	bl	9000c248 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000cc38:	9801      	ldr	r0, [sp, #4]
        break;
9000cc3a:	e7f5      	b.n	9000cc28 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000cc3c:	f7ff faf2 	bl	9000c224 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000cc40:	e7f2      	b.n	9000cc28 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000cc42:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000cc46:	e7c4      	b.n	9000cbd2 <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000cc48:	4808      	ldr	r0, [pc, #32]	@ (9000cc6c <UART_SetConfig+0x378>)
9000cc4a:	e7c2      	b.n	9000cbd2 <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000cc4c:	681b      	ldr	r3, [r3, #0]
9000cc4e:	4804      	ldr	r0, [pc, #16]	@ (9000cc60 <UART_SetConfig+0x36c>)
9000cc50:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cc54:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000cc56:	e7bc      	b.n	9000cbd2 <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000cc58:	4801      	ldr	r0, [pc, #4]	@ (9000cc60 <UART_SetConfig+0x36c>)
9000cc5a:	e747      	b.n	9000caec <UART_SetConfig+0x1f8>
9000cc5c:	58024400 	.word	0x58024400
9000cc60:	03d09000 	.word	0x03d09000
9000cc64:	9002d1b8 	.word	0x9002d1b8
9000cc68:	000ffcff 	.word	0x000ffcff
9000cc6c:	003d0900 	.word	0x003d0900

9000cc70 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000cc70:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000cc72:	071a      	lsls	r2, r3, #28
{
9000cc74:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000cc76:	d506      	bpl.n	9000cc86 <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000cc78:	6801      	ldr	r1, [r0, #0]
9000cc7a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000cc7c:	684a      	ldr	r2, [r1, #4]
9000cc7e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000cc82:	4322      	orrs	r2, r4
9000cc84:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000cc86:	07dc      	lsls	r4, r3, #31
9000cc88:	d506      	bpl.n	9000cc98 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000cc8a:	6801      	ldr	r1, [r0, #0]
9000cc8c:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000cc8e:	684a      	ldr	r2, [r1, #4]
9000cc90:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000cc94:	4322      	orrs	r2, r4
9000cc96:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000cc98:	0799      	lsls	r1, r3, #30
9000cc9a:	d506      	bpl.n	9000ccaa <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000cc9c:	6801      	ldr	r1, [r0, #0]
9000cc9e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000cca0:	684a      	ldr	r2, [r1, #4]
9000cca2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000cca6:	4322      	orrs	r2, r4
9000cca8:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000ccaa:	075a      	lsls	r2, r3, #29
9000ccac:	d506      	bpl.n	9000ccbc <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000ccae:	6801      	ldr	r1, [r0, #0]
9000ccb0:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000ccb2:	684a      	ldr	r2, [r1, #4]
9000ccb4:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000ccb8:	4322      	orrs	r2, r4
9000ccba:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000ccbc:	06dc      	lsls	r4, r3, #27
9000ccbe:	d506      	bpl.n	9000ccce <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000ccc0:	6801      	ldr	r1, [r0, #0]
9000ccc2:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000ccc4:	688a      	ldr	r2, [r1, #8]
9000ccc6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000ccca:	4322      	orrs	r2, r4
9000cccc:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000ccce:	0699      	lsls	r1, r3, #26
9000ccd0:	d506      	bpl.n	9000cce0 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000ccd2:	6801      	ldr	r1, [r0, #0]
9000ccd4:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000ccd6:	688a      	ldr	r2, [r1, #8]
9000ccd8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000ccdc:	4322      	orrs	r2, r4
9000ccde:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000cce0:	065a      	lsls	r2, r3, #25
9000cce2:	d50a      	bpl.n	9000ccfa <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000cce4:	6801      	ldr	r1, [r0, #0]
9000cce6:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000cce8:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000ccea:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000ccee:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000ccf2:	ea42 0204 	orr.w	r2, r2, r4
9000ccf6:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000ccf8:	d00b      	beq.n	9000cd12 <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000ccfa:	061b      	lsls	r3, r3, #24
9000ccfc:	d506      	bpl.n	9000cd0c <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000ccfe:	6802      	ldr	r2, [r0, #0]
9000cd00:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000cd02:	6853      	ldr	r3, [r2, #4]
9000cd04:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000cd08:	430b      	orrs	r3, r1
9000cd0a:	6053      	str	r3, [r2, #4]
  }
}
9000cd0c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cd10:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000cd12:	684a      	ldr	r2, [r1, #4]
9000cd14:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000cd16:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000cd1a:	4322      	orrs	r2, r4
9000cd1c:	604a      	str	r2, [r1, #4]
9000cd1e:	e7ec      	b.n	9000ccfa <UART_AdvFeatureConfig+0x8a>

9000cd20 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
9000cd20:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cd22:	2300      	movs	r3, #0
{
9000cd24:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cd26:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
9000cd2a:	f7fa f90d 	bl	90006f48 <HAL_GetTick>

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000cd2e:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000cd30:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000cd32:	6813      	ldr	r3, [r2, #0]
9000cd34:	071b      	lsls	r3, r3, #28
9000cd36:	d40f      	bmi.n	9000cd58 <UART_CheckIdleState+0x38>
      return HAL_TIMEOUT;
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000cd38:	6813      	ldr	r3, [r2, #0]
9000cd3a:	0759      	lsls	r1, r3, #29
9000cd3c:	d431      	bmi.n	9000cda2 <UART_CheckIdleState+0x82>
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd3e:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000cd40:	2220      	movs	r2, #32
  huart->RxEventType = HAL_UART_RXEVENT_TC;

  __HAL_UNLOCK(huart);

  return HAL_OK;
9000cd42:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000cd44:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000cd48:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd4c:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000cd4e:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000cd50:	2300      	movs	r3, #0
9000cd52:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000cd56:	bd38      	pop	{r3, r4, r5, pc}
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cd58:	69d3      	ldr	r3, [r2, #28]
9000cd5a:	0298      	lsls	r0, r3, #10
9000cd5c:	d4ec      	bmi.n	9000cd38 <UART_CheckIdleState+0x18>
9000cd5e:	e00c      	b.n	9000cd7a <UART_CheckIdleState+0x5a>
      {

        return HAL_TIMEOUT;
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000cd60:	6819      	ldr	r1, [r3, #0]
9000cd62:	461a      	mov	r2, r3
9000cd64:	0749      	lsls	r1, r1, #29
9000cd66:	d505      	bpl.n	9000cd74 <UART_CheckIdleState+0x54>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000cd68:	69d9      	ldr	r1, [r3, #28]
9000cd6a:	0708      	lsls	r0, r1, #28
9000cd6c:	d44a      	bmi.n	9000ce04 <UART_CheckIdleState+0xe4>
          /* Process Unlocked */
          __HAL_UNLOCK(huart);

          return HAL_ERROR;
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000cd6e:	69d9      	ldr	r1, [r3, #28]
9000cd70:	0509      	lsls	r1, r1, #20
9000cd72:	d475      	bmi.n	9000ce60 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cd74:	69db      	ldr	r3, [r3, #28]
9000cd76:	0298      	lsls	r0, r3, #10
9000cd78:	d4de      	bmi.n	9000cd38 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000cd7a:	f7fa f8e5 	bl	90006f48 <HAL_GetTick>
9000cd7e:	1b43      	subs	r3, r0, r5
9000cd80:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000cd84:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000cd86:	d3eb      	bcc.n	9000cd60 <UART_CheckIdleState+0x40>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd88:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000cd8c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd90:	e843 2100 	strex	r1, r2, [r3]
9000cd94:	2900      	cmp	r1, #0
9000cd96:	d1f7      	bne.n	9000cd88 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000cd98:	2320      	movs	r3, #32
9000cd9a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000cd9e:	2003      	movs	r0, #3
9000cda0:	e7d6      	b.n	9000cd50 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cda2:	69d3      	ldr	r3, [r2, #28]
9000cda4:	025b      	lsls	r3, r3, #9
9000cda6:	d4ca      	bmi.n	9000cd3e <UART_CheckIdleState+0x1e>
9000cda8:	e00d      	b.n	9000cdc6 <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000cdaa:	681a      	ldr	r2, [r3, #0]
9000cdac:	0750      	lsls	r0, r2, #29
9000cdae:	d507      	bpl.n	9000cdc0 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000cdb0:	69da      	ldr	r2, [r3, #28]
9000cdb2:	0711      	lsls	r1, r2, #28
9000cdb4:	f100 8082 	bmi.w	9000cebc <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000cdb8:	69da      	ldr	r2, [r3, #28]
9000cdba:	0512      	lsls	r2, r2, #20
9000cdbc:	f100 80ac 	bmi.w	9000cf18 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cdc0:	69db      	ldr	r3, [r3, #28]
9000cdc2:	025b      	lsls	r3, r3, #9
9000cdc4:	d4bb      	bmi.n	9000cd3e <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000cdc6:	f7fa f8bf 	bl	90006f48 <HAL_GetTick>
9000cdca:	1b43      	subs	r3, r0, r5
9000cdcc:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000cdd0:	6823      	ldr	r3, [r4, #0]
9000cdd2:	d3ea      	bcc.n	9000cdaa <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdd4:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cdd8:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cddc:	e843 2100 	strex	r1, r2, [r3]
9000cde0:	2900      	cmp	r1, #0
9000cde2:	d1f7      	bne.n	9000cdd4 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cde4:	f103 0208 	add.w	r2, r3, #8
9000cde8:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000cdec:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdf0:	f103 0008 	add.w	r0, r3, #8
9000cdf4:	e840 2100 	strex	r1, r2, [r0]
9000cdf8:	2900      	cmp	r1, #0
9000cdfa:	d1f3      	bne.n	9000cde4 <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000cdfc:	2320      	movs	r3, #32
9000cdfe:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000ce02:	e7cc      	b.n	9000cd9e <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000ce04:	2208      	movs	r2, #8
9000ce06:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce08:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ce0c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce10:	e843 2100 	strex	r1, r2, [r3]
9000ce14:	2900      	cmp	r1, #0
9000ce16:	d1f7      	bne.n	9000ce08 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ce18:	4856      	ldr	r0, [pc, #344]	@ (9000cf74 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce1a:	f103 0208 	add.w	r2, r3, #8
9000ce1e:	e852 2f00 	ldrex	r2, [r2]
9000ce22:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce24:	f103 0508 	add.w	r5, r3, #8
9000ce28:	e845 2100 	strex	r1, r2, [r5]
9000ce2c:	2900      	cmp	r1, #0
9000ce2e:	d1f4      	bne.n	9000ce1a <UART_CheckIdleState+0xfa>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ce30:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ce32:	2a01      	cmp	r2, #1
9000ce34:	d00b      	beq.n	9000ce4e <UART_CheckIdleState+0x12e>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce36:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ce38:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ce3a:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000ce3c:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
9000ce40:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce42:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000ce44:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ce48:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000ce4c:	e79c      	b.n	9000cd88 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce4e:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ce52:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce56:	e843 2100 	strex	r1, r2, [r3]
9000ce5a:	2900      	cmp	r1, #0
9000ce5c:	d1f7      	bne.n	9000ce4e <UART_CheckIdleState+0x12e>
9000ce5e:	e7ea      	b.n	9000ce36 <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000ce60:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000ce64:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce66:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ce6a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce6e:	e843 2100 	strex	r1, r2, [r3]
9000ce72:	2900      	cmp	r1, #0
9000ce74:	d1f7      	bne.n	9000ce66 <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ce76:	483f      	ldr	r0, [pc, #252]	@ (9000cf74 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce78:	f103 0208 	add.w	r2, r3, #8
9000ce7c:	e852 2f00 	ldrex	r2, [r2]
9000ce80:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce82:	f103 0508 	add.w	r5, r3, #8
9000ce86:	e845 2100 	strex	r1, r2, [r5]
9000ce8a:	2900      	cmp	r1, #0
9000ce8c:	d1f4      	bne.n	9000ce78 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ce8e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ce90:	2a01      	cmp	r2, #1
9000ce92:	d00a      	beq.n	9000ceaa <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce94:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ce96:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000ce98:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000ce9a:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000ce9e:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cea2:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000cea4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000cea8:	e76e      	b.n	9000cd88 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ceaa:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ceae:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ceb2:	e843 2100 	strex	r1, r2, [r3]
9000ceb6:	2900      	cmp	r1, #0
9000ceb8:	d1f7      	bne.n	9000ceaa <UART_CheckIdleState+0x18a>
9000ceba:	e7eb      	b.n	9000ce94 <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000cebc:	2208      	movs	r2, #8
9000cebe:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cec0:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cec4:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cec8:	e843 2100 	strex	r1, r2, [r3]
9000cecc:	2900      	cmp	r1, #0
9000cece:	d1f7      	bne.n	9000cec0 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ced0:	4828      	ldr	r0, [pc, #160]	@ (9000cf74 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ced2:	f103 0208 	add.w	r2, r3, #8
9000ced6:	e852 2f00 	ldrex	r2, [r2]
9000ceda:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cedc:	f103 0508 	add.w	r5, r3, #8
9000cee0:	e845 2100 	strex	r1, r2, [r5]
9000cee4:	2900      	cmp	r1, #0
9000cee6:	d1f4      	bne.n	9000ced2 <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cee8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ceea:	2a01      	cmp	r2, #1
9000ceec:	d00b      	beq.n	9000cf06 <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ceee:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000cef0:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000cef2:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000cef4:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000cef8:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cefa:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000cefc:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000cf00:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000cf04:	e766      	b.n	9000cdd4 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf06:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cf0a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf0e:	e843 2100 	strex	r1, r2, [r3]
9000cf12:	2900      	cmp	r1, #0
9000cf14:	d1f7      	bne.n	9000cf06 <UART_CheckIdleState+0x1e6>
9000cf16:	e7ea      	b.n	9000ceee <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000cf18:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000cf1c:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf1e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cf22:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf26:	e843 2100 	strex	r1, r2, [r3]
9000cf2a:	2900      	cmp	r1, #0
9000cf2c:	d1f7      	bne.n	9000cf1e <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000cf2e:	4811      	ldr	r0, [pc, #68]	@ (9000cf74 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf30:	f103 0208 	add.w	r2, r3, #8
9000cf34:	e852 2f00 	ldrex	r2, [r2]
9000cf38:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf3a:	f103 0508 	add.w	r5, r3, #8
9000cf3e:	e845 2100 	strex	r1, r2, [r5]
9000cf42:	2900      	cmp	r1, #0
9000cf44:	d1f4      	bne.n	9000cf30 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cf46:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000cf48:	2a01      	cmp	r2, #1
9000cf4a:	d00a      	beq.n	9000cf62 <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cf4c:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000cf4e:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000cf50:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000cf52:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000cf56:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cf5a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000cf5c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000cf60:	e738      	b.n	9000cdd4 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf62:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cf66:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf6a:	e843 2100 	strex	r1, r2, [r3]
9000cf6e:	2900      	cmp	r1, #0
9000cf70:	d1f7      	bne.n	9000cf62 <UART_CheckIdleState+0x242>
9000cf72:	e7eb      	b.n	9000cf4c <UART_CheckIdleState+0x22c>
9000cf74:	effffffe 	.word	0xeffffffe

9000cf78 <HAL_UART_Init>:
  if (huart == NULL)
9000cf78:	b380      	cbz	r0, 9000cfdc <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000cf7a:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000cf7e:	b510      	push	{r4, lr}
9000cf80:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000cf82:	b333      	cbz	r3, 9000cfd2 <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000cf84:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000cf86:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000cf88:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000cf8a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000cf8e:	6813      	ldr	r3, [r2, #0]
9000cf90:	f023 0301 	bic.w	r3, r3, #1
9000cf94:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000cf96:	b9c1      	cbnz	r1, 9000cfca <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000cf98:	4620      	mov	r0, r4
9000cf9a:	f7ff fcab 	bl	9000c8f4 <UART_SetConfig>
9000cf9e:	2801      	cmp	r0, #1
9000cfa0:	d011      	beq.n	9000cfc6 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000cfa2:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000cfa4:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000cfa6:	685a      	ldr	r2, [r3, #4]
9000cfa8:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000cfac:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000cfae:	689a      	ldr	r2, [r3, #8]
9000cfb0:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000cfb4:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000cfb6:	681a      	ldr	r2, [r3, #0]
9000cfb8:	f042 0201 	orr.w	r2, r2, #1
}
9000cfbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000cfc0:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000cfc2:	f7ff bead 	b.w	9000cd20 <UART_CheckIdleState>
}
9000cfc6:	2001      	movs	r0, #1
9000cfc8:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000cfca:	4620      	mov	r0, r4
9000cfcc:	f7ff fe50 	bl	9000cc70 <UART_AdvFeatureConfig>
9000cfd0:	e7e2      	b.n	9000cf98 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000cfd2:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000cfd6:	f7f7 f917 	bl	90004208 <HAL_UART_MspInit>
9000cfda:	e7d3      	b.n	9000cf84 <HAL_UART_Init+0xc>
}
9000cfdc:	2001      	movs	r0, #1
9000cfde:	4770      	bx	lr

9000cfe0 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000cfe0:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000cfe4:	2a01      	cmp	r2, #1
9000cfe6:	d017      	beq.n	9000d018 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cfe8:	6802      	ldr	r2, [r0, #0]
9000cfea:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000cfec:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000cfee:	2100      	movs	r1, #0
{
9000cff0:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000cff2:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000cff6:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cff8:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000cffa:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000cffc:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000d000:	f024 0401 	bic.w	r4, r4, #1
9000d004:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000d006:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000d008:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000d00a:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000d00c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000d010:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000d014:	bc30      	pop	{r4, r5}
9000d016:	4770      	bx	lr
  __HAL_LOCK(huart);
9000d018:	2002      	movs	r0, #2
}
9000d01a:	4770      	bx	lr

9000d01c <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000d01c:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000d020:	2a01      	cmp	r2, #1
9000d022:	d037      	beq.n	9000d094 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000d024:	6802      	ldr	r2, [r0, #0]
9000d026:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000d028:	2024      	movs	r0, #36	@ 0x24
{
9000d02a:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000d02c:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000d030:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000d032:	6810      	ldr	r0, [r2, #0]
9000d034:	f020 0001 	bic.w	r0, r0, #1
9000d038:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000d03a:	6890      	ldr	r0, [r2, #8]
9000d03c:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000d040:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000d042:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000d044:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000d046:	b310      	cbz	r0, 9000d08e <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000d048:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000d04a:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d04c:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d050:	4911      	ldr	r1, [pc, #68]	@ (9000d098 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000d052:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000d056:	4d11      	ldr	r5, [pc, #68]	@ (9000d09c <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d058:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d05c:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000d060:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d064:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000d066:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d06a:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d06c:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d070:	fbb1 f1f5 	udiv	r1, r1, r5
9000d074:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000d078:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000d07a:	2100      	movs	r1, #0
9000d07c:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000d080:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000d082:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000d084:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000d088:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000d08c:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000d08e:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000d090:	4608      	mov	r0, r1
9000d092:	e7ef      	b.n	9000d074 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000d094:	2002      	movs	r0, #2
}
9000d096:	4770      	bx	lr
9000d098:	9002d1d8 	.word	0x9002d1d8
9000d09c:	9002d1d0 	.word	0x9002d1d0

9000d0a0 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000d0a0:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000d0a4:	2a01      	cmp	r2, #1
9000d0a6:	d037      	beq.n	9000d118 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000d0a8:	6802      	ldr	r2, [r0, #0]
9000d0aa:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000d0ac:	2024      	movs	r0, #36	@ 0x24
{
9000d0ae:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000d0b0:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000d0b4:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000d0b6:	6810      	ldr	r0, [r2, #0]
9000d0b8:	f020 0001 	bic.w	r0, r0, #1
9000d0bc:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000d0be:	6890      	ldr	r0, [r2, #8]
9000d0c0:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000d0c4:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000d0c6:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000d0c8:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000d0ca:	b310      	cbz	r0, 9000d112 <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000d0cc:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000d0ce:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d0d0:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d0d4:	4911      	ldr	r1, [pc, #68]	@ (9000d11c <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000d0d6:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000d0da:	4d11      	ldr	r5, [pc, #68]	@ (9000d120 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d0dc:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d0e0:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000d0e4:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d0e8:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000d0ea:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d0ee:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d0f0:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d0f4:	fbb1 f1f5 	udiv	r1, r1, r5
9000d0f8:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000d0fc:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000d0fe:	2100      	movs	r1, #0
9000d100:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000d104:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000d106:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000d108:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000d10c:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000d110:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000d112:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000d114:	4608      	mov	r0, r1
9000d116:	e7ef      	b.n	9000d0f8 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000d118:	2002      	movs	r0, #2
}
9000d11a:	4770      	bx	lr
9000d11c:	9002d1d8 	.word	0x9002d1d8
9000d120:	9002d1d0 	.word	0x9002d1d0

9000d124 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000d124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d128:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000d12c:	e9d1 8200 	ldrd	r8, r2, [r1]
9000d130:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000d132:	ea43 030e 	orr.w	r3, r3, lr
9000d136:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000d13a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000d13e:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000d140:	f1b8 0f00 	cmp.w	r8, #0
9000d144:	d10f      	bne.n	9000d166 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d146:	433b      	orrs	r3, r7
9000d148:	4313      	orrs	r3, r2
9000d14a:	6802      	ldr	r2, [r0, #0]
9000d14c:	ea43 030c 	orr.w	r3, r3, ip
9000d150:	f36f 020e 	bfc	r2, #0, #15
9000d154:	4333      	orrs	r3, r6
9000d156:	432b      	orrs	r3, r5
9000d158:	4323      	orrs	r3, r4
9000d15a:	430b      	orrs	r3, r1
9000d15c:	4313      	orrs	r3, r2
9000d15e:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000d160:	2000      	movs	r0, #0
9000d162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d166:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d16a:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d16c:	4332      	orrs	r2, r6
9000d16e:	432a      	orrs	r2, r5
9000d170:	4322      	orrs	r2, r4
9000d172:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d174:	6801      	ldr	r1, [r0, #0]
9000d176:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000d17a:	430b      	orrs	r3, r1
9000d17c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d17e:	6843      	ldr	r3, [r0, #4]
9000d180:	f36f 030e 	bfc	r3, #0, #15
9000d184:	4313      	orrs	r3, r2
9000d186:	6043      	str	r3, [r0, #4]
}
9000d188:	2000      	movs	r0, #0
9000d18a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000d18e:	bf00      	nop

9000d190 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000d190:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d192:	68cc      	ldr	r4, [r1, #12]
9000d194:	694b      	ldr	r3, [r1, #20]
9000d196:	3c01      	subs	r4, #1
9000d198:	688d      	ldr	r5, [r1, #8]
9000d19a:	698f      	ldr	r7, [r1, #24]
9000d19c:	3b01      	subs	r3, #1
9000d19e:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000d1a2:	684c      	ldr	r4, [r1, #4]
9000d1a4:	680e      	ldr	r6, [r1, #0]
9000d1a6:	3d01      	subs	r5, #1
9000d1a8:	3c01      	subs	r4, #1
9000d1aa:	051b      	lsls	r3, r3, #20
9000d1ac:	022d      	lsls	r5, r5, #8
9000d1ae:	3e01      	subs	r6, #1
9000d1b0:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000d1b4:	690c      	ldr	r4, [r1, #16]
9000d1b6:	1e79      	subs	r1, r7, #1
9000d1b8:	3c01      	subs	r4, #1
9000d1ba:	0609      	lsls	r1, r1, #24
9000d1bc:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000d1be:	b972      	cbnz	r2, 9000d1de <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d1c0:	ea4e 0303 	orr.w	r3, lr, r3
9000d1c4:	6882      	ldr	r2, [r0, #8]
9000d1c6:	4333      	orrs	r3, r6
9000d1c8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d1cc:	ea43 030c 	orr.w	r3, r3, ip
9000d1d0:	432b      	orrs	r3, r5
9000d1d2:	4323      	orrs	r3, r4
9000d1d4:	430b      	orrs	r3, r1
9000d1d6:	4313      	orrs	r3, r2
9000d1d8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000d1da:	2000      	movs	r0, #0
9000d1dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d1de:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d1e2:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d1e6:	4a08      	ldr	r2, [pc, #32]	@ (9000d208 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d1e8:	4333      	orrs	r3, r6
9000d1ea:	4323      	orrs	r3, r4
9000d1ec:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d1ee:	6881      	ldr	r1, [r0, #8]
9000d1f0:	400a      	ands	r2, r1
9000d1f2:	ea4e 0202 	orr.w	r2, lr, r2
9000d1f6:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d1f8:	68c2      	ldr	r2, [r0, #12]
9000d1fa:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d1fe:	4313      	orrs	r3, r2
9000d200:	60c3      	str	r3, [r0, #12]
}
9000d202:	2000      	movs	r0, #0
9000d204:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000d206:	bf00      	nop
9000d208:	ff0f0fff 	.word	0xff0f0fff

9000d20c <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000d20c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000d20e:	2200      	movs	r2, #0
{
9000d210:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000d212:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d216:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000d21a:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000d21e:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000d222:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d224:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000d228:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000d22a:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000d22c:	619a      	str	r2, [r3, #24]
}
9000d22e:	bc30      	pop	{r4, r5}
9000d230:	4770      	bx	lr
9000d232:	bf00      	nop

9000d234 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000d234:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d236:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000d23a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d23c:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000d264 <FMC_SDRAM_SendCommand+0x30>
9000d240:	6900      	ldr	r0, [r0, #16]
9000d242:	4323      	orrs	r3, r4
9000d244:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000d248:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000d24c:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d24e:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000d252:	3901      	subs	r1, #1
}
9000d254:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d258:	ea43 030c 	orr.w	r3, r3, ip
9000d25c:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000d260:	6113      	str	r3, [r2, #16]
}
9000d262:	4770      	bx	lr
9000d264:	ffc00000 	.word	0xffc00000

9000d268 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000d268:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000d26a:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000d26c:	6953      	ldr	r3, [r2, #20]
9000d26e:	f36f 034d 	bfc	r3, #1, #13
9000d272:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000d276:	6153      	str	r3, [r2, #20]
}
9000d278:	4770      	bx	lr
9000d27a:	bf00      	nop

9000d27c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000d27c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000d27e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d282:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000d284:	f002 fb58 	bl	9000f938 <xTaskGetSchedulerState>
9000d288:	2801      	cmp	r0, #1
9000d28a:	d100      	bne.n	9000d28e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000d28c:	bd08      	pop	{r3, pc}
9000d28e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000d292:	f000 bc47 	b.w	9000db24 <xPortSysTickHandler>
9000d296:	bf00      	nop

9000d298 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000d298:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d29c:	b92b      	cbnz	r3, 9000d2aa <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000d29e:	4b06      	ldr	r3, [pc, #24]	@ (9000d2b8 <osKernelInitialize+0x20>)
9000d2a0:	6818      	ldr	r0, [r3, #0]
9000d2a2:	b928      	cbnz	r0, 9000d2b0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000d2a4:	2201      	movs	r2, #1
9000d2a6:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000d2a8:	4770      	bx	lr
    stat = osErrorISR;
9000d2aa:	f06f 0005 	mvn.w	r0, #5
9000d2ae:	4770      	bx	lr
    } else {
      stat = osError;
9000d2b0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000d2b4:	4770      	bx	lr
9000d2b6:	bf00      	nop
9000d2b8:	24008c4c 	.word	0x24008c4c

9000d2bc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000d2bc:	b510      	push	{r4, lr}
9000d2be:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000d2c2:	b974      	cbnz	r4, 9000d2e2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000d2c4:	4b08      	ldr	r3, [pc, #32]	@ (9000d2e8 <osKernelStart+0x2c>)
9000d2c6:	681a      	ldr	r2, [r3, #0]
9000d2c8:	2a01      	cmp	r2, #1
9000d2ca:	d107      	bne.n	9000d2dc <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000d2cc:	4907      	ldr	r1, [pc, #28]	@ (9000d2ec <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000d2ce:	2202      	movs	r2, #2
9000d2d0:	77cc      	strb	r4, [r1, #31]
9000d2d2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000d2d4:	f002 f8ce 	bl	9000f474 <vTaskStartScheduler>
      stat = osOK;
9000d2d8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000d2da:	bd10      	pop	{r4, pc}
      stat = osError;
9000d2dc:	f04f 30ff 	mov.w	r0, #4294967295
}
9000d2e0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000d2e2:	f06f 0005 	mvn.w	r0, #5
}
9000d2e6:	bd10      	pop	{r4, pc}
9000d2e8:	24008c4c 	.word	0x24008c4c
9000d2ec:	e000ed00 	.word	0xe000ed00

9000d2f0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d2f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000d2f2:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d2f4:	b087      	sub	sp, #28
  hTask = NULL;
9000d2f6:	9505      	str	r5, [sp, #20]
9000d2f8:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000d2fc:	b340      	cbz	r0, 9000d350 <osThreadNew+0x60>
9000d2fe:	bb3b      	cbnz	r3, 9000d350 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000d300:	4614      	mov	r4, r2
9000d302:	b1d2      	cbz	r2, 9000d33a <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000d304:	6996      	ldr	r6, [r2, #24]
9000d306:	bb36      	cbnz	r6, 9000d356 <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000d308:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d30a:	6863      	ldr	r3, [r4, #4]
9000d30c:	07db      	lsls	r3, r3, #31
9000d30e:	d41f      	bmi.n	9000d350 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000d310:	6963      	ldr	r3, [r4, #20]
9000d312:	b323      	cbz	r3, 9000d35e <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000d314:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d316:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000d318:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d31c:	68e7      	ldr	r7, [r4, #12]
9000d31e:	b305      	cbz	r5, 9000d362 <osThreadNew+0x72>
9000d320:	2f5f      	cmp	r7, #95	@ 0x5f
9000d322:	d915      	bls.n	9000d350 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000d324:	6924      	ldr	r4, [r4, #16]
9000d326:	b19c      	cbz	r4, 9000d350 <osThreadNew+0x60>
9000d328:	b193      	cbz	r3, 9000d350 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000d32a:	460b      	mov	r3, r1
9000d32c:	9600      	str	r6, [sp, #0]
9000d32e:	4661      	mov	r1, ip
9000d330:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000d334:	f001 ff0c 	bl	9000f150 <xTaskCreateStatic>
9000d338:	e00b      	b.n	9000d352 <osThreadNew+0x62>
9000d33a:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000d33c:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d33e:	460b      	mov	r3, r1
9000d340:	4621      	mov	r1, r4
9000d342:	ac05      	add	r4, sp, #20
9000d344:	9600      	str	r6, [sp, #0]
9000d346:	9401      	str	r4, [sp, #4]
9000d348:	f001 ffac 	bl	9000f2a4 <xTaskCreate>
9000d34c:	2801      	cmp	r0, #1
9000d34e:	d010      	beq.n	9000d372 <osThreadNew+0x82>
        return (NULL);
9000d350:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000d352:	b007      	add	sp, #28
9000d354:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d356:	1e72      	subs	r2, r6, #1
9000d358:	2a37      	cmp	r2, #55	@ 0x37
9000d35a:	d9d6      	bls.n	9000d30a <osThreadNew+0x1a>
9000d35c:	e7f8      	b.n	9000d350 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000d35e:	2280      	movs	r2, #128	@ 0x80
9000d360:	e7d9      	b.n	9000d316 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000d362:	2f00      	cmp	r7, #0
9000d364:	d1f4      	bne.n	9000d350 <osThreadNew+0x60>
9000d366:	6923      	ldr	r3, [r4, #16]
9000d368:	2b00      	cmp	r3, #0
9000d36a:	d1f1      	bne.n	9000d350 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d36c:	b292      	uxth	r2, r2
9000d36e:	4664      	mov	r4, ip
9000d370:	e7e5      	b.n	9000d33e <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000d372:	9805      	ldr	r0, [sp, #20]
9000d374:	e7ed      	b.n	9000d352 <osThreadNew+0x62>
9000d376:	bf00      	nop

9000d378 <osDelay>:
9000d378:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d37c:	b93a      	cbnz	r2, 9000d38e <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000d37e:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000d380:	b908      	cbnz	r0, 9000d386 <osDelay+0xe>
    stat = osOK;
9000d382:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000d384:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000d386:	f002 f81f 	bl	9000f3c8 <vTaskDelay>
    stat = osOK;
9000d38a:	2000      	movs	r0, #0
}
9000d38c:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000d38e:	f06f 0005 	mvn.w	r0, #5
}
9000d392:	4770      	bx	lr

9000d394 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000d394:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d396:	b083      	sub	sp, #12
9000d398:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000d39c:	b98e      	cbnz	r6, 9000d3c2 <osSemaphoreNew+0x2e>
9000d39e:	4605      	mov	r5, r0
9000d3a0:	b178      	cbz	r0, 9000d3c2 <osSemaphoreNew+0x2e>
9000d3a2:	4288      	cmp	r0, r1
9000d3a4:	460f      	mov	r7, r1
9000d3a6:	d30c      	bcc.n	9000d3c2 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000d3a8:	4614      	mov	r4, r2
9000d3aa:	b172      	cbz	r2, 9000d3ca <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d3ac:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d3b0:	b14a      	cbz	r2, 9000d3c6 <osSemaphoreNew+0x32>
9000d3b2:	2b4f      	cmp	r3, #79	@ 0x4f
9000d3b4:	d905      	bls.n	9000d3c2 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d3b6:	2801      	cmp	r0, #1
9000d3b8:	d02e      	beq.n	9000d418 <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d3ba:	f000 fd93 	bl	9000dee4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d3be:	4605      	mov	r5, r0
9000d3c0:	b96d      	cbnz	r5, 9000d3de <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000d3c2:	2500      	movs	r5, #0
9000d3c4:	e010      	b.n	9000d3e8 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d3c6:	2b00      	cmp	r3, #0
9000d3c8:	d1fb      	bne.n	9000d3c2 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d3ca:	2d01      	cmp	r5, #1
9000d3cc:	d00f      	beq.n	9000d3ee <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d3ce:	4628      	mov	r0, r5
9000d3d0:	4639      	mov	r1, r7
9000d3d2:	f000 fde7 	bl	9000dfa4 <xQueueCreateCountingSemaphore>
9000d3d6:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d3d8:	2d00      	cmp	r5, #0
9000d3da:	d0f2      	beq.n	9000d3c2 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d3dc:	b104      	cbz	r4, 9000d3e0 <osSemaphoreNew+0x4c>
          name = attr->name;
9000d3de:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000d3e0:	4621      	mov	r1, r4
9000d3e2:	4628      	mov	r0, r5
9000d3e4:	f001 fc12 	bl	9000ec0c <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d3e8:	4628      	mov	r0, r5
9000d3ea:	b003      	add	sp, #12
9000d3ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d3ee:	4628      	mov	r0, r5
9000d3f0:	2203      	movs	r2, #3
9000d3f2:	2100      	movs	r1, #0
9000d3f4:	f000 fd34 	bl	9000de60 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d3f8:	4605      	mov	r5, r0
9000d3fa:	2800      	cmp	r0, #0
9000d3fc:	d0ec      	beq.n	9000d3d8 <osSemaphoreNew+0x44>
9000d3fe:	2f00      	cmp	r7, #0
9000d400:	d0ea      	beq.n	9000d3d8 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d402:	2300      	movs	r3, #0
9000d404:	461a      	mov	r2, r3
9000d406:	4619      	mov	r1, r3
9000d408:	f000 fe12 	bl	9000e030 <xQueueGenericSend>
9000d40c:	2801      	cmp	r0, #1
9000d40e:	d0e5      	beq.n	9000d3dc <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000d410:	4628      	mov	r0, r5
9000d412:	f001 fbb5 	bl	9000eb80 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d416:	e7d4      	b.n	9000d3c2 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d418:	4613      	mov	r3, r2
9000d41a:	2203      	movs	r2, #3
9000d41c:	4631      	mov	r1, r6
9000d41e:	9200      	str	r2, [sp, #0]
9000d420:	4632      	mov	r2, r6
9000d422:	f000 fcb1 	bl	9000dd88 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d426:	4605      	mov	r5, r0
9000d428:	2800      	cmp	r0, #0
9000d42a:	d0c9      	beq.n	9000d3c0 <osSemaphoreNew+0x2c>
9000d42c:	2f00      	cmp	r7, #0
9000d42e:	d0c7      	beq.n	9000d3c0 <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d430:	4633      	mov	r3, r6
9000d432:	4632      	mov	r2, r6
9000d434:	4631      	mov	r1, r6
9000d436:	f000 fdfb 	bl	9000e030 <xQueueGenericSend>
9000d43a:	2801      	cmp	r0, #1
9000d43c:	d0cf      	beq.n	9000d3de <osSemaphoreNew+0x4a>
9000d43e:	e7e7      	b.n	9000d410 <osSemaphoreNew+0x7c>

9000d440 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d440:	b360      	cbz	r0, 9000d49c <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d442:	b510      	push	{r4, lr}
9000d444:	460c      	mov	r4, r1
9000d446:	b082      	sub	sp, #8
9000d448:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d44c:	b1b3      	cbz	r3, 9000d47c <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000d44e:	bb11      	cbnz	r1, 9000d496 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d450:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d452:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d454:	f001 fb38 	bl	9000eac8 <xQueueReceiveFromISR>
9000d458:	2801      	cmp	r0, #1
9000d45a:	d118      	bne.n	9000d48e <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d45c:	9b01      	ldr	r3, [sp, #4]
9000d45e:	b913      	cbnz	r3, 9000d466 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d460:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d462:	b002      	add	sp, #8
9000d464:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d466:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d46a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d46e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d472:	f3bf 8f4f 	dsb	sy
9000d476:	f3bf 8f6f 	isb	sy
9000d47a:	e7f1      	b.n	9000d460 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d47c:	f001 f994 	bl	9000e7a8 <xQueueSemaphoreTake>
9000d480:	2801      	cmp	r0, #1
9000d482:	d0ed      	beq.n	9000d460 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d484:	b11c      	cbz	r4, 9000d48e <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000d486:	f06f 0001 	mvn.w	r0, #1
}
9000d48a:	b002      	add	sp, #8
9000d48c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d48e:	f06f 0002 	mvn.w	r0, #2
}
9000d492:	b002      	add	sp, #8
9000d494:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d496:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d49a:	e7e2      	b.n	9000d462 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000d49c:	f06f 0003 	mvn.w	r0, #3
}
9000d4a0:	4770      	bx	lr
9000d4a2:	bf00      	nop

9000d4a4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d4a4:	b328      	cbz	r0, 9000d4f2 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d4a6:	b500      	push	{lr}
9000d4a8:	b083      	sub	sp, #12
9000d4aa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d4ae:	b19b      	cbz	r3, 9000d4d8 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000d4b0:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d4b2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d4b4:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d4b6:	f000 ffa3 	bl	9000e400 <xQueueGiveFromISR>
9000d4ba:	2801      	cmp	r0, #1
9000d4bc:	d116      	bne.n	9000d4ec <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d4be:	9b01      	ldr	r3, [sp, #4]
9000d4c0:	b183      	cbz	r3, 9000d4e4 <osSemaphoreRelease+0x40>
9000d4c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d4c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d4ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d4ce:	f3bf 8f4f 	dsb	sy
9000d4d2:	f3bf 8f6f 	isb	sy
9000d4d6:	e005      	b.n	9000d4e4 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d4d8:	461a      	mov	r2, r3
9000d4da:	4619      	mov	r1, r3
9000d4dc:	f000 fda8 	bl	9000e030 <xQueueGenericSend>
9000d4e0:	2801      	cmp	r0, #1
9000d4e2:	d103      	bne.n	9000d4ec <osSemaphoreRelease+0x48>
  stat = osOK;
9000d4e4:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d4e6:	b003      	add	sp, #12
9000d4e8:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000d4ec:	f06f 0002 	mvn.w	r0, #2
9000d4f0:	e7f9      	b.n	9000d4e6 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000d4f2:	f06f 0003 	mvn.w	r0, #3
}
9000d4f6:	4770      	bx	lr

9000d4f8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d4f8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d4fa:	b083      	sub	sp, #12
9000d4fc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d500:	b987      	cbnz	r7, 9000d524 <osMessageQueueNew+0x2c>
9000d502:	4605      	mov	r5, r0
9000d504:	b170      	cbz	r0, 9000d524 <osMessageQueueNew+0x2c>
9000d506:	b169      	cbz	r1, 9000d524 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d508:	4614      	mov	r4, r2
9000d50a:	b17a      	cbz	r2, 9000d52c <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d50c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000d510:	b1c3      	cbz	r3, 9000d544 <osMessageQueueNew+0x4c>
9000d512:	2a4f      	cmp	r2, #79	@ 0x4f
9000d514:	d906      	bls.n	9000d524 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d516:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d518:	b122      	cbz	r2, 9000d524 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d51a:	fb01 f505 	mul.w	r5, r1, r5
9000d51e:	6966      	ldr	r6, [r4, #20]
9000d520:	42ae      	cmp	r6, r5
9000d522:	d21e      	bcs.n	9000d562 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000d524:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d526:	4628      	mov	r0, r5
9000d528:	b003      	add	sp, #12
9000d52a:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d52c:	f000 fc98 	bl	9000de60 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d530:	4605      	mov	r5, r0
9000d532:	2800      	cmp	r0, #0
9000d534:	d0f6      	beq.n	9000d524 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d536:	4628      	mov	r0, r5
9000d538:	4621      	mov	r1, r4
9000d53a:	f001 fb67 	bl	9000ec0c <vQueueAddToRegistry>
}
9000d53e:	4628      	mov	r0, r5
9000d540:	b003      	add	sp, #12
9000d542:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d544:	2a00      	cmp	r2, #0
9000d546:	d1ed      	bne.n	9000d524 <osMessageQueueNew+0x2c>
9000d548:	6923      	ldr	r3, [r4, #16]
9000d54a:	2b00      	cmp	r3, #0
9000d54c:	d1ea      	bne.n	9000d524 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d54e:	6962      	ldr	r2, [r4, #20]
9000d550:	2a00      	cmp	r2, #0
9000d552:	d1e7      	bne.n	9000d524 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d554:	f000 fc84 	bl	9000de60 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d558:	4605      	mov	r5, r0
9000d55a:	2800      	cmp	r0, #0
9000d55c:	d0e2      	beq.n	9000d524 <osMessageQueueNew+0x2c>
        name = attr->name;
9000d55e:	6824      	ldr	r4, [r4, #0]
9000d560:	e7e9      	b.n	9000d536 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d562:	9700      	str	r7, [sp, #0]
9000d564:	f000 fc10 	bl	9000dd88 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d568:	4605      	mov	r5, r0
9000d56a:	2800      	cmp	r0, #0
9000d56c:	d1f7      	bne.n	9000d55e <osMessageQueueNew+0x66>
9000d56e:	e7d9      	b.n	9000d524 <osMessageQueueNew+0x2c>

9000d570 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d570:	b560      	push	{r5, r6, lr}
9000d572:	461e      	mov	r6, r3
9000d574:	b083      	sub	sp, #12
9000d576:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d57a:	fab0 f580 	clz	r5, r0
9000d57e:	fab1 f381 	clz	r3, r1
9000d582:	096d      	lsrs	r5, r5, #5
9000d584:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000d586:	b1da      	cbz	r2, 9000d5c0 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d588:	2e00      	cmp	r6, #0
9000d58a:	bf18      	it	ne
9000d58c:	f043 0301 	orrne.w	r3, r3, #1
9000d590:	bb33      	cbnz	r3, 9000d5e0 <osMessageQueuePut+0x70>
9000d592:	bb2d      	cbnz	r5, 9000d5e0 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d594:	462b      	mov	r3, r5
9000d596:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d598:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d59a:	f000 fecb 	bl	9000e334 <xQueueGenericSendFromISR>
9000d59e:	2801      	cmp	r0, #1
9000d5a0:	d11a      	bne.n	9000d5d8 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d5a2:	9b01      	ldr	r3, [sp, #4]
9000d5a4:	b14b      	cbz	r3, 9000d5ba <osMessageQueuePut+0x4a>
9000d5a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d5aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d5ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d5b2:	f3bf 8f4f 	dsb	sy
9000d5b6:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d5ba:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d5bc:	b003      	add	sp, #12
9000d5be:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d5c0:	b975      	cbnz	r5, 9000d5e0 <osMessageQueuePut+0x70>
9000d5c2:	b96b      	cbnz	r3, 9000d5e0 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d5c4:	4632      	mov	r2, r6
9000d5c6:	f000 fd33 	bl	9000e030 <xQueueGenericSend>
9000d5ca:	2801      	cmp	r0, #1
9000d5cc:	d0f5      	beq.n	9000d5ba <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000d5ce:	b11e      	cbz	r6, 9000d5d8 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000d5d0:	f06f 0001 	mvn.w	r0, #1
}
9000d5d4:	b003      	add	sp, #12
9000d5d6:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000d5d8:	f06f 0002 	mvn.w	r0, #2
}
9000d5dc:	b003      	add	sp, #12
9000d5de:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000d5e0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d5e4:	e7ea      	b.n	9000d5bc <osMessageQueuePut+0x4c>
9000d5e6:	bf00      	nop

9000d5e8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d5e8:	b570      	push	{r4, r5, r6, lr}
9000d5ea:	461e      	mov	r6, r3
9000d5ec:	b082      	sub	sp, #8
9000d5ee:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d5f2:	fab0 f580 	clz	r5, r0
9000d5f6:	fab1 f481 	clz	r4, r1
9000d5fa:	096d      	lsrs	r5, r5, #5
9000d5fc:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000d5fe:	b1d3      	cbz	r3, 9000d636 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d600:	2e00      	cmp	r6, #0
9000d602:	bf18      	it	ne
9000d604:	f044 0401 	orrne.w	r4, r4, #1
9000d608:	bb2c      	cbnz	r4, 9000d656 <osMessageQueueGet+0x6e>
9000d60a:	bb25      	cbnz	r5, 9000d656 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d60c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d60e:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d610:	f001 fa5a 	bl	9000eac8 <xQueueReceiveFromISR>
9000d614:	2801      	cmp	r0, #1
9000d616:	d11a      	bne.n	9000d64e <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d618:	9b01      	ldr	r3, [sp, #4]
9000d61a:	b14b      	cbz	r3, 9000d630 <osMessageQueueGet+0x48>
9000d61c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d620:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d624:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d628:	f3bf 8f4f 	dsb	sy
9000d62c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d630:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d632:	b002      	add	sp, #8
9000d634:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d636:	b975      	cbnz	r5, 9000d656 <osMessageQueueGet+0x6e>
9000d638:	b96c      	cbnz	r4, 9000d656 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d63a:	4632      	mov	r2, r6
9000d63c:	f000 ff36 	bl	9000e4ac <xQueueReceive>
9000d640:	2801      	cmp	r0, #1
9000d642:	d0f5      	beq.n	9000d630 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000d644:	b11e      	cbz	r6, 9000d64e <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000d646:	f06f 0001 	mvn.w	r0, #1
}
9000d64a:	b002      	add	sp, #8
9000d64c:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000d64e:	f06f 0002 	mvn.w	r0, #2
}
9000d652:	b002      	add	sp, #8
9000d654:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000d656:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d65a:	e7ea      	b.n	9000d632 <osMessageQueueGet+0x4a>

9000d65c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d65c:	4b04      	ldr	r3, [pc, #16]	@ (9000d670 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d65e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d660:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d662:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d664:	4c03      	ldr	r4, [pc, #12]	@ (9000d674 <vApplicationGetIdleTaskMemory+0x18>)
9000d666:	600c      	str	r4, [r1, #0]
}
9000d668:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d66c:	6013      	str	r3, [r2, #0]
}
9000d66e:	4770      	bx	lr
9000d670:	24008bec 	.word	0x24008bec
9000d674:	240089ec 	.word	0x240089ec

9000d678 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d678:	4b05      	ldr	r3, [pc, #20]	@ (9000d690 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d67a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d67c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d67e:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d682:	4c04      	ldr	r4, [pc, #16]	@ (9000d694 <vApplicationGetTimerTaskMemory+0x1c>)
9000d684:	600c      	str	r4, [r1, #0]
}
9000d686:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d68a:	6013      	str	r3, [r2, #0]
}
9000d68c:	4770      	bx	lr
9000d68e:	bf00      	nop
9000d690:	2400898c 	.word	0x2400898c
9000d694:	2400858c 	.word	0x2400858c

9000d698 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d698:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000d69c:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d69e:	f001 ff85 	bl	9000f5ac <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d6a2:	4a54      	ldr	r2, [pc, #336]	@ (9000d7f4 <pvPortMalloc+0x15c>)
9000d6a4:	6815      	ldr	r5, [r2, #0]
9000d6a6:	2d00      	cmp	r5, #0
9000d6a8:	d035      	beq.n	9000d716 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d6aa:	4b53      	ldr	r3, [pc, #332]	@ (9000d7f8 <pvPortMalloc+0x160>)
9000d6ac:	681e      	ldr	r6, [r3, #0]
9000d6ae:	4234      	tst	r4, r6
9000d6b0:	d12b      	bne.n	9000d70a <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d6b2:	b354      	cbz	r4, 9000d70a <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000d6b4:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d6b8:	0764      	lsls	r4, r4, #29
9000d6ba:	d002      	beq.n	9000d6c2 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d6bc:	f020 0007 	bic.w	r0, r0, #7
9000d6c0:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d6c2:	b310      	cbz	r0, 9000d70a <pvPortMalloc+0x72>
9000d6c4:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000d80c <pvPortMalloc+0x174>
9000d6c8:	f8de c000 	ldr.w	ip, [lr]
9000d6cc:	4584      	cmp	ip, r0
9000d6ce:	d31c      	bcc.n	9000d70a <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d6d0:	4c4a      	ldr	r4, [pc, #296]	@ (9000d7fc <pvPortMalloc+0x164>)
9000d6d2:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d6d4:	e003      	b.n	9000d6de <pvPortMalloc+0x46>
9000d6d6:	681a      	ldr	r2, [r3, #0]
9000d6d8:	b122      	cbz	r2, 9000d6e4 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000d6da:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000d6dc:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d6de:	6859      	ldr	r1, [r3, #4]
9000d6e0:	4281      	cmp	r1, r0
9000d6e2:	d3f8      	bcc.n	9000d6d6 <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d6e4:	42ab      	cmp	r3, r5
9000d6e6:	d010      	beq.n	9000d70a <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d6e8:	681a      	ldr	r2, [r3, #0]
9000d6ea:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d6ec:	1a0c      	subs	r4, r1, r0
9000d6ee:	2c10      	cmp	r4, #16
9000d6f0:	d947      	bls.n	9000d782 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d6f2:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d6f4:	0751      	lsls	r1, r2, #29
9000d6f6:	d02d      	beq.n	9000d754 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d6f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6fc:	f383 8811 	msr	BASEPRI, r3
9000d700:	f3bf 8f6f 	isb	sy
9000d704:	f3bf 8f4f 	dsb	sy
9000d708:	e7fe      	b.n	9000d708 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000d70a:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d70c:	f001 ff56 	bl	9000f5bc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d710:	4620      	mov	r0, r4
9000d712:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000d716:	4b3a      	ldr	r3, [pc, #232]	@ (9000d800 <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d718:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d71c:	4e37      	ldr	r6, [pc, #220]	@ (9000d7fc <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d71e:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000d720:	4d38      	ldr	r5, [pc, #224]	@ (9000d804 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d722:	bf18      	it	ne
9000d724:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d726:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d72a:	bf18      	it	ne
9000d72c:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000d730:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d732:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d734:	6033      	str	r3, [r6, #0]
9000d736:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000d738:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d73a:	1aeb      	subs	r3, r5, r3
}
9000d73c:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000d73e:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d742:	4a31      	ldr	r2, [pc, #196]	@ (9000d808 <pvPortMalloc+0x170>)
9000d744:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d746:	4a31      	ldr	r2, [pc, #196]	@ (9000d80c <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d748:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d74c:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d74e:	4b2a      	ldr	r3, [pc, #168]	@ (9000d7f8 <pvPortMalloc+0x160>)
9000d750:	6018      	str	r0, [r3, #0]
}
9000d752:	e7ac      	b.n	9000d6ae <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d754:	4929      	ldr	r1, [pc, #164]	@ (9000d7fc <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d756:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000d758:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d75a:	460c      	mov	r4, r1
9000d75c:	6809      	ldr	r1, [r1, #0]
9000d75e:	428a      	cmp	r2, r1
9000d760:	d8fb      	bhi.n	9000d75a <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d762:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d764:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d768:	eb04 0907 	add.w	r9, r4, r7
9000d76c:	454a      	cmp	r2, r9
9000d76e:	d028      	beq.n	9000d7c2 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d770:	eb02 0708 	add.w	r7, r2, r8
9000d774:	42b9      	cmp	r1, r7
9000d776:	d02b      	beq.n	9000d7d0 <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000d778:	6011      	str	r1, [r2, #0]
9000d77a:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d77c:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d77e:	bf18      	it	ne
9000d780:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d782:	4821      	ldr	r0, [pc, #132]	@ (9000d808 <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d784:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d788:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000d78a:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d78c:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d78e:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d792:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d794:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d798:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d79a:	bf38      	it	cc
9000d79c:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000d79e:	481c      	ldr	r0, [pc, #112]	@ (9000d810 <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000d7a0:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000d7a2:	6802      	ldr	r2, [r0, #0]
9000d7a4:	3201      	adds	r2, #1
9000d7a6:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000d7a8:	f001 ff08 	bl	9000f5bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d7ac:	0763      	lsls	r3, r4, #29
9000d7ae:	d0af      	beq.n	9000d710 <pvPortMalloc+0x78>
9000d7b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d7b4:	f383 8811 	msr	BASEPRI, r3
9000d7b8:	f3bf 8f6f 	isb	sy
9000d7bc:	f3bf 8f4f 	dsb	sy
9000d7c0:	e7fe      	b.n	9000d7c0 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d7c2:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d7c4:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d7c6:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d7c8:	4281      	cmp	r1, r0
9000d7ca:	d00a      	beq.n	9000d7e2 <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d7cc:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000d7ce:	e7d8      	b.n	9000d782 <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d7d0:	42a9      	cmp	r1, r5
9000d7d2:	d0d1      	beq.n	9000d778 <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7d4:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7d6:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7d8:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7da:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7dc:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d7de:	6859      	ldr	r1, [r3, #4]
9000d7e0:	e7cc      	b.n	9000d77c <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d7e2:	42a9      	cmp	r1, r5
9000d7e4:	d0f2      	beq.n	9000d7cc <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7e6:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7e8:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7ea:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7ec:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7ee:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7f0:	e7ec      	b.n	9000d7cc <pvPortMalloc+0x134>
9000d7f2:	bf00      	nop
9000d7f4:	24008c64 	.word	0x24008c64
9000d7f8:	24008c50 	.word	0x24008c50
9000d7fc:	24008c68 	.word	0x24008c68
9000d800:	24008c70 	.word	0x24008c70
9000d804:	24021308 	.word	0x24021308
9000d808:	24008c5c 	.word	0x24008c5c
9000d80c:	24008c60 	.word	0x24008c60
9000d810:	24008c58 	.word	0x24008c58

9000d814 <vPortFree>:
	if( pv != NULL )
9000d814:	b1d0      	cbz	r0, 9000d84c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d816:	4a2f      	ldr	r2, [pc, #188]	@ (9000d8d4 <vPortFree+0xc0>)
9000d818:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d81c:	6812      	ldr	r2, [r2, #0]
9000d81e:	4213      	tst	r3, r2
9000d820:	d00b      	beq.n	9000d83a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d822:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d826:	b191      	cbz	r1, 9000d84e <vPortFree+0x3a>
9000d828:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d82c:	f383 8811 	msr	BASEPRI, r3
9000d830:	f3bf 8f6f 	isb	sy
9000d834:	f3bf 8f4f 	dsb	sy
9000d838:	e7fe      	b.n	9000d838 <vPortFree+0x24>
9000d83a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d83e:	f383 8811 	msr	BASEPRI, r3
9000d842:	f3bf 8f6f 	isb	sy
9000d846:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d84a:	e7fe      	b.n	9000d84a <vPortFree+0x36>
9000d84c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d84e:	ea23 0302 	bic.w	r3, r3, r2
{
9000d852:	b530      	push	{r4, r5, lr}
9000d854:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d856:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d85a:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d85e:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d860:	f001 fea4 	bl	9000f5ac <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d864:	4a1c      	ldr	r2, [pc, #112]	@ (9000d8d8 <vPortFree+0xc4>)
9000d866:	9801      	ldr	r0, [sp, #4]
9000d868:	6813      	ldr	r3, [r2, #0]
9000d86a:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000d86e:	440b      	add	r3, r1
9000d870:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d872:	4b1a      	ldr	r3, [pc, #104]	@ (9000d8dc <vPortFree+0xc8>)
9000d874:	461a      	mov	r2, r3
9000d876:	681b      	ldr	r3, [r3, #0]
9000d878:	429c      	cmp	r4, r3
9000d87a:	d8fb      	bhi.n	9000d874 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d87c:	6855      	ldr	r5, [r2, #4]
9000d87e:	eb02 0e05 	add.w	lr, r2, r5
9000d882:	4574      	cmp	r4, lr
9000d884:	d011      	beq.n	9000d8aa <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d886:	eb04 0c01 	add.w	ip, r4, r1
9000d88a:	4563      	cmp	r3, ip
9000d88c:	d01d      	beq.n	9000d8ca <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d88e:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000d892:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d894:	bf18      	it	ne
9000d896:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d898:	4a11      	ldr	r2, [pc, #68]	@ (9000d8e0 <vPortFree+0xcc>)
9000d89a:	6813      	ldr	r3, [r2, #0]
9000d89c:	3301      	adds	r3, #1
9000d89e:	6013      	str	r3, [r2, #0]
}
9000d8a0:	b003      	add	sp, #12
9000d8a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d8a6:	f001 be89 	b.w	9000f5bc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d8aa:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d8ac:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d8ae:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d8b0:	4283      	cmp	r3, r0
9000d8b2:	d1f1      	bne.n	9000d898 <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d8b4:	480b      	ldr	r0, [pc, #44]	@ (9000d8e4 <vPortFree+0xd0>)
9000d8b6:	6800      	ldr	r0, [r0, #0]
9000d8b8:	4283      	cmp	r3, r0
9000d8ba:	d0ed      	beq.n	9000d898 <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000d8bc:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d8be:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d8c2:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d8c4:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d8c6:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d8c8:	e7e3      	b.n	9000d892 <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d8ca:	4d06      	ldr	r5, [pc, #24]	@ (9000d8e4 <vPortFree+0xd0>)
9000d8cc:	682d      	ldr	r5, [r5, #0]
9000d8ce:	42ab      	cmp	r3, r5
9000d8d0:	d1f5      	bne.n	9000d8be <vPortFree+0xaa>
9000d8d2:	e7dc      	b.n	9000d88e <vPortFree+0x7a>
9000d8d4:	24008c50 	.word	0x24008c50
9000d8d8:	24008c60 	.word	0x24008c60
9000d8dc:	24008c68 	.word	0x24008c68
9000d8e0:	24008c54 	.word	0x24008c54
9000d8e4:	24008c64 	.word	0x24008c64

9000d8e8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d8e8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d8ec:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d8f0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d8f2:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d8f4:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d8f6:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d8f8:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d8fc:	4770      	bx	lr
9000d8fe:	bf00      	nop

9000d900 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d900:	2300      	movs	r3, #0
9000d902:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d904:	4770      	bx	lr
9000d906:	bf00      	nop

9000d908 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d908:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000d90a:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000d90c:	3301      	adds	r3, #1
{
9000d90e:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d910:	6894      	ldr	r4, [r2, #8]
9000d912:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d916:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d918:	6091      	str	r1, [r2, #8]
}
9000d91a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d91e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d920:	6003      	str	r3, [r0, #0]
}
9000d922:	4770      	bx	lr

9000d924 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d924:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d926:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d928:	1c6b      	adds	r3, r5, #1
9000d92a:	d010      	beq.n	9000d94e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d92c:	f100 0308 	add.w	r3, r0, #8
9000d930:	461c      	mov	r4, r3
9000d932:	685b      	ldr	r3, [r3, #4]
9000d934:	681a      	ldr	r2, [r3, #0]
9000d936:	42aa      	cmp	r2, r5
9000d938:	d9fa      	bls.n	9000d930 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d93a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d93c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d93e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d940:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d942:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d944:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d946:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d948:	6002      	str	r2, [r0, #0]
}
9000d94a:	bc30      	pop	{r4, r5}
9000d94c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d94e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d950:	6863      	ldr	r3, [r4, #4]
9000d952:	e7f2      	b.n	9000d93a <vListInsert+0x16>

9000d954 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d954:	6903      	ldr	r3, [r0, #16]
{
9000d956:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d958:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d95a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d95e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d960:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d964:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d966:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d968:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d96c:	bf08      	it	eq
9000d96e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d970:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d972:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d974:	3a01      	subs	r2, #1
9000d976:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d978:	6818      	ldr	r0, [r3, #0]
}
9000d97a:	4770      	bx	lr

9000d97c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d97c:	4808      	ldr	r0, [pc, #32]	@ (9000d9a0 <prvPortStartFirstTask+0x24>)
9000d97e:	6800      	ldr	r0, [r0, #0]
9000d980:	6800      	ldr	r0, [r0, #0]
9000d982:	f380 8808 	msr	MSP, r0
9000d986:	f04f 0000 	mov.w	r0, #0
9000d98a:	f380 8814 	msr	CONTROL, r0
9000d98e:	b662      	cpsie	i
9000d990:	b661      	cpsie	f
9000d992:	f3bf 8f4f 	dsb	sy
9000d996:	f3bf 8f6f 	isb	sy
9000d99a:	df00      	svc	0
9000d99c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d99e:	0000      	.short	0x0000
9000d9a0:	e000ed08 	.word	0xe000ed08

9000d9a4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d9a4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000d9b4 <vPortEnableVFP+0x10>
9000d9a8:	6801      	ldr	r1, [r0, #0]
9000d9aa:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000d9ae:	6001      	str	r1, [r0, #0]
9000d9b0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d9b2:	0000      	.short	0x0000
9000d9b4:	e000ed88 	.word	0xe000ed88

9000d9b8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d9b8:	4b0e      	ldr	r3, [pc, #56]	@ (9000d9f4 <prvTaskExitError+0x3c>)
{
9000d9ba:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d9bc:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d9be:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d9c0:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d9c2:	3301      	adds	r3, #1
9000d9c4:	d008      	beq.n	9000d9d8 <prvTaskExitError+0x20>
9000d9c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9ca:	f383 8811 	msr	BASEPRI, r3
9000d9ce:	f3bf 8f6f 	isb	sy
9000d9d2:	f3bf 8f4f 	dsb	sy
9000d9d6:	e7fe      	b.n	9000d9d6 <prvTaskExitError+0x1e>
9000d9d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9dc:	f383 8811 	msr	BASEPRI, r3
9000d9e0:	f3bf 8f6f 	isb	sy
9000d9e4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d9e8:	9b01      	ldr	r3, [sp, #4]
9000d9ea:	2b00      	cmp	r3, #0
9000d9ec:	d0fc      	beq.n	9000d9e8 <prvTaskExitError+0x30>
}
9000d9ee:	b002      	add	sp, #8
9000d9f0:	4770      	bx	lr
9000d9f2:	bf00      	nop
9000d9f4:	24000084 	.word	0x24000084

9000d9f8 <pxPortInitialiseStack>:
{
9000d9f8:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d9fa:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d9fe:	4809      	ldr	r0, [pc, #36]	@ (9000da24 <pxPortInitialiseStack+0x2c>)
{
9000da00:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000da02:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000da06:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000da0a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000da0e:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000da12:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000da16:	f06f 0102 	mvn.w	r1, #2
}
9000da1a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000da1e:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000da22:	4770      	bx	lr
9000da24:	9000d9b9 	.word	0x9000d9b9
	...

9000da30 <SVC_Handler>:
	__asm volatile (
9000da30:	4b07      	ldr	r3, [pc, #28]	@ (9000da50 <pxCurrentTCBConst2>)
9000da32:	6819      	ldr	r1, [r3, #0]
9000da34:	6808      	ldr	r0, [r1, #0]
9000da36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000da3a:	f380 8809 	msr	PSP, r0
9000da3e:	f3bf 8f6f 	isb	sy
9000da42:	f04f 0000 	mov.w	r0, #0
9000da46:	f380 8811 	msr	BASEPRI, r0
9000da4a:	4770      	bx	lr
9000da4c:	f3af 8000 	nop.w

9000da50 <pxCurrentTCBConst2>:
9000da50:	24021850 	.word	0x24021850

9000da54 <vPortEnterCritical>:
9000da54:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da58:	f383 8811 	msr	BASEPRI, r3
9000da5c:	f3bf 8f6f 	isb	sy
9000da60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000da64:	4a0b      	ldr	r2, [pc, #44]	@ (9000da94 <vPortEnterCritical+0x40>)
9000da66:	6813      	ldr	r3, [r2, #0]
9000da68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000da6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000da6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000da6e:	d000      	beq.n	9000da72 <vPortEnterCritical+0x1e>
}
9000da70:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000da72:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000da76:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000da7a:	b2db      	uxtb	r3, r3
9000da7c:	2b00      	cmp	r3, #0
9000da7e:	d0f7      	beq.n	9000da70 <vPortEnterCritical+0x1c>
9000da80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da84:	f383 8811 	msr	BASEPRI, r3
9000da88:	f3bf 8f6f 	isb	sy
9000da8c:	f3bf 8f4f 	dsb	sy
9000da90:	e7fe      	b.n	9000da90 <vPortEnterCritical+0x3c>
9000da92:	bf00      	nop
9000da94:	24000084 	.word	0x24000084

9000da98 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000da98:	4a08      	ldr	r2, [pc, #32]	@ (9000dabc <vPortExitCritical+0x24>)
9000da9a:	6813      	ldr	r3, [r2, #0]
9000da9c:	b943      	cbnz	r3, 9000dab0 <vPortExitCritical+0x18>
9000da9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000daa2:	f383 8811 	msr	BASEPRI, r3
9000daa6:	f3bf 8f6f 	isb	sy
9000daaa:	f3bf 8f4f 	dsb	sy
9000daae:	e7fe      	b.n	9000daae <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000dab0:	3b01      	subs	r3, #1
9000dab2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000dab4:	b90b      	cbnz	r3, 9000daba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000dab6:	f383 8811 	msr	BASEPRI, r3
}
9000daba:	4770      	bx	lr
9000dabc:	24000084 	.word	0x24000084

9000dac0 <PendSV_Handler>:
	__asm volatile
9000dac0:	f3ef 8009 	mrs	r0, PSP
9000dac4:	f3bf 8f6f 	isb	sy
9000dac8:	4b15      	ldr	r3, [pc, #84]	@ (9000db20 <pxCurrentTCBConst>)
9000daca:	681a      	ldr	r2, [r3, #0]
9000dacc:	f01e 0f10 	tst.w	lr, #16
9000dad0:	bf08      	it	eq
9000dad2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000dad6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000dada:	6010      	str	r0, [r2, #0]
9000dadc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000dae0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000dae4:	f380 8811 	msr	BASEPRI, r0
9000dae8:	f3bf 8f4f 	dsb	sy
9000daec:	f3bf 8f6f 	isb	sy
9000daf0:	f001 fda0 	bl	9000f634 <vTaskSwitchContext>
9000daf4:	f04f 0000 	mov.w	r0, #0
9000daf8:	f380 8811 	msr	BASEPRI, r0
9000dafc:	bc09      	pop	{r0, r3}
9000dafe:	6819      	ldr	r1, [r3, #0]
9000db00:	6808      	ldr	r0, [r1, #0]
9000db02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000db06:	f01e 0f10 	tst.w	lr, #16
9000db0a:	bf08      	it	eq
9000db0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000db10:	f380 8809 	msr	PSP, r0
9000db14:	f3bf 8f6f 	isb	sy
9000db18:	4770      	bx	lr
9000db1a:	bf00      	nop
9000db1c:	f3af 8000 	nop.w

9000db20 <pxCurrentTCBConst>:
9000db20:	24021850 	.word	0x24021850

9000db24 <xPortSysTickHandler>:
{
9000db24:	b508      	push	{r3, lr}
	__asm volatile
9000db26:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db2a:	f383 8811 	msr	BASEPRI, r3
9000db2e:	f3bf 8f6f 	isb	sy
9000db32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000db36:	f001 fd57 	bl	9000f5e8 <xTaskIncrementTick>
9000db3a:	b128      	cbz	r0, 9000db48 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000db3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000db40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000db44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000db48:	2300      	movs	r3, #0
9000db4a:	f383 8811 	msr	BASEPRI, r3
}
9000db4e:	bd08      	pop	{r3, pc}

9000db50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000db50:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000db54:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000db56:	4806      	ldr	r0, [pc, #24]	@ (9000db70 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000db58:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000db5a:	4906      	ldr	r1, [pc, #24]	@ (9000db74 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000db5c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000db5e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000db60:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000db62:	fba1 1303 	umull	r1, r3, r1, r3
9000db66:	099b      	lsrs	r3, r3, #6
9000db68:	3b01      	subs	r3, #1
9000db6a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000db6c:	6110      	str	r0, [r2, #16]
}
9000db6e:	4770      	bx	lr
9000db70:	24000078 	.word	0x24000078
9000db74:	10624dd3 	.word	0x10624dd3

9000db78 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000db78:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000db7c:	4a48      	ldr	r2, [pc, #288]	@ (9000dca0 <xPortStartScheduler+0x128>)
9000db7e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000db82:	4291      	cmp	r1, r2
9000db84:	d041      	beq.n	9000dc0a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000db86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000db8a:	4b46      	ldr	r3, [pc, #280]	@ (9000dca4 <xPortStartScheduler+0x12c>)
9000db8c:	429a      	cmp	r2, r3
9000db8e:	d033      	beq.n	9000dbf8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000db90:	4b45      	ldr	r3, [pc, #276]	@ (9000dca8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000db92:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000db96:	4845      	ldr	r0, [pc, #276]	@ (9000dcac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000db98:	4945      	ldr	r1, [pc, #276]	@ (9000dcb0 <xPortStartScheduler+0x138>)
{
9000db9a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000db9c:	781a      	ldrb	r2, [r3, #0]
{
9000db9e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000dba0:	b2d2      	uxtb	r2, r2
9000dba2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000dba4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000dba6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000dbaa:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000dbac:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000dbae:	b2db      	uxtb	r3, r3
9000dbb0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dbb4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dbb8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dbbc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dbc0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dbc2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dbc4:	d50f      	bpl.n	9000dbe6 <xPortStartScheduler+0x6e>
9000dbc6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000dbc8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000dbcc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dbce:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000dbd0:	005b      	lsls	r3, r3, #1
9000dbd2:	b2db      	uxtb	r3, r3
9000dbd4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dbd8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000dbdc:	061b      	lsls	r3, r3, #24
9000dbde:	d4f3      	bmi.n	9000dbc8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000dbe0:	2903      	cmp	r1, #3
9000dbe2:	d01b      	beq.n	9000dc1c <xPortStartScheduler+0xa4>
9000dbe4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000dbe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbea:	f383 8811 	msr	BASEPRI, r3
9000dbee:	f3bf 8f6f 	isb	sy
9000dbf2:	f3bf 8f4f 	dsb	sy
9000dbf6:	e7fe      	b.n	9000dbf6 <xPortStartScheduler+0x7e>
9000dbf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbfc:	f383 8811 	msr	BASEPRI, r3
9000dc00:	f3bf 8f6f 	isb	sy
9000dc04:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000dc08:	e7fe      	b.n	9000dc08 <xPortStartScheduler+0x90>
9000dc0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc0e:	f383 8811 	msr	BASEPRI, r3
9000dc12:	f3bf 8f6f 	isb	sy
9000dc16:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000dc1a:	e7fe      	b.n	9000dc1a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000dc1c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000dc1e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000dc22:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000dc26:	4a20      	ldr	r2, [pc, #128]	@ (9000dca8 <xPortStartScheduler+0x130>)
9000dc28:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000dc2a:	4e22      	ldr	r6, [pc, #136]	@ (9000dcb4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000dc2c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000dc2e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000dc30:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000dc32:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000dc36:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000dc3a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000dc3e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000dc42:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000dc46:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000dc4a:	f7ff ff81 	bl	9000db50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000dc4e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000dc50:	f7ff fea8 	bl	9000d9a4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000dc54:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000dc58:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000dc5c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000dc60:	f7ff fe8c 	bl	9000d97c <prvPortStartFirstTask>
	vTaskSwitchContext();
9000dc64:	f001 fce6 	bl	9000f634 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000dc68:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000dc6a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000dc6c:	3301      	adds	r3, #1
9000dc6e:	d008      	beq.n	9000dc82 <xPortStartScheduler+0x10a>
9000dc70:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc74:	f383 8811 	msr	BASEPRI, r3
9000dc78:	f3bf 8f6f 	isb	sy
9000dc7c:	f3bf 8f4f 	dsb	sy
9000dc80:	e7fe      	b.n	9000dc80 <xPortStartScheduler+0x108>
9000dc82:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc86:	f383 8811 	msr	BASEPRI, r3
9000dc8a:	f3bf 8f6f 	isb	sy
9000dc8e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000dc92:	9b03      	ldr	r3, [sp, #12]
9000dc94:	2b00      	cmp	r3, #0
9000dc96:	d0fc      	beq.n	9000dc92 <xPortStartScheduler+0x11a>
}
9000dc98:	2000      	movs	r0, #0
9000dc9a:	b004      	add	sp, #16
9000dc9c:	bd70      	pop	{r4, r5, r6, pc}
9000dc9e:	bf00      	nop
9000dca0:	410fc271 	.word	0x410fc271
9000dca4:	410fc270 	.word	0x410fc270
9000dca8:	e000e400 	.word	0xe000e400
9000dcac:	24021310 	.word	0x24021310
9000dcb0:	24021314 	.word	0x24021314
9000dcb4:	24000084 	.word	0x24000084

9000dcb8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000dcb8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000dcbc:	2b0f      	cmp	r3, #15
9000dcbe:	d90e      	bls.n	9000dcde <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000dcc0:	4911      	ldr	r1, [pc, #68]	@ (9000dd08 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000dcc2:	4a12      	ldr	r2, [pc, #72]	@ (9000dd0c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000dcc4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000dcc6:	7812      	ldrb	r2, [r2, #0]
9000dcc8:	429a      	cmp	r2, r3
9000dcca:	d908      	bls.n	9000dcde <vPortValidateInterruptPriority+0x26>
9000dccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcd0:	f383 8811 	msr	BASEPRI, r3
9000dcd4:	f3bf 8f6f 	isb	sy
9000dcd8:	f3bf 8f4f 	dsb	sy
9000dcdc:	e7fe      	b.n	9000dcdc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000dcde:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dce2:	4a0b      	ldr	r2, [pc, #44]	@ (9000dd10 <vPortValidateInterruptPriority+0x58>)
9000dce4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000dce8:	6812      	ldr	r2, [r2, #0]
9000dcea:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000dcee:	4293      	cmp	r3, r2
9000dcf0:	d908      	bls.n	9000dd04 <vPortValidateInterruptPriority+0x4c>
9000dcf2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcf6:	f383 8811 	msr	BASEPRI, r3
9000dcfa:	f3bf 8f6f 	isb	sy
9000dcfe:	f3bf 8f4f 	dsb	sy
9000dd02:	e7fe      	b.n	9000dd02 <vPortValidateInterruptPriority+0x4a>
	}
9000dd04:	4770      	bx	lr
9000dd06:	bf00      	nop
9000dd08:	e000e3f0 	.word	0xe000e3f0
9000dd0c:	24021314 	.word	0x24021314
9000dd10:	24021310 	.word	0x24021310

9000dd14 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000dd14:	b570      	push	{r4, r5, r6, lr}
9000dd16:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000dd18:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000dd1a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dd1c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000dd1e:	b92a      	cbnz	r2, 9000dd2c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000dd20:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd22:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000dd24:	b32e      	cbz	r6, 9000dd72 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000dd26:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd28:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000dd2a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000dd2c:	b97e      	cbnz	r6, 9000dd4e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000dd2e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd30:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000dd32:	f01c f806 	bl	90029d42 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dd36:	6863      	ldr	r3, [r4, #4]
9000dd38:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dd3a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dd3c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dd3e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dd40:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000dd42:	bf24      	itt	cs
9000dd44:	6823      	ldrcs	r3, [r4, #0]
9000dd46:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000dd48:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd4a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000dd4c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000dd4e:	68c0      	ldr	r0, [r0, #12]
9000dd50:	f01b fff7 	bl	90029d42 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000dd54:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000dd56:	68e3      	ldr	r3, [r4, #12]
9000dd58:	4251      	negs	r1, r2
9000dd5a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dd5c:	6822      	ldr	r2, [r4, #0]
9000dd5e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000dd60:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dd62:	d202      	bcs.n	9000dd6a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000dd64:	68a3      	ldr	r3, [r4, #8]
9000dd66:	440b      	add	r3, r1
9000dd68:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000dd6a:	2e02      	cmp	r6, #2
9000dd6c:	d006      	beq.n	9000dd7c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd6e:	3501      	adds	r5, #1
9000dd70:	e7ea      	b.n	9000dd48 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000dd72:	6880      	ldr	r0, [r0, #8]
9000dd74:	f001 fe30 	bl	9000f9d8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000dd78:	60a6      	str	r6, [r4, #8]
9000dd7a:	e7d5      	b.n	9000dd28 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000dd7c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000dd7e:	f04f 0000 	mov.w	r0, #0
9000dd82:	bf38      	it	cc
9000dd84:	2501      	movcc	r5, #1
9000dd86:	e7cf      	b.n	9000dd28 <prvCopyDataToQueue+0x14>

9000dd88 <xQueueGenericCreateStatic>:
	{
9000dd88:	b530      	push	{r4, r5, lr}
9000dd8a:	b083      	sub	sp, #12
9000dd8c:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000dd90:	b940      	cbnz	r0, 9000dda4 <xQueueGenericCreateStatic+0x1c>
9000dd92:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd96:	f383 8811 	msr	BASEPRI, r3
9000dd9a:	f3bf 8f6f 	isb	sy
9000dd9e:	f3bf 8f4f 	dsb	sy
9000dda2:	e7fe      	b.n	9000dda2 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000dda4:	461c      	mov	r4, r3
9000dda6:	b153      	cbz	r3, 9000ddbe <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000dda8:	b30a      	cbz	r2, 9000ddee <xQueueGenericCreateStatic+0x66>
9000ddaa:	b989      	cbnz	r1, 9000ddd0 <xQueueGenericCreateStatic+0x48>
9000ddac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddb0:	f383 8811 	msr	BASEPRI, r3
9000ddb4:	f3bf 8f6f 	isb	sy
9000ddb8:	f3bf 8f4f 	dsb	sy
9000ddbc:	e7fe      	b.n	9000ddbc <xQueueGenericCreateStatic+0x34>
9000ddbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddc2:	f383 8811 	msr	BASEPRI, r3
9000ddc6:	f3bf 8f6f 	isb	sy
9000ddca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000ddce:	e7fe      	b.n	9000ddce <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000ddd0:	b16a      	cbz	r2, 9000ddee <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ddd2:	2350      	movs	r3, #80	@ 0x50
9000ddd4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ddd6:	9b01      	ldr	r3, [sp, #4]
9000ddd8:	2b50      	cmp	r3, #80	@ 0x50
9000ddda:	d013      	beq.n	9000de04 <xQueueGenericCreateStatic+0x7c>
9000dddc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dde0:	f383 8811 	msr	BASEPRI, r3
9000dde4:	f3bf 8f6f 	isb	sy
9000dde8:	f3bf 8f4f 	dsb	sy
9000ddec:	e7fe      	b.n	9000ddec <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000ddee:	2900      	cmp	r1, #0
9000ddf0:	d0ef      	beq.n	9000ddd2 <xQueueGenericCreateStatic+0x4a>
9000ddf2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddf6:	f383 8811 	msr	BASEPRI, r3
9000ddfa:	f3bf 8f6f 	isb	sy
9000ddfe:	f3bf 8f4f 	dsb	sy
9000de02:	e7fe      	b.n	9000de02 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000de04:	2900      	cmp	r1, #0
9000de06:	bf08      	it	eq
9000de08:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000de0a:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de0c:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000de0e:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000de10:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000de12:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de14:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000de18:	f7ff fe1c 	bl	9000da54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de1c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de1e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000de22:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de24:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000de28:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de2c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de2e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de30:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de32:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000de34:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000de36:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de38:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000de3a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000de3c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000de40:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de44:	f7ff fd50 	bl	9000d8e8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000de48:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000de4c:	f7ff fd4c 	bl	9000d8e8 <vListInitialise>
	taskEXIT_CRITICAL();
9000de50:	f7ff fe22 	bl	9000da98 <vPortExitCritical>
	}
9000de54:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000de56:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000de5a:	b003      	add	sp, #12
9000de5c:	bd30      	pop	{r4, r5, pc}
9000de5e:	bf00      	nop

9000de60 <xQueueGenericCreate>:
	{
9000de60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000de62:	b940      	cbnz	r0, 9000de76 <xQueueGenericCreate+0x16>
9000de64:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de68:	f383 8811 	msr	BASEPRI, r3
9000de6c:	f3bf 8f6f 	isb	sy
9000de70:	f3bf 8f4f 	dsb	sy
9000de74:	e7fe      	b.n	9000de74 <xQueueGenericCreate+0x14>
9000de76:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000de78:	fb01 f000 	mul.w	r0, r1, r0
9000de7c:	460e      	mov	r6, r1
9000de7e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000de80:	3050      	adds	r0, #80	@ 0x50
9000de82:	f7ff fc09 	bl	9000d698 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000de86:	4604      	mov	r4, r0
9000de88:	b340      	cbz	r0, 9000dedc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000de8a:	2300      	movs	r3, #0
9000de8c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000de90:	b336      	cbz	r6, 9000dee0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de92:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000de96:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000de98:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000de9c:	f7ff fdda 	bl	9000da54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dea0:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dea2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dea6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dea8:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000deac:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000deb0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000deb2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000deb4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000deb6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000deb8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000deba:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000debc:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000debe:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000dec0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dec4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dec8:	f7ff fd0e 	bl	9000d8e8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000decc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ded0:	f7ff fd0a 	bl	9000d8e8 <vListInitialise>
	taskEXIT_CRITICAL();
9000ded4:	f7ff fde0 	bl	9000da98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ded8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000dedc:	4620      	mov	r0, r4
9000dede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dee0:	4603      	mov	r3, r0
9000dee2:	e7d8      	b.n	9000de96 <xQueueGenericCreate+0x36>

9000dee4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000dee4:	b940      	cbnz	r0, 9000def8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000dee6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000deea:	f383 8811 	msr	BASEPRI, r3
9000deee:	f3bf 8f6f 	isb	sy
9000def2:	f3bf 8f4f 	dsb	sy
9000def6:	e7fe      	b.n	9000def6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000def8:	4288      	cmp	r0, r1
9000defa:	d208      	bcs.n	9000df0e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000defc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df00:	f383 8811 	msr	BASEPRI, r3
9000df04:	f3bf 8f6f 	isb	sy
9000df08:	f3bf 8f4f 	dsb	sy
9000df0c:	e7fe      	b.n	9000df0c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000df0e:	b530      	push	{r4, r5, lr}
9000df10:	4614      	mov	r4, r2
9000df12:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000df14:	2a00      	cmp	r2, #0
9000df16:	d03b      	beq.n	9000df90 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000df18:	2350      	movs	r3, #80	@ 0x50
9000df1a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000df1c:	9b03      	ldr	r3, [sp, #12]
9000df1e:	2b50      	cmp	r3, #80	@ 0x50
9000df20:	d008      	beq.n	9000df34 <xQueueCreateCountingSemaphoreStatic+0x50>
9000df22:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df26:	f383 8811 	msr	BASEPRI, r3
9000df2a:	f3bf 8f6f 	isb	sy
9000df2e:	f3bf 8f4f 	dsb	sy
9000df32:	e7fe      	b.n	9000df32 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000df34:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000df36:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000df38:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000df3a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000df3c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000df40:	6415      	str	r5, [r2, #64]	@ 0x40
9000df42:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000df44:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000df46:	f7ff fd85 	bl	9000da54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df4a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000df4c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000df4e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df50:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000df54:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df58:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df5a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df5c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df5e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000df60:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000df62:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df66:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000df68:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000df6c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000df70:	f7ff fcba 	bl	9000d8e8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000df74:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000df78:	f7ff fcb6 	bl	9000d8e8 <vListInitialise>
	taskEXIT_CRITICAL();
9000df7c:	f7ff fd8c 	bl	9000da98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000df80:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000df82:	9901      	ldr	r1, [sp, #4]
	}
9000df84:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000df86:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000df8a:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000df8c:	b005      	add	sp, #20
9000df8e:	bd30      	pop	{r4, r5, pc}
9000df90:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df94:	f383 8811 	msr	BASEPRI, r3
9000df98:	f3bf 8f6f 	isb	sy
9000df9c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dfa0:	e7fe      	b.n	9000dfa0 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000dfa2:	bf00      	nop

9000dfa4 <xQueueCreateCountingSemaphore>:
	{
9000dfa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dfa6:	b940      	cbnz	r0, 9000dfba <xQueueCreateCountingSemaphore+0x16>
9000dfa8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dfac:	f383 8811 	msr	BASEPRI, r3
9000dfb0:	f3bf 8f6f 	isb	sy
9000dfb4:	f3bf 8f4f 	dsb	sy
9000dfb8:	e7fe      	b.n	9000dfb8 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dfba:	4288      	cmp	r0, r1
9000dfbc:	4604      	mov	r4, r0
9000dfbe:	460e      	mov	r6, r1
9000dfc0:	d208      	bcs.n	9000dfd4 <xQueueCreateCountingSemaphore+0x30>
9000dfc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dfc6:	f383 8811 	msr	BASEPRI, r3
9000dfca:	f3bf 8f6f 	isb	sy
9000dfce:	f3bf 8f4f 	dsb	sy
9000dfd2:	e7fe      	b.n	9000dfd2 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dfd4:	2050      	movs	r0, #80	@ 0x50
9000dfd6:	f7ff fb5f 	bl	9000d698 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dfda:	4605      	mov	r5, r0
9000dfdc:	b330      	cbz	r0, 9000e02c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dfde:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dfe0:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dfe2:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dfe4:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dfe8:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000dfea:	f7ff fd33 	bl	9000da54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfee:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dff0:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dff2:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dff6:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dff8:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000dffc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e000:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e002:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e004:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e006:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e008:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e00a:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e00c:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e010:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e014:	f7ff fc68 	bl	9000d8e8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e018:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000e01c:	f7ff fc64 	bl	9000d8e8 <vListInitialise>
	taskEXIT_CRITICAL();
9000e020:	f7ff fd3a 	bl	9000da98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e024:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e026:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000e028:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000e02c:	4628      	mov	r0, r5
9000e02e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000e030 <xQueueGenericSend>:
{
9000e030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e034:	b084      	sub	sp, #16
9000e036:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000e038:	2800      	cmp	r0, #0
9000e03a:	f000 8103 	beq.w	9000e244 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e03e:	4688      	mov	r8, r1
9000e040:	4604      	mov	r4, r0
9000e042:	461f      	mov	r7, r3
9000e044:	2900      	cmp	r1, #0
9000e046:	f000 8097 	beq.w	9000e178 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e04a:	2f02      	cmp	r7, #2
9000e04c:	d10b      	bne.n	9000e066 <xQueueGenericSend+0x36>
9000e04e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e050:	2b01      	cmp	r3, #1
9000e052:	d008      	beq.n	9000e066 <xQueueGenericSend+0x36>
9000e054:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e058:	f383 8811 	msr	BASEPRI, r3
9000e05c:	f3bf 8f6f 	isb	sy
9000e060:	f3bf 8f4f 	dsb	sy
9000e064:	e7fe      	b.n	9000e064 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e066:	f001 fc67 	bl	9000f938 <xTaskGetSchedulerState>
9000e06a:	2800      	cmp	r0, #0
9000e06c:	f000 80f3 	beq.w	9000e256 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e070:	f1a7 0902 	sub.w	r9, r7, #2
9000e074:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e076:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e07a:	fab9 f989 	clz	r9, r9
9000e07e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000e082:	f7ff fce7 	bl	9000da54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e086:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e088:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e08a:	429a      	cmp	r2, r3
9000e08c:	f0c0 80f0 	bcc.w	9000e270 <xQueueGenericSend+0x240>
9000e090:	f1b9 0f00 	cmp.w	r9, #0
9000e094:	f040 80ec 	bne.w	9000e270 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e098:	9b01      	ldr	r3, [sp, #4]
9000e09a:	2b00      	cmp	r3, #0
9000e09c:	f000 8101 	beq.w	9000e2a2 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000e0a0:	2d00      	cmp	r5, #0
9000e0a2:	f000 80cb 	beq.w	9000e23c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000e0a6:	f7ff fcf7 	bl	9000da98 <vPortExitCritical>
		vTaskSuspendAll();
9000e0aa:	f001 fa7f 	bl	9000f5ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e0ae:	f7ff fcd1 	bl	9000da54 <vPortEnterCritical>
9000e0b2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e0b6:	2bff      	cmp	r3, #255	@ 0xff
9000e0b8:	d102      	bne.n	9000e0c0 <xQueueGenericSend+0x90>
9000e0ba:	2300      	movs	r3, #0
9000e0bc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e0c0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e0c4:	2bff      	cmp	r3, #255	@ 0xff
9000e0c6:	d102      	bne.n	9000e0ce <xQueueGenericSend+0x9e>
9000e0c8:	2300      	movs	r3, #0
9000e0ca:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e0ce:	f7ff fce3 	bl	9000da98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e0d2:	a901      	add	r1, sp, #4
9000e0d4:	a802      	add	r0, sp, #8
9000e0d6:	f001 fbe7 	bl	9000f8a8 <xTaskCheckForTimeOut>
9000e0da:	2800      	cmp	r0, #0
9000e0dc:	f040 80e5 	bne.w	9000e2aa <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000e0e0:	f7ff fcb8 	bl	9000da54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000e0e4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e0e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e0e8:	429a      	cmp	r2, r3
9000e0ea:	d052      	beq.n	9000e192 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000e0ec:	f7ff fcd4 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e0f0:	f7ff fcb0 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e0f4:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000e0f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e0fa:	2d00      	cmp	r5, #0
9000e0fc:	dc04      	bgt.n	9000e108 <xQueueGenericSend+0xd8>
9000e0fe:	e011      	b.n	9000e124 <xQueueGenericSend+0xf4>
			--cTxLock;
9000e100:	1e6a      	subs	r2, r5, #1
9000e102:	b2d3      	uxtb	r3, r2
9000e104:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e106:	b16b      	cbz	r3, 9000e124 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e108:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e10a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e10c:	b153      	cbz	r3, 9000e124 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e10e:	f001 fb79 	bl	9000f804 <xTaskRemoveFromEventList>
9000e112:	2800      	cmp	r0, #0
9000e114:	d0f4      	beq.n	9000e100 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000e116:	f001 fc09 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e11a:	1e6a      	subs	r2, r5, #1
9000e11c:	b2d3      	uxtb	r3, r2
9000e11e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e120:	2b00      	cmp	r3, #0
9000e122:	d1f1      	bne.n	9000e108 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000e124:	23ff      	movs	r3, #255	@ 0xff
9000e126:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e12a:	f7ff fcb5 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e12e:	f7ff fc91 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e132:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000e136:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e138:	2d00      	cmp	r5, #0
9000e13a:	dd14      	ble.n	9000e166 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e13c:	f104 0a10 	add.w	sl, r4, #16
9000e140:	e003      	b.n	9000e14a <xQueueGenericSend+0x11a>
				--cRxLock;
9000e142:	1e6a      	subs	r2, r5, #1
9000e144:	b2d3      	uxtb	r3, r2
9000e146:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e148:	b16b      	cbz	r3, 9000e166 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e14a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e14c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e14e:	b153      	cbz	r3, 9000e166 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e150:	f001 fb58 	bl	9000f804 <xTaskRemoveFromEventList>
9000e154:	2800      	cmp	r0, #0
9000e156:	d0f4      	beq.n	9000e142 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000e158:	f001 fbe8 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e15c:	1e6a      	subs	r2, r5, #1
9000e15e:	b2d3      	uxtb	r3, r2
9000e160:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e162:	2b00      	cmp	r3, #0
9000e164:	d1f1      	bne.n	9000e14a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000e166:	23ff      	movs	r3, #255	@ 0xff
9000e168:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e16c:	f7ff fc94 	bl	9000da98 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e170:	f001 fa24 	bl	9000f5bc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e174:	2501      	movs	r5, #1
9000e176:	e784      	b.n	9000e082 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e178:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e17a:	2b00      	cmp	r3, #0
9000e17c:	f43f af65 	beq.w	9000e04a <xQueueGenericSend+0x1a>
9000e180:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e184:	f383 8811 	msr	BASEPRI, r3
9000e188:	f3bf 8f6f 	isb	sy
9000e18c:	f3bf 8f4f 	dsb	sy
9000e190:	e7fe      	b.n	9000e190 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e192:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000e196:	f7ff fc7f 	bl	9000da98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e19a:	9901      	ldr	r1, [sp, #4]
9000e19c:	4650      	mov	r0, sl
9000e19e:	f001 faa3 	bl	9000f6e8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e1a2:	f7ff fc57 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e1a6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e1aa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1ac:	2d00      	cmp	r5, #0
9000e1ae:	dc04      	bgt.n	9000e1ba <xQueueGenericSend+0x18a>
9000e1b0:	e011      	b.n	9000e1d6 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000e1b2:	1e6b      	subs	r3, r5, #1
9000e1b4:	b2da      	uxtb	r2, r3
9000e1b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1b8:	b16a      	cbz	r2, 9000e1d6 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1bc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1be:	b153      	cbz	r3, 9000e1d6 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1c0:	f001 fb20 	bl	9000f804 <xTaskRemoveFromEventList>
9000e1c4:	2800      	cmp	r0, #0
9000e1c6:	d0f4      	beq.n	9000e1b2 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000e1c8:	f001 fbb0 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e1cc:	1e6b      	subs	r3, r5, #1
9000e1ce:	b2da      	uxtb	r2, r3
9000e1d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1d2:	2a00      	cmp	r2, #0
9000e1d4:	d1f1      	bne.n	9000e1ba <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e1d6:	23ff      	movs	r3, #255	@ 0xff
9000e1d8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e1dc:	f7ff fc5c 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e1e0:	f7ff fc38 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e1e4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e1e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1ea:	2d00      	cmp	r5, #0
9000e1ec:	dc04      	bgt.n	9000e1f8 <xQueueGenericSend+0x1c8>
9000e1ee:	e011      	b.n	9000e214 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000e1f0:	1e6b      	subs	r3, r5, #1
9000e1f2:	b2da      	uxtb	r2, r3
9000e1f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1f6:	b16a      	cbz	r2, 9000e214 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1f8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1fa:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1fc:	b153      	cbz	r3, 9000e214 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1fe:	f001 fb01 	bl	9000f804 <xTaskRemoveFromEventList>
9000e202:	2800      	cmp	r0, #0
9000e204:	d0f4      	beq.n	9000e1f0 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000e206:	f001 fb91 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e20a:	1e6b      	subs	r3, r5, #1
9000e20c:	b2da      	uxtb	r2, r3
9000e20e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e210:	2a00      	cmp	r2, #0
9000e212:	d1f1      	bne.n	9000e1f8 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e214:	23ff      	movs	r3, #255	@ 0xff
9000e216:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e21a:	f7ff fc3d 	bl	9000da98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e21e:	f001 f9cd 	bl	9000f5bc <xTaskResumeAll>
9000e222:	2800      	cmp	r0, #0
9000e224:	d1a6      	bne.n	9000e174 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000e226:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e22a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e22e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e232:	f3bf 8f4f 	dsb	sy
9000e236:	f3bf 8f6f 	isb	sy
9000e23a:	e79b      	b.n	9000e174 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e23c:	a802      	add	r0, sp, #8
9000e23e:	f001 fb27 	bl	9000f890 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e242:	e730      	b.n	9000e0a6 <xQueueGenericSend+0x76>
9000e244:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e248:	f383 8811 	msr	BASEPRI, r3
9000e24c:	f3bf 8f6f 	isb	sy
9000e250:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e254:	e7fe      	b.n	9000e254 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e256:	9b01      	ldr	r3, [sp, #4]
9000e258:	2b00      	cmp	r3, #0
9000e25a:	f43f af09 	beq.w	9000e070 <xQueueGenericSend+0x40>
9000e25e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e262:	f383 8811 	msr	BASEPRI, r3
9000e266:	f3bf 8f6f 	isb	sy
9000e26a:	f3bf 8f4f 	dsb	sy
9000e26e:	e7fe      	b.n	9000e26e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e270:	463a      	mov	r2, r7
9000e272:	4641      	mov	r1, r8
9000e274:	4620      	mov	r0, r4
9000e276:	f7ff fd4d 	bl	9000dd14 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e27a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e27c:	2b00      	cmp	r3, #0
9000e27e:	d151      	bne.n	9000e324 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000e280:	b148      	cbz	r0, 9000e296 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000e282:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e286:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e28a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e28e:	f3bf 8f4f 	dsb	sy
9000e292:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000e296:	f7ff fbff 	bl	9000da98 <vPortExitCritical>
				return pdPASS;
9000e29a:	2001      	movs	r0, #1
}
9000e29c:	b004      	add	sp, #16
9000e29e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000e2a2:	f7ff fbf9 	bl	9000da98 <vPortExitCritical>
					return errQUEUE_FULL;
9000e2a6:	2000      	movs	r0, #0
9000e2a8:	e7f8      	b.n	9000e29c <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000e2aa:	f7ff fbd3 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e2ae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e2b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2b4:	2d00      	cmp	r5, #0
9000e2b6:	dd10      	ble.n	9000e2da <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2b8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000e2bc:	e003      	b.n	9000e2c6 <xQueueGenericSend+0x296>
			--cTxLock;
9000e2be:	1e6b      	subs	r3, r5, #1
9000e2c0:	b2da      	uxtb	r2, r3
9000e2c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2c4:	b14a      	cbz	r2, 9000e2da <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2ca:	b133      	cbz	r3, 9000e2da <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2cc:	f001 fa9a 	bl	9000f804 <xTaskRemoveFromEventList>
9000e2d0:	2800      	cmp	r0, #0
9000e2d2:	d0f4      	beq.n	9000e2be <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000e2d4:	f001 fb2a 	bl	9000f92c <vTaskMissedYield>
9000e2d8:	e7f1      	b.n	9000e2be <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e2da:	23ff      	movs	r3, #255	@ 0xff
9000e2dc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e2e0:	f7ff fbda 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e2e4:	f7ff fbb6 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e2e8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e2ec:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2ee:	2d00      	cmp	r5, #0
9000e2f0:	dd10      	ble.n	9000e314 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2f2:	f104 0610 	add.w	r6, r4, #16
9000e2f6:	e003      	b.n	9000e300 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000e2f8:	1e6b      	subs	r3, r5, #1
9000e2fa:	b2da      	uxtb	r2, r3
9000e2fc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2fe:	b14a      	cbz	r2, 9000e314 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e300:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e302:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e304:	b133      	cbz	r3, 9000e314 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e306:	f001 fa7d 	bl	9000f804 <xTaskRemoveFromEventList>
9000e30a:	2800      	cmp	r0, #0
9000e30c:	d0f4      	beq.n	9000e2f8 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000e30e:	f001 fb0d 	bl	9000f92c <vTaskMissedYield>
9000e312:	e7f1      	b.n	9000e2f8 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e314:	23ff      	movs	r3, #255	@ 0xff
9000e316:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e31a:	f7ff fbbd 	bl	9000da98 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e31e:	f001 f94d 	bl	9000f5bc <xTaskResumeAll>
			return errQUEUE_FULL;
9000e322:	e7c0      	b.n	9000e2a6 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e324:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e328:	f001 fa6c 	bl	9000f804 <xTaskRemoveFromEventList>
9000e32c:	2800      	cmp	r0, #0
9000e32e:	d0b2      	beq.n	9000e296 <xQueueGenericSend+0x266>
9000e330:	e7a7      	b.n	9000e282 <xQueueGenericSend+0x252>
9000e332:	bf00      	nop

9000e334 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e334:	2800      	cmp	r0, #0
9000e336:	d04b      	beq.n	9000e3d0 <xQueueGenericSendFromISR+0x9c>
{
9000e338:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e33c:	460e      	mov	r6, r1
9000e33e:	4604      	mov	r4, r0
9000e340:	4617      	mov	r7, r2
9000e342:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e344:	b339      	cbz	r1, 9000e396 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e346:	2d02      	cmp	r5, #2
9000e348:	d10b      	bne.n	9000e362 <xQueueGenericSendFromISR+0x2e>
9000e34a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e34c:	2b01      	cmp	r3, #1
9000e34e:	d008      	beq.n	9000e362 <xQueueGenericSendFromISR+0x2e>
9000e350:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e354:	f383 8811 	msr	BASEPRI, r3
9000e358:	f3bf 8f6f 	isb	sy
9000e35c:	f3bf 8f4f 	dsb	sy
9000e360:	e7fe      	b.n	9000e360 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e362:	f7ff fca9 	bl	9000dcb8 <vPortValidateInterruptPriority>
	__asm volatile
9000e366:	f3ef 8811 	mrs	r8, BASEPRI
9000e36a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e36e:	f383 8811 	msr	BASEPRI, r3
9000e372:	f3bf 8f6f 	isb	sy
9000e376:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e37a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e37c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e37e:	429a      	cmp	r2, r3
9000e380:	d315      	bcc.n	9000e3ae <xQueueGenericSendFromISR+0x7a>
9000e382:	f1a5 0002 	sub.w	r0, r5, #2
9000e386:	fab0 f080 	clz	r0, r0
9000e38a:	0940      	lsrs	r0, r0, #5
9000e38c:	b978      	cbnz	r0, 9000e3ae <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e38e:	f388 8811 	msr	BASEPRI, r8
}
9000e392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e396:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e398:	2b00      	cmp	r3, #0
9000e39a:	d0d4      	beq.n	9000e346 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e39c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3a0:	f383 8811 	msr	BASEPRI, r3
9000e3a4:	f3bf 8f6f 	isb	sy
9000e3a8:	f3bf 8f4f 	dsb	sy
9000e3ac:	e7fe      	b.n	9000e3ac <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e3ae:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e3b0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e3b4:	4631      	mov	r1, r6
9000e3b6:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e3b8:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e3ba:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e3bc:	f7ff fcaa 	bl	9000dd14 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e3c0:	1c6b      	adds	r3, r5, #1
9000e3c2:	d00e      	beq.n	9000e3e2 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e3c4:	1c6b      	adds	r3, r5, #1
9000e3c6:	b25b      	sxtb	r3, r3
9000e3c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e3cc:	2001      	movs	r0, #1
9000e3ce:	e7de      	b.n	9000e38e <xQueueGenericSendFromISR+0x5a>
9000e3d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3d4:	f383 8811 	msr	BASEPRI, r3
9000e3d8:	f3bf 8f6f 	isb	sy
9000e3dc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e3e0:	e7fe      	b.n	9000e3e0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e3e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e3e4:	2b00      	cmp	r3, #0
9000e3e6:	d0f1      	beq.n	9000e3cc <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e3e8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e3ec:	f001 fa0a 	bl	9000f804 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e3f0:	2f00      	cmp	r7, #0
9000e3f2:	d0eb      	beq.n	9000e3cc <xQueueGenericSendFromISR+0x98>
9000e3f4:	2800      	cmp	r0, #0
9000e3f6:	d0e9      	beq.n	9000e3cc <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e3f8:	2301      	movs	r3, #1
9000e3fa:	603b      	str	r3, [r7, #0]
9000e3fc:	e7e6      	b.n	9000e3cc <xQueueGenericSendFromISR+0x98>
9000e3fe:	bf00      	nop

9000e400 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e400:	b360      	cbz	r0, 9000e45c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e402:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000e404:	b570      	push	{r4, r5, r6, lr}
9000e406:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e408:	b143      	cbz	r3, 9000e41c <xQueueGiveFromISR+0x1c>
9000e40a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e40e:	f383 8811 	msr	BASEPRI, r3
9000e412:	f3bf 8f6f 	isb	sy
9000e416:	f3bf 8f4f 	dsb	sy
9000e41a:	e7fe      	b.n	9000e41a <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e41c:	6803      	ldr	r3, [r0, #0]
9000e41e:	460d      	mov	r5, r1
9000e420:	b32b      	cbz	r3, 9000e46e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e422:	f7ff fc49 	bl	9000dcb8 <vPortValidateInterruptPriority>
	__asm volatile
9000e426:	f3ef 8611 	mrs	r6, BASEPRI
9000e42a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e42e:	f383 8811 	msr	BASEPRI, r3
9000e432:	f3bf 8f6f 	isb	sy
9000e436:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e43a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e43c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000e43e:	429a      	cmp	r2, r3
9000e440:	d921      	bls.n	9000e486 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e442:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e446:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e448:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e44a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e44c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e44e:	d01e      	beq.n	9000e48e <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e450:	3301      	adds	r3, #1
9000e452:	b25b      	sxtb	r3, r3
9000e454:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e458:	2001      	movs	r0, #1
9000e45a:	e015      	b.n	9000e488 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e45c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e460:	f383 8811 	msr	BASEPRI, r3
9000e464:	f3bf 8f6f 	isb	sy
9000e468:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e46c:	e7fe      	b.n	9000e46c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e46e:	6883      	ldr	r3, [r0, #8]
9000e470:	2b00      	cmp	r3, #0
9000e472:	d0d6      	beq.n	9000e422 <xQueueGiveFromISR+0x22>
9000e474:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e478:	f383 8811 	msr	BASEPRI, r3
9000e47c:	f3bf 8f6f 	isb	sy
9000e480:	f3bf 8f4f 	dsb	sy
9000e484:	e7fe      	b.n	9000e484 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e486:	2000      	movs	r0, #0
	__asm volatile
9000e488:	f386 8811 	msr	BASEPRI, r6
}
9000e48c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e48e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e490:	2b00      	cmp	r3, #0
9000e492:	d0e1      	beq.n	9000e458 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e494:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e498:	f001 f9b4 	bl	9000f804 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e49c:	2d00      	cmp	r5, #0
9000e49e:	d0db      	beq.n	9000e458 <xQueueGiveFromISR+0x58>
9000e4a0:	2800      	cmp	r0, #0
9000e4a2:	d0d9      	beq.n	9000e458 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e4a4:	2301      	movs	r3, #1
9000e4a6:	602b      	str	r3, [r5, #0]
9000e4a8:	e7d6      	b.n	9000e458 <xQueueGiveFromISR+0x58>
9000e4aa:	bf00      	nop

9000e4ac <xQueueReceive>:
{
9000e4ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e4b0:	b085      	sub	sp, #20
9000e4b2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e4b4:	2800      	cmp	r0, #0
9000e4b6:	f000 8147 	beq.w	9000e748 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e4ba:	460f      	mov	r7, r1
9000e4bc:	4604      	mov	r4, r0
9000e4be:	2900      	cmp	r1, #0
9000e4c0:	d07b      	beq.n	9000e5ba <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e4c2:	f001 fa39 	bl	9000f938 <xTaskGetSchedulerState>
9000e4c6:	2800      	cmp	r0, #0
9000e4c8:	f000 8083 	beq.w	9000e5d2 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000e4cc:	f7ff fac2 	bl	9000da54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e4d0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e4d2:	2d00      	cmp	r5, #0
9000e4d4:	f040 8141 	bne.w	9000e75a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e4d8:	9b01      	ldr	r3, [sp, #4]
9000e4da:	2b00      	cmp	r3, #0
9000e4dc:	f000 80d7 	beq.w	9000e68e <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000e4e0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4e2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e4e6:	a802      	add	r0, sp, #8
9000e4e8:	f001 f9d2 	bl	9000f890 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e4ec:	f7ff fad4 	bl	9000da98 <vPortExitCritical>
		vTaskSuspendAll();
9000e4f0:	f001 f85c 	bl	9000f5ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e4f4:	f7ff faae 	bl	9000da54 <vPortEnterCritical>
9000e4f8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e4fc:	2bff      	cmp	r3, #255	@ 0xff
9000e4fe:	d101      	bne.n	9000e504 <xQueueReceive+0x58>
9000e500:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e504:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e508:	2bff      	cmp	r3, #255	@ 0xff
9000e50a:	d101      	bne.n	9000e510 <xQueueReceive+0x64>
9000e50c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e510:	f7ff fac2 	bl	9000da98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e514:	a901      	add	r1, sp, #4
9000e516:	a802      	add	r0, sp, #8
9000e518:	f001 f9c6 	bl	9000f8a8 <xTaskCheckForTimeOut>
9000e51c:	2800      	cmp	r0, #0
9000e51e:	d165      	bne.n	9000e5ec <xQueueReceive+0x140>
	taskENTER_CRITICAL();
9000e520:	f7ff fa98 	bl	9000da54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e524:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e526:	2b00      	cmp	r3, #0
9000e528:	f000 80b7 	beq.w	9000e69a <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9000e52c:	f7ff fab4 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e530:	f7ff fa90 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e534:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e538:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e53a:	2d00      	cmp	r5, #0
9000e53c:	dd14      	ble.n	9000e568 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e53e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e542:	e003      	b.n	9000e54c <xQueueReceive+0xa0>
			--cTxLock;
9000e544:	1e6b      	subs	r3, r5, #1
9000e546:	b2da      	uxtb	r2, r3
9000e548:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e54a:	b16a      	cbz	r2, 9000e568 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e54c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e54e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e550:	b153      	cbz	r3, 9000e568 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e552:	f001 f957 	bl	9000f804 <xTaskRemoveFromEventList>
9000e556:	2800      	cmp	r0, #0
9000e558:	d0f4      	beq.n	9000e544 <xQueueReceive+0x98>
						vTaskMissedYield();
9000e55a:	f001 f9e7 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e55e:	1e6b      	subs	r3, r5, #1
9000e560:	b2da      	uxtb	r2, r3
9000e562:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e564:	2a00      	cmp	r2, #0
9000e566:	d1f1      	bne.n	9000e54c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
9000e568:	23ff      	movs	r3, #255	@ 0xff
9000e56a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e56e:	f7ff fa93 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e572:	f7ff fa6f 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e576:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e57a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e57c:	2d00      	cmp	r5, #0
9000e57e:	dd14      	ble.n	9000e5aa <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e580:	f104 0910 	add.w	r9, r4, #16
9000e584:	e003      	b.n	9000e58e <xQueueReceive+0xe2>
				--cRxLock;
9000e586:	1e6b      	subs	r3, r5, #1
9000e588:	b2da      	uxtb	r2, r3
9000e58a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e58c:	b16a      	cbz	r2, 9000e5aa <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e58e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e590:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e592:	b153      	cbz	r3, 9000e5aa <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e594:	f001 f936 	bl	9000f804 <xTaskRemoveFromEventList>
9000e598:	2800      	cmp	r0, #0
9000e59a:	d0f4      	beq.n	9000e586 <xQueueReceive+0xda>
					vTaskMissedYield();
9000e59c:	f001 f9c6 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e5a0:	1e6b      	subs	r3, r5, #1
9000e5a2:	b2da      	uxtb	r2, r3
9000e5a4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5a6:	2a00      	cmp	r2, #0
9000e5a8:	d1f1      	bne.n	9000e58e <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e5aa:	23ff      	movs	r3, #255	@ 0xff
9000e5ac:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e5b0:	f7ff fa72 	bl	9000da98 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e5b4:	f001 f802 	bl	9000f5bc <xTaskResumeAll>
9000e5b8:	e060      	b.n	9000e67c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e5ba:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e5bc:	2b00      	cmp	r3, #0
9000e5be:	d080      	beq.n	9000e4c2 <xQueueReceive+0x16>
	__asm volatile
9000e5c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5c4:	f383 8811 	msr	BASEPRI, r3
9000e5c8:	f3bf 8f6f 	isb	sy
9000e5cc:	f3bf 8f4f 	dsb	sy
9000e5d0:	e7fe      	b.n	9000e5d0 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e5d2:	9b01      	ldr	r3, [sp, #4]
9000e5d4:	2b00      	cmp	r3, #0
9000e5d6:	f43f af79 	beq.w	9000e4cc <xQueueReceive+0x20>
9000e5da:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5de:	f383 8811 	msr	BASEPRI, r3
9000e5e2:	f3bf 8f6f 	isb	sy
9000e5e6:	f3bf 8f4f 	dsb	sy
9000e5ea:	e7fe      	b.n	9000e5ea <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
9000e5ec:	f7ff fa32 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5f0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e5f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5f6:	2d00      	cmp	r5, #0
9000e5f8:	dc04      	bgt.n	9000e604 <xQueueReceive+0x158>
9000e5fa:	e011      	b.n	9000e620 <xQueueReceive+0x174>
			--cTxLock;
9000e5fc:	1e6b      	subs	r3, r5, #1
9000e5fe:	b2da      	uxtb	r2, r3
9000e600:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e602:	b16a      	cbz	r2, 9000e620 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e604:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e606:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e608:	b153      	cbz	r3, 9000e620 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e60a:	f001 f8fb 	bl	9000f804 <xTaskRemoveFromEventList>
9000e60e:	2800      	cmp	r0, #0
9000e610:	d0f4      	beq.n	9000e5fc <xQueueReceive+0x150>
						vTaskMissedYield();
9000e612:	f001 f98b 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e616:	1e6b      	subs	r3, r5, #1
9000e618:	b2da      	uxtb	r2, r3
9000e61a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e61c:	2a00      	cmp	r2, #0
9000e61e:	d1f1      	bne.n	9000e604 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
9000e620:	23ff      	movs	r3, #255	@ 0xff
9000e622:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e626:	f7ff fa37 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e62a:	f7ff fa13 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e62e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e632:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e634:	2d00      	cmp	r5, #0
9000e636:	dd14      	ble.n	9000e662 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e638:	f104 0910 	add.w	r9, r4, #16
9000e63c:	e003      	b.n	9000e646 <xQueueReceive+0x19a>
				--cRxLock;
9000e63e:	1e6b      	subs	r3, r5, #1
9000e640:	b2da      	uxtb	r2, r3
9000e642:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e644:	b16a      	cbz	r2, 9000e662 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e646:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e648:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e64a:	b153      	cbz	r3, 9000e662 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e64c:	f001 f8da 	bl	9000f804 <xTaskRemoveFromEventList>
9000e650:	2800      	cmp	r0, #0
9000e652:	d0f4      	beq.n	9000e63e <xQueueReceive+0x192>
					vTaskMissedYield();
9000e654:	f001 f96a 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e658:	1e6b      	subs	r3, r5, #1
9000e65a:	b2da      	uxtb	r2, r3
9000e65c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e65e:	2a00      	cmp	r2, #0
9000e660:	d1f1      	bne.n	9000e646 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
9000e662:	23ff      	movs	r3, #255	@ 0xff
9000e664:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e668:	f7ff fa16 	bl	9000da98 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e66c:	f000 ffa6 	bl	9000f5bc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e670:	f7ff f9f0 	bl	9000da54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e674:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e676:	b153      	cbz	r3, 9000e68e <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
9000e678:	f7ff fa0e 	bl	9000da98 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e67c:	f7ff f9ea 	bl	9000da54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e680:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e682:	2d00      	cmp	r5, #0
9000e684:	d169      	bne.n	9000e75a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e686:	9b01      	ldr	r3, [sp, #4]
9000e688:	2b00      	cmp	r3, #0
9000e68a:	f47f af2f 	bne.w	9000e4ec <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e68e:	f7ff fa03 	bl	9000da98 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e692:	2000      	movs	r0, #0
}
9000e694:	b005      	add	sp, #20
9000e696:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e69a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000e69e:	f7ff f9fb 	bl	9000da98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e6a2:	9901      	ldr	r1, [sp, #4]
9000e6a4:	4648      	mov	r0, r9
9000e6a6:	f001 f81f 	bl	9000f6e8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e6aa:	f7ff f9d3 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e6ae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e6b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6b4:	2d00      	cmp	r5, #0
9000e6b6:	dc04      	bgt.n	9000e6c2 <xQueueReceive+0x216>
9000e6b8:	e011      	b.n	9000e6de <xQueueReceive+0x232>
			--cTxLock;
9000e6ba:	1e6b      	subs	r3, r5, #1
9000e6bc:	b2da      	uxtb	r2, r3
9000e6be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6c0:	b16a      	cbz	r2, 9000e6de <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6c4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6c6:	b153      	cbz	r3, 9000e6de <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6c8:	f001 f89c 	bl	9000f804 <xTaskRemoveFromEventList>
9000e6cc:	2800      	cmp	r0, #0
9000e6ce:	d0f4      	beq.n	9000e6ba <xQueueReceive+0x20e>
						vTaskMissedYield();
9000e6d0:	f001 f92c 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e6d4:	1e6b      	subs	r3, r5, #1
9000e6d6:	b2da      	uxtb	r2, r3
9000e6d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6da:	2a00      	cmp	r2, #0
9000e6dc:	d1f1      	bne.n	9000e6c2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
9000e6de:	23ff      	movs	r3, #255	@ 0xff
9000e6e0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e6e4:	f7ff f9d8 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e6e8:	f7ff f9b4 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e6ec:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e6f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6f2:	2d00      	cmp	r5, #0
9000e6f4:	dd14      	ble.n	9000e720 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6f6:	f104 0910 	add.w	r9, r4, #16
9000e6fa:	e003      	b.n	9000e704 <xQueueReceive+0x258>
				--cRxLock;
9000e6fc:	1e6b      	subs	r3, r5, #1
9000e6fe:	b2da      	uxtb	r2, r3
9000e700:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e702:	b16a      	cbz	r2, 9000e720 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e704:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e706:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e708:	b153      	cbz	r3, 9000e720 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e70a:	f001 f87b 	bl	9000f804 <xTaskRemoveFromEventList>
9000e70e:	2800      	cmp	r0, #0
9000e710:	d0f4      	beq.n	9000e6fc <xQueueReceive+0x250>
					vTaskMissedYield();
9000e712:	f001 f90b 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e716:	1e6b      	subs	r3, r5, #1
9000e718:	b2da      	uxtb	r2, r3
9000e71a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e71c:	2a00      	cmp	r2, #0
9000e71e:	d1f1      	bne.n	9000e704 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
9000e720:	23ff      	movs	r3, #255	@ 0xff
9000e722:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e726:	f7ff f9b7 	bl	9000da98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e72a:	f000 ff47 	bl	9000f5bc <xTaskResumeAll>
9000e72e:	2800      	cmp	r0, #0
9000e730:	d1a4      	bne.n	9000e67c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
9000e732:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e736:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e73a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e73e:	f3bf 8f4f 	dsb	sy
9000e742:	f3bf 8f6f 	isb	sy
9000e746:	e799      	b.n	9000e67c <xQueueReceive+0x1d0>
9000e748:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e74c:	f383 8811 	msr	BASEPRI, r3
9000e750:	f3bf 8f6f 	isb	sy
9000e754:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e758:	e7fe      	b.n	9000e758 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e75a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e75c:	b152      	cbz	r2, 9000e774 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e75e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e760:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e762:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e764:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e766:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e768:	d301      	bcc.n	9000e76e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e76a:	6821      	ldr	r1, [r4, #0]
9000e76c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e76e:	4638      	mov	r0, r7
9000e770:	f01b fae7 	bl	90029d42 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e774:	3d01      	subs	r5, #1
9000e776:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e778:	6923      	ldr	r3, [r4, #16]
9000e77a:	b91b      	cbnz	r3, 9000e784 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e77c:	f7ff f98c 	bl	9000da98 <vPortExitCritical>
				return pdPASS;
9000e780:	2001      	movs	r0, #1
9000e782:	e787      	b.n	9000e694 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e784:	f104 0010 	add.w	r0, r4, #16
9000e788:	f001 f83c 	bl	9000f804 <xTaskRemoveFromEventList>
9000e78c:	2800      	cmp	r0, #0
9000e78e:	d0f5      	beq.n	9000e77c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
9000e790:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e794:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e798:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e79c:	f3bf 8f4f 	dsb	sy
9000e7a0:	f3bf 8f6f 	isb	sy
9000e7a4:	e7ea      	b.n	9000e77c <xQueueReceive+0x2d0>
9000e7a6:	bf00      	nop

9000e7a8 <xQueueSemaphoreTake>:
{
9000e7a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e7ac:	b085      	sub	sp, #20
9000e7ae:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e7b0:	2800      	cmp	r0, #0
9000e7b2:	d05f      	beq.n	9000e874 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e7b4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e7b6:	4604      	mov	r4, r0
9000e7b8:	b143      	cbz	r3, 9000e7cc <xQueueSemaphoreTake+0x24>
9000e7ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7be:	f383 8811 	msr	BASEPRI, r3
9000e7c2:	f3bf 8f6f 	isb	sy
9000e7c6:	f3bf 8f4f 	dsb	sy
9000e7ca:	e7fe      	b.n	9000e7ca <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e7cc:	f001 f8b4 	bl	9000f938 <xTaskGetSchedulerState>
9000e7d0:	2800      	cmp	r0, #0
9000e7d2:	d058      	beq.n	9000e886 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
9000e7d4:	f7ff f93e 	bl	9000da54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e7d8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e7da:	2d00      	cmp	r5, #0
9000e7dc:	f040 8155 	bne.w	9000ea8a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e7e0:	9b01      	ldr	r3, [sp, #4]
9000e7e2:	2b00      	cmp	r3, #0
9000e7e4:	f000 8145 	beq.w	9000ea72 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e7e8:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
9000e7ea:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7ec:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e7f0:	a802      	add	r0, sp, #8
9000e7f2:	f001 f84d 	bl	9000f890 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e7f6:	f7ff f94f 	bl	9000da98 <vPortExitCritical>
		vTaskSuspendAll();
9000e7fa:	f000 fed7 	bl	9000f5ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e7fe:	f7ff f929 	bl	9000da54 <vPortEnterCritical>
9000e802:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e806:	2bff      	cmp	r3, #255	@ 0xff
9000e808:	d101      	bne.n	9000e80e <xQueueSemaphoreTake+0x66>
9000e80a:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e80e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e812:	2bff      	cmp	r3, #255	@ 0xff
9000e814:	d101      	bne.n	9000e81a <xQueueSemaphoreTake+0x72>
9000e816:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e81a:	f7ff f93d 	bl	9000da98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e81e:	a901      	add	r1, sp, #4
9000e820:	a802      	add	r0, sp, #8
9000e822:	f001 f841 	bl	9000f8a8 <xTaskCheckForTimeOut>
9000e826:	2800      	cmp	r0, #0
9000e828:	d139      	bne.n	9000e89e <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000e82a:	f7ff f913 	bl	9000da54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e82e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e830:	2b00      	cmp	r3, #0
9000e832:	f000 80c0 	beq.w	9000e9b6 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
9000e836:	f7ff f92f 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e83a:	f7ff f90b 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e83e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e842:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e844:	2d00      	cmp	r5, #0
9000e846:	f340 8091 	ble.w	9000e96c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e84a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e84e:	e005      	b.n	9000e85c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000e850:	1e6b      	subs	r3, r5, #1
9000e852:	b2da      	uxtb	r2, r3
9000e854:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e856:	2a00      	cmp	r2, #0
9000e858:	f000 8088 	beq.w	9000e96c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e85c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e85e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e860:	2b00      	cmp	r3, #0
9000e862:	f000 8083 	beq.w	9000e96c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e866:	f000 ffcd 	bl	9000f804 <xTaskRemoveFromEventList>
9000e86a:	2800      	cmp	r0, #0
9000e86c:	d0f0      	beq.n	9000e850 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9000e86e:	f001 f85d 	bl	9000f92c <vTaskMissedYield>
9000e872:	e7ed      	b.n	9000e850 <xQueueSemaphoreTake+0xa8>
9000e874:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e878:	f383 8811 	msr	BASEPRI, r3
9000e87c:	f3bf 8f6f 	isb	sy
9000e880:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e884:	e7fe      	b.n	9000e884 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e886:	9b01      	ldr	r3, [sp, #4]
9000e888:	2b00      	cmp	r3, #0
9000e88a:	d0a3      	beq.n	9000e7d4 <xQueueSemaphoreTake+0x2c>
9000e88c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e890:	f383 8811 	msr	BASEPRI, r3
9000e894:	f3bf 8f6f 	isb	sy
9000e898:	f3bf 8f4f 	dsb	sy
9000e89c:	e7fe      	b.n	9000e89c <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000e89e:	f7ff f8d9 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e8a2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e8a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8a8:	2d00      	cmp	r5, #0
9000e8aa:	dc04      	bgt.n	9000e8b6 <xQueueSemaphoreTake+0x10e>
9000e8ac:	e011      	b.n	9000e8d2 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000e8ae:	1e6b      	subs	r3, r5, #1
9000e8b0:	b2da      	uxtb	r2, r3
9000e8b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8b4:	b16a      	cbz	r2, 9000e8d2 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e8b6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8b8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e8ba:	b153      	cbz	r3, 9000e8d2 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8bc:	f000 ffa2 	bl	9000f804 <xTaskRemoveFromEventList>
9000e8c0:	2800      	cmp	r0, #0
9000e8c2:	d0f4      	beq.n	9000e8ae <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000e8c4:	f001 f832 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000e8c8:	1e6b      	subs	r3, r5, #1
9000e8ca:	b2da      	uxtb	r2, r3
9000e8cc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8ce:	2a00      	cmp	r2, #0
9000e8d0:	d1f1      	bne.n	9000e8b6 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e8d2:	23ff      	movs	r3, #255	@ 0xff
9000e8d4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e8d8:	f7ff f8de 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e8dc:	f7ff f8ba 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e8e0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e8e4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e8e6:	2d00      	cmp	r5, #0
9000e8e8:	dd14      	ble.n	9000e914 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8ea:	f104 0910 	add.w	r9, r4, #16
9000e8ee:	e003      	b.n	9000e8f8 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000e8f0:	1e6b      	subs	r3, r5, #1
9000e8f2:	b2da      	uxtb	r2, r3
9000e8f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e8f6:	b16a      	cbz	r2, 9000e914 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8f8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8fa:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8fc:	b153      	cbz	r3, 9000e914 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8fe:	f000 ff81 	bl	9000f804 <xTaskRemoveFromEventList>
9000e902:	2800      	cmp	r0, #0
9000e904:	d0f4      	beq.n	9000e8f0 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000e906:	f001 f811 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000e90a:	1e6b      	subs	r3, r5, #1
9000e90c:	b2da      	uxtb	r2, r3
9000e90e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e910:	2a00      	cmp	r2, #0
9000e912:	d1f1      	bne.n	9000e8f8 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000e914:	23ff      	movs	r3, #255	@ 0xff
9000e916:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e91a:	f7ff f8bd 	bl	9000da98 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e91e:	f000 fe4d 	bl	9000f5bc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e922:	f7ff f897 	bl	9000da54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e926:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e928:	b943      	cbnz	r3, 9000e93c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9000e92a:	f7ff f8b5 	bl	9000da98 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e92e:	2f00      	cmp	r7, #0
9000e930:	f040 8094 	bne.w	9000ea5c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
9000e934:	2000      	movs	r0, #0
}
9000e936:	b005      	add	sp, #20
9000e938:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000e93c:	f7ff f8ac 	bl	9000da98 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e940:	f7ff f888 	bl	9000da54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e944:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e946:	2d00      	cmp	r5, #0
9000e948:	f040 809f 	bne.w	9000ea8a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e94c:	9b01      	ldr	r3, [sp, #4]
9000e94e:	2b00      	cmp	r3, #0
9000e950:	f47f af51 	bne.w	9000e7f6 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e954:	2f00      	cmp	r7, #0
9000e956:	f000 808c 	beq.w	9000ea72 <xQueueSemaphoreTake+0x2ca>
9000e95a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e95e:	f383 8811 	msr	BASEPRI, r3
9000e962:	f3bf 8f6f 	isb	sy
9000e966:	f3bf 8f4f 	dsb	sy
9000e96a:	e7fe      	b.n	9000e96a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9000e96c:	23ff      	movs	r3, #255	@ 0xff
9000e96e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e972:	f7ff f891 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e976:	f7ff f86d 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e97a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e97e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e980:	2d00      	cmp	r5, #0
9000e982:	dd10      	ble.n	9000e9a6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e984:	f104 0910 	add.w	r9, r4, #16
9000e988:	e003      	b.n	9000e992 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9000e98a:	1e6b      	subs	r3, r5, #1
9000e98c:	b2da      	uxtb	r2, r3
9000e98e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e990:	b14a      	cbz	r2, 9000e9a6 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e992:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e994:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e996:	b133      	cbz	r3, 9000e9a6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e998:	f000 ff34 	bl	9000f804 <xTaskRemoveFromEventList>
9000e99c:	2800      	cmp	r0, #0
9000e99e:	d0f4      	beq.n	9000e98a <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
9000e9a0:	f000 ffc4 	bl	9000f92c <vTaskMissedYield>
9000e9a4:	e7f1      	b.n	9000e98a <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e9a6:	23ff      	movs	r3, #255	@ 0xff
9000e9a8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e9ac:	f7ff f874 	bl	9000da98 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e9b0:	f000 fe04 	bl	9000f5bc <xTaskResumeAll>
9000e9b4:	e7c4      	b.n	9000e940 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
9000e9b6:	f7ff f86f 	bl	9000da98 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e9ba:	6823      	ldr	r3, [r4, #0]
9000e9bc:	2b00      	cmp	r3, #0
9000e9be:	d05b      	beq.n	9000ea78 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e9c0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e9c4:	9901      	ldr	r1, [sp, #4]
9000e9c6:	4648      	mov	r0, r9
9000e9c8:	f000 fe8e 	bl	9000f6e8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e9cc:	f7ff f842 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e9d0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e9d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e9d6:	2d00      	cmp	r5, #0
9000e9d8:	dc04      	bgt.n	9000e9e4 <xQueueSemaphoreTake+0x23c>
9000e9da:	e00d      	b.n	9000e9f8 <xQueueSemaphoreTake+0x250>
			--cTxLock;
9000e9dc:	1e6b      	subs	r3, r5, #1
9000e9de:	b2da      	uxtb	r2, r3
9000e9e0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e9e2:	b14a      	cbz	r2, 9000e9f8 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e9e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e9e6:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e9e8:	b133      	cbz	r3, 9000e9f8 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e9ea:	f000 ff0b 	bl	9000f804 <xTaskRemoveFromEventList>
9000e9ee:	2800      	cmp	r0, #0
9000e9f0:	d0f4      	beq.n	9000e9dc <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
9000e9f2:	f000 ff9b 	bl	9000f92c <vTaskMissedYield>
9000e9f6:	e7f1      	b.n	9000e9dc <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
9000e9f8:	23ff      	movs	r3, #255	@ 0xff
9000e9fa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e9fe:	f7ff f84b 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ea02:	f7ff f827 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ea06:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ea0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea0c:	2d00      	cmp	r5, #0
9000ea0e:	dd10      	ble.n	9000ea32 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea10:	f104 0910 	add.w	r9, r4, #16
9000ea14:	e003      	b.n	9000ea1e <xQueueSemaphoreTake+0x276>
				--cRxLock;
9000ea16:	1e6b      	subs	r3, r5, #1
9000ea18:	b2da      	uxtb	r2, r3
9000ea1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea1c:	b14a      	cbz	r2, 9000ea32 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea1e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea20:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea22:	b133      	cbz	r3, 9000ea32 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea24:	f000 feee 	bl	9000f804 <xTaskRemoveFromEventList>
9000ea28:	2800      	cmp	r0, #0
9000ea2a:	d0f4      	beq.n	9000ea16 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9000ea2c:	f000 ff7e 	bl	9000f92c <vTaskMissedYield>
9000ea30:	e7f1      	b.n	9000ea16 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
9000ea32:	23ff      	movs	r3, #255	@ 0xff
9000ea34:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ea38:	f7ff f82e 	bl	9000da98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000ea3c:	f000 fdbe 	bl	9000f5bc <xTaskResumeAll>
9000ea40:	2800      	cmp	r0, #0
9000ea42:	f47f af7d 	bne.w	9000e940 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
9000ea46:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ea4a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ea4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ea52:	f3bf 8f4f 	dsb	sy
9000ea56:	f3bf 8f6f 	isb	sy
9000ea5a:	e771      	b.n	9000e940 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9000ea5c:	f7fe fffa 	bl	9000da54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000ea60:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ea62:	b119      	cbz	r1, 9000ea6c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000ea64:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ea66:	6819      	ldr	r1, [r3, #0]
9000ea68:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000ea6c:	68a0      	ldr	r0, [r4, #8]
9000ea6e:	f000 fff7 	bl	9000fa60 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000ea72:	f7ff f811 	bl	9000da98 <vPortExitCritical>
9000ea76:	e75d      	b.n	9000e934 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000ea78:	f7fe ffec 	bl	9000da54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ea7c:	68a0      	ldr	r0, [r4, #8]
9000ea7e:	f000 ff6b 	bl	9000f958 <xTaskPriorityInherit>
9000ea82:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000ea84:	f7ff f808 	bl	9000da98 <vPortExitCritical>
9000ea88:	e79a      	b.n	9000e9c0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ea8a:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ea8c:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ea8e:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ea90:	b12b      	cbz	r3, 9000ea9e <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea92:	6923      	ldr	r3, [r4, #16]
9000ea94:	b93b      	cbnz	r3, 9000eaa6 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
9000ea96:	f7fe ffff 	bl	9000da98 <vPortExitCritical>
				return pdPASS;
9000ea9a:	2001      	movs	r0, #1
9000ea9c:	e74b      	b.n	9000e936 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000ea9e:	f001 f82f 	bl	9000fb00 <pvTaskIncrementMutexHeldCount>
9000eaa2:	60a0      	str	r0, [r4, #8]
9000eaa4:	e7f5      	b.n	9000ea92 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eaa6:	f104 0010 	add.w	r0, r4, #16
9000eaaa:	f000 feab 	bl	9000f804 <xTaskRemoveFromEventList>
9000eaae:	2800      	cmp	r0, #0
9000eab0:	d0f1      	beq.n	9000ea96 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
9000eab2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eab6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eaba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eabe:	f3bf 8f4f 	dsb	sy
9000eac2:	f3bf 8f6f 	isb	sy
9000eac6:	e7e6      	b.n	9000ea96 <xQueueSemaphoreTake+0x2ee>

9000eac8 <xQueueReceiveFromISR>:
{
9000eac8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000eacc:	b310      	cbz	r0, 9000eb14 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eace:	460f      	mov	r7, r1
9000ead0:	4604      	mov	r4, r0
9000ead2:	4616      	mov	r6, r2
9000ead4:	b191      	cbz	r1, 9000eafc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000ead6:	f7ff f8ef 	bl	9000dcb8 <vPortValidateInterruptPriority>
	__asm volatile
9000eada:	f3ef 8911 	mrs	r9, BASEPRI
9000eade:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eae2:	f383 8811 	msr	BASEPRI, r3
9000eae6:	f3bf 8f6f 	isb	sy
9000eaea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000eaee:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000eaf0:	b9cd      	cbnz	r5, 9000eb26 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000eaf2:	4628      	mov	r0, r5
	__asm volatile
9000eaf4:	f389 8811 	msr	BASEPRI, r9
}
9000eaf8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eafc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000eafe:	2b00      	cmp	r3, #0
9000eb00:	d0e9      	beq.n	9000ead6 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000eb02:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb06:	f383 8811 	msr	BASEPRI, r3
9000eb0a:	f3bf 8f6f 	isb	sy
9000eb0e:	f3bf 8f4f 	dsb	sy
9000eb12:	e7fe      	b.n	9000eb12 <xQueueReceiveFromISR+0x4a>
9000eb14:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb18:	f383 8811 	msr	BASEPRI, r3
9000eb1c:	f3bf 8f6f 	isb	sy
9000eb20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000eb24:	e7fe      	b.n	9000eb24 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000eb26:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000eb2a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000eb2c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000eb30:	b142      	cbz	r2, 9000eb44 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000eb32:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000eb34:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000eb36:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000eb38:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000eb3a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000eb3c:	d21c      	bcs.n	9000eb78 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000eb3e:	4638      	mov	r0, r7
9000eb40:	f01b f8ff 	bl	90029d42 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000eb44:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000eb46:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000eb4a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000eb4c:	d006      	beq.n	9000eb5c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000eb4e:	f108 0301 	add.w	r3, r8, #1
9000eb52:	b25b      	sxtb	r3, r3
9000eb54:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000eb58:	2001      	movs	r0, #1
9000eb5a:	e7cb      	b.n	9000eaf4 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb5c:	6923      	ldr	r3, [r4, #16]
9000eb5e:	2b00      	cmp	r3, #0
9000eb60:	d0fa      	beq.n	9000eb58 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb62:	f104 0010 	add.w	r0, r4, #16
9000eb66:	f000 fe4d 	bl	9000f804 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000eb6a:	2e00      	cmp	r6, #0
9000eb6c:	d0f4      	beq.n	9000eb58 <xQueueReceiveFromISR+0x90>
9000eb6e:	2800      	cmp	r0, #0
9000eb70:	d0f2      	beq.n	9000eb58 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000eb72:	2301      	movs	r3, #1
9000eb74:	6033      	str	r3, [r6, #0]
9000eb76:	e7ef      	b.n	9000eb58 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000eb78:	6821      	ldr	r1, [r4, #0]
9000eb7a:	60e1      	str	r1, [r4, #12]
9000eb7c:	e7df      	b.n	9000eb3e <xQueueReceiveFromISR+0x76>
9000eb7e:	bf00      	nop

9000eb80 <vQueueDelete>:
	configASSERT( pxQueue );
9000eb80:	b1e0      	cbz	r0, 9000ebbc <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000eb82:	4b21      	ldr	r3, [pc, #132]	@ (9000ec08 <vQueueDelete+0x88>)
9000eb84:	685a      	ldr	r2, [r3, #4]
9000eb86:	4290      	cmp	r0, r2
9000eb88:	d02b      	beq.n	9000ebe2 <vQueueDelete+0x62>
9000eb8a:	68da      	ldr	r2, [r3, #12]
9000eb8c:	4290      	cmp	r0, r2
9000eb8e:	d02a      	beq.n	9000ebe6 <vQueueDelete+0x66>
9000eb90:	695a      	ldr	r2, [r3, #20]
9000eb92:	4290      	cmp	r0, r2
9000eb94:	d029      	beq.n	9000ebea <vQueueDelete+0x6a>
9000eb96:	69da      	ldr	r2, [r3, #28]
9000eb98:	4290      	cmp	r0, r2
9000eb9a:	d028      	beq.n	9000ebee <vQueueDelete+0x6e>
9000eb9c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000eb9e:	4290      	cmp	r0, r2
9000eba0:	d027      	beq.n	9000ebf2 <vQueueDelete+0x72>
9000eba2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000eba4:	4290      	cmp	r0, r2
9000eba6:	d014      	beq.n	9000ebd2 <vQueueDelete+0x52>
9000eba8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ebaa:	4290      	cmp	r0, r2
9000ebac:	d023      	beq.n	9000ebf6 <vQueueDelete+0x76>
9000ebae:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000ebb0:	4290      	cmp	r0, r2
9000ebb2:	d022      	beq.n	9000ebfa <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000ebb4:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000ebb8:	b14b      	cbz	r3, 9000ebce <vQueueDelete+0x4e>
}
9000ebba:	4770      	bx	lr
9000ebbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebc0:	f383 8811 	msr	BASEPRI, r3
9000ebc4:	f3bf 8f6f 	isb	sy
9000ebc8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ebcc:	e7fe      	b.n	9000ebcc <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000ebce:	f7fe be21 	b.w	9000d814 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ebd2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000ebd4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000ebd8:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000ec00 <vQueueDelete+0x80>
9000ebdc:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000ebe0:	e7e8      	b.n	9000ebb4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ebe2:	2200      	movs	r2, #0
9000ebe4:	e7f6      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebe6:	2201      	movs	r2, #1
9000ebe8:	e7f4      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebea:	2202      	movs	r2, #2
9000ebec:	e7f2      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebee:	2203      	movs	r2, #3
9000ebf0:	e7f0      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebf2:	2204      	movs	r2, #4
9000ebf4:	e7ee      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebf6:	2206      	movs	r2, #6
9000ebf8:	e7ec      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebfa:	2207      	movs	r2, #7
9000ebfc:	e7ea      	b.n	9000ebd4 <vQueueDelete+0x54>
9000ebfe:	bf00      	nop
	...
9000ec08:	24021318 	.word	0x24021318

9000ec0c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000ec0c:	4b12      	ldr	r3, [pc, #72]	@ (9000ec58 <vQueueAddToRegistry+0x4c>)
9000ec0e:	681a      	ldr	r2, [r3, #0]
9000ec10:	b17a      	cbz	r2, 9000ec32 <vQueueAddToRegistry+0x26>
9000ec12:	689a      	ldr	r2, [r3, #8]
9000ec14:	b162      	cbz	r2, 9000ec30 <vQueueAddToRegistry+0x24>
9000ec16:	691a      	ldr	r2, [r3, #16]
9000ec18:	b192      	cbz	r2, 9000ec40 <vQueueAddToRegistry+0x34>
9000ec1a:	699a      	ldr	r2, [r3, #24]
9000ec1c:	b192      	cbz	r2, 9000ec44 <vQueueAddToRegistry+0x38>
9000ec1e:	6a1a      	ldr	r2, [r3, #32]
9000ec20:	b192      	cbz	r2, 9000ec48 <vQueueAddToRegistry+0x3c>
9000ec22:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000ec24:	b192      	cbz	r2, 9000ec4c <vQueueAddToRegistry+0x40>
9000ec26:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ec28:	b192      	cbz	r2, 9000ec50 <vQueueAddToRegistry+0x44>
9000ec2a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ec2c:	b192      	cbz	r2, 9000ec54 <vQueueAddToRegistry+0x48>
	}
9000ec2e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ec30:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000ec32:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000ec36:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000ec3a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000ec3e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ec40:	2202      	movs	r2, #2
9000ec42:	e7f6      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec44:	2203      	movs	r2, #3
9000ec46:	e7f4      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec48:	2204      	movs	r2, #4
9000ec4a:	e7f2      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec4c:	2205      	movs	r2, #5
9000ec4e:	e7f0      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec50:	2206      	movs	r2, #6
9000ec52:	e7ee      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec54:	2207      	movs	r2, #7
9000ec56:	e7ec      	b.n	9000ec32 <vQueueAddToRegistry+0x26>
9000ec58:	24021318 	.word	0x24021318

9000ec5c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000ec5c:	b570      	push	{r4, r5, r6, lr}
9000ec5e:	4605      	mov	r5, r0
9000ec60:	460e      	mov	r6, r1
9000ec62:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000ec64:	f7fe fef6 	bl	9000da54 <vPortEnterCritical>
9000ec68:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000ec6c:	2bff      	cmp	r3, #255	@ 0xff
9000ec6e:	d102      	bne.n	9000ec76 <vQueueWaitForMessageRestricted+0x1a>
9000ec70:	2300      	movs	r3, #0
9000ec72:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000ec76:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000ec7a:	2bff      	cmp	r3, #255	@ 0xff
9000ec7c:	d102      	bne.n	9000ec84 <vQueueWaitForMessageRestricted+0x28>
9000ec7e:	2300      	movs	r3, #0
9000ec80:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000ec84:	f7fe ff08 	bl	9000da98 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000ec88:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000ec8a:	2b00      	cmp	r3, #0
9000ec8c:	d043      	beq.n	9000ed16 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000ec8e:	f7fe fee1 	bl	9000da54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ec92:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000ec96:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec98:	2c00      	cmp	r4, #0
9000ec9a:	dd14      	ble.n	9000ecc6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec9c:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000eca0:	e003      	b.n	9000ecaa <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000eca2:	1e63      	subs	r3, r4, #1
9000eca4:	b2da      	uxtb	r2, r3
9000eca6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eca8:	b16a      	cbz	r2, 9000ecc6 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecaa:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecae:	b153      	cbz	r3, 9000ecc6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecb0:	f000 fda8 	bl	9000f804 <xTaskRemoveFromEventList>
9000ecb4:	2800      	cmp	r0, #0
9000ecb6:	d0f4      	beq.n	9000eca2 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000ecb8:	f000 fe38 	bl	9000f92c <vTaskMissedYield>
			--cTxLock;
9000ecbc:	1e63      	subs	r3, r4, #1
9000ecbe:	b2da      	uxtb	r2, r3
9000ecc0:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ecc2:	2a00      	cmp	r2, #0
9000ecc4:	d1f1      	bne.n	9000ecaa <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ecc6:	23ff      	movs	r3, #255	@ 0xff
9000ecc8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eccc:	f7fe fee4 	bl	9000da98 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ecd0:	f7fe fec0 	bl	9000da54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ecd4:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000ecd8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ecda:	2c00      	cmp	r4, #0
9000ecdc:	dd14      	ble.n	9000ed08 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecde:	f105 0610 	add.w	r6, r5, #16
9000ece2:	e003      	b.n	9000ecec <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000ece4:	1e63      	subs	r3, r4, #1
9000ece6:	b2da      	uxtb	r2, r3
9000ece8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ecea:	b16a      	cbz	r2, 9000ed08 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecec:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecee:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecf0:	b153      	cbz	r3, 9000ed08 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecf2:	f000 fd87 	bl	9000f804 <xTaskRemoveFromEventList>
9000ecf6:	2800      	cmp	r0, #0
9000ecf8:	d0f4      	beq.n	9000ece4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000ecfa:	f000 fe17 	bl	9000f92c <vTaskMissedYield>
				--cRxLock;
9000ecfe:	1e63      	subs	r3, r4, #1
9000ed00:	b2da      	uxtb	r2, r3
9000ed02:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed04:	2a00      	cmp	r2, #0
9000ed06:	d1f1      	bne.n	9000ecec <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed08:	23ff      	movs	r3, #255	@ 0xff
9000ed0a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000ed0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000ed12:	f7fe bec1 	b.w	9000da98 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000ed16:	4622      	mov	r2, r4
9000ed18:	4631      	mov	r1, r6
9000ed1a:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000ed1e:	f000 fd27 	bl	9000f770 <vTaskPlaceOnEventListRestricted>
9000ed22:	e7b4      	b.n	9000ec8e <vQueueWaitForMessageRestricted+0x32>

9000ed24 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000ed24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ed28:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000ed2a:	f7fe fe93 	bl	9000da54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000ed2e:	4a33      	ldr	r2, [pc, #204]	@ (9000edfc <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
9000ed30:	4e33      	ldr	r6, [pc, #204]	@ (9000ee00 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
9000ed32:	6813      	ldr	r3, [r2, #0]
9000ed34:	3301      	adds	r3, #1
9000ed36:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000ed38:	6833      	ldr	r3, [r6, #0]
9000ed3a:	2b00      	cmp	r3, #0
9000ed3c:	d031      	beq.n	9000eda2 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000ed3e:	4c31      	ldr	r4, [pc, #196]	@ (9000ee04 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ed40:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000ed42:	6823      	ldr	r3, [r4, #0]
9000ed44:	b333      	cbz	r3, 9000ed94 <prvAddNewTaskToReadyList+0x70>
9000ed46:	4f30      	ldr	r7, [pc, #192]	@ (9000ee08 <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000ed48:	4a30      	ldr	r2, [pc, #192]	@ (9000ee0c <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000ed4a:	4931      	ldr	r1, [pc, #196]	@ (9000ee10 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
9000ed4c:	6813      	ldr	r3, [r2, #0]
9000ed4e:	3301      	adds	r3, #1
9000ed50:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000ed52:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000ed54:	680b      	ldr	r3, [r1, #0]
9000ed56:	4283      	cmp	r3, r0
9000ed58:	d200      	bcs.n	9000ed5c <prvAddNewTaskToReadyList+0x38>
9000ed5a:	6008      	str	r0, [r1, #0]
9000ed5c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ed60:	1d29      	adds	r1, r5, #4
9000ed62:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000ed66:	f7fe fdcf 	bl	9000d908 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000ed6a:	f7fe fe95 	bl	9000da98 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000ed6e:	6823      	ldr	r3, [r4, #0]
9000ed70:	b173      	cbz	r3, 9000ed90 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000ed72:	6832      	ldr	r2, [r6, #0]
9000ed74:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ed76:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000ed78:	429a      	cmp	r2, r3
9000ed7a:	d209      	bcs.n	9000ed90 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000ed7c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ed80:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ed84:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ed88:	f3bf 8f4f 	dsb	sy
9000ed8c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ed90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ed94:	6833      	ldr	r3, [r6, #0]
9000ed96:	4f1c      	ldr	r7, [pc, #112]	@ (9000ee08 <prvAddNewTaskToReadyList+0xe4>)
9000ed98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ed9a:	4283      	cmp	r3, r0
9000ed9c:	d8d4      	bhi.n	9000ed48 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ed9e:	6035      	str	r5, [r6, #0]
9000eda0:	e7d2      	b.n	9000ed48 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000eda2:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000eda4:	6813      	ldr	r3, [r2, #0]
9000eda6:	2b01      	cmp	r3, #1
9000eda8:	d003      	beq.n	9000edb2 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000edaa:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000edac:	4f16      	ldr	r7, [pc, #88]	@ (9000ee08 <prvAddNewTaskToReadyList+0xe4>)
9000edae:	4c15      	ldr	r4, [pc, #84]	@ (9000ee04 <prvAddNewTaskToReadyList+0xe0>)
9000edb0:	e7ca      	b.n	9000ed48 <prvAddNewTaskToReadyList+0x24>
9000edb2:	4f15      	ldr	r7, [pc, #84]	@ (9000ee08 <prvAddNewTaskToReadyList+0xe4>)
9000edb4:	463c      	mov	r4, r7
9000edb6:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000edba:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000edbc:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000edbe:	f7fe fd93 	bl	9000d8e8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000edc2:	45a0      	cmp	r8, r4
9000edc4:	d1f9      	bne.n	9000edba <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000edc6:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000ee2c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000edca:	4c12      	ldr	r4, [pc, #72]	@ (9000ee14 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9000edcc:	4640      	mov	r0, r8
9000edce:	f7fe fd8b 	bl	9000d8e8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000edd2:	4620      	mov	r0, r4
9000edd4:	f7fe fd88 	bl	9000d8e8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000edd8:	480f      	ldr	r0, [pc, #60]	@ (9000ee18 <prvAddNewTaskToReadyList+0xf4>)
9000edda:	f7fe fd85 	bl	9000d8e8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000edde:	480f      	ldr	r0, [pc, #60]	@ (9000ee1c <prvAddNewTaskToReadyList+0xf8>)
9000ede0:	f7fe fd82 	bl	9000d8e8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ede4:	480e      	ldr	r0, [pc, #56]	@ (9000ee20 <prvAddNewTaskToReadyList+0xfc>)
9000ede6:	f7fe fd7f 	bl	9000d8e8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000edea:	4b0e      	ldr	r3, [pc, #56]	@ (9000ee24 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000edec:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000edee:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000edf2:	4b0d      	ldr	r3, [pc, #52]	@ (9000ee28 <prvAddNewTaskToReadyList+0x104>)
9000edf4:	601c      	str	r4, [r3, #0]
9000edf6:	4c03      	ldr	r4, [pc, #12]	@ (9000ee04 <prvAddNewTaskToReadyList+0xe0>)
}
9000edf8:	e7a6      	b.n	9000ed48 <prvAddNewTaskToReadyList+0x24>
9000edfa:	bf00      	nop
9000edfc:	2402137c 	.word	0x2402137c
9000ee00:	24021850 	.word	0x24021850
9000ee04:	24021370 	.word	0x24021370
9000ee08:	240213f0 	.word	0x240213f0
9000ee0c:	24021360 	.word	0x24021360
9000ee10:	24021374 	.word	0x24021374
9000ee14:	240213c8 	.word	0x240213c8
9000ee18:	240213ac 	.word	0x240213ac
9000ee1c:	24021398 	.word	0x24021398
9000ee20:	24021380 	.word	0x24021380
9000ee24:	240213c4 	.word	0x240213c4
9000ee28:	240213c0 	.word	0x240213c0
9000ee2c:	240213dc 	.word	0x240213dc

9000ee30 <prvIdleTask>:
{
9000ee30:	b580      	push	{r7, lr}
9000ee32:	4c22      	ldr	r4, [pc, #136]	@ (9000eebc <prvIdleTask+0x8c>)
9000ee34:	4e22      	ldr	r6, [pc, #136]	@ (9000eec0 <prvIdleTask+0x90>)
9000ee36:	4d23      	ldr	r5, [pc, #140]	@ (9000eec4 <prvIdleTask+0x94>)
9000ee38:	4f23      	ldr	r7, [pc, #140]	@ (9000eec8 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ee3a:	6823      	ldr	r3, [r4, #0]
9000ee3c:	b353      	cbz	r3, 9000ee94 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000ee3e:	f7fe fe09 	bl	9000da54 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee42:	68f3      	ldr	r3, [r6, #12]
9000ee44:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee48:	f108 0004 	add.w	r0, r8, #4
9000ee4c:	f7fe fd82 	bl	9000d954 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ee50:	682b      	ldr	r3, [r5, #0]
9000ee52:	3b01      	subs	r3, #1
9000ee54:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ee56:	6823      	ldr	r3, [r4, #0]
9000ee58:	3b01      	subs	r3, #1
9000ee5a:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ee5c:	f7fe fe1c 	bl	9000da98 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ee60:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000ee64:	b163      	cbz	r3, 9000ee80 <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ee66:	2b01      	cmp	r3, #1
9000ee68:	d024      	beq.n	9000eeb4 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ee6a:	2b02      	cmp	r3, #2
9000ee6c:	d0e5      	beq.n	9000ee3a <prvIdleTask+0xa>
9000ee6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee72:	f383 8811 	msr	BASEPRI, r3
9000ee76:	f3bf 8f6f 	isb	sy
9000ee7a:	f3bf 8f4f 	dsb	sy
9000ee7e:	e7fe      	b.n	9000ee7e <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000ee80:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000ee84:	f7fe fcc6 	bl	9000d814 <vPortFree>
				vPortFree( pxTCB );
9000ee88:	4640      	mov	r0, r8
9000ee8a:	f7fe fcc3 	bl	9000d814 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ee8e:	6823      	ldr	r3, [r4, #0]
9000ee90:	2b00      	cmp	r3, #0
9000ee92:	d1d4      	bne.n	9000ee3e <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ee94:	683b      	ldr	r3, [r7, #0]
9000ee96:	2b01      	cmp	r3, #1
9000ee98:	d909      	bls.n	9000eeae <prvIdleTask+0x7e>
				taskYIELD();
9000ee9a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ee9e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eea2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eea6:	f3bf 8f4f 	dsb	sy
9000eeaa:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000eeae:	f7f4 fc5b 	bl	90003768 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000eeb2:	e7c2      	b.n	9000ee3a <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000eeb4:	4640      	mov	r0, r8
9000eeb6:	f7fe fcad 	bl	9000d814 <vPortFree>
9000eeba:	e7be      	b.n	9000ee3a <prvIdleTask+0xa>
9000eebc:	24021394 	.word	0x24021394
9000eec0:	24021398 	.word	0x24021398
9000eec4:	2402137c 	.word	0x2402137c
9000eec8:	240213f0 	.word	0x240213f0

9000eecc <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eecc:	4b49      	ldr	r3, [pc, #292]	@ (9000eff4 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000eece:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eed2:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000eed4:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eed6:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000eed8:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000eeda:	2e00      	cmp	r6, #0
9000eedc:	d03e      	beq.n	9000ef5c <xTaskIncrementTick.part.0+0x90>
9000eede:	4b46      	ldr	r3, [pc, #280]	@ (9000eff8 <xTaskIncrementTick.part.0+0x12c>)
9000eee0:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000eee2:	681b      	ldr	r3, [r3, #0]
9000eee4:	429e      	cmp	r6, r3
9000eee6:	d346      	bcc.n	9000ef76 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eee8:	4f44      	ldr	r7, [pc, #272]	@ (9000effc <xTaskIncrementTick.part.0+0x130>)
9000eeea:	683b      	ldr	r3, [r7, #0]
9000eeec:	681d      	ldr	r5, [r3, #0]
9000eeee:	2d00      	cmp	r5, #0
9000eef0:	d077      	beq.n	9000efe2 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000eef2:	2500      	movs	r5, #0
9000eef4:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000f00c <xTaskIncrementTick.part.0+0x140>
9000eef8:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000f010 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000eefc:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000f014 <xTaskIncrementTick.part.0+0x148>
9000ef00:	e020      	b.n	9000ef44 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef02:	f7fe fd27 	bl	9000d954 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ef06:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ef08:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ef0c:	b10b      	cbz	r3, 9000ef12 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ef0e:	f7fe fd21 	bl	9000d954 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ef12:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ef14:	4659      	mov	r1, fp
9000ef16:	f8d8 2000 	ldr.w	r2, [r8]
9000ef1a:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ef1e:	4293      	cmp	r3, r2
9000ef20:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ef24:	d901      	bls.n	9000ef2a <xTaskIncrementTick.part.0+0x5e>
9000ef26:	f8c8 3000 	str.w	r3, [r8]
9000ef2a:	f7fe fced 	bl	9000d908 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ef2e:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ef32:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ef34:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000ef36:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ef38:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ef3a:	4291      	cmp	r1, r2
9000ef3c:	bf28      	it	cs
9000ef3e:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ef40:	2b00      	cmp	r3, #0
9000ef42:	d052      	beq.n	9000efea <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef44:	683b      	ldr	r3, [r7, #0]
9000ef46:	68db      	ldr	r3, [r3, #12]
9000ef48:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ef4a:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef4c:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000ef50:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef52:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000ef54:	d2d5      	bcs.n	9000ef02 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000ef56:	9a01      	ldr	r2, [sp, #4]
9000ef58:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000ef5a:	e011      	b.n	9000ef80 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000ef5c:	4b27      	ldr	r3, [pc, #156]	@ (9000effc <xTaskIncrementTick.part.0+0x130>)
9000ef5e:	681a      	ldr	r2, [r3, #0]
9000ef60:	6812      	ldr	r2, [r2, #0]
9000ef62:	b30a      	cbz	r2, 9000efa8 <xTaskIncrementTick.part.0+0xdc>
9000ef64:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef68:	f383 8811 	msr	BASEPRI, r3
9000ef6c:	f3bf 8f6f 	isb	sy
9000ef70:	f3bf 8f4f 	dsb	sy
9000ef74:	e7fe      	b.n	9000ef74 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000ef76:	2500      	movs	r5, #0
9000ef78:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000f00c <xTaskIncrementTick.part.0+0x140>
9000ef7c:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000f010 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ef80:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ef84:	491e      	ldr	r1, [pc, #120]	@ (9000f000 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ef86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ef88:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ef8c:	009b      	lsls	r3, r3, #2
9000ef8e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000ef92:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000ef94:	2a02      	cmp	r2, #2
9000ef96:	bf28      	it	cs
9000ef98:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000ef9a:	2b00      	cmp	r3, #0
}
9000ef9c:	bf0c      	ite	eq
9000ef9e:	4628      	moveq	r0, r5
9000efa0:	2001      	movne	r0, #1
9000efa2:	b003      	add	sp, #12
9000efa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000efa8:	4a16      	ldr	r2, [pc, #88]	@ (9000f004 <xTaskIncrementTick.part.0+0x138>)
9000efaa:	6818      	ldr	r0, [r3, #0]
9000efac:	6811      	ldr	r1, [r2, #0]
9000efae:	6019      	str	r1, [r3, #0]
9000efb0:	4915      	ldr	r1, [pc, #84]	@ (9000f008 <xTaskIncrementTick.part.0+0x13c>)
9000efb2:	6010      	str	r0, [r2, #0]
9000efb4:	680a      	ldr	r2, [r1, #0]
9000efb6:	3201      	adds	r2, #1
9000efb8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000efba:	681a      	ldr	r2, [r3, #0]
9000efbc:	6812      	ldr	r2, [r2, #0]
9000efbe:	b93a      	cbnz	r2, 9000efd0 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000efc0:	4b0d      	ldr	r3, [pc, #52]	@ (9000eff8 <xTaskIncrementTick.part.0+0x12c>)
9000efc2:	461a      	mov	r2, r3
9000efc4:	9301      	str	r3, [sp, #4]
9000efc6:	f04f 33ff 	mov.w	r3, #4294967295
9000efca:	6013      	str	r3, [r2, #0]
9000efcc:	4613      	mov	r3, r2
9000efce:	e788      	b.n	9000eee2 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000efd0:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000efd2:	4a09      	ldr	r2, [pc, #36]	@ (9000eff8 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000efd4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000efd6:	9201      	str	r2, [sp, #4]
9000efd8:	68db      	ldr	r3, [r3, #12]
9000efda:	685b      	ldr	r3, [r3, #4]
9000efdc:	6013      	str	r3, [r2, #0]
9000efde:	4613      	mov	r3, r2
	}
}
9000efe0:	e77f      	b.n	9000eee2 <xTaskIncrementTick.part.0+0x16>
9000efe2:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000f00c <xTaskIncrementTick.part.0+0x140>
9000efe6:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f010 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efea:	f04f 33ff 	mov.w	r3, #4294967295
9000efee:	9a01      	ldr	r2, [sp, #4]
9000eff0:	6013      	str	r3, [r2, #0]
					break;
9000eff2:	e7c5      	b.n	9000ef80 <xTaskIncrementTick.part.0+0xb4>
9000eff4:	24021378 	.word	0x24021378
9000eff8:	2402135c 	.word	0x2402135c
9000effc:	240213c4 	.word	0x240213c4
9000f000:	24021368 	.word	0x24021368
9000f004:	240213c0 	.word	0x240213c0
9000f008:	24021364 	.word	0x24021364
9000f00c:	240213f0 	.word	0x240213f0
9000f010:	24021850 	.word	0x24021850
9000f014:	24021374 	.word	0x24021374

9000f018 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000f018:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000f01c:	4d42      	ldr	r5, [pc, #264]	@ (9000f128 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
9000f01e:	f7fe fd19 	bl	9000da54 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000f022:	682b      	ldr	r3, [r5, #0]
9000f024:	3b01      	subs	r3, #1
9000f026:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f028:	682b      	ldr	r3, [r5, #0]
9000f02a:	2b00      	cmp	r3, #0
9000f02c:	d165      	bne.n	9000f0fa <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000f02e:	4b3f      	ldr	r3, [pc, #252]	@ (9000f12c <xTaskResumeAll.part.0+0x114>)
9000f030:	681b      	ldr	r3, [r3, #0]
9000f032:	2b00      	cmp	r3, #0
9000f034:	d061      	beq.n	9000f0fa <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f036:	4e3e      	ldr	r6, [pc, #248]	@ (9000f130 <xTaskResumeAll.part.0+0x118>)
9000f038:	6833      	ldr	r3, [r6, #0]
9000f03a:	2b00      	cmp	r3, #0
9000f03c:	d070      	beq.n	9000f120 <xTaskResumeAll.part.0+0x108>
9000f03e:	4f3d      	ldr	r7, [pc, #244]	@ (9000f134 <xTaskResumeAll.part.0+0x11c>)
9000f040:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 9000f144 <xTaskResumeAll.part.0+0x12c>
9000f044:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 9000f148 <xTaskResumeAll.part.0+0x130>
9000f048:	f8df a100 	ldr.w	sl, [pc, #256]	@ 9000f14c <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f04c:	68f3      	ldr	r3, [r6, #12]
9000f04e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f050:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f054:	f104 0018 	add.w	r0, r4, #24
9000f058:	f7fe fc7c 	bl	9000d954 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f05c:	4658      	mov	r0, fp
9000f05e:	f7fe fc79 	bl	9000d954 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000f062:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f064:	683a      	ldr	r2, [r7, #0]
9000f066:	4659      	mov	r1, fp
9000f068:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000f06c:	4293      	cmp	r3, r2
9000f06e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000f072:	d900      	bls.n	9000f076 <xTaskResumeAll.part.0+0x5e>
9000f074:	603b      	str	r3, [r7, #0]
9000f076:	f7fe fc47 	bl	9000d908 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f07a:	f8d8 3000 	ldr.w	r3, [r8]
9000f07e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f080:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f082:	429a      	cmp	r2, r3
9000f084:	d33f      	bcc.n	9000f106 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
9000f086:	2301      	movs	r3, #1
9000f088:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f08c:	6833      	ldr	r3, [r6, #0]
9000f08e:	2b00      	cmp	r3, #0
9000f090:	d1dc      	bne.n	9000f04c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f092:	4b29      	ldr	r3, [pc, #164]	@ (9000f138 <xTaskResumeAll.part.0+0x120>)
9000f094:	681a      	ldr	r2, [r3, #0]
9000f096:	6812      	ldr	r2, [r2, #0]
9000f098:	2a00      	cmp	r2, #0
9000f09a:	d03c      	beq.n	9000f116 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f09c:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f09e:	4b27      	ldr	r3, [pc, #156]	@ (9000f13c <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f0a0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f0a2:	68d2      	ldr	r2, [r2, #12]
9000f0a4:	6852      	ldr	r2, [r2, #4]
9000f0a6:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000f0a8:	4e25      	ldr	r6, [pc, #148]	@ (9000f140 <xTaskResumeAll.part.0+0x128>)
9000f0aa:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000f0ac:	b194      	cbz	r4, 9000f0d4 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
9000f0ae:	2701      	movs	r7, #1
9000f0b0:	e006      	b.n	9000f0c0 <xTaskResumeAll.part.0+0xa8>
9000f0b2:	f7ff ff0b 	bl	9000eecc <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000f0b6:	b108      	cbz	r0, 9000f0bc <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
9000f0b8:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f0bc:	3c01      	subs	r4, #1
9000f0be:	d008      	beq.n	9000f0d2 <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f0c0:	682b      	ldr	r3, [r5, #0]
9000f0c2:	2b00      	cmp	r3, #0
9000f0c4:	d0f5      	beq.n	9000f0b2 <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
9000f0c6:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f0c8:	3c01      	subs	r4, #1
		++xPendedTicks;
9000f0ca:	f103 0301 	add.w	r3, r3, #1
9000f0ce:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f0d0:	d1f6      	bne.n	9000f0c0 <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
9000f0d2:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000f0d4:	f8da 3000 	ldr.w	r3, [sl]
9000f0d8:	b17b      	cbz	r3, 9000f0fa <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
9000f0da:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f0de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f0e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f0e6:	f3bf 8f4f 	dsb	sy
9000f0ea:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000f0ee:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f0f0:	f7fe fcd2 	bl	9000da98 <vPortExitCritical>
}
9000f0f4:	4620      	mov	r0, r4
9000f0f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000f0fa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000f0fc:	f7fe fccc 	bl	9000da98 <vPortExitCritical>
}
9000f100:	4620      	mov	r0, r4
9000f102:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f106:	6833      	ldr	r3, [r6, #0]
9000f108:	2b00      	cmp	r3, #0
9000f10a:	d19f      	bne.n	9000f04c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f10c:	4b0a      	ldr	r3, [pc, #40]	@ (9000f138 <xTaskResumeAll.part.0+0x120>)
9000f10e:	681a      	ldr	r2, [r3, #0]
9000f110:	6812      	ldr	r2, [r2, #0]
9000f112:	2a00      	cmp	r2, #0
9000f114:	d1c2      	bne.n	9000f09c <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
9000f116:	4b09      	ldr	r3, [pc, #36]	@ (9000f13c <xTaskResumeAll.part.0+0x124>)
9000f118:	f04f 32ff 	mov.w	r2, #4294967295
9000f11c:	601a      	str	r2, [r3, #0]
9000f11e:	e7c3      	b.n	9000f0a8 <xTaskResumeAll.part.0+0x90>
9000f120:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f14c <xTaskResumeAll.part.0+0x134>
9000f124:	e7c0      	b.n	9000f0a8 <xTaskResumeAll.part.0+0x90>
9000f126:	bf00      	nop
9000f128:	24021358 	.word	0x24021358
9000f12c:	2402137c 	.word	0x2402137c
9000f130:	240213ac 	.word	0x240213ac
9000f134:	24021374 	.word	0x24021374
9000f138:	240213c4 	.word	0x240213c4
9000f13c:	2402135c 	.word	0x2402135c
9000f140:	2402136c 	.word	0x2402136c
9000f144:	240213f0 	.word	0x240213f0
9000f148:	24021850 	.word	0x24021850
9000f14c:	24021368 	.word	0x24021368

9000f150 <xTaskCreateStatic>:
	{
9000f150:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f154:	b083      	sub	sp, #12
9000f156:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000f158:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000f15c:	b1bb      	cbz	r3, 9000f18e <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000f15e:	b16c      	cbz	r4, 9000f17c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f160:	2360      	movs	r3, #96	@ 0x60
9000f162:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f164:	9b01      	ldr	r3, [sp, #4]
9000f166:	2b60      	cmp	r3, #96	@ 0x60
9000f168:	d01a      	beq.n	9000f1a0 <xTaskCreateStatic+0x50>
9000f16a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f16e:	f383 8811 	msr	BASEPRI, r3
9000f172:	f3bf 8f6f 	isb	sy
9000f176:	f3bf 8f4f 	dsb	sy
9000f17a:	e7fe      	b.n	9000f17a <xTaskCreateStatic+0x2a>
9000f17c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f180:	f383 8811 	msr	BASEPRI, r3
9000f184:	f3bf 8f6f 	isb	sy
9000f188:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f18c:	e7fe      	b.n	9000f18c <xTaskCreateStatic+0x3c>
9000f18e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f192:	f383 8811 	msr	BASEPRI, r3
9000f196:	f3bf 8f6f 	isb	sy
9000f19a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f19e:	e7fe      	b.n	9000f19e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f1a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1a2:	0096      	lsls	r6, r2, #2
9000f1a4:	4607      	mov	r7, r0
9000f1a6:	460d      	mov	r5, r1
9000f1a8:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f1aa:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f1ac:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f1ae:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1b0:	4632      	mov	r2, r6
9000f1b2:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f1b4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1b8:	f01a fce2 	bl	90029b80 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1bc:	1f32      	subs	r2, r6, #4
9000f1be:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f1c0:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f1c2:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000f1c6:	2d00      	cmp	r5, #0
9000f1c8:	d068      	beq.n	9000f29c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1ca:	782b      	ldrb	r3, [r5, #0]
9000f1cc:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f1d0:	2b00      	cmp	r3, #0
9000f1d2:	d036      	beq.n	9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1d4:	786b      	ldrb	r3, [r5, #1]
9000f1d6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f1da:	b393      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1dc:	78ab      	ldrb	r3, [r5, #2]
9000f1de:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f1e2:	b373      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1e4:	78eb      	ldrb	r3, [r5, #3]
9000f1e6:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f1ea:	b353      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1ec:	792b      	ldrb	r3, [r5, #4]
9000f1ee:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f1f2:	b333      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1f4:	796b      	ldrb	r3, [r5, #5]
9000f1f6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f1fa:	b313      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1fc:	79ab      	ldrb	r3, [r5, #6]
9000f1fe:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f202:	b1f3      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f204:	79eb      	ldrb	r3, [r5, #7]
9000f206:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f20a:	b1d3      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f20c:	7a2b      	ldrb	r3, [r5, #8]
9000f20e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f212:	b1b3      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f214:	7a6b      	ldrb	r3, [r5, #9]
9000f216:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f21a:	b193      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f21c:	7aab      	ldrb	r3, [r5, #10]
9000f21e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f222:	b173      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f224:	7aeb      	ldrb	r3, [r5, #11]
9000f226:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f22a:	b153      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f22c:	7b2b      	ldrb	r3, [r5, #12]
9000f22e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f232:	b133      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f234:	7b6b      	ldrb	r3, [r5, #13]
9000f236:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f23a:	b113      	cbz	r3, 9000f242 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f23c:	7bab      	ldrb	r3, [r5, #14]
9000f23e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f242:	2300      	movs	r3, #0
9000f244:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f248:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000f24a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f24e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f250:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f252:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f256:	bf28      	it	cs
9000f258:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f25a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f25c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f25e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f262:	f7fe fb4d 	bl	9000d900 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f266:	f104 0018 	add.w	r0, r4, #24
9000f26a:	f7fe fb49 	bl	9000d900 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f26e:	4642      	mov	r2, r8
9000f270:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000f272:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f276:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f278:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f27a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f27c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f27e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f282:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f286:	f7fe fbb7 	bl	9000d9f8 <pxPortInitialiseStack>
9000f28a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f28c:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f28e:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f290:	f7ff fd48 	bl	9000ed24 <prvAddNewTaskToReadyList>
	}
9000f294:	4620      	mov	r0, r4
9000f296:	b003      	add	sp, #12
9000f298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f29c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f2a0:	e7d2      	b.n	9000f248 <xTaskCreateStatic+0xf8>
9000f2a2:	bf00      	nop

9000f2a4 <xTaskCreate>:
	{
9000f2a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f2a8:	0096      	lsls	r6, r2, #2
	{
9000f2aa:	4680      	mov	r8, r0
9000f2ac:	460d      	mov	r5, r1
9000f2ae:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f2b0:	4630      	mov	r0, r6
9000f2b2:	f7fe f9f1 	bl	9000d698 <pvPortMalloc>
			if( pxStack != NULL )
9000f2b6:	2800      	cmp	r0, #0
9000f2b8:	d07f      	beq.n	9000f3ba <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f2ba:	4607      	mov	r7, r0
9000f2bc:	2060      	movs	r0, #96	@ 0x60
9000f2be:	f7fe f9eb 	bl	9000d698 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f2c2:	4604      	mov	r4, r0
9000f2c4:	2800      	cmp	r0, #0
9000f2c6:	d075      	beq.n	9000f3b4 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f2c8:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f2ca:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f2cc:	4632      	mov	r2, r6
9000f2ce:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f2d0:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f2d4:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f2d6:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f2d8:	f01a fc52 	bl	90029b80 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f2dc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f2de:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f2e0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000f2e4:	2d00      	cmp	r5, #0
9000f2e6:	d06c      	beq.n	9000f3c2 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f2e8:	782b      	ldrb	r3, [r5, #0]
9000f2ea:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f2ee:	2b00      	cmp	r3, #0
9000f2f0:	d036      	beq.n	9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f2f2:	786b      	ldrb	r3, [r5, #1]
9000f2f4:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f2f8:	b393      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f2fa:	78ab      	ldrb	r3, [r5, #2]
9000f2fc:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f300:	b373      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f302:	78eb      	ldrb	r3, [r5, #3]
9000f304:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f308:	b353      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f30a:	792b      	ldrb	r3, [r5, #4]
9000f30c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f310:	b333      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f312:	796b      	ldrb	r3, [r5, #5]
9000f314:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f318:	b313      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f31a:	79ab      	ldrb	r3, [r5, #6]
9000f31c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f320:	b1f3      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f322:	79eb      	ldrb	r3, [r5, #7]
9000f324:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f328:	b1d3      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f32a:	7a2b      	ldrb	r3, [r5, #8]
9000f32c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f330:	b1b3      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f332:	7a6b      	ldrb	r3, [r5, #9]
9000f334:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f338:	b193      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f33a:	7aab      	ldrb	r3, [r5, #10]
9000f33c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f340:	b173      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f342:	7aeb      	ldrb	r3, [r5, #11]
9000f344:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f348:	b153      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f34a:	7b2b      	ldrb	r3, [r5, #12]
9000f34c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f350:	b133      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f352:	7b6b      	ldrb	r3, [r5, #13]
9000f354:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f358:	b113      	cbz	r3, 9000f360 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f35a:	7bab      	ldrb	r3, [r5, #14]
9000f35c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f360:	2300      	movs	r3, #0
9000f362:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f366:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f368:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f36a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f36c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f36e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f370:	bf28      	it	cs
9000f372:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f374:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f376:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f378:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f37c:	f7fe fac0 	bl	9000d900 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f380:	f104 0018 	add.w	r0, r4, #24
9000f384:	f7fe fabc 	bl	9000d900 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000f388:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f38a:	464a      	mov	r2, r9
9000f38c:	4641      	mov	r1, r8
9000f38e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f390:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f392:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f394:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f396:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f398:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f39c:	f7fe fb2c 	bl	9000d9f8 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f3a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f3a2:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f3a4:	b103      	cbz	r3, 9000f3a8 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f3a6:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f3a8:	4620      	mov	r0, r4
9000f3aa:	f7ff fcbb 	bl	9000ed24 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f3ae:	2001      	movs	r0, #1
	}
9000f3b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000f3b4:	4638      	mov	r0, r7
9000f3b6:	f7fe fa2d 	bl	9000d814 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f3ba:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f3be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f3c2:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f3c6:	e7ce      	b.n	9000f366 <xTaskCreate+0xc2>

9000f3c8 <vTaskDelay>:
	{
9000f3c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f3ca:	b950      	cbnz	r0, 9000f3e2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f3cc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f3d0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f3d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f3d8:	f3bf 8f4f 	dsb	sy
9000f3dc:	f3bf 8f6f 	isb	sy
	}
9000f3e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f3e2:	4d1e      	ldr	r5, [pc, #120]	@ (9000f45c <vTaskDelay+0x94>)
9000f3e4:	682b      	ldr	r3, [r5, #0]
9000f3e6:	b143      	cbz	r3, 9000f3fa <vTaskDelay+0x32>
9000f3e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f3ec:	f383 8811 	msr	BASEPRI, r3
9000f3f0:	f3bf 8f6f 	isb	sy
9000f3f4:	f3bf 8f4f 	dsb	sy
9000f3f8:	e7fe      	b.n	9000f3f8 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f3fa:	682b      	ldr	r3, [r5, #0]
9000f3fc:	4604      	mov	r4, r0
9000f3fe:	3301      	adds	r3, #1
9000f400:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f402:	4b17      	ldr	r3, [pc, #92]	@ (9000f460 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f404:	4e17      	ldr	r6, [pc, #92]	@ (9000f464 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f406:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f408:	6830      	ldr	r0, [r6, #0]
9000f40a:	3004      	adds	r0, #4
9000f40c:	f7fe faa2 	bl	9000d954 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f410:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f412:	6833      	ldr	r3, [r6, #0]
9000f414:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f416:	d315      	bcc.n	9000f444 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f418:	4b13      	ldr	r3, [pc, #76]	@ (9000f468 <vTaskDelay+0xa0>)
9000f41a:	6818      	ldr	r0, [r3, #0]
9000f41c:	6831      	ldr	r1, [r6, #0]
9000f41e:	3104      	adds	r1, #4
9000f420:	f7fe fa80 	bl	9000d924 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f424:	682b      	ldr	r3, [r5, #0]
9000f426:	b943      	cbnz	r3, 9000f43a <vTaskDelay+0x72>
9000f428:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f42c:	f383 8811 	msr	BASEPRI, r3
9000f430:	f3bf 8f6f 	isb	sy
9000f434:	f3bf 8f4f 	dsb	sy
9000f438:	e7fe      	b.n	9000f438 <vTaskDelay+0x70>
9000f43a:	f7ff fded 	bl	9000f018 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f43e:	2800      	cmp	r0, #0
9000f440:	d0c4      	beq.n	9000f3cc <vTaskDelay+0x4>
	}
9000f442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f444:	4b09      	ldr	r3, [pc, #36]	@ (9000f46c <vTaskDelay+0xa4>)
9000f446:	6818      	ldr	r0, [r3, #0]
9000f448:	6831      	ldr	r1, [r6, #0]
9000f44a:	3104      	adds	r1, #4
9000f44c:	f7fe fa6a 	bl	9000d924 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f450:	4b07      	ldr	r3, [pc, #28]	@ (9000f470 <vTaskDelay+0xa8>)
9000f452:	681a      	ldr	r2, [r3, #0]
9000f454:	4294      	cmp	r4, r2
9000f456:	d2e5      	bcs.n	9000f424 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f458:	601c      	str	r4, [r3, #0]
9000f45a:	e7e3      	b.n	9000f424 <vTaskDelay+0x5c>
9000f45c:	24021358 	.word	0x24021358
9000f460:	24021378 	.word	0x24021378
9000f464:	24021850 	.word	0x24021850
9000f468:	240213c0 	.word	0x240213c0
9000f46c:	240213c4 	.word	0x240213c4
9000f470:	2402135c 	.word	0x2402135c

9000f474 <vTaskStartScheduler>:
{
9000f474:	b570      	push	{r4, r5, r6, lr}
9000f476:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f478:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f47a:	4668      	mov	r0, sp
9000f47c:	aa02      	add	r2, sp, #8
9000f47e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f480:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f484:	f7fe f8ea 	bl	9000d65c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f488:	9d00      	ldr	r5, [sp, #0]
9000f48a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f48e:	b1b8      	cbz	r0, 9000f4c0 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f490:	b16d      	cbz	r5, 9000f4ae <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f492:	2260      	movs	r2, #96	@ 0x60
9000f494:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f496:	9a03      	ldr	r2, [sp, #12]
9000f498:	2a60      	cmp	r2, #96	@ 0x60
9000f49a:	d01a      	beq.n	9000f4d2 <vTaskStartScheduler+0x5e>
9000f49c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4a0:	f383 8811 	msr	BASEPRI, r3
9000f4a4:	f3bf 8f6f 	isb	sy
9000f4a8:	f3bf 8f4f 	dsb	sy
9000f4ac:	e7fe      	b.n	9000f4ac <vTaskStartScheduler+0x38>
9000f4ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4b2:	f383 8811 	msr	BASEPRI, r3
9000f4b6:	f3bf 8f6f 	isb	sy
9000f4ba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f4be:	e7fe      	b.n	9000f4be <vTaskStartScheduler+0x4a>
9000f4c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4c4:	f383 8811 	msr	BASEPRI, r3
9000f4c8:	f3bf 8f6f 	isb	sy
9000f4cc:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f4d0:	e7fe      	b.n	9000f4d0 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f4d2:	2202      	movs	r2, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f4d4:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f4d6:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f4d8:	4096      	lsls	r6, r2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f4da:	f885 205d 	strb.w	r2, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f4de:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f4e0:	4632      	mov	r2, r6
9000f4e2:	f01a fb4d 	bl	90029b80 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f4e6:	1f33      	subs	r3, r6, #4
9000f4e8:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f4ea:	1d28      	adds	r0, r5, #4
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f4ec:	4929      	ldr	r1, [pc, #164]	@ (9000f594 <vTaskStartScheduler+0x120>)
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f4ee:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f4f0:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000f4f4:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f4f6:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f4fa:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f4fe:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f500:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f504:	f7fe f9fc 	bl	9000d900 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f508:	f105 0018 	add.w	r0, r5, #24
9000f50c:	f7fe f9f8 	bl	9000d900 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f510:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f512:	4622      	mov	r2, r4
9000f514:	4920      	ldr	r1, [pc, #128]	@ (9000f598 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f516:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f518:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f51a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f51c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f51e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f520:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f522:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f526:	f7fe fa67 	bl	9000d9f8 <pxPortInitialiseStack>
9000f52a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f52c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f52e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f530:	f7ff fbf8 	bl	9000ed24 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f534:	f000 fc86 	bl	9000fe44 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f538:	2801      	cmp	r0, #1
9000f53a:	d00c      	beq.n	9000f556 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f53c:	3001      	adds	r0, #1
9000f53e:	d001      	beq.n	9000f544 <vTaskStartScheduler+0xd0>
}
9000f540:	b004      	add	sp, #16
9000f542:	bd70      	pop	{r4, r5, r6, pc}
9000f544:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f548:	f383 8811 	msr	BASEPRI, r3
9000f54c:	f3bf 8f6f 	isb	sy
9000f550:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f554:	e7fe      	b.n	9000f554 <vTaskStartScheduler+0xe0>
9000f556:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f55a:	f383 8811 	msr	BASEPRI, r3
9000f55e:	f3bf 8f6f 	isb	sy
9000f562:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f566:	4b0d      	ldr	r3, [pc, #52]	@ (9000f59c <vTaskStartScheduler+0x128>)
9000f568:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f56c:	490c      	ldr	r1, [pc, #48]	@ (9000f5a0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f56e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f570:	4b0c      	ldr	r3, [pc, #48]	@ (9000f5a4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f572:	4a0d      	ldr	r2, [pc, #52]	@ (9000f5a8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f574:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f576:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f578:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f57a:	b143      	cbz	r3, 9000f58e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f57c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f57e:	b10b      	cbz	r3, 9000f584 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f580:	2000      	movs	r0, #0
9000f582:	4798      	blx	r3
}
9000f584:	b004      	add	sp, #16
9000f586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f58a:	f7fe baf5 	b.w	9000db78 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f58e:	6813      	ldr	r3, [r2, #0]
9000f590:	e7f4      	b.n	9000f57c <vTaskStartScheduler+0x108>
9000f592:	bf00      	nop
9000f594:	454c4449 	.word	0x454c4449
9000f598:	9000ee31 	.word	0x9000ee31
9000f59c:	2402135c 	.word	0x2402135c
9000f5a0:	24021370 	.word	0x24021370
9000f5a4:	24021378 	.word	0x24021378
9000f5a8:	24021850 	.word	0x24021850

9000f5ac <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f5ac:	4a02      	ldr	r2, [pc, #8]	@ (9000f5b8 <vTaskSuspendAll+0xc>)
9000f5ae:	6813      	ldr	r3, [r2, #0]
9000f5b0:	3301      	adds	r3, #1
9000f5b2:	6013      	str	r3, [r2, #0]
}
9000f5b4:	4770      	bx	lr
9000f5b6:	bf00      	nop
9000f5b8:	24021358 	.word	0x24021358

9000f5bc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f5bc:	4b06      	ldr	r3, [pc, #24]	@ (9000f5d8 <xTaskResumeAll+0x1c>)
9000f5be:	681b      	ldr	r3, [r3, #0]
9000f5c0:	b943      	cbnz	r3, 9000f5d4 <xTaskResumeAll+0x18>
9000f5c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f5c6:	f383 8811 	msr	BASEPRI, r3
9000f5ca:	f3bf 8f6f 	isb	sy
9000f5ce:	f3bf 8f4f 	dsb	sy
9000f5d2:	e7fe      	b.n	9000f5d2 <xTaskResumeAll+0x16>
9000f5d4:	f7ff bd20 	b.w	9000f018 <xTaskResumeAll.part.0>
9000f5d8:	24021358 	.word	0x24021358

9000f5dc <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f5dc:	4b01      	ldr	r3, [pc, #4]	@ (9000f5e4 <xTaskGetTickCount+0x8>)
9000f5de:	6818      	ldr	r0, [r3, #0]
}
9000f5e0:	4770      	bx	lr
9000f5e2:	bf00      	nop
9000f5e4:	24021378 	.word	0x24021378

9000f5e8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f5e8:	4b05      	ldr	r3, [pc, #20]	@ (9000f600 <xTaskIncrementTick+0x18>)
9000f5ea:	681b      	ldr	r3, [r3, #0]
9000f5ec:	b90b      	cbnz	r3, 9000f5f2 <xTaskIncrementTick+0xa>
9000f5ee:	f7ff bc6d 	b.w	9000eecc <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f5f2:	4a04      	ldr	r2, [pc, #16]	@ (9000f604 <xTaskIncrementTick+0x1c>)
}
9000f5f4:	2000      	movs	r0, #0
		++xPendedTicks;
9000f5f6:	6813      	ldr	r3, [r2, #0]
9000f5f8:	3301      	adds	r3, #1
9000f5fa:	6013      	str	r3, [r2, #0]
}
9000f5fc:	4770      	bx	lr
9000f5fe:	bf00      	nop
9000f600:	24021358 	.word	0x24021358
9000f604:	2402136c 	.word	0x2402136c

9000f608 <vTaskSetApplicationTaskTag>:
	{
9000f608:	b538      	push	{r3, r4, r5, lr}
9000f60a:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f60c:	b138      	cbz	r0, 9000f61e <vTaskSetApplicationTaskTag+0x16>
9000f60e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f610:	f7fe fa20 	bl	9000da54 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f614:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f61a:	f7fe ba3d 	b.w	9000da98 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f61e:	4b04      	ldr	r3, [pc, #16]	@ (9000f630 <vTaskSetApplicationTaskTag+0x28>)
9000f620:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f622:	f7fe fa17 	bl	9000da54 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f626:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f628:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f62c:	f7fe ba34 	b.w	9000da98 <vPortExitCritical>
9000f630:	24021850 	.word	0x24021850

9000f634 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f634:	4b27      	ldr	r3, [pc, #156]	@ (9000f6d4 <vTaskSwitchContext+0xa0>)
9000f636:	681b      	ldr	r3, [r3, #0]
9000f638:	b11b      	cbz	r3, 9000f642 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f63a:	4b27      	ldr	r3, [pc, #156]	@ (9000f6d8 <vTaskSwitchContext+0xa4>)
9000f63c:	2201      	movs	r2, #1
9000f63e:	601a      	str	r2, [r3, #0]
9000f640:	4770      	bx	lr
{
9000f642:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f644:	4a24      	ldr	r2, [pc, #144]	@ (9000f6d8 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f646:	4c25      	ldr	r4, [pc, #148]	@ (9000f6dc <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f648:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f64a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f64c:	2b00      	cmp	r3, #0
9000f64e:	d036      	beq.n	9000f6be <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f650:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f652:	b10b      	cbz	r3, 9000f658 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f654:	2001      	movs	r0, #1
9000f656:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f658:	4d21      	ldr	r5, [pc, #132]	@ (9000f6e0 <vTaskSwitchContext+0xac>)
9000f65a:	4922      	ldr	r1, [pc, #136]	@ (9000f6e4 <vTaskSwitchContext+0xb0>)
9000f65c:	682b      	ldr	r3, [r5, #0]
9000f65e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f662:	0098      	lsls	r0, r3, #2
9000f664:	0092      	lsls	r2, r2, #2
9000f666:	588a      	ldr	r2, [r1, r2]
9000f668:	b942      	cbnz	r2, 9000f67c <vTaskSwitchContext+0x48>
9000f66a:	b1fb      	cbz	r3, 9000f6ac <vTaskSwitchContext+0x78>
9000f66c:	3b01      	subs	r3, #1
9000f66e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f672:	0098      	lsls	r0, r3, #2
9000f674:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f678:	2a00      	cmp	r2, #0
9000f67a:	d0f6      	beq.n	9000f66a <vTaskSwitchContext+0x36>
9000f67c:	4418      	add	r0, r3
9000f67e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f682:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f686:	4662      	mov	r2, ip
9000f688:	6849      	ldr	r1, [r1, #4]
9000f68a:	3208      	adds	r2, #8
9000f68c:	4291      	cmp	r1, r2
9000f68e:	f8cc 1004 	str.w	r1, [ip, #4]
9000f692:	d01b      	beq.n	9000f6cc <vTaskSwitchContext+0x98>
9000f694:	68ca      	ldr	r2, [r1, #12]
9000f696:	6022      	str	r2, [r4, #0]
9000f698:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f69a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f69c:	b1a3      	cbz	r3, 9000f6c8 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f69e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f6a0:	b11b      	cbz	r3, 9000f6aa <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f6a2:	2000      	movs	r0, #0
}
9000f6a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f6a8:	4718      	bx	r3
}
9000f6aa:	bd70      	pop	{r4, r5, r6, pc}
9000f6ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6b0:	f383 8811 	msr	BASEPRI, r3
9000f6b4:	f3bf 8f6f 	isb	sy
9000f6b8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f6bc:	e7fe      	b.n	9000f6bc <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f6be:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f6c0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f6c2:	2b00      	cmp	r3, #0
9000f6c4:	d1c6      	bne.n	9000f654 <vTaskSwitchContext+0x20>
9000f6c6:	e7c7      	b.n	9000f658 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f6c8:	6823      	ldr	r3, [r4, #0]
9000f6ca:	e7e8      	b.n	9000f69e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f6cc:	6849      	ldr	r1, [r1, #4]
9000f6ce:	f8cc 1004 	str.w	r1, [ip, #4]
9000f6d2:	e7df      	b.n	9000f694 <vTaskSwitchContext+0x60>
9000f6d4:	24021358 	.word	0x24021358
9000f6d8:	24021368 	.word	0x24021368
9000f6dc:	24021850 	.word	0x24021850
9000f6e0:	24021374 	.word	0x24021374
9000f6e4:	240213f0 	.word	0x240213f0

9000f6e8 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f6e8:	b1f0      	cbz	r0, 9000f728 <vTaskPlaceOnEventList+0x40>
{
9000f6ea:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f6ec:	4d1a      	ldr	r5, [pc, #104]	@ (9000f758 <vTaskPlaceOnEventList+0x70>)
9000f6ee:	460c      	mov	r4, r1
9000f6f0:	6829      	ldr	r1, [r5, #0]
9000f6f2:	3118      	adds	r1, #24
9000f6f4:	f7fe f916 	bl	9000d924 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f6f8:	4b18      	ldr	r3, [pc, #96]	@ (9000f75c <vTaskPlaceOnEventList+0x74>)
9000f6fa:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f6fc:	6828      	ldr	r0, [r5, #0]
9000f6fe:	3004      	adds	r0, #4
9000f700:	f7fe f928 	bl	9000d954 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f704:	1c63      	adds	r3, r4, #1
9000f706:	d020      	beq.n	9000f74a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f708:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f70a:	682b      	ldr	r3, [r5, #0]
9000f70c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f70e:	d214      	bcs.n	9000f73a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f710:	4b13      	ldr	r3, [pc, #76]	@ (9000f760 <vTaskPlaceOnEventList+0x78>)
9000f712:	6818      	ldr	r0, [r3, #0]
9000f714:	6829      	ldr	r1, [r5, #0]
9000f716:	3104      	adds	r1, #4
9000f718:	f7fe f904 	bl	9000d924 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f71c:	4b11      	ldr	r3, [pc, #68]	@ (9000f764 <vTaskPlaceOnEventList+0x7c>)
9000f71e:	681a      	ldr	r2, [r3, #0]
9000f720:	4294      	cmp	r4, r2
9000f722:	d200      	bcs.n	9000f726 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f724:	601c      	str	r4, [r3, #0]
}
9000f726:	bd70      	pop	{r4, r5, r6, pc}
9000f728:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f72c:	f383 8811 	msr	BASEPRI, r3
9000f730:	f3bf 8f6f 	isb	sy
9000f734:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f738:	e7fe      	b.n	9000f738 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f73a:	4b0b      	ldr	r3, [pc, #44]	@ (9000f768 <vTaskPlaceOnEventList+0x80>)
9000f73c:	6818      	ldr	r0, [r3, #0]
9000f73e:	6829      	ldr	r1, [r5, #0]
}
9000f740:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f744:	3104      	adds	r1, #4
9000f746:	f7fe b8ed 	b.w	9000d924 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f74a:	6829      	ldr	r1, [r5, #0]
9000f74c:	4807      	ldr	r0, [pc, #28]	@ (9000f76c <vTaskPlaceOnEventList+0x84>)
9000f74e:	3104      	adds	r1, #4
}
9000f750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f754:	f7fe b8d8 	b.w	9000d908 <vListInsertEnd>
9000f758:	24021850 	.word	0x24021850
9000f75c:	24021378 	.word	0x24021378
9000f760:	240213c4 	.word	0x240213c4
9000f764:	2402135c 	.word	0x2402135c
9000f768:	240213c0 	.word	0x240213c0
9000f76c:	24021380 	.word	0x24021380

9000f770 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f770:	b350      	cbz	r0, 9000f7c8 <vTaskPlaceOnEventListRestricted+0x58>
	{
9000f772:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f774:	4e1d      	ldr	r6, [pc, #116]	@ (9000f7ec <vTaskPlaceOnEventListRestricted+0x7c>)
9000f776:	460c      	mov	r4, r1
9000f778:	4615      	mov	r5, r2
9000f77a:	6831      	ldr	r1, [r6, #0]
9000f77c:	3118      	adds	r1, #24
9000f77e:	f7fe f8c3 	bl	9000d908 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f782:	4b1b      	ldr	r3, [pc, #108]	@ (9000f7f0 <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
9000f784:	b15d      	cbz	r5, 9000f79e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f786:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f788:	6830      	ldr	r0, [r6, #0]
9000f78a:	3004      	adds	r0, #4
9000f78c:	f7fe f8e2 	bl	9000d954 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f790:	6831      	ldr	r1, [r6, #0]
9000f792:	4818      	ldr	r0, [pc, #96]	@ (9000f7f4 <vTaskPlaceOnEventListRestricted+0x84>)
9000f794:	3104      	adds	r1, #4
	}
9000f796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f79a:	f7fe b8b5 	b.w	9000d908 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f79e:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f7a0:	6830      	ldr	r0, [r6, #0]
9000f7a2:	3004      	adds	r0, #4
9000f7a4:	f7fe f8d6 	bl	9000d954 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f7a8:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f7aa:	6833      	ldr	r3, [r6, #0]
9000f7ac:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f7ae:	d214      	bcs.n	9000f7da <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f7b0:	4b11      	ldr	r3, [pc, #68]	@ (9000f7f8 <vTaskPlaceOnEventListRestricted+0x88>)
9000f7b2:	6818      	ldr	r0, [r3, #0]
9000f7b4:	6831      	ldr	r1, [r6, #0]
9000f7b6:	3104      	adds	r1, #4
9000f7b8:	f7fe f8b4 	bl	9000d924 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f7bc:	4b0f      	ldr	r3, [pc, #60]	@ (9000f7fc <vTaskPlaceOnEventListRestricted+0x8c>)
9000f7be:	681a      	ldr	r2, [r3, #0]
9000f7c0:	4294      	cmp	r4, r2
9000f7c2:	d200      	bcs.n	9000f7c6 <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
9000f7c4:	601c      	str	r4, [r3, #0]
	}
9000f7c6:	bd70      	pop	{r4, r5, r6, pc}
9000f7c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7cc:	f383 8811 	msr	BASEPRI, r3
9000f7d0:	f3bf 8f6f 	isb	sy
9000f7d4:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f7d8:	e7fe      	b.n	9000f7d8 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f7da:	4b09      	ldr	r3, [pc, #36]	@ (9000f800 <vTaskPlaceOnEventListRestricted+0x90>)
9000f7dc:	6818      	ldr	r0, [r3, #0]
9000f7de:	6831      	ldr	r1, [r6, #0]
	}
9000f7e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f7e4:	3104      	adds	r1, #4
9000f7e6:	f7fe b89d 	b.w	9000d924 <vListInsert>
9000f7ea:	bf00      	nop
9000f7ec:	24021850 	.word	0x24021850
9000f7f0:	24021378 	.word	0x24021378
9000f7f4:	24021380 	.word	0x24021380
9000f7f8:	240213c4 	.word	0x240213c4
9000f7fc:	2402135c 	.word	0x2402135c
9000f800:	240213c0 	.word	0x240213c0

9000f804 <xTaskRemoveFromEventList>:
{
9000f804:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f806:	68c3      	ldr	r3, [r0, #12]
9000f808:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000f80a:	b34c      	cbz	r4, 9000f860 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f80c:	f104 0518 	add.w	r5, r4, #24
9000f810:	4628      	mov	r0, r5
9000f812:	f7fe f89f 	bl	9000d954 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f816:	4b18      	ldr	r3, [pc, #96]	@ (9000f878 <xTaskRemoveFromEventList+0x74>)
9000f818:	681b      	ldr	r3, [r3, #0]
9000f81a:	b173      	cbz	r3, 9000f83a <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f81c:	4629      	mov	r1, r5
9000f81e:	4817      	ldr	r0, [pc, #92]	@ (9000f87c <xTaskRemoveFromEventList+0x78>)
9000f820:	f7fe f872 	bl	9000d908 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f824:	4b16      	ldr	r3, [pc, #88]	@ (9000f880 <xTaskRemoveFromEventList+0x7c>)
9000f826:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f828:	681b      	ldr	r3, [r3, #0]
9000f82a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f82c:	429a      	cmp	r2, r3
9000f82e:	d920      	bls.n	9000f872 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000f830:	2301      	movs	r3, #1
9000f832:	4a14      	ldr	r2, [pc, #80]	@ (9000f884 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000f834:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f836:	6013      	str	r3, [r2, #0]
}
9000f838:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f83a:	1d25      	adds	r5, r4, #4
9000f83c:	4628      	mov	r0, r5
9000f83e:	f7fe f889 	bl	9000d954 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f842:	4b11      	ldr	r3, [pc, #68]	@ (9000f888 <xTaskRemoveFromEventList+0x84>)
9000f844:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f846:	681a      	ldr	r2, [r3, #0]
9000f848:	4290      	cmp	r0, r2
9000f84a:	d900      	bls.n	9000f84e <xTaskRemoveFromEventList+0x4a>
9000f84c:	6018      	str	r0, [r3, #0]
9000f84e:	4b0f      	ldr	r3, [pc, #60]	@ (9000f88c <xTaskRemoveFromEventList+0x88>)
9000f850:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f854:	4629      	mov	r1, r5
9000f856:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f85a:	f7fe f855 	bl	9000d908 <vListInsertEnd>
9000f85e:	e7e1      	b.n	9000f824 <xTaskRemoveFromEventList+0x20>
9000f860:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f864:	f383 8811 	msr	BASEPRI, r3
9000f868:	f3bf 8f6f 	isb	sy
9000f86c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f870:	e7fe      	b.n	9000f870 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000f872:	2000      	movs	r0, #0
}
9000f874:	bd38      	pop	{r3, r4, r5, pc}
9000f876:	bf00      	nop
9000f878:	24021358 	.word	0x24021358
9000f87c:	240213ac 	.word	0x240213ac
9000f880:	24021850 	.word	0x24021850
9000f884:	24021368 	.word	0x24021368
9000f888:	24021374 	.word	0x24021374
9000f88c:	240213f0 	.word	0x240213f0

9000f890 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f890:	4a03      	ldr	r2, [pc, #12]	@ (9000f8a0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f892:	4b04      	ldr	r3, [pc, #16]	@ (9000f8a4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f894:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f896:	681b      	ldr	r3, [r3, #0]
9000f898:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f89c:	4770      	bx	lr
9000f89e:	bf00      	nop
9000f8a0:	24021364 	.word	0x24021364
9000f8a4:	24021378 	.word	0x24021378

9000f8a8 <xTaskCheckForTimeOut>:
{
9000f8a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000f8aa:	b308      	cbz	r0, 9000f8f0 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000f8ac:	460d      	mov	r5, r1
9000f8ae:	b1b1      	cbz	r1, 9000f8de <xTaskCheckForTimeOut+0x36>
9000f8b0:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f8b2:	f7fe f8cf 	bl	9000da54 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f8b6:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f8b8:	4a1a      	ldr	r2, [pc, #104]	@ (9000f924 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f8ba:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f8bc:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f8be:	d02c      	beq.n	9000f91a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f8c0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000f928 <xTaskCheckForTimeOut+0x80>
9000f8c4:	6826      	ldr	r6, [r4, #0]
9000f8c6:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f8ca:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f8cc:	42be      	cmp	r6, r7
9000f8ce:	d018      	beq.n	9000f902 <xTaskCheckForTimeOut+0x5a>
9000f8d0:	4288      	cmp	r0, r1
9000f8d2:	d816      	bhi.n	9000f902 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000f8d4:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f8d6:	f7fe f8df 	bl	9000da98 <vPortExitCritical>
}
9000f8da:	4620      	mov	r0, r4
9000f8dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000f8de:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8e2:	f383 8811 	msr	BASEPRI, r3
9000f8e6:	f3bf 8f6f 	isb	sy
9000f8ea:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f8ee:	e7fe      	b.n	9000f8ee <xTaskCheckForTimeOut+0x46>
9000f8f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8f4:	f383 8811 	msr	BASEPRI, r3
9000f8f8:	f3bf 8f6f 	isb	sy
9000f8fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f900:	e7fe      	b.n	9000f900 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f902:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f906:	4573      	cmp	r3, lr
9000f908:	d909      	bls.n	9000f91e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000f90a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f90c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f910:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f912:	4403      	add	r3, r0
9000f914:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f916:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000f91a:	2400      	movs	r4, #0
9000f91c:	e7db      	b.n	9000f8d6 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000f91e:	2300      	movs	r3, #0
9000f920:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f922:	e7d7      	b.n	9000f8d4 <xTaskCheckForTimeOut+0x2c>
9000f924:	24021378 	.word	0x24021378
9000f928:	24021364 	.word	0x24021364

9000f92c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f92c:	4b01      	ldr	r3, [pc, #4]	@ (9000f934 <vTaskMissedYield+0x8>)
9000f92e:	2201      	movs	r2, #1
9000f930:	601a      	str	r2, [r3, #0]
}
9000f932:	4770      	bx	lr
9000f934:	24021368 	.word	0x24021368

9000f938 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f938:	4b05      	ldr	r3, [pc, #20]	@ (9000f950 <xTaskGetSchedulerState+0x18>)
9000f93a:	681b      	ldr	r3, [r3, #0]
9000f93c:	b133      	cbz	r3, 9000f94c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f93e:	4b05      	ldr	r3, [pc, #20]	@ (9000f954 <xTaskGetSchedulerState+0x1c>)
9000f940:	6818      	ldr	r0, [r3, #0]
9000f942:	fab0 f080 	clz	r0, r0
9000f946:	0940      	lsrs	r0, r0, #5
9000f948:	0040      	lsls	r0, r0, #1
9000f94a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f94c:	2001      	movs	r0, #1
	}
9000f94e:	4770      	bx	lr
9000f950:	24021370 	.word	0x24021370
9000f954:	24021358 	.word	0x24021358

9000f958 <xTaskPriorityInherit>:
	{
9000f958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000f95a:	4604      	mov	r4, r0
9000f95c:	b1c8      	cbz	r0, 9000f992 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f95e:	4d1b      	ldr	r5, [pc, #108]	@ (9000f9cc <xTaskPriorityInherit+0x74>)
9000f960:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000f962:	682a      	ldr	r2, [r5, #0]
9000f964:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f966:	4293      	cmp	r3, r2
9000f968:	d214      	bcs.n	9000f994 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f96a:	6982      	ldr	r2, [r0, #24]
9000f96c:	2a00      	cmp	r2, #0
9000f96e:	db04      	blt.n	9000f97a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f970:	682a      	ldr	r2, [r5, #0]
9000f972:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f974:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000f978:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f97a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f97e:	4e14      	ldr	r6, [pc, #80]	@ (9000f9d0 <xTaskPriorityInherit+0x78>)
9000f980:	6962      	ldr	r2, [r4, #20]
9000f982:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f986:	429a      	cmp	r2, r3
9000f988:	d00c      	beq.n	9000f9a4 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f98a:	682b      	ldr	r3, [r5, #0]
9000f98c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f98e:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000f990:	2001      	movs	r0, #1
	}
9000f992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f994:	682b      	ldr	r3, [r5, #0]
9000f996:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000f998:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f99a:	4298      	cmp	r0, r3
9000f99c:	bf2c      	ite	cs
9000f99e:	2000      	movcs	r0, #0
9000f9a0:	2001      	movcc	r0, #1
	}
9000f9a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f9a4:	1d27      	adds	r7, r4, #4
9000f9a6:	4638      	mov	r0, r7
9000f9a8:	f7fd ffd4 	bl	9000d954 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f9ac:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f9ae:	4b09      	ldr	r3, [pc, #36]	@ (9000f9d4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f9b0:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f9b2:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f9b4:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f9b6:	4290      	cmp	r0, r2
9000f9b8:	d900      	bls.n	9000f9bc <xTaskPriorityInherit+0x64>
9000f9ba:	6018      	str	r0, [r3, #0]
9000f9bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f9c0:	4639      	mov	r1, r7
9000f9c2:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f9c6:	f7fd ff9f 	bl	9000d908 <vListInsertEnd>
9000f9ca:	e7e1      	b.n	9000f990 <xTaskPriorityInherit+0x38>
9000f9cc:	24021850 	.word	0x24021850
9000f9d0:	240213f0 	.word	0x240213f0
9000f9d4:	24021374 	.word	0x24021374

9000f9d8 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f9d8:	b308      	cbz	r0, 9000fa1e <xTaskPriorityDisinherit+0x46>
	{
9000f9da:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f9dc:	4b1d      	ldr	r3, [pc, #116]	@ (9000fa54 <xTaskPriorityDisinherit+0x7c>)
9000f9de:	681c      	ldr	r4, [r3, #0]
9000f9e0:	4284      	cmp	r4, r0
9000f9e2:	d008      	beq.n	9000f9f6 <xTaskPriorityDisinherit+0x1e>
9000f9e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9e8:	f383 8811 	msr	BASEPRI, r3
9000f9ec:	f3bf 8f6f 	isb	sy
9000f9f0:	f3bf 8f4f 	dsb	sy
9000f9f4:	e7fe      	b.n	9000f9f4 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000f9f6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000f9f8:	b143      	cbz	r3, 9000fa0c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f9fa:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f9fc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f9fe:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000fa00:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000fa02:	4291      	cmp	r1, r2
9000fa04:	d000      	beq.n	9000fa08 <xTaskPriorityDisinherit+0x30>
9000fa06:	b163      	cbz	r3, 9000fa22 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000fa08:	2000      	movs	r0, #0
	}
9000fa0a:	bd38      	pop	{r3, r4, r5, pc}
9000fa0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa10:	f383 8811 	msr	BASEPRI, r3
9000fa14:	f3bf 8f6f 	isb	sy
9000fa18:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000fa1c:	e7fe      	b.n	9000fa1c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000fa1e:	2000      	movs	r0, #0
	}
9000fa20:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fa22:	1d25      	adds	r5, r4, #4
9000fa24:	4628      	mov	r0, r5
9000fa26:	f7fd ff95 	bl	9000d954 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000fa2a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000fa2c:	4b0a      	ldr	r3, [pc, #40]	@ (9000fa58 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fa2e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000fa32:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fa34:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000fa36:	681a      	ldr	r2, [r3, #0]
9000fa38:	4290      	cmp	r0, r2
9000fa3a:	d900      	bls.n	9000fa3e <xTaskPriorityDisinherit+0x66>
9000fa3c:	6018      	str	r0, [r3, #0]
9000fa3e:	4b07      	ldr	r3, [pc, #28]	@ (9000fa5c <xTaskPriorityDisinherit+0x84>)
9000fa40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fa44:	4629      	mov	r1, r5
9000fa46:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000fa4a:	f7fd ff5d 	bl	9000d908 <vListInsertEnd>
					xReturn = pdTRUE;
9000fa4e:	2001      	movs	r0, #1
	}
9000fa50:	bd38      	pop	{r3, r4, r5, pc}
9000fa52:	bf00      	nop
9000fa54:	24021850 	.word	0x24021850
9000fa58:	24021374 	.word	0x24021374
9000fa5c:	240213f0 	.word	0x240213f0

9000fa60 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000fa60:	2800      	cmp	r0, #0
9000fa62:	d03c      	beq.n	9000fade <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000fa64:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000fa66:	b570      	push	{r4, r5, r6, lr}
9000fa68:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000fa6a:	b14b      	cbz	r3, 9000fa80 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000fa6c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000fa6e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000fa70:	4281      	cmp	r1, r0
9000fa72:	bf38      	it	cc
9000fa74:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000fa76:	2b01      	cmp	r3, #1
9000fa78:	d101      	bne.n	9000fa7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000fa7a:	428a      	cmp	r2, r1
9000fa7c:	d109      	bne.n	9000fa92 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000fa7e:	bd70      	pop	{r4, r5, r6, pc}
9000fa80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa84:	f383 8811 	msr	BASEPRI, r3
9000fa88:	f3bf 8f6f 	isb	sy
9000fa8c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000fa90:	e7fe      	b.n	9000fa90 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000fa92:	4b18      	ldr	r3, [pc, #96]	@ (9000faf4 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000fa94:	681b      	ldr	r3, [r3, #0]
9000fa96:	42a3      	cmp	r3, r4
9000fa98:	d022      	beq.n	9000fae0 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000fa9a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000fa9c:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000fa9e:	2b00      	cmp	r3, #0
9000faa0:	db02      	blt.n	9000faa8 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000faa2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000faa6:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000faa8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000faac:	4d12      	ldr	r5, [pc, #72]	@ (9000faf8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000faae:	6961      	ldr	r1, [r4, #20]
9000fab0:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000fab4:	4299      	cmp	r1, r3
9000fab6:	d1e2      	bne.n	9000fa7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fab8:	1d26      	adds	r6, r4, #4
9000faba:	4630      	mov	r0, r6
9000fabc:	f7fd ff4a 	bl	9000d954 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000fac0:	4b0e      	ldr	r3, [pc, #56]	@ (9000fafc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000fac2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000fac4:	681a      	ldr	r2, [r3, #0]
9000fac6:	4290      	cmp	r0, r2
9000fac8:	d900      	bls.n	9000facc <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000faca:	6018      	str	r0, [r3, #0]
9000facc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fad0:	4631      	mov	r1, r6
9000fad2:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000fad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000fada:	f7fd bf15 	b.w	9000d908 <vListInsertEnd>
9000fade:	4770      	bx	lr
9000fae0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fae4:	f383 8811 	msr	BASEPRI, r3
9000fae8:	f3bf 8f6f 	isb	sy
9000faec:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000faf0:	e7fe      	b.n	9000faf0 <vTaskPriorityDisinheritAfterTimeout+0x90>
9000faf2:	bf00      	nop
9000faf4:	24021850 	.word	0x24021850
9000faf8:	240213f0 	.word	0x240213f0
9000fafc:	24021374 	.word	0x24021374

9000fb00 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000fb00:	4b04      	ldr	r3, [pc, #16]	@ (9000fb14 <pvTaskIncrementMutexHeldCount+0x14>)
9000fb02:	681a      	ldr	r2, [r3, #0]
9000fb04:	b11a      	cbz	r2, 9000fb0e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000fb06:	6819      	ldr	r1, [r3, #0]
9000fb08:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000fb0a:	3201      	adds	r2, #1
9000fb0c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000fb0e:	6818      	ldr	r0, [r3, #0]
	}
9000fb10:	4770      	bx	lr
9000fb12:	bf00      	nop
9000fb14:	24021850 	.word	0x24021850

9000fb18 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000fb18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fb1c:	4e21      	ldr	r6, [pc, #132]	@ (9000fba4 <prvSwitchTimerLists+0x8c>)
9000fb1e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fb20:	e00d      	b.n	9000fb3e <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fb22:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb24:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fb26:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fb28:	1d25      	adds	r5, r4, #4
9000fb2a:	4628      	mov	r0, r5
9000fb2c:	f7fd ff12 	bl	9000d954 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fb30:	6a23      	ldr	r3, [r4, #32]
9000fb32:	4620      	mov	r0, r4
9000fb34:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fb36:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000fb3a:	075b      	lsls	r3, r3, #29
9000fb3c:	d40a      	bmi.n	9000fb54 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fb3e:	6833      	ldr	r3, [r6, #0]
9000fb40:	681a      	ldr	r2, [r3, #0]
9000fb42:	2a00      	cmp	r2, #0
9000fb44:	d1ed      	bne.n	9000fb22 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000fb46:	4a18      	ldr	r2, [pc, #96]	@ (9000fba8 <prvSwitchTimerLists+0x90>)
9000fb48:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000fb4a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000fb4c:	6031      	str	r1, [r6, #0]
}
9000fb4e:	b004      	add	sp, #16
9000fb50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fb54:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fb56:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000fb58:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000fbac <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fb5c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000fb5e:	429f      	cmp	r7, r3
9000fb60:	d205      	bcs.n	9000fb6e <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fb62:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000fb64:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fb66:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fb68:	f7fd fedc 	bl	9000d924 <vListInsert>
9000fb6c:	e7e7      	b.n	9000fb3e <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000fb6e:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000fb72:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000fb74:	b16b      	cbz	r3, 9000fb92 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fb76:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000fb78:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fb7c:	f7ff fedc 	bl	9000f938 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fb80:	462b      	mov	r3, r5
9000fb82:	462a      	mov	r2, r5
9000fb84:	4669      	mov	r1, sp
9000fb86:	f8d8 0000 	ldr.w	r0, [r8]
9000fb8a:	f7fe fa51 	bl	9000e030 <xQueueGenericSend>
				configASSERT( xResult );
9000fb8e:	2800      	cmp	r0, #0
9000fb90:	d1d5      	bne.n	9000fb3e <prvSwitchTimerLists+0x26>
9000fb92:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb96:	f383 8811 	msr	BASEPRI, r3
9000fb9a:	f3bf 8f6f 	isb	sy
9000fb9e:	f3bf 8f4f 	dsb	sy
9000fba2:	e7fe      	b.n	9000fba2 <prvSwitchTimerLists+0x8a>
9000fba4:	24021954 	.word	0x24021954
9000fba8:	24021950 	.word	0x24021950
9000fbac:	2402194c 	.word	0x2402194c

9000fbb0 <prvTimerTask>:
{
9000fbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fbb4:	4e9f      	ldr	r6, [pc, #636]	@ (9000fe34 <prvTimerTask+0x284>)
9000fbb6:	b089      	sub	sp, #36	@ 0x24
9000fbb8:	4d9f      	ldr	r5, [pc, #636]	@ (9000fe38 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000fbba:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000fbbe:	4c9f      	ldr	r4, [pc, #636]	@ (9000fe3c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000fbc0:	6833      	ldr	r3, [r6, #0]
9000fbc2:	681f      	ldr	r7, [r3, #0]
9000fbc4:	2f00      	cmp	r7, #0
9000fbc6:	f000 80b2 	beq.w	9000fd2e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fbca:	68db      	ldr	r3, [r3, #12]
9000fbcc:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000fbce:	f7ff fced 	bl	9000f5ac <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fbd2:	f7ff fd03 	bl	9000f5dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fbd6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fbd8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fbda:	4298      	cmp	r0, r3
9000fbdc:	f0c0 80af 	bcc.w	9000fd3e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fbe0:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000fbe2:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fbe4:	f200 80d0 	bhi.w	9000fd88 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000fbe8:	f7ff fce8 	bl	9000f5bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fbec:	6833      	ldr	r3, [r6, #0]
9000fbee:	68db      	ldr	r3, [r3, #12]
9000fbf0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fbf4:	f10b 0804 	add.w	r8, fp, #4
9000fbf8:	4640      	mov	r0, r8
9000fbfa:	f7fd feab 	bl	9000d954 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fbfe:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9000fc02:	0758      	lsls	r0, r3, #29
9000fc04:	f100 80d0 	bmi.w	9000fda8 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fc08:	f023 0301 	bic.w	r3, r3, #1
9000fc0c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fc10:	f8db 3020 	ldr.w	r3, [fp, #32]
9000fc14:	4658      	mov	r0, fp
9000fc16:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000fc18:	2200      	movs	r2, #0
9000fc1a:	4669      	mov	r1, sp
9000fc1c:	6820      	ldr	r0, [r4, #0]
9000fc1e:	f7fe fc45 	bl	9000e4ac <xQueueReceive>
9000fc22:	2800      	cmp	r0, #0
9000fc24:	d0cc      	beq.n	9000fbc0 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fc26:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fc28:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fc2a:	2b00      	cmp	r3, #0
9000fc2c:	db77      	blt.n	9000fd1e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000fc2e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000fc30:	697b      	ldr	r3, [r7, #20]
9000fc32:	b113      	cbz	r3, 9000fc3a <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fc34:	1d38      	adds	r0, r7, #4
9000fc36:	f7fd fe8d 	bl	9000d954 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000fc3a:	f7ff fccf 	bl	9000f5dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fc3e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fc40:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9000fc42:	4298      	cmp	r0, r3
9000fc44:	f0c0 8082 	bcc.w	9000fd4c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000fc48:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000fc4a:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9000fc4e:	2b09      	cmp	r3, #9
9000fc50:	d8e2      	bhi.n	9000fc18 <prvTimerTask+0x68>
9000fc52:	e8df f003 	tbb	[pc, r3]
9000fc56:	0505      	.short	0x0505
9000fc58:	5b3e5405 	.word	0x5b3e5405
9000fc5c:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fc60:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fc64:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fc66:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fc6a:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fc6c:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fc70:	69ba      	ldr	r2, [r7, #24]
9000fc72:	1899      	adds	r1, r3, r2
9000fc74:	bf2c      	ite	cs
9000fc76:	2001      	movcs	r0, #1
9000fc78:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000fc7a:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fc7c:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fc7e:	f200 8085 	bhi.w	9000fd8c <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fc82:	ebab 0303 	sub.w	r3, fp, r3
9000fc86:	429a      	cmp	r2, r3
9000fc88:	f200 80be 	bhi.w	9000fe08 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fc8c:	6a3b      	ldr	r3, [r7, #32]
9000fc8e:	4638      	mov	r0, r7
9000fc90:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fc92:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fc96:	0759      	lsls	r1, r3, #29
9000fc98:	d5be      	bpl.n	9000fc18 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000fc9a:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fc9c:	9b01      	ldr	r3, [sp, #4]
9000fc9e:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9000fca0:	b171      	cbz	r1, 9000fcc0 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fca2:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fca4:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fca8:	2700      	movs	r7, #0
9000fcaa:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fcac:	f7ff fe44 	bl	9000f938 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fcb0:	463b      	mov	r3, r7
9000fcb2:	463a      	mov	r2, r7
9000fcb4:	a904      	add	r1, sp, #16
9000fcb6:	6820      	ldr	r0, [r4, #0]
9000fcb8:	f7fe f9ba 	bl	9000e030 <xQueueGenericSend>
							configASSERT( xResult );
9000fcbc:	2800      	cmp	r0, #0
9000fcbe:	d1ab      	bne.n	9000fc18 <prvTimerTask+0x68>
9000fcc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcc4:	f383 8811 	msr	BASEPRI, r3
9000fcc8:	f3bf 8f6f 	isb	sy
9000fccc:	f3bf 8f4f 	dsb	sy
9000fcd0:	e7fe      	b.n	9000fcd0 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fcd2:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fcd6:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fcd8:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fcdc:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fcde:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fce2:	2b00      	cmp	r3, #0
9000fce4:	f000 809c 	beq.w	9000fe20 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000fce8:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fcea:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fcec:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000fcee:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fcf0:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fcf2:	d855      	bhi.n	9000fda0 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fcf4:	4b52      	ldr	r3, [pc, #328]	@ (9000fe40 <prvTimerTask+0x290>)
9000fcf6:	6818      	ldr	r0, [r3, #0]
9000fcf8:	f7fd fe14 	bl	9000d924 <vListInsert>
9000fcfc:	e78c      	b.n	9000fc18 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fcfe:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fd02:	f023 0301 	bic.w	r3, r3, #1
9000fd06:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9000fd0a:	e785      	b.n	9000fc18 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000fd0c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fd10:	079a      	lsls	r2, r3, #30
9000fd12:	d557      	bpl.n	9000fdc4 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fd14:	f023 0301 	bic.w	r3, r3, #1
9000fd18:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9000fd1c:	e77c      	b.n	9000fc18 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fd1e:	9b01      	ldr	r3, [sp, #4]
9000fd20:	9903      	ldr	r1, [sp, #12]
9000fd22:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fd24:	9b00      	ldr	r3, [sp, #0]
9000fd26:	2b00      	cmp	r3, #0
9000fd28:	f6ff af76 	blt.w	9000fc18 <prvTimerTask+0x68>
9000fd2c:	e77f      	b.n	9000fc2e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9000fd2e:	f7ff fc3d 	bl	9000f5ac <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fd32:	f7ff fc53 	bl	9000f5dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fd36:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fd38:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fd3a:	4283      	cmp	r3, r0
9000fd3c:	d909      	bls.n	9000fd52 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fd3e:	f7ff feeb 	bl	9000fb18 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fd42:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fd46:	f7ff fc39 	bl	9000f5bc <xTaskResumeAll>
9000fd4a:	e765      	b.n	9000fc18 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fd4c:	f7ff fee4 	bl	9000fb18 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000fd50:	e77a      	b.n	9000fc48 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fd52:	4b3b      	ldr	r3, [pc, #236]	@ (9000fe40 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000fd54:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fd58:	681b      	ldr	r3, [r3, #0]
9000fd5a:	681a      	ldr	r2, [r3, #0]
9000fd5c:	fab2 f282 	clz	r2, r2
9000fd60:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fd62:	eba7 010a 	sub.w	r1, r7, sl
9000fd66:	6820      	ldr	r0, [r4, #0]
9000fd68:	f7fe ff78 	bl	9000ec5c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fd6c:	f7ff fc26 	bl	9000f5bc <xTaskResumeAll>
9000fd70:	2800      	cmp	r0, #0
9000fd72:	f47f af51 	bne.w	9000fc18 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fd76:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9000fd7a:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9000fd7e:	f3bf 8f4f 	dsb	sy
9000fd82:	f3bf 8f6f 	isb	sy
9000fd86:	e747      	b.n	9000fc18 <prvTimerTask+0x68>
9000fd88:	2200      	movs	r2, #0
9000fd8a:	e7ea      	b.n	9000fd62 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fd8c:	455b      	cmp	r3, fp
9000fd8e:	d902      	bls.n	9000fd96 <prvTimerTask+0x1e6>
9000fd90:	2800      	cmp	r0, #0
9000fd92:	f43f af7b 	beq.w	9000fc8c <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fd96:	1d39      	adds	r1, r7, #4
9000fd98:	6830      	ldr	r0, [r6, #0]
9000fd9a:	f7fd fdc3 	bl	9000d924 <vListInsert>
	return xProcessTimerNow;
9000fd9e:	e73b      	b.n	9000fc18 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fda0:	6830      	ldr	r0, [r6, #0]
9000fda2:	f7fd fdbf 	bl	9000d924 <vListInsert>
9000fda6:	e737      	b.n	9000fc18 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fda8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fdac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fdb0:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000fdb2:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fdb4:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fdb8:	d208      	bcs.n	9000fdcc <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fdba:	4641      	mov	r1, r8
9000fdbc:	6830      	ldr	r0, [r6, #0]
9000fdbe:	f7fd fdb1 	bl	9000d924 <vListInsert>
	return xProcessTimerNow;
9000fdc2:	e725      	b.n	9000fc10 <prvTimerTask+0x60>
							vPortFree( pxTimer );
9000fdc4:	4638      	mov	r0, r7
9000fdc6:	f7fd fd25 	bl	9000d814 <vPortFree>
9000fdca:	e725      	b.n	9000fc18 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fdcc:	ebaa 0a07 	sub.w	sl, sl, r7
9000fdd0:	4552      	cmp	r2, sl
9000fdd2:	d81f      	bhi.n	9000fe14 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
9000fdd4:	6823      	ldr	r3, [r4, #0]
9000fdd6:	b173      	cbz	r3, 9000fdf6 <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fdd8:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fddc:	2700      	movs	r7, #0
9000fdde:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fde0:	f7ff fdaa 	bl	9000f938 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fde4:	463b      	mov	r3, r7
9000fde6:	463a      	mov	r2, r7
9000fde8:	a904      	add	r1, sp, #16
9000fdea:	6820      	ldr	r0, [r4, #0]
9000fdec:	f7fe f920 	bl	9000e030 <xQueueGenericSend>
			configASSERT( xResult );
9000fdf0:	2800      	cmp	r0, #0
9000fdf2:	f47f af0d 	bne.w	9000fc10 <prvTimerTask+0x60>
9000fdf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fdfa:	f383 8811 	msr	BASEPRI, r3
9000fdfe:	f3bf 8f6f 	isb	sy
9000fe02:	f3bf 8f4f 	dsb	sy
9000fe06:	e7fe      	b.n	9000fe06 <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fe08:	4b0d      	ldr	r3, [pc, #52]	@ (9000fe40 <prvTimerTask+0x290>)
9000fe0a:	1d39      	adds	r1, r7, #4
9000fe0c:	6818      	ldr	r0, [r3, #0]
9000fe0e:	f7fd fd89 	bl	9000d924 <vListInsert>
	return xProcessTimerNow;
9000fe12:	e701      	b.n	9000fc18 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fe14:	4b0a      	ldr	r3, [pc, #40]	@ (9000fe40 <prvTimerTask+0x290>)
9000fe16:	4641      	mov	r1, r8
9000fe18:	6818      	ldr	r0, [r3, #0]
9000fe1a:	f7fd fd83 	bl	9000d924 <vListInsert>
	return xProcessTimerNow;
9000fe1e:	e6f7      	b.n	9000fc10 <prvTimerTask+0x60>
9000fe20:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe24:	f383 8811 	msr	BASEPRI, r3
9000fe28:	f3bf 8f6f 	isb	sy
9000fe2c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fe30:	e7fe      	b.n	9000fe30 <prvTimerTask+0x280>
9000fe32:	bf00      	nop
9000fe34:	24021954 	.word	0x24021954
9000fe38:	24021944 	.word	0x24021944
9000fe3c:	2402194c 	.word	0x2402194c
9000fe40:	24021950 	.word	0x24021950

9000fe44 <xTimerCreateTimerTask>:
{
9000fe44:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fe46:	4c23      	ldr	r4, [pc, #140]	@ (9000fed4 <xTimerCreateTimerTask+0x90>)
{
9000fe48:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9000fe4a:	f7fd fe03 	bl	9000da54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fe4e:	6825      	ldr	r5, [r4, #0]
9000fe50:	b335      	cbz	r5, 9000fea0 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fe52:	f7fd fe21 	bl	9000da98 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fe56:	6823      	ldr	r3, [r4, #0]
9000fe58:	b1cb      	cbz	r3, 9000fe8e <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fe5a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fe5c:	aa07      	add	r2, sp, #28
9000fe5e:	a906      	add	r1, sp, #24
9000fe60:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fe62:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fe64:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fe68:	f7fd fc06 	bl	9000d678 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fe6c:	4623      	mov	r3, r4
9000fe6e:	9a07      	ldr	r2, [sp, #28]
9000fe70:	9500      	str	r5, [sp, #0]
9000fe72:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fe76:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fe7a:	4917      	ldr	r1, [pc, #92]	@ (9000fed8 <xTimerCreateTimerTask+0x94>)
9000fe7c:	4817      	ldr	r0, [pc, #92]	@ (9000fedc <xTimerCreateTimerTask+0x98>)
9000fe7e:	f7ff f967 	bl	9000f150 <xTaskCreateStatic>
9000fe82:	4b17      	ldr	r3, [pc, #92]	@ (9000fee0 <xTimerCreateTimerTask+0x9c>)
9000fe84:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fe86:	b110      	cbz	r0, 9000fe8e <xTimerCreateTimerTask+0x4a>
}
9000fe88:	2001      	movs	r0, #1
9000fe8a:	b009      	add	sp, #36	@ 0x24
9000fe8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fe8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe92:	f383 8811 	msr	BASEPRI, r3
9000fe96:	f3bf 8f6f 	isb	sy
9000fe9a:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fe9e:	e7fe      	b.n	9000fe9e <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fea0:	4f10      	ldr	r7, [pc, #64]	@ (9000fee4 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fea2:	4e11      	ldr	r6, [pc, #68]	@ (9000fee8 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fea4:	4638      	mov	r0, r7
9000fea6:	f7fd fd1f 	bl	9000d8e8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000feaa:	4630      	mov	r0, r6
9000feac:	f7fd fd1c 	bl	9000d8e8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000feb0:	4a0e      	ldr	r2, [pc, #56]	@ (9000feec <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000feb2:	9500      	str	r5, [sp, #0]
9000feb4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000feb6:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000feb8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000feba:	4a0d      	ldr	r2, [pc, #52]	@ (9000fef0 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000febc:	4b0d      	ldr	r3, [pc, #52]	@ (9000fef4 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000febe:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fec0:	4a0d      	ldr	r2, [pc, #52]	@ (9000fef8 <xTimerCreateTimerTask+0xb4>)
9000fec2:	f7fd ff61 	bl	9000dd88 <xQueueGenericCreateStatic>
9000fec6:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fec8:	2800      	cmp	r0, #0
9000feca:	d0c2      	beq.n	9000fe52 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fecc:	490b      	ldr	r1, [pc, #44]	@ (9000fefc <xTimerCreateTimerTask+0xb8>)
9000fece:	f7fe fe9d 	bl	9000ec0c <vQueueAddToRegistry>
9000fed2:	e7be      	b.n	9000fe52 <xTimerCreateTimerTask+0xe>
9000fed4:	2402194c 	.word	0x2402194c
9000fed8:	9002c378 	.word	0x9002c378
9000fedc:	9000fbb1 	.word	0x9000fbb1
9000fee0:	24021948 	.word	0x24021948
9000fee4:	2402196c 	.word	0x2402196c
9000fee8:	24021958 	.word	0x24021958
9000feec:	24021954 	.word	0x24021954
9000fef0:	24021950 	.word	0x24021950
9000fef4:	24021854 	.word	0x24021854
9000fef8:	240218a4 	.word	0x240218a4
9000fefc:	9002c370 	.word	0x9002c370

9000ff00 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000ff00:	8880      	ldrh	r0, [r0, #4]
9000ff02:	4770      	bx	lr

9000ff04 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000ff04:	b570      	push	{r4, r5, r6, lr}
9000ff06:	6803      	ldr	r3, [r0, #0]
9000ff08:	460c      	mov	r4, r1
9000ff0a:	2100      	movs	r1, #0
9000ff0c:	4605      	mov	r5, r0
9000ff0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000ff10:	4798      	blx	r3
9000ff12:	4606      	mov	r6, r0
9000ff14:	682b      	ldr	r3, [r5, #0]
9000ff16:	4628      	mov	r0, r5
9000ff18:	1ba4      	subs	r4, r4, r6
9000ff1a:	6a1b      	ldr	r3, [r3, #32]
9000ff1c:	b2a4      	uxth	r4, r4
9000ff1e:	4798      	blx	r3
9000ff20:	fbb4 f0f0 	udiv	r0, r4, r0
9000ff24:	bd70      	pop	{r4, r5, r6, pc}

9000ff26 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000ff26:	2300      	movs	r3, #0
9000ff28:	8083      	strh	r3, [r0, #4]
9000ff2a:	4770      	bx	lr

9000ff2c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000ff2c:	b510      	push	{r4, lr}
9000ff2e:	6803      	ldr	r3, [r0, #0]
9000ff30:	4604      	mov	r4, r0
9000ff32:	8881      	ldrh	r1, [r0, #4]
9000ff34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000ff36:	4798      	blx	r3
9000ff38:	88a3      	ldrh	r3, [r4, #4]
9000ff3a:	3301      	adds	r3, #1
9000ff3c:	80a3      	strh	r3, [r4, #4]
9000ff3e:	bd10      	pop	{r4, pc}

9000ff40 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000ff40:	6803      	ldr	r3, [r0, #0]
9000ff42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000ff44:	4718      	bx	r3

9000ff46 <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000ff46:	4770      	bx	lr

9000ff48 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000ff48:	4a02      	ldr	r2, [pc, #8]	@ (9000ff54 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000ff4a:	6002      	str	r2, [r0, #0]
9000ff4c:	2200      	movs	r2, #0
9000ff4e:	8082      	strh	r2, [r0, #4]
9000ff50:	4770      	bx	lr
9000ff52:	bf00      	nop
9000ff54:	9002d1e8 	.word	0x9002d1e8

9000ff58 <_ZN8touchgfx9Container13getFirstChildEv>:
9000ff58:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000ff5a:	4770      	bx	lr

9000ff5c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000ff5c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000ff5e:	2000      	movs	r0, #0
9000ff60:	b12b      	cbz	r3, 9000ff6e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000ff62:	b920      	cbnz	r0, 9000ff6e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000ff64:	1a5a      	subs	r2, r3, r1
9000ff66:	699b      	ldr	r3, [r3, #24]
9000ff68:	4250      	negs	r0, r2
9000ff6a:	4150      	adcs	r0, r2
9000ff6c:	e7f8      	b.n	9000ff60 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000ff6e:	4770      	bx	lr

9000ff70 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000ff70:	2300      	movs	r3, #0
9000ff72:	6148      	str	r0, [r1, #20]
9000ff74:	618b      	str	r3, [r1, #24]
9000ff76:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000ff78:	b913      	cbnz	r3, 9000ff80 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000ff7a:	6281      	str	r1, [r0, #40]	@ 0x28
9000ff7c:	4770      	bx	lr
9000ff7e:	4613      	mov	r3, r2
9000ff80:	699a      	ldr	r2, [r3, #24]
9000ff82:	2a00      	cmp	r2, #0
9000ff84:	d1fb      	bne.n	9000ff7e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000ff86:	6199      	str	r1, [r3, #24]
9000ff88:	4770      	bx	lr

9000ff8a <_ZN8touchgfx9Container9removeAllEv>:
9000ff8a:	2200      	movs	r2, #0
9000ff8c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000ff8e:	b123      	cbz	r3, 9000ff9a <_ZN8touchgfx9Container9removeAllEv+0x10>
9000ff90:	6999      	ldr	r1, [r3, #24]
9000ff92:	6281      	str	r1, [r0, #40]	@ 0x28
9000ff94:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000ff98:	e7f8      	b.n	9000ff8c <_ZN8touchgfx9Container9removeAllEv+0x2>
9000ff9a:	4770      	bx	lr

9000ff9c <_ZN8touchgfx9Container6unlinkEv>:
9000ff9c:	2300      	movs	r3, #0
9000ff9e:	6283      	str	r3, [r0, #40]	@ 0x28
9000ffa0:	4770      	bx	lr

9000ffa2 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000ffa2:	2200      	movs	r2, #0
9000ffa4:	8002      	strh	r2, [r0, #0]
9000ffa6:	8042      	strh	r2, [r0, #2]
9000ffa8:	8082      	strh	r2, [r0, #4]
9000ffaa:	80c2      	strh	r2, [r0, #6]
9000ffac:	4770      	bx	lr

9000ffae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000ffae:	b570      	push	{r4, r5, r6, lr}
9000ffb0:	460d      	mov	r5, r1
9000ffb2:	4616      	mov	r6, r2
9000ffb4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000ffb6:	b13c      	cbz	r4, 9000ffc8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000ffb8:	6823      	ldr	r3, [r4, #0]
9000ffba:	4620      	mov	r0, r4
9000ffbc:	4632      	mov	r2, r6
9000ffbe:	4629      	mov	r1, r5
9000ffc0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ffc2:	4798      	blx	r3
9000ffc4:	69a4      	ldr	r4, [r4, #24]
9000ffc6:	e7f6      	b.n	9000ffb6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000ffc8:	bd70      	pop	{r4, r5, r6, pc}

9000ffca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000ffca:	b538      	push	{r3, r4, r5, lr}
9000ffcc:	460d      	mov	r5, r1
9000ffce:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000ffd0:	b134      	cbz	r4, 9000ffe0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000ffd2:	682b      	ldr	r3, [r5, #0]
9000ffd4:	4621      	mov	r1, r4
9000ffd6:	4628      	mov	r0, r5
9000ffd8:	689b      	ldr	r3, [r3, #8]
9000ffda:	4798      	blx	r3
9000ffdc:	69a4      	ldr	r4, [r4, #24]
9000ffde:	e7f7      	b.n	9000ffd0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000ffe0:	bd38      	pop	{r3, r4, r5, pc}

9000ffe2 <_ZN8touchgfx9ContainerD1Ev>:
9000ffe2:	4770      	bx	lr

9000ffe4 <_ZN8touchgfx9ContainerD0Ev>:
9000ffe4:	b510      	push	{r4, lr}
9000ffe6:	4604      	mov	r4, r0
9000ffe8:	212c      	movs	r1, #44	@ 0x2c
9000ffea:	f018 ffb7 	bl	90028f5c <_ZdlPvj>
9000ffee:	4620      	mov	r0, r4
9000fff0:	bd10      	pop	{r4, pc}

9000fff2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fff2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fff4:	b19b      	cbz	r3, 9001001e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fff6:	428b      	cmp	r3, r1
9000fff8:	d109      	bne.n	9001000e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fffa:	699a      	ldr	r2, [r3, #24]
9000fffc:	2100      	movs	r1, #0
9000fffe:	6159      	str	r1, [r3, #20]
90010000:	6282      	str	r2, [r0, #40]	@ 0x28
90010002:	b902      	cbnz	r2, 90010006 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010004:	4770      	bx	lr
90010006:	6199      	str	r1, [r3, #24]
90010008:	4770      	bx	lr
9001000a:	4613      	mov	r3, r2
9001000c:	b13a      	cbz	r2, 9001001e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001000e:	699a      	ldr	r2, [r3, #24]
90010010:	428a      	cmp	r2, r1
90010012:	d1fa      	bne.n	9001000a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010014:	698a      	ldr	r2, [r1, #24]
90010016:	619a      	str	r2, [r3, #24]
90010018:	2300      	movs	r3, #0
9001001a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9001001e:	4770      	bx	lr

90010020 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010020:	b410      	push	{r4}
90010022:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010024:	4604      	mov	r4, r0
90010026:	b92b      	cbnz	r3, 90010034 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010028:	6803      	ldr	r3, [r0, #0]
9001002a:	4611      	mov	r1, r2
9001002c:	f85d 4b04 	ldr.w	r4, [sp], #4
90010030:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90010032:	4718      	bx	r3
90010034:	b941      	cbnz	r1, 90010048 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010036:	6193      	str	r3, [r2, #24]
90010038:	6282      	str	r2, [r0, #40]	@ 0x28
9001003a:	6154      	str	r4, [r2, #20]
9001003c:	f85d 4b04 	ldr.w	r4, [sp], #4
90010040:	4770      	bx	lr
90010042:	4603      	mov	r3, r0
90010044:	2800      	cmp	r0, #0
90010046:	d0f9      	beq.n	9001003c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010048:	4299      	cmp	r1, r3
9001004a:	6998      	ldr	r0, [r3, #24]
9001004c:	d1f9      	bne.n	90010042 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9001004e:	6190      	str	r0, [r2, #24]
90010050:	618a      	str	r2, [r1, #24]
90010052:	e7f2      	b.n	9001003a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010054 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010058:	461f      	mov	r7, r3
9001005a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9001005e:	460d      	mov	r5, r1
90010060:	4616      	mov	r6, r2
90010062:	b103      	cbz	r3, 90010066 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010064:	6038      	str	r0, [r7, #0]
90010066:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010068:	b314      	cbz	r4, 900100b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9001006a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001006e:	b1eb      	cbz	r3, 900100ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010070:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010074:	428d      	cmp	r5, r1
90010076:	db19      	blt.n	900100ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010078:	b289      	uxth	r1, r1
9001007a:	8923      	ldrh	r3, [r4, #8]
9001007c:	440b      	add	r3, r1
9001007e:	b21b      	sxth	r3, r3
90010080:	429d      	cmp	r5, r3
90010082:	da13      	bge.n	900100ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010084:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010088:	4296      	cmp	r6, r2
9001008a:	db0f      	blt.n	900100ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001008c:	b292      	uxth	r2, r2
9001008e:	8963      	ldrh	r3, [r4, #10]
90010090:	4413      	add	r3, r2
90010092:	b21b      	sxth	r3, r3
90010094:	429e      	cmp	r6, r3
90010096:	da09      	bge.n	900100ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010098:	6823      	ldr	r3, [r4, #0]
9001009a:	1ab2      	subs	r2, r6, r2
9001009c:	1a69      	subs	r1, r5, r1
9001009e:	4620      	mov	r0, r4
900100a0:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
900100a4:	b212      	sxth	r2, r2
900100a6:	463b      	mov	r3, r7
900100a8:	b209      	sxth	r1, r1
900100aa:	47c0      	blx	r8
900100ac:	69a4      	ldr	r4, [r4, #24]
900100ae:	e7db      	b.n	90010068 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
900100b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900100b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
900100b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900100b8:	4c6d      	ldr	r4, [pc, #436]	@ (90010270 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
900100ba:	b0a1      	sub	sp, #132	@ 0x84
900100bc:	4606      	mov	r6, r0
900100be:	6824      	ldr	r4, [r4, #0]
900100c0:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900100c2:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900100c6:	2400      	movs	r4, #0
900100c8:	9303      	str	r3, [sp, #12]
900100ca:	802c      	strh	r4, [r5, #0]
900100cc:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900100ce:	802c      	strh	r4, [r5, #0]
900100d0:	601c      	str	r4, [r3, #0]
900100d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
900100d6:	f7ff ffbd 	bl	90010054 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900100da:	f1b9 0f03 	cmp.w	r9, #3
900100de:	f340 80c1 	ble.w	90010264 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900100e2:	4631      	mov	r1, r6
900100e4:	a80c      	add	r0, sp, #48	@ 0x30
900100e6:	f007 fb67 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900100ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900100ee:	9306      	str	r3, [sp, #24]
900100f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900100f4:	9307      	str	r3, [sp, #28]
900100f6:	9b03      	ldr	r3, [sp, #12]
900100f8:	f8d3 a000 	ldr.w	sl, [r3]
900100fc:	f1ba 0f00 	cmp.w	sl, #0
90010100:	f000 80b3 	beq.w	9001026a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010104:	4651      	mov	r1, sl
90010106:	a810      	add	r0, sp, #64	@ 0x40
90010108:	f007 fb56 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001010c:	2002      	movs	r0, #2
9001010e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90010112:	9b01      	ldr	r3, [sp, #4]
90010114:	9a06      	ldr	r2, [sp, #24]
90010116:	fb91 f1f0 	sdiv	r1, r1, r0
9001011a:	189d      	adds	r5, r3, r2
9001011c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90010120:	9a07      	ldr	r2, [sp, #28]
90010122:	4419      	add	r1, r3
90010124:	9b02      	ldr	r3, [sp, #8]
90010126:	4413      	add	r3, r2
90010128:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9001012c:	1a6d      	subs	r5, r5, r1
9001012e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90010132:	fb92 f2f0 	sdiv	r2, r2, r0
90010136:	440a      	add	r2, r1
90010138:	1a9b      	subs	r3, r3, r2
9001013a:	435b      	muls	r3, r3
9001013c:	fb05 3505 	mla	r5, r5, r5, r3
90010140:	4f4c      	ldr	r7, [pc, #304]	@ (90010274 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010142:	ac10      	add	r4, sp, #64	@ 0x40
90010144:	f1b9 0f0c 	cmp.w	r9, #12
90010148:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001014a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001014c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001014e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010150:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010152:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010154:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010158:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001015c:	f04f 0303 	mov.w	r3, #3
90010160:	bfd8      	it	le
90010162:	f109 32ff 	addle.w	r2, r9, #4294967295
90010166:	f04f 0400 	mov.w	r4, #0
9001016a:	f8cd 9000 	str.w	r9, [sp]
9001016e:	bfcc      	ite	gt
90010170:	4698      	movgt	r8, r3
90010172:	fb92 f8f3 	sdivle	r8, r2, r3
90010176:	1c63      	adds	r3, r4, #1
90010178:	aa10      	add	r2, sp, #64	@ 0x40
9001017a:	f004 0401 	and.w	r4, r4, #1
9001017e:	f04f 0b00 	mov.w	fp, #0
90010182:	9308      	str	r3, [sp, #32]
90010184:	9b00      	ldr	r3, [sp, #0]
90010186:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9001018a:	fb93 f3f8 	sdiv	r3, r3, r8
9001018e:	3404      	adds	r4, #4
90010190:	b29b      	uxth	r3, r3
90010192:	9304      	str	r3, [sp, #16]
90010194:	9a04      	ldr	r2, [sp, #16]
90010196:	f854 3c04 	ldr.w	r3, [r4, #-4]
9001019a:	fb13 f302 	smulbb	r3, r3, r2
9001019e:	9a01      	ldr	r2, [sp, #4]
900101a0:	b29b      	uxth	r3, r3
900101a2:	1899      	adds	r1, r3, r2
900101a4:	9305      	str	r3, [sp, #20]
900101a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900101aa:	b209      	sxth	r1, r1
900101ac:	4299      	cmp	r1, r3
900101ae:	db4d      	blt.n	9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101b0:	8932      	ldrh	r2, [r6, #8]
900101b2:	4413      	add	r3, r2
900101b4:	b21b      	sxth	r3, r3
900101b6:	4299      	cmp	r1, r3
900101b8:	da48      	bge.n	9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101ba:	9b04      	ldr	r3, [sp, #16]
900101bc:	6827      	ldr	r7, [r4, #0]
900101be:	fb17 f703 	smulbb	r7, r7, r3
900101c2:	9b02      	ldr	r3, [sp, #8]
900101c4:	b2bf      	uxth	r7, r7
900101c6:	18fa      	adds	r2, r7, r3
900101c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900101cc:	b212      	sxth	r2, r2
900101ce:	429a      	cmp	r2, r3
900101d0:	db3c      	blt.n	9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101d2:	8970      	ldrh	r0, [r6, #10]
900101d4:	4403      	add	r3, r0
900101d6:	b21b      	sxth	r3, r3
900101d8:	429a      	cmp	r2, r3
900101da:	da37      	bge.n	9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101dc:	2300      	movs	r3, #0
900101de:	4630      	mov	r0, r6
900101e0:	930b      	str	r3, [sp, #44]	@ 0x2c
900101e2:	ab0b      	add	r3, sp, #44	@ 0x2c
900101e4:	f7ff ff36 	bl	90010054 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900101e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900101ea:	b37a      	cbz	r2, 9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101ec:	4552      	cmp	r2, sl
900101ee:	d02d      	beq.n	9001024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900101f0:	4611      	mov	r1, r2
900101f2:	a80e      	add	r0, sp, #56	@ 0x38
900101f4:	9209      	str	r2, [sp, #36]	@ 0x24
900101f6:	f007 fadf 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900101fa:	f04f 0e02 	mov.w	lr, #2
900101fe:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90010202:	9a06      	ldr	r2, [sp, #24]
90010204:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010208:	9b01      	ldr	r3, [sp, #4]
9001020a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001020e:	4413      	add	r3, r2
90010210:	9a07      	ldr	r2, [sp, #28]
90010212:	fb91 f1fe 	sdiv	r1, r1, lr
90010216:	fb9c fcfe 	sdiv	ip, ip, lr
9001021a:	4401      	add	r1, r0
9001021c:	1a58      	subs	r0, r3, r1
9001021e:	9b02      	ldr	r3, [sp, #8]
90010220:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010224:	4413      	add	r3, r2
90010226:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010228:	448c      	add	ip, r1
9001022a:	eba3 030c 	sub.w	r3, r3, ip
9001022e:	435b      	muls	r3, r3
90010230:	fb00 3300 	mla	r3, r0, r0, r3
90010234:	42ab      	cmp	r3, r5
90010236:	d208      	bcs.n	9001024a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010238:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001023a:	461d      	mov	r5, r3
9001023c:	9803      	ldr	r0, [sp, #12]
9001023e:	6001      	str	r1, [r0, #0]
90010240:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90010242:	9805      	ldr	r0, [sp, #20]
90010244:	8008      	strh	r0, [r1, #0]
90010246:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010248:	800f      	strh	r7, [r1, #0]
9001024a:	4692      	mov	sl, r2
9001024c:	f10b 0b01 	add.w	fp, fp, #1
90010250:	3408      	adds	r4, #8
90010252:	f1bb 0f04 	cmp.w	fp, #4
90010256:	d19d      	bne.n	90010194 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010258:	9b00      	ldr	r3, [sp, #0]
9001025a:	9c08      	ldr	r4, [sp, #32]
9001025c:	444b      	add	r3, r9
9001025e:	4544      	cmp	r4, r8
90010260:	9300      	str	r3, [sp, #0]
90010262:	d188      	bne.n	90010176 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010264:	b021      	add	sp, #132	@ 0x84
90010266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001026a:	f04f 35ff 	mov.w	r5, #4294967295
9001026e:	e767      	b.n	90010140 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010270:	2402198c 	.word	0x2402198c
90010274:	9002a6c0 	.word	0x9002a6c0

90010278 <_ZN8touchgfx4RectaNERKS0_>:
90010278:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001027c:	f9b1 7000 	ldrsh.w	r7, [r1]
90010280:	888c      	ldrh	r4, [r1, #4]
90010282:	f9b0 9000 	ldrsh.w	r9, [r0]
90010286:	443c      	add	r4, r7
90010288:	b2a4      	uxth	r4, r4
9001028a:	fa0f f884 	sxth.w	r8, r4
9001028e:	45c1      	cmp	r9, r8
90010290:	da2f      	bge.n	900102f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010292:	8882      	ldrh	r2, [r0, #4]
90010294:	444a      	add	r2, r9
90010296:	b292      	uxth	r2, r2
90010298:	fa0f fe82 	sxth.w	lr, r2
9001029c:	4577      	cmp	r7, lr
9001029e:	da28      	bge.n	900102f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900102a0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900102a4:	88cb      	ldrh	r3, [r1, #6]
900102a6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900102aa:	442b      	add	r3, r5
900102ac:	b21b      	sxth	r3, r3
900102ae:	429e      	cmp	r6, r3
900102b0:	da1f      	bge.n	900102f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900102b2:	88c3      	ldrh	r3, [r0, #6]
900102b4:	4433      	add	r3, r6
900102b6:	b29b      	uxth	r3, r3
900102b8:	fa0f fc83 	sxth.w	ip, r3
900102bc:	4565      	cmp	r5, ip
900102be:	da18      	bge.n	900102f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900102c0:	454f      	cmp	r7, r9
900102c2:	bfb8      	it	lt
900102c4:	464f      	movlt	r7, r9
900102c6:	42b5      	cmp	r5, r6
900102c8:	bfb8      	it	lt
900102ca:	4635      	movlt	r5, r6
900102cc:	45f0      	cmp	r8, lr
900102ce:	bfd8      	it	le
900102d0:	4622      	movle	r2, r4
900102d2:	1bd2      	subs	r2, r2, r7
900102d4:	8082      	strh	r2, [r0, #4]
900102d6:	884a      	ldrh	r2, [r1, #2]
900102d8:	88c9      	ldrh	r1, [r1, #6]
900102da:	8007      	strh	r7, [r0, #0]
900102dc:	440a      	add	r2, r1
900102de:	8045      	strh	r5, [r0, #2]
900102e0:	b292      	uxth	r2, r2
900102e2:	b211      	sxth	r1, r2
900102e4:	458c      	cmp	ip, r1
900102e6:	bfa8      	it	ge
900102e8:	4613      	movge	r3, r2
900102ea:	1b5b      	subs	r3, r3, r5
900102ec:	80c3      	strh	r3, [r0, #6]
900102ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900102f2:	2300      	movs	r3, #0
900102f4:	8003      	strh	r3, [r0, #0]
900102f6:	8043      	strh	r3, [r0, #2]
900102f8:	8083      	strh	r3, [r0, #4]
900102fa:	80c3      	strh	r3, [r0, #6]
900102fc:	e7f7      	b.n	900102ee <_ZN8touchgfx4RectaNERKS0_+0x76>

900102fe <_ZNK8touchgfx4Rect7isEmptyEv>:
900102fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010302:	2b00      	cmp	r3, #0
90010304:	dd06      	ble.n	90010314 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010306:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001030a:	2800      	cmp	r0, #0
9001030c:	bfcc      	ite	gt
9001030e:	2000      	movgt	r0, #0
90010310:	2001      	movle	r0, #1
90010312:	4770      	bx	lr
90010314:	2001      	movs	r0, #1
90010316:	4770      	bx	lr

90010318 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001031c:	2300      	movs	r3, #0
9001031e:	4604      	mov	r4, r0
90010320:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010322:	8003      	strh	r3, [r0, #0]
90010324:	8043      	strh	r3, [r0, #2]
90010326:	8083      	strh	r3, [r0, #4]
90010328:	80c3      	strh	r3, [r0, #6]
9001032a:	2d00      	cmp	r5, #0
9001032c:	d040      	beq.n	900103b0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001032e:	1d28      	adds	r0, r5, #4
90010330:	f7ff ffe5 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90010334:	b988      	cbnz	r0, 9001035a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010336:	4620      	mov	r0, r4
90010338:	f7ff ffe1 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001033c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010340:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010344:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010348:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001034c:	b138      	cbz	r0, 9001035e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001034e:	8022      	strh	r2, [r4, #0]
90010350:	8063      	strh	r3, [r4, #2]
90010352:	f8a4 e004 	strh.w	lr, [r4, #4]
90010356:	f8a4 c006 	strh.w	ip, [r4, #6]
9001035a:	69ad      	ldr	r5, [r5, #24]
9001035c:	e7e5      	b.n	9001032a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001035e:	f9b4 0000 	ldrsh.w	r0, [r4]
90010362:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010366:	4290      	cmp	r0, r2
90010368:	4607      	mov	r7, r0
9001036a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001036e:	460e      	mov	r6, r1
90010370:	bfa8      	it	ge
90010372:	4617      	movge	r7, r2
90010374:	4299      	cmp	r1, r3
90010376:	4472      	add	r2, lr
90010378:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9001037c:	bfa8      	it	ge
9001037e:	461e      	movge	r6, r3
90010380:	4440      	add	r0, r8
90010382:	4471      	add	r1, lr
90010384:	4463      	add	r3, ip
90010386:	b200      	sxth	r0, r0
90010388:	8027      	strh	r7, [r4, #0]
9001038a:	b212      	sxth	r2, r2
9001038c:	8066      	strh	r6, [r4, #2]
9001038e:	b209      	sxth	r1, r1
90010390:	b21b      	sxth	r3, r3
90010392:	4290      	cmp	r0, r2
90010394:	bfac      	ite	ge
90010396:	ebc7 0200 	rsbge	r2, r7, r0
9001039a:	ebc7 0202 	rsblt	r2, r7, r2
9001039e:	4299      	cmp	r1, r3
900103a0:	bfac      	ite	ge
900103a2:	ebc6 0301 	rsbge	r3, r6, r1
900103a6:	ebc6 0303 	rsblt	r3, r6, r3
900103aa:	80a2      	strh	r2, [r4, #4]
900103ac:	80e3      	strh	r3, [r4, #6]
900103ae:	e7d4      	b.n	9001035a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900103b0:	4620      	mov	r0, r4
900103b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900103b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900103b6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900103ba:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900103be:	b383      	cbz	r3, 90010422 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900103c0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900103c2:	b374      	cbz	r4, 90010422 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900103c4:	f9b1 5000 	ldrsh.w	r5, [r1]
900103c8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900103cc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900103d0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900103d4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900103d8:	b303      	cbz	r3, 9001041c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900103da:	4668      	mov	r0, sp
900103dc:	1d21      	adds	r1, r4, #4
900103de:	f8ad 5000 	strh.w	r5, [sp]
900103e2:	f8ad 6002 	strh.w	r6, [sp, #2]
900103e6:	f8ad 7004 	strh.w	r7, [sp, #4]
900103ea:	f8ad 8006 	strh.w	r8, [sp, #6]
900103ee:	f7ff ff43 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
900103f2:	4668      	mov	r0, sp
900103f4:	f7ff ff83 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
900103f8:	b980      	cbnz	r0, 9001041c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900103fa:	f8bd 3000 	ldrh.w	r3, [sp]
900103fe:	4669      	mov	r1, sp
90010400:	88a2      	ldrh	r2, [r4, #4]
90010402:	4620      	mov	r0, r4
90010404:	1a9b      	subs	r3, r3, r2
90010406:	88e2      	ldrh	r2, [r4, #6]
90010408:	f8ad 3000 	strh.w	r3, [sp]
9001040c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010410:	1a9b      	subs	r3, r3, r2
90010412:	f8ad 3002 	strh.w	r3, [sp, #2]
90010416:	6823      	ldr	r3, [r4, #0]
90010418:	689b      	ldr	r3, [r3, #8]
9001041a:	4798      	blx	r3
9001041c:	69a4      	ldr	r4, [r4, #24]
9001041e:	2c00      	cmp	r4, #0
90010420:	d1d8      	bne.n	900103d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010422:	b002      	add	sp, #8
90010424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010428 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010428:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001042a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001042e:	460d      	mov	r5, r1
90010430:	4616      	mov	r6, r2
90010432:	b323      	cbz	r3, 9001047e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010434:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010436:	b314      	cbz	r4, 9001047e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010438:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001043c:	b1eb      	cbz	r3, 9001047a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001043e:	6828      	ldr	r0, [r5, #0]
90010440:	466b      	mov	r3, sp
90010442:	6869      	ldr	r1, [r5, #4]
90010444:	c303      	stmia	r3!, {r0, r1}
90010446:	4668      	mov	r0, sp
90010448:	1d21      	adds	r1, r4, #4
9001044a:	f7ff ff15 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001044e:	4668      	mov	r0, sp
90010450:	f7ff ff55 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90010454:	b988      	cbnz	r0, 9001047a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010456:	f8bd 3000 	ldrh.w	r3, [sp]
9001045a:	4669      	mov	r1, sp
9001045c:	88a2      	ldrh	r2, [r4, #4]
9001045e:	4620      	mov	r0, r4
90010460:	1a9b      	subs	r3, r3, r2
90010462:	88e2      	ldrh	r2, [r4, #6]
90010464:	f8ad 3000 	strh.w	r3, [sp]
90010468:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001046c:	1a9b      	subs	r3, r3, r2
9001046e:	4632      	mov	r2, r6
90010470:	f8ad 3002 	strh.w	r3, [sp, #2]
90010474:	6823      	ldr	r3, [r4, #0]
90010476:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90010478:	4798      	blx	r3
9001047a:	69a4      	ldr	r4, [r4, #24]
9001047c:	e7db      	b.n	90010436 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001047e:	b002      	add	sp, #8
90010480:	bd70      	pop	{r4, r5, r6, pc}

90010482 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010482:	6803      	ldr	r3, [r0, #0]
90010484:	b513      	push	{r0, r1, r4, lr}
90010486:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
9001048a:	2300      	movs	r3, #0
9001048c:	e9cd 3300 	strd	r3, r3, [sp]
90010490:	466b      	mov	r3, sp
90010492:	47a0      	blx	r4
90010494:	b002      	add	sp, #8
90010496:	bd10      	pop	{r4, pc}

90010498 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90010498:	2301      	movs	r3, #1
9001049a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001049e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900104a2:	4770      	bx	lr

900104a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900104a4:	2301      	movs	r3, #1
900104a6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900104aa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900104ae:	4770      	bx	lr

900104b0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900104b0:	6843      	ldr	r3, [r0, #4]
900104b2:	2201      	movs	r2, #1
900104b4:	725a      	strb	r2, [r3, #9]
900104b6:	6840      	ldr	r0, [r0, #4]
900104b8:	6803      	ldr	r3, [r0, #0]
900104ba:	691b      	ldr	r3, [r3, #16]
900104bc:	4718      	bx	r3

900104be <_ZN8touchgfx3HAL8flushDMAEv>:
900104be:	6840      	ldr	r0, [r0, #4]
900104c0:	6803      	ldr	r3, [r0, #0]
900104c2:	689b      	ldr	r3, [r3, #8]
900104c4:	4718      	bx	r3

900104c6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900104c6:	b530      	push	{r4, r5, lr}
900104c8:	b08b      	sub	sp, #44	@ 0x2c
900104ca:	6804      	ldr	r4, [r0, #0]
900104cc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900104d0:	9509      	str	r5, [sp, #36]	@ 0x24
900104d2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900104d6:	9508      	str	r5, [sp, #32]
900104d8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900104dc:	9507      	str	r5, [sp, #28]
900104de:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900104e2:	9506      	str	r5, [sp, #24]
900104e4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900104e8:	9505      	str	r5, [sp, #20]
900104ea:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
900104ee:	9504      	str	r5, [sp, #16]
900104f0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900104f4:	9503      	str	r5, [sp, #12]
900104f6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900104fa:	9502      	str	r5, [sp, #8]
900104fc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90010500:	e9cd 3500 	strd	r3, r5, [sp]
90010504:	4613      	mov	r3, r2
90010506:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90010508:	2200      	movs	r2, #0
9001050a:	47a0      	blx	r4
9001050c:	b00b      	add	sp, #44	@ 0x2c
9001050e:	bd30      	pop	{r4, r5, pc}

90010510 <_ZN8touchgfx3HAL10beginFrameEv>:
90010510:	4b04      	ldr	r3, [pc, #16]	@ (90010524 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010512:	781b      	ldrb	r3, [r3, #0]
90010514:	b123      	cbz	r3, 90010520 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010516:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9001051a:	f080 0001 	eor.w	r0, r0, #1
9001051e:	4770      	bx	lr
90010520:	2001      	movs	r0, #1
90010522:	4770      	bx	lr
90010524:	2402198a 	.word	0x2402198a

90010528 <_ZN8touchgfx3HAL8endFrameEv>:
90010528:	b510      	push	{r4, lr}
9001052a:	4604      	mov	r4, r0
9001052c:	6840      	ldr	r0, [r0, #4]
9001052e:	6803      	ldr	r3, [r0, #0]
90010530:	689b      	ldr	r3, [r3, #8]
90010532:	4798      	blx	r3
90010534:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010538:	b113      	cbz	r3, 90010540 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001053a:	2301      	movs	r3, #1
9001053c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010540:	bd10      	pop	{r4, pc}

90010542 <_ZN8touchgfx3HAL10initializeEv>:
90010542:	b510      	push	{r4, lr}
90010544:	4604      	mov	r4, r0
90010546:	f7f1 fef7 	bl	90002338 <_ZN8touchgfx10OSWrappers10initializeEv>
9001054a:	f7f0 fb79 	bl	90000c40 <_ZN8touchgfx4GPIO4initEv>
9001054e:	6860      	ldr	r0, [r4, #4]
90010550:	6803      	ldr	r3, [r0, #0]
90010552:	68db      	ldr	r3, [r3, #12]
90010554:	4798      	blx	r3
90010556:	68e0      	ldr	r0, [r4, #12]
90010558:	6803      	ldr	r3, [r0, #0]
9001055a:	689b      	ldr	r3, [r3, #8]
9001055c:	4798      	blx	r3
9001055e:	6823      	ldr	r3, [r4, #0]
90010560:	4620      	mov	r0, r4
90010562:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010568:	4718      	bx	r3
	...

9001056c <_ZN8touchgfx3HAL4tickEv>:
9001056c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001056e:	6803      	ldr	r3, [r0, #0]
90010570:	4604      	mov	r4, r0
90010572:	4d62      	ldr	r5, [pc, #392]	@ (900106fc <_ZN8touchgfx3HAL4tickEv+0x190>)
90010574:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010578:	4798      	blx	r3
9001057a:	2800      	cmp	r0, #0
9001057c:	f000 809e 	beq.w	900106bc <_ZN8touchgfx3HAL4tickEv+0x150>
90010580:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90010584:	2b02      	cmp	r3, #2
90010586:	d002      	beq.n	9001058e <_ZN8touchgfx3HAL4tickEv+0x22>
90010588:	2001      	movs	r0, #1
9001058a:	f7f0 fb83 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001058e:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
90010592:	2600      	movs	r6, #0
90010594:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90010598:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
9001059c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900105a0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900105a4:	b133      	cbz	r3, 900105b4 <_ZN8touchgfx3HAL4tickEv+0x48>
900105a6:	6823      	ldr	r3, [r4, #0]
900105a8:	4620      	mov	r0, r4
900105aa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900105ae:	4798      	blx	r3
900105b0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900105b4:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900105b8:	2601      	movs	r6, #1
900105ba:	6862      	ldr	r2, [r4, #4]
900105bc:	f083 0301 	eor.w	r3, r3, #1
900105c0:	702e      	strb	r6, [r5, #0]
900105c2:	7253      	strb	r3, [r2, #9]
900105c4:	f005 fe5a 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
900105c8:	6803      	ldr	r3, [r0, #0]
900105ca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900105cc:	4798      	blx	r3
900105ce:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900105d2:	b90b      	cbnz	r3, 900105d8 <_ZN8touchgfx3HAL4tickEv+0x6c>
900105d4:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900105d8:	f005 fe50 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
900105dc:	6803      	ldr	r3, [r0, #0]
900105de:	695b      	ldr	r3, [r3, #20]
900105e0:	4798      	blx	r3
900105e2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900105e4:	6803      	ldr	r3, [r0, #0]
900105e6:	691b      	ldr	r3, [r3, #16]
900105e8:	4798      	blx	r3
900105ea:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900105ee:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
900105f2:	3b01      	subs	r3, #1
900105f4:	b2db      	uxtb	r3, r3
900105f6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900105fa:	b10a      	cbz	r2, 90010600 <_ZN8touchgfx3HAL4tickEv+0x94>
900105fc:	2b00      	cmp	r3, #0
900105fe:	d1eb      	bne.n	900105d8 <_ZN8touchgfx3HAL4tickEv+0x6c>
90010600:	4a3f      	ldr	r2, [pc, #252]	@ (90010700 <_ZN8touchgfx3HAL4tickEv+0x194>)
90010602:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90010606:	7813      	ldrb	r3, [r2, #0]
90010608:	3301      	adds	r3, #1
9001060a:	b25b      	sxtb	r3, r3
9001060c:	4299      	cmp	r1, r3
9001060e:	7013      	strb	r3, [r2, #0]
90010610:	dc10      	bgt.n	90010634 <_ZN8touchgfx3HAL4tickEv+0xc8>
90010612:	2300      	movs	r3, #0
90010614:	68e0      	ldr	r0, [r4, #12]
90010616:	a902      	add	r1, sp, #8
90010618:	7013      	strb	r3, [r2, #0]
9001061a:	aa03      	add	r2, sp, #12
9001061c:	6803      	ldr	r3, [r0, #0]
9001061e:	68db      	ldr	r3, [r3, #12]
90010620:	4798      	blx	r3
90010622:	6823      	ldr	r3, [r4, #0]
90010624:	2800      	cmp	r0, #0
90010626:	d059      	beq.n	900106dc <_ZN8touchgfx3HAL4tickEv+0x170>
90010628:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
9001062c:	4620      	mov	r0, r4
9001062e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90010632:	4798      	blx	r3
90010634:	2300      	movs	r3, #0
90010636:	6960      	ldr	r0, [r4, #20]
90010638:	f88d 3007 	strb.w	r3, [sp, #7]
9001063c:	b158      	cbz	r0, 90010656 <_ZN8touchgfx3HAL4tickEv+0xea>
9001063e:	6803      	ldr	r3, [r0, #0]
90010640:	f10d 0107 	add.w	r1, sp, #7
90010644:	68db      	ldr	r3, [r3, #12]
90010646:	4798      	blx	r3
90010648:	b128      	cbz	r0, 90010656 <_ZN8touchgfx3HAL4tickEv+0xea>
9001064a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9001064c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010650:	6803      	ldr	r3, [r0, #0]
90010652:	68db      	ldr	r3, [r3, #12]
90010654:	4798      	blx	r3
90010656:	f104 001c 	add.w	r0, r4, #28
9001065a:	f017 fe63 	bl	90028324 <_ZN8touchgfx8Gestures4tickEv>
9001065e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90010662:	b30b      	cbz	r3, 900106a8 <_ZN8touchgfx3HAL4tickEv+0x13c>
90010664:	6920      	ldr	r0, [r4, #16]
90010666:	6803      	ldr	r3, [r0, #0]
90010668:	691b      	ldr	r3, [r3, #16]
9001066a:	4798      	blx	r3
9001066c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001066e:	4606      	mov	r6, r0
90010670:	b903      	cbnz	r3, 90010674 <_ZN8touchgfx3HAL4tickEv+0x108>
90010672:	6760      	str	r0, [r4, #116]	@ 0x74
90010674:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010676:	4a23      	ldr	r2, [pc, #140]	@ (90010704 <_ZN8touchgfx3HAL4tickEv+0x198>)
90010678:	1af3      	subs	r3, r6, r3
9001067a:	4293      	cmp	r3, r2
9001067c:	d914      	bls.n	900106a8 <_ZN8touchgfx3HAL4tickEv+0x13c>
9001067e:	6920      	ldr	r0, [r4, #16]
90010680:	6803      	ldr	r3, [r0, #0]
90010682:	699b      	ldr	r3, [r3, #24]
90010684:	4798      	blx	r3
90010686:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010688:	2264      	movs	r2, #100	@ 0x64
9001068a:	1af3      	subs	r3, r6, r3
9001068c:	fbb3 f3f2 	udiv	r3, r3, r2
90010690:	fbb0 f0f3 	udiv	r0, r0, r3
90010694:	2800      	cmp	r0, #0
90010696:	dc26      	bgt.n	900106e6 <_ZN8touchgfx3HAL4tickEv+0x17a>
90010698:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
9001069c:	6920      	ldr	r0, [r4, #16]
9001069e:	2100      	movs	r1, #0
900106a0:	6803      	ldr	r3, [r0, #0]
900106a2:	69db      	ldr	r3, [r3, #28]
900106a4:	4798      	blx	r3
900106a6:	6766      	str	r6, [r4, #116]	@ 0x74
900106a8:	6823      	ldr	r3, [r4, #0]
900106aa:	4620      	mov	r0, r4
900106ac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900106b0:	4798      	blx	r3
900106b2:	f005 fde3 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
900106b6:	6803      	ldr	r3, [r0, #0]
900106b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900106ba:	4798      	blx	r3
900106bc:	6823      	ldr	r3, [r4, #0]
900106be:	4620      	mov	r0, r4
900106c0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900106c4:	4798      	blx	r3
900106c6:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900106ca:	2b02      	cmp	r3, #2
900106cc:	d002      	beq.n	900106d4 <_ZN8touchgfx3HAL4tickEv+0x168>
900106ce:	2001      	movs	r0, #1
900106d0:	f7f0 fb14 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900106d4:	2300      	movs	r3, #0
900106d6:	702b      	strb	r3, [r5, #0]
900106d8:	b004      	add	sp, #16
900106da:	bd70      	pop	{r4, r5, r6, pc}
900106dc:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
900106e0:	4620      	mov	r0, r4
900106e2:	4798      	blx	r3
900106e4:	e7a6      	b.n	90010634 <_ZN8touchgfx3HAL4tickEv+0xc8>
900106e6:	2863      	cmp	r0, #99	@ 0x63
900106e8:	bfcb      	itete	gt
900106ea:	2300      	movgt	r3, #0
900106ec:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
900106f0:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
900106f4:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
900106f8:	e7d0      	b.n	9001069c <_ZN8touchgfx3HAL4tickEv+0x130>
900106fa:	bf00      	nop
900106fc:	24021990 	.word	0x24021990
90010700:	24021991 	.word	0x24021991
90010704:	05f5e100 	.word	0x05f5e100

90010708 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010708:	b510      	push	{r4, lr}
9001070a:	4604      	mov	r4, r0
9001070c:	f7f1 fe46 	bl	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010710:	2200      	movs	r2, #0
90010712:	6863      	ldr	r3, [r4, #4]
90010714:	729a      	strb	r2, [r3, #10]
90010716:	bd10      	pop	{r4, pc}

90010718 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90010718:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001071a:	301c      	adds	r0, #28
9001071c:	f017 be00 	b.w	90028320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010720 <_ZN8touchgfx3HAL5touchEll>:
90010720:	b530      	push	{r4, r5, lr}
90010722:	b087      	sub	sp, #28
90010724:	4604      	mov	r4, r0
90010726:	a804      	add	r0, sp, #16
90010728:	e9cd 1204 	strd	r1, r2, [sp, #16]
9001072c:	f005 fb8c 	bl	90015e48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010730:	9b04      	ldr	r3, [sp, #16]
90010732:	a906      	add	r1, sp, #24
90010734:	a803      	add	r0, sp, #12
90010736:	f8ad 300c 	strh.w	r3, [sp, #12]
9001073a:	9b05      	ldr	r3, [sp, #20]
9001073c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010740:	f005 fbd4 	bl	90015eec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010744:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90010748:	f104 001c 	add.w	r0, r4, #28
9001074c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010750:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010754:	b189      	cbz	r1, 9001077a <_ZN8touchgfx3HAL5touchEll+0x5a>
90010756:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
9001075a:	9300      	str	r3, [sp, #0]
9001075c:	4613      	mov	r3, r2
9001075e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010762:	462a      	mov	r2, r5
90010764:	f017 fdec 	bl	90028340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90010768:	b128      	cbz	r0, 90010776 <_ZN8touchgfx3HAL5touchEll+0x56>
9001076a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001076e:	6623      	str	r3, [r4, #96]	@ 0x60
90010770:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010774:	6663      	str	r3, [r4, #100]	@ 0x64
90010776:	b007      	add	sp, #28
90010778:	bd30      	pop	{r4, r5, pc}
9001077a:	f017 fe21 	bl	900283c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001077e:	2301      	movs	r3, #1
90010780:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010784:	e7f1      	b.n	9001076a <_ZN8touchgfx3HAL5touchEll+0x4a>

90010786 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90010786:	b510      	push	{r4, lr}
90010788:	2b00      	cmp	r3, #0
9001078a:	d046      	beq.n	9001081a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001078c:	ea81 0002 	eor.w	r0, r1, r2
90010790:	07c4      	lsls	r4, r0, #31
90010792:	d508      	bpl.n	900107a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010794:	440b      	add	r3, r1
90010796:	3a01      	subs	r2, #1
90010798:	428b      	cmp	r3, r1
9001079a:	d93e      	bls.n	9001081a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001079c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900107a0:	f801 0b01 	strb.w	r0, [r1], #1
900107a4:	e7f8      	b.n	90010798 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900107a6:	07d0      	lsls	r0, r2, #31
900107a8:	bf42      	ittt	mi
900107aa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900107ae:	f103 33ff 	addmi.w	r3, r3, #4294967295
900107b2:	f801 0b01 	strbmi.w	r0, [r1], #1
900107b6:	2b01      	cmp	r3, #1
900107b8:	d911      	bls.n	900107de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900107ba:	ea81 0402 	eor.w	r4, r1, r2
900107be:	4610      	mov	r0, r2
900107c0:	07a4      	lsls	r4, r4, #30
900107c2:	d022      	beq.n	9001080a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900107c4:	f023 0401 	bic.w	r4, r3, #1
900107c8:	440c      	add	r4, r1
900107ca:	428c      	cmp	r4, r1
900107cc:	4602      	mov	r2, r0
900107ce:	d904      	bls.n	900107da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900107d0:	8812      	ldrh	r2, [r2, #0]
900107d2:	3002      	adds	r0, #2
900107d4:	f821 2b02 	strh.w	r2, [r1], #2
900107d8:	e7f7      	b.n	900107ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900107da:	f003 0301 	and.w	r3, r3, #1
900107de:	f023 0003 	bic.w	r0, r3, #3
900107e2:	4408      	add	r0, r1
900107e4:	4288      	cmp	r0, r1
900107e6:	4614      	mov	r4, r2
900107e8:	d904      	bls.n	900107f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900107ea:	6824      	ldr	r4, [r4, #0]
900107ec:	3204      	adds	r2, #4
900107ee:	f841 4b04 	str.w	r4, [r1], #4
900107f2:	e7f7      	b.n	900107e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900107f4:	f003 0303 	and.w	r3, r3, #3
900107f8:	3a01      	subs	r2, #1
900107fa:	440b      	add	r3, r1
900107fc:	428b      	cmp	r3, r1
900107fe:	d90c      	bls.n	9001081a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010800:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010804:	f801 0b01 	strb.w	r0, [r1], #1
90010808:	e7f8      	b.n	900107fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001080a:	0790      	lsls	r0, r2, #30
9001080c:	d0e7      	beq.n	900107de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001080e:	f832 0b02 	ldrh.w	r0, [r2], #2
90010812:	3b02      	subs	r3, #2
90010814:	f821 0b02 	strh.w	r0, [r1], #2
90010818:	e7e1      	b.n	900107de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001081a:	2001      	movs	r0, #1
9001081c:	bd10      	pop	{r4, pc}

9001081e <_ZN8touchgfx3HAL7noTouchEv>:
9001081e:	b510      	push	{r4, lr}
90010820:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010824:	4604      	mov	r4, r0
90010826:	b153      	cbz	r3, 9001083e <_ZN8touchgfx3HAL7noTouchEv+0x20>
90010828:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
9001082c:	2101      	movs	r1, #1
9001082e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010832:	301c      	adds	r0, #28
90010834:	f017 fdc4 	bl	900283c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010838:	2300      	movs	r3, #0
9001083a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001083e:	bd10      	pop	{r4, pc}

90010840 <_ZN8touchgfx8Drawable5setXYEss>:
90010840:	b570      	push	{r4, r5, r6, lr}
90010842:	6803      	ldr	r3, [r0, #0]
90010844:	4604      	mov	r4, r0
90010846:	4615      	mov	r5, r2
90010848:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001084a:	4798      	blx	r3
9001084c:	6823      	ldr	r3, [r4, #0]
9001084e:	4629      	mov	r1, r5
90010850:	4620      	mov	r0, r4
90010852:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010858:	4718      	bx	r3
	...

9001085c <_ZN8touchgfx3HAL3lcdEv>:
9001085c:	4b04      	ldr	r3, [pc, #16]	@ (90010870 <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001085e:	681b      	ldr	r3, [r3, #0]
90010860:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90010864:	b10a      	cbz	r2, 9001086a <_ZN8touchgfx3HAL3lcdEv+0xe>
90010866:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90010868:	b900      	cbnz	r0, 9001086c <_ZN8touchgfx3HAL3lcdEv+0x10>
9001086a:	6898      	ldr	r0, [r3, #8]
9001086c:	4770      	bx	lr
9001086e:	bf00      	nop
90010870:	2402198c 	.word	0x2402198c

90010874 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010874:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010878:	b085      	sub	sp, #20
9001087a:	4604      	mov	r4, r0
9001087c:	2000      	movs	r0, #0
9001087e:	4699      	mov	r9, r3
90010880:	ad04      	add	r5, sp, #16
90010882:	460f      	mov	r7, r1
90010884:	4690      	mov	r8, r2
90010886:	f845 0d04 	str.w	r0, [r5, #-4]!
9001088a:	69a0      	ldr	r0, [r4, #24]
9001088c:	6806      	ldr	r6, [r0, #0]
9001088e:	9501      	str	r5, [sp, #4]
90010890:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90010894:	9500      	str	r5, [sp, #0]
90010896:	6835      	ldr	r5, [r6, #0]
90010898:	47a8      	blx	r5
9001089a:	4d10      	ldr	r5, [pc, #64]	@ (900108dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
9001089c:	4606      	mov	r6, r0
9001089e:	f8a5 9000 	strh.w	r9, [r5]
900108a2:	f7ff ffdb 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
900108a6:	6803      	ldr	r3, [r0, #0]
900108a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900108aa:	4798      	blx	r3
900108ac:	b128      	cbz	r0, 900108ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900108ae:	2801      	cmp	r0, #1
900108b0:	d00b      	beq.n	900108ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900108b2:	4630      	mov	r0, r6
900108b4:	b005      	add	sp, #20
900108b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900108ba:	882b      	ldrh	r3, [r5, #0]
900108bc:	fb08 7203 	mla	r2, r8, r3, r7
900108c0:	9b03      	ldr	r3, [sp, #12]
900108c2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900108c6:	63e3      	str	r3, [r4, #60]	@ 0x3c
900108c8:	e7f3      	b.n	900108b2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900108ca:	882a      	ldrh	r2, [r5, #0]
900108cc:	9b03      	ldr	r3, [sp, #12]
900108ce:	fb08 7202 	mla	r2, r8, r2, r7
900108d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900108d6:	1a9a      	subs	r2, r3, r2
900108d8:	63e2      	str	r2, [r4, #60]	@ 0x3c
900108da:	e7ea      	b.n	900108b2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900108dc:	24021986 	.word	0x24021986

900108e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
900108e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900108e2:	4b15      	ldr	r3, [pc, #84]	@ (90010938 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
900108e4:	460f      	mov	r7, r1
900108e6:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
900108ea:	4606      	mov	r6, r0
900108ec:	881b      	ldrh	r3, [r3, #0]
900108ee:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900108f0:	fb93 f4f4 	sdiv	r4, r3, r4
900108f4:	f7ff ffb2 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
900108f8:	6803      	ldr	r3, [r0, #0]
900108fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900108fc:	4798      	blx	r3
900108fe:	2801      	cmp	r0, #1
90010900:	d00b      	beq.n	9001091a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
90010902:	d303      	bcc.n	9001090c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90010904:	2802      	cmp	r0, #2
90010906:	d010      	beq.n	9001092a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90010908:	63f5      	str	r5, [r6, #60]	@ 0x3c
9001090a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001090c:	4b0b      	ldr	r3, [pc, #44]	@ (9001093c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001090e:	437c      	muls	r4, r7
90010910:	8819      	ldrh	r1, [r3, #0]
90010912:	434c      	muls	r4, r1
90010914:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90010918:	e7f6      	b.n	90010908 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
9001091a:	4b08      	ldr	r3, [pc, #32]	@ (9001093c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001091c:	437c      	muls	r4, r7
9001091e:	8819      	ldrh	r1, [r3, #0]
90010920:	434c      	muls	r4, r1
90010922:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90010926:	1b2d      	subs	r5, r5, r4
90010928:	e7ee      	b.n	90010908 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
9001092a:	4b04      	ldr	r3, [pc, #16]	@ (9001093c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001092c:	437c      	muls	r4, r7
9001092e:	8819      	ldrh	r1, [r3, #0]
90010930:	434c      	muls	r4, r1
90010932:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90010936:	e7e7      	b.n	90010908 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90010938:	24021988 	.word	0x24021988
9001093c:	24021986 	.word	0x24021986

90010940 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010940:	b5f0      	push	{r4, r5, r6, r7, lr}
90010942:	b08b      	sub	sp, #44	@ 0x2c
90010944:	4617      	mov	r7, r2
90010946:	4604      	mov	r4, r0
90010948:	460e      	mov	r6, r1
9001094a:	461d      	mov	r5, r3
9001094c:	f7ff ff86 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010950:	6803      	ldr	r3, [r0, #0]
90010952:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010954:	4798      	blx	r3
90010956:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001095a:	9007      	str	r0, [sp, #28]
9001095c:	4631      	mov	r1, r6
9001095e:	6822      	ldr	r2, [r4, #0]
90010960:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010964:	4b0c      	ldr	r3, [pc, #48]	@ (90010998 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010966:	4620      	mov	r0, r4
90010968:	881b      	ldrh	r3, [r3, #0]
9001096a:	9306      	str	r3, [sp, #24]
9001096c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010970:	9305      	str	r3, [sp, #20]
90010972:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010976:	9304      	str	r3, [sp, #16]
90010978:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001097c:	9303      	str	r3, [sp, #12]
9001097e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010982:	9302      	str	r3, [sp, #8]
90010984:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010988:	e9cd 5300 	strd	r5, r3, [sp]
9001098c:	463b      	mov	r3, r7
9001098e:	6c15      	ldr	r5, [r2, #64]	@ 0x40
90010990:	2200      	movs	r2, #0
90010992:	47a8      	blx	r5
90010994:	b00b      	add	sp, #44	@ 0x2c
90010996:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010998:	24021986 	.word	0x24021986

9001099c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
9001099c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900109a0:	4698      	mov	r8, r3
900109a2:	6803      	ldr	r3, [r0, #0]
900109a4:	b08b      	sub	sp, #44	@ 0x2c
900109a6:	4617      	mov	r7, r2
900109a8:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
900109aa:	460e      	mov	r6, r1
900109ac:	4b13      	ldr	r3, [pc, #76]	@ (900109fc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900109ae:	4604      	mov	r4, r0
900109b0:	f8b3 9000 	ldrh.w	r9, [r3]
900109b4:	f7ff ff52 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
900109b8:	6803      	ldr	r3, [r0, #0]
900109ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900109bc:	4798      	blx	r3
900109be:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900109c2:	2200      	movs	r2, #0
900109c4:	4631      	mov	r1, r6
900109c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
900109ca:	2302      	movs	r3, #2
900109cc:	4620      	mov	r0, r4
900109ce:	e9cd 9306 	strd	r9, r3, [sp, #24]
900109d2:	2301      	movs	r3, #1
900109d4:	9305      	str	r3, [sp, #20]
900109d6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900109da:	9304      	str	r3, [sp, #16]
900109dc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900109e0:	9303      	str	r3, [sp, #12]
900109e2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900109e6:	9302      	str	r3, [sp, #8]
900109e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900109ec:	e9cd 8300 	strd	r8, r3, [sp]
900109f0:	463b      	mov	r3, r7
900109f2:	47a8      	blx	r5
900109f4:	b00b      	add	sp, #44	@ 0x2c
900109f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900109fa:	bf00      	nop
900109fc:	24021986 	.word	0x24021986

90010a00 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010a00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010a04:	4698      	mov	r8, r3
90010a06:	6803      	ldr	r3, [r0, #0]
90010a08:	b087      	sub	sp, #28
90010a0a:	460e      	mov	r6, r1
90010a0c:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
90010a0e:	4617      	mov	r7, r2
90010a10:	4b0f      	ldr	r3, [pc, #60]	@ (90010a50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010a12:	4604      	mov	r4, r0
90010a14:	f8b3 9000 	ldrh.w	r9, [r3]
90010a18:	f7ff ff20 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010a1c:	6803      	ldr	r3, [r0, #0]
90010a1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010a20:	4798      	blx	r3
90010a22:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90010a26:	463a      	mov	r2, r7
90010a28:	4631      	mov	r1, r6
90010a2a:	f8cd 900c 	str.w	r9, [sp, #12]
90010a2e:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010a32:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90010a36:	4620      	mov	r0, r4
90010a38:	9302      	str	r3, [sp, #8]
90010a3a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90010a3e:	9301      	str	r3, [sp, #4]
90010a40:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010a44:	9300      	str	r3, [sp, #0]
90010a46:	4643      	mov	r3, r8
90010a48:	47a8      	blx	r5
90010a4a:	b007      	add	sp, #28
90010a4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010a50:	24021986 	.word	0x24021986

90010a54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010a58:	4604      	mov	r4, r0
90010a5a:	b08f      	sub	sp, #60	@ 0x3c
90010a5c:	4610      	mov	r0, r2
90010a5e:	460d      	mov	r5, r1
90010a60:	4691      	mov	r9, r2
90010a62:	461e      	mov	r6, r3
90010a64:	f009 f938 	bl	90019cd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010a68:	2800      	cmp	r0, #0
90010a6a:	f000 809d 	beq.w	90010ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010a6e:	6823      	ldr	r3, [r4, #0]
90010a70:	4620      	mov	r0, r4
90010a72:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90010c0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010a76:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90010a7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010a7c:	4798      	blx	r3
90010a7e:	6823      	ldr	r3, [r4, #0]
90010a80:	4620      	mov	r0, r4
90010a82:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90010c10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90010a86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010a88:	4798      	blx	r3
90010a8a:	f8bb 3000 	ldrh.w	r3, [fp]
90010a8e:	4f5c      	ldr	r7, [pc, #368]	@ (90010c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010a90:	9301      	str	r3, [sp, #4]
90010a92:	f8ba 3000 	ldrh.w	r3, [sl]
90010a96:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90010a9a:	4640      	mov	r0, r8
90010a9c:	9302      	str	r3, [sp, #8]
90010a9e:	883b      	ldrh	r3, [r7, #0]
90010aa0:	9303      	str	r3, [sp, #12]
90010aa2:	4b58      	ldr	r3, [pc, #352]	@ (90010c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010aa4:	881a      	ldrh	r2, [r3, #0]
90010aa6:	9305      	str	r3, [sp, #20]
90010aa8:	9204      	str	r2, [sp, #16]
90010aaa:	f009 f9a9 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010aae:	8038      	strh	r0, [r7, #0]
90010ab0:	4640      	mov	r0, r8
90010ab2:	f009 f9d9 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
90010ab6:	9b05      	ldr	r3, [sp, #20]
90010ab8:	b280      	uxth	r0, r0
90010aba:	8018      	strh	r0, [r3, #0]
90010abc:	4b52      	ldr	r3, [pc, #328]	@ (90010c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010abe:	781b      	ldrb	r3, [r3, #0]
90010ac0:	2b00      	cmp	r3, #0
90010ac2:	d174      	bne.n	90010bae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010ac4:	883b      	ldrh	r3, [r7, #0]
90010ac6:	f8aa 0000 	strh.w	r0, [sl]
90010aca:	f8ab 3000 	strh.w	r3, [fp]
90010ace:	4648      	mov	r0, r9
90010ad0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90010ad4:	f009 f900 	bl	90019cd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010ad8:	2200      	movs	r2, #0
90010ada:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90010ade:	4611      	mov	r1, r2
90010ae0:	4628      	mov	r0, r5
90010ae2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90010ae6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90010aea:	f7ff fea9 	bl	90010840 <_ZN8touchgfx8Drawable5setXYEss>
90010aee:	2301      	movs	r3, #1
90010af0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90010af4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90010af8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010afc:	2b00      	cmp	r3, #0
90010afe:	dd5c      	ble.n	90010bba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010b00:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010b04:	2b00      	cmp	r3, #0
90010b06:	dd58      	ble.n	90010bba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010b08:	462a      	mov	r2, r5
90010b0a:	ab0a      	add	r3, sp, #40	@ 0x28
90010b0c:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010b10:	6851      	ldr	r1, [r2, #4]
90010b12:	c303      	stmia	r3!, {r0, r1}
90010b14:	4631      	mov	r1, r6
90010b16:	a80a      	add	r0, sp, #40	@ 0x28
90010b18:	f7ff fbae 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90010b1c:	4b38      	ldr	r3, [pc, #224]	@ (90010c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010b1e:	2100      	movs	r1, #0
90010b20:	f9b3 2000 	ldrsh.w	r2, [r3]
90010b24:	4b37      	ldr	r3, [pc, #220]	@ (90010c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010b26:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90010b2a:	aa0a      	add	r2, sp, #40	@ 0x28
90010b2c:	f9b3 3000 	ldrsh.w	r3, [r3]
90010b30:	910c      	str	r1, [sp, #48]	@ 0x30
90010b32:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90010b36:	ab08      	add	r3, sp, #32
90010b38:	e892 0003 	ldmia.w	r2, {r0, r1}
90010b3c:	e883 0003 	stmia.w	r3, {r0, r1}
90010b40:	4618      	mov	r0, r3
90010b42:	a90c      	add	r1, sp, #48	@ 0x30
90010b44:	f7ff fb98 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90010b48:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90010b4a:	2b00      	cmp	r3, #0
90010b4c:	d13c      	bne.n	90010bc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010b4e:	2000      	movs	r0, #0
90010b50:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010b54:	2600      	movs	r6, #0
90010b56:	696b      	ldr	r3, [r5, #20]
90010b58:	a908      	add	r1, sp, #32
90010b5a:	682a      	ldr	r2, [r5, #0]
90010b5c:	4628      	mov	r0, r5
90010b5e:	9305      	str	r3, [sp, #20]
90010b60:	616e      	str	r6, [r5, #20]
90010b62:	6892      	ldr	r2, [r2, #8]
90010b64:	4790      	blx	r2
90010b66:	9b05      	ldr	r3, [sp, #20]
90010b68:	4652      	mov	r2, sl
90010b6a:	4649      	mov	r1, r9
90010b6c:	616b      	str	r3, [r5, #20]
90010b6e:	4628      	mov	r0, r5
90010b70:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010b74:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010b78:	f7ff fe62 	bl	90010840 <_ZN8touchgfx8Drawable5setXYEss>
90010b7c:	9a01      	ldr	r2, [sp, #4]
90010b7e:	4b23      	ldr	r3, [pc, #140]	@ (90010c0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010b80:	4620      	mov	r0, r4
90010b82:	801a      	strh	r2, [r3, #0]
90010b84:	9a02      	ldr	r2, [sp, #8]
90010b86:	4b22      	ldr	r3, [pc, #136]	@ (90010c10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010b88:	801a      	strh	r2, [r3, #0]
90010b8a:	9a03      	ldr	r2, [sp, #12]
90010b8c:	4b1c      	ldr	r3, [pc, #112]	@ (90010c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010b8e:	801a      	strh	r2, [r3, #0]
90010b90:	4b1c      	ldr	r3, [pc, #112]	@ (90010c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010b92:	9a04      	ldr	r2, [sp, #16]
90010b94:	801a      	strh	r2, [r3, #0]
90010b96:	6823      	ldr	r3, [r4, #0]
90010b98:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90010b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b9e:	4798      	blx	r3
90010ba0:	6823      	ldr	r3, [r4, #0]
90010ba2:	4620      	mov	r0, r4
90010ba4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010ba6:	4798      	blx	r3
90010ba8:	b00f      	add	sp, #60	@ 0x3c
90010baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010bae:	883b      	ldrh	r3, [r7, #0]
90010bb0:	f8ab 0000 	strh.w	r0, [fp]
90010bb4:	f8aa 3000 	strh.w	r3, [sl]
90010bb8:	e789      	b.n	90010ace <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90010bba:	462a      	mov	r2, r5
90010bbc:	ab0a      	add	r3, sp, #40	@ 0x28
90010bbe:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010bc2:	6851      	ldr	r1, [r2, #4]
90010bc4:	c303      	stmia	r3!, {r0, r1}
90010bc6:	e7a9      	b.n	90010b1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010bc8:	a807      	add	r0, sp, #28
90010bca:	f009 fa8f 	bl	9001a0ec <_ZNK8touchgfx6Bitmap9getFormatEv>
90010bce:	4606      	mov	r6, r0
90010bd0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90010bd2:	6803      	ldr	r3, [r0, #0]
90010bd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010bd6:	4798      	blx	r3
90010bd8:	4286      	cmp	r6, r0
90010bda:	d1b8      	bne.n	90010b4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010bdc:	f7ff fe3e 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010be0:	6803      	ldr	r3, [r0, #0]
90010be2:	4606      	mov	r6, r0
90010be4:	a807      	add	r0, sp, #28
90010be6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010be8:	9305      	str	r3, [sp, #20]
90010bea:	f009 fa7f 	bl	9001a0ec <_ZNK8touchgfx6Bitmap9getFormatEv>
90010bee:	9b05      	ldr	r3, [sp, #20]
90010bf0:	4601      	mov	r1, r0
90010bf2:	4630      	mov	r0, r6
90010bf4:	4798      	blx	r3
90010bf6:	f080 0001 	eor.w	r0, r0, #1
90010bfa:	b2c0      	uxtb	r0, r0
90010bfc:	e7a8      	b.n	90010b50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010bfe:	bf00      	nop
90010c00:	24021980 	.word	0x24021980
90010c04:	24021982 	.word	0x24021982
90010c08:	24021984 	.word	0x24021984
90010c0c:	24021986 	.word	0x24021986
90010c10:	24021988 	.word	0x24021988

90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010c14:	4b07      	ldr	r3, [pc, #28]	@ (90010c34 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010c16:	b510      	push	{r4, lr}
90010c18:	781b      	ldrb	r3, [r3, #0]
90010c1a:	4604      	mov	r4, r0
90010c1c:	b13b      	cbz	r3, 90010c2e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010c1e:	6803      	ldr	r3, [r0, #0]
90010c20:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010c22:	4798      	blx	r3
90010c24:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010c26:	4283      	cmp	r3, r0
90010c28:	d101      	bne.n	90010c2e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010c2a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90010c2c:	bd10      	pop	{r4, pc}
90010c2e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90010c30:	e7fc      	b.n	90010c2c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010c32:	bf00      	nop
90010c34:	2402198a 	.word	0x2402198a

90010c38 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c3c:	461d      	mov	r5, r3
90010c3e:	b08a      	sub	sp, #40	@ 0x28
90010c40:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010c44:	4690      	mov	r8, r2
90010c46:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90010c4a:	2400      	movs	r4, #0
90010c4c:	4607      	mov	r7, r0
90010c4e:	fb06 8505 	mla	r5, r6, r5, r8
90010c52:	9404      	str	r4, [sp, #16]
90010c54:	f88d 4020 	strb.w	r4, [sp, #32]
90010c58:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010c5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010c60:	f8ad 3018 	strh.w	r3, [sp, #24]
90010c64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010c68:	f8ad 301a 	strh.w	r3, [sp, #26]
90010c6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010c70:	f8ad 301c 	strh.w	r3, [sp, #28]
90010c74:	f7ff ffce 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c78:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010c7c:	6878      	ldr	r0, [r7, #4]
90010c7e:	f8ad 601e 	strh.w	r6, [sp, #30]
90010c82:	a901      	add	r1, sp, #4
90010c84:	9505      	str	r5, [sp, #20]
90010c86:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010c8a:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90010c8e:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010c92:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90010c96:	6803      	ldr	r3, [r0, #0]
90010c98:	685b      	ldr	r3, [r3, #4]
90010c9a:	4798      	blx	r3
90010c9c:	b00a      	add	sp, #40	@ 0x28
90010c9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010ca2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010ca2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010ca6:	b08b      	sub	sp, #44	@ 0x2c
90010ca8:	2400      	movs	r4, #0
90010caa:	4691      	mov	r9, r2
90010cac:	461d      	mov	r5, r3
90010cae:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90010cb2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90010cb6:	4688      	mov	r8, r1
90010cb8:	4607      	mov	r7, r0
90010cba:	9404      	str	r4, [sp, #16]
90010cbc:	fb06 9505 	mla	r5, r6, r5, r9
90010cc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010cc4:	f7ff ffa6 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010cc8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010ccc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010cd0:	6878      	ldr	r0, [r7, #4]
90010cd2:	f8ad 3018 	strh.w	r3, [sp, #24]
90010cd6:	a901      	add	r1, sp, #4
90010cd8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010cdc:	9505      	str	r5, [sp, #20]
90010cde:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ce2:	f8ad 401c 	strh.w	r4, [sp, #28]
90010ce6:	f8ad 601e 	strh.w	r6, [sp, #30]
90010cea:	f8cd 8010 	str.w	r8, [sp, #16]
90010cee:	f8ad 4020 	strh.w	r4, [sp, #32]
90010cf2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010cf6:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010cfa:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90010cfe:	6803      	ldr	r3, [r0, #0]
90010d00:	685b      	ldr	r3, [r3, #4]
90010d02:	4798      	blx	r3
90010d04:	b00b      	add	sp, #44	@ 0x2c
90010d06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010d10:	b08a      	sub	sp, #40	@ 0x28
90010d12:	4698      	mov	r8, r3
90010d14:	2300      	movs	r3, #0
90010d16:	4606      	mov	r6, r0
90010d18:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90010d1c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90010d20:	2d0b      	cmp	r5, #11
90010d22:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90010d26:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90010d2a:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90010d2e:	9304      	str	r3, [sp, #16]
90010d30:	d137      	bne.n	90010da2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010d32:	2380      	movs	r3, #128	@ 0x80
90010d34:	f88d 0020 	strb.w	r0, [sp, #32]
90010d38:	4630      	mov	r0, r6
90010d3a:	9203      	str	r2, [sp, #12]
90010d3c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010d40:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010d44:	f8ad 3018 	strh.w	r3, [sp, #24]
90010d48:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010d4c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010d50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010d54:	f8ad 301c 	strh.w	r3, [sp, #28]
90010d58:	f7ff ff5c 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d5c:	2c0b      	cmp	r4, #11
90010d5e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90010d62:	f8ad 701e 	strh.w	r7, [sp, #30]
90010d66:	bf94      	ite	ls
90010d68:	4b19      	ldrls	r3, [pc, #100]	@ (90010dd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010d6a:	2100      	movhi	r1, #0
90010d6c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90010d70:	bf98      	it	ls
90010d72:	5d19      	ldrbls	r1, [r3, r4]
90010d74:	fb02 8307 	mla	r3, r2, r7, r8
90010d78:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010d7c:	10c9      	asrs	r1, r1, #3
90010d7e:	fb01 0003 	mla	r0, r1, r3, r0
90010d82:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90010d86:	a901      	add	r1, sp, #4
90010d88:	9005      	str	r0, [sp, #20]
90010d8a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010d8e:	2300      	movs	r3, #0
90010d90:	6870      	ldr	r0, [r6, #4]
90010d92:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010d96:	6803      	ldr	r3, [r0, #0]
90010d98:	685b      	ldr	r3, [r3, #4]
90010d9a:	4798      	blx	r3
90010d9c:	b00a      	add	sp, #40	@ 0x28
90010d9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010da2:	2d02      	cmp	r5, #2
90010da4:	d109      	bne.n	90010dba <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010da6:	28ff      	cmp	r0, #255	@ 0xff
90010da8:	d105      	bne.n	90010db6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010daa:	f1bc 0f00 	cmp.w	ip, #0
90010dae:	bf14      	ite	ne
90010db0:	2340      	movne	r3, #64	@ 0x40
90010db2:	2320      	moveq	r3, #32
90010db4:	e7be      	b.n	90010d34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010db6:	2340      	movs	r3, #64	@ 0x40
90010db8:	e7bc      	b.n	90010d34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010dba:	28ff      	cmp	r0, #255	@ 0xff
90010dbc:	d105      	bne.n	90010dca <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010dbe:	f1bc 0f00 	cmp.w	ip, #0
90010dc2:	bf14      	ite	ne
90010dc4:	2304      	movne	r3, #4
90010dc6:	2301      	moveq	r3, #1
90010dc8:	e7b4      	b.n	90010d34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010dca:	2304      	movs	r3, #4
90010dcc:	e7b2      	b.n	90010d34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010dce:	bf00      	nop
90010dd0:	9002d2a4 	.word	0x9002d2a4

90010dd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010dd8:	b08b      	sub	sp, #44	@ 0x2c
90010dda:	461d      	mov	r5, r3
90010ddc:	2400      	movs	r4, #0
90010dde:	4688      	mov	r8, r1
90010de0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90010de4:	4693      	mov	fp, r2
90010de6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90010dea:	4607      	mov	r7, r0
90010dec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90010df0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90010df4:	9404      	str	r4, [sp, #16]
90010df6:	bf14      	ite	ne
90010df8:	2308      	movne	r3, #8
90010dfa:	2302      	moveq	r3, #2
90010dfc:	fb05 b50a 	mla	r5, r5, sl, fp
90010e00:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010e04:	f7ff ff06 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010e08:	2e0b      	cmp	r6, #11
90010e0a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90010e0e:	a901      	add	r1, sp, #4
90010e10:	bf98      	it	ls
90010e12:	4b13      	ldrls	r3, [pc, #76]	@ (90010e60 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010e14:	f8ad a01e 	strh.w	sl, [sp, #30]
90010e18:	bf98      	it	ls
90010e1a:	5d9c      	ldrbls	r4, [r3, r6]
90010e1c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010e20:	10e4      	asrs	r4, r4, #3
90010e22:	f8cd 8010 	str.w	r8, [sp, #16]
90010e26:	f8ad 3018 	strh.w	r3, [sp, #24]
90010e2a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010e2e:	fb04 0405 	mla	r4, r4, r5, r0
90010e32:	6878      	ldr	r0, [r7, #4]
90010e34:	f8ad 301a 	strh.w	r3, [sp, #26]
90010e38:	2300      	movs	r3, #0
90010e3a:	9405      	str	r4, [sp, #20]
90010e3c:	f8ad 301c 	strh.w	r3, [sp, #28]
90010e40:	f88d 9020 	strb.w	r9, [sp, #32]
90010e44:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90010e48:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010e4c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90010e50:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90010e54:	6803      	ldr	r3, [r0, #0]
90010e56:	685b      	ldr	r3, [r3, #4]
90010e58:	4798      	blx	r3
90010e5a:	b00b      	add	sp, #44	@ 0x2c
90010e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010e60:	9002d2a4 	.word	0x9002d2a4

90010e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010e64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010e68:	461e      	mov	r6, r3
90010e6a:	4b0a      	ldr	r3, [pc, #40]	@ (90010e94 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010e6c:	460f      	mov	r7, r1
90010e6e:	4690      	mov	r8, r2
90010e70:	881d      	ldrh	r5, [r3, #0]
90010e72:	f7ff fcf3 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010e76:	6803      	ldr	r3, [r0, #0]
90010e78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e7a:	4798      	blx	r3
90010e7c:	280b      	cmp	r0, #11
90010e7e:	bf96      	itet	ls
90010e80:	4b05      	ldrls	r3, [pc, #20]	@ (90010e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010e82:	2400      	movhi	r4, #0
90010e84:	5c1c      	ldrbls	r4, [r3, r0]
90010e86:	fb08 7005 	mla	r0, r8, r5, r7
90010e8a:	10e4      	asrs	r4, r4, #3
90010e8c:	fb04 6000 	mla	r0, r4, r0, r6
90010e90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010e94:	24021986 	.word	0x24021986
90010e98:	9002d2a4 	.word	0x9002d2a4

90010e9c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
90010e9e:	b08b      	sub	sp, #44	@ 0x2c
90010ea0:	461f      	mov	r7, r3
90010ea2:	4604      	mov	r4, r0
90010ea4:	4616      	mov	r6, r2
90010ea6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010eaa:	2500      	movs	r5, #0
90010eac:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010eb0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010eb4:	9504      	str	r5, [sp, #16]
90010eb6:	f8ad 3018 	strh.w	r3, [sp, #24]
90010eba:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010ebe:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ec2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010ec6:	f8ad 301c 	strh.w	r3, [sp, #28]
90010eca:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010ece:	f88d 3020 	strb.w	r3, [sp, #32]
90010ed2:	f7ff fe9f 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010ed6:	463a      	mov	r2, r7
90010ed8:	4631      	mov	r1, r6
90010eda:	4603      	mov	r3, r0
90010edc:	4620      	mov	r0, r4
90010ede:	f7ff ffc1 	bl	90010e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010ee2:	4b0e      	ldr	r3, [pc, #56]	@ (90010f1c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010ee4:	9005      	str	r0, [sp, #20]
90010ee6:	881b      	ldrh	r3, [r3, #0]
90010ee8:	f8ad 301e 	strh.w	r3, [sp, #30]
90010eec:	f7ff fcb6 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010ef0:	6803      	ldr	r3, [r0, #0]
90010ef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010ef4:	4798      	blx	r3
90010ef6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90010ef8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90010efc:	a901      	add	r1, sp, #4
90010efe:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90010f02:	9304      	str	r3, [sp, #16]
90010f04:	6860      	ldr	r0, [r4, #4]
90010f06:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010f0a:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90010f0e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010f12:	6803      	ldr	r3, [r0, #0]
90010f14:	685b      	ldr	r3, [r3, #4]
90010f16:	4798      	blx	r3
90010f18:	b00b      	add	sp, #44	@ 0x2c
90010f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010f1c:	24021986 	.word	0x24021986

90010f20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010f20:	b5f0      	push	{r4, r5, r6, r7, lr}
90010f22:	b08d      	sub	sp, #52	@ 0x34
90010f24:	2501      	movs	r5, #1
90010f26:	4604      	mov	r4, r0
90010f28:	466b      	mov	r3, sp
90010f2a:	9503      	str	r5, [sp, #12]
90010f2c:	e883 0006 	stmia.w	r3, {r1, r2}
90010f30:	2300      	movs	r3, #0
90010f32:	f8bd 6000 	ldrh.w	r6, [sp]
90010f36:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010f3a:	9306      	str	r3, [sp, #24]
90010f3c:	6803      	ldr	r3, [r0, #0]
90010f3e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010f40:	4798      	blx	r3
90010f42:	463a      	mov	r2, r7
90010f44:	4631      	mov	r1, r6
90010f46:	4603      	mov	r3, r0
90010f48:	4620      	mov	r0, r4
90010f4a:	f7ff ff8b 	bl	90010e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010f4e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90010f50:	9004      	str	r0, [sp, #16]
90010f52:	9307      	str	r3, [sp, #28]
90010f54:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010f58:	f8ad 3020 	strh.w	r3, [sp, #32]
90010f5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010f60:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010f64:	4b0e      	ldr	r3, [pc, #56]	@ (90010fa0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010f66:	881b      	ldrh	r3, [r3, #0]
90010f68:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010f6c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010f70:	f7ff fc74 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010f74:	6803      	ldr	r3, [r0, #0]
90010f76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f78:	4798      	blx	r3
90010f7a:	23ff      	movs	r3, #255	@ 0xff
90010f7c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010f80:	a903      	add	r1, sp, #12
90010f82:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010f86:	6860      	ldr	r0, [r4, #4]
90010f88:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010f8c:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010f90:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010f94:	6803      	ldr	r3, [r0, #0]
90010f96:	685b      	ldr	r3, [r3, #4]
90010f98:	4798      	blx	r3
90010f9a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90010f9c:	b00d      	add	sp, #52	@ 0x34
90010f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010fa0:	24021986 	.word	0x24021986

90010fa4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010fa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010fa8:	b08c      	sub	sp, #48	@ 0x30
90010faa:	461e      	mov	r6, r3
90010fac:	2300      	movs	r3, #0
90010fae:	4604      	mov	r4, r0
90010fb0:	466d      	mov	r5, sp
90010fb2:	9306      	str	r3, [sp, #24]
90010fb4:	6803      	ldr	r3, [r0, #0]
90010fb6:	e885 0006 	stmia.w	r5, {r1, r2}
90010fba:	2501      	movs	r5, #1
90010fbc:	f8bd 7000 	ldrh.w	r7, [sp]
90010fc0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010fc4:	9503      	str	r5, [sp, #12]
90010fc6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010fc8:	4798      	blx	r3
90010fca:	4642      	mov	r2, r8
90010fcc:	4639      	mov	r1, r7
90010fce:	4603      	mov	r3, r0
90010fd0:	4620      	mov	r0, r4
90010fd2:	f7ff ff47 	bl	90010e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010fd6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010fda:	9004      	str	r0, [sp, #16]
90010fdc:	f8ad 3020 	strh.w	r3, [sp, #32]
90010fe0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010fe4:	9607      	str	r6, [sp, #28]
90010fe6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010fea:	4b10      	ldr	r3, [pc, #64]	@ (9001102c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010fec:	881b      	ldrh	r3, [r3, #0]
90010fee:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010ff2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90010ff4:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010ff8:	f7ff fc30 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
90010ffc:	6803      	ldr	r3, [r0, #0]
90010ffe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011000:	4798      	blx	r3
90011002:	23ff      	movs	r3, #255	@ 0xff
90011004:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011008:	a903      	add	r1, sp, #12
9001100a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001100e:	6860      	ldr	r0, [r4, #4]
90011010:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011014:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011018:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
9001101c:	6803      	ldr	r3, [r0, #0]
9001101e:	685b      	ldr	r3, [r3, #4]
90011020:	4798      	blx	r3
90011022:	4630      	mov	r0, r6
90011024:	b00c      	add	sp, #48	@ 0x30
90011026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001102a:	bf00      	nop
9001102c:	24021986 	.word	0x24021986

90011030 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011030:	b5f0      	push	{r4, r5, r6, r7, lr}
90011032:	b085      	sub	sp, #20
90011034:	4605      	mov	r5, r0
90011036:	ac02      	add	r4, sp, #8
90011038:	e884 0006 	stmia.w	r4, {r1, r2}
9001103c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011040:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90011044:	f7ff fde6 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011048:	4631      	mov	r1, r6
9001104a:	4603      	mov	r3, r0
9001104c:	463a      	mov	r2, r7
9001104e:	4628      	mov	r0, r5
90011050:	f7ff ff08 	bl	90010e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011054:	4a05      	ldr	r2, [pc, #20]	@ (9001106c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90011056:	682b      	ldr	r3, [r5, #0]
90011058:	8812      	ldrh	r2, [r2, #0]
9001105a:	9200      	str	r2, [sp, #0]
9001105c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001105e:	4603      	mov	r3, r0
90011060:	4628      	mov	r0, r5
90011062:	e894 0006 	ldmia.w	r4, {r1, r2}
90011066:	47b0      	blx	r6
90011068:	b005      	add	sp, #20
9001106a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001106c:	24021986 	.word	0x24021986

90011070 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011070:	b570      	push	{r4, r5, r6, lr}
90011072:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90011076:	4604      	mov	r4, r0
90011078:	b19b      	cbz	r3, 900110a2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
9001107a:	2002      	movs	r0, #2
9001107c:	f7ef fe72 	bl	90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011080:	2300      	movs	r3, #0
90011082:	4620      	mov	r0, r4
90011084:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90011088:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
9001108c:	6823      	ldr	r3, [r4, #0]
9001108e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
90011092:	f7ff fdbf 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011096:	4601      	mov	r1, r0
90011098:	4620      	mov	r0, r4
9001109a:	462b      	mov	r3, r5
9001109c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900110a0:	4718      	bx	r3
900110a2:	bd70      	pop	{r4, r5, r6, pc}

900110a4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900110a4:	b570      	push	{r4, r5, r6, lr}
900110a6:	4605      	mov	r5, r0
900110a8:	460c      	mov	r4, r1
900110aa:	2003      	movs	r0, #3
900110ac:	b149      	cbz	r1, 900110c2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900110ae:	f7ef fdf1 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900110b2:	6928      	ldr	r0, [r5, #16]
900110b4:	b168      	cbz	r0, 900110d2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900110b6:	6803      	ldr	r3, [r0, #0]
900110b8:	2101      	movs	r1, #1
900110ba:	695b      	ldr	r3, [r3, #20]
900110bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900110c0:	4718      	bx	r3
900110c2:	f7ef fe1b 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900110c6:	6928      	ldr	r0, [r5, #16]
900110c8:	b118      	cbz	r0, 900110d2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900110ca:	6803      	ldr	r3, [r0, #0]
900110cc:	4621      	mov	r1, r4
900110ce:	695b      	ldr	r3, [r3, #20]
900110d0:	e7f4      	b.n	900110bc <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900110d2:	bd70      	pop	{r4, r5, r6, pc}

900110d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900110d4:	b538      	push	{r3, r4, r5, lr}
900110d6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900110da:	4604      	mov	r4, r0
900110dc:	460d      	mov	r5, r1
900110de:	428b      	cmp	r3, r1
900110e0:	d006      	beq.n	900110f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900110e2:	6803      	ldr	r3, [r0, #0]
900110e4:	b929      	cbnz	r1, 900110f2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900110e6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
900110ea:	4798      	blx	r3
900110ec:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900110f0:	bd38      	pop	{r3, r4, r5, pc}
900110f2:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
900110f6:	e7f8      	b.n	900110ea <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

900110f8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
900110f8:	4b0c      	ldr	r3, [pc, #48]	@ (9001112c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
900110fa:	b510      	push	{r4, lr}
900110fc:	781b      	ldrb	r3, [r3, #0]
900110fe:	4604      	mov	r4, r0
90011100:	b953      	cbnz	r3, 90011118 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011102:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90011106:	b93b      	cbnz	r3, 90011118 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011108:	6840      	ldr	r0, [r0, #4]
9001110a:	f000 f919 	bl	90011340 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001110e:	b118      	cbz	r0, 90011118 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011110:	6862      	ldr	r2, [r4, #4]
90011112:	7a53      	ldrb	r3, [r2, #9]
90011114:	2b00      	cmp	r3, #0
90011116:	d0fc      	beq.n	90011112 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
90011118:	f7f1 f938 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001111c:	4620      	mov	r0, r4
9001111e:	2100      	movs	r1, #0
90011120:	f7ff ffd8 	bl	900110d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011124:	4620      	mov	r0, r4
90011126:	f7ff fd75 	bl	90010c14 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001112a:	bd10      	pop	{r4, pc}
9001112c:	2402198a 	.word	0x2402198a

90011130 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011130:	b570      	push	{r4, r5, r6, lr}
90011132:	4604      	mov	r4, r0
90011134:	6803      	ldr	r3, [r0, #0]
90011136:	b919      	cbnz	r1, 90011140 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011138:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001113a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001113e:	4718      	bx	r3
90011140:	2200      	movs	r2, #0
90011142:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90011146:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001114a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001114c:	4798      	blx	r3
9001114e:	6863      	ldr	r3, [r4, #4]
90011150:	2101      	movs	r1, #1
90011152:	4605      	mov	r5, r0
90011154:	4620      	mov	r0, r4
90011156:	7299      	strb	r1, [r3, #10]
90011158:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
9001115c:	f7ff ffba 	bl	900110d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011160:	4628      	mov	r0, r5
90011162:	bd70      	pop	{r4, r5, r6, pc}

90011164 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011164:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011168:	1a13      	subs	r3, r2, r0
9001116a:	4258      	negs	r0, r3
9001116c:	4158      	adcs	r0, r3
9001116e:	4770      	bx	lr

90011170 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011170:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011174:	1a9b      	subs	r3, r3, r2
90011176:	2b00      	cmp	r3, #0
90011178:	bfdc      	itt	le
9001117a:	6882      	ldrle	r2, [r0, #8]
9001117c:	189b      	addle	r3, r3, r2
9001117e:	2b01      	cmp	r3, #1
90011180:	bfcc      	ite	gt
90011182:	2000      	movgt	r0, #0
90011184:	2001      	movle	r0, #1
90011186:	4770      	bx	lr

90011188 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011188:	6902      	ldr	r2, [r0, #16]
9001118a:	6843      	ldr	r3, [r0, #4]
9001118c:	2024      	movs	r0, #36	@ 0x24
9001118e:	fb00 3002 	mla	r0, r0, r2, r3
90011192:	4770      	bx	lr

90011194 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90011194:	6803      	ldr	r3, [r0, #0]
90011196:	691b      	ldr	r3, [r3, #16]
90011198:	4718      	bx	r3

9001119a <_ZN8touchgfx13DMA_Interface7executeEv>:
9001119a:	2301      	movs	r3, #1
9001119c:	b570      	push	{r4, r5, r6, lr}
9001119e:	7203      	strb	r3, [r0, #8]
900111a0:	4604      	mov	r4, r0
900111a2:	6840      	ldr	r0, [r0, #4]
900111a4:	6803      	ldr	r3, [r0, #0]
900111a6:	699b      	ldr	r3, [r3, #24]
900111a8:	4798      	blx	r3
900111aa:	6803      	ldr	r3, [r0, #0]
900111ac:	4605      	mov	r5, r0
900111ae:	2b40      	cmp	r3, #64	@ 0x40
900111b0:	d00c      	beq.n	900111cc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900111b2:	d810      	bhi.n	900111d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900111b4:	2b04      	cmp	r3, #4
900111b6:	d01d      	beq.n	900111f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900111b8:	d804      	bhi.n	900111c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900111ba:	2b01      	cmp	r3, #1
900111bc:	d006      	beq.n	900111cc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900111be:	2b02      	cmp	r3, #2
900111c0:	d02c      	beq.n	9001121c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900111c2:	bd70      	pop	{r4, r5, r6, pc}
900111c4:	2b08      	cmp	r3, #8
900111c6:	d01d      	beq.n	90011204 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900111c8:	2b20      	cmp	r3, #32
900111ca:	d1fa      	bne.n	900111c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900111cc:	6823      	ldr	r3, [r4, #0]
900111ce:	4620      	mov	r0, r4
900111d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900111d2:	4798      	blx	r3
900111d4:	e013      	b.n	900111fe <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900111d6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900111da:	d0f7      	beq.n	900111cc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900111dc:	d804      	bhi.n	900111e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900111de:	2b80      	cmp	r3, #128	@ 0x80
900111e0:	d0f4      	beq.n	900111cc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900111e2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900111e6:	e7f0      	b.n	900111ca <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900111e8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900111ec:	d0ee      	beq.n	900111cc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900111ee:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900111f2:	e7e5      	b.n	900111c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900111f4:	6823      	ldr	r3, [r4, #0]
900111f6:	7f01      	ldrb	r1, [r0, #28]
900111f8:	4620      	mov	r0, r4
900111fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900111fc:	4798      	blx	r3
900111fe:	6823      	ldr	r3, [r4, #0]
90011200:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011202:	e006      	b.n	90011212 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011204:	6823      	ldr	r3, [r4, #0]
90011206:	7f01      	ldrb	r1, [r0, #28]
90011208:	4620      	mov	r0, r4
9001120a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001120c:	4798      	blx	r3
9001120e:	6823      	ldr	r3, [r4, #0]
90011210:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011212:	4629      	mov	r1, r5
90011214:	4620      	mov	r0, r4
90011216:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001121a:	4718      	bx	r3
9001121c:	6823      	ldr	r3, [r4, #0]
9001121e:	4620      	mov	r0, r4
90011220:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011222:	4798      	blx	r3
90011224:	e7f3      	b.n	9001120e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011226 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011226:	4770      	bx	lr

90011228 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011228:	4770      	bx	lr

9001122a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001122a:	4770      	bx	lr

9001122c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9001122c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011230:	b510      	push	{r4, lr}
90011232:	1ad2      	subs	r2, r2, r3
90011234:	2a00      	cmp	r2, #0
90011236:	bfdc      	itt	le
90011238:	6884      	ldrle	r4, [r0, #8]
9001123a:	1912      	addle	r2, r2, r4
9001123c:	2a01      	cmp	r2, #1
9001123e:	dd16      	ble.n	9001126e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011240:	6842      	ldr	r2, [r0, #4]
90011242:	2424      	movs	r4, #36	@ 0x24
90011244:	fb04 2303 	mla	r3, r4, r3, r2
90011248:	f101 0220 	add.w	r2, r1, #32
9001124c:	f851 4b04 	ldr.w	r4, [r1], #4
90011250:	4291      	cmp	r1, r2
90011252:	f843 4b04 	str.w	r4, [r3], #4
90011256:	d1f9      	bne.n	9001124c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011258:	780a      	ldrb	r2, [r1, #0]
9001125a:	701a      	strb	r2, [r3, #0]
9001125c:	68c3      	ldr	r3, [r0, #12]
9001125e:	6882      	ldr	r2, [r0, #8]
90011260:	f3bf 8f5b 	dmb	ish
90011264:	3301      	adds	r3, #1
90011266:	429a      	cmp	r2, r3
90011268:	bfd8      	it	le
9001126a:	1a9b      	suble	r3, r3, r2
9001126c:	60c3      	str	r3, [r0, #12]
9001126e:	bd10      	pop	{r4, pc}

90011270 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011270:	6903      	ldr	r3, [r0, #16]
90011272:	6882      	ldr	r2, [r0, #8]
90011274:	f3bf 8f5b 	dmb	ish
90011278:	3301      	adds	r3, #1
9001127a:	429a      	cmp	r2, r3
9001127c:	bfd8      	it	le
9001127e:	1a9b      	suble	r3, r3, r2
90011280:	6103      	str	r3, [r0, #16]
90011282:	4770      	bx	lr

90011284 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90011284:	b570      	push	{r4, r5, r6, lr}
90011286:	4604      	mov	r4, r0
90011288:	460e      	mov	r6, r1
9001128a:	6860      	ldr	r0, [r4, #4]
9001128c:	6803      	ldr	r3, [r0, #0]
9001128e:	685b      	ldr	r3, [r3, #4]
90011290:	4798      	blx	r3
90011292:	2800      	cmp	r0, #0
90011294:	d1f9      	bne.n	9001128a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90011296:	4d0d      	ldr	r5, [pc, #52]	@ (900112cc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011298:	6828      	ldr	r0, [r5, #0]
9001129a:	6803      	ldr	r3, [r0, #0]
9001129c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900112a0:	4798      	blx	r3
900112a2:	f7f1 f881 	bl	900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900112a6:	6828      	ldr	r0, [r5, #0]
900112a8:	2101      	movs	r1, #1
900112aa:	f7ff ff13 	bl	900110d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900112ae:	6860      	ldr	r0, [r4, #4]
900112b0:	4631      	mov	r1, r6
900112b2:	6803      	ldr	r3, [r0, #0]
900112b4:	689b      	ldr	r3, [r3, #8]
900112b6:	4798      	blx	r3
900112b8:	6823      	ldr	r3, [r4, #0]
900112ba:	4620      	mov	r0, r4
900112bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900112be:	4798      	blx	r3
900112c0:	6828      	ldr	r0, [r5, #0]
900112c2:	6803      	ldr	r3, [r0, #0]
900112c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900112c8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900112ca:	4718      	bx	r3
900112cc:	2402198c 	.word	0x2402198c

900112d0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900112d0:	b508      	push	{r3, lr}
900112d2:	f7f1 f85b 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900112d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900112da:	f7f1 b85f 	b.w	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900112de <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900112de:	b510      	push	{r4, lr}
900112e0:	4604      	mov	r4, r0
900112e2:	2114      	movs	r1, #20
900112e4:	f017 fe3a 	bl	90028f5c <_ZdlPvj>
900112e8:	4620      	mov	r0, r4
900112ea:	bd10      	pop	{r4, pc}

900112ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900112ec:	b570      	push	{r4, r5, r6, lr}
900112ee:	4604      	mov	r4, r0
900112f0:	6840      	ldr	r0, [r0, #4]
900112f2:	6803      	ldr	r3, [r0, #0]
900112f4:	681b      	ldr	r3, [r3, #0]
900112f6:	4798      	blx	r3
900112f8:	4605      	mov	r5, r0
900112fa:	b930      	cbnz	r0, 9001130a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900112fc:	7a23      	ldrb	r3, [r4, #8]
900112fe:	b123      	cbz	r3, 9001130a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011300:	6860      	ldr	r0, [r4, #4]
90011302:	6803      	ldr	r3, [r0, #0]
90011304:	695b      	ldr	r3, [r3, #20]
90011306:	4798      	blx	r3
90011308:	7225      	strb	r5, [r4, #8]
9001130a:	6860      	ldr	r0, [r4, #4]
9001130c:	6803      	ldr	r3, [r0, #0]
9001130e:	681b      	ldr	r3, [r3, #0]
90011310:	4798      	blx	r3
90011312:	b928      	cbnz	r0, 90011320 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011314:	6823      	ldr	r3, [r4, #0]
90011316:	4620      	mov	r0, r4
90011318:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001131a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001131e:	4718      	bx	r3
90011320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011324:	f7f1 b848 	b.w	900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011328 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011328:	b510      	push	{r4, lr}
9001132a:	6082      	str	r2, [r0, #8]
9001132c:	2200      	movs	r2, #0
9001132e:	4c03      	ldr	r4, [pc, #12]	@ (9001133c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011330:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011334:	e9c0 4100 	strd	r4, r1, [r0]
90011338:	bd10      	pop	{r4, pc}
9001133a:	bf00      	nop
9001133c:	9002d2b8 	.word	0x9002d2b8

90011340 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011340:	6840      	ldr	r0, [r0, #4]
90011342:	6803      	ldr	r3, [r0, #0]
90011344:	681b      	ldr	r3, [r3, #0]
90011346:	4718      	bx	r3

90011348 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011348:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
9001134c:	fb80 0101 	smull	r0, r1, r0, r1
90011350:	4f21      	ldr	r7, [pc, #132]	@ (900113d8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90011352:	461c      	mov	r4, r3
90011354:	4616      	mov	r6, r2
90011356:	fba0 bc07 	umull	fp, ip, r0, r7
9001135a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001135e:	fb07 cc01 	mla	ip, r7, r1, ip
90011362:	fbab 010b 	umull	r0, r1, fp, fp
90011366:	fb0b f70c 	mul.w	r7, fp, ip
9001136a:	fb00 f30c 	mul.w	r3, r0, ip
9001136e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90011372:	fb0b 3301 	mla	r3, fp, r1, r3
90011376:	fba0 010b 	umull	r0, r1, r0, fp
9001137a:	4419      	add	r1, r3
9001137c:	a314      	add	r3, pc, #80	@ (adr r3, 900113d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001137e:	e9d3 2300 	ldrd	r2, r3, [r3]
90011382:	f7ef f9b9 	bl	900006f8 <__aeabi_ldivmod>
90011386:	2ef7      	cmp	r6, #247	@ 0xf7
90011388:	b290      	uxth	r0, r2
9001138a:	bf9e      	ittt	ls
9001138c:	f002 0207 	andls.w	r2, r2, #7
90011390:	18b6      	addls	r6, r6, r2
90011392:	b2f6      	uxtbls	r6, r6
90011394:	2cfb      	cmp	r4, #251	@ 0xfb
90011396:	bf9e      	ittt	ls
90011398:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
9001139c:	18e4      	addls	r4, r4, r3
9001139e:	b2e4      	uxtbls	r4, r4
900113a0:	2df7      	cmp	r5, #247	@ 0xf7
900113a2:	bf98      	it	ls
900113a4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900113a8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900113ac:	bf98      	it	ls
900113ae:	182d      	addls	r5, r5, r0
900113b0:	480a      	ldr	r0, [pc, #40]	@ (900113dc <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900113b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900113b6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900113ba:	bf98      	it	ls
900113bc:	b2ed      	uxtbls	r5, r5
900113be:	4304      	orrs	r4, r0
900113c0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900113c4:	b280      	uxth	r0, r0
900113c6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900113ca:	bf00      	nop
900113cc:	f3af 8000 	nop.w
900113d0:	797a8d77 	.word	0x797a8d77
900113d4:	00000000 	.word	0x00000000
900113d8:	00ec4ba7 	.word	0x00ec4ba7
900113dc:	fffff800 	.word	0xfffff800

900113e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900113e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900113e4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900113e8:	4605      	mov	r5, r0
900113ea:	ed2d 8b02 	vpush	{d8}
900113ee:	b087      	sub	sp, #28
900113f0:	7c41      	ldrb	r1, [r0, #17]
900113f2:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900113f6:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900113fa:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900113fe:	2900      	cmp	r1, #0
90011400:	f000 809a 	beq.w	90011538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90011404:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011408:	ed90 7a08 	vldr	s14, [r0, #32]
9001140c:	454a      	cmp	r2, r9
9001140e:	68c0      	ldr	r0, [r0, #12]
90011410:	db25      	blt.n	9001145e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90011412:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011416:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001141a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001141e:	bfc8      	it	gt
90011420:	2200      	movgt	r2, #0
90011422:	5882      	ldr	r2, [r0, r2]
90011424:	2100      	movs	r1, #0
90011426:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001142a:	7c2d      	ldrb	r5, [r5, #16]
9001142c:	0950      	lsrs	r0, r2, #5
9001142e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90011432:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90011436:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001143a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001143e:	2d00      	cmp	r5, #0
90011440:	d044      	beq.n	900114cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011442:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011446:	d141      	bne.n	900114cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011448:	bb61      	cbnz	r1, 900114a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
9001144a:	ea4e 0000 	orr.w	r0, lr, r0
9001144e:	ea4c 0500 	orr.w	r5, ip, r0
90011452:	42bc      	cmp	r4, r7
90011454:	f080 8214 	bcs.w	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011458:	f824 5b02 	strh.w	r5, [r4], #2
9001145c:	e7f9      	b.n	90011452 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001145e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
90011462:	454f      	cmp	r7, r9
90011464:	dc08      	bgt.n	90011478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90011466:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001146a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001146e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011472:	bfd8      	it	le
90011474:	2200      	movle	r2, #0
90011476:	e7d4      	b.n	90011422 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011478:	eba9 0202 	sub.w	r2, r9, r2
9001147c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011480:	ee07 2a90 	vmov	s15, r2
90011484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011488:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001148c:	ee67 7a87 	vmul.f32	s15, s15, s14
90011490:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90011494:	ee17 2a90 	vmov	r2, s15
90011498:	bfd8      	it	le
9001149a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
9001149e:	0092      	lsls	r2, r2, #2
900114a0:	5882      	ldr	r2, [r0, r2]
900114a2:	e7c0      	b.n	90011426 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900114a4:	b2d5      	uxtb	r5, r2
900114a6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900114aa:	fa5f f888 	uxtb.w	r8, r8
900114ae:	461e      	mov	r6, r3
900114b0:	42bc      	cmp	r4, r7
900114b2:	f080 81e5 	bcs.w	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900114b6:	4630      	mov	r0, r6
900114b8:	9500      	str	r5, [sp, #0]
900114ba:	4643      	mov	r3, r8
900114bc:	4652      	mov	r2, sl
900114be:	4649      	mov	r1, r9
900114c0:	3601      	adds	r6, #1
900114c2:	f7ff ff41 	bl	90011348 <_ZN8touchgfxL10applyNoiseEiihhh>
900114c6:	f824 0b02 	strh.w	r0, [r4], #2
900114ca:	e7f1      	b.n	900114b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900114cc:	0e12      	lsrs	r2, r2, #24
900114ce:	26ff      	movs	r6, #255	@ 0xff
900114d0:	fb02 f20a 	mul.w	r2, r2, sl
900114d4:	1c53      	adds	r3, r2, #1
900114d6:	eb03 2222 	add.w	r2, r3, r2, asr #8
900114da:	1212      	asrs	r2, r2, #8
900114dc:	fb02 f50c 	mul.w	r5, r2, ip
900114e0:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90011894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900114e4:	fb02 f10e 	mul.w	r1, r2, lr
900114e8:	4350      	muls	r0, r2
900114ea:	43d2      	mvns	r2, r2
900114ec:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900114f0:	42bc      	cmp	r4, r7
900114f2:	f080 81c5 	bcs.w	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900114f6:	f8b4 e000 	ldrh.w	lr, [r4]
900114fa:	ea0e 030c 	and.w	r3, lr, ip
900114fe:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011502:	f00e 0e1f 	and.w	lr, lr, #31
90011506:	fb02 1303 	mla	r3, r2, r3, r1
9001150a:	fb02 0808 	mla	r8, r2, r8, r0
9001150e:	fb02 5e0e 	mla	lr, r2, lr, r5
90011512:	fb93 f3f6 	sdiv	r3, r3, r6
90011516:	fb98 f8f6 	sdiv	r8, r8, r6
9001151a:	fb9e fef6 	sdiv	lr, lr, r6
9001151e:	ea03 030c 	and.w	r3, r3, ip
90011522:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011526:	f00e 0e1f 	and.w	lr, lr, #31
9001152a:	ea43 0308 	orr.w	r3, r3, r8
9001152e:	ea43 030e 	orr.w	r3, r3, lr
90011532:	f824 3b02 	strh.w	r3, [r4], #2
90011536:	e7db      	b.n	900114f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011538:	7c82      	ldrb	r2, [r0, #18]
9001153a:	2a00      	cmp	r2, #0
9001153c:	d04f      	beq.n	900115de <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001153e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011542:	ee07 2a90 	vmov	s15, r2
90011546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001154a:	ee07 3a10 	vmov	s14, r3
9001154e:	461f      	mov	r7, r3
90011550:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90011554:	eef4 6ae7 	vcmpe.f32	s13, s15
90011558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001155c:	f200 8095 	bhi.w	9001168a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011560:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90011564:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011568:	68ea      	ldr	r2, [r5, #12]
9001156a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001156e:	ee37 7a87 	vadd.f32	s14, s15, s14
90011572:	ee37 7a66 	vsub.f32	s14, s14, s13
90011576:	ee06 6a90 	vmov	s13, r6
9001157a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001157e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011586:	bf4a      	itet	mi
90011588:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
9001158c:	9602      	strpl	r6, [sp, #8]
9001158e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90011592:	ed95 7a08 	vldr	s14, [r5, #32]
90011596:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001159a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001159e:	bfc8      	it	gt
900115a0:	2100      	movgt	r1, #0
900115a2:	5852      	ldr	r2, [r2, r1]
900115a4:	9902      	ldr	r1, [sp, #8]
900115a6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900115aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900115ae:	0950      	lsrs	r0, r2, #5
900115b0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900115b4:	9103      	str	r1, [sp, #12]
900115b6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900115ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900115be:	f1bc 0f00 	cmp.w	ip, #0
900115c2:	d024      	beq.n	9001160e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900115c4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900115c8:	d121      	bne.n	9001160e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900115ca:	ea4b 0b00 	orr.w	fp, fp, r0
900115ce:	ea41 010b 	orr.w	r1, r1, fp
900115d2:	9a03      	ldr	r2, [sp, #12]
900115d4:	4294      	cmp	r4, r2
900115d6:	d255      	bcs.n	90011684 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900115d8:	f824 1b02 	strh.w	r1, [r4], #2
900115dc:	e7f9      	b.n	900115d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900115de:	ee07 9a10 	vmov	s14, r9
900115e2:	edd0 7a06 	vldr	s15, [r0, #24]
900115e6:	edd0 6a05 	vldr	s13, [r0, #20]
900115ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900115ee:	ee37 7a67 	vsub.f32	s14, s14, s15
900115f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
900115f6:	ed90 7a08 	vldr	s14, [r0, #32]
900115fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900115fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011602:	bf44      	itt	mi
90011604:	ed90 7a07 	vldrmi	s14, [r0, #28]
90011608:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
9001160c:	e79d      	b.n	9001154a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
9001160e:	0e12      	lsrs	r2, r2, #24
90011610:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90011894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011614:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90011618:	fb02 f20a 	mul.w	r2, r2, sl
9001161c:	f102 0c01 	add.w	ip, r2, #1
90011620:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90011624:	1212      	asrs	r2, r2, #8
90011626:	4350      	muls	r0, r2
90011628:	4351      	muls	r1, r2
9001162a:	fb02 fb0b 	mul.w	fp, r2, fp
9001162e:	43d2      	mvns	r2, r2
90011630:	9004      	str	r0, [sp, #16]
90011632:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011636:	9105      	str	r1, [sp, #20]
90011638:	9903      	ldr	r1, [sp, #12]
9001163a:	428c      	cmp	r4, r1
9001163c:	d222      	bcs.n	90011684 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
9001163e:	8820      	ldrh	r0, [r4, #0]
90011640:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90011644:	ea00 0c08 	and.w	ip, r0, r8
90011648:	460f      	mov	r7, r1
9001164a:	9904      	ldr	r1, [sp, #16]
9001164c:	fb02 bc0c 	mla	ip, r2, ip, fp
90011650:	fb02 1107 	mla	r1, r2, r7, r1
90011654:	fb9c fcfe 	sdiv	ip, ip, lr
90011658:	fb91 f1fe 	sdiv	r1, r1, lr
9001165c:	ea0c 0c08 	and.w	ip, ip, r8
90011660:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90011664:	ea4c 0101 	orr.w	r1, ip, r1
90011668:	f000 0c1f 	and.w	ip, r0, #31
9001166c:	9805      	ldr	r0, [sp, #20]
9001166e:	fb02 0c0c 	mla	ip, r2, ip, r0
90011672:	fb9c fcfe 	sdiv	ip, ip, lr
90011676:	f00c 0c1f 	and.w	ip, ip, #31
9001167a:	ea41 010c 	orr.w	r1, r1, ip
9001167e:	f824 1b02 	strh.w	r1, [r4], #2
90011682:	e7d9      	b.n	90011638 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90011684:	9a02      	ldr	r2, [sp, #8]
90011686:	441a      	add	r2, r3
90011688:	4617      	mov	r7, r2
9001168a:	441e      	add	r6, r3
9001168c:	b236      	sxth	r6, r6
9001168e:	42be      	cmp	r6, r7
90011690:	f340 80f6 	ble.w	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011694:	ed95 7a07 	vldr	s14, [r5, #28]
90011698:	ee06 7a90 	vmov	s13, r7
9001169c:	ee37 7a87 	vadd.f32	s14, s15, s14
900116a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900116a4:	eeb4 7ae6 	vcmpe.f32	s14, s13
900116a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116ac:	f340 80b2 	ble.w	90011814 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900116b0:	ee06 6a10 	vmov	s12, r6
900116b4:	ee76 7ae7 	vsub.f32	s15, s13, s15
900116b8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 9001188c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900116bc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900116c0:	7c2b      	ldrb	r3, [r5, #16]
900116c2:	eeb4 7ac6 	vcmpe.f32	s14, s12
900116c6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90011890 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900116ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116ce:	bfd6      	itet	le
900116d0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900116d4:	46b0      	movgt	r8, r6
900116d6:	ee17 8a10 	vmovle	r8, s14
900116da:	ed95 7a08 	vldr	s14, [r5, #32]
900116de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900116e2:	eba8 0707 	sub.w	r7, r8, r7
900116e6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900116ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116ee:	fe38 8a06 	vselgt.f32	s16, s16, s12
900116f2:	eea7 8a27 	vfma.f32	s16, s14, s15
900116f6:	b1db      	cbz	r3, 90011730 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900116f8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900116fc:	d118      	bne.n	90011730 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900116fe:	42bc      	cmp	r4, r7
90011700:	d262      	bcs.n	900117c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011702:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011706:	68eb      	ldr	r3, [r5, #12]
90011708:	4649      	mov	r1, r9
9001170a:	ee17 0a90 	vmov	r0, s15
9001170e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90011712:	b2d3      	uxtb	r3, r2
90011714:	9300      	str	r3, [sp, #0]
90011716:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001171a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001171e:	f7ff fe13 	bl	90011348 <_ZN8touchgfxL10applyNoiseEiihhh>
90011722:	f824 0b02 	strh.w	r0, [r4], #2
90011726:	edd5 7a08 	vldr	s15, [r5, #32]
9001172a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001172e:	e7e6      	b.n	900116fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011730:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90011894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011734:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011738:	42bc      	cmp	r4, r7
9001173a:	d245      	bcs.n	900117c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001173c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011740:	68eb      	ldr	r3, [r5, #12]
90011742:	f8b4 e000 	ldrh.w	lr, [r4]
90011746:	ee17 2a90 	vmov	r2, s15
9001174a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001174e:	0e13      	lsrs	r3, r2, #24
90011750:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90011754:	fb03 f30a 	mul.w	r3, r3, sl
90011758:	b289      	uxth	r1, r1
9001175a:	1c58      	adds	r0, r3, #1
9001175c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011760:	ea0e 030b 	and.w	r3, lr, fp
90011764:	1200      	asrs	r0, r0, #8
90011766:	ea6f 0c00 	mvn.w	ip, r0
9001176a:	fa5f fc8c 	uxtb.w	ip, ip
9001176e:	fb0c f303 	mul.w	r3, ip, r3
90011772:	fb00 3101 	mla	r1, r0, r1, r3
90011776:	fb91 f1f9 	sdiv	r1, r1, r9
9001177a:	ea01 030b 	and.w	r3, r1, fp
9001177e:	9302      	str	r3, [sp, #8]
90011780:	0953      	lsrs	r3, r2, #5
90011782:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90011786:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001178a:	4619      	mov	r1, r3
9001178c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90011790:	f00e 0e1f 	and.w	lr, lr, #31
90011794:	fb0c f303 	mul.w	r3, ip, r3
90011798:	fb0c fc0e 	mul.w	ip, ip, lr
9001179c:	fb00 3301 	mla	r3, r0, r1, r3
900117a0:	9902      	ldr	r1, [sp, #8]
900117a2:	fb00 c002 	mla	r0, r0, r2, ip
900117a6:	fb93 f3f9 	sdiv	r3, r3, r9
900117aa:	fb90 f0f9 	sdiv	r0, r0, r9
900117ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900117b2:	f000 001f 	and.w	r0, r0, #31
900117b6:	4319      	orrs	r1, r3
900117b8:	4301      	orrs	r1, r0
900117ba:	f824 1b02 	strh.w	r1, [r4], #2
900117be:	edd5 7a08 	vldr	s15, [r5, #32]
900117c2:	ee38 8a27 	vadd.f32	s16, s16, s15
900117c6:	e7b7      	b.n	90011738 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900117c8:	4546      	cmp	r6, r8
900117ca:	dd59      	ble.n	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900117cc:	edd5 7a08 	vldr	s15, [r5, #32]
900117d0:	f640 73fc 	movw	r3, #4092	@ 0xffc
900117d4:	68ea      	ldr	r2, [r5, #12]
900117d6:	eba6 0608 	sub.w	r6, r6, r8
900117da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900117de:	7c29      	ldrb	r1, [r5, #16]
900117e0:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900117e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117e8:	bfd8      	it	le
900117ea:	2300      	movle	r3, #0
900117ec:	58d2      	ldr	r2, [r2, r3]
900117ee:	0a10      	lsrs	r0, r2, #8
900117f0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900117f4:	0953      	lsrs	r3, r2, #5
900117f6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900117fa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900117fe:	b159      	cbz	r1, 90011818 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011800:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011804:	d108      	bne.n	90011818 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011806:	4318      	orrs	r0, r3
90011808:	4338      	orrs	r0, r7
9001180a:	42b4      	cmp	r4, r6
9001180c:	d238      	bcs.n	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001180e:	f824 0b02 	strh.w	r0, [r4], #2
90011812:	e7fa      	b.n	9001180a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90011814:	46b8      	mov	r8, r7
90011816:	e7d9      	b.n	900117cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90011818:	0e12      	lsrs	r2, r2, #24
9001181a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90011894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001181e:	fb02 f10a 	mul.w	r1, r2, sl
90011822:	1c4a      	adds	r2, r1, #1
90011824:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011828:	1212      	asrs	r2, r2, #8
9001182a:	fb02 f507 	mul.w	r5, r2, r7
9001182e:	27ff      	movs	r7, #255	@ 0xff
90011830:	4350      	muls	r0, r2
90011832:	4353      	muls	r3, r2
90011834:	43d2      	mvns	r2, r2
90011836:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001183a:	42b4      	cmp	r4, r6
9001183c:	d220      	bcs.n	90011880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001183e:	f8b4 e000 	ldrh.w	lr, [r4]
90011842:	ea0e 010c 	and.w	r1, lr, ip
90011846:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001184a:	f00e 0e1f 	and.w	lr, lr, #31
9001184e:	fb02 0101 	mla	r1, r2, r1, r0
90011852:	fb02 3808 	mla	r8, r2, r8, r3
90011856:	fb02 5e0e 	mla	lr, r2, lr, r5
9001185a:	fb91 f1f7 	sdiv	r1, r1, r7
9001185e:	fb98 f8f7 	sdiv	r8, r8, r7
90011862:	fb9e fef7 	sdiv	lr, lr, r7
90011866:	ea01 010c 	and.w	r1, r1, ip
9001186a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001186e:	f00e 0e1f 	and.w	lr, lr, #31
90011872:	ea41 0108 	orr.w	r1, r1, r8
90011876:	ea41 010e 	orr.w	r1, r1, lr
9001187a:	f824 1b02 	strh.w	r1, [r4], #2
9001187e:	e7dc      	b.n	9001183a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011880:	b007      	add	sp, #28
90011882:	ecbd 8b02 	vpop	{d8}
90011886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001188a:	bf00      	nop
9001188c:	00000000 	.word	0x00000000
90011890:	447ffffe 	.word	0x447ffffe
90011894:	fffff800 	.word	0xfffff800

90011898 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90011898:	4770      	bx	lr

9001189a <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
9001189a:	4770      	bx	lr

9001189c <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
9001189c:	b510      	push	{r4, lr}
9001189e:	4604      	mov	r4, r0
900118a0:	2124      	movs	r1, #36	@ 0x24
900118a2:	f017 fb5b 	bl	90028f5c <_ZdlPvj>
900118a6:	4620      	mov	r0, r4
900118a8:	bd10      	pop	{r4, pc}
	...

900118ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900118ac:	094a      	lsrs	r2, r1, #5
900118ae:	4b06      	ldr	r3, [pc, #24]	@ (900118c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900118b0:	60c1      	str	r1, [r0, #12]
900118b2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900118b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900118ba:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900118be:	4313      	orrs	r3, r2
900118c0:	4319      	orrs	r1, r3
900118c2:	8201      	strh	r1, [r0, #16]
900118c4:	4770      	bx	lr
900118c6:	bf00      	nop
900118c8:	fffff800 	.word	0xfffff800

900118cc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900118cc:	f1a0 0008 	sub.w	r0, r0, #8
900118d0:	e7ec      	b.n	900118ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900118d2:	bf00      	nop

900118d4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900118d4:	b508      	push	{r3, lr}
900118d6:	4b05      	ldr	r3, [pc, #20]	@ (900118ec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900118d8:	6818      	ldr	r0, [r3, #0]
900118da:	6803      	ldr	r3, [r0, #0]
900118dc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
900118e0:	4798      	blx	r3
900118e2:	1e43      	subs	r3, r0, #1
900118e4:	4258      	negs	r0, r3
900118e6:	4158      	adcs	r0, r3
900118e8:	bd08      	pop	{r3, pc}
900118ea:	bf00      	nop
900118ec:	2402198c 	.word	0x2402198c

900118f0 <_ZN8touchgfx13PainterRGB565D1Ev>:
900118f0:	4770      	bx	lr

900118f2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900118f2:	3808      	subs	r0, #8
900118f4:	4770      	bx	lr

900118f6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900118f6:	b430      	push	{r4, r5}
900118f8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900118fc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011900:	8a02      	ldrh	r2, [r0, #16]
90011902:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011906:	4629      	mov	r1, r5
90011908:	9202      	str	r2, [sp, #8]
9001190a:	68c2      	ldr	r2, [r0, #12]
9001190c:	4620      	mov	r0, r4
9001190e:	bc30      	pop	{r4, r5}
90011910:	f7f1 b846 	b.w	900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011914 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011914:	f7f1 b820 	b.w	90002958 <_ZN8touchgfx5paint8tearDownEv>

90011918 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011918:	b510      	push	{r4, lr}
9001191a:	4604      	mov	r4, r0
9001191c:	2114      	movs	r1, #20
9001191e:	f017 fb1d 	bl	90028f5c <_ZdlPvj>
90011922:	4620      	mov	r0, r4
90011924:	bd10      	pop	{r4, pc}

90011926 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011926:	f1a0 0008 	sub.w	r0, r0, #8
9001192a:	e7f5      	b.n	90011918 <_ZN8touchgfx13PainterRGB565D0Ev>

9001192c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001192c:	2300      	movs	r3, #0
9001192e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011930:	8503      	strh	r3, [r0, #40]	@ 0x28
90011932:	8543      	strh	r3, [r0, #42]	@ 0x2a
90011934:	8583      	strh	r3, [r0, #44]	@ 0x2c
90011936:	6980      	ldr	r0, [r0, #24]
90011938:	b110      	cbz	r0, 90011940 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001193a:	6803      	ldr	r3, [r0, #0]
9001193c:	691b      	ldr	r3, [r3, #16]
9001193e:	4718      	bx	r3
90011940:	4770      	bx	lr

90011942 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90011942:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90011946:	4770      	bx	lr

90011948 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011948:	b538      	push	{r3, r4, r5, lr}
9001194a:	0e0b      	lsrs	r3, r1, #24
9001194c:	4604      	mov	r4, r0
9001194e:	460d      	mov	r5, r1
90011950:	7783      	strb	r3, [r0, #30]
90011952:	6803      	ldr	r3, [r0, #0]
90011954:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011956:	4798      	blx	r3
90011958:	6803      	ldr	r3, [r0, #0]
9001195a:	4629      	mov	r1, r5
9001195c:	689b      	ldr	r3, [r3, #8]
9001195e:	4798      	blx	r3
90011960:	6823      	ldr	r3, [r4, #0]
90011962:	4620      	mov	r0, r4
90011964:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90011966:	4798      	blx	r3
90011968:	61a0      	str	r0, [r4, #24]
9001196a:	bd38      	pop	{r3, r4, r5, pc}

9001196c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001196c:	7741      	strb	r1, [r0, #29]
9001196e:	4770      	bx	lr

90011970 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011970:	b530      	push	{r4, r5, lr}
90011972:	460d      	mov	r5, r1
90011974:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011978:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001197a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001197c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001197e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011980:	682b      	ldr	r3, [r5, #0]
90011982:	6023      	str	r3, [r4, #0]
90011984:	bd30      	pop	{r4, r5, pc}

90011986 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90011986:	b538      	push	{r3, r4, r5, lr}
90011988:	4604      	mov	r4, r0
9001198a:	1d03      	adds	r3, r0, #4
9001198c:	6808      	ldr	r0, [r1, #0]
9001198e:	2500      	movs	r5, #0
90011990:	6849      	ldr	r1, [r1, #4]
90011992:	c303      	stmia	r3!, {r0, r1}
90011994:	6813      	ldr	r3, [r2, #0]
90011996:	f104 0034 	add.w	r0, r4, #52	@ 0x34
9001199a:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
9001199e:	6853      	ldr	r3, [r2, #4]
900119a0:	61a5      	str	r5, [r4, #24]
900119a2:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
900119a6:	f006 f9f9 	bl	90017d9c <_ZN8touchgfx9Matrix3x35resetEv>
900119aa:	23ff      	movs	r3, #255	@ 0xff
900119ac:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900119b0:	7763      	strb	r3, [r4, #29]
900119b2:	77a3      	strb	r3, [r4, #30]
900119b4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900119b8:	6323      	str	r3, [r4, #48]	@ 0x30
900119ba:	2301      	movs	r3, #1
900119bc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900119c0:	bd38      	pop	{r3, r4, r5, pc}
	...

900119c4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900119c4:	ee70 7a41 	vsub.f32	s15, s0, s2
900119c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900119cc:	eef5 7a40 	vcmp.f32	s15, #0.0
900119d0:	4605      	mov	r5, r0
900119d2:	ed2d 8b0a 	vpush	{d8-d12}
900119d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900119da:	b087      	sub	sp, #28
900119dc:	eef0 9a40 	vmov.f32	s19, s0
900119e0:	6802      	ldr	r2, [r0, #0]
900119e2:	eeb0 aa60 	vmov.f32	s20, s1
900119e6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900119ea:	eeb0 9a41 	vmov.f32	s18, s2
900119ee:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900119f0:	eef0 8a61 	vmov.f32	s17, s3
900119f4:	eeb0 ca42 	vmov.f32	s24, s4
900119f8:	eef0 ca62 	vmov.f32	s25, s5
900119fc:	d112      	bne.n	90011a24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900119fe:	ee70 7ae1 	vsub.f32	s15, s1, s3
90011a02:	eef5 7a40 	vcmp.f32	s15, #0.0
90011a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a0a:	d10b      	bne.n	90011a24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90011a0c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90011a10:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90011a12:	3901      	subs	r1, #1
90011a14:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90011a18:	b007      	add	sp, #28
90011a1a:	ecbd 8b0a 	vpop	{d8-d12}
90011a1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011a22:	4710      	bx	r2
90011a24:	23ff      	movs	r3, #255	@ 0xff
90011a26:	4628      	mov	r0, r5
90011a28:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90011a2c:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90011cf4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90011a30:	77ab      	strb	r3, [r5, #30]
90011a32:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011a34:	4798      	blx	r3
90011a36:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90011a3a:	eeb0 0a69 	vmov.f32	s0, s19
90011a3e:	4604      	mov	r4, r0
90011a40:	80c3      	strh	r3, [r0, #6]
90011a42:	eef0 0a4a 	vmov.f32	s1, s20
90011a46:	4640      	mov	r0, r8
90011a48:	f006 fa57 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011a4c:	eeb0 ba40 	vmov.f32	s22, s0
90011a50:	ed8d 0a00 	vstr	s0, [sp]
90011a54:	eeb0 0a49 	vmov.f32	s0, s18
90011a58:	eef0 ba60 	vmov.f32	s23, s1
90011a5c:	edcd 0a01 	vstr	s1, [sp, #4]
90011a60:	4640      	mov	r0, r8
90011a62:	eef0 0a68 	vmov.f32	s1, s17
90011a66:	f006 fa48 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011a6a:	eeb4 ba40 	vcmp.f32	s22, s0
90011a6e:	eeb0 8a40 	vmov.f32	s16, s0
90011a72:	ed8d 0a02 	vstr	s0, [sp, #8]
90011a76:	eef0 aa60 	vmov.f32	s21, s1
90011a7a:	edcd 0a03 	vstr	s1, [sp, #12]
90011a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a82:	eef4 ba60 	vcmp.f32	s23, s1
90011a86:	bf0c      	ite	eq
90011a88:	2301      	moveq	r3, #1
90011a8a:	2300      	movne	r3, #0
90011a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a90:	eeb4 ba40 	vcmp.f32	s22, s0
90011a94:	7463      	strb	r3, [r4, #17]
90011a96:	bf0c      	ite	eq
90011a98:	2301      	moveq	r3, #1
90011a9a:	2300      	movne	r3, #0
90011a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aa0:	74a3      	strb	r3, [r4, #18]
90011aa2:	d031      	beq.n	90011b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011aa4:	eef4 ba60 	vcmp.f32	s23, s1
90011aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aac:	d02c      	beq.n	90011b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011aae:	ee39 9a69 	vsub.f32	s18, s18, s19
90011ab2:	4640      	mov	r0, r8
90011ab4:	ee78 8aca 	vsub.f32	s17, s17, s20
90011ab8:	eef0 0a4a 	vmov.f32	s1, s20
90011abc:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90011ac0:	eec8 7aac 	vdiv.f32	s15, s17, s25
90011ac4:	eeb0 0a69 	vmov.f32	s0, s19
90011ac8:	eeec 0a87 	vfma.f32	s1, s25, s14
90011acc:	eea7 0acc 	vfms.f32	s0, s15, s24
90011ad0:	f006 fa13 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011ad4:	f899 3000 	ldrb.w	r3, [r9]
90011ad8:	edcd 0a05 	vstr	s1, [sp, #20]
90011adc:	ee70 0aeb 	vsub.f32	s1, s1, s23
90011ae0:	2b01      	cmp	r3, #1
90011ae2:	bf08      	it	eq
90011ae4:	eef1 7a60 	vnegeq.f32	s15, s1
90011ae8:	ed8d 0a04 	vstr	s0, [sp, #16]
90011aec:	ee30 0a4b 	vsub.f32	s0, s0, s22
90011af0:	bf04      	itt	eq
90011af2:	eef0 0a40 	vmoveq.f32	s1, s0
90011af6:	eeb0 0a67 	vmoveq.f32	s0, s15
90011afa:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b02:	d135      	bne.n	90011b70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90011b04:	2301      	movs	r3, #1
90011b06:	74a3      	strb	r3, [r4, #18]
90011b08:	f899 2000 	ldrb.w	r2, [r9]
90011b0c:	7c63      	ldrb	r3, [r4, #17]
90011b0e:	2a01      	cmp	r2, #1
90011b10:	f040 80a3 	bne.w	90011c5a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90011b14:	2b00      	cmp	r3, #0
90011b16:	d073      	beq.n	90011c00 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90011b18:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90011b1c:	eddf 6a73 	vldr	s13, [pc, #460]	@ 90011cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011b20:	eef4 baea 	vcmpe.f32	s23, s21
90011b24:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b2c:	edc4 7a08 	vstr	s15, [r4, #32]
90011b30:	eefd 7aea 	vcvt.s32.f32	s15, s21
90011b34:	ee17 3a90 	vmov	r3, s15
90011b38:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90011b3c:	b21a      	sxth	r2, r3
90011b3e:	ee17 3a90 	vmov	r3, s15
90011b42:	bf48      	it	mi
90011b44:	8162      	strhmi	r2, [r4, #10]
90011b46:	b21b      	sxth	r3, r3
90011b48:	bf56      	itet	pl
90011b4a:	8122      	strhpl	r2, [r4, #8]
90011b4c:	8123      	strhmi	r3, [r4, #8]
90011b4e:	8163      	strhpl	r3, [r4, #10]
90011b50:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011b54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011b58:	1a9b      	subs	r3, r3, r2
90011b5a:	ee07 3a90 	vmov	s15, r3
90011b5e:	2300      	movs	r3, #0
90011b60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011b64:	7463      	strb	r3, [r4, #17]
90011b66:	2301      	movs	r3, #1
90011b68:	edc4 7a07 	vstr	s15, [r4, #28]
90011b6c:	74a3      	strb	r3, [r4, #18]
90011b6e:	e03f      	b.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011b70:	ee80 7a80 	vdiv.f32	s14, s1, s0
90011b74:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011b78:	ed84 7a05 	vstr	s14, [r4, #20]
90011b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b80:	d102      	bne.n	90011b88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90011b82:	2301      	movs	r3, #1
90011b84:	7463      	strb	r3, [r4, #17]
90011b86:	e7bf      	b.n	90011b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011b88:	2b01      	cmp	r3, #1
90011b8a:	ee38 8a4b 	vsub.f32	s16, s16, s22
90011b8e:	ee7a aaeb 	vsub.f32	s21, s21, s23
90011b92:	bf0b      	itete	eq
90011b94:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90011b98:	eef0 7a6b 	vmovne.f32	s15, s23
90011b9c:	ee07 2a90 	vmoveq	s15, r2
90011ba0:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90011ba4:	bf02      	ittt	eq
90011ba6:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
90011baa:	ee77 7acb 	vsubeq.f32	s15, s15, s22
90011bae:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90011bb2:	2b01      	cmp	r3, #1
90011bb4:	edc4 7a06 	vstr	s15, [r4, #24]
90011bb8:	bf02      	ittt	eq
90011bba:	eef1 7a48 	vnegeq.f32	s15, s16
90011bbe:	eeb0 8a6a 	vmoveq.f32	s16, s21
90011bc2:	eef0 aa67 	vmoveq.f32	s21, s15
90011bc6:	eeca 7a87 	vdiv.f32	s15, s21, s14
90011bca:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90011cf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
90011bce:	ee38 8a67 	vsub.f32	s16, s16, s15
90011bd2:	eec7 7a08 	vdiv.f32	s15, s14, s16
90011bd6:	ed84 8a07 	vstr	s16, [r4, #28]
90011bda:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011be2:	edc4 7a08 	vstr	s15, [r4, #32]
90011be6:	d503      	bpl.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011be8:	eeb1 8a48 	vneg.f32	s16, s16
90011bec:	ed84 8a07 	vstr	s16, [r4, #28]
90011bf0:	60e7      	str	r7, [r4, #12]
90011bf2:	7426      	strb	r6, [r4, #16]
90011bf4:	61ac      	str	r4, [r5, #24]
90011bf6:	b007      	add	sp, #28
90011bf8:	ecbd 8b0a 	vpop	{d8-d12}
90011bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011c00:	7ca3      	ldrb	r3, [r4, #18]
90011c02:	2b00      	cmp	r3, #0
90011c04:	d0f4      	beq.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011c06:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90011c0a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 90011cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011c0e:	ee00 3a10 	vmov	s0, r3
90011c12:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90011c16:	ee30 8a48 	vsub.f32	s16, s0, s16
90011c1a:	ee30 0a4b 	vsub.f32	s0, s0, s22
90011c1e:	ee38 7a40 	vsub.f32	s14, s16, s0
90011c22:	eeb4 8ac0 	vcmpe.f32	s16, s0
90011c26:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011c2e:	edc4 7a08 	vstr	s15, [r4, #32]
90011c32:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011c36:	ee17 3a90 	vmov	r3, s15
90011c3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
90011c3e:	b21a      	sxth	r2, r3
90011c40:	ee17 3a90 	vmov	r3, s15
90011c44:	bfc8      	it	gt
90011c46:	8162      	strhgt	r2, [r4, #10]
90011c48:	b21b      	sxth	r3, r3
90011c4a:	bfd6      	itet	le
90011c4c:	8122      	strhle	r2, [r4, #8]
90011c4e:	8123      	strhgt	r3, [r4, #8]
90011c50:	8163      	strhle	r3, [r4, #10]
90011c52:	2301      	movs	r3, #1
90011c54:	7463      	strb	r3, [r4, #17]
90011c56:	2300      	movs	r3, #0
90011c58:	e788      	b.n	90011b6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
90011c5a:	b1e3      	cbz	r3, 90011c96 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
90011c5c:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90011c60:	eddf 6a22 	vldr	s13, [pc, #136]	@ 90011cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011c64:	eef4 baea 	vcmpe.f32	s23, s21
90011c68:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011c70:	edc4 7a08 	vstr	s15, [r4, #32]
90011c74:	eefd 7aea 	vcvt.s32.f32	s15, s21
90011c78:	ee17 3a90 	vmov	r3, s15
90011c7c:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90011c80:	b21a      	sxth	r2, r3
90011c82:	ee17 3a90 	vmov	r3, s15
90011c86:	bf48      	it	mi
90011c88:	8162      	strhmi	r2, [r4, #10]
90011c8a:	b21b      	sxth	r3, r3
90011c8c:	bf56      	itet	pl
90011c8e:	8122      	strhpl	r2, [r4, #8]
90011c90:	8123      	strhmi	r3, [r4, #8]
90011c92:	8163      	strhpl	r3, [r4, #10]
90011c94:	e7ac      	b.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011c96:	7ca3      	ldrb	r3, [r4, #18]
90011c98:	2b00      	cmp	r3, #0
90011c9a:	d0a9      	beq.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011c9c:	ee38 7a4b 	vsub.f32	s14, s16, s22
90011ca0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90011cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011ca4:	eeb4 bac8 	vcmpe.f32	s22, s16
90011ca8:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011cb0:	edc4 7a08 	vstr	s15, [r4, #32]
90011cb4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011cb8:	ee17 3a90 	vmov	r3, s15
90011cbc:	eefd 7acb 	vcvt.s32.f32	s15, s22
90011cc0:	b21a      	sxth	r2, r3
90011cc2:	ee17 3a90 	vmov	r3, s15
90011cc6:	bf48      	it	mi
90011cc8:	8162      	strhmi	r2, [r4, #10]
90011cca:	b21b      	sxth	r3, r3
90011ccc:	bf56      	itet	pl
90011cce:	8122      	strhpl	r2, [r4, #8]
90011cd0:	8123      	strhmi	r3, [r4, #8]
90011cd2:	8163      	strhpl	r3, [r4, #10]
90011cd4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011cd8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011cdc:	1a9b      	subs	r3, r3, r2
90011cde:	ee07 3a90 	vmov	s15, r3
90011ce2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011ce6:	edc4 7a07 	vstr	s15, [r4, #28]
90011cea:	e781      	b.n	90011bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011cec:	447ffffe 	.word	0x447ffffe
90011cf0:	44800000 	.word	0x44800000
90011cf4:	24021984 	.word	0x24021984

90011cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90011cf8:	b510      	push	{r4, lr}
90011cfa:	ed2d 8b02 	vpush	{d8}
90011cfe:	eef0 8a62 	vmov.f32	s17, s5
90011d02:	2100      	movs	r1, #0
90011d04:	4604      	mov	r4, r0
90011d06:	eeb0 8a42 	vmov.f32	s16, s4
90011d0a:	f016 fe99 	bl	90028a40 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90011d0e:	eef0 7a68 	vmov.f32	s15, s17
90011d12:	6823      	ldr	r3, [r4, #0]
90011d14:	4620      	mov	r0, r4
90011d16:	689b      	ldr	r3, [r3, #8]
90011d18:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d1c:	ee17 2a90 	vmov	r2, s15
90011d20:	eef0 7a48 	vmov.f32	s15, s16
90011d24:	ecbd 8b02 	vpop	{d8}
90011d28:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011d30:	ee17 1a90 	vmov	r1, s15
90011d34:	4718      	bx	r3

90011d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90011d36:	b510      	push	{r4, lr}
90011d38:	ed2d 8b02 	vpush	{d8}
90011d3c:	eef0 8a63 	vmov.f32	s17, s7
90011d40:	2100      	movs	r1, #0
90011d42:	4604      	mov	r4, r0
90011d44:	eeb0 8a43 	vmov.f32	s16, s6
90011d48:	f016 ff3c 	bl	90028bc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011d4c:	eef0 7a68 	vmov.f32	s15, s17
90011d50:	6823      	ldr	r3, [r4, #0]
90011d52:	4620      	mov	r0, r4
90011d54:	689b      	ldr	r3, [r3, #8]
90011d56:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d5a:	ee17 2a90 	vmov	r2, s15
90011d5e:	eef0 7a48 	vmov.f32	s15, s16
90011d62:	ecbd 8b02 	vpop	{d8}
90011d66:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011d6e:	ee17 1a90 	vmov	r1, s15
90011d72:	4718      	bx	r3

90011d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011d74:	b513      	push	{r0, r1, r4, lr}
90011d76:	4604      	mov	r4, r0
90011d78:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011d7a:	f006 f8be 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011d7e:	eef0 7a60 	vmov.f32	s15, s1
90011d82:	4620      	mov	r0, r4
90011d84:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d88:	ee17 2a90 	vmov	r2, s15
90011d8c:	eef0 7a40 	vmov.f32	s15, s0
90011d90:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d94:	ee17 1a90 	vmov	r1, s15
90011d98:	b002      	add	sp, #8
90011d9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011d9e:	f016 bda9 	b.w	900288f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90011da2:	b513      	push	{r0, r1, r4, lr}
90011da4:	4604      	mov	r4, r0
90011da6:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011da8:	f006 f8a7 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011dac:	eef0 7a60 	vmov.f32	s15, s1
90011db0:	4620      	mov	r0, r4
90011db2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011db6:	ee17 2a90 	vmov	r2, s15
90011dba:	eef0 7a40 	vmov.f32	s15, s0
90011dbe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011dc2:	ee17 1a90 	vmov	r1, s15
90011dc6:	b002      	add	sp, #8
90011dc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011dcc:	f016 bddf 	b.w	9002898e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90011dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90011dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
90011dd2:	2400      	movs	r4, #0
90011dd4:	9f07      	ldr	r7, [sp, #28]
90011dd6:	f04f 0e01 	mov.w	lr, #1
90011dda:	4626      	mov	r6, r4
90011ddc:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90011de0:	4463      	add	r3, ip
90011de2:	4563      	cmp	r3, ip
90011de4:	d02d      	beq.n	90011e42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90011de6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90011dea:	2d06      	cmp	r5, #6
90011dec:	d8f9      	bhi.n	90011de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011dee:	fa0e f505 	lsl.w	r5, lr, r5
90011df2:	f015 0f66 	tst.w	r5, #102	@ 0x66
90011df6:	d10d      	bne.n	90011e14 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90011df8:	f015 0f10 	tst.w	r5, #16
90011dfc:	d117      	bne.n	90011e2e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90011dfe:	072d      	lsls	r5, r5, #28
90011e00:	d5ef      	bpl.n	90011de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011e02:	3801      	subs	r0, #1
90011e04:	b91e      	cbnz	r6, 90011e0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90011e06:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90011e0a:	682d      	ldr	r5, [r5, #0]
90011e0c:	600d      	str	r5, [r1, #0]
90011e0e:	b96c      	cbnz	r4, 90011e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011e10:	2601      	movs	r6, #1
90011e12:	e7e6      	b.n	90011de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011e14:	b926      	cbnz	r6, 90011e20 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90011e16:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90011e1a:	f853 3c08 	ldr.w	r3, [r3, #-8]
90011e1e:	600b      	str	r3, [r1, #0]
90011e20:	b924      	cbnz	r4, 90011e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011e22:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90011e26:	f850 3c04 	ldr.w	r3, [r0, #-4]
90011e2a:	6013      	str	r3, [r2, #0]
90011e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011e2e:	3801      	subs	r0, #1
90011e30:	b91c      	cbnz	r4, 90011e3a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90011e32:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90011e36:	6824      	ldr	r4, [r4, #0]
90011e38:	6014      	str	r4, [r2, #0]
90011e3a:	2e00      	cmp	r6, #0
90011e3c:	d1f6      	bne.n	90011e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011e3e:	2401      	movs	r4, #1
90011e40:	e7cf      	b.n	90011de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011e42:	b90e      	cbnz	r6, 90011e48 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90011e44:	2300      	movs	r3, #0
90011e46:	600b      	str	r3, [r1, #0]
90011e48:	2c00      	cmp	r4, #0
90011e4a:	d1ef      	bne.n	90011e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011e4c:	2300      	movs	r3, #0
90011e4e:	e7ec      	b.n	90011e2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90011e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90011e50:	b538      	push	{r3, r4, r5, lr}
90011e52:	ed2d 8b0a 	vpush	{d8-d12}
90011e56:	eef0 ba40 	vmov.f32	s23, s0
90011e5a:	4604      	mov	r4, r0
90011e5c:	eeb0 ca60 	vmov.f32	s24, s1
90011e60:	460d      	mov	r5, r1
90011e62:	eef0 aa41 	vmov.f32	s21, s2
90011e66:	eeb0 ba61 	vmov.f32	s22, s3
90011e6a:	eeb0 9a42 	vmov.f32	s18, s4
90011e6e:	eef0 9a62 	vmov.f32	s19, s5
90011e72:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90011e76:	ee7b 8a29 	vadd.f32	s17, s22, s19
90011e7a:	ee3a 8a89 	vadd.f32	s16, s21, s18
90011e7e:	ee68 8a8a 	vmul.f32	s17, s17, s20
90011e82:	ee28 8a0a 	vmul.f32	s16, s16, s20
90011e86:	ee3c 0a68 	vsub.f32	s0, s24, s17
90011e8a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90011e8e:	ee20 0a00 	vmul.f32	s0, s0, s0
90011e92:	eea7 0aa7 	vfma.f32	s0, s15, s15
90011e96:	f017 f88b 	bl	90028fb0 <sqrtf>
90011e9a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011e9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ea2:	d12e      	bne.n	90011f02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90011ea4:	ee79 7a6a 	vsub.f32	s15, s18, s21
90011ea8:	ee39 7acb 	vsub.f32	s14, s19, s22
90011eac:	eeb0 8a6a 	vmov.f32	s16, s21
90011eb0:	eef0 8a4b 	vmov.f32	s17, s22
90011eb4:	eea7 8a8a 	vfma.f32	s16, s15, s20
90011eb8:	eee7 8a0a 	vfma.f32	s17, s14, s20
90011ebc:	eea7 8a0a 	vfma.f32	s16, s14, s20
90011ec0:	eee7 8aca 	vfms.f32	s17, s15, s20
90011ec4:	2d02      	cmp	r5, #2
90011ec6:	dc2f      	bgt.n	90011f28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90011ec8:	3501      	adds	r5, #1
90011eca:	eef0 1a4b 	vmov.f32	s3, s22
90011ece:	eeb0 1a6a 	vmov.f32	s2, s21
90011ed2:	4620      	mov	r0, r4
90011ed4:	4629      	mov	r1, r5
90011ed6:	eef0 2a68 	vmov.f32	s5, s17
90011eda:	eeb0 2a48 	vmov.f32	s4, s16
90011ede:	eef0 0a4c 	vmov.f32	s1, s24
90011ee2:	eeb0 0a6b 	vmov.f32	s0, s23
90011ee6:	f7ff ffb3 	bl	90011e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011eea:	eef0 0a68 	vmov.f32	s1, s17
90011eee:	eeb0 0a48 	vmov.f32	s0, s16
90011ef2:	4620      	mov	r0, r4
90011ef4:	f7ff ff55 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011ef8:	eeb0 ba68 	vmov.f32	s22, s17
90011efc:	eef0 aa48 	vmov.f32	s21, s16
90011f00:	e7b9      	b.n	90011e76 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90011f02:	ee38 8a6b 	vsub.f32	s16, s16, s23
90011f06:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011f0a:	ee78 8acc 	vsub.f32	s17, s17, s24
90011f0e:	ee28 7a27 	vmul.f32	s14, s16, s15
90011f12:	ee68 7aa7 	vmul.f32	s15, s17, s15
90011f16:	ee87 8a00 	vdiv.f32	s16, s14, s0
90011f1a:	eec7 8a80 	vdiv.f32	s17, s15, s0
90011f1e:	ee3b 8a88 	vadd.f32	s16, s23, s16
90011f22:	ee7c 8a28 	vadd.f32	s17, s24, s17
90011f26:	e7cd      	b.n	90011ec4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90011f28:	eef0 0a68 	vmov.f32	s1, s17
90011f2c:	4620      	mov	r0, r4
90011f2e:	eeb0 0a48 	vmov.f32	s0, s16
90011f32:	f7ff ff36 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011f36:	ecbd 8b0a 	vpop	{d8-d12}
90011f3a:	bd38      	pop	{r3, r4, r5, pc}

90011f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90011f3c:	b510      	push	{r4, lr}
90011f3e:	ed2d 8b0a 	vpush	{d8-d12}
90011f42:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90011f46:	4604      	mov	r4, r0
90011f48:	eeb0 ca40 	vmov.f32	s24, s0
90011f4c:	2b02      	cmp	r3, #2
90011f4e:	eeb0 9a60 	vmov.f32	s18, s1
90011f52:	eef0 9a41 	vmov.f32	s19, s2
90011f56:	eef0 8a61 	vmov.f32	s17, s3
90011f5a:	eeb0 ba42 	vmov.f32	s22, s4
90011f5e:	eef0 ba62 	vmov.f32	s23, s5
90011f62:	eeb0 aa43 	vmov.f32	s20, s6
90011f66:	eef0 aa63 	vmov.f32	s21, s7
90011f6a:	eeb0 8a44 	vmov.f32	s16, s8
90011f6e:	eef0 ca64 	vmov.f32	s25, s9
90011f72:	d12c      	bne.n	90011fce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90011f74:	eef0 0a62 	vmov.f32	s1, s5
90011f78:	eeb0 0a42 	vmov.f32	s0, s4
90011f7c:	f7ff ff11 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011f80:	ee79 9acb 	vsub.f32	s19, s19, s22
90011f84:	ee7a caec 	vsub.f32	s25, s21, s25
90011f88:	ee78 8aeb 	vsub.f32	s17, s17, s23
90011f8c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011f90:	ee69 9aac 	vmul.f32	s19, s19, s25
90011f94:	ee28 8a88 	vmul.f32	s16, s17, s16
90011f98:	eef4 9ac8 	vcmpe.f32	s19, s16
90011f9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011fa0:	db0f      	blt.n	90011fc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90011fa2:	2101      	movs	r1, #1
90011fa4:	eef0 2a6a 	vmov.f32	s5, s21
90011fa8:	eeb0 2a4a 	vmov.f32	s4, s20
90011fac:	4620      	mov	r0, r4
90011fae:	eef0 1a6b 	vmov.f32	s3, s23
90011fb2:	eeb0 1a4b 	vmov.f32	s2, s22
90011fb6:	eef0 0a49 	vmov.f32	s1, s18
90011fba:	eeb0 0a4c 	vmov.f32	s0, s24
90011fbe:	f7ff ff47 	bl	90011e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011fc2:	eef0 0a6a 	vmov.f32	s1, s21
90011fc6:	4620      	mov	r0, r4
90011fc8:	eeb0 0a4a 	vmov.f32	s0, s20
90011fcc:	e035      	b.n	9001203a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90011fce:	2b01      	cmp	r3, #1
90011fd0:	d138      	bne.n	90012044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011fd2:	ee31 4ae2 	vsub.f32	s8, s3, s5
90011fd6:	ee33 6a48 	vsub.f32	s12, s6, s16
90011fda:	ee71 7a42 	vsub.f32	s15, s2, s4
90011fde:	ee73 6ae4 	vsub.f32	s13, s7, s9
90011fe2:	ee26 7a44 	vnmul.f32	s14, s12, s8
90011fe6:	eea7 7aa6 	vfma.f32	s14, s15, s13
90011fea:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ff2:	d027      	beq.n	90012044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011ff4:	ee28 8a63 	vnmul.f32	s16, s16, s7
90011ff8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90011ffc:	eea4 8a83 	vfma.f32	s16, s9, s6
90012000:	eee1 8a22 	vfma.f32	s17, s2, s5
90012004:	ee68 7a67 	vnmul.f32	s15, s16, s15
90012008:	ee28 8a44 	vnmul.f32	s16, s16, s8
9001200c:	eee6 7a28 	vfma.f32	s15, s12, s17
90012010:	eea6 8aa8 	vfma.f32	s16, s13, s17
90012014:	ee87 0a87 	vdiv.f32	s0, s15, s14
90012018:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
9001201c:	eec8 0a07 	vdiv.f32	s1, s16, s14
90012020:	ee3c ca40 	vsub.f32	s24, s24, s0
90012024:	ee39 9a60 	vsub.f32	s18, s18, s1
90012028:	ee29 9a09 	vmul.f32	s18, s18, s18
9001202c:	eeac 9a0c 	vfma.f32	s18, s24, s24
90012030:	eef4 7ac9 	vcmpe.f32	s15, s18
90012034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012038:	db04      	blt.n	90012044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001203a:	f7ff feb2 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001203e:	ecbd 8b0a 	vpop	{d8-d12}
90012042:	bd10      	pop	{r4, pc}
90012044:	eef0 0a6b 	vmov.f32	s1, s23
90012048:	4620      	mov	r0, r4
9001204a:	eeb0 0a4b 	vmov.f32	s0, s22
9001204e:	f7ff fea8 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012052:	e7b6      	b.n	90011fc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90012054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90012054:	b510      	push	{r4, lr}
90012056:	ed2d 8b0c 	vpush	{d8-d13}
9001205a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001205e:	4604      	mov	r4, r0
90012060:	eeb0 9a40 	vmov.f32	s18, s0
90012064:	eef0 9a60 	vmov.f32	s19, s1
90012068:	eef0 aa41 	vmov.f32	s21, s2
9001206c:	eeb0 ba61 	vmov.f32	s22, s3
90012070:	b933      	cbnz	r3, 90012080 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90012072:	f7ff fe96 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012076:	eef0 0a4b 	vmov.f32	s1, s22
9001207a:	eeb0 0a6a 	vmov.f32	s0, s21
9001207e:	e015      	b.n	900120ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90012080:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90012084:	2b02      	cmp	r3, #2
90012086:	ee71 8a40 	vsub.f32	s17, s2, s0
9001208a:	ee31 8ae0 	vsub.f32	s16, s3, s1
9001208e:	ee68 8aa7 	vmul.f32	s17, s17, s15
90012092:	ee28 8a27 	vmul.f32	s16, s16, s15
90012096:	d10f      	bne.n	900120b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90012098:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001209c:	ee30 0a08 	vadd.f32	s0, s0, s16
900120a0:	f7ff fe7f 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120a4:	ee7b 0a68 	vsub.f32	s1, s22, s17
900120a8:	ee3a 0a88 	vadd.f32	s0, s21, s16
900120ac:	4620      	mov	r0, r4
900120ae:	f7ff fe78 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120b2:	ecbd 8b0c 	vpop	{d8-d13}
900120b6:	bd10      	pop	{r4, pc}
900120b8:	f7ff fe73 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120bc:	eef0 0a69 	vmov.f32	s1, s19
900120c0:	eeb0 0a49 	vmov.f32	s0, s18
900120c4:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900121f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900120c8:	eeb1 aa68 	vneg.f32	s20, s17
900120cc:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900121f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900120d0:	eee8 0a27 	vfma.f32	s1, s16, s15
900120d4:	4620      	mov	r0, r4
900120d6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900120da:	ed9f ca48 	vldr	s24, [pc, #288]	@ 900121fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900120de:	eddf ca48 	vldr	s25, [pc, #288]	@ 90012200 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900120e2:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012204 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900120e6:	eeea 0a2b 	vfma.f32	s1, s20, s23
900120ea:	eea8 0a2b 	vfma.f32	s0, s16, s23
900120ee:	f7ff fe58 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120f2:	eef0 0a69 	vmov.f32	s1, s19
900120f6:	eeb0 0a49 	vmov.f32	s0, s18
900120fa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012208 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
900120fe:	4620      	mov	r0, r4
90012100:	eee8 0a27 	vfma.f32	s1, s16, s15
90012104:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012108:	eeea 0a0c 	vfma.f32	s1, s20, s24
9001210c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012110:	f7ff fe47 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012114:	eef0 0a69 	vmov.f32	s1, s19
90012118:	eeb0 0a49 	vmov.f32	s0, s18
9001211c:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9001220c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90012120:	4620      	mov	r0, r4
90012122:	eee8 0a27 	vfma.f32	s1, s16, s15
90012126:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001212a:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001212e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012132:	f7ff fe36 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012136:	eef0 0a69 	vmov.f32	s1, s19
9001213a:	eeb0 0a49 	vmov.f32	s0, s18
9001213e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90012210 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90012142:	4620      	mov	r0, r4
90012144:	eee8 0a27 	vfma.f32	s1, s16, s15
90012148:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001214c:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012150:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012154:	f7ff fe25 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012158:	ee79 0a88 	vadd.f32	s1, s19, s16
9001215c:	ee39 0a28 	vadd.f32	s0, s18, s17
90012160:	4620      	mov	r0, r4
90012162:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012166:	ee30 0a08 	vadd.f32	s0, s0, s16
9001216a:	f7ff fe1a 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001216e:	eef0 0a69 	vmov.f32	s1, s19
90012172:	eeb0 0a49 	vmov.f32	s0, s18
90012176:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012214 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
9001217a:	4620      	mov	r0, r4
9001217c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012180:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012184:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012188:	eea8 0a0d 	vfma.f32	s0, s16, s26
9001218c:	f7ff fe09 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012190:	eef0 0a69 	vmov.f32	s1, s19
90012194:	eeb0 0a49 	vmov.f32	s0, s18
90012198:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012218 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
9001219c:	4620      	mov	r0, r4
9001219e:	eee8 0a27 	vfma.f32	s1, s16, s15
900121a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900121a6:	eeea 0a2c 	vfma.f32	s1, s20, s25
900121aa:	eea8 0a2c 	vfma.f32	s0, s16, s25
900121ae:	f7ff fdf8 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900121b2:	eef0 0a69 	vmov.f32	s1, s19
900121b6:	eeb0 0a49 	vmov.f32	s0, s18
900121ba:	eddf 7a18 	vldr	s15, [pc, #96]	@ 9001221c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900121be:	4620      	mov	r0, r4
900121c0:	eee8 0a27 	vfma.f32	s1, s16, s15
900121c4:	eea8 0aa7 	vfma.f32	s0, s17, s15
900121c8:	eeea 0a0c 	vfma.f32	s1, s20, s24
900121cc:	eea8 0a0c 	vfma.f32	s0, s16, s24
900121d0:	f7ff fde7 	bl	90011da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900121d4:	eef0 0a69 	vmov.f32	s1, s19
900121d8:	eeb0 0a49 	vmov.f32	s0, s18
900121dc:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90012220 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900121e0:	4620      	mov	r0, r4
900121e2:	eee8 0a27 	vfma.f32	s1, s16, s15
900121e6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900121ea:	eeea 0a2b 	vfma.f32	s1, s20, s23
900121ee:	eea8 0a2b 	vfma.f32	s0, s16, s23
900121f2:	e73e      	b.n	90012072 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900121f4:	3d23d70a 	.word	0x3d23d70a
900121f8:	3e8f5c29 	.word	0x3e8f5c29
900121fc:	3f19999a 	.word	0x3f19999a
90012200:	3f4ccccd 	.word	0x3f4ccccd
90012204:	3f75c28f 	.word	0x3f75c28f
90012208:	3e4ccccd 	.word	0x3e4ccccd
9001220c:	3ecccccd 	.word	0x3ecccccd
90012210:	3f3851ec 	.word	0x3f3851ec
90012214:	3fa3d70a 	.word	0x3fa3d70a
90012218:	3fcccccd 	.word	0x3fcccccd
9001221c:	3fe66666 	.word	0x3fe66666
90012220:	3ffae148 	.word	0x3ffae148

90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90012224:	b570      	push	{r4, r5, r6, lr}
90012226:	ed2d 8b06 	vpush	{d8-d10}
9001222a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001222e:	eef0 aa40 	vmov.f32	s21, s0
90012232:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90012236:	4604      	mov	r4, r0
90012238:	ee30 8ac8 	vsub.f32	s16, s1, s16
9001223c:	ee30 9a49 	vsub.f32	s18, s0, s18
90012240:	eeb0 aa60 	vmov.f32	s20, s1
90012244:	ee28 0a08 	vmul.f32	s0, s16, s16
90012248:	eea9 0a09 	vfma.f32	s0, s18, s18
9001224c:	f016 feb0 	bl	90028fb0 <sqrtf>
90012250:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90012254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012258:	dd36      	ble.n	900122c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
9001225a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001225e:	2600      	movs	r6, #0
90012260:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90012264:	eec0 6a27 	vdiv.f32	s13, s0, s15
90012268:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
9001226c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90012270:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012274:	eec8 8a26 	vdiv.f32	s17, s16, s13
90012278:	ee89 8a26 	vdiv.f32	s16, s18, s13
9001227c:	ee70 9a28 	vadd.f32	s19, s0, s17
90012280:	ee78 8aaa 	vadd.f32	s17, s17, s21
90012284:	ee30 9ac8 	vsub.f32	s18, s1, s16
90012288:	ee3a 8a48 	vsub.f32	s16, s20, s16
9001228c:	b1fd      	cbz	r5, 900122ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
9001228e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90012292:	eef0 0a49 	vmov.f32	s1, s18
90012296:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
9001229a:	eeb0 0a69 	vmov.f32	s0, s19
9001229e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900122a2:	4620      	mov	r0, r4
900122a4:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900122a8:	f7ff fd64 	bl	90011d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900122ac:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900122b0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900122b4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900122b8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900122bc:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900122c0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900122c4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900122c8:	ecbd 8b06 	vpop	{d8-d10}
900122cc:	bd70      	pop	{r4, r5, r6, pc}
900122ce:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900122d2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900122d6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900122da:	b16b      	cbz	r3, 900122f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900122dc:	eef0 1a49 	vmov.f32	s3, s18
900122e0:	4620      	mov	r0, r4
900122e2:	eeb0 1a69 	vmov.f32	s2, s19
900122e6:	eef0 0a62 	vmov.f32	s1, s5
900122ea:	eeb0 0a42 	vmov.f32	s0, s4
900122ee:	f7ff feb1 	bl	90012054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900122f2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900122f6:	e7db      	b.n	900122b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900122f8:	eef0 4a48 	vmov.f32	s9, s16
900122fc:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012300:	eeb0 4a68 	vmov.f32	s8, s17
90012304:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012308:	eef0 3a49 	vmov.f32	s7, s18
9001230c:	4620      	mov	r0, r4
9001230e:	eeb0 3a69 	vmov.f32	s6, s19
90012312:	f7ff fe13 	bl	90011f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012316:	e7cb      	b.n	900122b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012318 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012318:	ee07 2a90 	vmov	s15, r2
9001231c:	ee07 1a10 	vmov	s14, r1
90012320:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90012324:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90012338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90012328:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
9001232c:	ee60 0aa7 	vmul.f32	s1, s1, s15
90012330:	ee20 0a27 	vmul.f32	s0, s0, s15
90012334:	f7ff bf76 	b.w	90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012338:	3d000000 	.word	0x3d000000

9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
9001233c:	b538      	push	{r3, r4, r5, lr}
9001233e:	ed2d 8b02 	vpush	{d8}
90012342:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90012346:	4604      	mov	r4, r0
90012348:	b31d      	cbz	r5, 90012392 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
9001234a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001234e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012352:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90012356:	ee78 8a67 	vsub.f32	s17, s16, s15
9001235a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001235e:	eef0 0a68 	vmov.f32	s1, s17
90012362:	f7ff fd07 	bl	90011d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012366:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001236a:	eef0 1a48 	vmov.f32	s3, s16
9001236e:	4620      	mov	r0, r4
90012370:	eeb0 0a41 	vmov.f32	s0, s2
90012374:	eef0 0a68 	vmov.f32	s1, s17
90012378:	f7ff fe6c 	bl	90012054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001237c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90012380:	eef0 1a68 	vmov.f32	s3, s17
90012384:	4620      	mov	r0, r4
90012386:	eef0 0a48 	vmov.f32	s1, s16
9001238a:	eeb0 0a41 	vmov.f32	s0, s2
9001238e:	f7ff fe61 	bl	90012054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012392:	4628      	mov	r0, r5
90012394:	ecbd 8b02 	vpop	{d8}
90012398:	bd38      	pop	{r3, r4, r5, pc}

9001239a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
9001239a:	b510      	push	{r4, lr}
9001239c:	ed2d 8b02 	vpush	{d8}
900123a0:	4604      	mov	r4, r0
900123a2:	eeb0 8a40 	vmov.f32	s16, s0
900123a6:	eef0 8a60 	vmov.f32	s17, s1
900123aa:	f7ff ffc7 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900123ae:	b9d0      	cbnz	r0, 900123e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900123b0:	4620      	mov	r0, r4
900123b2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900123b6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900123ba:	eef0 0a68 	vmov.f32	s1, s17
900123be:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900123c2:	eeb0 0a48 	vmov.f32	s0, s16
900123c6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900123ca:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900123ce:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900123d2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900123d6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900123da:	f7ff fdaf 	bl	90011f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900123de:	2001      	movs	r0, #1
900123e0:	ecbd 8b02 	vpop	{d8}
900123e4:	bd10      	pop	{r4, pc}
900123e6:	2000      	movs	r0, #0
900123e8:	e7fa      	b.n	900123e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900123ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900123ea:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900123ee:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900123f2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900123f6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900123fa:	f7ff be2b 	b.w	90012054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90012400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90012400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012404:	b089      	sub	sp, #36	@ 0x24
90012406:	461c      	mov	r4, r3
90012408:	4682      	mov	sl, r0
9001240a:	4615      	mov	r5, r2
9001240c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012410:	f10d 0820 	add.w	r8, sp, #32
90012414:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90012416:	9304      	str	r3, [sp, #16]
90012418:	2300      	movs	r3, #0
9001241a:	9105      	str	r1, [sp, #20]
9001241c:	9306      	str	r3, [sp, #24]
9001241e:	f848 3d04 	str.w	r3, [r8, #-4]!
90012422:	9b04      	ldr	r3, [sp, #16]
90012424:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90012428:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
9001242c:	9b05      	ldr	r3, [sp, #20]
9001242e:	429d      	cmp	r5, r3
90012430:	d96d      	bls.n	9001250e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90012432:	3d01      	subs	r5, #1
90012434:	f819 3005 	ldrb.w	r3, [r9, r5]
90012438:	2b06      	cmp	r3, #6
9001243a:	d8f7      	bhi.n	9001242c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001243c:	a201      	add	r2, pc, #4	@ (adr r2, 90012444 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001243e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012442:	bf00      	nop
90012444:	90012463 	.word	0x90012463
90012448:	9001242d 	.word	0x9001242d
9001244c:	90012461 	.word	0x90012461
90012450:	90012485 	.word	0x90012485
90012454:	90012485 	.word	0x90012485
90012458:	90012489 	.word	0x90012489
9001245c:	900124c9 	.word	0x900124c9
90012460:	3c02      	subs	r4, #2
90012462:	4650      	mov	r0, sl
90012464:	9400      	str	r4, [sp, #0]
90012466:	462b      	mov	r3, r5
90012468:	4642      	mov	r2, r8
9001246a:	a906      	add	r1, sp, #24
9001246c:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012470:	f7ff fcae 	bl	90011dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012474:	eddd 0a07 	vldr	s1, [sp, #28]
90012478:	ed9d 0a06 	vldr	s0, [sp, #24]
9001247c:	4630      	mov	r0, r6
9001247e:	f7ff fed1 	bl	90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012482:	e7d3      	b.n	9001242c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012484:	3c01      	subs	r4, #1
90012486:	e7ec      	b.n	90012462 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90012488:	f1a4 0b04 	sub.w	fp, r4, #4
9001248c:	3c02      	subs	r4, #2
9001248e:	4650      	mov	r0, sl
90012490:	462b      	mov	r3, r5
90012492:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012496:	f8cd b000 	str.w	fp, [sp]
9001249a:	4642      	mov	r2, r8
9001249c:	a906      	add	r1, sp, #24
9001249e:	e9cd 9701 	strd	r9, r7, [sp, #4]
900124a2:	f7ff fc95 	bl	90011dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900124a6:	eddd 2a07 	vldr	s5, [sp, #28]
900124aa:	ed9d 2a06 	vldr	s4, [sp, #24]
900124ae:	4630      	mov	r0, r6
900124b0:	ed54 1a01 	vldr	s3, [r4, #-4]
900124b4:	ed14 1a02 	vldr	s2, [r4, #-8]
900124b8:	edd4 0a01 	vldr	s1, [r4, #4]
900124bc:	ed94 0a00 	vldr	s0, [r4]
900124c0:	f7ff fc1a 	bl	90011cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900124c4:	465c      	mov	r4, fp
900124c6:	e7b1      	b.n	9001242c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900124c8:	f1a4 0b06 	sub.w	fp, r4, #6
900124cc:	3c02      	subs	r4, #2
900124ce:	4650      	mov	r0, sl
900124d0:	462b      	mov	r3, r5
900124d2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900124d6:	f8cd b000 	str.w	fp, [sp]
900124da:	4642      	mov	r2, r8
900124dc:	a906      	add	r1, sp, #24
900124de:	e9cd 9701 	strd	r9, r7, [sp, #4]
900124e2:	f7ff fc75 	bl	90011dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900124e6:	eddd 3a07 	vldr	s7, [sp, #28]
900124ea:	ed9d 3a06 	vldr	s6, [sp, #24]
900124ee:	4630      	mov	r0, r6
900124f0:	ed54 2a03 	vldr	s5, [r4, #-12]
900124f4:	ed14 2a04 	vldr	s4, [r4, #-16]
900124f8:	ed54 1a01 	vldr	s3, [r4, #-4]
900124fc:	ed14 1a02 	vldr	s2, [r4, #-8]
90012500:	edd4 0a01 	vldr	s1, [r4, #4]
90012504:	ed94 0a00 	vldr	s0, [r4]
90012508:	f7ff fc15 	bl	90011d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001250c:	e7da      	b.n	900124c4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001250e:	9b04      	ldr	r3, [sp, #16]
90012510:	b113      	cbz	r3, 90012518 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90012512:	4630      	mov	r0, r6
90012514:	f7ff ff69 	bl	900123ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90012518:	b009      	add	sp, #36	@ 0x24
9001251a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001251e:	bf00      	nop

90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90012520:	eef0 7a60 	vmov.f32	s15, s1
90012524:	6803      	ldr	r3, [r0, #0]
90012526:	689b      	ldr	r3, [r3, #8]
90012528:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001252c:	ee17 2a90 	vmov	r2, s15
90012530:	eef0 7a40 	vmov.f32	s15, s0
90012534:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012538:	ee17 1a90 	vmov	r1, s15
9001253c:	4718      	bx	r3
	...

90012540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90012540:	4b04      	ldr	r3, [pc, #16]	@ (90012554 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90012542:	b510      	push	{r4, lr}
90012544:	4604      	mov	r4, r0
90012546:	f840 3b14 	str.w	r3, [r0], #20
9001254a:	f001 fb29 	bl	90013ba0 <_ZN8touchgfx7OutlineD1Ev>
9001254e:	4620      	mov	r0, r4
90012550:	bd10      	pop	{r4, pc}
90012552:	bf00      	nop
90012554:	9002daa4 	.word	0x9002daa4

90012558 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001255c:	ed2d 8b04 	vpush	{d8-d9}
90012560:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012564:	b0b5      	sub	sp, #212	@ 0xd4
90012566:	4605      	mov	r5, r0
90012568:	468b      	mov	fp, r1
9001256a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001256e:	9206      	str	r2, [sp, #24]
90012570:	461e      	mov	r6, r3
90012572:	2400      	movs	r4, #0
90012574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012578:	f240 814f 	bls.w	9001281a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
9001257c:	23ff      	movs	r3, #255	@ 0xff
9001257e:	1d02      	adds	r2, r0, #4
90012580:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90012820 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012584:	f04f 0800 	mov.w	r8, #0
90012588:	9300      	str	r3, [sp, #0]
9001258a:	af08      	add	r7, sp, #32
9001258c:	6981      	ldr	r1, [r0, #24]
9001258e:	a808      	add	r0, sp, #32
90012590:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90012592:	eef0 9a49 	vmov.f32	s19, s18
90012596:	f016 f861 	bl	9002865c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001259a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001259e:	4ba1      	ldr	r3, [pc, #644]	@ (90012824 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
900125a0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900125a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900125a8:	2201      	movs	r2, #1
900125aa:	9308      	str	r3, [sp, #32]
900125ac:	f105 0334 	add.w	r3, r5, #52	@ 0x34
900125b0:	edd5 6a08 	vldr	s13, [r5, #32]
900125b4:	eeb0 8a49 	vmov.f32	s16, s18
900125b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900125bc:	9325      	str	r3, [sp, #148]	@ 0x94
900125be:	f04f 0300 	mov.w	r3, #0
900125c2:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900125c6:	7f6a      	ldrb	r2, [r5, #29]
900125c8:	eef0 8a49 	vmov.f32	s17, s18
900125cc:	bf48      	it	mi
900125ce:	eef1 7a67 	vnegmi.f32	s15, s15
900125d2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900125d6:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900125da:	46c1      	mov	r9, r8
900125dc:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900125e0:	f04f 0a01 	mov.w	sl, #1
900125e4:	ee67 7a87 	vmul.f32	s15, s15, s14
900125e8:	7fab      	ldrb	r3, [r5, #30]
900125ea:	942a      	str	r4, [sp, #168]	@ 0xa8
900125ec:	435a      	muls	r2, r3
900125ee:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900125f2:	ee26 7aa7 	vmul.f32	s14, s13, s15
900125f6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900125fa:	1c53      	adds	r3, r2, #1
900125fc:	942b      	str	r4, [sp, #172]	@ 0xac
900125fe:	942c      	str	r4, [sp, #176]	@ 0xb0
90012600:	ee27 7a26 	vmul.f32	s14, s14, s13
90012604:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90012608:	942d      	str	r4, [sp, #180]	@ 0xb4
9001260a:	942e      	str	r4, [sp, #184]	@ 0xb8
9001260c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90012610:	ee67 7a27 	vmul.f32	s15, s14, s15
90012614:	942f      	str	r4, [sp, #188]	@ 0xbc
90012616:	9430      	str	r4, [sp, #192]	@ 0xc0
90012618:	9431      	str	r4, [sp, #196]	@ 0xc4
9001261a:	9432      	str	r4, [sp, #200]	@ 0xc8
9001261c:	9433      	str	r4, [sp, #204]	@ 0xcc
9001261e:	4644      	mov	r4, r8
90012620:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90012624:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90012628:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
9001262c:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90012630:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90012634:	9b06      	ldr	r3, [sp, #24]
90012636:	454b      	cmp	r3, r9
90012638:	f000 80cc 	beq.w	900127d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
9001263c:	f109 0301 	add.w	r3, r9, #1
90012640:	9305      	str	r3, [sp, #20]
90012642:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012646:	2b06      	cmp	r3, #6
90012648:	d839      	bhi.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001264a:	e8df f003 	tbb	[pc, r3]
9001264e:	3b04      	.short	0x3b04
90012650:	817c6f60 	.word	0x817c6f60
90012654:	a0          	.byte	0xa0
90012655:	00          	.byte	0x00
90012656:	45c1      	cmp	r9, r8
90012658:	d92b      	bls.n	900126b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001265a:	eef0 0a49 	vmov.f32	s1, s18
9001265e:	4638      	mov	r0, r7
90012660:	eeb0 0a69 	vmov.f32	s0, s19
90012664:	f7ff fdde 	bl	90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012668:	4638      	mov	r0, r7
9001266a:	f7ff fe67 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001266e:	4681      	mov	r9, r0
90012670:	b9f8      	cbnz	r0, 900126b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012672:	eef0 0a49 	vmov.f32	s1, s18
90012676:	4638      	mov	r0, r7
90012678:	eeb0 0a69 	vmov.f32	s0, s19
9001267c:	f7ff fe8d 	bl	9001239a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90012680:	4628      	mov	r0, r5
90012682:	4623      	mov	r3, r4
90012684:	9a05      	ldr	r2, [sp, #20]
90012686:	4641      	mov	r1, r8
90012688:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
9001268c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90012690:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012694:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012698:	e9cd 9702 	strd	r9, r7, [sp, #8]
9001269c:	e9cd b600 	strd	fp, r6, [sp]
900126a0:	f7ff feae 	bl	90012400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900126a4:	eef0 0a49 	vmov.f32	s1, s18
900126a8:	eeb0 0a69 	vmov.f32	s0, s19
900126ac:	4638      	mov	r0, r7
900126ae:	f7ff fe74 	bl	9001239a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900126b2:	eeb0 8a49 	vmov.f32	s16, s18
900126b6:	f8dd 8014 	ldr.w	r8, [sp, #20]
900126ba:	eef0 8a69 	vmov.f32	s17, s19
900126be:	f8dd 9014 	ldr.w	r9, [sp, #20]
900126c2:	e7b7      	b.n	90012634 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900126c4:	45c1      	cmp	r9, r8
900126c6:	d90d      	bls.n	900126e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900126c8:	4638      	mov	r0, r7
900126ca:	f7ff fe37 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900126ce:	b948      	cbnz	r0, 900126e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900126d0:	4623      	mov	r3, r4
900126d2:	464a      	mov	r2, r9
900126d4:	4641      	mov	r1, r8
900126d6:	4628      	mov	r0, r5
900126d8:	e9cd a702 	strd	sl, r7, [sp, #8]
900126dc:	e9cd b600 	strd	fp, r6, [sp]
900126e0:	f7ff fe8e 	bl	90012400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900126e4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900126e8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900126ec:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900126f0:	3402      	adds	r4, #2
900126f2:	edd3 8a00 	vldr	s17, [r3]
900126f6:	46c8      	mov	r8, r9
900126f8:	ed93 8a01 	vldr	s16, [r3, #4]
900126fc:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90012700:	eef0 9a68 	vmov.f32	s19, s17
90012704:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90012708:	eeb0 9a48 	vmov.f32	s18, s16
9001270c:	e7d7      	b.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001270e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012712:	4638      	mov	r0, r7
90012714:	3402      	adds	r4, #2
90012716:	edd3 8a00 	vldr	s17, [r3]
9001271a:	ed93 8a01 	vldr	s16, [r3, #4]
9001271e:	eeb0 0a68 	vmov.f32	s0, s17
90012722:	eef0 0a48 	vmov.f32	s1, s16
90012726:	f7ff fd7d 	bl	90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001272a:	e7c8      	b.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001272c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012730:	edd3 8a00 	vldr	s17, [r3]
90012734:	eef0 0a48 	vmov.f32	s1, s16
90012738:	4638      	mov	r0, r7
9001273a:	eeb0 0a68 	vmov.f32	s0, s17
9001273e:	3401      	adds	r4, #1
90012740:	f7ff fd70 	bl	90012224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012744:	e7bb      	b.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012746:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001274a:	ed93 8a00 	vldr	s16, [r3]
9001274e:	e7f1      	b.n	90012734 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90012750:	00a3      	lsls	r3, r4, #2
90012752:	eef0 0a48 	vmov.f32	s1, s16
90012756:	eeb0 0a68 	vmov.f32	s0, s17
9001275a:	4638      	mov	r0, r7
9001275c:	f103 0208 	add.w	r2, r3, #8
90012760:	f103 090c 	add.w	r9, r3, #12
90012764:	4433      	add	r3, r6
90012766:	3404      	adds	r4, #4
90012768:	4432      	add	r2, r6
9001276a:	44b1      	add	r9, r6
9001276c:	edd3 1a01 	vldr	s3, [r3, #4]
90012770:	ed92 2a00 	vldr	s4, [r2]
90012774:	edd9 2a00 	vldr	s5, [r9]
90012778:	ed93 1a00 	vldr	s2, [r3]
9001277c:	9207      	str	r2, [sp, #28]
9001277e:	f7ff fabb 	bl	90011cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012782:	9a07      	ldr	r2, [sp, #28]
90012784:	ed99 8a00 	vldr	s16, [r9]
90012788:	edd2 8a00 	vldr	s17, [r2]
9001278c:	e797      	b.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001278e:	00a3      	lsls	r3, r4, #2
90012790:	eef0 0a48 	vmov.f32	s1, s16
90012794:	eeb0 0a68 	vmov.f32	s0, s17
90012798:	4638      	mov	r0, r7
9001279a:	f103 0210 	add.w	r2, r3, #16
9001279e:	f103 0914 	add.w	r9, r3, #20
900127a2:	4433      	add	r3, r6
900127a4:	3406      	adds	r4, #6
900127a6:	4432      	add	r2, r6
900127a8:	44b1      	add	r9, r6
900127aa:	edd3 2a03 	vldr	s5, [r3, #12]
900127ae:	ed92 3a00 	vldr	s6, [r2]
900127b2:	edd9 3a00 	vldr	s7, [r9]
900127b6:	ed93 2a02 	vldr	s4, [r3, #8]
900127ba:	edd3 1a01 	vldr	s3, [r3, #4]
900127be:	ed93 1a00 	vldr	s2, [r3]
900127c2:	9207      	str	r2, [sp, #28]
900127c4:	f7ff fab7 	bl	90011d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900127c8:	9a07      	ldr	r2, [sp, #28]
900127ca:	ed99 8a00 	vldr	s16, [r9]
900127ce:	edd2 8a00 	vldr	s17, [r2]
900127d2:	e774      	b.n	900126be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900127d4:	9b06      	ldr	r3, [sp, #24]
900127d6:	af08      	add	r7, sp, #32
900127d8:	4543      	cmp	r3, r8
900127da:	d90f      	bls.n	900127fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900127dc:	4638      	mov	r0, r7
900127de:	f7ff fdad 	bl	9001233c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900127e2:	b958      	cbnz	r0, 900127fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900127e4:	2301      	movs	r3, #1
900127e6:	9703      	str	r7, [sp, #12]
900127e8:	f8cd b000 	str.w	fp, [sp]
900127ec:	4641      	mov	r1, r8
900127ee:	9a06      	ldr	r2, [sp, #24]
900127f0:	4628      	mov	r0, r5
900127f2:	e9cd 6301 	strd	r6, r3, [sp, #4]
900127f6:	4623      	mov	r3, r4
900127f8:	f7ff fe02 	bl	90012400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900127fc:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90012800:	4638      	mov	r0, r7
90012802:	f015 ffbf 	bl	90028784 <_ZN8touchgfx6Canvas6renderEh>
90012806:	4604      	mov	r4, r0
90012808:	4638      	mov	r0, r7
9001280a:	f7ff fe99 	bl	90012540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001280e:	4620      	mov	r0, r4
90012810:	b035      	add	sp, #212	@ 0xd4
90012812:	ecbd 8b04 	vpop	{d8-d9}
90012816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001281a:	2401      	movs	r4, #1
9001281c:	e7f7      	b.n	9001280e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001281e:	bf00      	nop
90012820:	00000000 	.word	0x00000000
90012824:	9002d334 	.word	0x9002d334

90012828 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90012828:	b510      	push	{r4, lr}
9001282a:	4604      	mov	r4, r0
9001282c:	f7ff fe88 	bl	90012540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012830:	21b0      	movs	r1, #176	@ 0xb0
90012832:	4620      	mov	r0, r4
90012834:	f016 fb92 	bl	90028f5c <_ZdlPvj>
90012838:	4620      	mov	r0, r4
9001283a:	bd10      	pop	{r4, pc}

9001283c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
9001283c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012840:	4698      	mov	r8, r3
90012842:	23ff      	movs	r3, #255	@ 0xff
90012844:	4607      	mov	r7, r0
90012846:	4689      	mov	r9, r1
90012848:	4692      	mov	sl, r2
9001284a:	1d02      	adds	r2, r0, #4
9001284c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90012850:	2400      	movs	r4, #0
90012852:	44ca      	add	sl, r9
90012854:	ed2d 8b06 	vpush	{d8-d10}
90012858:	b0aa      	sub	sp, #168	@ 0xa8
9001285a:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90012a60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001285e:	9300      	str	r3, [sp, #0]
90012860:	eef0 8a48 	vmov.f32	s17, s16
90012864:	6981      	ldr	r1, [r0, #24]
90012866:	a80d      	add	r0, sp, #52	@ 0x34
90012868:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001286a:	f015 fef7 	bl	9002865c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001286e:	7f3b      	ldrb	r3, [r7, #28]
90012870:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90012a60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012874:	4628      	mov	r0, r5
90012876:	1e5a      	subs	r2, r3, #1
90012878:	eeb0 0a60 	vmov.f32	s0, s1
9001287c:	4253      	negs	r3, r2
9001287e:	4153      	adcs	r3, r2
90012880:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012884:	f005 fb39 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012888:	eeb0 9a40 	vmov.f32	s18, s0
9001288c:	eef0 9a60 	vmov.f32	s19, s1
90012890:	45ca      	cmp	sl, r9
90012892:	f000 80cd 	beq.w	90012a30 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90012896:	f819 3b01 	ldrb.w	r3, [r9], #1
9001289a:	2b06      	cmp	r3, #6
9001289c:	d8f8      	bhi.n	90012890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001289e:	e8df f003 	tbb	[pc, r3]
900128a2:	0804      	.short	0x0804
900128a4:	58533f2a 	.word	0x58533f2a
900128a8:	8a          	.byte	0x8a
900128a9:	00          	.byte	0x00
900128aa:	a80d      	add	r0, sp, #52	@ 0x34
900128ac:	f015 ff48 	bl	90028740 <_ZN8touchgfx6Canvas5closeEv>
900128b0:	e7ee      	b.n	90012890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900128b2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900128b6:	4628      	mov	r0, r5
900128b8:	ed93 8a01 	vldr	s16, [r3, #4]
900128bc:	edd3 8a00 	vldr	s17, [r3]
900128c0:	eef0 0a48 	vmov.f32	s1, s16
900128c4:	eeb0 0a68 	vmov.f32	s0, s17
900128c8:	f005 fb17 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900128cc:	a80d      	add	r0, sp, #52	@ 0x34
900128ce:	eef0 7a60 	vmov.f32	s15, s1
900128d2:	eeb0 9a40 	vmov.f32	s18, s0
900128d6:	eef0 9a60 	vmov.f32	s19, s1
900128da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900128de:	ee17 2a90 	vmov	r2, s15
900128e2:	eef0 7a40 	vmov.f32	s15, s0
900128e6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900128ea:	ee17 1a90 	vmov	r1, s15
900128ee:	f016 f801 	bl	900288f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900128f2:	3402      	adds	r4, #2
900128f4:	e7cc      	b.n	90012890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900128f6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900128fa:	4628      	mov	r0, r5
900128fc:	edd3 8a00 	vldr	s17, [r3]
90012900:	ed93 8a01 	vldr	s16, [r3, #4]
90012904:	eeb0 0a68 	vmov.f32	s0, s17
90012908:	eef0 0a48 	vmov.f32	s1, s16
9001290c:	f005 faf5 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012910:	a80d      	add	r0, sp, #52	@ 0x34
90012912:	eeb0 9a40 	vmov.f32	s18, s0
90012916:	eef0 9a60 	vmov.f32	s19, s1
9001291a:	f7ff fe01 	bl	90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001291e:	e7e8      	b.n	900128f2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90012920:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012924:	edd3 8a00 	vldr	s17, [r3]
90012928:	eef0 0a48 	vmov.f32	s1, s16
9001292c:	4628      	mov	r0, r5
9001292e:	eeb0 0a68 	vmov.f32	s0, s17
90012932:	3401      	adds	r4, #1
90012934:	f005 fae1 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012938:	a80d      	add	r0, sp, #52	@ 0x34
9001293a:	eef0 9a60 	vmov.f32	s19, s1
9001293e:	eeb0 9a40 	vmov.f32	s18, s0
90012942:	f7ff fded 	bl	90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012946:	e7a3      	b.n	90012890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012948:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001294c:	ed93 8a00 	vldr	s16, [r3]
90012950:	e7ea      	b.n	90012928 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90012952:	1ca3      	adds	r3, r4, #2
90012954:	4628      	mov	r0, r5
90012956:	3404      	adds	r4, #4
90012958:	eb08 0383 	add.w	r3, r8, r3, lsl #2
9001295c:	ed53 0a01 	vldr	s1, [r3, #-4]
90012960:	ed13 0a02 	vldr	s0, [r3, #-8]
90012964:	edd3 8a00 	vldr	s17, [r3]
90012968:	ed93 8a01 	vldr	s16, [r3, #4]
9001296c:	f005 fac5 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012970:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012974:	eeb0 0a68 	vmov.f32	s0, s17
90012978:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
9001297c:	eef0 0a48 	vmov.f32	s1, s16
90012980:	4628      	mov	r0, r5
90012982:	f005 faba 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012986:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
9001298a:	eef0 2a60 	vmov.f32	s5, s1
9001298e:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90012992:	eeb0 2a40 	vmov.f32	s4, s0
90012996:	a80d      	add	r0, sp, #52	@ 0x34
90012998:	eeb0 aa40 	vmov.f32	s20, s0
9001299c:	eef0 aa60 	vmov.f32	s21, s1
900129a0:	eeb0 0a49 	vmov.f32	s0, s18
900129a4:	eef0 0a69 	vmov.f32	s1, s19
900129a8:	f7ff f9a6 	bl	90011cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900129ac:	eef0 9a6a 	vmov.f32	s19, s21
900129b0:	eeb0 9a4a 	vmov.f32	s18, s20
900129b4:	e76c      	b.n	90012890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900129b6:	1d26      	adds	r6, r4, #4
900129b8:	4628      	mov	r0, r5
900129ba:	3406      	adds	r4, #6
900129bc:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900129c0:	ed56 0a03 	vldr	s1, [r6, #-12]
900129c4:	ed16 0a04 	vldr	s0, [r6, #-16]
900129c8:	edd6 8a00 	vldr	s17, [r6]
900129cc:	ed96 8a01 	vldr	s16, [r6, #4]
900129d0:	f005 fa93 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900129d4:	ed8d 0a07 	vstr	s0, [sp, #28]
900129d8:	4628      	mov	r0, r5
900129da:	ed16 0a02 	vldr	s0, [r6, #-8]
900129de:	edcd 0a08 	vstr	s1, [sp, #32]
900129e2:	ed56 0a01 	vldr	s1, [r6, #-4]
900129e6:	f005 fa88 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900129ea:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900129ee:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900129f2:	eeb0 0a68 	vmov.f32	s0, s17
900129f6:	eef0 0a48 	vmov.f32	s1, s16
900129fa:	4628      	mov	r0, r5
900129fc:	f005 fa7d 	bl	90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012a00:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90012a04:	eeb0 3a40 	vmov.f32	s6, s0
90012a08:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90012a0c:	eef0 3a60 	vmov.f32	s7, s1
90012a10:	eddd 1a08 	vldr	s3, [sp, #32]
90012a14:	eeb0 aa40 	vmov.f32	s20, s0
90012a18:	ed9d 1a07 	vldr	s2, [sp, #28]
90012a1c:	eef0 aa60 	vmov.f32	s21, s1
90012a20:	a80d      	add	r0, sp, #52	@ 0x34
90012a22:	eef0 0a69 	vmov.f32	s1, s19
90012a26:	eeb0 0a49 	vmov.f32	s0, s18
90012a2a:	f7ff f984 	bl	90011d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012a2e:	e7bd      	b.n	900129ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90012a30:	7f7b      	ldrb	r3, [r7, #29]
90012a32:	a80d      	add	r0, sp, #52	@ 0x34
90012a34:	7fb9      	ldrb	r1, [r7, #30]
90012a36:	4359      	muls	r1, r3
90012a38:	1c4b      	adds	r3, r1, #1
90012a3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90012a3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90012a42:	f015 fe9f 	bl	90028784 <_ZN8touchgfx6Canvas6renderEh>
90012a46:	4b07      	ldr	r3, [pc, #28]	@ (90012a64 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012a48:	4604      	mov	r4, r0
90012a4a:	a812      	add	r0, sp, #72	@ 0x48
90012a4c:	930d      	str	r3, [sp, #52]	@ 0x34
90012a4e:	f001 f8a7 	bl	90013ba0 <_ZN8touchgfx7OutlineD1Ev>
90012a52:	4620      	mov	r0, r4
90012a54:	b02a      	add	sp, #168	@ 0xa8
90012a56:	ecbd 8b06 	vpop	{d8-d10}
90012a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012a5e:	bf00      	nop
90012a60:	00000000 	.word	0x00000000
90012a64:	9002daa4 	.word	0x9002daa4

90012a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012a68:	b410      	push	{r4}
90012a6a:	7f04      	ldrb	r4, [r0, #28]
90012a6c:	b11c      	cbz	r4, 90012a76 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90012a6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90012a72:	f7ff bee3 	b.w	9001283c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012a76:	f85d 4b04 	ldr.w	r4, [sp], #4
90012a7a:	f7ff bd6d 	b.w	90012558 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90012a80 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90012a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012a84:	4691      	mov	r9, r2
90012a86:	4602      	mov	r2, r0
90012a88:	b085      	sub	sp, #20
90012a8a:	4605      	mov	r5, r0
90012a8c:	f852 0f26 	ldr.w	r0, [r2, #38]!
90012a90:	4688      	mov	r8, r1
90012a92:	469a      	mov	sl, r3
90012a94:	ab02      	add	r3, sp, #8
90012a96:	6851      	ldr	r1, [r2, #4]
90012a98:	af02      	add	r7, sp, #8
90012a9a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
90012a9e:	c303      	stmia	r3!, {r0, r1}
90012aa0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012aa4:	2b00      	cmp	r3, #0
90012aa6:	dd08      	ble.n	90012aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012aa8:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90012aac:	2c00      	cmp	r4, #0
90012aae:	dd04      	ble.n	90012aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012ab0:	4a2e      	ldr	r2, [pc, #184]	@ (90012b6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90012ab2:	7812      	ldrb	r2, [r2, #0]
90012ab4:	b122      	cbz	r2, 90012ac0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90012ab6:	2a01      	cmp	r2, #1
90012ab8:	d02d      	beq.n	90012b16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
90012aba:	b005      	add	sp, #20
90012abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012ac0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012ac4:	441c      	add	r4, r3
90012ac6:	b2a4      	uxth	r4, r4
90012ac8:	b226      	sxth	r6, r4
90012aca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90012ace:	42b3      	cmp	r3, r6
90012ad0:	daf3      	bge.n	90012aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012ad2:	4653      	mov	r3, sl
90012ad4:	464a      	mov	r2, r9
90012ad6:	4641      	mov	r1, r8
90012ad8:	4628      	mov	r0, r5
90012ada:	e9cd b700 	strd	fp, r7, [sp]
90012ade:	f7ff ffc3 	bl	90012a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012ae2:	b940      	cbnz	r0, 90012af6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012ae4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90012ae8:	2b01      	cmp	r3, #1
90012aea:	d004      	beq.n	90012af6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012aec:	3301      	adds	r3, #1
90012aee:	105b      	asrs	r3, r3, #1
90012af0:	f8ad 300e 	strh.w	r3, [sp, #14]
90012af4:	e7ed      	b.n	90012ad2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90012af6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90012afa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012afe:	4413      	add	r3, r2
90012b00:	b29b      	uxth	r3, r3
90012b02:	441a      	add	r2, r3
90012b04:	f8ad 300a 	strh.w	r3, [sp, #10]
90012b08:	b212      	sxth	r2, r2
90012b0a:	4296      	cmp	r6, r2
90012b0c:	dadd      	bge.n	90012aca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012b0e:	1ae3      	subs	r3, r4, r3
90012b10:	f8ad 300e 	strh.w	r3, [sp, #14]
90012b14:	e7d9      	b.n	90012aca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012b16:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90012b1a:	441c      	add	r4, r3
90012b1c:	b2a4      	uxth	r4, r4
90012b1e:	b226      	sxth	r6, r4
90012b20:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90012b24:	42b3      	cmp	r3, r6
90012b26:	dac8      	bge.n	90012aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012b28:	4653      	mov	r3, sl
90012b2a:	464a      	mov	r2, r9
90012b2c:	4641      	mov	r1, r8
90012b2e:	4628      	mov	r0, r5
90012b30:	e9cd b700 	strd	fp, r7, [sp]
90012b34:	f7ff ff98 	bl	90012a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012b38:	b940      	cbnz	r0, 90012b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012b3a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012b3e:	2b01      	cmp	r3, #1
90012b40:	d004      	beq.n	90012b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012b42:	3301      	adds	r3, #1
90012b44:	105b      	asrs	r3, r3, #1
90012b46:	f8ad 300c 	strh.w	r3, [sp, #12]
90012b4a:	e7ed      	b.n	90012b28 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90012b4c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012b50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90012b54:	4413      	add	r3, r2
90012b56:	b29b      	uxth	r3, r3
90012b58:	441a      	add	r2, r3
90012b5a:	f8ad 3008 	strh.w	r3, [sp, #8]
90012b5e:	b212      	sxth	r2, r2
90012b60:	4296      	cmp	r6, r2
90012b62:	dadd      	bge.n	90012b20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012b64:	1ae3      	subs	r3, r4, r3
90012b66:	f8ad 300c 	strh.w	r3, [sp, #12]
90012b6a:	e7d9      	b.n	90012b20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012b6c:	24021984 	.word	0x24021984

90012b70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90012b70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012b72:	6803      	ldr	r3, [r0, #0]
90012b74:	460d      	mov	r5, r1
90012b76:	4604      	mov	r4, r0
90012b78:	4601      	mov	r1, r0
90012b7a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012b7c:	a802      	add	r0, sp, #8
90012b7e:	4798      	blx	r3
90012b80:	6828      	ldr	r0, [r5, #0]
90012b82:	6869      	ldr	r1, [r5, #4]
90012b84:	466b      	mov	r3, sp
90012b86:	c303      	stmia	r3!, {r0, r1}
90012b88:	4668      	mov	r0, sp
90012b8a:	4619      	mov	r1, r3
90012b8c:	f7fd fb74 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90012b90:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90012b92:	b188      	cbz	r0, 90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012b94:	6803      	ldr	r3, [r0, #0]
90012b96:	1d21      	adds	r1, r4, #4
90012b98:	68db      	ldr	r3, [r3, #12]
90012b9a:	4798      	blx	r3
90012b9c:	b160      	cbz	r0, 90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012b9e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012ba2:	2b00      	cmp	r3, #0
90012ba4:	dd08      	ble.n	90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012ba6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012baa:	2d00      	cmp	r5, #0
90012bac:	dd04      	ble.n	90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012bae:	4a2b      	ldr	r2, [pc, #172]	@ (90012c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012bb0:	7812      	ldrb	r2, [r2, #0]
90012bb2:	b11a      	cbz	r2, 90012bbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012bb4:	2a01      	cmp	r2, #1
90012bb6:	d029      	beq.n	90012c0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012bb8:	b004      	add	sp, #16
90012bba:	bd70      	pop	{r4, r5, r6, pc}
90012bbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012bc0:	441d      	add	r5, r3
90012bc2:	b2ad      	uxth	r5, r5
90012bc4:	b22e      	sxth	r6, r5
90012bc6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012bca:	42b3      	cmp	r3, r6
90012bcc:	daf4      	bge.n	90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012bce:	6823      	ldr	r3, [r4, #0]
90012bd0:	4669      	mov	r1, sp
90012bd2:	4620      	mov	r0, r4
90012bd4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012bd6:	4798      	blx	r3
90012bd8:	b940      	cbnz	r0, 90012bec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012bda:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012bde:	2b01      	cmp	r3, #1
90012be0:	d004      	beq.n	90012bec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012be2:	3301      	adds	r3, #1
90012be4:	105b      	asrs	r3, r3, #1
90012be6:	f8ad 3006 	strh.w	r3, [sp, #6]
90012bea:	e7f0      	b.n	90012bce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012bec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012bf0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012bf4:	4413      	add	r3, r2
90012bf6:	b29b      	uxth	r3, r3
90012bf8:	441a      	add	r2, r3
90012bfa:	f8ad 3002 	strh.w	r3, [sp, #2]
90012bfe:	b212      	sxth	r2, r2
90012c00:	4296      	cmp	r6, r2
90012c02:	dae0      	bge.n	90012bc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012c04:	1aeb      	subs	r3, r5, r3
90012c06:	f8ad 3006 	strh.w	r3, [sp, #6]
90012c0a:	e7dc      	b.n	90012bc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012c0c:	f8bd 5000 	ldrh.w	r5, [sp]
90012c10:	441d      	add	r5, r3
90012c12:	b2ad      	uxth	r5, r5
90012c14:	b22e      	sxth	r6, r5
90012c16:	f9bd 3000 	ldrsh.w	r3, [sp]
90012c1a:	42b3      	cmp	r3, r6
90012c1c:	dacc      	bge.n	90012bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012c1e:	6823      	ldr	r3, [r4, #0]
90012c20:	4669      	mov	r1, sp
90012c22:	4620      	mov	r0, r4
90012c24:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012c26:	4798      	blx	r3
90012c28:	b940      	cbnz	r0, 90012c3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012c2a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012c2e:	2b01      	cmp	r3, #1
90012c30:	d004      	beq.n	90012c3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012c32:	3301      	adds	r3, #1
90012c34:	105b      	asrs	r3, r3, #1
90012c36:	f8ad 3004 	strh.w	r3, [sp, #4]
90012c3a:	e7f0      	b.n	90012c1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90012c3c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90012c40:	f8bd 3000 	ldrh.w	r3, [sp]
90012c44:	4413      	add	r3, r2
90012c46:	b29b      	uxth	r3, r3
90012c48:	441a      	add	r2, r3
90012c4a:	f8ad 3000 	strh.w	r3, [sp]
90012c4e:	b212      	sxth	r2, r2
90012c50:	4296      	cmp	r6, r2
90012c52:	dae0      	bge.n	90012c16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012c54:	1aeb      	subs	r3, r5, r3
90012c56:	f8ad 3004 	strh.w	r3, [sp, #4]
90012c5a:	e7dc      	b.n	90012c16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012c5c:	24021984 	.word	0x24021984

90012c60 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90012c60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90012c62:	6803      	ldr	r3, [r0, #0]
90012c64:	4604      	mov	r4, r0
90012c66:	4601      	mov	r1, r0
90012c68:	4668      	mov	r0, sp
90012c6a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012c6c:	4798      	blx	r3
90012c6e:	2100      	movs	r1, #0
90012c70:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012c74:	4668      	mov	r0, sp
90012c76:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012c7a:	9102      	str	r1, [sp, #8]
90012c7c:	a902      	add	r1, sp, #8
90012c7e:	f8ad 200c 	strh.w	r2, [sp, #12]
90012c82:	f8ad 300e 	strh.w	r3, [sp, #14]
90012c86:	f7fd faf7 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90012c8a:	6823      	ldr	r3, [r4, #0]
90012c8c:	4669      	mov	r1, sp
90012c8e:	4620      	mov	r0, r4
90012c90:	691b      	ldr	r3, [r3, #16]
90012c92:	4798      	blx	r3
90012c94:	b004      	add	sp, #16
90012c96:	bd10      	pop	{r4, pc}

90012c98 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012c98:	2101      	movs	r1, #1
90012c9a:	2200      	movs	r2, #0
90012c9c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90012ca0:	490a      	ldr	r1, [pc, #40]	@ (90012ccc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90012ca2:	8082      	strh	r2, [r0, #4]
90012ca4:	6001      	str	r1, [r0, #0]
90012ca6:	21ff      	movs	r1, #255	@ 0xff
90012ca8:	80c2      	strh	r2, [r0, #6]
90012caa:	8102      	strh	r2, [r0, #8]
90012cac:	8142      	strh	r2, [r0, #10]
90012cae:	8182      	strh	r2, [r0, #12]
90012cb0:	81c2      	strh	r2, [r0, #14]
90012cb2:	8202      	strh	r2, [r0, #16]
90012cb4:	8242      	strh	r2, [r0, #18]
90012cb6:	61c2      	str	r2, [r0, #28]
90012cb8:	8402      	strh	r2, [r0, #32]
90012cba:	8442      	strh	r2, [r0, #34]	@ 0x22
90012cbc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90012cc0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90012cc4:	6282      	str	r2, [r0, #40]	@ 0x28
90012cc6:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012cca:	4770      	bx	lr
90012ccc:	9002d394 	.word	0x9002d394

90012cd0 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
90012cd0:	880b      	ldrh	r3, [r1, #0]
90012cd2:	8643      	strh	r3, [r0, #50]	@ 0x32
90012cd4:	4770      	bx	lr

90012cd6 <_ZN8touchgfx13AnimatedImageD1Ev>:
90012cd6:	4770      	bx	lr

90012cd8 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
90012cd8:	880b      	ldrh	r3, [r1, #0]
90012cda:	8603      	strh	r3, [r0, #48]	@ 0x30
90012cdc:	f000 bdfb 	b.w	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

90012ce0 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
90012ce0:	b513      	push	{r0, r1, r4, lr}
90012ce2:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012ce6:	4604      	mov	r4, r0
90012ce8:	b143      	cbz	r3, 90012cfc <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
90012cea:	f003 fac7 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90012cee:	4621      	mov	r1, r4
90012cf0:	3004      	adds	r0, #4
90012cf2:	f003 fae8 	bl	900162c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012cf6:	2300      	movs	r3, #0
90012cf8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012cfc:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90012d00:	b163      	cbz	r3, 90012d1c <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
90012d02:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90012d04:	a901      	add	r1, sp, #4
90012d06:	4620      	mov	r0, r4
90012d08:	f8ad 3004 	strh.w	r3, [sp, #4]
90012d0c:	f000 fde3 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012d10:	6823      	ldr	r3, [r4, #0]
90012d12:	4620      	mov	r0, r4
90012d14:	695b      	ldr	r3, [r3, #20]
90012d16:	4798      	blx	r3
90012d18:	b002      	add	sp, #8
90012d1a:	bd10      	pop	{r4, pc}
90012d1c:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90012d1e:	e7f1      	b.n	90012d04 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

90012d20 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
90012d20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90012d22:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90012d26:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
90012d28:	4604      	mov	r4, r0
90012d2a:	42bd      	cmp	r5, r7
90012d2c:	d01a      	beq.n	90012d64 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90012d2e:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
90012d30:	42be      	cmp	r6, r7
90012d32:	d017      	beq.n	90012d64 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90012d34:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
90012d38:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
90012d3c:	b1a1      	cbz	r1, 90012d68 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
90012d3e:	b142      	cbz	r2, 90012d52 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90012d40:	a902      	add	r1, sp, #8
90012d42:	f821 6d04 	strh.w	r6, [r1, #-4]!
90012d46:	f000 fdc6 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012d4a:	6823      	ldr	r3, [r4, #0]
90012d4c:	4620      	mov	r0, r4
90012d4e:	695b      	ldr	r3, [r3, #20]
90012d50:	4798      	blx	r3
90012d52:	f003 fa93 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90012d56:	4621      	mov	r1, r4
90012d58:	3004      	adds	r0, #4
90012d5a:	f003 fb5d 	bl	90016418 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90012d5e:	2301      	movs	r3, #1
90012d60:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012d64:	b003      	add	sp, #12
90012d66:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012d68:	2a00      	cmp	r2, #0
90012d6a:	d0f2      	beq.n	90012d52 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90012d6c:	a902      	add	r1, sp, #8
90012d6e:	f821 5d04 	strh.w	r5, [r1, #-4]!
90012d72:	e7e8      	b.n	90012d46 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

90012d74 <_ZN8touchgfx13AnimatedImageD0Ev>:
90012d74:	b510      	push	{r4, lr}
90012d76:	4604      	mov	r4, r0
90012d78:	213c      	movs	r1, #60	@ 0x3c
90012d7a:	f016 f8ef 	bl	90028f5c <_ZdlPvj>
90012d7e:	4620      	mov	r0, r4
90012d80:	bd10      	pop	{r4, pc}

90012d82 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
90012d82:	b510      	push	{r4, lr}
90012d84:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012d88:	4604      	mov	r4, r0
90012d8a:	b14b      	cbz	r3, 90012da0 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
90012d8c:	f003 fa76 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90012d90:	4621      	mov	r1, r4
90012d92:	3004      	adds	r0, #4
90012d94:	f003 fa97 	bl	900162c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012d98:	2300      	movs	r3, #0
90012d9a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012d9e:	bd10      	pop	{r4, pc}
90012da0:	f003 fa6c 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90012da4:	4621      	mov	r1, r4
90012da6:	3004      	adds	r0, #4
90012da8:	f003 fb36 	bl	90016418 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90012dac:	2301      	movs	r3, #1
90012dae:	e7f4      	b.n	90012d9a <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

90012db0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
90012db0:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012db2:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012db6:	4604      	mov	r4, r0
90012db8:	2b00      	cmp	r3, #0
90012dba:	d042      	beq.n	90012e42 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012dbc:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90012dc0:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
90012dc4:	3301      	adds	r3, #1
90012dc6:	b2db      	uxtb	r3, r3
90012dc8:	429a      	cmp	r2, r3
90012dca:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012dce:	d138      	bne.n	90012e42 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012dd0:	2300      	movs	r3, #0
90012dd2:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
90012dd4:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
90012dd8:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012ddc:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
90012dde:	4299      	cmp	r1, r3
90012de0:	d100      	bne.n	90012de4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
90012de2:	b122      	cbz	r2, 90012dee <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
90012de4:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
90012de6:	4299      	cmp	r1, r3
90012de8:	d12f      	bne.n	90012e4a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
90012dea:	2a00      	cmp	r2, #0
90012dec:	d034      	beq.n	90012e58 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90012dee:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
90012df2:	b93d      	cbnz	r5, 90012e04 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
90012df4:	f003 fa42 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90012df8:	4621      	mov	r1, r4
90012dfa:	3004      	adds	r0, #4
90012dfc:	f003 fa63 	bl	900162c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012e00:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
90012e04:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90012e06:	b140      	cbz	r0, 90012e1a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90012e08:	6803      	ldr	r3, [r0, #0]
90012e0a:	68db      	ldr	r3, [r3, #12]
90012e0c:	4798      	blx	r3
90012e0e:	b120      	cbz	r0, 90012e1a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90012e10:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90012e12:	4621      	mov	r1, r4
90012e14:	6803      	ldr	r3, [r0, #0]
90012e16:	689b      	ldr	r3, [r3, #8]
90012e18:	4798      	blx	r3
90012e1a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90012e1e:	b183      	cbz	r3, 90012e42 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012e20:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90012e24:	b16b      	cbz	r3, 90012e42 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012e26:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90012e2a:	b163      	cbz	r3, 90012e46 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
90012e2c:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90012e2e:	a901      	add	r1, sp, #4
90012e30:	f8ad 3004 	strh.w	r3, [sp, #4]
90012e34:	4620      	mov	r0, r4
90012e36:	f000 fd4e 	bl	900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012e3a:	6823      	ldr	r3, [r4, #0]
90012e3c:	4620      	mov	r0, r4
90012e3e:	695b      	ldr	r3, [r3, #20]
90012e40:	4798      	blx	r3
90012e42:	b003      	add	sp, #12
90012e44:	bd30      	pop	{r4, r5, pc}
90012e46:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90012e48:	e7f1      	b.n	90012e2e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
90012e4a:	b12a      	cbz	r2, 90012e58 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90012e4c:	3b01      	subs	r3, #1
90012e4e:	b29b      	uxth	r3, r3
90012e50:	a902      	add	r1, sp, #8
90012e52:	f821 3d04 	strh.w	r3, [r1, #-4]!
90012e56:	e7ed      	b.n	90012e34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
90012e58:	3301      	adds	r3, #1
90012e5a:	e7f8      	b.n	90012e4e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

90012e5c <_ZNK8touchgfx5Image17invalidateContentEv>:
90012e5c:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90012e60:	b12a      	cbz	r2, 90012e6e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012e62:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012e66:	b112      	cbz	r2, 90012e6e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012e68:	6803      	ldr	r3, [r0, #0]
90012e6a:	695b      	ldr	r3, [r3, #20]
90012e6c:	4718      	bx	r3
90012e6e:	4770      	bx	lr

90012e70 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
90012e70:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012e72:	ac02      	add	r4, sp, #8
90012e74:	6803      	ldr	r3, [r0, #0]
90012e76:	4605      	mov	r5, r0
90012e78:	4616      	mov	r6, r2
90012e7a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90012e7c:	f824 1d04 	strh.w	r1, [r4, #-4]!
90012e80:	4621      	mov	r1, r4
90012e82:	4798      	blx	r3
90012e84:	682b      	ldr	r3, [r5, #0]
90012e86:	4621      	mov	r1, r4
90012e88:	4628      	mov	r0, r5
90012e8a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90012e8c:	f8ad 6004 	strh.w	r6, [sp, #4]
90012e90:	4798      	blx	r3
90012e92:	b002      	add	sp, #8
90012e94:	bd70      	pop	{r4, r5, r6, pc}

90012e96 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
90012e96:	2300      	movs	r3, #0
90012e98:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
90012e9c:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012ea0:	4770      	bx	lr

90012ea2 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90012ea2:	2000      	movs	r0, #0
90012ea4:	4770      	bx	lr
	...

90012ea8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012ea8:	4b07      	ldr	r3, [pc, #28]	@ (90012ec8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012eaa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012eac:	881b      	ldrh	r3, [r3, #0]
90012eae:	4293      	cmp	r3, r2
90012eb0:	bf81      	itttt	hi
90012eb2:	4b06      	ldrhi	r3, [pc, #24]	@ (90012ecc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012eb4:	681b      	ldrhi	r3, [r3, #0]
90012eb6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012eba:	7858      	ldrbhi	r0, [r3, #1]
90012ebc:	bf8c      	ite	hi
90012ebe:	f000 0003 	andhi.w	r0, r0, #3
90012ec2:	2000      	movls	r0, #0
90012ec4:	4770      	bx	lr
90012ec6:	bf00      	nop
90012ec8:	240219e8 	.word	0x240219e8
90012ecc:	240219e4 	.word	0x240219e4

90012ed0 <_ZN8touchgfx8TextAreaD1Ev>:
90012ed0:	4770      	bx	lr
	...

90012ed4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90012ed4:	4b11      	ldr	r3, [pc, #68]	@ (90012f1c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90012ed6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012eda:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012edc:	4604      	mov	r4, r0
90012ede:	881b      	ldrh	r3, [r3, #0]
90012ee0:	428b      	cmp	r3, r1
90012ee2:	d918      	bls.n	90012f16 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90012ee4:	6803      	ldr	r3, [r0, #0]
90012ee6:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90012ee8:	4b0d      	ldr	r3, [pc, #52]	@ (90012f20 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012eea:	6818      	ldr	r0, [r3, #0]
90012eec:	f7f2 fdcc 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90012ef0:	6823      	ldr	r3, [r4, #0]
90012ef2:	4606      	mov	r6, r0
90012ef4:	4620      	mov	r0, r4
90012ef6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012ef8:	4798      	blx	r3
90012efa:	6823      	ldr	r3, [r4, #0]
90012efc:	4607      	mov	r7, r0
90012efe:	4620      	mov	r0, r4
90012f00:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012f04:	4798      	blx	r3
90012f06:	463a      	mov	r2, r7
90012f08:	4603      	mov	r3, r0
90012f0a:	4631      	mov	r1, r6
90012f0c:	4620      	mov	r0, r4
90012f0e:	46ac      	mov	ip, r5
90012f10:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90012f14:	4760      	bx	ip
90012f16:	2000      	movs	r0, #0
90012f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012f1c:	240219e8 	.word	0x240219e8
90012f20:	240219f0 	.word	0x240219f0

90012f24 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90012f24:	4b18      	ldr	r3, [pc, #96]	@ (90012f88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90012f26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90012f2a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012f2c:	4604      	mov	r4, r0
90012f2e:	881b      	ldrh	r3, [r3, #0]
90012f30:	428b      	cmp	r3, r1
90012f32:	d926      	bls.n	90012f82 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90012f34:	4b15      	ldr	r3, [pc, #84]	@ (90012f8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90012f36:	681b      	ldr	r3, [r3, #0]
90012f38:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90012f3c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90012f40:	4b13      	ldr	r3, [pc, #76]	@ (90012f90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90012f42:	7855      	ldrb	r5, [r2, #1]
90012f44:	681b      	ldr	r3, [r3, #0]
90012f46:	f3c5 0581 	ubfx	r5, r5, #2, #2
90012f4a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90012f4e:	6833      	ldr	r3, [r6, #0]
90012f50:	69df      	ldr	r7, [r3, #28]
90012f52:	4b10      	ldr	r3, [pc, #64]	@ (90012f94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90012f54:	6818      	ldr	r0, [r3, #0]
90012f56:	f7f2 fd97 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90012f5a:	6823      	ldr	r3, [r4, #0]
90012f5c:	4680      	mov	r8, r0
90012f5e:	4620      	mov	r0, r4
90012f60:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012f62:	4798      	blx	r3
90012f64:	6823      	ldr	r3, [r4, #0]
90012f66:	4681      	mov	r9, r0
90012f68:	4620      	mov	r0, r4
90012f6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012f6e:	4798      	blx	r3
90012f70:	464b      	mov	r3, r9
90012f72:	9000      	str	r0, [sp, #0]
90012f74:	4642      	mov	r2, r8
90012f76:	4629      	mov	r1, r5
90012f78:	4630      	mov	r0, r6
90012f7a:	47b8      	blx	r7
90012f7c:	b003      	add	sp, #12
90012f7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012f82:	2000      	movs	r0, #0
90012f84:	e7fa      	b.n	90012f7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90012f86:	bf00      	nop
90012f88:	240219e8 	.word	0x240219e8
90012f8c:	240219e4 	.word	0x240219e4
90012f90:	240219ec 	.word	0x240219ec
90012f94:	240219f0 	.word	0x240219f0

90012f98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012f98:	b40e      	push	{r1, r2, r3}
90012f9a:	4b30      	ldr	r3, [pc, #192]	@ (9001305c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012fa0:	881a      	ldrh	r2, [r3, #0]
90012fa2:	b09d      	sub	sp, #116	@ 0x74
90012fa4:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90012fa6:	4604      	mov	r4, r0
90012fa8:	429a      	cmp	r2, r3
90012faa:	d954      	bls.n	90013056 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012fac:	aa26      	add	r2, sp, #152	@ 0x98
90012fae:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90013060 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90012fb2:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90013064 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90012fb6:	9202      	str	r2, [sp, #8]
90012fb8:	f8d9 2000 	ldr.w	r2, [r9]
90012fbc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012fc0:	f8d8 3000 	ldr.w	r3, [r8]
90012fc4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012fc8:	682b      	ldr	r3, [r5, #0]
90012fca:	4628      	mov	r0, r5
90012fcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012fce:	4798      	blx	r3
90012fd0:	4606      	mov	r6, r0
90012fd2:	b207      	sxth	r7, r0
90012fd4:	a803      	add	r0, sp, #12
90012fd6:	f005 fb59 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
90012fda:	682b      	ldr	r3, [r5, #0]
90012fdc:	4628      	mov	r0, r5
90012fde:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90012fe0:	4798      	blx	r3
90012fe2:	682b      	ldr	r3, [r5, #0]
90012fe4:	4682      	mov	sl, r0
90012fe6:	4628      	mov	r0, r5
90012fe8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90012fea:	4798      	blx	r3
90012fec:	4653      	mov	r3, sl
90012fee:	9000      	str	r0, [sp, #0]
90012ff0:	a803      	add	r0, sp, #12
90012ff2:	9a02      	ldr	r2, [sp, #8]
90012ff4:	9925      	ldr	r1, [sp, #148]	@ 0x94
90012ff6:	f005 fba4 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012ffa:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90012ffc:	f8d9 3000 	ldr.w	r3, [r9]
90013000:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90013004:	8925      	ldrh	r5, [r4, #8]
90013006:	eb03 0142 	add.w	r1, r3, r2, lsl #1
9001300a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001300e:	eba5 050c 	sub.w	r5, r5, ip
90013012:	784a      	ldrb	r2, [r1, #1]
90013014:	f8d8 3000 	ldr.w	r3, [r8]
90013018:	b22d      	sxth	r5, r5
9001301a:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9001301e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013022:	9500      	str	r5, [sp, #0]
90013024:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90013028:	a803      	add	r0, sp, #12
9001302a:	f002 fc93 	bl	90015954 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001302e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90013032:	b203      	sxth	r3, r0
90013034:	18b9      	adds	r1, r7, r2
90013036:	2900      	cmp	r1, #0
90013038:	dd0b      	ble.n	90013052 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9001303a:	3b01      	subs	r3, #1
9001303c:	fb13 f302 	smulbb	r3, r3, r2
90013040:	fb16 3300 	smlabb	r3, r6, r0, r3
90013044:	b21f      	sxth	r7, r3
90013046:	4638      	mov	r0, r7
90013048:	b01d      	add	sp, #116	@ 0x74
9001304a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001304e:	b003      	add	sp, #12
90013050:	4770      	bx	lr
90013052:	2b00      	cmp	r3, #0
90013054:	dcf7      	bgt.n	90013046 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90013056:	2700      	movs	r7, #0
90013058:	e7f5      	b.n	90013046 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001305a:	bf00      	nop
9001305c:	240219e8 	.word	0x240219e8
90013060:	240219e4 	.word	0x240219e4
90013064:	240219ec 	.word	0x240219ec

90013068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90013068:	4bbd      	ldr	r3, [pc, #756]	@ (90013360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
9001306a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001306e:	460c      	mov	r4, r1
90013070:	881b      	ldrh	r3, [r3, #0]
90013072:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90013074:	b0a9      	sub	sp, #164	@ 0xa4
90013076:	4680      	mov	r8, r0
90013078:	428b      	cmp	r3, r1
9001307a:	d809      	bhi.n	90013090 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
9001307c:	2300      	movs	r3, #0
9001307e:	f04f 32ff 	mov.w	r2, #4294967295
90013082:	6083      	str	r3, [r0, #8]
90013084:	e9c0 3200 	strd	r3, r2, [r0]
90013088:	4640      	mov	r0, r8
9001308a:	b029      	add	sp, #164	@ 0xa4
9001308c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013090:	4eb4      	ldr	r6, [pc, #720]	@ (90013364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90013092:	6833      	ldr	r3, [r6, #0]
90013094:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90013098:	4bb3      	ldr	r3, [pc, #716]	@ (90013368 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
9001309a:	681b      	ldr	r3, [r3, #0]
9001309c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900130a0:	4bb2      	ldr	r3, [pc, #712]	@ (9001336c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900130a2:	6818      	ldr	r0, [r3, #0]
900130a4:	f7f2 fcf0 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
900130a8:	682b      	ldr	r3, [r5, #0]
900130aa:	4681      	mov	r9, r0
900130ac:	4628      	mov	r0, r5
900130ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900130b0:	4798      	blx	r3
900130b2:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
900130b4:	b203      	sxth	r3, r0
900130b6:	4682      	mov	sl, r0
900130b8:	4407      	add	r7, r0
900130ba:	a80f      	add	r0, sp, #60	@ 0x3c
900130bc:	9304      	str	r3, [sp, #16]
900130be:	b2bb      	uxth	r3, r7
900130c0:	9303      	str	r3, [sp, #12]
900130c2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900130c6:	2b00      	cmp	r3, #0
900130c8:	f040 80a5 	bne.w	90013216 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
900130cc:	f005 fade 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
900130d0:	682b      	ldr	r3, [r5, #0]
900130d2:	4628      	mov	r0, r5
900130d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900130d6:	4798      	blx	r3
900130d8:	682b      	ldr	r3, [r5, #0]
900130da:	4606      	mov	r6, r0
900130dc:	4628      	mov	r0, r5
900130de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900130e0:	4798      	blx	r3
900130e2:	6823      	ldr	r3, [r4, #0]
900130e4:	4607      	mov	r7, r0
900130e6:	4620      	mov	r0, r4
900130e8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900130ea:	4798      	blx	r3
900130ec:	6823      	ldr	r3, [r4, #0]
900130ee:	4683      	mov	fp, r0
900130f0:	4620      	mov	r0, r4
900130f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900130f6:	4798      	blx	r3
900130f8:	463b      	mov	r3, r7
900130fa:	4649      	mov	r1, r9
900130fc:	4632      	mov	r2, r6
900130fe:	2600      	movs	r6, #0
90013100:	e9cd b000 	strd	fp, r0, [sp]
90013104:	a80f      	add	r0, sp, #60	@ 0x3c
90013106:	4637      	mov	r7, r6
90013108:	f005 fb30 	bl	9001876c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
9001310c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013110:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90013364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90013114:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013118:	bf0c      	ite	eq
9001311a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001311e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90013122:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013124:	4629      	mov	r1, r5
90013126:	f8db 3000 	ldr.w	r3, [fp]
9001312a:	a80f      	add	r0, sp, #60	@ 0x3c
9001312c:	3701      	adds	r7, #1
9001312e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013132:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90013136:	b2bf      	uxth	r7, r7
90013138:	785b      	ldrb	r3, [r3, #1]
9001313a:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001313e:	f002 f910 	bl	90015362 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90013142:	9b03      	ldr	r3, [sp, #12]
90013144:	4286      	cmp	r6, r0
90013146:	eba9 0903 	sub.w	r9, r9, r3
9001314a:	bfb8      	it	lt
9001314c:	4606      	movlt	r6, r0
9001314e:	a80f      	add	r0, sp, #60	@ 0x3c
90013150:	fa0f f989 	sxth.w	r9, r9
90013154:	b236      	sxth	r6, r6
90013156:	f005 fac0 	bl	900186da <_ZN8touchgfx12TextProvider11endOfStringEv>
9001315a:	b918      	cbnz	r0, 90013164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001315c:	7a2b      	ldrb	r3, [r5, #8]
9001315e:	444b      	add	r3, r9
90013160:	2b00      	cmp	r3, #0
90013162:	dcde      	bgt.n	90013122 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90013164:	9b03      	ldr	r3, [sp, #12]
90013166:	4620      	mov	r0, r4
90013168:	9a04      	ldr	r2, [sp, #16]
9001316a:	fb13 f707 	smulbb	r7, r3, r7
9001316e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90013170:	f895 9009 	ldrb.w	r9, [r5, #9]
90013174:	1aff      	subs	r7, r7, r3
90013176:	b2bf      	uxth	r7, r7
90013178:	b23b      	sxth	r3, r7
9001317a:	429a      	cmp	r2, r3
9001317c:	bfa8      	it	ge
9001317e:	4657      	movge	r7, sl
90013180:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013184:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013188:	6823      	ldr	r3, [r4, #0]
9001318a:	444f      	add	r7, r9
9001318c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001318e:	bf08      	it	eq
90013190:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90013194:	fa1f f987 	uxth.w	r9, r7
90013198:	bf18      	it	ne
9001319a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
9001319e:	4798      	blx	r3
900131a0:	2801      	cmp	r0, #1
900131a2:	fa0f f789 	sxth.w	r7, r9
900131a6:	b2b3      	uxth	r3, r6
900131a8:	f000 80e2 	beq.w	90013370 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900131ac:	2802      	cmp	r0, #2
900131ae:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
900131b2:	f000 80e3 	beq.w	9001337c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
900131b6:	7aea      	ldrb	r2, [r5, #11]
900131b8:	b236      	sxth	r6, r6
900131ba:	7b2d      	ldrb	r5, [r5, #12]
900131bc:	1ab6      	subs	r6, r6, r2
900131be:	442a      	add	r2, r5
900131c0:	fa1f fa86 	uxth.w	sl, r6
900131c4:	4413      	add	r3, r2
900131c6:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
900131ca:	fa0f fb8a 	sxth.w	fp, sl
900131ce:	b29b      	uxth	r3, r3
900131d0:	2a02      	cmp	r2, #2
900131d2:	b21e      	sxth	r6, r3
900131d4:	f000 80d6 	beq.w	90013384 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900131d8:	2a03      	cmp	r2, #3
900131da:	f000 80de 	beq.w	9001339a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900131de:	2a01      	cmp	r2, #1
900131e0:	f040 80e6 	bne.w	900133b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
900131e4:	8925      	ldrh	r5, [r4, #8]
900131e6:	4633      	mov	r3, r6
900131e8:	463e      	mov	r6, r7
900131ea:	eba5 0909 	sub.w	r9, r5, r9
900131ee:	461f      	mov	r7, r3
900131f0:	465d      	mov	r5, fp
900131f2:	fa0f fb89 	sxth.w	fp, r9
900131f6:	4b5d      	ldr	r3, [pc, #372]	@ (9001336c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900131f8:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900131fa:	6818      	ldr	r0, [r3, #0]
900131fc:	f7f2 fc44 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90013200:	f8a8 b000 	strh.w	fp, [r8]
90013204:	f8a8 5002 	strh.w	r5, [r8, #2]
90013208:	f8a8 6004 	strh.w	r6, [r8, #4]
9001320c:	f8a8 7006 	strh.w	r7, [r8, #6]
90013210:	f8c8 0008 	str.w	r0, [r8, #8]
90013214:	e738      	b.n	90013088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90013216:	f005 fa39 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
9001321a:	682b      	ldr	r3, [r5, #0]
9001321c:	4628      	mov	r0, r5
9001321e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90013220:	4798      	blx	r3
90013222:	682b      	ldr	r3, [r5, #0]
90013224:	4607      	mov	r7, r0
90013226:	4628      	mov	r0, r5
90013228:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001322a:	4798      	blx	r3
9001322c:	6823      	ldr	r3, [r4, #0]
9001322e:	4683      	mov	fp, r0
90013230:	4620      	mov	r0, r4
90013232:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013234:	4798      	blx	r3
90013236:	6822      	ldr	r2, [r4, #0]
90013238:	9005      	str	r0, [sp, #20]
9001323a:	4620      	mov	r0, r4
9001323c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
90013240:	4790      	blx	r2
90013242:	9b05      	ldr	r3, [sp, #20]
90013244:	463a      	mov	r2, r7
90013246:	4649      	mov	r1, r9
90013248:	9001      	str	r0, [sp, #4]
9001324a:	a80f      	add	r0, sp, #60	@ 0x3c
9001324c:	9300      	str	r3, [sp, #0]
9001324e:	465b      	mov	r3, fp
90013250:	f005 fa8c 	bl	9001876c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013254:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013258:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
9001325c:	af0f      	add	r7, sp, #60	@ 0x3c
9001325e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013262:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013266:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013268:	bf0a      	itet	eq
9001326a:	464a      	moveq	r2, r9
9001326c:	461a      	movne	r2, r3
9001326e:	4699      	moveq	r9, r3
90013270:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90013274:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90013278:	1ad2      	subs	r2, r2, r3
9001327a:	6833      	ldr	r3, [r6, #0]
9001327c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90013280:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013284:	7859      	ldrb	r1, [r3, #1]
90013286:	2300      	movs	r3, #0
90013288:	9707      	str	r7, [sp, #28]
9001328a:	f3c1 0181 	ubfx	r1, r1, #2, #2
9001328e:	f8ad 3018 	strh.w	r3, [sp, #24]
90013292:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90013296:	f88d 1020 	strb.w	r1, [sp, #32]
9001329a:	9509      	str	r5, [sp, #36]	@ 0x24
9001329c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900132a0:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
900132a4:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
900132a8:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900132ac:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
900132b0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900132b4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900132b8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900132bc:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900132c0:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
900132c4:	b350      	cbz	r0, 9001331c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900132c6:	682b      	ldr	r3, [r5, #0]
900132c8:	4628      	mov	r0, r5
900132ca:	695b      	ldr	r3, [r3, #20]
900132cc:	4798      	blx	r3
900132ce:	4607      	mov	r7, r0
900132d0:	b320      	cbz	r0, 9001331c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900132d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900132d4:	4639      	mov	r1, r7
900132d6:	6803      	ldr	r3, [r0, #0]
900132d8:	68db      	ldr	r3, [r3, #12]
900132da:	4798      	blx	r3
900132dc:	4606      	mov	r6, r0
900132de:	b1e8      	cbz	r0, 9001331c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900132e0:	7b43      	ldrb	r3, [r0, #13]
900132e2:	7a82      	ldrb	r2, [r0, #10]
900132e4:	005b      	lsls	r3, r3, #1
900132e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900132ea:	4313      	orrs	r3, r2
900132ec:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900132f0:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
900132f4:	2b06      	cmp	r3, #6
900132f6:	d111      	bne.n	9001331c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900132f8:	9809      	ldr	r0, [sp, #36]	@ 0x24
900132fa:	4632      	mov	r2, r6
900132fc:	4639      	mov	r1, r7
900132fe:	6803      	ldr	r3, [r0, #0]
90013300:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90013302:	4798      	blx	r3
90013304:	7b73      	ldrb	r3, [r6, #13]
90013306:	005b      	lsls	r3, r3, #1
90013308:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001330c:	7ab3      	ldrb	r3, [r6, #10]
9001330e:	4313      	orrs	r3, r2
90013310:	4418      	add	r0, r3
90013312:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90013316:	4418      	add	r0, r3
90013318:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
9001331c:	2600      	movs	r6, #0
9001331e:	4637      	mov	r7, r6
90013320:	a806      	add	r0, sp, #24
90013322:	3701      	adds	r7, #1
90013324:	f002 fa13 	bl	9001574e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013328:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
9001332c:	9b03      	ldr	r3, [sp, #12]
9001332e:	b2bf      	uxth	r7, r7
90013330:	4286      	cmp	r6, r0
90013332:	eba9 0903 	sub.w	r9, r9, r3
90013336:	f8bd 3018 	ldrh.w	r3, [sp, #24]
9001333a:	bfb8      	it	lt
9001333c:	4606      	movlt	r6, r0
9001333e:	fa0f f989 	sxth.w	r9, r9
90013342:	b236      	sxth	r6, r6
90013344:	2b00      	cmp	r3, #0
90013346:	f43f af0d 	beq.w	90013164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001334a:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
9001334e:	2b00      	cmp	r3, #0
90013350:	f47f af08 	bne.w	90013164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013354:	7a2b      	ldrb	r3, [r5, #8]
90013356:	444b      	add	r3, r9
90013358:	2b00      	cmp	r3, #0
9001335a:	dce1      	bgt.n	90013320 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
9001335c:	e702      	b.n	90013164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001335e:	bf00      	nop
90013360:	240219e8 	.word	0x240219e8
90013364:	240219e4 	.word	0x240219e4
90013368:	240219ec 	.word	0x240219ec
9001336c:	240219f0 	.word	0x240219f0
90013370:	ebaa 0606 	sub.w	r6, sl, r6
90013374:	2002      	movs	r0, #2
90013376:	fb96 f6f0 	sdiv	r6, r6, r0
9001337a:	e71c      	b.n	900131b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001337c:	441e      	add	r6, r3
9001337e:	ebaa 0606 	sub.w	r6, sl, r6
90013382:	e718      	b.n	900131b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013384:	8925      	ldrh	r5, [r4, #8]
90013386:	1aed      	subs	r5, r5, r3
90013388:	eba5 050a 	sub.w	r5, r5, sl
9001338c:	fa0f fb85 	sxth.w	fp, r5
90013390:	8965      	ldrh	r5, [r4, #10]
90013392:	eba5 0509 	sub.w	r5, r5, r9
90013396:	b22d      	sxth	r5, r5
90013398:	e72d      	b.n	900131f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001339a:	8965      	ldrh	r5, [r4, #10]
9001339c:	f04f 0b00 	mov.w	fp, #0
900133a0:	1aed      	subs	r5, r5, r3
900133a2:	4633      	mov	r3, r6
900133a4:	463e      	mov	r6, r7
900133a6:	eba5 050a 	sub.w	r5, r5, sl
900133aa:	461f      	mov	r7, r3
900133ac:	b22d      	sxth	r5, r5
900133ae:	e722      	b.n	900131f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900133b0:	2500      	movs	r5, #0
900133b2:	e720      	b.n	900131f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

900133b4 <_ZN8touchgfx8TextAreaD0Ev>:
900133b4:	b510      	push	{r4, lr}
900133b6:	4604      	mov	r4, r0
900133b8:	2148      	movs	r1, #72	@ 0x48
900133ba:	f015 fdcf 	bl	90028f5c <_ZdlPvj>
900133be:	4620      	mov	r0, r4
900133c0:	bd10      	pop	{r4, pc}
	...

900133c4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
900133c4:	b513      	push	{r0, r1, r4, lr}
900133c6:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
900133ca:	4604      	mov	r4, r0
900133cc:	b1fb      	cbz	r3, 9001340e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900133ce:	4b16      	ldr	r3, [pc, #88]	@ (90013428 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
900133d0:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900133d2:	881b      	ldrh	r3, [r3, #0]
900133d4:	428b      	cmp	r3, r1
900133d6:	d91a      	bls.n	9001340e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900133d8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900133dc:	2b00      	cmp	r3, #0
900133de:	dd16      	ble.n	9001340e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900133e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900133e4:	2b00      	cmp	r3, #0
900133e6:	dd12      	ble.n	9001340e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900133e8:	4b10      	ldr	r3, [pc, #64]	@ (9001342c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900133ea:	6818      	ldr	r0, [r3, #0]
900133ec:	f7f2 fb4c 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
900133f0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
900133f4:	6822      	ldr	r2, [r4, #0]
900133f6:	2b00      	cmp	r3, #0
900133f8:	db06      	blt.n	90013408 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900133fa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
900133fe:	2b00      	cmp	r3, #0
90013400:	db02      	blt.n	90013408 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013402:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013404:	4298      	cmp	r0, r3
90013406:	d004      	beq.n	90013412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013408:	6953      	ldr	r3, [r2, #20]
9001340a:	4620      	mov	r0, r4
9001340c:	4798      	blx	r3
9001340e:	b002      	add	sp, #8
90013410:	bd10      	pop	{r4, pc}
90013412:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
90013416:	466b      	mov	r3, sp
90013418:	6912      	ldr	r2, [r2, #16]
9001341a:	c903      	ldmia	r1, {r0, r1}
9001341c:	e883 0003 	stmia.w	r3, {r0, r1}
90013420:	4619      	mov	r1, r3
90013422:	4620      	mov	r0, r4
90013424:	4790      	blx	r2
90013426:	e7f2      	b.n	9001340e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013428:	240219e8 	.word	0x240219e8
9001342c:	240219f0 	.word	0x240219f0

90013430 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90013430:	4b45      	ldr	r3, [pc, #276]	@ (90013548 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90013432:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013436:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013438:	b08e      	sub	sp, #56	@ 0x38
9001343a:	881b      	ldrh	r3, [r3, #0]
9001343c:	4604      	mov	r4, r0
9001343e:	4293      	cmp	r3, r2
90013440:	d97e      	bls.n	90013540 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013442:	6808      	ldr	r0, [r1, #0]
90013444:	ab05      	add	r3, sp, #20
90013446:	6849      	ldr	r1, [r1, #4]
90013448:	4d40      	ldr	r5, [pc, #256]	@ (9001354c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
9001344a:	c303      	stmia	r3!, {r0, r1}
9001344c:	4611      	mov	r1, r2
9001344e:	6828      	ldr	r0, [r5, #0]
90013450:	f7f2 fb1a 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90013454:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90013458:	2b00      	cmp	r3, #0
9001345a:	db11      	blt.n	90013480 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001345c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90013460:	2b00      	cmp	r3, #0
90013462:	db0d      	blt.n	90013480 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013464:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013466:	4298      	cmp	r0, r3
90013468:	d10a      	bne.n	90013480 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001346a:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
9001346e:	ab09      	add	r3, sp, #36	@ 0x24
90013470:	e892 0003 	ldmia.w	r2, {r0, r1}
90013474:	e883 0003 	stmia.w	r3, {r0, r1}
90013478:	4619      	mov	r1, r3
9001347a:	a805      	add	r0, sp, #20
9001347c:	f7fc fefc 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90013480:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013484:	2b00      	cmp	r3, #0
90013486:	dd5b      	ble.n	90013540 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013488:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
9001348c:	2b00      	cmp	r3, #0
9001348e:	dd57      	ble.n	90013540 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013490:	4f2f      	ldr	r7, [pc, #188]	@ (90013550 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90013492:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013494:	683b      	ldr	r3, [r7, #0]
90013496:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001349a:	4b2e      	ldr	r3, [pc, #184]	@ (90013554 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
9001349c:	681b      	ldr	r3, [r3, #0]
9001349e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900134a2:	2e00      	cmp	r6, #0
900134a4:	d04c      	beq.n	90013540 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900134a6:	6823      	ldr	r3, [r4, #0]
900134a8:	4620      	mov	r0, r4
900134aa:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
900134ae:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900134b0:	4798      	blx	r3
900134b2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900134b4:	683b      	ldr	r3, [r7, #0]
900134b6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
900134ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900134be:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
900134c2:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
900134c6:	785b      	ldrb	r3, [r3, #1]
900134c8:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
900134cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
900134d0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900134d2:	9609      	str	r6, [sp, #36]	@ 0x24
900134d4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
900134d8:	4b1f      	ldr	r3, [pc, #124]	@ (90013558 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900134da:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
900134de:	681b      	ldr	r3, [r3, #0]
900134e0:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
900134e4:	910b      	str	r1, [sp, #44]	@ 0x2c
900134e6:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
900134ea:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
900134ee:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
900134f2:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
900134f6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900134fa:	b10a      	cbz	r2, 90013500 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900134fc:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
900134fe:	b906      	cbnz	r6, 90013502 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90013500:	689e      	ldr	r6, [r3, #8]
90013502:	af07      	add	r7, sp, #28
90013504:	4621      	mov	r1, r4
90013506:	4638      	mov	r0, r7
90013508:	f004 f956 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001350c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001350e:	6828      	ldr	r0, [r5, #0]
90013510:	f7f2 faba 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90013514:	6823      	ldr	r3, [r4, #0]
90013516:	4605      	mov	r5, r0
90013518:	4620      	mov	r0, r4
9001351a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001351c:	4798      	blx	r3
9001351e:	6823      	ldr	r3, [r4, #0]
90013520:	4680      	mov	r8, r0
90013522:	4620      	mov	r0, r4
90013524:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013528:	4798      	blx	r3
9001352a:	ab09      	add	r3, sp, #36	@ 0x24
9001352c:	9501      	str	r5, [sp, #4]
9001352e:	9300      	str	r3, [sp, #0]
90013530:	ab05      	add	r3, sp, #20
90013532:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013536:	4630      	mov	r0, r6
90013538:	e897 0006 	ldmia.w	r7, {r1, r2}
9001353c:	f7f2 fa54 	bl	900059e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013540:	b00e      	add	sp, #56	@ 0x38
90013542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013546:	bf00      	nop
90013548:	240219e8 	.word	0x240219e8
9001354c:	240219f0 	.word	0x240219f0
90013550:	240219e4 	.word	0x240219e4
90013554:	240219ec 	.word	0x240219ec
90013558:	2402198c 	.word	0x2402198c

9001355c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
9001355c:	b570      	push	{r4, r5, r6, lr}
9001355e:	6803      	ldr	r3, [r0, #0]
90013560:	4604      	mov	r4, r0
90013562:	4615      	mov	r5, r2
90013564:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013566:	4798      	blx	r3
90013568:	6823      	ldr	r3, [r4, #0]
9001356a:	4629      	mov	r1, r5
9001356c:	4620      	mov	r0, r4
9001356e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013570:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013574:	4718      	bx	r3
	...

90013578 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90013578:	b538      	push	{r3, r4, r5, lr}
9001357a:	4b0e      	ldr	r3, [pc, #56]	@ (900135b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9001357c:	4604      	mov	r4, r0
9001357e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013580:	881b      	ldrh	r3, [r3, #0]
90013582:	429a      	cmp	r2, r3
90013584:	d214      	bcs.n	900135b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90013586:	6803      	ldr	r3, [r0, #0]
90013588:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9001358a:	4798      	blx	r3
9001358c:	6823      	ldr	r3, [r4, #0]
9001358e:	4605      	mov	r5, r0
90013590:	4620      	mov	r0, r4
90013592:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90013594:	4798      	blx	r3
90013596:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001359a:	b22d      	sxth	r5, r5
9001359c:	4601      	mov	r1, r0
9001359e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900135a2:	bf06      	itte	eq
900135a4:	4602      	moveq	r2, r0
900135a6:	4629      	moveq	r1, r5
900135a8:	462a      	movne	r2, r5
900135aa:	4620      	mov	r0, r4
900135ac:	f7ff ffd6 	bl	9001355c <_ZN8touchgfx8Drawable14setWidthHeightEss>
900135b0:	bd38      	pop	{r3, r4, r5, pc}
900135b2:	bf00      	nop
900135b4:	240219e8 	.word	0x240219e8

900135b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900135b8:	b530      	push	{r4, r5, lr}
900135ba:	888b      	ldrh	r3, [r1, #4]
900135bc:	b085      	sub	sp, #20
900135be:	4604      	mov	r4, r0
900135c0:	8583      	strh	r3, [r0, #44]	@ 0x2c
900135c2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900135c6:	b923      	cbnz	r3, 900135d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900135c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900135cc:	b90b      	cbnz	r3, 900135d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900135ce:	f7ff ffd3 	bl	90013578 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900135d2:	6823      	ldr	r3, [r4, #0]
900135d4:	466d      	mov	r5, sp
900135d6:	4621      	mov	r1, r4
900135d8:	343c      	adds	r4, #60	@ 0x3c
900135da:	4628      	mov	r0, r5
900135dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900135e0:	4798      	blx	r3
900135e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900135e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900135ea:	b005      	add	sp, #20
900135ec:	bd30      	pop	{r4, r5, pc}

900135ee <_ZNK8touchgfx3Box12getSolidRectEv>:
900135ee:	2300      	movs	r3, #0
900135f0:	8083      	strh	r3, [r0, #4]
900135f2:	80c3      	strh	r3, [r0, #6]
900135f4:	8003      	strh	r3, [r0, #0]
900135f6:	8043      	strh	r3, [r0, #2]
900135f8:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900135fc:	2bff      	cmp	r3, #255	@ 0xff
900135fe:	bf01      	itttt	eq
90013600:	890b      	ldrheq	r3, [r1, #8]
90013602:	8083      	strheq	r3, [r0, #4]
90013604:	894b      	ldrheq	r3, [r1, #10]
90013606:	80c3      	strheq	r3, [r0, #6]
90013608:	4770      	bx	lr
	...

9001360c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9001360c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001360e:	4604      	mov	r4, r0
90013610:	466b      	mov	r3, sp
90013612:	6808      	ldr	r0, [r1, #0]
90013614:	6849      	ldr	r1, [r1, #4]
90013616:	c303      	stmia	r3!, {r0, r1}
90013618:	6823      	ldr	r3, [r4, #0]
9001361a:	4669      	mov	r1, sp
9001361c:	4620      	mov	r0, r4
9001361e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013620:	4798      	blx	r3
90013622:	4b08      	ldr	r3, [pc, #32]	@ (90013644 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013624:	681b      	ldr	r3, [r3, #0]
90013626:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001362a:	b10a      	cbz	r2, 90013630 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
9001362c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001362e:	b900      	cbnz	r0, 90013632 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90013630:	6898      	ldr	r0, [r3, #8]
90013632:	6803      	ldr	r3, [r0, #0]
90013634:	4669      	mov	r1, sp
90013636:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90013638:	6a1d      	ldr	r5, [r3, #32]
9001363a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001363e:	47a8      	blx	r5
90013640:	b003      	add	sp, #12
90013642:	bd30      	pop	{r4, r5, pc}
90013644:	2402198c 	.word	0x2402198c

90013648 <_ZN8touchgfx3BoxD1Ev>:
90013648:	4770      	bx	lr

9001364a <_ZN8touchgfx3BoxD0Ev>:
9001364a:	b510      	push	{r4, lr}
9001364c:	4604      	mov	r4, r0
9001364e:	212c      	movs	r1, #44	@ 0x2c
90013650:	f015 fc84 	bl	90028f5c <_ZdlPvj>
90013654:	4620      	mov	r0, r4
90013656:	bd10      	pop	{r4, pc}

90013658 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013658:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
9001365c:	b12a      	cbz	r2, 9001366a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001365e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90013662:	b112      	cbz	r2, 9001366a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90013664:	6803      	ldr	r3, [r0, #0]
90013666:	695b      	ldr	r3, [r3, #20]
90013668:	4718      	bx	r3
9001366a:	4770      	bx	lr

9001366c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
9001366c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90013670:	4770      	bx	lr

90013672 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90013672:	b570      	push	{r4, r5, r6, lr}
90013674:	880b      	ldrh	r3, [r1, #0]
90013676:	4605      	mov	r5, r0
90013678:	4604      	mov	r4, r0
9001367a:	85c3      	strh	r3, [r0, #46]	@ 0x2e
9001367c:	8813      	ldrh	r3, [r2, #0]
9001367e:	f825 3f30 	strh.w	r3, [r5, #48]!
90013682:	4628      	mov	r0, r5
90013684:	f006 fbbc 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013688:	4606      	mov	r6, r0
9001368a:	4628      	mov	r0, r5
9001368c:	f006 fbec 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013690:	6823      	ldr	r3, [r4, #0]
90013692:	4605      	mov	r5, r0
90013694:	4631      	mov	r1, r6
90013696:	4620      	mov	r0, r4
90013698:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001369a:	4798      	blx	r3
9001369c:	6823      	ldr	r3, [r4, #0]
9001369e:	4629      	mov	r1, r5
900136a0:	4620      	mov	r0, r4
900136a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900136a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900136a8:	4718      	bx	r3

900136aa <_ZN8touchgfx14AbstractButton13executeActionEv>:
900136aa:	b510      	push	{r4, lr}
900136ac:	4604      	mov	r4, r0
900136ae:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900136b0:	b150      	cbz	r0, 900136c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900136b2:	6803      	ldr	r3, [r0, #0]
900136b4:	68db      	ldr	r3, [r3, #12]
900136b6:	4798      	blx	r3
900136b8:	b130      	cbz	r0, 900136c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900136ba:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900136bc:	4621      	mov	r1, r4
900136be:	6803      	ldr	r3, [r0, #0]
900136c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900136c4:	689b      	ldr	r3, [r3, #8]
900136c6:	4718      	bx	r3
900136c8:	bd10      	pop	{r4, pc}

900136ca <_ZNK8touchgfx6Button12getSolidRectEv>:
900136ca:	b510      	push	{r4, lr}
900136cc:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
900136d0:	4604      	mov	r4, r0
900136d2:	2bff      	cmp	r3, #255	@ 0xff
900136d4:	d006      	beq.n	900136e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900136d6:	2300      	movs	r3, #0
900136d8:	8003      	strh	r3, [r0, #0]
900136da:	8043      	strh	r3, [r0, #2]
900136dc:	8083      	strh	r3, [r0, #4]
900136de:	80c3      	strh	r3, [r0, #6]
900136e0:	4620      	mov	r0, r4
900136e2:	bd10      	pop	{r4, pc}
900136e4:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
900136e8:	b11b      	cbz	r3, 900136f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900136ea:	3130      	adds	r1, #48	@ 0x30
900136ec:	f006 fbf0 	bl	90019ed0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900136f0:	e7f6      	b.n	900136e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900136f2:	312e      	adds	r1, #46	@ 0x2e
900136f4:	e7fa      	b.n	900136ec <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900136f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900136f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900136fc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90013700:	b08a      	sub	sp, #40	@ 0x28
90013702:	4604      	mov	r4, r0
90013704:	4688      	mov	r8, r1
90013706:	2b00      	cmp	r3, #0
90013708:	d066      	beq.n	900137d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001370a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9001370c:	a805      	add	r0, sp, #20
9001370e:	f8ad 3014 	strh.w	r3, [sp, #20]
90013712:	f006 fb75 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013716:	4607      	mov	r7, r0
90013718:	a805      	add	r0, sp, #20
9001371a:	f006 fba5 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001371e:	f9b8 6000 	ldrsh.w	r6, [r8]
90013722:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90013726:	2300      	movs	r3, #0
90013728:	4432      	add	r2, r6
9001372a:	9306      	str	r3, [sp, #24]
9001372c:	b292      	uxth	r2, r2
9001372e:	fa0f fc82 	sxth.w	ip, r2
90013732:	459c      	cmp	ip, r3
90013734:	dd52      	ble.n	900137dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013736:	42b7      	cmp	r7, r6
90013738:	dd50      	ble.n	900137dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001373a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9001373e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90013742:	442b      	add	r3, r5
90013744:	b29b      	uxth	r3, r3
90013746:	b219      	sxth	r1, r3
90013748:	2900      	cmp	r1, #0
9001374a:	dd47      	ble.n	900137dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001374c:	42a8      	cmp	r0, r5
9001374e:	dd45      	ble.n	900137dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013750:	4567      	cmp	r7, ip
90013752:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013756:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001375a:	bfb8      	it	lt
9001375c:	b2ba      	uxthlt	r2, r7
9001375e:	4288      	cmp	r0, r1
90013760:	f8ad 6018 	strh.w	r6, [sp, #24]
90013764:	bfb8      	it	lt
90013766:	b283      	uxthlt	r3, r0
90013768:	1b92      	subs	r2, r2, r6
9001376a:	f8ad 501a 	strh.w	r5, [sp, #26]
9001376e:	1b5b      	subs	r3, r3, r5
90013770:	f8ad 201c 	strh.w	r2, [sp, #28]
90013774:	f8ad 301e 	strh.w	r3, [sp, #30]
90013778:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001377c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90013780:	429a      	cmp	r2, r3
90013782:	d026      	beq.n	900137d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013784:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013788:	2b00      	cmp	r3, #0
9001378a:	dd22      	ble.n	900137d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001378c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013790:	2b00      	cmp	r3, #0
90013792:	dd1e      	ble.n	900137d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013794:	2300      	movs	r3, #0
90013796:	a908      	add	r1, sp, #32
90013798:	4620      	mov	r0, r4
9001379a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9001379e:	6823      	ldr	r3, [r4, #0]
900137a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900137a2:	4798      	blx	r3
900137a4:	4b0f      	ldr	r3, [pc, #60]	@ (900137e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900137a6:	681b      	ldr	r3, [r3, #0]
900137a8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900137ac:	b10a      	cbz	r2, 900137b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900137ae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900137b0:	b900      	cbnz	r0, 900137b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900137b2:	6898      	ldr	r0, [r3, #8]
900137b4:	2501      	movs	r5, #1
900137b6:	6801      	ldr	r1, [r0, #0]
900137b8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900137bc:	9502      	str	r5, [sp, #8]
900137be:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900137c2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900137c6:	9401      	str	r4, [sp, #4]
900137c8:	ac06      	add	r4, sp, #24
900137ca:	9400      	str	r4, [sp, #0]
900137cc:	688c      	ldr	r4, [r1, #8]
900137ce:	a905      	add	r1, sp, #20
900137d0:	47a0      	blx	r4
900137d2:	b00a      	add	sp, #40	@ 0x28
900137d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900137d8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
900137da:	e797      	b.n	9001370c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900137dc:	2300      	movs	r3, #0
900137de:	9307      	str	r3, [sp, #28]
900137e0:	e7ca      	b.n	90013778 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900137e2:	bf00      	nop
900137e4:	2402198c 	.word	0x2402198c

900137e8 <_ZNK8touchgfx6Button17invalidateContentEv>:
900137e8:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900137ec:	b12a      	cbz	r2, 900137fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900137ee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900137f2:	b112      	cbz	r2, 900137fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900137f4:	6803      	ldr	r3, [r0, #0]
900137f6:	695b      	ldr	r3, [r3, #20]
900137f8:	4718      	bx	r3
900137fa:	4770      	bx	lr

900137fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900137fc:	4b30      	ldr	r3, [pc, #192]	@ (900138c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900137fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013802:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013804:	b08d      	sub	sp, #52	@ 0x34
90013806:	881b      	ldrh	r3, [r3, #0]
90013808:	4604      	mov	r4, r0
9001380a:	460f      	mov	r7, r1
9001380c:	4293      	cmp	r3, r2
9001380e:	d954      	bls.n	900138ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013810:	4b2c      	ldr	r3, [pc, #176]	@ (900138c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90013812:	6819      	ldr	r1, [r3, #0]
90013814:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90013818:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001381c:	4a2a      	ldr	r2, [pc, #168]	@ (900138c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001381e:	6812      	ldr	r2, [r2, #0]
90013820:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90013824:	2900      	cmp	r1, #0
90013826:	d048      	beq.n	900138ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013828:	785a      	ldrb	r2, [r3, #1]
9001382a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9001382e:	f3c2 0801 	ubfx	r8, r2, #0, #2
90013832:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013836:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9001383a:	4b24      	ldr	r3, [pc, #144]	@ (900138cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9001383c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90013840:	681a      	ldr	r2, [r3, #0]
90013842:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90013846:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
9001384a:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
9001384e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90013850:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90013854:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90013858:	9107      	str	r1, [sp, #28]
9001385a:	f88d 8020 	strb.w	r8, [sp, #32]
9001385e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90013862:	9609      	str	r6, [sp, #36]	@ 0x24
90013864:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90013868:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
9001386c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90013870:	b10b      	cbz	r3, 90013876 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90013872:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90013874:	b905      	cbnz	r5, 90013878 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90013876:	6895      	ldr	r5, [r2, #8]
90013878:	ae05      	add	r6, sp, #20
9001387a:	4621      	mov	r1, r4
9001387c:	4630      	mov	r0, r6
9001387e:	f003 ff9b 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013882:	4b13      	ldr	r3, [pc, #76]	@ (900138d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90013884:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013886:	6818      	ldr	r0, [r3, #0]
90013888:	f7f2 f8fe 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
9001388c:	6823      	ldr	r3, [r4, #0]
9001388e:	4680      	mov	r8, r0
90013890:	4620      	mov	r0, r4
90013892:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013894:	4798      	blx	r3
90013896:	6823      	ldr	r3, [r4, #0]
90013898:	4681      	mov	r9, r0
9001389a:	4620      	mov	r0, r4
9001389c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900138a0:	4798      	blx	r3
900138a2:	ab07      	add	r3, sp, #28
900138a4:	f8cd 8004 	str.w	r8, [sp, #4]
900138a8:	9300      	str	r3, [sp, #0]
900138aa:	463b      	mov	r3, r7
900138ac:	e9cd 9002 	strd	r9, r0, [sp, #8]
900138b0:	4628      	mov	r0, r5
900138b2:	e896 0006 	ldmia.w	r6, {r1, r2}
900138b6:	f7f2 f897 	bl	900059e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900138ba:	b00d      	add	sp, #52	@ 0x34
900138bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900138c0:	240219e8 	.word	0x240219e8
900138c4:	240219e4 	.word	0x240219e4
900138c8:	240219ec 	.word	0x240219ec
900138cc:	2402198c 	.word	0x2402198c
900138d0:	240219f0 	.word	0x240219f0

900138d4 <_ZN8touchgfx5ImageD1Ev>:
900138d4:	4770      	bx	lr

900138d6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900138d6:	b570      	push	{r4, r5, r6, lr}
900138d8:	880b      	ldrh	r3, [r1, #0]
900138da:	460d      	mov	r5, r1
900138dc:	4604      	mov	r4, r0
900138de:	84c3      	strh	r3, [r0, #38]	@ 0x26
900138e0:	4608      	mov	r0, r1
900138e2:	f006 fa8d 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
900138e6:	4606      	mov	r6, r0
900138e8:	4628      	mov	r0, r5
900138ea:	f006 fabd 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
900138ee:	6823      	ldr	r3, [r4, #0]
900138f0:	4605      	mov	r5, r0
900138f2:	4631      	mov	r1, r6
900138f4:	4620      	mov	r0, r4
900138f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900138f8:	4798      	blx	r3
900138fa:	6823      	ldr	r3, [r4, #0]
900138fc:	4629      	mov	r1, r5
900138fe:	4620      	mov	r0, r4
90013900:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013906:	4718      	bx	r3

90013908 <_ZN8touchgfx5ImageD0Ev>:
90013908:	b510      	push	{r4, lr}
9001390a:	4604      	mov	r4, r0
9001390c:	212c      	movs	r1, #44	@ 0x2c
9001390e:	f015 fb25 	bl	90028f5c <_ZdlPvj>
90013912:	4620      	mov	r0, r4
90013914:	bd10      	pop	{r4, pc}

90013916 <_ZNK8touchgfx5Image12getSolidRectEv>:
90013916:	b510      	push	{r4, lr}
90013918:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
9001391c:	4604      	mov	r4, r0
9001391e:	2bff      	cmp	r3, #255	@ 0xff
90013920:	d006      	beq.n	90013930 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90013922:	2300      	movs	r3, #0
90013924:	8003      	strh	r3, [r0, #0]
90013926:	8043      	strh	r3, [r0, #2]
90013928:	8083      	strh	r3, [r0, #4]
9001392a:	80c3      	strh	r3, [r0, #6]
9001392c:	4620      	mov	r0, r4
9001392e:	bd10      	pop	{r4, pc}
90013930:	3126      	adds	r1, #38	@ 0x26
90013932:	f006 facd 	bl	90019ed0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013936:	e7f9      	b.n	9001392c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90013938 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90013938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001393c:	4604      	mov	r4, r0
9001393e:	b088      	sub	sp, #32
90013940:	2500      	movs	r5, #0
90013942:	460f      	mov	r7, r1
90013944:	f854 3b26 	ldr.w	r3, [r4], #38
90013948:	a904      	add	r1, sp, #16
9001394a:	4606      	mov	r6, r0
9001394c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001394e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90013952:	4798      	blx	r3
90013954:	4620      	mov	r0, r4
90013956:	f006 fa53 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001395a:	4680      	mov	r8, r0
9001395c:	4620      	mov	r0, r4
9001395e:	f006 fa83 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013962:	9506      	str	r5, [sp, #24]
90013964:	ad06      	add	r5, sp, #24
90013966:	f8ad 001e 	strh.w	r0, [sp, #30]
9001396a:	4639      	mov	r1, r7
9001396c:	f8ad 801c 	strh.w	r8, [sp, #28]
90013970:	4628      	mov	r0, r5
90013972:	f7fc fc81 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90013976:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001397a:	2b00      	cmp	r3, #0
9001397c:	dd19      	ble.n	900139b2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001397e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013982:	2b00      	cmp	r3, #0
90013984:	dd15      	ble.n	900139b2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013986:	4b0c      	ldr	r3, [pc, #48]	@ (900139b8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90013988:	681b      	ldr	r3, [r3, #0]
9001398a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001398e:	b10a      	cbz	r2, 90013994 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90013990:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90013992:	b900      	cbnz	r0, 90013996 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90013994:	6898      	ldr	r0, [r3, #8]
90013996:	2701      	movs	r7, #1
90013998:	6801      	ldr	r1, [r0, #0]
9001399a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001399e:	9702      	str	r7, [sp, #8]
900139a0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
900139a4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900139a8:	e9cd 5600 	strd	r5, r6, [sp]
900139ac:	688d      	ldr	r5, [r1, #8]
900139ae:	4621      	mov	r1, r4
900139b0:	47a8      	blx	r5
900139b2:	b008      	add	sp, #32
900139b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900139b8:	2402198c 	.word	0x2402198c

900139bc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900139bc:	4770      	bx	lr

900139be <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900139be:	b510      	push	{r4, lr}
900139c0:	4604      	mov	r4, r0
900139c2:	2148      	movs	r1, #72	@ 0x48
900139c4:	f015 faca 	bl	90028f5c <_ZdlPvj>
900139c8:	4620      	mov	r0, r4
900139ca:	bd10      	pop	{r4, pc}

900139cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900139cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900139d0:	b08d      	sub	sp, #52	@ 0x34
900139d2:	4604      	mov	r4, r0
900139d4:	460f      	mov	r7, r1
900139d6:	f7ff fe8f 	bl	900136f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900139da:	4a55      	ldr	r2, [pc, #340]	@ (90013b30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900139dc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900139de:	8812      	ldrh	r2, [r2, #0]
900139e0:	429a      	cmp	r2, r3
900139e2:	f240 8082 	bls.w	90013aea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900139e6:	4d53      	ldr	r5, [pc, #332]	@ (90013b34 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
900139e8:	682a      	ldr	r2, [r5, #0]
900139ea:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900139ee:	4b52      	ldr	r3, [pc, #328]	@ (90013b38 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900139f0:	681b      	ldr	r3, [r3, #0]
900139f2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900139f6:	2200      	movs	r2, #0
900139f8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
900139fc:	e9cd 2203 	strd	r2, r2, [sp, #12]
90013a00:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90013a04:	2a03      	cmp	r2, #3
90013a06:	d811      	bhi.n	90013a2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013a08:	e8df f002 	tbb	[pc, r2]
90013a0c:	89727902 	.word	0x89727902
90013a10:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013a14:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013a18:	1ad2      	subs	r2, r2, r3
90013a1a:	2002      	movs	r0, #2
90013a1c:	f8ad 1010 	strh.w	r1, [sp, #16]
90013a20:	f8ad 3012 	strh.w	r3, [sp, #18]
90013a24:	fb92 f2f0 	sdiv	r2, r2, r0
90013a28:	f8ad 200e 	strh.w	r2, [sp, #14]
90013a2c:	f10d 080c 	add.w	r8, sp, #12
90013a30:	f10d 0914 	add.w	r9, sp, #20
90013a34:	e898 0003 	ldmia.w	r8, {r0, r1}
90013a38:	e889 0003 	stmia.w	r9, {r0, r1}
90013a3c:	4639      	mov	r1, r7
90013a3e:	4648      	mov	r0, r9
90013a40:	f7fc fc1a 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90013a44:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013a48:	2b00      	cmp	r3, #0
90013a4a:	dd4e      	ble.n	90013aea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013a4c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013a50:	2b00      	cmp	r3, #0
90013a52:	dd4a      	ble.n	90013aea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013a54:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90013a58:	4641      	mov	r1, r8
90013a5a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013a5e:	4620      	mov	r0, r4
90013a60:	1a9b      	subs	r3, r3, r2
90013a62:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013a66:	f8ad 3014 	strh.w	r3, [sp, #20]
90013a6a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90013a6e:	1a9b      	subs	r3, r3, r2
90013a70:	f8ad 3016 	strh.w	r3, [sp, #22]
90013a74:	6823      	ldr	r3, [r4, #0]
90013a76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013a78:	4798      	blx	r3
90013a7a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90013a7e:	2b00      	cmp	r3, #0
90013a80:	d053      	beq.n	90013b2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90013a82:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90013a84:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90013a86:	682b      	ldr	r3, [r5, #0]
90013a88:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90013a8c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013a90:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90013a94:	785b      	ldrb	r3, [r3, #1]
90013a96:	9209      	str	r2, [sp, #36]	@ 0x24
90013a98:	f3c3 0501 	ubfx	r5, r3, #0, #2
90013a9c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013aa0:	9607      	str	r6, [sp, #28]
90013aa2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
90013aa6:	2300      	movs	r3, #0
90013aa8:	f88d 5020 	strb.w	r5, [sp, #32]
90013aac:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90013ab0:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90013ab4:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90013ab8:	4b20      	ldr	r3, [pc, #128]	@ (90013b3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90013aba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013abe:	681b      	ldr	r3, [r3, #0]
90013ac0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90013ac4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013ac8:	b10a      	cbz	r2, 90013ace <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90013aca:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90013acc:	b904      	cbnz	r4, 90013ad0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90013ace:	689c      	ldr	r4, [r3, #8]
90013ad0:	4b1b      	ldr	r3, [pc, #108]	@ (90013b40 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90013ad2:	6818      	ldr	r0, [r3, #0]
90013ad4:	f7f1 ffd8 	bl	90005a88 <_ZNK8touchgfx5Texts7getTextEt>
90013ad8:	ab07      	add	r3, sp, #28
90013ada:	9001      	str	r0, [sp, #4]
90013adc:	4620      	mov	r0, r4
90013ade:	9300      	str	r3, [sp, #0]
90013ae0:	464b      	mov	r3, r9
90013ae2:	e898 0006 	ldmia.w	r8, {r1, r2}
90013ae6:	f7f1 ff7f 	bl	900059e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013aea:	b00d      	add	sp, #52	@ 0x34
90013aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013af0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013af4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013af8:	1ad2      	subs	r2, r2, r3
90013afa:	3201      	adds	r2, #1
90013afc:	e78d      	b.n	90013a1a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90013afe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013b02:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013b06:	1ad2      	subs	r2, r2, r3
90013b08:	3201      	adds	r2, #1
90013b0a:	2002      	movs	r0, #2
90013b0c:	f8ad 3010 	strh.w	r3, [sp, #16]
90013b10:	f8ad 1012 	strh.w	r1, [sp, #18]
90013b14:	fb92 f2f0 	sdiv	r2, r2, r0
90013b18:	f8ad 200c 	strh.w	r2, [sp, #12]
90013b1c:	e786      	b.n	90013a2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013b1e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013b22:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013b26:	1ad2      	subs	r2, r2, r3
90013b28:	e7ef      	b.n	90013b0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90013b2a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90013b2c:	e7aa      	b.n	90013a84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90013b2e:	bf00      	nop
90013b30:	240219e8 	.word	0x240219e8
90013b34:	240219e4 	.word	0x240219e4
90013b38:	240219ec 	.word	0x240219ec
90013b3c:	2402198c 	.word	0x2402198c
90013b40:	240219f0 	.word	0x240219f0

90013b44 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90013b44:	2101      	movs	r1, #1
90013b46:	2200      	movs	r2, #0
90013b48:	b510      	push	{r4, lr}
90013b4a:	4c13      	ldr	r4, [pc, #76]	@ (90013b98 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90013b4c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013b50:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90013b54:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90013b58:	6004      	str	r4, [r0, #0]
90013b5a:	4c10      	ldr	r4, [pc, #64]	@ (90013b9c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90013b5c:	8082      	strh	r2, [r0, #4]
90013b5e:	80c2      	strh	r2, [r0, #6]
90013b60:	8102      	strh	r2, [r0, #8]
90013b62:	8142      	strh	r2, [r0, #10]
90013b64:	8182      	strh	r2, [r0, #12]
90013b66:	81c2      	strh	r2, [r0, #14]
90013b68:	8202      	strh	r2, [r0, #16]
90013b6a:	8242      	strh	r2, [r0, #18]
90013b6c:	61c2      	str	r2, [r0, #28]
90013b6e:	8402      	strh	r2, [r0, #32]
90013b70:	8442      	strh	r2, [r0, #34]	@ 0x22
90013b72:	6282      	str	r2, [r0, #40]	@ 0x28
90013b74:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90013b78:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90013b7a:	8601      	strh	r1, [r0, #48]	@ 0x30
90013b7c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90013b80:	6344      	str	r4, [r0, #52]	@ 0x34
90013b82:	8701      	strh	r1, [r0, #56]	@ 0x38
90013b84:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90013b88:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90013b8c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013b90:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90013b94:	bd10      	pop	{r4, pc}
90013b96:	bf00      	nop
90013b98:	9002d5ec 	.word	0x9002d5ec
90013b9c:	9002c7e8 	.word	0x9002c7e8

90013ba0 <_ZN8touchgfx7OutlineD1Ev>:
90013ba0:	4770      	bx	lr

90013ba2 <_ZN8touchgfx7OutlineD0Ev>:
90013ba2:	b510      	push	{r4, lr}
90013ba4:	4604      	mov	r4, r0
90013ba6:	2130      	movs	r1, #48	@ 0x30
90013ba8:	f015 f9d8 	bl	90028f5c <_ZdlPvj>
90013bac:	4620      	mov	r0, r4
90013bae:	bd10      	pop	{r4, pc}

90013bb0 <_ZN8touchgfx7Outline5resetEv>:
90013bb0:	b510      	push	{r4, lr}
90013bb2:	4604      	mov	r4, r0
90013bb4:	f000 fe72 	bl	9001489c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90013bb8:	60e0      	str	r0, [r4, #12]
90013bba:	f000 fe75 	bl	900148a8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90013bbe:	68e3      	ldr	r3, [r4, #12]
90013bc0:	08c0      	lsrs	r0, r0, #3
90013bc2:	2200      	movs	r2, #0
90013bc4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90013bc8:	6123      	str	r3, [r4, #16]
90013bca:	3801      	subs	r0, #1
90013bcc:	60a2      	str	r2, [r4, #8]
90013bce:	6060      	str	r0, [r4, #4]
90013bd0:	8019      	strh	r1, [r3, #0]
90013bd2:	8059      	strh	r1, [r3, #2]
90013bd4:	809a      	strh	r2, [r3, #4]
90013bd6:	80da      	strh	r2, [r3, #6]
90013bd8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013bda:	f023 0301 	bic.w	r3, r3, #1
90013bde:	f043 0302 	orr.w	r3, r3, #2
90013be2:	6263      	str	r3, [r4, #36]	@ 0x24
90013be4:	bd10      	pop	{r4, pc}
	...

90013be8 <_ZN8touchgfx7OutlineC1Ev>:
90013be8:	4b0a      	ldr	r3, [pc, #40]	@ (90013c14 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90013bea:	b510      	push	{r4, lr}
90013bec:	6003      	str	r3, [r0, #0]
90013bee:	2300      	movs	r3, #0
90013bf0:	4604      	mov	r4, r0
90013bf2:	6243      	str	r3, [r0, #36]	@ 0x24
90013bf4:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013bf8:	e9c0 3303 	strd	r3, r3, [r0, #12]
90013bfc:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013c00:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013c04:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90013c08:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90013c0c:	f7ff ffd0 	bl	90013bb0 <_ZN8touchgfx7Outline5resetEv>
90013c10:	4620      	mov	r0, r4
90013c12:	bd10      	pop	{r4, pc}
90013c14:	9002d660 	.word	0x9002d660

90013c18 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013c1c:	b093      	sub	sp, #76	@ 0x4c
90013c1e:	1156      	asrs	r6, r2, #5
90013c20:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90013c22:	9305      	str	r3, [sp, #20]
90013c24:	1153      	asrs	r3, r2, #5
90013c26:	f004 051f 	and.w	r5, r4, #31
90013c2a:	9303      	str	r3, [sp, #12]
90013c2c:	1163      	asrs	r3, r4, #5
90013c2e:	9504      	str	r5, [sp, #16]
90013c30:	1165      	asrs	r5, r4, #5
90013c32:	9306      	str	r3, [sp, #24]
90013c34:	f002 031f 	and.w	r3, r2, #31
90013c38:	42ae      	cmp	r6, r5
90013c3a:	f040 80f4 	bne.w	90013e26 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90013c3e:	9c04      	ldr	r4, [sp, #16]
90013c40:	9a05      	ldr	r2, [sp, #20]
90013c42:	42a3      	cmp	r3, r4
90013c44:	ea4f 1e62 	mov.w	lr, r2, asr #5
90013c48:	6902      	ldr	r2, [r0, #16]
90013c4a:	d125      	bne.n	90013c98 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90013c4c:	f9b2 3000 	ldrsh.w	r3, [r2]
90013c50:	459e      	cmp	lr, r3
90013c52:	d103      	bne.n	90013c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90013c54:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013c58:	429e      	cmp	r6, r3
90013c5a:	d035      	beq.n	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013c5c:	88d1      	ldrh	r1, [r2, #6]
90013c5e:	8893      	ldrh	r3, [r2, #4]
90013c60:	430b      	orrs	r3, r1
90013c62:	d010      	beq.n	90013c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c64:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013c68:	2b00      	cmp	r3, #0
90013c6a:	db0c      	blt.n	90013c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c6c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90013c6e:	428b      	cmp	r3, r1
90013c70:	da09      	bge.n	90013c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c72:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90013c76:	428b      	cmp	r3, r1
90013c78:	f103 0301 	add.w	r3, r3, #1
90013c7c:	bf38      	it	cc
90013c7e:	3208      	addcc	r2, #8
90013c80:	6083      	str	r3, [r0, #8]
90013c82:	bf38      	it	cc
90013c84:	6102      	strcc	r2, [r0, #16]
90013c86:	6903      	ldr	r3, [r0, #16]
90013c88:	9a03      	ldr	r2, [sp, #12]
90013c8a:	f8a3 e000 	strh.w	lr, [r3]
90013c8e:	805a      	strh	r2, [r3, #2]
90013c90:	2200      	movs	r2, #0
90013c92:	809a      	strh	r2, [r3, #4]
90013c94:	80da      	strh	r2, [r3, #6]
90013c96:	e017      	b.n	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013c98:	9c05      	ldr	r4, [sp, #20]
90013c9a:	114e      	asrs	r6, r1, #5
90013c9c:	f001 0c1f 	and.w	ip, r1, #31
90013ca0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90013ca4:	f004 041f 	and.w	r4, r4, #31
90013ca8:	4576      	cmp	r6, lr
90013caa:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90013cae:	9402      	str	r4, [sp, #8]
90013cb0:	9c04      	ldr	r4, [sp, #16]
90013cb2:	eba4 0403 	sub.w	r4, r4, r3
90013cb6:	d10a      	bne.n	90013cce <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90013cb8:	9b02      	ldr	r3, [sp, #8]
90013cba:	44a0      	add	r8, r4
90013cbc:	449c      	add	ip, r3
90013cbe:	f8a2 8004 	strh.w	r8, [r2, #4]
90013cc2:	fb04 a40c 	mla	r4, r4, ip, sl
90013cc6:	80d4      	strh	r4, [r2, #6]
90013cc8:	b013      	add	sp, #76	@ 0x4c
90013cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013cce:	9d05      	ldr	r5, [sp, #20]
90013cd0:	1a69      	subs	r1, r5, r1
90013cd2:	bf51      	iteee	pl
90013cd4:	f1cc 0520 	rsbpl	r5, ip, #32
90013cd8:	fb04 f40c 	mulmi.w	r4, r4, ip
90013cdc:	4249      	negmi	r1, r1
90013cde:	2500      	movmi	r5, #0
90013ce0:	bf5d      	ittte	pl
90013ce2:	436c      	mulpl	r4, r5
90013ce4:	2520      	movpl	r5, #32
90013ce6:	f04f 0901 	movpl.w	r9, #1
90013cea:	f04f 39ff 	movmi.w	r9, #4294967295
90013cee:	9501      	str	r5, [sp, #4]
90013cf0:	9f01      	ldr	r7, [sp, #4]
90013cf2:	444e      	add	r6, r9
90013cf4:	fb94 f5f1 	sdiv	r5, r4, r1
90013cf8:	fb01 4415 	mls	r4, r1, r5, r4
90013cfc:	44bc      	add	ip, r7
90013cfe:	2c00      	cmp	r4, #0
90013d00:	bfbc      	itt	lt
90013d02:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013d06:	1864      	addlt	r4, r4, r1
90013d08:	44a8      	add	r8, r5
90013d0a:	fb05 ac0c 	mla	ip, r5, ip, sl
90013d0e:	f8a2 8004 	strh.w	r8, [r2, #4]
90013d12:	f8a2 c006 	strh.w	ip, [r2, #6]
90013d16:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d1a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013d1e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90013d22:	ea58 0202 	orrs.w	r2, r8, r2
90013d26:	d011      	beq.n	90013d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d28:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013d2c:	f1b8 0f00 	cmp.w	r8, #0
90013d30:	db0c      	blt.n	90013d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d32:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013d34:	4590      	cmp	r8, r2
90013d36:	da09      	bge.n	90013d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d38:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90013d3c:	4590      	cmp	r8, r2
90013d3e:	bf3c      	itt	cc
90013d40:	f10c 0208 	addcc.w	r2, ip, #8
90013d44:	6102      	strcc	r2, [r0, #16]
90013d46:	f108 0201 	add.w	r2, r8, #1
90013d4a:	6082      	str	r2, [r0, #8]
90013d4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d50:	2700      	movs	r7, #0
90013d52:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90013d56:	45b6      	cmp	lr, r6
90013d58:	f8ac 6000 	strh.w	r6, [ip]
90013d5c:	442b      	add	r3, r5
90013d5e:	f8ac 2002 	strh.w	r2, [ip, #2]
90013d62:	f8ac 7004 	strh.w	r7, [ip, #4]
90013d66:	f8ac 7006 	strh.w	r7, [ip, #6]
90013d6a:	d04b      	beq.n	90013e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90013d6c:	9f04      	ldr	r7, [sp, #16]
90013d6e:	1a64      	subs	r4, r4, r1
90013d70:	f04f 0a00 	mov.w	sl, #0
90013d74:	1aff      	subs	r7, r7, r3
90013d76:	443d      	add	r5, r7
90013d78:	016d      	lsls	r5, r5, #5
90013d7a:	fb95 f8f1 	sdiv	r8, r5, r1
90013d7e:	fb01 5518 	mls	r5, r1, r8, r5
90013d82:	2d00      	cmp	r5, #0
90013d84:	bfbc      	itt	lt
90013d86:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013d8a:	186d      	addlt	r5, r5, r1
90013d8c:	f108 0701 	add.w	r7, r8, #1
90013d90:	9703      	str	r7, [sp, #12]
90013d92:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d96:	1964      	adds	r4, r4, r5
90013d98:	444e      	add	r6, r9
90013d9a:	bf54      	ite	pl
90013d9c:	9f03      	ldrpl	r7, [sp, #12]
90013d9e:	4647      	movmi	r7, r8
90013da0:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013da4:	bf58      	it	pl
90013da6:	1a64      	subpl	r4, r4, r1
90013da8:	443b      	add	r3, r7
90013daa:	44bb      	add	fp, r7
90013dac:	f8ac b004 	strh.w	fp, [ip, #4]
90013db0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013db4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013db8:	f8ac b006 	strh.w	fp, [ip, #6]
90013dbc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013dc0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013dc4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013dc8:	ea5b 0707 	orrs.w	r7, fp, r7
90013dcc:	d011      	beq.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dce:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013dd2:	f1bb 0f00 	cmp.w	fp, #0
90013dd6:	db0c      	blt.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dd8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013dda:	45bb      	cmp	fp, r7
90013ddc:	da09      	bge.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dde:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013de2:	45bb      	cmp	fp, r7
90013de4:	bf3c      	itt	cc
90013de6:	f10c 0708 	addcc.w	r7, ip, #8
90013dea:	6107      	strcc	r7, [r0, #16]
90013dec:	f10b 0701 	add.w	r7, fp, #1
90013df0:	6087      	str	r7, [r0, #8]
90013df2:	6907      	ldr	r7, [r0, #16]
90013df4:	45b6      	cmp	lr, r6
90013df6:	803e      	strh	r6, [r7, #0]
90013df8:	807a      	strh	r2, [r7, #2]
90013dfa:	f8a7 a004 	strh.w	sl, [r7, #4]
90013dfe:	f8a7 a006 	strh.w	sl, [r7, #6]
90013e02:	d1c6      	bne.n	90013d92 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013e04:	9a04      	ldr	r2, [sp, #16]
90013e06:	1ad3      	subs	r3, r2, r3
90013e08:	6902      	ldr	r2, [r0, #16]
90013e0a:	8891      	ldrh	r1, [r2, #4]
90013e0c:	88d6      	ldrh	r6, [r2, #6]
90013e0e:	4419      	add	r1, r3
90013e10:	8091      	strh	r1, [r2, #4]
90013e12:	9902      	ldr	r1, [sp, #8]
90013e14:	f101 0c20 	add.w	ip, r1, #32
90013e18:	9901      	ldr	r1, [sp, #4]
90013e1a:	ebac 0c01 	sub.w	ip, ip, r1
90013e1e:	fb03 630c 	mla	r3, r3, ip, r6
90013e22:	80d3      	strh	r3, [r2, #6]
90013e24:	e750      	b.n	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013e26:	9d05      	ldr	r5, [sp, #20]
90013e28:	1aa2      	subs	r2, r4, r2
90013e2a:	eba5 0501 	sub.w	r5, r5, r1
90013e2e:	9202      	str	r2, [sp, #8]
90013e30:	9508      	str	r5, [sp, #32]
90013e32:	f140 8128 	bpl.w	90014086 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90013e36:	9a03      	ldr	r2, [sp, #12]
90013e38:	2a00      	cmp	r2, #0
90013e3a:	f6ff af45 	blt.w	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013e3e:	9a02      	ldr	r2, [sp, #8]
90013e40:	f04f 34ff 	mov.w	r4, #4294967295
90013e44:	4252      	negs	r2, r2
90013e46:	940b      	str	r4, [sp, #44]	@ 0x2c
90013e48:	2400      	movs	r4, #0
90013e4a:	9202      	str	r2, [sp, #8]
90013e4c:	9a06      	ldr	r2, [sp, #24]
90013e4e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90013e52:	9206      	str	r2, [sp, #24]
90013e54:	462a      	mov	r2, r5
90013e56:	435a      	muls	r2, r3
90013e58:	9401      	str	r4, [sp, #4]
90013e5a:	9c02      	ldr	r4, [sp, #8]
90013e5c:	9d02      	ldr	r5, [sp, #8]
90013e5e:	fb92 f4f4 	sdiv	r4, r2, r4
90013e62:	fb05 2214 	mls	r2, r5, r4, r2
90013e66:	2a00      	cmp	r2, #0
90013e68:	9207      	str	r2, [sp, #28]
90013e6a:	bfbc      	itt	lt
90013e6c:	1952      	addlt	r2, r2, r5
90013e6e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013e72:	6905      	ldr	r5, [r0, #16]
90013e74:	bfb8      	it	lt
90013e76:	9207      	strlt	r2, [sp, #28]
90013e78:	eb04 0901 	add.w	r9, r4, r1
90013e7c:	9a01      	ldr	r2, [sp, #4]
90013e7e:	ea4f 1669 	mov.w	r6, r9, asr #5
90013e82:	429a      	cmp	r2, r3
90013e84:	f040 8111 	bne.w	900140aa <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90013e88:	f9b5 3000 	ldrsh.w	r3, [r5]
90013e8c:	429e      	cmp	r6, r3
90013e8e:	d104      	bne.n	90013e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90013e90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90013e94:	9a03      	ldr	r2, [sp, #12]
90013e96:	429a      	cmp	r2, r3
90013e98:	d01b      	beq.n	90013ed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013e9a:	88ea      	ldrh	r2, [r5, #6]
90013e9c:	88ab      	ldrh	r3, [r5, #4]
90013e9e:	4313      	orrs	r3, r2
90013ea0:	d010      	beq.n	90013ec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013ea2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90013ea6:	2a00      	cmp	r2, #0
90013ea8:	db0c      	blt.n	90013ec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013eaa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013eac:	429a      	cmp	r2, r3
90013eae:	da09      	bge.n	90013ec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013eb0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90013eb4:	429a      	cmp	r2, r3
90013eb6:	f102 0201 	add.w	r2, r2, #1
90013eba:	bf38      	it	cc
90013ebc:	3508      	addcc	r5, #8
90013ebe:	6082      	str	r2, [r0, #8]
90013ec0:	bf38      	it	cc
90013ec2:	6105      	strcc	r5, [r0, #16]
90013ec4:	6903      	ldr	r3, [r0, #16]
90013ec6:	9a03      	ldr	r2, [sp, #12]
90013ec8:	801e      	strh	r6, [r3, #0]
90013eca:	805a      	strh	r2, [r3, #2]
90013ecc:	2200      	movs	r2, #0
90013ece:	809a      	strh	r2, [r3, #4]
90013ed0:	80da      	strh	r2, [r3, #6]
90013ed2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013ed4:	9a03      	ldr	r2, [sp, #12]
90013ed6:	6901      	ldr	r1, [r0, #16]
90013ed8:	441a      	add	r2, r3
90013eda:	f9b1 3000 	ldrsh.w	r3, [r1]
90013ede:	42b3      	cmp	r3, r6
90013ee0:	d103      	bne.n	90013eea <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90013ee2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013ee6:	429a      	cmp	r2, r3
90013ee8:	d01a      	beq.n	90013f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90013eea:	88cc      	ldrh	r4, [r1, #6]
90013eec:	888b      	ldrh	r3, [r1, #4]
90013eee:	4323      	orrs	r3, r4
90013ef0:	d010      	beq.n	90013f14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013ef2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013ef6:	2c00      	cmp	r4, #0
90013ef8:	db0c      	blt.n	90013f14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013efa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013efc:	429c      	cmp	r4, r3
90013efe:	da09      	bge.n	90013f14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013f00:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013f04:	429c      	cmp	r4, r3
90013f06:	f104 0401 	add.w	r4, r4, #1
90013f0a:	bf38      	it	cc
90013f0c:	3108      	addcc	r1, #8
90013f0e:	6084      	str	r4, [r0, #8]
90013f10:	bf38      	it	cc
90013f12:	6101      	strcc	r1, [r0, #16]
90013f14:	6903      	ldr	r3, [r0, #16]
90013f16:	2100      	movs	r1, #0
90013f18:	801e      	strh	r6, [r3, #0]
90013f1a:	805a      	strh	r2, [r3, #2]
90013f1c:	8099      	strh	r1, [r3, #4]
90013f1e:	80d9      	strh	r1, [r3, #6]
90013f20:	9b06      	ldr	r3, [sp, #24]
90013f22:	4293      	cmp	r3, r2
90013f24:	f000 8082 	beq.w	9001402c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90013f28:	9b08      	ldr	r3, [sp, #32]
90013f2a:	9902      	ldr	r1, [sp, #8]
90013f2c:	015b      	lsls	r3, r3, #5
90013f2e:	9c02      	ldr	r4, [sp, #8]
90013f30:	fb93 f1f1 	sdiv	r1, r3, r1
90013f34:	fb04 3311 	mls	r3, r4, r1, r3
90013f38:	9103      	str	r1, [sp, #12]
90013f3a:	2b00      	cmp	r3, #0
90013f3c:	9308      	str	r3, [sp, #32]
90013f3e:	da04      	bge.n	90013f4a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90013f40:	1e4b      	subs	r3, r1, #1
90013f42:	9303      	str	r3, [sp, #12]
90013f44:	9b08      	ldr	r3, [sp, #32]
90013f46:	4423      	add	r3, r4
90013f48:	9308      	str	r3, [sp, #32]
90013f4a:	9b07      	ldr	r3, [sp, #28]
90013f4c:	464f      	mov	r7, r9
90013f4e:	9902      	ldr	r1, [sp, #8]
90013f50:	2600      	movs	r6, #0
90013f52:	1a5b      	subs	r3, r3, r1
90013f54:	9307      	str	r3, [sp, #28]
90013f56:	9b01      	ldr	r3, [sp, #4]
90013f58:	f1c3 0320 	rsb	r3, r3, #32
90013f5c:	930e      	str	r3, [sp, #56]	@ 0x38
90013f5e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90013f60:	9b01      	ldr	r3, [sp, #4]
90013f62:	1a5b      	subs	r3, r3, r1
90013f64:	930a      	str	r3, [sp, #40]	@ 0x28
90013f66:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90013f6a:	185b      	adds	r3, r3, r1
90013f6c:	bf58      	it	pl
90013f6e:	9902      	ldrpl	r1, [sp, #8]
90013f70:	9307      	str	r3, [sp, #28]
90013f72:	bf57      	itett	pl
90013f74:	1a5b      	subpl	r3, r3, r1
90013f76:	9903      	ldrmi	r1, [sp, #12]
90013f78:	9307      	strpl	r3, [sp, #28]
90013f7a:	9b03      	ldrpl	r3, [sp, #12]
90013f7c:	bf58      	it	pl
90013f7e:	1c59      	addpl	r1, r3, #1
90013f80:	2a00      	cmp	r2, #0
90013f82:	4489      	add	r9, r1
90013f84:	ea4f 1a69 	mov.w	sl, r9, asr #5
90013f88:	db2e      	blt.n	90013fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013f8a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013f8c:	4293      	cmp	r3, r2
90013f8e:	dd2b      	ble.n	90013fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013f90:	9c01      	ldr	r4, [sp, #4]
90013f92:	6905      	ldr	r5, [r0, #16]
90013f94:	46a0      	mov	r8, r4
90013f96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90013f98:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013f9c:	45a0      	cmp	r8, r4
90013f9e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90013fa2:	f040 814c 	bne.w	9001423e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013fa6:	f9b5 1000 	ldrsh.w	r1, [r5]
90013faa:	4551      	cmp	r1, sl
90013fac:	d103      	bne.n	90013fb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90013fae:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013fb2:	4291      	cmp	r1, r2
90013fb4:	d018      	beq.n	90013fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013fb6:	ea5c 010e 	orrs.w	r1, ip, lr
90013fba:	d00f      	beq.n	90013fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fbc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013fc0:	2900      	cmp	r1, #0
90013fc2:	db0b      	blt.n	90013fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fc4:	428b      	cmp	r3, r1
90013fc6:	dd09      	ble.n	90013fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fc8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013fcc:	4299      	cmp	r1, r3
90013fce:	f101 0101 	add.w	r1, r1, #1
90013fd2:	bf38      	it	cc
90013fd4:	3508      	addcc	r5, #8
90013fd6:	6081      	str	r1, [r0, #8]
90013fd8:	bf38      	it	cc
90013fda:	6105      	strcc	r5, [r0, #16]
90013fdc:	6903      	ldr	r3, [r0, #16]
90013fde:	f8a3 a000 	strh.w	sl, [r3]
90013fe2:	805a      	strh	r2, [r3, #2]
90013fe4:	809e      	strh	r6, [r3, #4]
90013fe6:	80de      	strh	r6, [r3, #6]
90013fe8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013fea:	6901      	ldr	r1, [r0, #16]
90013fec:	441a      	add	r2, r3
90013fee:	88cc      	ldrh	r4, [r1, #6]
90013ff0:	888b      	ldrh	r3, [r1, #4]
90013ff2:	4323      	orrs	r3, r4
90013ff4:	d010      	beq.n	90014018 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013ff6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013ffa:	2c00      	cmp	r4, #0
90013ffc:	db0c      	blt.n	90014018 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013ffe:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014000:	429c      	cmp	r4, r3
90014002:	da09      	bge.n	90014018 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014004:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014008:	429c      	cmp	r4, r3
9001400a:	f104 0401 	add.w	r4, r4, #1
9001400e:	bf38      	it	cc
90014010:	3108      	addcc	r1, #8
90014012:	6084      	str	r4, [r0, #8]
90014014:	bf38      	it	cc
90014016:	6101      	strcc	r1, [r0, #16]
90014018:	6903      	ldr	r3, [r0, #16]
9001401a:	464f      	mov	r7, r9
9001401c:	f8a3 a000 	strh.w	sl, [r3]
90014020:	805a      	strh	r2, [r3, #2]
90014022:	809e      	strh	r6, [r3, #4]
90014024:	80de      	strh	r6, [r3, #6]
90014026:	9b06      	ldr	r3, [sp, #24]
90014028:	4293      	cmp	r3, r2
9001402a:	d19c      	bne.n	90013f66 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
9001402c:	9b01      	ldr	r3, [sp, #4]
9001402e:	6907      	ldr	r7, [r0, #16]
90014030:	f1c3 0620 	rsb	r6, r3, #32
90014034:	9b05      	ldr	r3, [sp, #20]
90014036:	ea4f 1e63 	mov.w	lr, r3, asr #5
9001403a:	9b04      	ldr	r3, [sp, #16]
9001403c:	429e      	cmp	r6, r3
9001403e:	f040 81c7 	bne.w	900143d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014042:	f9b7 3000 	ldrsh.w	r3, [r7]
90014046:	459e      	cmp	lr, r3
90014048:	d104      	bne.n	90014054 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
9001404a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001404e:	429a      	cmp	r2, r3
90014050:	f43f ae3a 	beq.w	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014054:	88f9      	ldrh	r1, [r7, #6]
90014056:	88bb      	ldrh	r3, [r7, #4]
90014058:	430b      	orrs	r3, r1
9001405a:	d010      	beq.n	9001407e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001405c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014060:	2b00      	cmp	r3, #0
90014062:	db0c      	blt.n	9001407e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014064:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014066:	428b      	cmp	r3, r1
90014068:	da09      	bge.n	9001407e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001406a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001406e:	428b      	cmp	r3, r1
90014070:	f103 0301 	add.w	r3, r3, #1
90014074:	bf38      	it	cc
90014076:	3708      	addcc	r7, #8
90014078:	6083      	str	r3, [r0, #8]
9001407a:	bf38      	it	cc
9001407c:	6107      	strcc	r7, [r0, #16]
9001407e:	6903      	ldr	r3, [r0, #16]
90014080:	f8a3 e000 	strh.w	lr, [r3]
90014084:	e603      	b.n	90013c8e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014086:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014088:	9c03      	ldr	r4, [sp, #12]
9001408a:	42a2      	cmp	r2, r4
9001408c:	f6ff ae1c 	blt.w	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014090:	9c06      	ldr	r4, [sp, #24]
90014092:	42a2      	cmp	r2, r4
90014094:	9c08      	ldr	r4, [sp, #32]
90014096:	bfbc      	itt	lt
90014098:	3201      	addlt	r2, #1
9001409a:	9206      	strlt	r2, [sp, #24]
9001409c:	f1c3 0220 	rsb	r2, r3, #32
900140a0:	4362      	muls	r2, r4
900140a2:	2401      	movs	r4, #1
900140a4:	940b      	str	r4, [sp, #44]	@ 0x2c
900140a6:	2420      	movs	r4, #32
900140a8:	e6d6      	b.n	90013e58 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
900140aa:	ea4f 1861 	mov.w	r8, r1, asr #5
900140ae:	f009 021f 	and.w	r2, r9, #31
900140b2:	f001 011f 	and.w	r1, r1, #31
900140b6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900140ba:	920c      	str	r2, [sp, #48]	@ 0x30
900140bc:	45b0      	cmp	r8, r6
900140be:	9a01      	ldr	r2, [sp, #4]
900140c0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900140c4:	eba2 0203 	sub.w	r2, r2, r3
900140c8:	d108      	bne.n	900140dc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900140ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900140cc:	4496      	add	lr, r2
900140ce:	4419      	add	r1, r3
900140d0:	f8a5 e004 	strh.w	lr, [r5, #4]
900140d4:	fb02 a101 	mla	r1, r2, r1, sl
900140d8:	80e9      	strh	r1, [r5, #6]
900140da:	e6fa      	b.n	90013ed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900140dc:	2c00      	cmp	r4, #0
900140de:	f2c0 80a7 	blt.w	90014230 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
900140e2:	2701      	movs	r7, #1
900140e4:	f1c1 0c20 	rsb	ip, r1, #32
900140e8:	970a      	str	r7, [sp, #40]	@ 0x28
900140ea:	2720      	movs	r7, #32
900140ec:	fb02 f20c 	mul.w	r2, r2, ip
900140f0:	9709      	str	r7, [sp, #36]	@ 0x24
900140f2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900140f4:	fb92 fcf4 	sdiv	ip, r2, r4
900140f8:	fb04 221c 	mls	r2, r4, ip, r2
900140fc:	4439      	add	r1, r7
900140fe:	2a00      	cmp	r2, #0
90014100:	bfbc      	itt	lt
90014102:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014106:	1912      	addlt	r2, r2, r4
90014108:	fb0c a101 	mla	r1, ip, r1, sl
9001410c:	44e6      	add	lr, ip
9001410e:	80e9      	strh	r1, [r5, #6]
90014110:	990a      	ldr	r1, [sp, #40]	@ 0x28
90014112:	f8a5 e004 	strh.w	lr, [r5, #4]
90014116:	eb08 0501 	add.w	r5, r8, r1
9001411a:	6901      	ldr	r1, [r0, #16]
9001411c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014120:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014124:	ea58 070e 	orrs.w	r7, r8, lr
90014128:	d010      	beq.n	9001414c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001412a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001412e:	f1be 0f00 	cmp.w	lr, #0
90014132:	db0b      	blt.n	9001414c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014134:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014136:	45be      	cmp	lr, r7
90014138:	da08      	bge.n	9001414c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001413a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001413e:	45be      	cmp	lr, r7
90014140:	bf3c      	itt	cc
90014142:	3108      	addcc	r1, #8
90014144:	6101      	strcc	r1, [r0, #16]
90014146:	f10e 0101 	add.w	r1, lr, #1
9001414a:	6081      	str	r1, [r0, #8]
9001414c:	6901      	ldr	r1, [r0, #16]
9001414e:	f04f 0e00 	mov.w	lr, #0
90014152:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014156:	42ae      	cmp	r6, r5
90014158:	800d      	strh	r5, [r1, #0]
9001415a:	4463      	add	r3, ip
9001415c:	f8a1 8002 	strh.w	r8, [r1, #2]
90014160:	f8a1 e004 	strh.w	lr, [r1, #4]
90014164:	f8a1 e006 	strh.w	lr, [r1, #6]
90014168:	d053      	beq.n	90014212 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001416a:	9901      	ldr	r1, [sp, #4]
9001416c:	1b12      	subs	r2, r2, r4
9001416e:	1ac9      	subs	r1, r1, r3
90014170:	4461      	add	r1, ip
90014172:	0149      	lsls	r1, r1, #5
90014174:	fb91 fef4 	sdiv	lr, r1, r4
90014178:	fb04 111e 	mls	r1, r4, lr, r1
9001417c:	2900      	cmp	r1, #0
9001417e:	bfbc      	itt	lt
90014180:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014184:	1909      	addlt	r1, r1, r4
90014186:	f10e 0701 	add.w	r7, lr, #1
9001418a:	970d      	str	r7, [sp, #52]	@ 0x34
9001418c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014190:	1852      	adds	r2, r2, r1
90014192:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90014194:	bf54      	ite	pl
90014196:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
9001419a:	46f4      	movmi	ip, lr
9001419c:	f8ba b004 	ldrh.w	fp, [sl, #4]
900141a0:	bf58      	it	pl
900141a2:	1b12      	subpl	r2, r2, r4
900141a4:	4463      	add	r3, ip
900141a6:	443d      	add	r5, r7
900141a8:	44e3      	add	fp, ip
900141aa:	f8aa b004 	strh.w	fp, [sl, #4]
900141ae:	f8ba b006 	ldrh.w	fp, [sl, #6]
900141b2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900141b6:	f8aa b006 	strh.w	fp, [sl, #6]
900141ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
900141be:	f8bc b006 	ldrh.w	fp, [ip, #6]
900141c2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900141c6:	ea5b 070a 	orrs.w	r7, fp, sl
900141ca:	d014      	beq.n	900141f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141cc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900141d0:	f1ba 0f00 	cmp.w	sl, #0
900141d4:	db0f      	blt.n	900141f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141d6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900141d8:	45ba      	cmp	sl, r7
900141da:	da0c      	bge.n	900141f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141dc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
900141e0:	45ba      	cmp	sl, r7
900141e2:	f10a 0a01 	add.w	sl, sl, #1
900141e6:	bf38      	it	cc
900141e8:	f10c 0c08 	addcc.w	ip, ip, #8
900141ec:	f8c0 a008 	str.w	sl, [r0, #8]
900141f0:	bf38      	it	cc
900141f2:	f8c0 c010 	strcc.w	ip, [r0, #16]
900141f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900141fa:	f04f 0700 	mov.w	r7, #0
900141fe:	42ae      	cmp	r6, r5
90014200:	f8ac 5000 	strh.w	r5, [ip]
90014204:	f8ac 8002 	strh.w	r8, [ip, #2]
90014208:	f8ac 7004 	strh.w	r7, [ip, #4]
9001420c:	f8ac 7006 	strh.w	r7, [ip, #6]
90014210:	d1bc      	bne.n	9001418c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014212:	6904      	ldr	r4, [r0, #16]
90014214:	9a01      	ldr	r2, [sp, #4]
90014216:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014218:	1ad3      	subs	r3, r2, r3
9001421a:	88a2      	ldrh	r2, [r4, #4]
9001421c:	3120      	adds	r1, #32
9001421e:	441a      	add	r2, r3
90014220:	80a2      	strh	r2, [r4, #4]
90014222:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90014224:	1a89      	subs	r1, r1, r2
90014226:	88e2      	ldrh	r2, [r4, #6]
90014228:	fb03 2301 	mla	r3, r3, r1, r2
9001422c:	80e3      	strh	r3, [r4, #6]
9001422e:	e650      	b.n	90013ed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014230:	f04f 37ff 	mov.w	r7, #4294967295
90014234:	434a      	muls	r2, r1
90014236:	4264      	negs	r4, r4
90014238:	970a      	str	r7, [sp, #40]	@ 0x28
9001423a:	2700      	movs	r7, #0
9001423c:	e758      	b.n	900140f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001423e:	ea4f 1867 	mov.w	r8, r7, asr #5
90014242:	f009 031f 	and.w	r3, r9, #31
90014246:	f007 071f 	and.w	r7, r7, #31
9001424a:	fa1f fc8c 	uxth.w	ip, ip
9001424e:	45d0      	cmp	r8, sl
90014250:	930f      	str	r3, [sp, #60]	@ 0x3c
90014252:	fa1f fe8e 	uxth.w	lr, lr
90014256:	d10a      	bne.n	9001426e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014258:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001425a:	449c      	add	ip, r3
9001425c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001425e:	441f      	add	r7, r3
90014260:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014262:	f8a5 c004 	strh.w	ip, [r5, #4]
90014266:	fb03 e707 	mla	r7, r3, r7, lr
9001426a:	80ef      	strh	r7, [r5, #6]
9001426c:	e6bc      	b.n	90013fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001426e:	2900      	cmp	r1, #0
90014270:	f2c0 80a6 	blt.w	900143c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014274:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90014276:	f1c7 0320 	rsb	r3, r7, #32
9001427a:	4363      	muls	r3, r4
9001427c:	2401      	movs	r4, #1
9001427e:	940d      	str	r4, [sp, #52]	@ 0x34
90014280:	2420      	movs	r4, #32
90014282:	940c      	str	r4, [sp, #48]	@ 0x30
90014284:	fb93 f4f1 	sdiv	r4, r3, r1
90014288:	fb01 3b14 	mls	fp, r1, r4, r3
9001428c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001428e:	f1bb 0f00 	cmp.w	fp, #0
90014292:	441f      	add	r7, r3
90014294:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014296:	bfbc      	itt	lt
90014298:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001429c:	448b      	addlt	fp, r1
9001429e:	fb04 e707 	mla	r7, r4, r7, lr
900142a2:	44a4      	add	ip, r4
900142a4:	80ef      	strh	r7, [r5, #6]
900142a6:	f8a5 c004 	strh.w	ip, [r5, #4]
900142aa:	eb08 0503 	add.w	r5, r8, r3
900142ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
900142b2:	f8bc e006 	ldrh.w	lr, [ip, #6]
900142b6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900142ba:	ea5e 0307 	orrs.w	r3, lr, r7
900142be:	d011      	beq.n	900142e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142c0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900142c4:	f1be 0f00 	cmp.w	lr, #0
900142c8:	db0c      	blt.n	900142e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142ca:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900142cc:	45be      	cmp	lr, r7
900142ce:	da09      	bge.n	900142e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142d0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900142d4:	45be      	cmp	lr, r7
900142d6:	bf3c      	itt	cc
900142d8:	f10c 0708 	addcc.w	r7, ip, #8
900142dc:	6107      	strcc	r7, [r0, #16]
900142de:	f10e 0701 	add.w	r7, lr, #1
900142e2:	6087      	str	r7, [r0, #8]
900142e4:	6907      	ldr	r7, [r0, #16]
900142e6:	b213      	sxth	r3, r2
900142e8:	4555      	cmp	r5, sl
900142ea:	9310      	str	r3, [sp, #64]	@ 0x40
900142ec:	807b      	strh	r3, [r7, #2]
900142ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900142f0:	803d      	strh	r5, [r7, #0]
900142f2:	80be      	strh	r6, [r7, #4]
900142f4:	eb04 0c03 	add.w	ip, r4, r3
900142f8:	80fe      	strh	r6, [r7, #6]
900142fa:	d050      	beq.n	9001439e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900142fc:	9b01      	ldr	r3, [sp, #4]
900142fe:	eba3 070c 	sub.w	r7, r3, ip
90014302:	ebab 0301 	sub.w	r3, fp, r1
90014306:	443c      	add	r4, r7
90014308:	9309      	str	r3, [sp, #36]	@ 0x24
9001430a:	0164      	lsls	r4, r4, #5
9001430c:	fb94 f8f1 	sdiv	r8, r4, r1
90014310:	fb01 4418 	mls	r4, r1, r8, r4
90014314:	2c00      	cmp	r4, #0
90014316:	bfbc      	itt	lt
90014318:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001431c:	1864      	addlt	r4, r4, r1
9001431e:	f108 0701 	add.w	r7, r8, #1
90014322:	9711      	str	r7, [sp, #68]	@ 0x44
90014324:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014326:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001432a:	191b      	adds	r3, r3, r4
9001432c:	f8be b004 	ldrh.w	fp, [lr, #4]
90014330:	bf54      	ite	pl
90014332:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90014334:	4647      	movmi	r7, r8
90014336:	9309      	str	r3, [sp, #36]	@ 0x24
90014338:	bf58      	it	pl
9001433a:	1a5b      	subpl	r3, r3, r1
9001433c:	44bb      	add	fp, r7
9001433e:	44bc      	add	ip, r7
90014340:	bf58      	it	pl
90014342:	9309      	strpl	r3, [sp, #36]	@ 0x24
90014344:	f8ae b004 	strh.w	fp, [lr, #4]
90014348:	f8be b006 	ldrh.w	fp, [lr, #6]
9001434c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014350:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90014352:	f8ae b006 	strh.w	fp, [lr, #6]
90014356:	443d      	add	r5, r7
90014358:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001435c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014360:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014364:	ea5b 0307 	orrs.w	r3, fp, r7
90014368:	d011      	beq.n	9001438e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001436a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001436e:	f1bb 0f00 	cmp.w	fp, #0
90014372:	db0c      	blt.n	9001438e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014374:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014376:	45bb      	cmp	fp, r7
90014378:	da09      	bge.n	9001438e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001437a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001437e:	45bb      	cmp	fp, r7
90014380:	bf3c      	itt	cc
90014382:	f10e 0708 	addcc.w	r7, lr, #8
90014386:	6107      	strcc	r7, [r0, #16]
90014388:	f10b 0701 	add.w	r7, fp, #1
9001438c:	6087      	str	r7, [r0, #8]
9001438e:	6907      	ldr	r7, [r0, #16]
90014390:	4555      	cmp	r5, sl
90014392:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90014394:	803d      	strh	r5, [r7, #0]
90014396:	807b      	strh	r3, [r7, #2]
90014398:	80be      	strh	r6, [r7, #4]
9001439a:	80fe      	strh	r6, [r7, #6]
9001439c:	d1c2      	bne.n	90014324 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001439e:	9b01      	ldr	r3, [sp, #4]
900143a0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900143a2:	eba3 0c0c 	sub.w	ip, r3, ip
900143a6:	6903      	ldr	r3, [r0, #16]
900143a8:	3720      	adds	r7, #32
900143aa:	8899      	ldrh	r1, [r3, #4]
900143ac:	4461      	add	r1, ip
900143ae:	8099      	strh	r1, [r3, #4]
900143b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900143b2:	1a7f      	subs	r7, r7, r1
900143b4:	88d9      	ldrh	r1, [r3, #6]
900143b6:	fb0c 1c07 	mla	ip, ip, r7, r1
900143ba:	f8a3 c006 	strh.w	ip, [r3, #6]
900143be:	e613      	b.n	90013fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900143c0:	f04f 34ff 	mov.w	r4, #4294967295
900143c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900143c6:	4249      	negs	r1, r1
900143c8:	940d      	str	r4, [sp, #52]	@ 0x34
900143ca:	2400      	movs	r4, #0
900143cc:	437b      	muls	r3, r7
900143ce:	e758      	b.n	90014282 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900143d0:	9905      	ldr	r1, [sp, #20]
900143d2:	ea4f 1b69 	mov.w	fp, r9, asr #5
900143d6:	f009 0c1f 	and.w	ip, r9, #31
900143da:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900143de:	f001 011f 	and.w	r1, r1, #31
900143e2:	45f3      	cmp	fp, lr
900143e4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900143e8:	9102      	str	r1, [sp, #8]
900143ea:	9904      	ldr	r1, [sp, #16]
900143ec:	eba1 0406 	sub.w	r4, r1, r6
900143f0:	d108      	bne.n	90014404 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900143f2:	9b02      	ldr	r3, [sp, #8]
900143f4:	44a0      	add	r8, r4
900143f6:	449c      	add	ip, r3
900143f8:	f8a7 8004 	strh.w	r8, [r7, #4]
900143fc:	fb04 a40c 	mla	r4, r4, ip, sl
90014400:	80fc      	strh	r4, [r7, #6]
90014402:	e461      	b.n	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014404:	9905      	ldr	r1, [sp, #20]
90014406:	ebb1 0109 	subs.w	r1, r1, r9
9001440a:	bf51      	iteee	pl
9001440c:	f1cc 0520 	rsbpl	r5, ip, #32
90014410:	fb04 f40c 	mulmi.w	r4, r4, ip
90014414:	4249      	negmi	r1, r1
90014416:	2500      	movmi	r5, #0
90014418:	bf5d      	ittte	pl
9001441a:	436c      	mulpl	r4, r5
9001441c:	2520      	movpl	r5, #32
9001441e:	f04f 0901 	movpl.w	r9, #1
90014422:	f04f 39ff 	movmi.w	r9, #4294967295
90014426:	9501      	str	r5, [sp, #4]
90014428:	9b01      	ldr	r3, [sp, #4]
9001442a:	fb94 f5f1 	sdiv	r5, r4, r1
9001442e:	fb01 4415 	mls	r4, r1, r5, r4
90014432:	449c      	add	ip, r3
90014434:	eb0b 0309 	add.w	r3, fp, r9
90014438:	2c00      	cmp	r4, #0
9001443a:	bfbc      	itt	lt
9001443c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014440:	1864      	addlt	r4, r4, r1
90014442:	44a8      	add	r8, r5
90014444:	fb05 ac0c 	mla	ip, r5, ip, sl
90014448:	f8a7 8004 	strh.w	r8, [r7, #4]
9001444c:	f8a7 c006 	strh.w	ip, [r7, #6]
90014450:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014454:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014458:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001445c:	ea58 0707 	orrs.w	r7, r8, r7
90014460:	d011      	beq.n	90014486 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014462:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014466:	f1b8 0f00 	cmp.w	r8, #0
9001446a:	db0c      	blt.n	90014486 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001446c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001446e:	45b8      	cmp	r8, r7
90014470:	da09      	bge.n	90014486 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014472:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014476:	45b8      	cmp	r8, r7
90014478:	bf3c      	itt	cc
9001447a:	f10c 0708 	addcc.w	r7, ip, #8
9001447e:	6107      	strcc	r7, [r0, #16]
90014480:	f108 0701 	add.w	r7, r8, #1
90014484:	6087      	str	r7, [r0, #8]
90014486:	6907      	ldr	r7, [r0, #16]
90014488:	f04f 0c00 	mov.w	ip, #0
9001448c:	b212      	sxth	r2, r2
9001448e:	459e      	cmp	lr, r3
90014490:	803b      	strh	r3, [r7, #0]
90014492:	442e      	add	r6, r5
90014494:	807a      	strh	r2, [r7, #2]
90014496:	f8a7 c004 	strh.w	ip, [r7, #4]
9001449a:	f8a7 c006 	strh.w	ip, [r7, #6]
9001449e:	d04b      	beq.n	90014538 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900144a0:	9f04      	ldr	r7, [sp, #16]
900144a2:	1a64      	subs	r4, r4, r1
900144a4:	f04f 0a00 	mov.w	sl, #0
900144a8:	1bbf      	subs	r7, r7, r6
900144aa:	443d      	add	r5, r7
900144ac:	016d      	lsls	r5, r5, #5
900144ae:	fb95 f8f1 	sdiv	r8, r5, r1
900144b2:	fb01 5518 	mls	r5, r1, r8, r5
900144b6:	4565      	cmp	r5, ip
900144b8:	bfbc      	itt	lt
900144ba:	f108 38ff 	addlt.w	r8, r8, #4294967295
900144be:	186d      	addlt	r5, r5, r1
900144c0:	f108 0701 	add.w	r7, r8, #1
900144c4:	9703      	str	r7, [sp, #12]
900144c6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900144ca:	1964      	adds	r4, r4, r5
900144cc:	444b      	add	r3, r9
900144ce:	bf54      	ite	pl
900144d0:	9f03      	ldrpl	r7, [sp, #12]
900144d2:	4647      	movmi	r7, r8
900144d4:	f8bc b004 	ldrh.w	fp, [ip, #4]
900144d8:	bf58      	it	pl
900144da:	1a64      	subpl	r4, r4, r1
900144dc:	443e      	add	r6, r7
900144de:	44bb      	add	fp, r7
900144e0:	f8ac b004 	strh.w	fp, [ip, #4]
900144e4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900144e8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900144ec:	f8ac b006 	strh.w	fp, [ip, #6]
900144f0:	f8d0 c010 	ldr.w	ip, [r0, #16]
900144f4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900144f8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900144fc:	ea5b 0707 	orrs.w	r7, fp, r7
90014500:	d011      	beq.n	90014526 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014502:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014506:	f1bb 0f00 	cmp.w	fp, #0
9001450a:	db0c      	blt.n	90014526 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001450c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001450e:	45bb      	cmp	fp, r7
90014510:	da09      	bge.n	90014526 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014512:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014516:	45bb      	cmp	fp, r7
90014518:	bf3c      	itt	cc
9001451a:	f10c 0708 	addcc.w	r7, ip, #8
9001451e:	6107      	strcc	r7, [r0, #16]
90014520:	f10b 0701 	add.w	r7, fp, #1
90014524:	6087      	str	r7, [r0, #8]
90014526:	6907      	ldr	r7, [r0, #16]
90014528:	459e      	cmp	lr, r3
9001452a:	803b      	strh	r3, [r7, #0]
9001452c:	807a      	strh	r2, [r7, #2]
9001452e:	f8a7 a004 	strh.w	sl, [r7, #4]
90014532:	f8a7 a006 	strh.w	sl, [r7, #6]
90014536:	d1c6      	bne.n	900144c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90014538:	9b04      	ldr	r3, [sp, #16]
9001453a:	1b9e      	subs	r6, r3, r6
9001453c:	6903      	ldr	r3, [r0, #16]
9001453e:	889a      	ldrh	r2, [r3, #4]
90014540:	4432      	add	r2, r6
90014542:	809a      	strh	r2, [r3, #4]
90014544:	9a02      	ldr	r2, [sp, #8]
90014546:	f102 0c20 	add.w	ip, r2, #32
9001454a:	9a01      	ldr	r2, [sp, #4]
9001454c:	ebac 0c02 	sub.w	ip, ip, r2
90014550:	88da      	ldrh	r2, [r3, #6]
90014552:	fb06 260c 	mla	r6, r6, ip, r2
90014556:	80de      	strh	r6, [r3, #6]
90014558:	f7ff bbb6 	b.w	90013cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

9001455c <_ZN8touchgfx7Outline6lineToEii>:
9001455c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001455e:	079b      	lsls	r3, r3, #30
90014560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014562:	460e      	mov	r6, r1
90014564:	4615      	mov	r5, r2
90014566:	d511      	bpl.n	9001458c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014568:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
9001456c:	ea86 0701 	eor.w	r7, r6, r1
90014570:	ea85 0302 	eor.w	r3, r5, r2
90014574:	433b      	orrs	r3, r7
90014576:	d009      	beq.n	9001458c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014578:	4633      	mov	r3, r6
9001457a:	9500      	str	r5, [sp, #0]
9001457c:	f7ff fb4c 	bl	90013c18 <_ZN8touchgfx7Outline10renderLineEiiii>
90014580:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014582:	f043 0301 	orr.w	r3, r3, #1
90014586:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001458a:	6243      	str	r3, [r0, #36]	@ 0x24
9001458c:	b003      	add	sp, #12
9001458e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014590 <_ZN8touchgfx7Outline6moveToEii>:
90014590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014592:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014594:	4615      	mov	r5, r2
90014596:	4604      	mov	r4, r0
90014598:	460e      	mov	r6, r1
9001459a:	079a      	lsls	r2, r3, #30
9001459c:	d401      	bmi.n	900145a2 <_ZN8touchgfx7Outline6moveToEii+0x12>
9001459e:	f7ff fb07 	bl	90013bb0 <_ZN8touchgfx7Outline5resetEv>
900145a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900145a4:	07db      	lsls	r3, r3, #31
900145a6:	d504      	bpl.n	900145b2 <_ZN8touchgfx7Outline6moveToEii+0x22>
900145a8:	4620      	mov	r0, r4
900145aa:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900145ae:	f7ff ffd5 	bl	9001455c <_ZN8touchgfx7Outline6lineToEii>
900145b2:	6923      	ldr	r3, [r4, #16]
900145b4:	1170      	asrs	r0, r6, #5
900145b6:	1169      	asrs	r1, r5, #5
900145b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900145bc:	4290      	cmp	r0, r2
900145be:	d103      	bne.n	900145c8 <_ZN8touchgfx7Outline6moveToEii+0x38>
900145c0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900145c4:	4291      	cmp	r1, r2
900145c6:	d01a      	beq.n	900145fe <_ZN8touchgfx7Outline6moveToEii+0x6e>
900145c8:	88df      	ldrh	r7, [r3, #6]
900145ca:	889a      	ldrh	r2, [r3, #4]
900145cc:	433a      	orrs	r2, r7
900145ce:	d010      	beq.n	900145f2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145d0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900145d4:	2a00      	cmp	r2, #0
900145d6:	db0c      	blt.n	900145f2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145d8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900145da:	42ba      	cmp	r2, r7
900145dc:	da09      	bge.n	900145f2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145de:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900145e2:	42ba      	cmp	r2, r7
900145e4:	f102 0201 	add.w	r2, r2, #1
900145e8:	bf38      	it	cc
900145ea:	3308      	addcc	r3, #8
900145ec:	60a2      	str	r2, [r4, #8]
900145ee:	bf38      	it	cc
900145f0:	6123      	strcc	r3, [r4, #16]
900145f2:	6923      	ldr	r3, [r4, #16]
900145f4:	2200      	movs	r2, #0
900145f6:	8018      	strh	r0, [r3, #0]
900145f8:	8059      	strh	r1, [r3, #2]
900145fa:	809a      	strh	r2, [r3, #4]
900145fc:	80da      	strh	r2, [r3, #6]
900145fe:	6166      	str	r6, [r4, #20]
90014600:	6225      	str	r5, [r4, #32]
90014602:	e9c4 5606 	strd	r5, r6, [r4, #24]
90014606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014608 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90014608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001460c:	b0d0      	sub	sp, #320	@ 0x140
9001460e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014612:	466c      	mov	r4, sp
90014614:	4627      	mov	r7, r4
90014616:	1a0d      	subs	r5, r1, r0
90014618:	f100 0308 	add.w	r3, r0, #8
9001461c:	2d48      	cmp	r5, #72	@ 0x48
9001461e:	f340 80d5 	ble.w	900147cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014622:	112d      	asrs	r5, r5, #4
90014624:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014628:	f9b0 9000 	ldrsh.w	r9, [r0]
9001462c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90014630:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90014634:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014638:	6816      	ldr	r6, [r2, #0]
9001463a:	6006      	str	r6, [r0, #0]
9001463c:	6856      	ldr	r6, [r2, #4]
9001463e:	6046      	str	r6, [r0, #4]
90014640:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90014644:	f8a2 8002 	strh.w	r8, [r2, #2]
90014648:	f8a2 e004 	strh.w	lr, [r2, #4]
9001464c:	f8a2 c006 	strh.w	ip, [r2, #6]
90014650:	f1a1 0208 	sub.w	r2, r1, #8
90014654:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014658:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
9001465c:	4565      	cmp	r5, ip
9001465e:	db06      	blt.n	9001466e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90014660:	d119      	bne.n	90014696 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014662:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90014666:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001466a:	42ae      	cmp	r6, r5
9001466c:	dd13      	ble.n	90014696 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001466e:	460e      	mov	r6, r1
90014670:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90014674:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90014678:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001467c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90014680:	601d      	str	r5, [r3, #0]
90014682:	6875      	ldr	r5, [r6, #4]
90014684:	605d      	str	r5, [r3, #4]
90014686:	f821 9c08 	strh.w	r9, [r1, #-8]
9001468a:	f821 cc06 	strh.w	ip, [r1, #-6]
9001468e:	f821 8c04 	strh.w	r8, [r1, #-4]
90014692:	f821 ec02 	strh.w	lr, [r1, #-2]
90014696:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001469a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001469e:	42ae      	cmp	r6, r5
900146a0:	db06      	blt.n	900146b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900146a2:	d116      	bne.n	900146d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900146a4:	f9b0 c000 	ldrsh.w	ip, [r0]
900146a8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900146ac:	45ac      	cmp	ip, r5
900146ae:	da10      	bge.n	900146d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900146b0:	681d      	ldr	r5, [r3, #0]
900146b2:	f9b0 8000 	ldrsh.w	r8, [r0]
900146b6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900146ba:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900146be:	6005      	str	r5, [r0, #0]
900146c0:	685d      	ldr	r5, [r3, #4]
900146c2:	f8a0 8008 	strh.w	r8, [r0, #8]
900146c6:	6045      	str	r5, [r0, #4]
900146c8:	8146      	strh	r6, [r0, #10]
900146ca:	f8a0 e00c 	strh.w	lr, [r0, #12]
900146ce:	f8a0 c00e 	strh.w	ip, [r0, #14]
900146d2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900146d6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900146da:	4565      	cmp	r5, ip
900146dc:	db06      	blt.n	900146ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900146de:	d119      	bne.n	90014714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900146e0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900146e4:	f9b0 5000 	ldrsh.w	r5, [r0]
900146e8:	42ae      	cmp	r6, r5
900146ea:	da13      	bge.n	90014714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900146ec:	460e      	mov	r6, r1
900146ee:	f9b0 9000 	ldrsh.w	r9, [r0]
900146f2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900146f6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900146fa:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900146fe:	6005      	str	r5, [r0, #0]
90014700:	6875      	ldr	r5, [r6, #4]
90014702:	6045      	str	r5, [r0, #4]
90014704:	f821 9c08 	strh.w	r9, [r1, #-8]
90014708:	f821 cc06 	strh.w	ip, [r1, #-6]
9001470c:	f821 8c04 	strh.w	r8, [r1, #-4]
90014710:	f821 ec02 	strh.w	lr, [r1, #-2]
90014714:	3308      	adds	r3, #8
90014716:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001471a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001471e:	45e6      	cmp	lr, ip
90014720:	dbf8      	blt.n	90014714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014722:	d105      	bne.n	90014730 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014724:	f9b3 6000 	ldrsh.w	r6, [r3]
90014728:	f9b0 5000 	ldrsh.w	r5, [r0]
9001472c:	42ae      	cmp	r6, r5
9001472e:	dbf1      	blt.n	90014714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014730:	4615      	mov	r5, r2
90014732:	3a08      	subs	r2, #8
90014734:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90014738:	45b4      	cmp	ip, r6
9001473a:	dbf9      	blt.n	90014730 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001473c:	d105      	bne.n	9001474a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001473e:	f9b0 8000 	ldrsh.w	r8, [r0]
90014742:	f9b2 6000 	ldrsh.w	r6, [r2]
90014746:	45b0      	cmp	r8, r6
90014748:	dbf2      	blt.n	90014730 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001474a:	4293      	cmp	r3, r2
9001474c:	f1a5 0608 	sub.w	r6, r5, #8
90014750:	d816      	bhi.n	90014780 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90014752:	f8d6 c000 	ldr.w	ip, [r6]
90014756:	f9b3 a000 	ldrsh.w	sl, [r3]
9001475a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001475e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90014762:	f8c3 c000 	str.w	ip, [r3]
90014766:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001476a:	f8c3 c004 	str.w	ip, [r3, #4]
9001476e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014772:	f825 ec06 	strh.w	lr, [r5, #-6]
90014776:	f825 9c04 	strh.w	r9, [r5, #-4]
9001477a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001477e:	e7c9      	b.n	90014714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014780:	f8d6 e000 	ldr.w	lr, [r6]
90014784:	f9b0 a000 	ldrsh.w	sl, [r0]
90014788:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
9001478c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90014790:	f8c0 e000 	str.w	lr, [r0]
90014794:	f8d6 e004 	ldr.w	lr, [r6, #4]
90014798:	1a16      	subs	r6, r2, r0
9001479a:	f8c0 e004 	str.w	lr, [r0, #4]
9001479e:	f825 ac08 	strh.w	sl, [r5, #-8]
900147a2:	f825 cc06 	strh.w	ip, [r5, #-6]
900147a6:	f825 9c04 	strh.w	r9, [r5, #-4]
900147aa:	f825 8c02 	strh.w	r8, [r5, #-2]
900147ae:	1acd      	subs	r5, r1, r3
900147b0:	10ed      	asrs	r5, r5, #3
900147b2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900147b6:	bfb5      	itete	lt
900147b8:	e9c4 0200 	strdlt	r0, r2, [r4]
900147bc:	e9c4 3100 	strdge	r3, r1, [r4]
900147c0:	460a      	movlt	r2, r1
900147c2:	4603      	movge	r3, r0
900147c4:	3408      	adds	r4, #8
900147c6:	4618      	mov	r0, r3
900147c8:	4611      	mov	r1, r2
900147ca:	e724      	b.n	90014616 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900147cc:	4299      	cmp	r1, r3
900147ce:	d927      	bls.n	90014820 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900147d0:	f1a3 0210 	sub.w	r2, r3, #16
900147d4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900147d8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900147dc:	45ac      	cmp	ip, r5
900147de:	db06      	blt.n	900147ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900147e0:	d11c      	bne.n	9001481c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900147e2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900147e6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900147ea:	42ae      	cmp	r6, r5
900147ec:	da16      	bge.n	9001481c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900147ee:	4615      	mov	r5, r2
900147f0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900147f4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900147f8:	3a08      	subs	r2, #8
900147fa:	f855 6f08 	ldr.w	r6, [r5, #8]!
900147fe:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90014802:	6196      	str	r6, [r2, #24]
90014804:	42a8      	cmp	r0, r5
90014806:	686e      	ldr	r6, [r5, #4]
90014808:	f8a2 9010 	strh.w	r9, [r2, #16]
9001480c:	61d6      	str	r6, [r2, #28]
9001480e:	f8a2 c012 	strh.w	ip, [r2, #18]
90014812:	f8a2 8014 	strh.w	r8, [r2, #20]
90014816:	f8a2 e016 	strh.w	lr, [r2, #22]
9001481a:	d1db      	bne.n	900147d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001481c:	3308      	adds	r3, #8
9001481e:	e7d5      	b.n	900147cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014820:	42bc      	cmp	r4, r7
90014822:	d903      	bls.n	9001482c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90014824:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90014828:	3c08      	subs	r4, #8
9001482a:	e6f4      	b.n	90014616 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001482c:	b050      	add	sp, #320	@ 0x140
9001482e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90014832 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90014832:	b510      	push	{r4, lr}
90014834:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014836:	4604      	mov	r4, r0
90014838:	07da      	lsls	r2, r3, #31
9001483a:	d507      	bpl.n	9001484c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001483c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90014840:	f7ff fe8c 	bl	9001455c <_ZN8touchgfx7Outline6lineToEii>
90014844:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014846:	f023 0301 	bic.w	r3, r3, #1
9001484a:	6243      	str	r3, [r0, #36]	@ 0x24
9001484c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001484e:	079b      	lsls	r3, r3, #30
90014850:	d521      	bpl.n	90014896 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90014852:	6923      	ldr	r3, [r4, #16]
90014854:	88d9      	ldrh	r1, [r3, #6]
90014856:	889a      	ldrh	r2, [r3, #4]
90014858:	430a      	orrs	r2, r1
9001485a:	d010      	beq.n	9001487e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001485c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014860:	2a00      	cmp	r2, #0
90014862:	db0c      	blt.n	9001487e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014864:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90014866:	428a      	cmp	r2, r1
90014868:	da09      	bge.n	9001487e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001486a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001486e:	4291      	cmp	r1, r2
90014870:	f102 0201 	add.w	r2, r2, #1
90014874:	bf88      	it	hi
90014876:	3308      	addhi	r3, #8
90014878:	60a2      	str	r2, [r4, #8]
9001487a:	bf88      	it	hi
9001487c:	6123      	strhi	r3, [r4, #16]
9001487e:	68a1      	ldr	r1, [r4, #8]
90014880:	b129      	cbz	r1, 9001488e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014882:	6863      	ldr	r3, [r4, #4]
90014884:	4299      	cmp	r1, r3
90014886:	d802      	bhi.n	9001488e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014888:	68e0      	ldr	r0, [r4, #12]
9001488a:	f7ff febd 	bl	90014608 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001488e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014890:	f023 0302 	bic.w	r3, r3, #2
90014894:	6263      	str	r3, [r4, #36]	@ 0x24
90014896:	68e0      	ldr	r0, [r4, #12]
90014898:	bd10      	pop	{r4, pc}
	...

9001489c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
9001489c:	4b01      	ldr	r3, [pc, #4]	@ (900148a4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001489e:	6818      	ldr	r0, [r3, #0]
900148a0:	4770      	bx	lr
900148a2:	bf00      	nop
900148a4:	24021994 	.word	0x24021994

900148a8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900148a8:	4b01      	ldr	r3, [pc, #4]	@ (900148b0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900148aa:	6818      	ldr	r0, [r3, #0]
900148ac:	4770      	bx	lr
900148ae:	bf00      	nop
900148b0:	24021998 	.word	0x24021998

900148b4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900148b4:	b510      	push	{r4, lr}
900148b6:	6803      	ldr	r3, [r0, #0]
900148b8:	460c      	mov	r4, r1
900148ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900148bc:	4798      	blx	r3
900148be:	1b03      	subs	r3, r0, r4
900148c0:	4258      	negs	r0, r3
900148c2:	4158      	adcs	r0, r3
900148c4:	bd10      	pop	{r4, pc}
	...

900148c8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900148c8:	4b01      	ldr	r3, [pc, #4]	@ (900148d0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900148ca:	6019      	str	r1, [r3, #0]
900148cc:	4770      	bx	lr
900148ce:	bf00      	nop
900148d0:	2402199c 	.word	0x2402199c

900148d4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900148d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900148d8:	4696      	mov	lr, r2
900148da:	b097      	sub	sp, #92	@ 0x5c
900148dc:	4605      	mov	r5, r0
900148de:	4614      	mov	r4, r2
900148e0:	460e      	mov	r6, r1
900148e2:	461f      	mov	r7, r3
900148e4:	f10d 0c1c 	add.w	ip, sp, #28
900148e8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
900148ec:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
900148f0:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
900148f4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900148f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900148fc:	f8de 3000 	ldr.w	r3, [lr]
90014900:	f104 0e14 	add.w	lr, r4, #20
90014904:	f8cc 3000 	str.w	r3, [ip]
90014908:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
9001490c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014910:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014914:	f8de 3000 	ldr.w	r3, [lr]
90014918:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001491c:	f8cc 3000 	str.w	r3, [ip]
90014920:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90014924:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014928:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001492c:	f8de 3000 	ldr.w	r3, [lr]
90014930:	4631      	mov	r1, r6
90014932:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90014934:	4628      	mov	r0, r5
90014936:	f8cc 3000 	str.w	r3, [ip]
9001493a:	682b      	ldr	r3, [r5, #0]
9001493c:	9201      	str	r2, [sp, #4]
9001493e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90014940:	f8cd 8008 	str.w	r8, [sp, #8]
90014944:	9200      	str	r2, [sp, #0]
90014946:	aa07      	add	r2, sp, #28
90014948:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001494c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90014950:	463b      	mov	r3, r7
90014952:	47d8      	blx	fp
90014954:	46a6      	mov	lr, r4
90014956:	f10d 0c1c 	add.w	ip, sp, #28
9001495a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001495e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014962:	f8de 3000 	ldr.w	r3, [lr]
90014966:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001496a:	343c      	adds	r4, #60	@ 0x3c
9001496c:	f8cc 3000 	str.w	r3, [ip]
90014970:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90014974:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014978:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001497c:	f8de 3000 	ldr.w	r3, [lr]
90014980:	f8cc 3000 	str.w	r3, [ip]
90014984:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90014988:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001498a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001498e:	6823      	ldr	r3, [r4, #0]
90014990:	4631      	mov	r1, r6
90014992:	4628      	mov	r0, r5
90014994:	f8cc 3000 	str.w	r3, [ip]
90014998:	682b      	ldr	r3, [r5, #0]
9001499a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001499e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900149a0:	f8cd 8008 	str.w	r8, [sp, #8]
900149a4:	9201      	str	r2, [sp, #4]
900149a6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900149a8:	9200      	str	r2, [sp, #0]
900149aa:	aa07      	add	r2, sp, #28
900149ac:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900149ae:	463b      	mov	r3, r7
900149b0:	47a0      	blx	r4
900149b2:	b017      	add	sp, #92	@ 0x5c
900149b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900149b8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900149b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900149bc:	b08d      	sub	sp, #52	@ 0x34
900149be:	4688      	mov	r8, r1
900149c0:	f8d3 c000 	ldr.w	ip, [r3]
900149c4:	9916      	ldr	r1, [sp, #88]	@ 0x58
900149c6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
900149ca:	680f      	ldr	r7, [r1, #0]
900149cc:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900149d0:	eba7 070c 	sub.w	r7, r7, ip
900149d4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
900149d8:	edd3 6a07 	vldr	s13, [r3, #28]
900149dc:	42bc      	cmp	r4, r7
900149de:	9918      	ldr	r1, [sp, #96]	@ 0x60
900149e0:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
900149e4:	bfa8      	it	ge
900149e6:	463c      	movge	r4, r7
900149e8:	f9b1 9000 	ldrsh.w	r9, [r1]
900149ec:	f9ba 1000 	ldrsh.w	r1, [sl]
900149f0:	ee07 4a90 	vmov	s15, r4
900149f4:	eb09 0e0c 	add.w	lr, r9, ip
900149f8:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
900149fc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90014a00:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90014a04:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90014a08:	4571      	cmp	r1, lr
90014a0a:	ee25 4a04 	vmul.f32	s8, s10, s8
90014a0e:	ee65 4a24 	vmul.f32	s9, s10, s9
90014a12:	ee25 5a27 	vmul.f32	s10, s10, s15
90014a16:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90014a1a:	ee71 0aa4 	vadd.f32	s1, s3, s9
90014a1e:	ee32 1a05 	vadd.f32	s2, s4, s10
90014a22:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014a26:	ee36 0a84 	vadd.f32	s0, s13, s8
90014a2a:	ee61 1a87 	vmul.f32	s3, s3, s14
90014a2e:	ee22 2a07 	vmul.f32	s4, s4, s14
90014a32:	f340 808c 	ble.w	90014b4e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90014a36:	eba1 060e 	sub.w	r6, r1, lr
90014a3a:	fb96 f5f4 	sdiv	r5, r6, r4
90014a3e:	ee07 5a10 	vmov	s14, r5
90014a42:	2d00      	cmp	r5, #0
90014a44:	fb04 6615 	mls	r6, r4, r5, r6
90014a48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90014a4c:	eea7 0a04 	vfma.f32	s0, s14, s8
90014a50:	eee7 0a24 	vfma.f32	s1, s14, s9
90014a54:	eea7 1a05 	vfma.f32	s2, s14, s10
90014a58:	dd12      	ble.n	90014a80 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90014a5a:	ee70 6a44 	vsub.f32	s13, s0, s8
90014a5e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90014a62:	ee31 2a45 	vsub.f32	s4, s2, s10
90014a66:	eef5 6a40 	vcmp.f32	s13, #0.0
90014a6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014a6e:	bf14      	ite	ne
90014a70:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90014a74:	eeb0 7a67 	vmoveq.f32	s14, s15
90014a78:	ee61 1a87 	vmul.f32	s3, s3, s14
90014a7c:	ee22 2a07 	vmul.f32	s4, s4, s14
90014a80:	fb05 f204 	mul.w	r2, r5, r4
90014a84:	1abf      	subs	r7, r7, r2
90014a86:	4494      	add	ip, r2
90014a88:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90014a8c:	4411      	add	r1, r2
90014a8e:	eb09 020c 	add.w	r2, r9, ip
90014a92:	b209      	sxth	r1, r1
90014a94:	443a      	add	r2, r7
90014a96:	428a      	cmp	r2, r1
90014a98:	bfc4      	itt	gt
90014a9a:	eba1 0209 	subgt.w	r2, r1, r9
90014a9e:	eba2 070c 	subgt.w	r7, r2, ip
90014aa2:	2f00      	cmp	r7, #0
90014aa4:	dd50      	ble.n	90014b48 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90014aa6:	fb97 f1f4 	sdiv	r1, r7, r4
90014aaa:	fb04 7211 	mls	r2, r4, r1, r7
90014aae:	b90a      	cbnz	r2, 90014ab4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90014ab0:	3901      	subs	r1, #1
90014ab2:	4622      	mov	r2, r4
90014ab4:	eec7 3a80 	vdiv.f32	s7, s15, s0
90014ab8:	6840      	ldr	r0, [r0, #4]
90014aba:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90014abe:	44b6      	add	lr, r6
90014ac0:	f8d0 a000 	ldr.w	sl, [r0]
90014ac4:	2900      	cmp	r1, #0
90014ac6:	bfcc      	ite	gt
90014ac8:	46a1      	movgt	r9, r4
90014aca:	4691      	movle	r9, r2
90014acc:	900b      	str	r0, [sp, #44]	@ 0x2c
90014ace:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90014ad0:	fb04 e505 	mla	r5, r4, r5, lr
90014ad4:	eef0 6a42 	vmov.f32	s13, s4
90014ad8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90014adc:	9008      	str	r0, [sp, #32]
90014ade:	eeb0 7a61 	vmov.f32	s14, s3
90014ae2:	9818      	ldr	r0, [sp, #96]	@ 0x60
90014ae4:	695b      	ldr	r3, [r3, #20]
90014ae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90014aea:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90014aee:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90014af2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90014af4:	445b      	add	r3, fp
90014af6:	9307      	str	r3, [sp, #28]
90014af8:	ee16 3a90 	vmov	r3, s13
90014afc:	e9cd 8505 	strd	r8, r5, [sp, #20]
90014b00:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014b04:	ee21 3a23 	vmul.f32	s6, s2, s7
90014b08:	ee72 7ae1 	vsub.f32	s15, s5, s3
90014b0c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014b10:	ee17 7a90 	vmov	r7, s15
90014b14:	ee73 7a42 	vsub.f32	s15, s6, s4
90014b18:	fb97 f7f4 	sdiv	r7, r7, r4
90014b1c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014b20:	ee17 ca90 	vmov	ip, s15
90014b24:	fb9c fcf4 	sdiv	ip, ip, r4
90014b28:	fb0c 3306 	mla	r3, ip, r6, r3
90014b2c:	9302      	str	r3, [sp, #8]
90014b2e:	ee17 3a10 	vmov	r3, s14
90014b32:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90014b36:	fb07 3706 	mla	r7, r7, r6, r3
90014b3a:	eba9 0306 	sub.w	r3, r9, r6
90014b3e:	e9cd 4700 	strd	r4, r7, [sp]
90014b42:	f8da 4008 	ldr.w	r4, [sl, #8]
90014b46:	47a0      	blx	r4
90014b48:	b00d      	add	sp, #52	@ 0x34
90014b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014b4e:	2500      	movs	r5, #0
90014b50:	462e      	mov	r6, r5
90014b52:	e799      	b.n	90014a88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90014b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014b58:	b0db      	sub	sp, #364	@ 0x16c
90014b5a:	461d      	mov	r5, r3
90014b5c:	4614      	mov	r4, r2
90014b5e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90014b62:	910f      	str	r1, [sp, #60]	@ 0x3c
90014b64:	4629      	mov	r1, r5
90014b66:	930a      	str	r3, [sp, #40]	@ 0x28
90014b68:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90014b6c:	9009      	str	r0, [sp, #36]	@ 0x24
90014b6e:	930b      	str	r3, [sp, #44]	@ 0x2c
90014b70:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90014b74:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90014b78:	9310      	str	r3, [sp, #64]	@ 0x40
90014b7a:	6803      	ldr	r3, [r0, #0]
90014b7c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90014b7e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90014b82:	47b8      	blx	r7
90014b84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014b86:	6058      	str	r0, [r3, #4]
90014b88:	2800      	cmp	r0, #0
90014b8a:	f000 83a1 	beq.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b8e:	682b      	ldr	r3, [r5, #0]
90014b90:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90014b94:	ed94 7a02 	vldr	s14, [r4, #8]
90014b98:	9314      	str	r3, [sp, #80]	@ 0x50
90014b9a:	686b      	ldr	r3, [r5, #4]
90014b9c:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014ba0:	9315      	str	r3, [sp, #84]	@ 0x54
90014ba2:	4bc1      	ldr	r3, [pc, #772]	@ (90014ea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90014ba4:	7819      	ldrb	r1, [r3, #0]
90014ba6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90014baa:	2900      	cmp	r1, #0
90014bac:	bf16      	itet	ne
90014bae:	4619      	movne	r1, r3
90014bb0:	4611      	moveq	r1, r2
90014bb2:	4613      	movne	r3, r2
90014bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bb8:	9116      	str	r1, [sp, #88]	@ 0x58
90014bba:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90014bbe:	f240 8387 	bls.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bc2:	ed94 7a07 	vldr	s14, [r4, #28]
90014bc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bce:	f240 837f 	bls.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bd2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90014bd6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014bda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bde:	f240 8377 	bls.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014be2:	6822      	ldr	r2, [r4, #0]
90014be4:	4bb1      	ldr	r3, [pc, #708]	@ (90014eac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014be6:	429a      	cmp	r2, r3
90014be8:	f2c0 8372 	blt.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bec:	49b0      	ldr	r1, [pc, #704]	@ (90014eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90014bee:	6963      	ldr	r3, [r4, #20]
90014bf0:	428a      	cmp	r2, r1
90014bf2:	f300 836d 	bgt.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bf6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014bfa:	48ae      	ldr	r0, [pc, #696]	@ (90014eb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90014bfc:	33ff      	adds	r3, #255	@ 0xff
90014bfe:	4283      	cmp	r3, r0
90014c00:	f200 8366 	bhi.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c04:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90014c06:	4dac      	ldr	r5, [pc, #688]	@ (90014eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014c08:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014c0c:	33ff      	adds	r3, #255	@ 0xff
90014c0e:	42ab      	cmp	r3, r5
90014c10:	f200 835e 	bhi.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c14:	6862      	ldr	r2, [r4, #4]
90014c16:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90014c1a:	33ff      	adds	r3, #255	@ 0xff
90014c1c:	4283      	cmp	r3, r0
90014c1e:	f200 8357 	bhi.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c22:	69a1      	ldr	r1, [r4, #24]
90014c24:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90014c28:	33ff      	adds	r3, #255	@ 0xff
90014c2a:	4283      	cmp	r3, r0
90014c2c:	f200 8350 	bhi.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c30:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90014c32:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90014c36:	30ff      	adds	r0, #255	@ 0xff
90014c38:	42a8      	cmp	r0, r5
90014c3a:	f200 8349 	bhi.w	900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c3e:	428a      	cmp	r2, r1
90014c40:	f280 8110 	bge.w	90014e64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90014c44:	429a      	cmp	r2, r3
90014c46:	f300 8119 	bgt.w	90014e7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90014c4a:	4299      	cmp	r1, r3
90014c4c:	f280 811d 	bge.w	90014e8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90014c50:	2502      	movs	r5, #2
90014c52:	2701      	movs	r7, #1
90014c54:	46a9      	mov	r9, r5
90014c56:	46b8      	mov	r8, r7
90014c58:	f04f 0a00 	mov.w	sl, #0
90014c5c:	4621      	mov	r1, r4
90014c5e:	a849      	add	r0, sp, #292	@ 0x124
90014c60:	f004 fa8c 	bl	9001917c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90014c64:	4622      	mov	r2, r4
90014c66:	4653      	mov	r3, sl
90014c68:	a949      	add	r1, sp, #292	@ 0x124
90014c6a:	f8cd 9000 	str.w	r9, [sp]
90014c6e:	a819      	add	r0, sp, #100	@ 0x64
90014c70:	f004 fbb4 	bl	900193dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014c74:	4622      	mov	r2, r4
90014c76:	4653      	mov	r3, sl
90014c78:	a949      	add	r1, sp, #292	@ 0x124
90014c7a:	f8cd 8000 	str.w	r8, [sp]
90014c7e:	a829      	add	r0, sp, #164	@ 0xa4
90014c80:	f004 fbac 	bl	900193dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014c84:	4643      	mov	r3, r8
90014c86:	4622      	mov	r2, r4
90014c88:	a949      	add	r1, sp, #292	@ 0x124
90014c8a:	f8cd 9000 	str.w	r9, [sp]
90014c8e:	a839      	add	r0, sp, #228	@ 0xe4
90014c90:	f004 fba4 	bl	900193dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014c94:	42af      	cmp	r7, r5
90014c96:	af12      	add	r7, sp, #72	@ 0x48
90014c98:	bfb7      	itett	lt
90014c9a:	2300      	movlt	r3, #0
90014c9c:	2301      	movge	r3, #1
90014c9e:	ad29      	addlt	r5, sp, #164	@ 0xa4
90014ca0:	ac19      	addlt	r4, sp, #100	@ 0x64
90014ca2:	bfb1      	iteee	lt
90014ca4:	930e      	strlt	r3, [sp, #56]	@ 0x38
90014ca6:	ad19      	addge	r5, sp, #100	@ 0x64
90014ca8:	930e      	strge	r3, [sp, #56]	@ 0x38
90014caa:	ac29      	addge	r4, sp, #164	@ 0xa4
90014cac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014cae:	e893 0003 	ldmia.w	r3, {r0, r1}
90014cb2:	e887 0003 	stmia.w	r7, {r0, r1}
90014cb6:	b928      	cbnz	r0, 90014cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90014cb8:	4b80      	ldr	r3, [pc, #512]	@ (90014ebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90014cba:	6818      	ldr	r0, [r3, #0]
90014cbc:	6803      	ldr	r3, [r0, #0]
90014cbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014cc0:	4798      	blx	r3
90014cc2:	6038      	str	r0, [r7, #0]
90014cc4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014cc6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014cca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014cce:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90014cd0:	930c      	str	r3, [sp, #48]	@ 0x30
90014cd2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014cd4:	6963      	ldr	r3, [r4, #20]
90014cd6:	440b      	add	r3, r1
90014cd8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014cdc:	4408      	add	r0, r1
90014cde:	b200      	sxth	r0, r0
90014ce0:	4283      	cmp	r3, r0
90014ce2:	900d      	str	r0, [sp, #52]	@ 0x34
90014ce4:	f280 80dd 	bge.w	90014ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014ce8:	428b      	cmp	r3, r1
90014cea:	da08      	bge.n	90014cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014cec:	2a00      	cmp	r2, #0
90014cee:	dd06      	ble.n	90014cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014cf0:	1acb      	subs	r3, r1, r3
90014cf2:	429a      	cmp	r2, r3
90014cf4:	f2c0 80e4 	blt.w	90014ec0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014cf8:	2b00      	cmp	r3, #0
90014cfa:	f300 80e2 	bgt.w	90014ec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90014cfe:	6967      	ldr	r7, [r4, #20]
90014d00:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014d04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014d06:	443b      	add	r3, r7
90014d08:	461f      	mov	r7, r3
90014d0a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014d0c:	1bdf      	subs	r7, r3, r7
90014d0e:	4297      	cmp	r7, r2
90014d10:	bfa8      	it	ge
90014d12:	4617      	movge	r7, r2
90014d14:	2f00      	cmp	r7, #0
90014d16:	f340 8166 	ble.w	90014fe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90014d1a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014d1c:	6829      	ldr	r1, [r5, #0]
90014d1e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014d22:	f9bb 3000 	ldrsh.w	r3, [fp]
90014d26:	4411      	add	r1, r2
90014d28:	6820      	ldr	r0, [r4, #0]
90014d2a:	4299      	cmp	r1, r3
90014d2c:	dd1a      	ble.n	90014d64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014d2e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014d32:	4402      	add	r2, r0
90014d34:	440b      	add	r3, r1
90014d36:	b21b      	sxth	r3, r3
90014d38:	429a      	cmp	r2, r3
90014d3a:	dc13      	bgt.n	90014d64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014d3c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90014d3e:	a912      	add	r1, sp, #72	@ 0x48
90014d40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014d42:	9809      	ldr	r0, [sp, #36]	@ 0x24
90014d44:	681b      	ldr	r3, [r3, #0]
90014d46:	9206      	str	r2, [sp, #24]
90014d48:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014d4a:	9500      	str	r5, [sp, #0]
90014d4c:	9205      	str	r2, [sp, #20]
90014d4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90014d50:	e9cd b203 	strd	fp, r2, [sp, #12]
90014d54:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014d56:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014d5a:	aa49      	add	r2, sp, #292	@ 0x124
90014d5c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90014d60:	4623      	mov	r3, r4
90014d62:	47c8      	blx	r9
90014d64:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014d68:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014d6c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90014d70:	ee37 7a27 	vadd.f32	s14, s14, s15
90014d74:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014d78:	68a1      	ldr	r1, [r4, #8]
90014d7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014d7e:	ed94 6a08 	vldr	s12, [r4, #32]
90014d82:	edd4 6a07 	vldr	s13, [r4, #28]
90014d86:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014d8a:	ee76 6a86 	vadd.f32	s13, s13, s12
90014d8e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014d92:	e9d4 2300 	ldrd	r2, r3, [r4]
90014d96:	edc4 6a07 	vstr	s13, [r4, #28]
90014d9a:	441a      	add	r2, r3
90014d9c:	6963      	ldr	r3, [r4, #20]
90014d9e:	3301      	adds	r3, #1
90014da0:	6022      	str	r2, [r4, #0]
90014da2:	6163      	str	r3, [r4, #20]
90014da4:	69a3      	ldr	r3, [r4, #24]
90014da6:	3b01      	subs	r3, #1
90014da8:	61a3      	str	r3, [r4, #24]
90014daa:	6923      	ldr	r3, [r4, #16]
90014dac:	440b      	add	r3, r1
90014dae:	68e1      	ldr	r1, [r4, #12]
90014db0:	428b      	cmp	r3, r1
90014db2:	6123      	str	r3, [r4, #16]
90014db4:	db15      	blt.n	90014de2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90014db6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014dba:	3201      	adds	r2, #1
90014dbc:	1a5b      	subs	r3, r3, r1
90014dbe:	ee76 6a26 	vadd.f32	s13, s12, s13
90014dc2:	6022      	str	r2, [r4, #0]
90014dc4:	6123      	str	r3, [r4, #16]
90014dc6:	edc4 6a07 	vstr	s13, [r4, #28]
90014dca:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90014dce:	ee36 7a87 	vadd.f32	s14, s13, s14
90014dd2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014dd6:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014dda:	ee77 7a27 	vadd.f32	s15, s14, s15
90014dde:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014de2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014de6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90014dea:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90014dee:	ee37 7a27 	vadd.f32	s14, s14, s15
90014df2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014df6:	68a9      	ldr	r1, [r5, #8]
90014df8:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014dfc:	ed95 6a08 	vldr	s12, [r5, #32]
90014e00:	edd5 6a07 	vldr	s13, [r5, #28]
90014e04:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014e08:	ee76 6a86 	vadd.f32	s13, s13, s12
90014e0c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014e10:	e9d5 2300 	ldrd	r2, r3, [r5]
90014e14:	edc5 6a07 	vstr	s13, [r5, #28]
90014e18:	441a      	add	r2, r3
90014e1a:	696b      	ldr	r3, [r5, #20]
90014e1c:	3301      	adds	r3, #1
90014e1e:	602a      	str	r2, [r5, #0]
90014e20:	616b      	str	r3, [r5, #20]
90014e22:	69ab      	ldr	r3, [r5, #24]
90014e24:	3b01      	subs	r3, #1
90014e26:	61ab      	str	r3, [r5, #24]
90014e28:	692b      	ldr	r3, [r5, #16]
90014e2a:	440b      	add	r3, r1
90014e2c:	68e9      	ldr	r1, [r5, #12]
90014e2e:	428b      	cmp	r3, r1
90014e30:	612b      	str	r3, [r5, #16]
90014e32:	db15      	blt.n	90014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90014e34:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90014e38:	3201      	adds	r2, #1
90014e3a:	1a5b      	subs	r3, r3, r1
90014e3c:	ee76 6a26 	vadd.f32	s13, s12, s13
90014e40:	602a      	str	r2, [r5, #0]
90014e42:	612b      	str	r3, [r5, #16]
90014e44:	edc5 6a07 	vstr	s13, [r5, #28]
90014e48:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90014e4c:	ee36 7a87 	vadd.f32	s14, s13, s14
90014e50:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014e54:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90014e58:	ee77 7a27 	vadd.f32	s15, s14, s15
90014e5c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014e60:	3f01      	subs	r7, #1
90014e62:	e757      	b.n	90014d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90014e64:	4299      	cmp	r1, r3
90014e66:	dc13      	bgt.n	90014e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90014e68:	429a      	cmp	r2, r3
90014e6a:	da14      	bge.n	90014e96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90014e6c:	2502      	movs	r5, #2
90014e6e:	2703      	movs	r7, #3
90014e70:	f04f 0800 	mov.w	r8, #0
90014e74:	46a9      	mov	r9, r5
90014e76:	f04f 0a01 	mov.w	sl, #1
90014e7a:	e6ef      	b.n	90014c5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014e7c:	2501      	movs	r5, #1
90014e7e:	2700      	movs	r7, #0
90014e80:	46a9      	mov	r9, r5
90014e82:	46b8      	mov	r8, r7
90014e84:	f04f 0a02 	mov.w	sl, #2
90014e88:	e6e8      	b.n	90014c5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014e8a:	2501      	movs	r5, #1
90014e8c:	2702      	movs	r7, #2
90014e8e:	e6e1      	b.n	90014c54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90014e90:	2500      	movs	r5, #0
90014e92:	2701      	movs	r7, #1
90014e94:	e7f4      	b.n	90014e80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90014e96:	2702      	movs	r7, #2
90014e98:	2503      	movs	r5, #3
90014e9a:	f04f 0900 	mov.w	r9, #0
90014e9e:	46b8      	mov	r8, r7
90014ea0:	e7e9      	b.n	90014e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90014ea2:	4613      	mov	r3, r2
90014ea4:	e728      	b.n	90014cf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90014ea6:	bf00      	nop
90014ea8:	24021984 	.word	0x24021984
90014eac:	fffd8f01 	.word	0xfffd8f01
90014eb0:	00027100 	.word	0x00027100
90014eb4:	0004e1ff 	.word	0x0004e1ff
90014eb8:	0004e1fe 	.word	0x0004e1fe
90014ebc:	2402198c 	.word	0x2402198c
90014ec0:	4613      	mov	r3, r2
90014ec2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90014ec4:	469e      	mov	lr, r3
90014ec6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90014ec8:	469c      	mov	ip, r3
90014eca:	9111      	str	r1, [sp, #68]	@ 0x44
90014ecc:	f04f 0900 	mov.w	r9, #0
90014ed0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90014ed4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90014ed8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90014edc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90014ee0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90014ee4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90014ee8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90014eec:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90014ef0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90014ef4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90014ef8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90014efc:	f1bc 0f00 	cmp.w	ip, #0
90014f00:	d147      	bne.n	90014f92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90014f02:	eb03 0c07 	add.w	ip, r3, r7
90014f06:	1ad7      	subs	r7, r2, r3
90014f08:	f1b9 0f00 	cmp.w	r9, #0
90014f0c:	d009      	beq.n	90014f22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90014f0e:	9029      	str	r0, [sp, #164]	@ 0xa4
90014f10:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90014f14:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90014f18:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90014f1c:	912d      	str	r1, [sp, #180]	@ 0xb4
90014f1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90014f22:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90014f24:	f04f 0800 	mov.w	r8, #0
90014f28:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014f2c:	9111      	str	r1, [sp, #68]	@ 0x44
90014f2e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90014f32:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90014f36:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90014f3a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90014f3e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90014f42:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90014f46:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90014f4a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90014f4e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90014f52:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90014f56:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90014f5a:	f1be 0f00 	cmp.w	lr, #0
90014f5e:	d031      	beq.n	90014fc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90014f60:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014f62:	4450      	add	r0, sl
90014f64:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014f68:	4431      	add	r1, r6
90014f6a:	ee37 7a04 	vadd.f32	s14, s14, s8
90014f6e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90014f72:	4549      	cmp	r1, r9
90014f74:	db08      	blt.n	90014f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90014f76:	ee77 7a85 	vadd.f32	s15, s15, s10
90014f7a:	3001      	adds	r0, #1
90014f7c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90014f80:	eba1 0109 	sub.w	r1, r1, r9
90014f84:	ee37 7a06 	vadd.f32	s14, s14, s12
90014f88:	f10e 3eff 	add.w	lr, lr, #4294967295
90014f8c:	f04f 0801 	mov.w	r8, #1
90014f90:	e7e3      	b.n	90014f5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90014f92:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014f94:	4450      	add	r0, sl
90014f96:	ee37 7a24 	vadd.f32	s14, s14, s9
90014f9a:	4431      	add	r1, r6
90014f9c:	ee77 7a84 	vadd.f32	s15, s15, s8
90014fa0:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014fa4:	4541      	cmp	r1, r8
90014fa6:	db08      	blt.n	90014fba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014fa8:	ee76 6a85 	vadd.f32	s13, s13, s10
90014fac:	3001      	adds	r0, #1
90014fae:	ee37 7a25 	vadd.f32	s14, s14, s11
90014fb2:	eba1 0108 	sub.w	r1, r1, r8
90014fb6:	ee77 7a86 	vadd.f32	s15, s15, s12
90014fba:	f10c 3cff 	add.w	ip, ip, #4294967295
90014fbe:	f04f 0901 	mov.w	r9, #1
90014fc2:	e79b      	b.n	90014efc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014fc4:	449c      	add	ip, r3
90014fc6:	1aff      	subs	r7, r7, r3
90014fc8:	f1b8 0f00 	cmp.w	r8, #0
90014fcc:	d009      	beq.n	90014fe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90014fce:	9019      	str	r0, [sp, #100]	@ 0x64
90014fd0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014fd4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014fd8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014fdc:	911d      	str	r1, [sp, #116]	@ 0x74
90014fde:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014fe2:	1ad2      	subs	r2, r2, r3
90014fe4:	e68b      	b.n	90014cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014fe6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014fe8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90014fea:	2b00      	cmp	r3, #0
90014fec:	f000 80d1 	beq.w	90015192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90014ff0:	ad19      	add	r5, sp, #100	@ 0x64
90014ff2:	ac39      	add	r4, sp, #228	@ 0xe4
90014ff4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014ff6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014ffa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014ffe:	930c      	str	r3, [sp, #48]	@ 0x30
90015000:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015002:	6963      	ldr	r3, [r4, #20]
90015004:	440b      	add	r3, r1
90015006:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001500a:	4408      	add	r0, r1
9001500c:	b200      	sxth	r0, r0
9001500e:	4283      	cmp	r3, r0
90015010:	900d      	str	r0, [sp, #52]	@ 0x34
90015012:	f280 80c1 	bge.w	90015198 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90015016:	428b      	cmp	r3, r1
90015018:	da08      	bge.n	9001502c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001501a:	2a00      	cmp	r2, #0
9001501c:	dd06      	ble.n	9001502c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001501e:	1acb      	subs	r3, r1, r3
90015020:	429a      	cmp	r2, r3
90015022:	f2c0 80bb 	blt.w	9001519c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90015026:	2b00      	cmp	r3, #0
90015028:	f300 80b9 	bgt.w	9001519e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
9001502c:	6967      	ldr	r7, [r4, #20]
9001502e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015032:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015034:	443b      	add	r3, r7
90015036:	461f      	mov	r7, r3
90015038:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001503a:	1bdf      	subs	r7, r3, r7
9001503c:	4297      	cmp	r7, r2
9001503e:	bfa8      	it	ge
90015040:	4617      	movge	r7, r2
90015042:	2f00      	cmp	r7, #0
90015044:	f340 813c 	ble.w	900152c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015048:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001504a:	6829      	ldr	r1, [r5, #0]
9001504c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015050:	f9bb 3000 	ldrsh.w	r3, [fp]
90015054:	4411      	add	r1, r2
90015056:	6820      	ldr	r0, [r4, #0]
90015058:	4299      	cmp	r1, r3
9001505a:	dd1a      	ble.n	90015092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001505c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015060:	4402      	add	r2, r0
90015062:	440b      	add	r3, r1
90015064:	b21b      	sxth	r3, r3
90015066:	429a      	cmp	r2, r3
90015068:	dc13      	bgt.n	90015092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001506a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001506c:	a912      	add	r1, sp, #72	@ 0x48
9001506e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015070:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015072:	681b      	ldr	r3, [r3, #0]
90015074:	9206      	str	r2, [sp, #24]
90015076:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015078:	9500      	str	r5, [sp, #0]
9001507a:	9205      	str	r2, [sp, #20]
9001507c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001507e:	e9cd b203 	strd	fp, r2, [sp, #12]
90015082:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015084:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015088:	aa49      	add	r2, sp, #292	@ 0x124
9001508a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
9001508e:	4623      	mov	r3, r4
90015090:	47c8      	blx	r9
90015092:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015096:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001509a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
9001509e:	ee37 7a27 	vadd.f32	s14, s14, s15
900150a2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900150a6:	68a1      	ldr	r1, [r4, #8]
900150a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
900150ac:	ed94 6a08 	vldr	s12, [r4, #32]
900150b0:	edd4 6a07 	vldr	s13, [r4, #28]
900150b4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900150b8:	ee76 6a86 	vadd.f32	s13, s13, s12
900150bc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900150c0:	e9d4 2300 	ldrd	r2, r3, [r4]
900150c4:	edc4 6a07 	vstr	s13, [r4, #28]
900150c8:	441a      	add	r2, r3
900150ca:	6963      	ldr	r3, [r4, #20]
900150cc:	3301      	adds	r3, #1
900150ce:	6022      	str	r2, [r4, #0]
900150d0:	6163      	str	r3, [r4, #20]
900150d2:	69a3      	ldr	r3, [r4, #24]
900150d4:	3b01      	subs	r3, #1
900150d6:	61a3      	str	r3, [r4, #24]
900150d8:	6923      	ldr	r3, [r4, #16]
900150da:	440b      	add	r3, r1
900150dc:	68e1      	ldr	r1, [r4, #12]
900150de:	428b      	cmp	r3, r1
900150e0:	6123      	str	r3, [r4, #16]
900150e2:	db15      	blt.n	90015110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900150e4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900150e8:	3201      	adds	r2, #1
900150ea:	1a5b      	subs	r3, r3, r1
900150ec:	ee76 6a26 	vadd.f32	s13, s12, s13
900150f0:	6022      	str	r2, [r4, #0]
900150f2:	6123      	str	r3, [r4, #16]
900150f4:	edc4 6a07 	vstr	s13, [r4, #28]
900150f8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900150fc:	ee36 7a87 	vadd.f32	s14, s13, s14
90015100:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015104:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015108:	ee77 7a27 	vadd.f32	s15, s14, s15
9001510c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015110:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015114:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015118:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001511c:	ee37 7a27 	vadd.f32	s14, s14, s15
90015120:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015124:	68a9      	ldr	r1, [r5, #8]
90015126:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001512a:	ed95 6a08 	vldr	s12, [r5, #32]
9001512e:	edd5 6a07 	vldr	s13, [r5, #28]
90015132:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015136:	ee76 6a86 	vadd.f32	s13, s13, s12
9001513a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001513e:	e9d5 2300 	ldrd	r2, r3, [r5]
90015142:	edc5 6a07 	vstr	s13, [r5, #28]
90015146:	441a      	add	r2, r3
90015148:	696b      	ldr	r3, [r5, #20]
9001514a:	3301      	adds	r3, #1
9001514c:	602a      	str	r2, [r5, #0]
9001514e:	616b      	str	r3, [r5, #20]
90015150:	69ab      	ldr	r3, [r5, #24]
90015152:	3b01      	subs	r3, #1
90015154:	61ab      	str	r3, [r5, #24]
90015156:	692b      	ldr	r3, [r5, #16]
90015158:	440b      	add	r3, r1
9001515a:	68e9      	ldr	r1, [r5, #12]
9001515c:	428b      	cmp	r3, r1
9001515e:	612b      	str	r3, [r5, #16]
90015160:	db15      	blt.n	9001518e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90015162:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015166:	3201      	adds	r2, #1
90015168:	1a5b      	subs	r3, r3, r1
9001516a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001516e:	602a      	str	r2, [r5, #0]
90015170:	612b      	str	r3, [r5, #16]
90015172:	edc5 6a07 	vstr	s13, [r5, #28]
90015176:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001517a:	ee36 7a87 	vadd.f32	s14, s13, s14
9001517e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015182:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015186:	ee77 7a27 	vadd.f32	s15, s14, s15
9001518a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001518e:	3f01      	subs	r7, #1
90015190:	e757      	b.n	90015042 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90015192:	ad39      	add	r5, sp, #228	@ 0xe4
90015194:	ac19      	add	r4, sp, #100	@ 0x64
90015196:	e72d      	b.n	90014ff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90015198:	4613      	mov	r3, r2
9001519a:	e744      	b.n	90015026 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
9001519c:	4613      	mov	r3, r2
9001519e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
900151a0:	469e      	mov	lr, r3
900151a2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
900151a6:	461f      	mov	r7, r3
900151a8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
900151ac:	f04f 0900 	mov.w	r9, #0
900151b0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
900151b4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
900151b8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
900151bc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
900151c0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
900151c4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
900151c6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
900151ca:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900151ce:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900151d2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900151d6:	960e      	str	r6, [sp, #56]	@ 0x38
900151d8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900151dc:	2f00      	cmp	r7, #0
900151de:	d146      	bne.n	9001526e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900151e0:	449c      	add	ip, r3
900151e2:	1ad7      	subs	r7, r2, r3
900151e4:	f1b9 0f00 	cmp.w	r9, #0
900151e8:	d009      	beq.n	900151fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900151ea:	9039      	str	r0, [sp, #228]	@ 0xe4
900151ec:	913d      	str	r1, [sp, #244]	@ 0xf4
900151ee:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900151f2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900151f6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900151fa:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900151fe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015200:	f04f 0800 	mov.w	r8, #0
90015204:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015208:	910e      	str	r1, [sp, #56]	@ 0x38
9001520a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001520e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015212:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015216:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
9001521a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001521e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015222:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015226:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
9001522a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001522e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015232:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015236:	f1be 0f00 	cmp.w	lr, #0
9001523a:	d030      	beq.n	9001529e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9001523c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001523e:	4450      	add	r0, sl
90015240:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015244:	4431      	add	r1, r6
90015246:	ee37 7a04 	vadd.f32	s14, s14, s8
9001524a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001524e:	4549      	cmp	r1, r9
90015250:	db08      	blt.n	90015264 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90015252:	ee77 7a85 	vadd.f32	s15, s15, s10
90015256:	3001      	adds	r0, #1
90015258:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001525c:	eba1 0109 	sub.w	r1, r1, r9
90015260:	ee37 7a06 	vadd.f32	s14, s14, s12
90015264:	f10e 3eff 	add.w	lr, lr, #4294967295
90015268:	f04f 0801 	mov.w	r8, #1
9001526c:	e7e3      	b.n	90015236 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001526e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015270:	4450      	add	r0, sl
90015272:	ee37 7a24 	vadd.f32	s14, s14, s9
90015276:	4431      	add	r1, r6
90015278:	ee77 7a84 	vadd.f32	s15, s15, s8
9001527c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015280:	4541      	cmp	r1, r8
90015282:	db08      	blt.n	90015296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90015284:	ee76 6a85 	vadd.f32	s13, s13, s10
90015288:	3001      	adds	r0, #1
9001528a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001528e:	eba1 0108 	sub.w	r1, r1, r8
90015292:	ee77 7a86 	vadd.f32	s15, s15, s12
90015296:	3f01      	subs	r7, #1
90015298:	f04f 0901 	mov.w	r9, #1
9001529c:	e79e      	b.n	900151dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001529e:	449c      	add	ip, r3
900152a0:	1aff      	subs	r7, r7, r3
900152a2:	f1b8 0f00 	cmp.w	r8, #0
900152a6:	d009      	beq.n	900152bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900152a8:	9019      	str	r0, [sp, #100]	@ 0x64
900152aa:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900152ae:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900152b2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900152b6:	911d      	str	r1, [sp, #116]	@ 0x74
900152b8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900152bc:	1ad2      	subs	r2, r2, r3
900152be:	e6b5      	b.n	9001502c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900152c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900152c2:	681b      	ldr	r3, [r3, #0]
900152c4:	b923      	cbnz	r3, 900152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900152c6:	4b04      	ldr	r3, [pc, #16]	@ (900152d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900152c8:	6818      	ldr	r0, [r3, #0]
900152ca:	6803      	ldr	r3, [r0, #0]
900152cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900152ce:	4798      	blx	r3
900152d0:	b05b      	add	sp, #364	@ 0x16c
900152d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900152d6:	bf00      	nop
900152d8:	2402198c 	.word	0x2402198c

900152dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900152dc:	b570      	push	{r4, r5, r6, lr}
900152de:	4604      	mov	r4, r0
900152e0:	2500      	movs	r5, #0
900152e2:	9805      	ldr	r0, [sp, #20]
900152e4:	f89d 601c 	ldrb.w	r6, [sp, #28]
900152e8:	6061      	str	r1, [r4, #4]
900152ea:	8263      	strh	r3, [r4, #18]
900152ec:	f89d 1010 	ldrb.w	r1, [sp, #16]
900152f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900152f4:	8025      	strh	r5, [r4, #0]
900152f6:	7221      	strb	r1, [r4, #8]
900152f8:	7266      	strb	r6, [r4, #9]
900152fa:	60e0      	str	r0, [r4, #12]
900152fc:	8222      	strh	r2, [r4, #16]
900152fe:	82a3      	strh	r3, [r4, #20]
90015300:	82e5      	strh	r5, [r4, #22]
90015302:	8325      	strh	r5, [r4, #24]
90015304:	8365      	strh	r5, [r4, #26]
90015306:	83a5      	strh	r5, [r4, #28]
90015308:	83e5      	strh	r5, [r4, #30]
9001530a:	8425      	strh	r5, [r4, #32]
9001530c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90015310:	b32e      	cbz	r6, 9001535e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015312:	6803      	ldr	r3, [r0, #0]
90015314:	695b      	ldr	r3, [r3, #20]
90015316:	4798      	blx	r3
90015318:	4606      	mov	r6, r0
9001531a:	b300      	cbz	r0, 9001535e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001531c:	68e0      	ldr	r0, [r4, #12]
9001531e:	4631      	mov	r1, r6
90015320:	6803      	ldr	r3, [r0, #0]
90015322:	68db      	ldr	r3, [r3, #12]
90015324:	4798      	blx	r3
90015326:	4605      	mov	r5, r0
90015328:	b1c8      	cbz	r0, 9001535e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001532a:	7b43      	ldrb	r3, [r0, #13]
9001532c:	7a82      	ldrb	r2, [r0, #10]
9001532e:	005b      	lsls	r3, r3, #1
90015330:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015334:	4313      	orrs	r3, r2
90015336:	8423      	strh	r3, [r4, #32]
90015338:	7a63      	ldrb	r3, [r4, #9]
9001533a:	2b06      	cmp	r3, #6
9001533c:	d10f      	bne.n	9001535e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001533e:	68e0      	ldr	r0, [r4, #12]
90015340:	462a      	mov	r2, r5
90015342:	4631      	mov	r1, r6
90015344:	6803      	ldr	r3, [r0, #0]
90015346:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015348:	4798      	blx	r3
9001534a:	7b6b      	ldrb	r3, [r5, #13]
9001534c:	005b      	lsls	r3, r3, #1
9001534e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015352:	7aab      	ldrb	r3, [r5, #10]
90015354:	4313      	orrs	r3, r2
90015356:	4418      	add	r0, r3
90015358:	8c23      	ldrh	r3, [r4, #32]
9001535a:	4418      	add	r0, r3
9001535c:	8420      	strh	r0, [r4, #32]
9001535e:	4620      	mov	r0, r4
90015360:	bd70      	pop	{r4, r5, r6, pc}

90015362 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90015362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015366:	2400      	movs	r4, #0
90015368:	b085      	sub	sp, #20
9001536a:	4681      	mov	r9, r0
9001536c:	4688      	mov	r8, r1
9001536e:	4692      	mov	sl, r2
90015370:	469b      	mov	fp, r3
90015372:	4627      	mov	r7, r4
90015374:	4625      	mov	r5, r4
90015376:	4626      	mov	r6, r4
90015378:	4554      	cmp	r4, sl
9001537a:	da2a      	bge.n	900153d2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001537c:	2300      	movs	r3, #0
9001537e:	9303      	str	r3, [sp, #12]
90015380:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015384:	429d      	cmp	r5, r3
90015386:	d004      	beq.n	90015392 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90015388:	f242 030b 	movw	r3, #8203	@ 0x200b
9001538c:	429d      	cmp	r5, r3
9001538e:	bf18      	it	ne
90015390:	462f      	movne	r7, r5
90015392:	ab03      	add	r3, sp, #12
90015394:	4642      	mov	r2, r8
90015396:	4659      	mov	r1, fp
90015398:	4648      	mov	r0, r9
9001539a:	f003 fd05 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001539e:	4605      	mov	r5, r0
900153a0:	b1b8      	cbz	r0, 900153d2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900153a2:	280a      	cmp	r0, #10
900153a4:	d015      	beq.n	900153d2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900153a6:	9a03      	ldr	r2, [sp, #12]
900153a8:	b18a      	cbz	r2, 900153ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900153aa:	7b50      	ldrb	r0, [r2, #13]
900153ac:	4639      	mov	r1, r7
900153ae:	7a93      	ldrb	r3, [r2, #10]
900153b0:	0040      	lsls	r0, r0, #1
900153b2:	8895      	ldrh	r5, [r2, #4]
900153b4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900153b8:	4303      	orrs	r3, r0
900153ba:	4640      	mov	r0, r8
900153bc:	9301      	str	r3, [sp, #4]
900153be:	f8d8 3000 	ldr.w	r3, [r8]
900153c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900153c4:	4798      	blx	r3
900153c6:	9b01      	ldr	r3, [sp, #4]
900153c8:	4418      	add	r0, r3
900153ca:	4406      	add	r6, r0
900153cc:	b2b6      	uxth	r6, r6
900153ce:	3401      	adds	r4, #1
900153d0:	e7d2      	b.n	90015378 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900153d2:	4630      	mov	r0, r6
900153d4:	b005      	add	sp, #20
900153d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900153da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900153da:	2a02      	cmp	r2, #2
900153dc:	b530      	push	{r4, r5, lr}
900153de:	d011      	beq.n	90015404 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900153e0:	2a03      	cmp	r2, #3
900153e2:	d01c      	beq.n	9001541e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900153e4:	2a01      	cmp	r2, #1
900153e6:	d10c      	bne.n	90015402 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900153e8:	888b      	ldrh	r3, [r1, #4]
900153ea:	8801      	ldrh	r1, [r0, #0]
900153ec:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900153f0:	1a5b      	subs	r3, r3, r1
900153f2:	8844      	ldrh	r4, [r0, #2]
900153f4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900153f8:	1a9b      	subs	r3, r3, r2
900153fa:	8004      	strh	r4, [r0, #0]
900153fc:	8081      	strh	r1, [r0, #4]
900153fe:	8043      	strh	r3, [r0, #2]
90015400:	80c2      	strh	r2, [r0, #6]
90015402:	bd30      	pop	{r4, r5, pc}
90015404:	88cb      	ldrh	r3, [r1, #6]
90015406:	8842      	ldrh	r2, [r0, #2]
90015408:	1a9b      	subs	r3, r3, r2
9001540a:	88c2      	ldrh	r2, [r0, #6]
9001540c:	1a9b      	subs	r3, r3, r2
9001540e:	888a      	ldrh	r2, [r1, #4]
90015410:	8801      	ldrh	r1, [r0, #0]
90015412:	8043      	strh	r3, [r0, #2]
90015414:	1a52      	subs	r2, r2, r1
90015416:	8881      	ldrh	r1, [r0, #4]
90015418:	1a52      	subs	r2, r2, r1
9001541a:	8002      	strh	r2, [r0, #0]
9001541c:	e7f1      	b.n	90015402 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001541e:	88cb      	ldrh	r3, [r1, #6]
90015420:	8841      	ldrh	r1, [r0, #2]
90015422:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90015426:	1a5b      	subs	r3, r3, r1
90015428:	f9b0 5000 	ldrsh.w	r5, [r0]
9001542c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015430:	1a9b      	subs	r3, r3, r2
90015432:	8045      	strh	r5, [r0, #2]
90015434:	8082      	strh	r2, [r0, #4]
90015436:	8003      	strh	r3, [r0, #0]
90015438:	80c4      	strh	r4, [r0, #6]
9001543a:	e7e2      	b.n	90015402 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

9001543c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
9001543c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015440:	b09f      	sub	sp, #124	@ 0x7c
90015442:	920f      	str	r2, [sp, #60]	@ 0x3c
90015444:	9312      	str	r3, [sp, #72]	@ 0x48
90015446:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015448:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001544a:	8812      	ldrh	r2, [r2, #0]
9001544c:	889b      	ldrh	r3, [r3, #4]
9001544e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90015450:	4413      	add	r3, r2
90015452:	900e      	str	r0, [sp, #56]	@ 0x38
90015454:	6828      	ldr	r0, [r5, #0]
90015456:	b21b      	sxth	r3, r3
90015458:	9117      	str	r1, [sp, #92]	@ 0x5c
9001545a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
9001545e:	9311      	str	r3, [sp, #68]	@ 0x44
90015460:	6803      	ldr	r3, [r0, #0]
90015462:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90015466:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90015468:	4798      	blx	r3
9001546a:	682b      	ldr	r3, [r5, #0]
9001546c:	9013      	str	r0, [sp, #76]	@ 0x4c
9001546e:	7b1a      	ldrb	r2, [r3, #12]
90015470:	7adb      	ldrb	r3, [r3, #11]
90015472:	9215      	str	r2, [sp, #84]	@ 0x54
90015474:	9316      	str	r3, [sp, #88]	@ 0x58
90015476:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001547a:	2c00      	cmp	r4, #0
9001547c:	d067      	beq.n	9001554e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9001547e:	7c2b      	ldrb	r3, [r5, #16]
90015480:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90015482:	2b06      	cmp	r3, #6
90015484:	bf14      	ite	ne
90015486:	2301      	movne	r3, #1
90015488:	2302      	moveq	r3, #2
9001548a:	4413      	add	r3, r2
9001548c:	f04f 0900 	mov.w	r9, #0
90015490:	9310      	str	r3, [sp, #64]	@ 0x40
90015492:	464c      	mov	r4, r9
90015494:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90015498:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
9001549c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001549e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900154a0:	4293      	cmp	r3, r2
900154a2:	f280 808b 	bge.w	900155bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900154a6:	2300      	movs	r3, #0
900154a8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
900154ac:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
900154b0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900154b4:	429c      	cmp	r4, r3
900154b6:	d006      	beq.n	900154c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
900154b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900154ba:	f242 020b 	movw	r2, #8203	@ 0x200b
900154be:	4294      	cmp	r4, r2
900154c0:	bf18      	it	ne
900154c2:	4623      	movne	r3, r4
900154c4:	930c      	str	r3, [sp, #48]	@ 0x30
900154c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900154c8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
900154ca:	682a      	ldr	r2, [r5, #0]
900154cc:	428b      	cmp	r3, r1
900154ce:	db40      	blt.n	90015552 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900154d0:	6813      	ldr	r3, [r2, #0]
900154d2:	4610      	mov	r0, r2
900154d4:	695b      	ldr	r3, [r3, #20]
900154d6:	4798      	blx	r3
900154d8:	4604      	mov	r4, r0
900154da:	6828      	ldr	r0, [r5, #0]
900154dc:	aa1d      	add	r2, sp, #116	@ 0x74
900154de:	4621      	mov	r1, r4
900154e0:	6803      	ldr	r3, [r0, #0]
900154e2:	689f      	ldr	r7, [r3, #8]
900154e4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900154e8:	47b8      	blx	r7
900154ea:	901c      	str	r0, [sp, #112]	@ 0x70
900154ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900154f0:	429c      	cmp	r4, r3
900154f2:	f000 80eb 	beq.w	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900154f6:	f242 030b 	movw	r3, #8203	@ 0x200b
900154fa:	429c      	cmp	r4, r3
900154fc:	f000 80e6 	beq.w	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015500:	2c00      	cmp	r4, #0
90015502:	f000 810d 	beq.w	90015720 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90015506:	2c0a      	cmp	r4, #10
90015508:	d05e      	beq.n	900155c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001550a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001550c:	b36a      	cbz	r2, 9001556a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001550e:	8894      	ldrh	r4, [r2, #4]
90015510:	f1bb 0f00 	cmp.w	fp, #0
90015514:	d03a      	beq.n	9001558c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90015516:	f892 900d 	ldrb.w	r9, [r2, #13]
9001551a:	f1bb 0f01 	cmp.w	fp, #1
9001551e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90015522:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90015526:	f892 900a 	ldrb.w	r9, [r2, #10]
9001552a:	ea49 0903 	orr.w	r9, r9, r3
9001552e:	d133      	bne.n	90015598 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90015530:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015532:	eba6 0609 	sub.w	r6, r6, r9
90015536:	2b00      	cmp	r3, #0
90015538:	d14d      	bne.n	900155d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001553a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9001553c:	eb09 0306 	add.w	r3, r9, r6
90015540:	4413      	add	r3, r2
90015542:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015544:	f9b2 2000 	ldrsh.w	r2, [r2]
90015548:	4293      	cmp	r3, r2
9001554a:	da4e      	bge.n	900155ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
9001554c:	e036      	b.n	900155bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001554e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90015550:	e79c      	b.n	9001548c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90015552:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90015556:	4659      	mov	r1, fp
90015558:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001555a:	9301      	str	r3, [sp, #4]
9001555c:	ab1d      	add	r3, sp, #116	@ 0x74
9001555e:	9300      	str	r3, [sp, #0]
90015560:	ab1c      	add	r3, sp, #112	@ 0x70
90015562:	f003 fc6a 	bl	90018e3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90015566:	4604      	mov	r4, r0
90015568:	e7c0      	b.n	900154ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001556a:	6828      	ldr	r0, [r5, #0]
9001556c:	6803      	ldr	r3, [r0, #0]
9001556e:	691b      	ldr	r3, [r3, #16]
90015570:	4798      	blx	r3
90015572:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015576:	4298      	cmp	r0, r3
90015578:	f000 80a8 	beq.w	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001557c:	f242 030b 	movw	r3, #8203	@ 0x200b
90015580:	4298      	cmp	r0, r3
90015582:	f000 80a3 	beq.w	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015586:	f1bb 0f00 	cmp.w	fp, #0
9001558a:	d100      	bne.n	9001558e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
9001558c:	444e      	add	r6, r9
9001558e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90015590:	2a00      	cmp	r2, #0
90015592:	d1c0      	bne.n	90015516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90015594:	4691      	mov	r9, r2
90015596:	e099      	b.n	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015598:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001559a:	2b00      	cmp	r3, #0
9001559c:	f000 80c2 	beq.w	90015724 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
900155a0:	f1bb 0f00 	cmp.w	fp, #0
900155a4:	d117      	bne.n	900155d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900155a6:	6828      	ldr	r0, [r5, #0]
900155a8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900155aa:	6803      	ldr	r3, [r0, #0]
900155ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900155ae:	4798      	blx	r3
900155b0:	4406      	add	r6, r0
900155b2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900155b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900155b6:	1af3      	subs	r3, r6, r3
900155b8:	4293      	cmp	r3, r2
900155ba:	dd16      	ble.n	900155ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900155bc:	2c00      	cmp	r4, #0
900155be:	f000 80af 	beq.w	90015720 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900155c2:	2c0a      	cmp	r4, #10
900155c4:	f040 809d 	bne.w	90015702 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900155c8:	240a      	movs	r4, #10
900155ca:	fab4 f084 	clz	r0, r4
900155ce:	0940      	lsrs	r0, r0, #5
900155d0:	b01f      	add	sp, #124	@ 0x7c
900155d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900155d6:	6828      	ldr	r0, [r5, #0]
900155d8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900155da:	6803      	ldr	r3, [r0, #0]
900155dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900155de:	4798      	blx	r3
900155e0:	f1bb 0f01 	cmp.w	fp, #1
900155e4:	eba6 0600 	sub.w	r6, r6, r0
900155e8:	d0a7      	beq.n	9001553a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900155ea:	981c      	ldr	r0, [sp, #112]	@ 0x70
900155ec:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900155ee:	f990 1009 	ldrsb.w	r1, [r0, #9]
900155f2:	f9b3 8000 	ldrsh.w	r8, [r3]
900155f6:	7b43      	ldrb	r3, [r0, #13]
900155f8:	4431      	add	r1, r6
900155fa:	015b      	lsls	r3, r3, #5
900155fc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015600:	7983      	ldrb	r3, [r0, #6]
90015602:	4313      	orrs	r3, r2
90015604:	440b      	add	r3, r1
90015606:	4543      	cmp	r3, r8
90015608:	db60      	blt.n	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001560a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001560c:	4299      	cmp	r1, r3
9001560e:	da5d      	bge.n	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015610:	6828      	ldr	r0, [r5, #0]
90015612:	45b0      	cmp	r8, r6
90015614:	6803      	ldr	r3, [r0, #0]
90015616:	bfcc      	ite	gt
90015618:	eba8 0806 	subgt.w	r8, r8, r6
9001561c:	f04f 0800 	movle.w	r8, #0
90015620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015622:	bfc8      	it	gt
90015624:	fa1f f888 	uxthgt.w	r8, r8
90015628:	4798      	blx	r3
9001562a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001562c:	7b53      	ldrb	r3, [r2, #13]
9001562e:	00d9      	lsls	r1, r3, #3
90015630:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90015634:	7a11      	ldrb	r1, [r2, #8]
90015636:	4339      	orrs	r1, r7
90015638:	065f      	lsls	r7, r3, #25
9001563a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001563c:	bf48      	it	mi
9001563e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90015642:	4407      	add	r7, r0
90015644:	bf48      	it	mi
90015646:	b209      	sxthmi	r1, r1
90015648:	1a7f      	subs	r7, r7, r1
9001564a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
9001564c:	b2bf      	uxth	r7, r7
9001564e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90015652:	fa0f fa87 	sxth.w	sl, r7
90015656:	4551      	cmp	r1, sl
90015658:	dd3c      	ble.n	900156d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001565a:	011b      	lsls	r3, r3, #4
9001565c:	79d0      	ldrb	r0, [r2, #7]
9001565e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015662:	4303      	orrs	r3, r0
90015664:	449a      	add	sl, r3
90015666:	4551      	cmp	r1, sl
90015668:	dc30      	bgt.n	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001566a:	1bcf      	subs	r7, r1, r7
9001566c:	468a      	mov	sl, r1
9001566e:	b23f      	sxth	r7, r7
90015670:	9219      	str	r2, [sp, #100]	@ 0x64
90015672:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90015674:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90015676:	6828      	ldr	r0, [r5, #0]
90015678:	2a00      	cmp	r2, #0
9001567a:	d12d      	bne.n	900156d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
9001567c:	9318      	str	r3, [sp, #96]	@ 0x60
9001567e:	b2bf      	uxth	r7, r7
90015680:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015682:	6819      	ldr	r1, [r3, #0]
90015684:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90015686:	6801      	ldr	r1, [r0, #0]
90015688:	9314      	str	r3, [sp, #80]	@ 0x50
9001568a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
9001568c:	4788      	blx	r1
9001568e:	79a9      	ldrb	r1, [r5, #6]
90015690:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90015692:	910b      	str	r1, [sp, #44]	@ 0x2c
90015694:	7ba9      	ldrb	r1, [r5, #14]
90015696:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90015698:	910a      	str	r1, [sp, #40]	@ 0x28
9001569a:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
9001569e:	9109      	str	r1, [sp, #36]	@ 0x24
900156a0:	68a9      	ldr	r1, [r5, #8]
900156a2:	9306      	str	r3, [sp, #24]
900156a4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900156a6:	9205      	str	r2, [sp, #20]
900156a8:	9304      	str	r3, [sp, #16]
900156aa:	f8cd a004 	str.w	sl, [sp, #4]
900156ae:	e9cd 8702 	strd	r8, r7, [sp, #8]
900156b2:	44b0      	add	r8, r6
900156b4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
900156b6:	fa0f f388 	sxth.w	r3, r8
900156ba:	9300      	str	r3, [sp, #0]
900156bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900156be:	e9cd 0107 	strd	r0, r1, [sp, #28]
900156c2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900156c4:	681a      	ldr	r2, [r3, #0]
900156c6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900156c8:	685b      	ldr	r3, [r3, #4]
900156ca:	47b8      	blx	r7
900156cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900156ce:	3301      	adds	r3, #1
900156d0:	930d      	str	r3, [sp, #52]	@ 0x34
900156d2:	e6e3      	b.n	9001549c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900156d4:	2700      	movs	r7, #0
900156d6:	e7cb      	b.n	90015670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900156d8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900156da:	f8d2 c008 	ldr.w	ip, [r2, #8]
900156de:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900156e0:	f8dc 1000 	ldr.w	r1, [ip]
900156e4:	e9cd 6204 	strd	r6, r2, [sp, #16]
900156e8:	79aa      	ldrb	r2, [r5, #6]
900156ea:	9203      	str	r2, [sp, #12]
900156ec:	7baa      	ldrb	r2, [r5, #14]
900156ee:	9202      	str	r2, [sp, #8]
900156f0:	68aa      	ldr	r2, [r5, #8]
900156f2:	e9cd 0200 	strd	r0, r2, [sp]
900156f6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900156f8:	4660      	mov	r0, ip
900156fa:	688f      	ldr	r7, [r1, #8]
900156fc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900156fe:	47b8      	blx	r7
90015700:	e7e4      	b.n	900156cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015702:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90015704:	3501      	adds	r5, #1
90015706:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90015708:	429d      	cmp	r5, r3
9001570a:	f6bf af5e 	bge.w	900155ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001570e:	4659      	mov	r1, fp
90015710:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90015712:	f7f0 f917 	bl	90005944 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015716:	4604      	mov	r4, r0
90015718:	b110      	cbz	r0, 90015720 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001571a:	280a      	cmp	r0, #10
9001571c:	d1f2      	bne.n	90015704 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
9001571e:	e753      	b.n	900155c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90015720:	2400      	movs	r4, #0
90015722:	e752      	b.n	900155ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90015724:	f1bb 0f00 	cmp.w	fp, #0
90015728:	f43f af43 	beq.w	900155b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
9001572c:	e75d      	b.n	900155ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

9001572e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001572e:	b530      	push	{r4, r5, lr}
90015730:	8ac4      	ldrh	r4, [r0, #22]
90015732:	8b45      	ldrh	r5, [r0, #26]
90015734:	8343      	strh	r3, [r0, #26]
90015736:	442c      	add	r4, r5
90015738:	1ae4      	subs	r4, r4, r3
9001573a:	8b83      	ldrh	r3, [r0, #28]
9001573c:	82c4      	strh	r4, [r0, #22]
9001573e:	8b04      	ldrh	r4, [r0, #24]
90015740:	4422      	add	r2, r4
90015742:	440c      	add	r4, r1
90015744:	1a59      	subs	r1, r3, r1
90015746:	83c2      	strh	r2, [r0, #30]
90015748:	8304      	strh	r4, [r0, #24]
9001574a:	8381      	strh	r1, [r0, #28]
9001574c:	bd30      	pop	{r4, r5, pc}

9001574e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001574e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015752:	4604      	mov	r4, r0
90015754:	8a47      	ldrh	r7, [r0, #18]
90015756:	68c0      	ldr	r0, [r0, #12]
90015758:	b085      	sub	sp, #20
9001575a:	6803      	ldr	r3, [r0, #0]
9001575c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001575e:	4798      	blx	r3
90015760:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90015764:	7a63      	ldrb	r3, [r4, #9]
90015766:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001576a:	3b01      	subs	r3, #1
9001576c:	42b7      	cmp	r7, r6
9001576e:	bfac      	ite	ge
90015770:	f04f 0900 	movge.w	r9, #0
90015774:	f04f 0901 	movlt.w	r9, #1
90015778:	2b05      	cmp	r3, #5
9001577a:	d804      	bhi.n	90015786 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001577c:	e8df f003 	tbb	[pc, r3]
90015780:	470f0854 	.word	0x470f0854
90015784:	4c4c      	.short	0x4c4c
90015786:	2500      	movs	r5, #0
90015788:	46a9      	mov	r9, r5
9001578a:	462e      	mov	r6, r5
9001578c:	462f      	mov	r7, r5
9001578e:	e00e      	b.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015790:	42b7      	cmp	r7, r6
90015792:	f04f 0500 	mov.w	r5, #0
90015796:	bfb4      	ite	lt
90015798:	2600      	movlt	r6, #0
9001579a:	2601      	movge	r6, #1
9001579c:	e7f6      	b.n	9001578c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001579e:	42b7      	cmp	r7, r6
900157a0:	464d      	mov	r5, r9
900157a2:	f04f 0900 	mov.w	r9, #0
900157a6:	bfb4      	ite	lt
900157a8:	2600      	movlt	r6, #0
900157aa:	2601      	movge	r6, #1
900157ac:	464f      	mov	r7, r9
900157ae:	f04f 0800 	mov.w	r8, #0
900157b2:	f8a4 8016 	strh.w	r8, [r4, #22]
900157b6:	f8a4 8018 	strh.w	r8, [r4, #24]
900157ba:	f8cd 8004 	str.w	r8, [sp, #4]
900157be:	2300      	movs	r3, #0
900157c0:	9303      	str	r3, [sp, #12]
900157c2:	8823      	ldrh	r3, [r4, #0]
900157c4:	2b20      	cmp	r3, #32
900157c6:	d033      	beq.n	90015830 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900157c8:	f242 010b 	movw	r1, #8203	@ 0x200b
900157cc:	1a5a      	subs	r2, r3, r1
900157ce:	f1d2 0a00 	rsbs	sl, r2, #0
900157d2:	eb4a 0a02 	adc.w	sl, sl, r2
900157d6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900157da:	4293      	cmp	r3, r2
900157dc:	d008      	beq.n	900157f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900157de:	428b      	cmp	r3, r1
900157e0:	9a01      	ldr	r2, [sp, #4]
900157e2:	bf0e      	itee	eq
900157e4:	f04f 0a01 	moveq.w	sl, #1
900157e8:	461a      	movne	r2, r3
900157ea:	f04f 0a00 	movne.w	sl, #0
900157ee:	9201      	str	r2, [sp, #4]
900157f0:	ab03      	add	r3, sp, #12
900157f2:	68e2      	ldr	r2, [r4, #12]
900157f4:	7a21      	ldrb	r1, [r4, #8]
900157f6:	6860      	ldr	r0, [r4, #4]
900157f8:	f003 fad6 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900157fc:	8020      	strh	r0, [r4, #0]
900157fe:	b9d8      	cbnz	r0, 90015838 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90015800:	8ba2      	ldrh	r2, [r4, #28]
90015802:	2300      	movs	r3, #0
90015804:	4611      	mov	r1, r2
90015806:	4620      	mov	r0, r4
90015808:	f7ff ff91 	bl	9001572e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001580c:	e06e      	b.n	900158ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001580e:	2500      	movs	r5, #0
90015810:	2701      	movs	r7, #1
90015812:	46a9      	mov	r9, r5
90015814:	462e      	mov	r6, r5
90015816:	e7ca      	b.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015818:	42b7      	cmp	r7, r6
9001581a:	f04f 0500 	mov.w	r5, #0
9001581e:	bfb4      	ite	lt
90015820:	2700      	movlt	r7, #0
90015822:	2701      	movge	r7, #1
90015824:	462e      	mov	r6, r5
90015826:	e7c2      	b.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015828:	2500      	movs	r5, #0
9001582a:	2601      	movs	r6, #1
9001582c:	46a9      	mov	r9, r5
9001582e:	e7ad      	b.n	9001578c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90015830:	9301      	str	r3, [sp, #4]
90015832:	f04f 0a01 	mov.w	sl, #1
90015836:	e7db      	b.n	900157f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90015838:	8b63      	ldrh	r3, [r4, #26]
9001583a:	280a      	cmp	r0, #10
9001583c:	f103 0301 	add.w	r3, r3, #1
90015840:	8363      	strh	r3, [r4, #26]
90015842:	d0dd      	beq.n	90015800 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90015844:	9a03      	ldr	r2, [sp, #12]
90015846:	bb62      	cbnz	r2, 900158a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90015848:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001584c:	4298      	cmp	r0, r3
9001584e:	d003      	beq.n	90015858 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015850:	f242 030b 	movw	r3, #8203	@ 0x200b
90015854:	4298      	cmp	r0, r3
90015856:	d1b2      	bne.n	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015858:	8823      	ldrh	r3, [r4, #0]
9001585a:	8ba1      	ldrh	r1, [r4, #28]
9001585c:	2b20      	cmp	r3, #32
9001585e:	d003      	beq.n	90015868 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90015860:	f242 000b 	movw	r0, #8203	@ 0x200b
90015864:	4283      	cmp	r3, r0
90015866:	d131      	bne.n	900158cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90015868:	f1ba 0f00 	cmp.w	sl, #0
9001586c:	bf0a      	itet	eq
9001586e:	4688      	moveq	r8, r1
90015870:	4650      	movne	r0, sl
90015872:	2001      	moveq	r0, #1
90015874:	440a      	add	r2, r1
90015876:	8b23      	ldrh	r3, [r4, #24]
90015878:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001587c:	b292      	uxth	r2, r2
9001587e:	83a2      	strh	r2, [r4, #28]
90015880:	4413      	add	r3, r2
90015882:	f1b9 0f00 	cmp.w	r9, #0
90015886:	d102      	bne.n	9001588e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90015888:	2d00      	cmp	r5, #0
9001588a:	d042      	beq.n	90015912 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
9001588c:	b300      	cbz	r0, 900158d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001588e:	8c21      	ldrh	r1, [r4, #32]
90015890:	4419      	add	r1, r3
90015892:	458c      	cmp	ip, r1
90015894:	da37      	bge.n	90015906 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015896:	8ae1      	ldrh	r1, [r4, #22]
90015898:	2900      	cmp	r1, #0
9001589a:	d034      	beq.n	90015906 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001589c:	4563      	cmp	r3, ip
9001589e:	dd8e      	ble.n	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900158a0:	e01d      	b.n	900158de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900158a2:	8893      	ldrh	r3, [r2, #4]
900158a4:	9901      	ldr	r1, [sp, #4]
900158a6:	8023      	strh	r3, [r4, #0]
900158a8:	f892 b00d 	ldrb.w	fp, [r2, #13]
900158ac:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900158b0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
900158b4:	f892 b00a 	ldrb.w	fp, [r2, #10]
900158b8:	ea4b 0b00 	orr.w	fp, fp, r0
900158bc:	68e0      	ldr	r0, [r4, #12]
900158be:	6803      	ldr	r3, [r0, #0]
900158c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900158c2:	4798      	blx	r3
900158c4:	eb0b 0200 	add.w	r2, fp, r0
900158c8:	b292      	uxth	r2, r2
900158ca:	e7c5      	b.n	90015858 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900158cc:	2000      	movs	r0, #0
900158ce:	e7d1      	b.n	90015874 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900158d0:	4563      	cmp	r3, ip
900158d2:	f77f af74 	ble.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900158d6:	8ae3      	ldrh	r3, [r4, #22]
900158d8:	2b00      	cmp	r3, #0
900158da:	f43f af70 	beq.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900158de:	2301      	movs	r3, #1
900158e0:	8c22      	ldrh	r2, [r4, #32]
900158e2:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
900158e6:	8be3      	ldrh	r3, [r4, #30]
900158e8:	4413      	add	r3, r2
900158ea:	83e3      	strh	r3, [r4, #30]
900158ec:	68e0      	ldr	r0, [r4, #12]
900158ee:	6803      	ldr	r3, [r0, #0]
900158f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900158f2:	4798      	blx	r3
900158f4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900158f8:	4418      	add	r0, r3
900158fa:	8a63      	ldrh	r3, [r4, #18]
900158fc:	1a18      	subs	r0, r3, r0
900158fe:	8260      	strh	r0, [r4, #18]
90015900:	b005      	add	sp, #20
90015902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015906:	2300      	movs	r3, #0
90015908:	4611      	mov	r1, r2
9001590a:	4620      	mov	r0, r4
9001590c:	f7ff ff0f 	bl	9001572e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015910:	e755      	b.n	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015912:	4563      	cmp	r3, ip
90015914:	dd14      	ble.n	90015940 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90015916:	b117      	cbz	r7, 9001591e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90015918:	2301      	movs	r3, #1
9001591a:	460a      	mov	r2, r1
9001591c:	e772      	b.n	90015804 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001591e:	2e00      	cmp	r6, #0
90015920:	f43f af4d 	beq.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015924:	2800      	cmp	r0, #0
90015926:	f47f af4a 	bne.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001592a:	f1ba 0f00 	cmp.w	sl, #0
9001592e:	d002      	beq.n	90015936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90015930:	2301      	movs	r3, #1
90015932:	4642      	mov	r2, r8
90015934:	e767      	b.n	90015806 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90015936:	8ae3      	ldrh	r3, [r4, #22]
90015938:	2b00      	cmp	r3, #0
9001593a:	f43f af40 	beq.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001593e:	e7d5      	b.n	900158ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015940:	2800      	cmp	r0, #0
90015942:	f47f af3c 	bne.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015946:	f1ba 0f00 	cmp.w	sl, #0
9001594a:	f43f af38 	beq.w	900157be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001594e:	2301      	movs	r3, #1
90015950:	4642      	mov	r2, r8
90015952:	e7da      	b.n	9001590a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90015954 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90015954:	b5f0      	push	{r4, r5, r6, r7, lr}
90015956:	4605      	mov	r5, r0
90015958:	b08f      	sub	sp, #60	@ 0x3c
9001595a:	4617      	mov	r7, r2
9001595c:	461c      	mov	r4, r3
9001595e:	460e      	mov	r6, r1
90015960:	b1d1      	cbz	r1, 90015998 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90015962:	681b      	ldr	r3, [r3, #0]
90015964:	4620      	mov	r0, r4
90015966:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015968:	4798      	blx	r3
9001596a:	4240      	negs	r0, r0
9001596c:	9603      	str	r6, [sp, #12]
9001596e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015972:	b200      	sxth	r0, r0
90015974:	9700      	str	r7, [sp, #0]
90015976:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001597a:	4629      	mov	r1, r5
9001597c:	e9cd 4001 	strd	r4, r0, [sp, #4]
90015980:	2401      	movs	r4, #1
90015982:	a805      	add	r0, sp, #20
90015984:	f7ff fcaa 	bl	900152dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015988:	a805      	add	r0, sp, #20
9001598a:	f7ff fee0 	bl	9001574e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001598e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015992:	b163      	cbz	r3, 900159ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90015994:	3401      	adds	r4, #1
90015996:	e7f7      	b.n	90015988 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90015998:	2401      	movs	r4, #1
9001599a:	f003 fad1 	bl	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001599e:	280a      	cmp	r0, #10
900159a0:	4628      	mov	r0, r5
900159a2:	bf08      	it	eq
900159a4:	3401      	addeq	r4, #1
900159a6:	f003 facb 	bl	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
900159aa:	2800      	cmp	r0, #0
900159ac:	d1f7      	bne.n	9001599e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900159ae:	b2a0      	uxth	r0, r4
900159b0:	b00f      	add	sp, #60	@ 0x3c
900159b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900159b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900159b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900159b8:	b0e3      	sub	sp, #396	@ 0x18c
900159ba:	461c      	mov	r4, r3
900159bc:	4683      	mov	fp, r0
900159be:	4688      	mov	r8, r1
900159c0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
900159c2:	2b00      	cmp	r3, #0
900159c4:	f000 8112 	beq.w	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159c8:	6823      	ldr	r3, [r4, #0]
900159ca:	2b00      	cmp	r3, #0
900159cc:	f000 810e 	beq.w	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159d0:	7ba3      	ldrb	r3, [r4, #14]
900159d2:	2b00      	cmp	r3, #0
900159d4:	f000 810a 	beq.w	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159d8:	ad0a      	add	r5, sp, #40	@ 0x28
900159da:	6810      	ldr	r0, [r2, #0]
900159dc:	6851      	ldr	r1, [r2, #4]
900159de:	462b      	mov	r3, r5
900159e0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900159e4:	c303      	stmia	r3!, {r0, r1}
900159e6:	2100      	movs	r1, #0
900159e8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900159ec:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900159f0:	4628      	mov	r0, r5
900159f2:	910c      	str	r1, [sp, #48]	@ 0x30
900159f4:	a90c      	add	r1, sp, #48	@ 0x30
900159f6:	79a2      	ldrb	r2, [r4, #6]
900159f8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900159fc:	f7ff fced 	bl	900153da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015a00:	a90c      	add	r1, sp, #48	@ 0x30
90015a02:	79a2      	ldrb	r2, [r4, #6]
90015a04:	4608      	mov	r0, r1
90015a06:	f7ff fce8 	bl	900153da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015a0a:	a817      	add	r0, sp, #92	@ 0x5c
90015a0c:	f002 fe3e 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
90015a10:	6820      	ldr	r0, [r4, #0]
90015a12:	6803      	ldr	r3, [r0, #0]
90015a14:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90015a16:	4798      	blx	r3
90015a18:	4606      	mov	r6, r0
90015a1a:	6820      	ldr	r0, [r4, #0]
90015a1c:	6803      	ldr	r3, [r0, #0]
90015a1e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015a20:	4798      	blx	r3
90015a22:	4633      	mov	r3, r6
90015a24:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90015a26:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90015a28:	9000      	str	r0, [sp, #0]
90015a2a:	a817      	add	r0, sp, #92	@ 0x5c
90015a2c:	f002 fe89 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015a30:	6820      	ldr	r0, [r4, #0]
90015a32:	f894 a004 	ldrb.w	sl, [r4, #4]
90015a36:	6803      	ldr	r3, [r0, #0]
90015a38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015a3a:	4798      	blx	r3
90015a3c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90015a40:	6823      	ldr	r3, [r4, #0]
90015a42:	4607      	mov	r7, r0
90015a44:	4406      	add	r6, r0
90015a46:	a830      	add	r0, sp, #192	@ 0xc0
90015a48:	f893 9009 	ldrb.w	r9, [r3, #9]
90015a4c:	f002 fe1e 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
90015a50:	7c23      	ldrb	r3, [r4, #16]
90015a52:	b17b      	cbz	r3, 90015a74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90015a54:	6820      	ldr	r0, [r4, #0]
90015a56:	6803      	ldr	r3, [r0, #0]
90015a58:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90015a5a:	4798      	blx	r3
90015a5c:	9009      	str	r0, [sp, #36]	@ 0x24
90015a5e:	6820      	ldr	r0, [r4, #0]
90015a60:	6802      	ldr	r2, [r0, #0]
90015a62:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90015a64:	4790      	blx	r2
90015a66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015a68:	9000      	str	r0, [sp, #0]
90015a6a:	a830      	add	r0, sp, #192	@ 0xc0
90015a6c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90015a6e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90015a70:	f002 fe67 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015a74:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90015a78:	a80e      	add	r0, sp, #56	@ 0x38
90015a7a:	7be2      	ldrb	r2, [r4, #15]
90015a7c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90015a80:	1a8a      	subs	r2, r1, r2
90015a82:	7c21      	ldrb	r1, [r4, #16]
90015a84:	9103      	str	r1, [sp, #12]
90015a86:	b292      	uxth	r2, r2
90015a88:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90015a8c:	9102      	str	r1, [sp, #8]
90015a8e:	6821      	ldr	r1, [r4, #0]
90015a90:	9101      	str	r1, [sp, #4]
90015a92:	7961      	ldrb	r1, [r4, #5]
90015a94:	9100      	str	r1, [sp, #0]
90015a96:	a930      	add	r1, sp, #192	@ 0xc0
90015a98:	f7ff fc20 	bl	900152dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015a9c:	2e00      	cmp	r6, #0
90015a9e:	dc5b      	bgt.n	90015b58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90015aa0:	af17      	add	r7, sp, #92	@ 0x5c
90015aa2:	f04f 0900 	mov.w	r9, #0
90015aa6:	7c23      	ldrb	r3, [r4, #16]
90015aa8:	2b00      	cmp	r3, #0
90015aaa:	f000 80b1 	beq.w	90015c10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90015aae:	a80e      	add	r0, sp, #56	@ 0x38
90015ab0:	f7ff fe4d 	bl	9001574e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015ab4:	f1ba 0f00 	cmp.w	sl, #0
90015ab8:	f000 80a5 	beq.w	90015c06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015abc:	7c23      	ldrb	r3, [r4, #16]
90015abe:	2264      	movs	r2, #100	@ 0x64
90015ac0:	4639      	mov	r1, r7
90015ac2:	a849      	add	r0, sp, #292	@ 0x124
90015ac4:	9309      	str	r3, [sp, #36]	@ 0x24
90015ac6:	f014 f93c 	bl	90029d42 <memcpy>
90015aca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015acc:	2b00      	cmp	r3, #0
90015ace:	f000 80a7 	beq.w	90015c20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90015ad2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90015ad6:	7922      	ldrb	r2, [r4, #4]
90015ad8:	2a01      	cmp	r2, #1
90015ada:	f040 808a 	bne.w	90015bf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90015ade:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90015ae2:	1ac0      	subs	r0, r0, r3
90015ae4:	2302      	movs	r3, #2
90015ae6:	fb90 f0f3 	sdiv	r0, r0, r3
90015aea:	b200      	sxth	r0, r0
90015aec:	7c23      	ldrb	r3, [r4, #16]
90015aee:	2b00      	cmp	r3, #0
90015af0:	f000 808b 	beq.w	90015c0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90015af4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90015af8:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90015afc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015b00:	e9cd 2105 	strd	r2, r1, [sp, #20]
90015b04:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90015b08:	2100      	movs	r1, #0
90015b0a:	4410      	add	r0, r2
90015b0c:	4642      	mov	r2, r8
90015b0e:	b200      	sxth	r0, r0
90015b10:	e9cd 9703 	strd	r9, r7, [sp, #12]
90015b14:	9000      	str	r0, [sp, #0]
90015b16:	4658      	mov	r0, fp
90015b18:	e9cd 5401 	strd	r5, r4, [sp, #4]
90015b1c:	f7ff fc8e 	bl	9001543c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90015b20:	2800      	cmp	r0, #0
90015b22:	d163      	bne.n	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b24:	b2b2      	uxth	r2, r6
90015b26:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015b2a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90015b2e:	4413      	add	r3, r2
90015b30:	1a8a      	subs	r2, r1, r2
90015b32:	b21b      	sxth	r3, r3
90015b34:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90015b38:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90015b3c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015b40:	2a00      	cmp	r2, #0
90015b42:	d153      	bne.n	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b44:	6822      	ldr	r2, [r4, #0]
90015b46:	8869      	ldrh	r1, [r5, #2]
90015b48:	7a12      	ldrb	r2, [r2, #8]
90015b4a:	1a9b      	subs	r3, r3, r2
90015b4c:	88ea      	ldrh	r2, [r5, #6]
90015b4e:	440a      	add	r2, r1
90015b50:	b212      	sxth	r2, r2
90015b52:	4293      	cmp	r3, r2
90015b54:	dda7      	ble.n	90015aa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90015b56:	e049      	b.n	90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b58:	7c23      	ldrb	r3, [r4, #16]
90015b5a:	444f      	add	r7, r9
90015b5c:	b1c3      	cbz	r3, 90015b90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90015b5e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90015b62:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015b66:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015b6a:	443b      	add	r3, r7
90015b6c:	4293      	cmp	r3, r2
90015b6e:	da97      	bge.n	90015aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015b70:	a80e      	add	r0, sp, #56	@ 0x38
90015b72:	f7ff fdec 	bl	9001574e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015b76:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90015b7a:	3b01      	subs	r3, #1
90015b7c:	b29b      	uxth	r3, r3
90015b7e:	454b      	cmp	r3, r9
90015b80:	9309      	str	r3, [sp, #36]	@ 0x24
90015b82:	d021      	beq.n	90015bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90015b84:	7961      	ldrb	r1, [r4, #5]
90015b86:	a817      	add	r0, sp, #92	@ 0x5c
90015b88:	f7ef fedc 	bl	90005944 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015b8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015b8e:	e7f4      	b.n	90015b7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90015b90:	fa1f f986 	uxth.w	r9, r6
90015b94:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015b98:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015b9c:	443b      	add	r3, r7
90015b9e:	4293      	cmp	r3, r2
90015ba0:	f6bf af7e 	bge.w	90015aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015ba4:	a817      	add	r0, sp, #92	@ 0x5c
90015ba6:	f003 f9cb 	bl	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015baa:	b1f8      	cbz	r0, 90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015bac:	280a      	cmp	r0, #10
90015bae:	d1f1      	bne.n	90015b94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015bb0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015bb4:	444b      	add	r3, r9
90015bb6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015bba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90015bbe:	eba3 0309 	sub.w	r3, r3, r9
90015bc2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015bc6:	e7e5      	b.n	90015b94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015bc8:	b2b3      	uxth	r3, r6
90015bca:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90015bce:	441a      	add	r2, r3
90015bd0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90015bd4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90015bd8:	1ad3      	subs	r3, r2, r3
90015bda:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015bde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015be2:	b11b      	cbz	r3, 90015bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015be4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90015be8:	2b00      	cmp	r3, #0
90015bea:	d0ba      	beq.n	90015b62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90015bec:	b063      	add	sp, #396	@ 0x18c
90015bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015bf2:	2a02      	cmp	r2, #2
90015bf4:	d105      	bne.n	90015c02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90015bf6:	7be2      	ldrb	r2, [r4, #15]
90015bf8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90015bfc:	1a80      	subs	r0, r0, r2
90015bfe:	1ac0      	subs	r0, r0, r3
90015c00:	e773      	b.n	90015aea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90015c02:	2000      	movs	r0, #0
90015c04:	e772      	b.n	90015aec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015c06:	7be0      	ldrb	r0, [r4, #15]
90015c08:	e770      	b.n	90015aec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015c0a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90015c0e:	e773      	b.n	90015af8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90015c10:	f1ba 0f00 	cmp.w	sl, #0
90015c14:	d0f7      	beq.n	90015c06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015c16:	2264      	movs	r2, #100	@ 0x64
90015c18:	4639      	mov	r1, r7
90015c1a:	a849      	add	r0, sp, #292	@ 0x124
90015c1c:	f014 f891 	bl	90029d42 <memcpy>
90015c20:	2300      	movs	r3, #0
90015c22:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90015c26:	6821      	ldr	r1, [r4, #0]
90015c28:	a849      	add	r0, sp, #292	@ 0x124
90015c2a:	f7ff fb9a 	bl	90015362 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90015c2e:	b203      	sxth	r3, r0
90015c30:	e751      	b.n	90015ad6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90015c32 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90015c32:	2b03      	cmp	r3, #3
90015c34:	d818      	bhi.n	90015c68 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90015c36:	e8df f003 	tbb	[pc, r3]
90015c3a:	0602      	.short	0x0602
90015c3c:	130d      	.short	0x130d
90015c3e:	f9b0 2000 	ldrsh.w	r2, [r0]
90015c42:	1850      	adds	r0, r2, r1
90015c44:	4770      	bx	lr
90015c46:	8803      	ldrh	r3, [r0, #0]
90015c48:	8880      	ldrh	r0, [r0, #4]
90015c4a:	4418      	add	r0, r3
90015c4c:	b200      	sxth	r0, r0
90015c4e:	1a80      	subs	r0, r0, r2
90015c50:	3801      	subs	r0, #1
90015c52:	4770      	bx	lr
90015c54:	8803      	ldrh	r3, [r0, #0]
90015c56:	8880      	ldrh	r0, [r0, #4]
90015c58:	4418      	add	r0, r3
90015c5a:	b200      	sxth	r0, r0
90015c5c:	1a40      	subs	r0, r0, r1
90015c5e:	e7f7      	b.n	90015c50 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90015c60:	f9b0 0000 	ldrsh.w	r0, [r0]
90015c64:	4410      	add	r0, r2
90015c66:	4770      	bx	lr
90015c68:	2000      	movs	r0, #0
90015c6a:	4770      	bx	lr

90015c6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90015c6c:	2b03      	cmp	r3, #3
90015c6e:	d817      	bhi.n	90015ca0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90015c70:	e8df f003 	tbb	[pc, r3]
90015c74:	10090602 	.word	0x10090602
90015c78:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90015c7c:	1850      	adds	r0, r2, r1
90015c7e:	4770      	bx	lr
90015c80:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015c84:	e7fa      	b.n	90015c7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90015c86:	8843      	ldrh	r3, [r0, #2]
90015c88:	88c0      	ldrh	r0, [r0, #6]
90015c8a:	4418      	add	r0, r3
90015c8c:	b200      	sxth	r0, r0
90015c8e:	1a80      	subs	r0, r0, r2
90015c90:	3801      	subs	r0, #1
90015c92:	4770      	bx	lr
90015c94:	8843      	ldrh	r3, [r0, #2]
90015c96:	88c0      	ldrh	r0, [r0, #6]
90015c98:	4418      	add	r0, r3
90015c9a:	b200      	sxth	r0, r0
90015c9c:	1a40      	subs	r0, r0, r1
90015c9e:	e7f7      	b.n	90015c90 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90015ca0:	2000      	movs	r0, #0
90015ca2:	4770      	bx	lr

90015ca4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90015ca4:	4b01      	ldr	r3, [pc, #4]	@ (90015cac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90015ca6:	2200      	movs	r2, #0
90015ca8:	601a      	str	r2, [r3, #0]
90015caa:	4770      	bx	lr
90015cac:	2402199c 	.word	0x2402199c

90015cb0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90015cb0:	4603      	mov	r3, r0
90015cb2:	b1c8      	cbz	r0, 90015ce8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90015cb4:	0c02      	lsrs	r2, r0, #16
90015cb6:	0412      	lsls	r2, r2, #16
90015cb8:	b9a2      	cbnz	r2, 90015ce4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90015cba:	0403      	lsls	r3, r0, #16
90015cbc:	2010      	movs	r0, #16
90015cbe:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90015cc2:	bf04      	itt	eq
90015cc4:	021b      	lsleq	r3, r3, #8
90015cc6:	3008      	addeq	r0, #8
90015cc8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90015ccc:	bf04      	itt	eq
90015cce:	011b      	lsleq	r3, r3, #4
90015cd0:	3004      	addeq	r0, #4
90015cd2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90015cd6:	bf04      	itt	eq
90015cd8:	009b      	lsleq	r3, r3, #2
90015cda:	3002      	addeq	r0, #2
90015cdc:	2b00      	cmp	r3, #0
90015cde:	db04      	blt.n	90015cea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90015ce0:	3001      	adds	r0, #1
90015ce2:	4770      	bx	lr
90015ce4:	2000      	movs	r0, #0
90015ce6:	e7ea      	b.n	90015cbe <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90015ce8:	2020      	movs	r0, #32
90015cea:	4770      	bx	lr

90015cec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90015cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015cf0:	b087      	sub	sp, #28
90015cf2:	460d      	mov	r5, r1
90015cf4:	4616      	mov	r6, r2
90015cf6:	4698      	mov	r8, r3
90015cf8:	4601      	mov	r1, r0
90015cfa:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90015cfe:	b120      	cbz	r0, 90015d0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015d00:	b11a      	cbz	r2, 90015d0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015d02:	2d1f      	cmp	r5, #31
90015d04:	d801      	bhi.n	90015d0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015d06:	2b1f      	cmp	r3, #31
90015d08:	d904      	bls.n	90015d14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90015d0a:	2000      	movs	r0, #0
90015d0c:	6038      	str	r0, [r7, #0]
90015d0e:	b007      	add	sp, #28
90015d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015d14:	b97d      	cbnz	r5, 90015d36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90015d16:	b143      	cbz	r3, 90015d2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90015d18:	4602      	mov	r2, r0
90015d1a:	462b      	mov	r3, r5
90015d1c:	4641      	mov	r1, r8
90015d1e:	4630      	mov	r0, r6
90015d20:	e9cd 4700 	strd	r4, r7, [sp]
90015d24:	f7ff ffe2 	bl	90015cec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d28:	e7f1      	b.n	90015d0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d2a:	f04f 33ff 	mov.w	r3, #4294967295
90015d2e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90015d32:	603b      	str	r3, [r7, #0]
90015d34:	e7eb      	b.n	90015d0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d36:	fa32 fa05 	lsrs.w	sl, r2, r5
90015d3a:	d106      	bne.n	90015d4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90015d3c:	4346      	muls	r6, r0
90015d3e:	fbb6 f0f4 	udiv	r0, r6, r4
90015d42:	fb04 6610 	mls	r6, r4, r0, r6
90015d46:	603e      	str	r6, [r7, #0]
90015d48:	e7e1      	b.n	90015d0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d4a:	2201      	movs	r2, #1
90015d4c:	fa00 fb05 	lsl.w	fp, r0, r5
90015d50:	40aa      	lsls	r2, r5
90015d52:	fbbb f9f4 	udiv	r9, fp, r4
90015d56:	3a01      	subs	r2, #1
90015d58:	fb0a f309 	mul.w	r3, sl, r9
90015d5c:	fb04 b919 	mls	r9, r4, r9, fp
90015d60:	4016      	ands	r6, r2
90015d62:	9303      	str	r3, [sp, #12]
90015d64:	4630      	mov	r0, r6
90015d66:	f7ff ffa3 	bl	90015cb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015d6a:	462b      	mov	r3, r5
90015d6c:	460a      	mov	r2, r1
90015d6e:	4601      	mov	r1, r0
90015d70:	4630      	mov	r0, r6
90015d72:	e9cd 4700 	strd	r4, r7, [sp]
90015d76:	f7ff ffb9 	bl	90015cec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d7a:	4606      	mov	r6, r0
90015d7c:	4648      	mov	r0, r9
90015d7e:	eb05 0108 	add.w	r1, r5, r8
90015d82:	f7ff ff95 	bl	90015cb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015d86:	ab05      	add	r3, sp, #20
90015d88:	464a      	mov	r2, r9
90015d8a:	e9cd 4300 	strd	r4, r3, [sp]
90015d8e:	4603      	mov	r3, r0
90015d90:	4650      	mov	r0, sl
90015d92:	f7ff ffab 	bl	90015cec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d96:	6839      	ldr	r1, [r7, #0]
90015d98:	9a05      	ldr	r2, [sp, #20]
90015d9a:	9b03      	ldr	r3, [sp, #12]
90015d9c:	4411      	add	r1, r2
90015d9e:	fbb1 f2f4 	udiv	r2, r1, r4
90015da2:	18d3      	adds	r3, r2, r3
90015da4:	fb04 1412 	mls	r4, r4, r2, r1
90015da8:	441e      	add	r6, r3
90015daa:	603c      	str	r4, [r7, #0]
90015dac:	4430      	add	r0, r6
90015dae:	e7ae      	b.n	90015d0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90015db0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90015db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015db4:	b085      	sub	sp, #20
90015db6:	f1b0 0900 	subs.w	r9, r0, #0
90015dba:	461d      	mov	r5, r3
90015dbc:	4617      	mov	r7, r2
90015dbe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90015dc0:	bfbb      	ittet	lt
90015dc2:	f1c9 0900 	rsblt	r9, r9, #0
90015dc6:	f04f 36ff 	movlt.w	r6, #4294967295
90015dca:	2601      	movge	r6, #1
90015dcc:	6823      	ldrlt	r3, [r4, #0]
90015dce:	bfbc      	itt	lt
90015dd0:	425b      	neglt	r3, r3
90015dd2:	6023      	strlt	r3, [r4, #0]
90015dd4:	2a00      	cmp	r2, #0
90015dd6:	da04      	bge.n	90015de2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90015dd8:	6823      	ldr	r3, [r4, #0]
90015dda:	4257      	negs	r7, r2
90015ddc:	4276      	negs	r6, r6
90015dde:	425b      	negs	r3, r3
90015de0:	6023      	str	r3, [r4, #0]
90015de2:	2d00      	cmp	r5, #0
90015de4:	4638      	mov	r0, r7
90015de6:	bfba      	itte	lt
90015de8:	426d      	neglt	r5, r5
90015dea:	f04f 38ff 	movlt.w	r8, #4294967295
90015dee:	f04f 0801 	movge.w	r8, #1
90015df2:	f7ff ff5d 	bl	90015cb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015df6:	ab03      	add	r3, sp, #12
90015df8:	463a      	mov	r2, r7
90015dfa:	e9cd 5300 	strd	r5, r3, [sp]
90015dfe:	4603      	mov	r3, r0
90015e00:	4648      	mov	r0, r9
90015e02:	f7ff ff73 	bl	90015cec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015e06:	6823      	ldr	r3, [r4, #0]
90015e08:	9a03      	ldr	r2, [sp, #12]
90015e0a:	4546      	cmp	r6, r8
90015e0c:	441a      	add	r2, r3
90015e0e:	fb92 f3f5 	sdiv	r3, r2, r5
90015e12:	4418      	add	r0, r3
90015e14:	fb05 2313 	mls	r3, r5, r3, r2
90015e18:	bf18      	it	ne
90015e1a:	4240      	negne	r0, r0
90015e1c:	1c72      	adds	r2, r6, #1
90015e1e:	6023      	str	r3, [r4, #0]
90015e20:	d105      	bne.n	90015e2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90015e22:	2b00      	cmp	r3, #0
90015e24:	f1c3 0200 	rsb	r2, r3, #0
90015e28:	db0b      	blt.n	90015e42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90015e2a:	6022      	str	r2, [r4, #0]
90015e2c:	e006      	b.n	90015e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e2e:	2e01      	cmp	r6, #1
90015e30:	d104      	bne.n	90015e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e32:	2b00      	cmp	r3, #0
90015e34:	da02      	bge.n	90015e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e36:	442b      	add	r3, r5
90015e38:	3801      	subs	r0, #1
90015e3a:	6023      	str	r3, [r4, #0]
90015e3c:	b005      	add	sp, #20
90015e3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015e42:	3801      	subs	r0, #1
90015e44:	1b52      	subs	r2, r2, r5
90015e46:	e7f0      	b.n	90015e2a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90015e48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90015e48:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90015e4c:	4c1c      	ldr	r4, [pc, #112]	@ (90015ec0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90015e4e:	4605      	mov	r5, r0
90015e50:	6807      	ldr	r7, [r0, #0]
90015e52:	69a3      	ldr	r3, [r4, #24]
90015e54:	b92b      	cbnz	r3, 90015e62 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90015e56:	6840      	ldr	r0, [r0, #4]
90015e58:	e9c5 7000 	strd	r7, r0, [r5]
90015e5c:	b004      	add	sp, #16
90015e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015e62:	f04f 0802 	mov.w	r8, #2
90015e66:	68a2      	ldr	r2, [r4, #8]
90015e68:	ae04      	add	r6, sp, #16
90015e6a:	6820      	ldr	r0, [r4, #0]
90015e6c:	fb93 f1f8 	sdiv	r1, r3, r8
90015e70:	440a      	add	r2, r1
90015e72:	69e1      	ldr	r1, [r4, #28]
90015e74:	f846 2d04 	str.w	r2, [r6, #-4]!
90015e78:	463a      	mov	r2, r7
90015e7a:	9600      	str	r6, [sp, #0]
90015e7c:	f7ff ff98 	bl	90015db0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015e80:	69a3      	ldr	r3, [r4, #24]
90015e82:	4607      	mov	r7, r0
90015e84:	686a      	ldr	r2, [r5, #4]
90015e86:	6a21      	ldr	r1, [r4, #32]
90015e88:	9600      	str	r6, [sp, #0]
90015e8a:	6860      	ldr	r0, [r4, #4]
90015e8c:	f7ff ff90 	bl	90015db0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015e90:	69a3      	ldr	r3, [r4, #24]
90015e92:	6962      	ldr	r2, [r4, #20]
90015e94:	4407      	add	r7, r0
90015e96:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90015e98:	9600      	str	r6, [sp, #0]
90015e9a:	68e0      	ldr	r0, [r4, #12]
90015e9c:	fb93 f8f8 	sdiv	r8, r3, r8
90015ea0:	4442      	add	r2, r8
90015ea2:	9203      	str	r2, [sp, #12]
90015ea4:	682a      	ldr	r2, [r5, #0]
90015ea6:	f7ff ff83 	bl	90015db0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015eaa:	4680      	mov	r8, r0
90015eac:	9600      	str	r6, [sp, #0]
90015eae:	69a3      	ldr	r3, [r4, #24]
90015eb0:	686a      	ldr	r2, [r5, #4]
90015eb2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90015eb4:	6920      	ldr	r0, [r4, #16]
90015eb6:	f7ff ff7b 	bl	90015db0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015eba:	4440      	add	r0, r8
90015ebc:	e7cc      	b.n	90015e58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90015ebe:	bf00      	nop
90015ec0:	240219a0 	.word	0x240219a0

90015ec4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90015ec4:	4b07      	ldr	r3, [pc, #28]	@ (90015ee4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90015ec6:	781b      	ldrb	r3, [r3, #0]
90015ec8:	2b01      	cmp	r3, #1
90015eca:	d109      	bne.n	90015ee0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90015ecc:	f9b1 3000 	ldrsh.w	r3, [r1]
90015ed0:	f9b0 2000 	ldrsh.w	r2, [r0]
90015ed4:	8003      	strh	r3, [r0, #0]
90015ed6:	4b04      	ldr	r3, [pc, #16]	@ (90015ee8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90015ed8:	881b      	ldrh	r3, [r3, #0]
90015eda:	3b01      	subs	r3, #1
90015edc:	1a9b      	subs	r3, r3, r2
90015ede:	800b      	strh	r3, [r1, #0]
90015ee0:	4770      	bx	lr
90015ee2:	bf00      	nop
90015ee4:	24021984 	.word	0x24021984
90015ee8:	24021980 	.word	0x24021980

90015eec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90015eec:	4b07      	ldr	r3, [pc, #28]	@ (90015f0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90015eee:	b510      	push	{r4, lr}
90015ef0:	781b      	ldrb	r3, [r3, #0]
90015ef2:	2b01      	cmp	r3, #1
90015ef4:	d108      	bne.n	90015f08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90015ef6:	4b06      	ldr	r3, [pc, #24]	@ (90015f10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90015ef8:	880c      	ldrh	r4, [r1, #0]
90015efa:	881b      	ldrh	r3, [r3, #0]
90015efc:	f9b0 2000 	ldrsh.w	r2, [r0]
90015f00:	3b01      	subs	r3, #1
90015f02:	1b1b      	subs	r3, r3, r4
90015f04:	8003      	strh	r3, [r0, #0]
90015f06:	800a      	strh	r2, [r1, #0]
90015f08:	bd10      	pop	{r4, pc}
90015f0a:	bf00      	nop
90015f0c:	24021984 	.word	0x24021984
90015f10:	24021980 	.word	0x24021980

90015f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90015f14:	4b0a      	ldr	r3, [pc, #40]	@ (90015f40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90015f16:	b510      	push	{r4, lr}
90015f18:	781b      	ldrb	r3, [r3, #0]
90015f1a:	2b01      	cmp	r3, #1
90015f1c:	d10e      	bne.n	90015f3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90015f1e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015f22:	8843      	ldrh	r3, [r0, #2]
90015f24:	f9b0 4000 	ldrsh.w	r4, [r0]
90015f28:	18ca      	adds	r2, r1, r3
90015f2a:	4b06      	ldr	r3, [pc, #24]	@ (90015f44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90015f2c:	8044      	strh	r4, [r0, #2]
90015f2e:	881b      	ldrh	r3, [r3, #0]
90015f30:	1a9b      	subs	r3, r3, r2
90015f32:	8003      	strh	r3, [r0, #0]
90015f34:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015f38:	8081      	strh	r1, [r0, #4]
90015f3a:	80c3      	strh	r3, [r0, #6]
90015f3c:	bd10      	pop	{r4, pc}
90015f3e:	bf00      	nop
90015f40:	24021984 	.word	0x24021984
90015f44:	24021980 	.word	0x24021980

90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90015f48:	4b08      	ldr	r3, [pc, #32]	@ (90015f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90015f4a:	781b      	ldrb	r3, [r3, #0]
90015f4c:	2b01      	cmp	r3, #1
90015f4e:	d10c      	bne.n	90015f6a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90015f50:	8803      	ldrh	r3, [r0, #0]
90015f52:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90015f56:	8842      	ldrh	r2, [r0, #2]
90015f58:	8002      	strh	r2, [r0, #0]
90015f5a:	185a      	adds	r2, r3, r1
90015f5c:	4b04      	ldr	r3, [pc, #16]	@ (90015f70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90015f5e:	881b      	ldrh	r3, [r3, #0]
90015f60:	1a9b      	subs	r3, r3, r2
90015f62:	8043      	strh	r3, [r0, #2]
90015f64:	88c3      	ldrh	r3, [r0, #6]
90015f66:	80c1      	strh	r1, [r0, #6]
90015f68:	8083      	strh	r3, [r0, #4]
90015f6a:	4770      	bx	lr
90015f6c:	24021984 	.word	0x24021984
90015f70:	24021980 	.word	0x24021980

90015f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90015f74:	4b07      	ldr	r3, [pc, #28]	@ (90015f94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90015f76:	b510      	push	{r4, lr}
90015f78:	781b      	ldrb	r3, [r3, #0]
90015f7a:	2b01      	cmp	r3, #1
90015f7c:	d108      	bne.n	90015f90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90015f7e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015f82:	f9b0 4000 	ldrsh.w	r4, [r0]
90015f86:	8003      	strh	r3, [r0, #0]
90015f88:	8893      	ldrh	r3, [r2, #4]
90015f8a:	3b01      	subs	r3, #1
90015f8c:	1b1b      	subs	r3, r3, r4
90015f8e:	800b      	strh	r3, [r1, #0]
90015f90:	bd10      	pop	{r4, pc}
90015f92:	bf00      	nop
90015f94:	24021984 	.word	0x24021984

90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90015f98:	4b0a      	ldr	r3, [pc, #40]	@ (90015fc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90015f9a:	460a      	mov	r2, r1
90015f9c:	b510      	push	{r4, lr}
90015f9e:	781b      	ldrb	r3, [r3, #0]
90015fa0:	2b01      	cmp	r3, #1
90015fa2:	d10d      	bne.n	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90015fa4:	8881      	ldrh	r1, [r0, #4]
90015fa6:	8803      	ldrh	r3, [r0, #0]
90015fa8:	440b      	add	r3, r1
90015faa:	4601      	mov	r1, r0
90015fac:	3b01      	subs	r3, #1
90015fae:	f821 3b02 	strh.w	r3, [r1], #2
90015fb2:	f7ff ffdf 	bl	90015f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90015fb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015fba:	88c2      	ldrh	r2, [r0, #6]
90015fbc:	80c3      	strh	r3, [r0, #6]
90015fbe:	8082      	strh	r2, [r0, #4]
90015fc0:	bd10      	pop	{r4, pc}
90015fc2:	bf00      	nop
90015fc4:	24021984 	.word	0x24021984

90015fc8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90015fc8:	4770      	bx	lr
	...

90015fcc <_ZN8touchgfx11Application13requestRedrawEv>:
90015fcc:	4b06      	ldr	r3, [pc, #24]	@ (90015fe8 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90015fce:	2100      	movs	r1, #0
90015fd0:	f9b3 2000 	ldrsh.w	r2, [r3]
90015fd4:	4b05      	ldr	r3, [pc, #20]	@ (90015fec <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015fd6:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90015fda:	f9b3 3000 	ldrsh.w	r3, [r3]
90015fde:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90015fe2:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90015fe6:	4770      	bx	lr
90015fe8:	24021980 	.word	0x24021980
90015fec:	24021982 	.word	0x24021982

90015ff0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90015ff0:	4b03      	ldr	r3, [pc, #12]	@ (90016000 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90015ff2:	6818      	ldr	r0, [r3, #0]
90015ff4:	b110      	cbz	r0, 90015ffc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90015ff6:	6803      	ldr	r3, [r0, #0]
90015ff8:	699b      	ldr	r3, [r3, #24]
90015ffa:	4718      	bx	r3
90015ffc:	4770      	bx	lr
90015ffe:	bf00      	nop
90016000:	240219d0 	.word	0x240219d0

90016004 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90016004:	4770      	bx	lr
	...

90016008 <_ZN8touchgfx11Application4drawEv>:
90016008:	4b09      	ldr	r3, [pc, #36]	@ (90016030 <_ZN8touchgfx11Application4drawEv+0x28>)
9001600a:	b507      	push	{r0, r1, r2, lr}
9001600c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016010:	2100      	movs	r1, #0
90016012:	4b08      	ldr	r3, [pc, #32]	@ (90016034 <_ZN8touchgfx11Application4drawEv+0x2c>)
90016014:	9100      	str	r1, [sp, #0]
90016016:	4669      	mov	r1, sp
90016018:	f9b3 3000 	ldrsh.w	r3, [r3]
9001601c:	f8ad 2004 	strh.w	r2, [sp, #4]
90016020:	f8ad 3006 	strh.w	r3, [sp, #6]
90016024:	6803      	ldr	r3, [r0, #0]
90016026:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016028:	4798      	blx	r3
9001602a:	b003      	add	sp, #12
9001602c:	f85d fb04 	ldr.w	pc, [sp], #4
90016030:	24021980 	.word	0x24021980
90016034:	24021982 	.word	0x24021982

90016038 <_ZN8touchgfx11Application10invalidateEv>:
90016038:	4b09      	ldr	r3, [pc, #36]	@ (90016060 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001603a:	b082      	sub	sp, #8
9001603c:	2100      	movs	r1, #0
9001603e:	f9b3 2000 	ldrsh.w	r2, [r3]
90016042:	4b08      	ldr	r3, [pc, #32]	@ (90016064 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90016044:	f8ad 2004 	strh.w	r2, [sp, #4]
90016048:	aa02      	add	r2, sp, #8
9001604a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001604e:	9100      	str	r1, [sp, #0]
90016050:	f8ad 3006 	strh.w	r3, [sp, #6]
90016054:	6803      	ldr	r3, [r0, #0]
90016056:	e912 0006 	ldmdb	r2, {r1, r2}
9001605a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001605c:	b002      	add	sp, #8
9001605e:	4718      	bx	r3
90016060:	24021980 	.word	0x24021980
90016064:	24021982 	.word	0x24021982

90016068 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016068:	4b03      	ldr	r3, [pc, #12]	@ (90016078 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001606a:	6818      	ldr	r0, [r3, #0]
9001606c:	b110      	cbz	r0, 90016074 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
9001606e:	6803      	ldr	r3, [r0, #0]
90016070:	69db      	ldr	r3, [r3, #28]
90016072:	4718      	bx	r3
90016074:	4770      	bx	lr
90016076:	bf00      	nop
90016078:	240219d0 	.word	0x240219d0

9001607c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
9001607c:	4b03      	ldr	r3, [pc, #12]	@ (9001608c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
9001607e:	6818      	ldr	r0, [r3, #0]
90016080:	b110      	cbz	r0, 90016088 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90016082:	6803      	ldr	r3, [r0, #0]
90016084:	6a1b      	ldr	r3, [r3, #32]
90016086:	4718      	bx	r3
90016088:	4770      	bx	lr
9001608a:	bf00      	nop
9001608c:	240219d0 	.word	0x240219d0

90016090 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90016090:	2300      	movs	r3, #0
90016092:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90016096:	4770      	bx	lr

90016098 <_ZN8touchgfx11Application14handleKeyEventEh>:
90016098:	4b03      	ldr	r3, [pc, #12]	@ (900160a8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001609a:	6818      	ldr	r0, [r3, #0]
9001609c:	b110      	cbz	r0, 900160a4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001609e:	6803      	ldr	r3, [r0, #0]
900160a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900160a2:	4718      	bx	r3
900160a4:	4770      	bx	lr
900160a6:	bf00      	nop
900160a8:	240219d0 	.word	0x240219d0

900160ac <_ZN8touchgfx11ApplicationD1Ev>:
900160ac:	4770      	bx	lr

900160ae <_ZN8touchgfx11ApplicationD0Ev>:
900160ae:	b510      	push	{r4, lr}
900160b0:	4604      	mov	r4, r0
900160b2:	f44f 719e 	mov.w	r1, #316	@ 0x13c
900160b6:	f012 ff51 	bl	90028f5c <_ZdlPvj>
900160ba:	4620      	mov	r0, r4
900160bc:	bd10      	pop	{r4, pc}

900160be <_ZNK8touchgfx4Rect9intersectERKS0_>:
900160be:	b510      	push	{r4, lr}
900160c0:	f9b1 4000 	ldrsh.w	r4, [r1]
900160c4:	888a      	ldrh	r2, [r1, #4]
900160c6:	f9b0 3000 	ldrsh.w	r3, [r0]
900160ca:	4422      	add	r2, r4
900160cc:	b212      	sxth	r2, r2
900160ce:	4293      	cmp	r3, r2
900160d0:	da15      	bge.n	900160fe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900160d2:	8882      	ldrh	r2, [r0, #4]
900160d4:	4413      	add	r3, r2
900160d6:	b21b      	sxth	r3, r3
900160d8:	429c      	cmp	r4, r3
900160da:	da10      	bge.n	900160fe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900160dc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900160e0:	88c9      	ldrh	r1, [r1, #6]
900160e2:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900160e6:	4419      	add	r1, r3
900160e8:	b209      	sxth	r1, r1
900160ea:	428a      	cmp	r2, r1
900160ec:	da07      	bge.n	900160fe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900160ee:	88c0      	ldrh	r0, [r0, #6]
900160f0:	4410      	add	r0, r2
900160f2:	b200      	sxth	r0, r0
900160f4:	4283      	cmp	r3, r0
900160f6:	bfac      	ite	ge
900160f8:	2000      	movge	r0, #0
900160fa:	2001      	movlt	r0, #1
900160fc:	bd10      	pop	{r4, pc}
900160fe:	2000      	movs	r0, #0
90016100:	e7fc      	b.n	900160fc <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016102 <_ZN8touchgfx4Rect10restrictToEss>:
90016102:	f9b0 3000 	ldrsh.w	r3, [r0]
90016106:	2b00      	cmp	r3, #0
90016108:	b510      	push	{r4, lr}
9001610a:	da04      	bge.n	90016116 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001610c:	8884      	ldrh	r4, [r0, #4]
9001610e:	4423      	add	r3, r4
90016110:	8083      	strh	r3, [r0, #4]
90016112:	2300      	movs	r3, #0
90016114:	8003      	strh	r3, [r0, #0]
90016116:	f9b0 4000 	ldrsh.w	r4, [r0]
9001611a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001611e:	1b09      	subs	r1, r1, r4
90016120:	428b      	cmp	r3, r1
90016122:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016126:	bfc8      	it	gt
90016128:	8081      	strhgt	r1, [r0, #4]
9001612a:	2b00      	cmp	r3, #0
9001612c:	da04      	bge.n	90016138 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001612e:	88c1      	ldrh	r1, [r0, #6]
90016130:	440b      	add	r3, r1
90016132:	80c3      	strh	r3, [r0, #6]
90016134:	2300      	movs	r3, #0
90016136:	8043      	strh	r3, [r0, #2]
90016138:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001613c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016140:	1a52      	subs	r2, r2, r1
90016142:	4293      	cmp	r3, r2
90016144:	bfc8      	it	gt
90016146:	80c2      	strhgt	r2, [r0, #6]
90016148:	bd10      	pop	{r4, pc}
	...

9001614c <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001614c:	4b10      	ldr	r3, [pc, #64]	@ (90016190 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001614e:	b510      	push	{r4, lr}
90016150:	460c      	mov	r4, r1
90016152:	f9b3 2000 	ldrsh.w	r2, [r3]
90016156:	4b0f      	ldr	r3, [pc, #60]	@ (90016194 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016158:	4620      	mov	r0, r4
9001615a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001615e:	f7ff ffd0 	bl	90016102 <_ZN8touchgfx4Rect10restrictToEss>
90016162:	4b0d      	ldr	r3, [pc, #52]	@ (90016198 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90016164:	6818      	ldr	r0, [r3, #0]
90016166:	b190      	cbz	r0, 9001618e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016168:	6803      	ldr	r3, [r0, #0]
9001616a:	4621      	mov	r1, r4
9001616c:	689b      	ldr	r3, [r3, #8]
9001616e:	4798      	blx	r3
90016170:	4b0a      	ldr	r3, [pc, #40]	@ (9001619c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90016172:	6818      	ldr	r0, [r3, #0]
90016174:	b118      	cbz	r0, 9001617e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90016176:	6803      	ldr	r3, [r0, #0]
90016178:	4621      	mov	r1, r4
9001617a:	689b      	ldr	r3, [r3, #8]
9001617c:	4798      	blx	r3
9001617e:	4b08      	ldr	r3, [pc, #32]	@ (900161a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90016180:	4621      	mov	r1, r4
90016182:	6818      	ldr	r0, [r3, #0]
90016184:	6803      	ldr	r3, [r0, #0]
90016186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001618a:	69db      	ldr	r3, [r3, #28]
9001618c:	4718      	bx	r3
9001618e:	bd10      	pop	{r4, pc}
90016190:	24021982 	.word	0x24021982
90016194:	24021980 	.word	0x24021980
90016198:	240219d0 	.word	0x240219d0
9001619c:	240219cc 	.word	0x240219cc
900161a0:	2402198c 	.word	0x2402198c

900161a4 <_ZNK8touchgfx4Rect8includesERKS0_>:
900161a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900161a6:	4606      	mov	r6, r0
900161a8:	4608      	mov	r0, r1
900161aa:	460f      	mov	r7, r1
900161ac:	f7fa f8a7 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
900161b0:	b9e8      	cbnz	r0, 900161ee <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161b2:	f9b7 5000 	ldrsh.w	r5, [r7]
900161b6:	f9b6 4000 	ldrsh.w	r4, [r6]
900161ba:	42a5      	cmp	r5, r4
900161bc:	db17      	blt.n	900161ee <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161be:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900161c2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900161c6:	429a      	cmp	r2, r3
900161c8:	db11      	blt.n	900161ee <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161ca:	88b9      	ldrh	r1, [r7, #4]
900161cc:	440d      	add	r5, r1
900161ce:	88b1      	ldrh	r1, [r6, #4]
900161d0:	440c      	add	r4, r1
900161d2:	b22d      	sxth	r5, r5
900161d4:	b224      	sxth	r4, r4
900161d6:	42a5      	cmp	r5, r4
900161d8:	dc09      	bgt.n	900161ee <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161da:	88f8      	ldrh	r0, [r7, #6]
900161dc:	4410      	add	r0, r2
900161de:	88f2      	ldrh	r2, [r6, #6]
900161e0:	4413      	add	r3, r2
900161e2:	b200      	sxth	r0, r0
900161e4:	b21b      	sxth	r3, r3
900161e6:	4298      	cmp	r0, r3
900161e8:	bfcc      	ite	gt
900161ea:	2000      	movgt	r0, #0
900161ec:	2001      	movle	r0, #1
900161ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900161f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900161f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900161f2:	4604      	mov	r4, r0
900161f4:	4608      	mov	r0, r1
900161f6:	460d      	mov	r5, r1
900161f8:	f7fa f881 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
900161fc:	b978      	cbnz	r0, 9001621e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900161fe:	4620      	mov	r0, r4
90016200:	f7fa f87d 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016204:	f9b5 6000 	ldrsh.w	r6, [r5]
90016208:	b150      	cbz	r0, 90016220 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001620a:	8026      	strh	r6, [r4, #0]
9001620c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016210:	8063      	strh	r3, [r4, #2]
90016212:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90016216:	80a3      	strh	r3, [r4, #4]
90016218:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001621c:	80e3      	strh	r3, [r4, #6]
9001621e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016220:	f9b4 1000 	ldrsh.w	r1, [r4]
90016224:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016228:	42b1      	cmp	r1, r6
9001622a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001622e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90016232:	460f      	mov	r7, r1
90016234:	88ed      	ldrh	r5, [r5, #6]
90016236:	bfa8      	it	ge
90016238:	4637      	movge	r7, r6
9001623a:	4293      	cmp	r3, r2
9001623c:	4618      	mov	r0, r3
9001623e:	4466      	add	r6, ip
90016240:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016244:	bfa8      	it	ge
90016246:	4610      	movge	r0, r2
90016248:	442a      	add	r2, r5
9001624a:	88e5      	ldrh	r5, [r4, #6]
9001624c:	4461      	add	r1, ip
9001624e:	b236      	sxth	r6, r6
90016250:	8027      	strh	r7, [r4, #0]
90016252:	442b      	add	r3, r5
90016254:	b209      	sxth	r1, r1
90016256:	b212      	sxth	r2, r2
90016258:	8060      	strh	r0, [r4, #2]
9001625a:	b21b      	sxth	r3, r3
9001625c:	428e      	cmp	r6, r1
9001625e:	bfac      	ite	ge
90016260:	ebc7 0106 	rsbge	r1, r7, r6
90016264:	ebc7 0101 	rsblt	r1, r7, r1
90016268:	429a      	cmp	r2, r3
9001626a:	bfac      	ite	ge
9001626c:	ebc0 0202 	rsbge	r2, r0, r2
90016270:	ebc0 0203 	rsblt	r2, r0, r3
90016274:	80a1      	strh	r1, [r4, #4]
90016276:	80e2      	strh	r2, [r4, #6]
90016278:	e7d1      	b.n	9001621e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001627c <_ZN8touchgfx11Application11getInstanceEv>:
9001627c:	4b01      	ldr	r3, [pc, #4]	@ (90016284 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001627e:	6818      	ldr	r0, [r3, #0]
90016280:	4770      	bx	lr
90016282:	bf00      	nop
90016284:	240219e0 	.word	0x240219e0

90016288 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016288:	2300      	movs	r3, #0
9001628a:	b510      	push	{r4, lr}
9001628c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90016290:	4604      	mov	r4, r0
90016292:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90016296:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001629a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001629e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900162a2:	429a      	cmp	r2, r3
900162a4:	d90e      	bls.n	900162c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900162a6:	18e2      	adds	r2, r4, r3
900162a8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900162ac:	b122      	cbz	r2, 900162b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900162ae:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900162b2:	6803      	ldr	r3, [r0, #0]
900162b4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900162b6:	4798      	blx	r3
900162b8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900162bc:	3301      	adds	r3, #1
900162be:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900162c2:	e7ea      	b.n	9001629a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900162c4:	bd10      	pop	{r4, pc}

900162c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
900162c6:	b530      	push	{r4, r5, lr}
900162c8:	2200      	movs	r2, #0
900162ca:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
900162ce:	b293      	uxth	r3, r2
900162d0:	429d      	cmp	r5, r3
900162d2:	d90e      	bls.n	900162f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
900162d4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
900162d8:	428b      	cmp	r3, r1
900162da:	d10b      	bne.n	900162f4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
900162dc:	1884      	adds	r4, r0, r2
900162de:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
900162e2:	b13b      	cbz	r3, 900162f4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
900162e4:	3b01      	subs	r3, #1
900162e6:	b2db      	uxtb	r3, r3
900162e8:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
900162ec:	b90b      	cbnz	r3, 900162f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
900162ee:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
900162f2:	bd30      	pop	{r4, r5, pc}
900162f4:	3201      	adds	r2, #1
900162f6:	e7ea      	b.n	900162ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

900162f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900162f8:	2300      	movs	r3, #0
900162fa:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900162fe:	30a4      	adds	r0, #164	@ 0xa4
90016300:	f820 3c24 	strh.w	r3, [r0, #-36]
90016304:	f802 3b01 	strb.w	r3, [r2], #1
90016308:	4282      	cmp	r2, r0
9001630a:	d1fb      	bne.n	90016304 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001630c:	4770      	bx	lr
	...

90016310 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016310:	b570      	push	{r4, r5, r6, lr}
90016312:	4c0b      	ldr	r4, [pc, #44]	@ (90016340 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016314:	4605      	mov	r5, r0
90016316:	460e      	mov	r6, r1
90016318:	6820      	ldr	r0, [r4, #0]
9001631a:	b110      	cbz	r0, 90016322 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
9001631c:	6803      	ldr	r3, [r0, #0]
9001631e:	695b      	ldr	r3, [r3, #20]
90016320:	4798      	blx	r3
90016322:	1d28      	adds	r0, r5, #4
90016324:	f7ff ffe8 	bl	900162f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016328:	6026      	str	r6, [r4, #0]
9001632a:	6833      	ldr	r3, [r6, #0]
9001632c:	4630      	mov	r0, r6
9001632e:	68db      	ldr	r3, [r3, #12]
90016330:	4798      	blx	r3
90016332:	682b      	ldr	r3, [r5, #0]
90016334:	4628      	mov	r0, r5
90016336:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016338:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001633c:	4718      	bx	r3
9001633e:	bf00      	nop
90016340:	240219d0 	.word	0x240219d0

90016344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016344:	2300      	movs	r3, #0
90016346:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
9001634a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001634e:	461a      	mov	r2, r3
90016350:	b5f0      	push	{r4, r5, r6, r7, lr}
90016352:	461c      	mov	r4, r3
90016354:	461d      	mov	r5, r3
90016356:	459c      	cmp	ip, r3
90016358:	dd1a      	ble.n	90016390 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001635a:	18c6      	adds	r6, r0, r3
9001635c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90016360:	b16e      	cbz	r6, 9001637e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90016362:	429a      	cmp	r2, r3
90016364:	d008      	beq.n	90016378 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90016366:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001636a:	fa1f fe82 	uxth.w	lr, r2
9001636e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90016372:	1887      	adds	r7, r0, r2
90016374:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90016378:	3201      	adds	r2, #1
9001637a:	3301      	adds	r3, #1
9001637c:	e7eb      	b.n	90016356 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001637e:	4299      	cmp	r1, r3
90016380:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90016384:	bfa8      	it	ge
90016386:	3501      	addge	r5, #1
90016388:	429e      	cmp	r6, r3
9001638a:	bfc8      	it	gt
9001638c:	3401      	addgt	r4, #1
9001638e:	e7f4      	b.n	9001637a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90016390:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90016394:	1b49      	subs	r1, r1, r5
90016396:	1b1b      	subs	r3, r3, r4
90016398:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001639c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900163a0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900163a4:	4293      	cmp	r3, r2
900163a6:	dd03      	ble.n	900163b0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900163a8:	3b01      	subs	r3, #1
900163aa:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900163ae:	e7f7      	b.n	900163a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900163b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900163b4 <_ZN8touchgfx11Application15handleTickEventEv>:
900163b4:	b570      	push	{r4, r5, r6, lr}
900163b6:	4d16      	ldr	r5, [pc, #88]	@ (90016410 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900163b8:	4604      	mov	r4, r0
900163ba:	6828      	ldr	r0, [r5, #0]
900163bc:	b140      	cbz	r0, 900163d0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900163be:	7a03      	ldrb	r3, [r0, #8]
900163c0:	b933      	cbnz	r3, 900163d0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900163c2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900163c6:	6803      	ldr	r3, [r0, #0]
900163c8:	689b      	ldr	r3, [r3, #8]
900163ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900163ce:	4718      	bx	r3
900163d0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900163d4:	4e0f      	ldr	r6, [pc, #60]	@ (90016414 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900163d6:	b973      	cbnz	r3, 900163f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900163d8:	b168      	cbz	r0, 900163f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900163da:	7a03      	ldrb	r3, [r0, #8]
900163dc:	b15b      	cbz	r3, 900163f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900163de:	6830      	ldr	r0, [r6, #0]
900163e0:	b110      	cbz	r0, 900163e8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900163e2:	6803      	ldr	r3, [r0, #0]
900163e4:	691b      	ldr	r3, [r3, #16]
900163e6:	4798      	blx	r3
900163e8:	6828      	ldr	r0, [r5, #0]
900163ea:	6803      	ldr	r3, [r0, #0]
900163ec:	68db      	ldr	r3, [r3, #12]
900163ee:	4798      	blx	r3
900163f0:	2301      	movs	r3, #1
900163f2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900163f6:	3404      	adds	r4, #4
900163f8:	4620      	mov	r0, r4
900163fa:	f7ff ff45 	bl	90016288 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900163fe:	4620      	mov	r0, r4
90016400:	f7ff ffa0 	bl	90016344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016404:	6830      	ldr	r0, [r6, #0]
90016406:	b110      	cbz	r0, 9001640e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90016408:	6803      	ldr	r3, [r0, #0]
9001640a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001640c:	e7dd      	b.n	900163ca <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001640e:	bd70      	pop	{r4, r5, r6, pc}
90016410:	240219d4 	.word	0x240219d4
90016414:	240219d0 	.word	0x240219d0

90016418 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
90016418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001641a:	2300      	movs	r3, #0
9001641c:	4604      	mov	r4, r0
9001641e:	460d      	mov	r5, r1
90016420:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
90016424:	4618      	mov	r0, r3
90016426:	b29a      	uxth	r2, r3
90016428:	4291      	cmp	r1, r2
9001642a:	d912      	bls.n	90016452 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
9001642c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
90016430:	18e6      	adds	r6, r4, r3
90016432:	42af      	cmp	r7, r5
90016434:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
90016438:	d105      	bne.n	90016446 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
9001643a:	2aff      	cmp	r2, #255	@ 0xff
9001643c:	d002      	beq.n	90016444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001643e:	3201      	adds	r2, #1
90016440:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
90016444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016446:	2a00      	cmp	r2, #0
90016448:	f103 0301 	add.w	r3, r3, #1
9001644c:	bf08      	it	eq
9001644e:	2001      	moveq	r0, #1
90016450:	e7e9      	b.n	90016426 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
90016452:	b120      	cbz	r0, 9001645e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
90016454:	2920      	cmp	r1, #32
90016456:	d102      	bne.n	9001645e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
90016458:	4620      	mov	r0, r4
9001645a:	f7ff ff73 	bl	90016344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001645e:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
90016462:	2b1f      	cmp	r3, #31
90016464:	d8ee      	bhi.n	90016444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
90016466:	18e2      	adds	r2, r4, r3
90016468:	2101      	movs	r1, #1
9001646a:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
9001646e:	185a      	adds	r2, r3, r1
90016470:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
90016474:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90016478:	e7e4      	b.n	90016444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

9001647a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001647a:	4603      	mov	r3, r0
9001647c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90016480:	2200      	movs	r2, #0
90016482:	801a      	strh	r2, [r3, #0]
90016484:	3308      	adds	r3, #8
90016486:	f823 2c06 	strh.w	r2, [r3, #-6]
9001648a:	f823 2c04 	strh.w	r2, [r3, #-4]
9001648e:	f823 2c02 	strh.w	r2, [r3, #-2]
90016492:	428b      	cmp	r3, r1
90016494:	d1f5      	bne.n	90016482 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016496:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
9001649a:	4770      	bx	lr

9001649c <_ZN8touchgfx11ApplicationC1Ev>:
9001649c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001649e:	4b1d      	ldr	r3, [pc, #116]	@ (90016514 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900164a0:	4606      	mov	r6, r0
900164a2:	4604      	mov	r4, r0
900164a4:	2500      	movs	r5, #0
900164a6:	f846 3b04 	str.w	r3, [r6], #4
900164aa:	22a8      	movs	r2, #168	@ 0xa8
900164ac:	2100      	movs	r1, #0
900164ae:	4630      	mov	r0, r6
900164b0:	f013 fb66 	bl	90029b80 <memset>
900164b4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900164b8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900164bc:	4f16      	ldr	r7, [pc, #88]	@ (90016518 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900164be:	f7ff ffdc 	bl	9001647a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900164c2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900164c6:	f7ff ffd8 	bl	9001647a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900164ca:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900164ce:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900164d2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900164d6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900164da:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900164de:	490f      	ldr	r1, [pc, #60]	@ (9001651c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900164e0:	480f      	ldr	r0, [pc, #60]	@ (90016520 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900164e2:	f011 feab 	bl	9002823c <CRC_Lock>
900164e6:	4b0f      	ldr	r3, [pc, #60]	@ (90016524 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900164e8:	b158      	cbz	r0, 90016502 <_ZN8touchgfx11ApplicationC1Ev+0x66>
900164ea:	801d      	strh	r5, [r3, #0]
900164ec:	2300      	movs	r3, #0
900164ee:	4a0e      	ldr	r2, [pc, #56]	@ (90016528 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900164f0:	4630      	mov	r0, r6
900164f2:	6013      	str	r3, [r2, #0]
900164f4:	4a0d      	ldr	r2, [pc, #52]	@ (9001652c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900164f6:	603b      	str	r3, [r7, #0]
900164f8:	6013      	str	r3, [r2, #0]
900164fa:	f7ff fefd 	bl	900162f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900164fe:	4620      	mov	r0, r4
90016500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016502:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90016506:	2002      	movs	r0, #2
90016508:	801a      	strh	r2, [r3, #0]
9001650a:	6038      	str	r0, [r7, #0]
9001650c:	f001 ff44 	bl	90018398 <_ZN8touchgfx6Screen4drawEv>
90016510:	e7ec      	b.n	900164ec <_ZN8touchgfx11ApplicationC1Ev+0x50>
90016512:	bf00      	nop
90016514:	9002d670 	.word	0x9002d670
90016518:	240219d0 	.word	0x240219d0
9001651c:	b5e8b5cd 	.word	0xb5e8b5cd
90016520:	f407a5c2 	.word	0xf407a5c2
90016524:	24000088 	.word	0x24000088
90016528:	240219e0 	.word	0x240219e0
9001652c:	240219d4 	.word	0x240219d4

90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90016530:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90016534:	3b01      	subs	r3, #1
90016536:	b29b      	uxth	r3, r3
90016538:	428b      	cmp	r3, r1
9001653a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001653e:	b510      	push	{r4, lr}
90016540:	d908      	bls.n	90016554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90016542:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90016546:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001654a:	681a      	ldr	r2, [r3, #0]
9001654c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90016550:	685a      	ldr	r2, [r3, #4]
90016552:	6062      	str	r2, [r4, #4]
90016554:	bd10      	pop	{r4, pc}
	...

90016558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90016558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001655c:	b08f      	sub	sp, #60	@ 0x3c
9001655e:	4b92      	ldr	r3, [pc, #584]	@ (900167a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
90016560:	4683      	mov	fp, r0
90016562:	ac0a      	add	r4, sp, #40	@ 0x28
90016564:	e884 0006 	stmia.w	r4, {r1, r2}
90016568:	f9b3 2000 	ldrsh.w	r2, [r3]
9001656c:	4620      	mov	r0, r4
9001656e:	4b8f      	ldr	r3, [pc, #572]	@ (900167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
90016570:	f9b3 1000 	ldrsh.w	r1, [r3]
90016574:	f7ff fdc5 	bl	90016102 <_ZN8touchgfx4Rect10restrictToEss>
90016578:	4620      	mov	r0, r4
9001657a:	f7f9 fec0 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001657e:	2800      	cmp	r0, #0
90016580:	d170      	bne.n	90016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90016582:	4b8b      	ldr	r3, [pc, #556]	@ (900167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
90016584:	681b      	ldr	r3, [r3, #0]
90016586:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001658a:	2b02      	cmp	r3, #2
9001658c:	d06a      	beq.n	90016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001658e:	9403      	str	r4, [sp, #12]
90016590:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90016594:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90016598:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001659c:	9301      	str	r3, [sp, #4]
9001659e:	35a4      	adds	r5, #164	@ 0xa4
900165a0:	b15c      	cbz	r4, 900165ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
900165a2:	4629      	mov	r1, r5
900165a4:	9803      	ldr	r0, [sp, #12]
900165a6:	f7ff fdfd 	bl	900161a4 <_ZNK8touchgfx4Rect8includesERKS0_>
900165aa:	3c01      	subs	r4, #1
900165ac:	b118      	cbz	r0, 900165b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
900165ae:	b2a1      	uxth	r1, r4
900165b0:	9801      	ldr	r0, [sp, #4]
900165b2:	f7ff ffbd 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900165b6:	3d08      	subs	r5, #8
900165b8:	e7f2      	b.n	900165a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900165ba:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900165be:	f10a 33ff 	add.w	r3, sl, #4294967295
900165c2:	f8cd a010 	str.w	sl, [sp, #16]
900165c6:	9302      	str	r3, [sp, #8]
900165c8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900165cc:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900165d0:	9306      	str	r3, [sp, #24]
900165d2:	445c      	add	r4, fp
900165d4:	2500      	movs	r5, #0
900165d6:	4626      	mov	r6, r4
900165d8:	f8cd a014 	str.w	sl, [sp, #20]
900165dc:	462f      	mov	r7, r5
900165de:	9b05      	ldr	r3, [sp, #20]
900165e0:	2b00      	cmp	r3, #0
900165e2:	d073      	beq.n	900166cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
900165e4:	9903      	ldr	r1, [sp, #12]
900165e6:	4630      	mov	r0, r6
900165e8:	f7ff fd69 	bl	900160be <_ZNK8touchgfx4Rect9intersectERKS0_>
900165ec:	b350      	cbz	r0, 90016644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900165ee:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900165f2:	f9b6 c000 	ldrsh.w	ip, [r6]
900165f6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900165fa:	45e6      	cmp	lr, ip
900165fc:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016600:	db33      	blt.n	9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90016602:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90016606:	88b3      	ldrh	r3, [r6, #4]
90016608:	4472      	add	r2, lr
9001660a:	4463      	add	r3, ip
9001660c:	b212      	sxth	r2, r2
9001660e:	b21b      	sxth	r3, r3
90016610:	429a      	cmp	r2, r3
90016612:	dc2a      	bgt.n	9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90016614:	fa1f f289 	uxth.w	r2, r9
90016618:	88f3      	ldrh	r3, [r6, #6]
9001661a:	45c8      	cmp	r8, r9
9001661c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90016620:	4413      	add	r3, r2
90016622:	fa1f fc88 	uxth.w	ip, r8
90016626:	b29b      	uxth	r3, r3
90016628:	fa0f fe83 	sxth.w	lr, r3
9001662c:	db0f      	blt.n	9001664e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
9001662e:	eba3 030c 	sub.w	r3, r3, ip
90016632:	1ac9      	subs	r1, r1, r3
90016634:	b209      	sxth	r1, r1
90016636:	2900      	cmp	r1, #0
90016638:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001663c:	dd12      	ble.n	90016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001663e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90016642:	4605      	mov	r5, r0
90016644:	9b05      	ldr	r3, [sp, #20]
90016646:	3e08      	subs	r6, #8
90016648:	3b01      	subs	r3, #1
9001664a:	9305      	str	r3, [sp, #20]
9001664c:	e7c7      	b.n	900165de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
9001664e:	4461      	add	r1, ip
90016650:	b209      	sxth	r1, r1
90016652:	4571      	cmp	r1, lr
90016654:	dc38      	bgt.n	900166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90016656:	eba2 020c 	sub.w	r2, r2, ip
9001665a:	b212      	sxth	r2, r2
9001665c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90016660:	2a00      	cmp	r2, #0
90016662:	dcee      	bgt.n	90016642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016664:	b00f      	add	sp, #60	@ 0x3c
90016666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001666a:	45c8      	cmp	r8, r9
9001666c:	db2c      	blt.n	900166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001666e:	88f3      	ldrh	r3, [r6, #6]
90016670:	4499      	add	r9, r3
90016672:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90016676:	4498      	add	r8, r3
90016678:	fa0f f989 	sxth.w	r9, r9
9001667c:	fa0f f888 	sxth.w	r8, r8
90016680:	45c1      	cmp	r9, r8
90016682:	db21      	blt.n	900166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90016684:	fa1f f28c 	uxth.w	r2, ip
90016688:	88b3      	ldrh	r3, [r6, #4]
9001668a:	45e6      	cmp	lr, ip
9001668c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90016690:	4413      	add	r3, r2
90016692:	fa1f f88e 	uxth.w	r8, lr
90016696:	b29b      	uxth	r3, r3
90016698:	fa0f f983 	sxth.w	r9, r3
9001669c:	db0a      	blt.n	900166b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
9001669e:	eba3 0308 	sub.w	r3, r3, r8
900166a2:	1ac9      	subs	r1, r1, r3
900166a4:	b209      	sxth	r1, r1
900166a6:	2900      	cmp	r1, #0
900166a8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900166ac:	ddda      	ble.n	90016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900166ae:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900166b2:	e7c6      	b.n	90016642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900166b4:	4441      	add	r1, r8
900166b6:	b209      	sxth	r1, r1
900166b8:	4549      	cmp	r1, r9
900166ba:	dc05      	bgt.n	900166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900166bc:	eba2 0208 	sub.w	r2, r2, r8
900166c0:	b212      	sxth	r2, r2
900166c2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900166c6:	e7cb      	b.n	90016660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
900166c8:	4607      	mov	r7, r0
900166ca:	e7bb      	b.n	90016644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900166cc:	2d00      	cmp	r5, #0
900166ce:	d181      	bne.n	900165d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
900166d0:	2f00      	cmp	r7, #0
900166d2:	f000 81df 	beq.w	90016a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900166d6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900166da:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900166de:	b2b3      	uxth	r3, r6
900166e0:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
900166e4:	9305      	str	r3, [sp, #20]
900166e6:	9a05      	ldr	r2, [sp, #20]
900166e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
900166ec:	4413      	add	r3, r2
900166ee:	b2ba      	uxth	r2, r7
900166f0:	4492      	add	sl, r2
900166f2:	b29b      	uxth	r3, r3
900166f4:	fa1f fa8a 	uxth.w	sl, sl
900166f8:	fa0f f883 	sxth.w	r8, r3
900166fc:	fa0f f98a 	sxth.w	r9, sl
90016700:	e9cd 2307 	strd	r2, r3, [sp, #28]
90016704:	9b04      	ldr	r3, [sp, #16]
90016706:	2b00      	cmp	r3, #0
90016708:	d054      	beq.n	900167b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
9001670a:	9903      	ldr	r1, [sp, #12]
9001670c:	4620      	mov	r0, r4
9001670e:	f7ff fcd6 	bl	900160be <_ZNK8touchgfx4Rect9intersectERKS0_>
90016712:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90016716:	b1c0      	cbz	r0, 9001674a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90016718:	f9b4 e000 	ldrsh.w	lr, [r4]
9001671c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90016720:	4576      	cmp	r6, lr
90016722:	dc22      	bgt.n	9001676a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90016724:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016728:	44f4      	add	ip, lr
9001672a:	fa0f fc8c 	sxth.w	ip, ip
9001672e:	45e0      	cmp	r8, ip
90016730:	db1b      	blt.n	9001676a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90016732:	428f      	cmp	r7, r1
90016734:	fa1f fc81 	uxth.w	ip, r1
90016738:	88e1      	ldrh	r1, [r4, #6]
9001673a:	dc0d      	bgt.n	90016758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
9001673c:	ebaa 0c0c 	sub.w	ip, sl, ip
90016740:	f8a4 9002 	strh.w	r9, [r4, #2]
90016744:	eba1 010c 	sub.w	r1, r1, ip
90016748:	80e1      	strh	r1, [r4, #6]
9001674a:	4628      	mov	r0, r5
9001674c:	9904      	ldr	r1, [sp, #16]
9001674e:	3c08      	subs	r4, #8
90016750:	4605      	mov	r5, r0
90016752:	3901      	subs	r1, #1
90016754:	9104      	str	r1, [sp, #16]
90016756:	e7d3      	b.n	90016700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90016758:	4461      	add	r1, ip
9001675a:	b209      	sxth	r1, r1
9001675c:	4549      	cmp	r1, r9
9001675e:	dcf5      	bgt.n	9001674c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90016760:	eba2 0c0c 	sub.w	ip, r2, ip
90016764:	f8a4 c006 	strh.w	ip, [r4, #6]
90016768:	e7ef      	b.n	9001674a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001676a:	428f      	cmp	r7, r1
9001676c:	dcee      	bgt.n	9001674c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001676e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90016772:	4461      	add	r1, ip
90016774:	b209      	sxth	r1, r1
90016776:	4589      	cmp	r9, r1
90016778:	dbe8      	blt.n	9001674c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001677a:	4576      	cmp	r6, lr
9001677c:	fa1f fc8e 	uxth.w	ip, lr
90016780:	88a1      	ldrh	r1, [r4, #4]
90016782:	dc07      	bgt.n	90016794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
90016784:	eba3 0c0c 	sub.w	ip, r3, ip
90016788:	f8a4 8000 	strh.w	r8, [r4]
9001678c:	eba1 010c 	sub.w	r1, r1, ip
90016790:	80a1      	strh	r1, [r4, #4]
90016792:	e7da      	b.n	9001674a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90016794:	4461      	add	r1, ip
90016796:	b209      	sxth	r1, r1
90016798:	4588      	cmp	r8, r1
9001679a:	dbd7      	blt.n	9001674c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001679c:	9905      	ldr	r1, [sp, #20]
9001679e:	eba1 0c0c 	sub.w	ip, r1, ip
900167a2:	f8a4 c004 	strh.w	ip, [r4, #4]
900167a6:	e7d0      	b.n	9001674a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900167a8:	24021982 	.word	0x24021982
900167ac:	24021980 	.word	0x24021980
900167b0:	2402198c 	.word	0x2402198c
900167b4:	2d00      	cmp	r5, #0
900167b6:	f000 816d 	beq.w	90016a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900167ba:	9b06      	ldr	r3, [sp, #24]
900167bc:	445b      	add	r3, fp
900167be:	461c      	mov	r4, r3
900167c0:	9b02      	ldr	r3, [sp, #8]
900167c2:	3301      	adds	r3, #1
900167c4:	f000 8166 	beq.w	90016a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900167c8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900167cc:	9803      	ldr	r0, [sp, #12]
900167ce:	4629      	mov	r1, r5
900167d0:	f7ff fce8 	bl	900161a4 <_ZNK8touchgfx4Rect8includesERKS0_>
900167d4:	b120      	cbz	r0, 900167e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
900167d6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900167da:	9801      	ldr	r0, [sp, #4]
900167dc:	f7ff fea8 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900167e0:	9903      	ldr	r1, [sp, #12]
900167e2:	4628      	mov	r0, r5
900167e4:	f7ff fc6b 	bl	900160be <_ZNK8touchgfx4Rect9intersectERKS0_>
900167e8:	2800      	cmp	r0, #0
900167ea:	f000 809c 	beq.w	90016926 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
900167ee:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
900167f2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900167f6:	fa1f f189 	uxth.w	r1, r9
900167fa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900167fe:	9309      	str	r3, [sp, #36]	@ 0x24
90016800:	eb01 0c03 	add.w	ip, r1, r3
90016804:	b283      	uxth	r3, r0
90016806:	4548      	cmp	r0, r9
90016808:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001680c:	fa1f fa8c 	uxth.w	sl, ip
90016810:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90016814:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90016818:	eb03 050c 	add.w	r5, r3, ip
9001681c:	b2ad      	uxth	r5, r5
9001681e:	9505      	str	r5, [sp, #20]
90016820:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90016824:	9504      	str	r5, [sp, #16]
90016826:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001682a:	f340 8099 	ble.w	90016960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
9001682e:	1a5b      	subs	r3, r3, r1
90016830:	4596      	cmp	lr, r2
90016832:	fa0f f08a 	sxth.w	r0, sl
90016836:	b29b      	uxth	r3, r3
90016838:	b21e      	sxth	r6, r3
9001683a:	dd2e      	ble.n	9001689a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
9001683c:	9f02      	ldr	r7, [sp, #8]
9001683e:	fa1f fe8e 	uxth.w	lr, lr
90016842:	b292      	uxth	r2, r2
90016844:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90016848:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001684c:	9f04      	ldr	r7, [sp, #16]
9001684e:	ebae 0102 	sub.w	r1, lr, r2
90016852:	44a6      	add	lr, r4
90016854:	1a3f      	subs	r7, r7, r0
90016856:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001685a:	b289      	uxth	r1, r1
9001685c:	4402      	add	r2, r0
9001685e:	fa0f fe8e 	sxth.w	lr, lr
90016862:	b20d      	sxth	r5, r1
90016864:	b212      	sxth	r2, r2
90016866:	436f      	muls	r7, r5
90016868:	ebae 0202 	sub.w	r2, lr, r2
9001686c:	4372      	muls	r2, r6
9001686e:	4297      	cmp	r7, r2
90016870:	db09      	blt.n	90016886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
90016872:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90016876:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
9001687a:	449c      	add	ip, r3
9001687c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90016880:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90016884:	e684      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016886:	4421      	add	r1, r4
90016888:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
9001688c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90016890:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90016894:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90016898:	e67a      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001689a:	9f04      	ldr	r7, [sp, #16]
9001689c:	42b8      	cmp	r0, r7
9001689e:	da27      	bge.n	900168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
900168a0:	9902      	ldr	r1, [sp, #8]
900168a2:	1a3f      	subs	r7, r7, r0
900168a4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900168a8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900168ac:	eb05 010e 	add.w	r1, r5, lr
900168b0:	fa1f f881 	uxth.w	r8, r1
900168b4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900168b8:	4411      	add	r1, r2
900168ba:	fa0f f988 	sxth.w	r9, r8
900168be:	eba2 020e 	sub.w	r2, r2, lr
900168c2:	eba1 0108 	sub.w	r1, r1, r8
900168c6:	4372      	muls	r2, r6
900168c8:	b289      	uxth	r1, r1
900168ca:	fa0f f881 	sxth.w	r8, r1
900168ce:	fb08 f707 	mul.w	r7, r8, r7
900168d2:	42ba      	cmp	r2, r7
900168d4:	dc06      	bgt.n	900168e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
900168d6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
900168da:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
900168de:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
900168e2:	e7ca      	b.n	9001687a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
900168e4:	4429      	add	r1, r5
900168e6:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
900168ea:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900168ee:	e64f      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900168f0:	9805      	ldr	r0, [sp, #20]
900168f2:	2d06      	cmp	r5, #6
900168f4:	ebaa 0000 	sub.w	r0, sl, r0
900168f8:	b280      	uxth	r0, r0
900168fa:	fa0f fe80 	sxth.w	lr, r0
900168fe:	d817      	bhi.n	90016930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90016900:	9b04      	ldr	r3, [sp, #16]
90016902:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90016906:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001690a:	1c6b      	adds	r3, r5, #1
9001690c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90016910:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90016914:	9b01      	ldr	r3, [sp, #4]
90016916:	9801      	ldr	r0, [sp, #4]
90016918:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001691c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016920:	805a      	strh	r2, [r3, #2]
90016922:	809e      	strh	r6, [r3, #4]
90016924:	80d9      	strh	r1, [r3, #6]
90016926:	9b02      	ldr	r3, [sp, #8]
90016928:	3c08      	subs	r4, #8
9001692a:	3b01      	subs	r3, #1
9001692c:	9302      	str	r3, [sp, #8]
9001692e:	e747      	b.n	900167c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
90016930:	9a02      	ldr	r2, [sp, #8]
90016932:	45b6      	cmp	lr, r6
90016934:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016938:	db0d      	blt.n	90016956 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
9001693a:	449c      	add	ip, r3
9001693c:	445a      	add	r2, fp
9001693e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90016942:	fa1f fc8c 	uxth.w	ip, ip
90016946:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
9001694a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001694e:	448c      	add	ip, r1
90016950:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90016954:	e61c      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016956:	445a      	add	r2, fp
90016958:	4484      	add	ip, r0
9001695a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001695e:	e78f      	b.n	90016880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90016960:	fa1f f18e 	uxth.w	r1, lr
90016964:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90016968:	b293      	uxth	r3, r2
9001696a:	4596      	cmp	lr, r2
9001696c:	eb01 0806 	add.w	r8, r1, r6
90016970:	9306      	str	r3, [sp, #24]
90016972:	fa1f f888 	uxth.w	r8, r8
90016976:	9f06      	ldr	r7, [sp, #24]
90016978:	fa0f f388 	sxth.w	r3, r8
9001697c:	9307      	str	r3, [sp, #28]
9001697e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90016982:	443b      	add	r3, r7
90016984:	b29b      	uxth	r3, r3
90016986:	9308      	str	r3, [sp, #32]
90016988:	da24      	bge.n	900169d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
9001698a:	9905      	ldr	r1, [sp, #20]
9001698c:	eba3 0308 	sub.w	r3, r3, r8
90016990:	eba2 020e 	sub.w	r2, r2, lr
90016994:	eba9 0000 	sub.w	r0, r9, r0
90016998:	ebaa 0401 	sub.w	r4, sl, r1
9001699c:	b29b      	uxth	r3, r3
9001699e:	b2a4      	uxth	r4, r4
900169a0:	b219      	sxth	r1, r3
900169a2:	b225      	sxth	r5, r4
900169a4:	4348      	muls	r0, r1
900169a6:	436a      	muls	r2, r5
900169a8:	4282      	cmp	r2, r0
900169aa:	9a02      	ldr	r2, [sp, #8]
900169ac:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900169b0:	445a      	add	r2, fp
900169b2:	dc06      	bgt.n	900169c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
900169b4:	9b07      	ldr	r3, [sp, #28]
900169b6:	44a4      	add	ip, r4
900169b8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900169bc:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900169c0:	e75e      	b.n	90016880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900169c2:	9904      	ldr	r1, [sp, #16]
900169c4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900169c8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900169cc:	4433      	add	r3, r6
900169ce:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900169d2:	e5dd      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900169d4:	9f06      	ldr	r7, [sp, #24]
900169d6:	9b04      	ldr	r3, [sp, #16]
900169d8:	1bc9      	subs	r1, r1, r7
900169da:	fa0f f78a 	sxth.w	r7, sl
900169de:	b289      	uxth	r1, r1
900169e0:	429f      	cmp	r7, r3
900169e2:	fa0f fe81 	sxth.w	lr, r1
900169e6:	dd23      	ble.n	90016a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
900169e8:	9a05      	ldr	r2, [sp, #20]
900169ea:	eba9 0000 	sub.w	r0, r9, r0
900169ee:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900169f2:	ebaa 0202 	sub.w	r2, sl, r2
900169f6:	9d07      	ldr	r5, [sp, #28]
900169f8:	fb0e f000 	mul.w	r0, lr, r0
900169fc:	b292      	uxth	r2, r2
900169fe:	eba5 0a03 	sub.w	sl, r5, r3
90016a02:	9b02      	ldr	r3, [sp, #8]
90016a04:	b214      	sxth	r4, r2
90016a06:	00db      	lsls	r3, r3, #3
90016a08:	fb04 fa0a 	mul.w	sl, r4, sl
90016a0c:	445b      	add	r3, fp
90016a0e:	4550      	cmp	r0, sl
90016a10:	db03      	blt.n	90016a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90016a12:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90016a16:	4494      	add	ip, r2
90016a18:	e732      	b.n	90016880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90016a1a:	9a04      	ldr	r2, [sp, #16]
90016a1c:	4431      	add	r1, r6
90016a1e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90016a22:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90016a26:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90016a2a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90016a2e:	e75c      	b.n	900168ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
90016a30:	9b08      	ldr	r3, [sp, #32]
90016a32:	2d06      	cmp	r5, #6
90016a34:	eba3 0308 	sub.w	r3, r3, r8
90016a38:	b29b      	uxth	r3, r3
90016a3a:	b218      	sxth	r0, r3
90016a3c:	d813      	bhi.n	90016a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
90016a3e:	9b07      	ldr	r3, [sp, #28]
90016a40:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90016a44:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90016a48:	1c6b      	adds	r3, r5, #1
90016a4a:	9901      	ldr	r1, [sp, #4]
90016a4c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90016a50:	9b01      	ldr	r3, [sp, #4]
90016a52:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90016a56:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90016a5a:	805a      	strh	r2, [r3, #2]
90016a5c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90016a5e:	f8a3 e006 	strh.w	lr, [r3, #6]
90016a62:	809a      	strh	r2, [r3, #4]
90016a64:	e75f      	b.n	90016926 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90016a66:	9c02      	ldr	r4, [sp, #8]
90016a68:	4570      	cmp	r0, lr
90016a6a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90016a6e:	db0d      	blt.n	90016a8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90016a70:	4431      	add	r1, r6
90016a72:	9b06      	ldr	r3, [sp, #24]
90016a74:	445c      	add	r4, fp
90016a76:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90016a7a:	b289      	uxth	r1, r1
90016a7c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90016a80:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90016a84:	4419      	add	r1, r3
90016a86:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90016a8a:	e581      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016a8c:	445c      	add	r4, fp
90016a8e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90016a92:	e79b      	b.n	900169cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
90016a94:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90016a98:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90016a9c:	1e65      	subs	r5, r4, #1
90016a9e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90016aa2:	b2ad      	uxth	r5, r5
90016aa4:	42b5      	cmp	r5, r6
90016aa6:	d044      	beq.n	90016b32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
90016aa8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90016aac:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90016ab0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90016ab4:	4282      	cmp	r2, r0
90016ab6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90016aba:	d11f      	bne.n	90016afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90016abc:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90016ac0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90016ac4:	459c      	cmp	ip, r3
90016ac6:	d119      	bne.n	90016afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90016ac8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90016acc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90016ad0:	19d8      	adds	r0, r3, r7
90016ad2:	b200      	sxth	r0, r0
90016ad4:	4288      	cmp	r0, r1
90016ad6:	d109      	bne.n	90016aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016ad8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90016adc:	4413      	add	r3, r2
90016ade:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90016ae2:	4629      	mov	r1, r5
90016ae4:	9801      	ldr	r0, [sp, #4]
90016ae6:	f7ff fd23 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016aea:	e003      	b.n	90016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016aec:	4411      	add	r1, r2
90016aee:	b209      	sxth	r1, r1
90016af0:	42b9      	cmp	r1, r7
90016af2:	d0f3      	beq.n	90016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90016af4:	3d01      	subs	r5, #1
90016af6:	3c08      	subs	r4, #8
90016af8:	b2ad      	uxth	r5, r5
90016afa:	e7d3      	b.n	90016aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
90016afc:	42b9      	cmp	r1, r7
90016afe:	d1f9      	bne.n	90016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016b00:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90016b04:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016b08:	4299      	cmp	r1, r3
90016b0a:	d1f3      	bne.n	90016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016b0c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90016b10:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90016b14:	181f      	adds	r7, r3, r0
90016b16:	b23f      	sxth	r7, r7
90016b18:	42ba      	cmp	r2, r7
90016b1a:	d105      	bne.n	90016b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
90016b1c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90016b20:	440b      	add	r3, r1
90016b22:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016b26:	e7dc      	b.n	90016ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
90016b28:	440a      	add	r2, r1
90016b2a:	b212      	sxth	r2, r2
90016b2c:	4290      	cmp	r0, r2
90016b2e:	d1e1      	bne.n	90016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016b30:	e7f6      	b.n	90016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
90016b32:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90016b36:	2e07      	cmp	r6, #7
90016b38:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90016b3c:	d812      	bhi.n	90016b64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
90016b3e:	1c75      	adds	r5, r6, #1
90016b40:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90016b44:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90016b48:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90016b4c:	9d01      	ldr	r5, [sp, #4]
90016b4e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90016b52:	442c      	add	r4, r5
90016b54:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90016b58:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90016b5c:	8061      	strh	r1, [r4, #2]
90016b5e:	80a2      	strh	r2, [r4, #4]
90016b60:	80e3      	strh	r3, [r4, #6]
90016b62:	e57f      	b.n	90016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90016b64:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90016b68:	3e01      	subs	r6, #1
90016b6a:	445c      	add	r4, fp
90016b6c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90016b70:	f04f 37ff 	mov.w	r7, #4294967295
90016b74:	2500      	movs	r5, #0
90016b76:	9305      	str	r3, [sp, #20]
90016b78:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016b7c:	1e72      	subs	r2, r6, #1
90016b7e:	9302      	str	r3, [sp, #8]
90016b80:	4691      	mov	r9, r2
90016b82:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90016b86:	9304      	str	r3, [sp, #16]
90016b88:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90016b8c:	f1b9 3fff 	cmp.w	r9, #4294967295
90016b90:	6818      	ldr	r0, [r3, #0]
90016b92:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016b96:	9207      	str	r2, [sp, #28]
90016b98:	bf16      	itet	ne
90016b9a:	9905      	ldrne	r1, [sp, #20]
90016b9c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90016ba0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90016ba4:	9306      	str	r3, [sp, #24]
90016ba6:	f8be 1006 	ldrh.w	r1, [lr, #6]
90016baa:	f8be 8004 	ldrh.w	r8, [lr, #4]
90016bae:	fb18 f801 	smulbb	r8, r8, r1
90016bb2:	6859      	ldr	r1, [r3, #4]
90016bb4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016bb8:	4671      	mov	r1, lr
90016bba:	a80c      	add	r0, sp, #48	@ 0x30
90016bbc:	f7ff fb18 	bl	900161f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016bc0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016bc4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016bc8:	f04f 0c08 	mov.w	ip, #8
90016bcc:	9b04      	ldr	r3, [sp, #16]
90016bce:	9a02      	ldr	r2, [sp, #8]
90016bd0:	fb10 f001 	smulbb	r0, r0, r1
90016bd4:	fb02 8803 	mla	r8, r2, r3, r8
90016bd8:	eba0 0108 	sub.w	r1, r0, r8
90016bdc:	fb90 f0fc 	sdiv	r0, r0, ip
90016be0:	4288      	cmp	r0, r1
90016be2:	dc20      	bgt.n	90016c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90016be4:	4551      	cmp	r1, sl
90016be6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90016bea:	da03      	bge.n	90016bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90016bec:	b1d9      	cbz	r1, 90016c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90016bee:	468a      	mov	sl, r1
90016bf0:	464f      	mov	r7, r9
90016bf2:	4635      	mov	r5, r6
90016bf4:	f109 39ff 	add.w	r9, r9, #4294967295
90016bf8:	f119 0f02 	cmn.w	r9, #2
90016bfc:	d1c6      	bne.n	90016b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90016bfe:	4616      	mov	r6, r2
90016c00:	3201      	adds	r2, #1
90016c02:	f1a4 0408 	sub.w	r4, r4, #8
90016c06:	d1b7      	bne.n	90016b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90016c08:	9b01      	ldr	r3, [sp, #4]
90016c0a:	b2ac      	uxth	r4, r5
90016c0c:	00ed      	lsls	r5, r5, #3
90016c0e:	1958      	adds	r0, r3, r5
90016c10:	1c7b      	adds	r3, r7, #1
90016c12:	d10b      	bne.n	90016c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90016c14:	4601      	mov	r1, r0
90016c16:	9803      	ldr	r0, [sp, #12]
90016c18:	f7ff faea 	bl	900161f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016c1c:	4621      	mov	r1, r4
90016c1e:	9801      	ldr	r0, [sp, #4]
90016c20:	f7ff fc86 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016c24:	e4b4      	b.n	90016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016c26:	464f      	mov	r7, r9
90016c28:	4635      	mov	r5, r6
90016c2a:	e7ed      	b.n	90016c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90016c2c:	9b01      	ldr	r3, [sp, #4]
90016c2e:	00ff      	lsls	r7, r7, #3
90016c30:	445d      	add	r5, fp
90016c32:	19d9      	adds	r1, r3, r7
90016c34:	445f      	add	r7, fp
90016c36:	f7ff fadb 	bl	900161f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016c3a:	9b03      	ldr	r3, [sp, #12]
90016c3c:	cb03      	ldmia	r3!, {r0, r1}
90016c3e:	9b03      	ldr	r3, [sp, #12]
90016c40:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90016c44:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90016c48:	f855 0fac 	ldr.w	r0, [r5, #172]!
90016c4c:	6869      	ldr	r1, [r5, #4]
90016c4e:	c303      	stmia	r3!, {r0, r1}
90016c50:	e7e4      	b.n	90016c1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90016c52:	bf00      	nop

90016c54 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90016c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016c58:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90016c5c:	b0a1      	sub	sp, #132	@ 0x84
90016c5e:	4604      	mov	r4, r0
90016c60:	4630      	mov	r0, r6
90016c62:	f7f9 fb4c 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016c66:	4605      	mov	r5, r0
90016c68:	b948      	cbnz	r0, 90016c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90016c6a:	6823      	ldr	r3, [r4, #0]
90016c6c:	4620      	mov	r0, r4
90016c6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016c70:	e896 0006 	ldmia.w	r6, {r1, r2}
90016c74:	4798      	blx	r3
90016c76:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90016c7a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90016c7e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016c82:	2b00      	cmp	r3, #0
90016c84:	d149      	bne.n	90016d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90016c86:	4bb2      	ldr	r3, [pc, #712]	@ (90016f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90016c88:	681b      	ldr	r3, [r3, #0]
90016c8a:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90016c8e:	1ebb      	subs	r3, r7, #2
90016c90:	425f      	negs	r7, r3
90016c92:	415f      	adcs	r7, r3
90016c94:	4baf      	ldr	r3, [pc, #700]	@ (90016f54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90016c96:	681b      	ldr	r3, [r3, #0]
90016c98:	2b00      	cmp	r3, #0
90016c9a:	d040      	beq.n	90016d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90016c9c:	4dae      	ldr	r5, [pc, #696]	@ (90016f58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90016c9e:	4628      	mov	r0, r5
90016ca0:	f7f9 fb2d 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016ca4:	4606      	mov	r6, r0
90016ca6:	2800      	cmp	r0, #0
90016ca8:	d139      	bne.n	90016d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90016caa:	4628      	mov	r0, r5
90016cac:	f7ff f932 	bl	90015f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016cb0:	6823      	ldr	r3, [r4, #0]
90016cb2:	6829      	ldr	r1, [r5, #0]
90016cb4:	4620      	mov	r0, r4
90016cb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016cb8:	686a      	ldr	r2, [r5, #4]
90016cba:	4798      	blx	r3
90016cbc:	802e      	strh	r6, [r5, #0]
90016cbe:	806e      	strh	r6, [r5, #2]
90016cc0:	80ae      	strh	r6, [r5, #4]
90016cc2:	80ee      	strh	r6, [r5, #6]
90016cc4:	af0f      	add	r7, sp, #60	@ 0x3c
90016cc6:	4ea5      	ldr	r6, [pc, #660]	@ (90016f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90016cc8:	4638      	mov	r0, r7
90016cca:	f7ff fbd6 	bl	9001647a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016cce:	8835      	ldrh	r5, [r6, #0]
90016cd0:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90016cd4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90016cd8:	462b      	mov	r3, r5
90016cda:	4563      	cmp	r3, ip
90016cdc:	d224      	bcs.n	90016d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90016cde:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90016ce2:	2907      	cmp	r1, #7
90016ce4:	d816      	bhi.n	90016d14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016ce6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016cea:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90016cee:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90016cf2:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90016cf6:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90016cfa:	1c4a      	adds	r2, r1, #1
90016cfc:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90016d00:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90016d04:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90016d08:	f8a2 a002 	strh.w	sl, [r2, #2]
90016d0c:	f8a2 8004 	strh.w	r8, [r2, #4]
90016d10:	f8a2 e006 	strh.w	lr, [r2, #6]
90016d14:	3301      	adds	r3, #1
90016d16:	b29b      	uxth	r3, r3
90016d18:	e7df      	b.n	90016cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90016d1a:	2701      	movs	r7, #1
90016d1c:	e7ba      	b.n	90016c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90016d1e:	2f00      	cmp	r7, #0
90016d20:	d1d0      	bne.n	90016cc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90016d22:	b021      	add	sp, #132	@ 0x84
90016d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016d28:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90016d2c:	42ab      	cmp	r3, r5
90016d2e:	d90c      	bls.n	90016d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90016d30:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90016d34:	6822      	ldr	r2, [r4, #0]
90016d36:	3501      	adds	r5, #1
90016d38:	4620      	mov	r0, r4
90016d3a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90016d3c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90016d40:	b2ad      	uxth	r5, r5
90016d42:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90016d46:	47b8      	blx	r7
90016d48:	e7ee      	b.n	90016d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90016d4a:	4d81      	ldr	r5, [pc, #516]	@ (90016f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90016d4c:	6828      	ldr	r0, [r5, #0]
90016d4e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90016d52:	2b01      	cmp	r3, #1
90016d54:	f040 813d 	bne.w	90016fd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90016d58:	4a81      	ldr	r2, [pc, #516]	@ (90016f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90016d5a:	8833      	ldrh	r3, [r6, #0]
90016d5c:	7812      	ldrb	r2, [r2, #0]
90016d5e:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90016d62:	2a01      	cmp	r2, #1
90016d64:	d014      	beq.n	90016d90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90016d66:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90016d6a:	f04f 0900 	mov.w	r9, #0
90016d6e:	32ae      	adds	r2, #174	@ 0xae
90016d70:	4283      	cmp	r3, r0
90016d72:	f102 0208 	add.w	r2, r2, #8
90016d76:	f280 8083 	bge.w	90016e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90016d7a:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90016d7e:	3301      	adds	r3, #1
90016d80:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90016d84:	4439      	add	r1, r7
90016d86:	b209      	sxth	r1, r1
90016d88:	4589      	cmp	r9, r1
90016d8a:	bfb8      	it	lt
90016d8c:	4689      	movlt	r9, r1
90016d8e:	e7ef      	b.n	90016d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90016d90:	4f74      	ldr	r7, [pc, #464]	@ (90016f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90016d92:	883a      	ldrh	r2, [r7, #0]
90016d94:	4693      	mov	fp, r2
90016d96:	4283      	cmp	r3, r0
90016d98:	da08      	bge.n	90016dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90016d9a:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90016d9e:	3301      	adds	r3, #1
90016da0:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90016da4:	458b      	cmp	fp, r1
90016da6:	bfa8      	it	ge
90016da8:	468b      	movge	fp, r1
90016daa:	e7f4      	b.n	90016d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90016dac:	2a0f      	cmp	r2, #15
90016dae:	f04f 0300 	mov.w	r3, #0
90016db2:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90016f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90016db6:	bf8c      	ite	hi
90016db8:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90016dbc:	f04f 0801 	movls.w	r8, #1
90016dc0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90016dc4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016dc8:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90016dcc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016dd0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90016dd4:	6828      	ldr	r0, [r5, #0]
90016dd6:	455b      	cmp	r3, fp
90016dd8:	f340 80c8 	ble.w	90016f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016ddc:	6803      	ldr	r3, [r0, #0]
90016dde:	f8b7 a000 	ldrh.w	sl, [r7]
90016de2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016de6:	4798      	blx	r3
90016de8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90016dec:	ebaa 0000 	sub.w	r0, sl, r0
90016df0:	682b      	ldr	r3, [r5, #0]
90016df2:	ebac 0e08 	sub.w	lr, ip, r8
90016df6:	b280      	uxth	r0, r0
90016df8:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90016dfc:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90016e00:	4570      	cmp	r0, lr
90016e02:	dd05      	ble.n	90016e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90016e04:	4558      	cmp	r0, fp
90016e06:	dd03      	ble.n	90016e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90016e08:	b901      	cbnz	r1, 90016e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016e0a:	b392      	cbz	r2, 90016e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90016e0c:	4658      	mov	r0, fp
90016e0e:	e006      	b.n	90016e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90016e10:	2900      	cmp	r1, #0
90016e12:	d1fb      	bne.n	90016e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016e14:	2a00      	cmp	r2, #0
90016e16:	d1f9      	bne.n	90016e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016e18:	4558      	cmp	r0, fp
90016e1a:	bfb8      	it	lt
90016e1c:	4658      	movlt	r0, fp
90016e1e:	f9b9 3000 	ldrsh.w	r3, [r9]
90016e22:	2200      	movs	r2, #0
90016e24:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90016e28:	ebac 0000 	sub.w	r0, ip, r0
90016e2c:	f8b6 a000 	ldrh.w	sl, [r6]
90016e30:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90016e34:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90016e38:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016e3c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016e40:	4553      	cmp	r3, sl
90016e42:	ddc5      	ble.n	90016dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90016e44:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90016e48:	ab0d      	add	r3, sp, #52	@ 0x34
90016e4a:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016e4e:	6851      	ldr	r1, [r2, #4]
90016e50:	c303      	stmia	r3!, {r0, r1}
90016e52:	a80d      	add	r0, sp, #52	@ 0x34
90016e54:	a90b      	add	r1, sp, #44	@ 0x2c
90016e56:	f7f9 fa0f 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90016e5a:	a80d      	add	r0, sp, #52	@ 0x34
90016e5c:	f7f9 fa4f 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016e60:	b920      	cbnz	r0, 90016e6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90016e62:	6823      	ldr	r3, [r4, #0]
90016e64:	a90d      	add	r1, sp, #52	@ 0x34
90016e66:	4620      	mov	r0, r4
90016e68:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016e6a:	4798      	blx	r3
90016e6c:	f10a 0a01 	add.w	sl, sl, #1
90016e70:	e7e4      	b.n	90016e3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90016e72:	681a      	ldr	r2, [r3, #0]
90016e74:	2101      	movs	r1, #1
90016e76:	4618      	mov	r0, r3
90016e78:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90016e7c:	4790      	blx	r2
90016e7e:	e7a7      	b.n	90016dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90016e80:	4b39      	ldr	r3, [pc, #228]	@ (90016f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90016e82:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90016f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90016e86:	881f      	ldrh	r7, [r3, #0]
90016e88:	2300      	movs	r3, #0
90016e8a:	2f0f      	cmp	r7, #15
90016e8c:	bf8c      	ite	hi
90016e8e:	08ff      	lsrhi	r7, r7, #3
90016e90:	2701      	movls	r7, #1
90016e92:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90016e96:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016e9a:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90016e9e:	6828      	ldr	r0, [r5, #0]
90016ea0:	4413      	add	r3, r2
90016ea2:	b21b      	sxth	r3, r3
90016ea4:	454b      	cmp	r3, r9
90016ea6:	da61      	bge.n	90016f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016ea8:	6803      	ldr	r3, [r0, #0]
90016eaa:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016eae:	4798      	blx	r3
90016eb0:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90016eb4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016eb8:	682a      	ldr	r2, [r5, #0]
90016eba:	4473      	add	r3, lr
90016ebc:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90016ec0:	b21b      	sxth	r3, r3
90016ec2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90016ec6:	eb03 0e07 	add.w	lr, r3, r7
90016eca:	4570      	cmp	r0, lr
90016ecc:	da0d      	bge.n	90016eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90016ece:	4548      	cmp	r0, r9
90016ed0:	da0b      	bge.n	90016eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90016ed2:	f1bc 0f00 	cmp.w	ip, #0
90016ed6:	d138      	bne.n	90016f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016ed8:	2900      	cmp	r1, #0
90016eda:	d136      	bne.n	90016f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016edc:	6813      	ldr	r3, [r2, #0]
90016ede:	2101      	movs	r1, #1
90016ee0:	4610      	mov	r0, r2
90016ee2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90016ee6:	4798      	blx	r3
90016ee8:	e7d5      	b.n	90016e96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90016eea:	f1bc 0f00 	cmp.w	ip, #0
90016eee:	d12c      	bne.n	90016f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016ef0:	bb59      	cbnz	r1, 90016f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016ef2:	4548      	cmp	r0, r9
90016ef4:	bfa8      	it	ge
90016ef6:	4648      	movge	r0, r9
90016ef8:	f9b8 2000 	ldrsh.w	r2, [r8]
90016efc:	2100      	movs	r1, #0
90016efe:	1ac0      	subs	r0, r0, r3
90016f00:	f8b6 a000 	ldrh.w	sl, [r6]
90016f04:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90016f08:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016f0c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90016f10:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90016f14:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016f18:	4553      	cmp	r3, sl
90016f1a:	ddbc      	ble.n	90016e96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90016f1c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90016f20:	ab0d      	add	r3, sp, #52	@ 0x34
90016f22:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016f26:	6851      	ldr	r1, [r2, #4]
90016f28:	c303      	stmia	r3!, {r0, r1}
90016f2a:	a80d      	add	r0, sp, #52	@ 0x34
90016f2c:	a90b      	add	r1, sp, #44	@ 0x2c
90016f2e:	f7f9 f9a3 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90016f32:	a80d      	add	r0, sp, #52	@ 0x34
90016f34:	f7f9 f9e3 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016f38:	b920      	cbnz	r0, 90016f44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90016f3a:	6823      	ldr	r3, [r4, #0]
90016f3c:	a90d      	add	r1, sp, #52	@ 0x34
90016f3e:	4620      	mov	r0, r4
90016f40:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016f42:	4798      	blx	r3
90016f44:	f10a 0a01 	add.w	sl, sl, #1
90016f48:	e7e4      	b.n	90016f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90016f4a:	4648      	mov	r0, r9
90016f4c:	e7d4      	b.n	90016ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90016f4e:	bf00      	nop
90016f50:	2402198c 	.word	0x2402198c
90016f54:	240219cc 	.word	0x240219cc
90016f58:	240219d8 	.word	0x240219d8
90016f5c:	24000088 	.word	0x24000088
90016f60:	24021984 	.word	0x24021984
90016f64:	24021980 	.word	0x24021980
90016f68:	24021982 	.word	0x24021982
90016f6c:	6828      	ldr	r0, [r5, #0]
90016f6e:	6803      	ldr	r3, [r0, #0]
90016f70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90016f72:	4798      	blx	r3
90016f74:	4ba4      	ldr	r3, [pc, #656]	@ (90017208 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90016f76:	781b      	ldrb	r3, [r3, #0]
90016f78:	2b00      	cmp	r3, #0
90016f7a:	f43f aed2 	beq.w	90016d22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90016f7e:	2300      	movs	r3, #0
90016f80:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90016f84:	a80f      	add	r0, sp, #60	@ 0x3c
90016f86:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90016f8a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90016f8e:	4b9f      	ldr	r3, [pc, #636]	@ (9001720c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90016f90:	881b      	ldrh	r3, [r3, #0]
90016f92:	42b3      	cmp	r3, r6
90016f94:	f4bf aec5 	bcs.w	90016d22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90016f98:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90016f9c:	2907      	cmp	r1, #7
90016f9e:	d815      	bhi.n	90016fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90016fa0:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016fa4:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90016fa8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90016fac:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90016fb0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90016fb4:	1c4a      	adds	r2, r1, #1
90016fb6:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90016fba:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90016fbe:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90016fc2:	f8a2 e002 	strh.w	lr, [r2, #2]
90016fc6:	f8a2 c004 	strh.w	ip, [r2, #4]
90016fca:	80d7      	strh	r7, [r2, #6]
90016fcc:	3301      	adds	r3, #1
90016fce:	b29b      	uxth	r3, r3
90016fd0:	e7df      	b.n	90016f92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90016fd2:	2b02      	cmp	r3, #2
90016fd4:	f040 80ce 	bne.w	90017174 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90016fd8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90016fdc:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90016fe0:	9308      	str	r3, [sp, #32]
90016fe2:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90016fe6:	f10b 37ff 	add.w	r7, fp, #4294967295
90016fea:	9307      	str	r3, [sp, #28]
90016fec:	b2bf      	uxth	r7, r7
90016fee:	6803      	ldr	r3, [r0, #0]
90016ff0:	fa0f f887 	sxth.w	r8, r7
90016ff4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016ff8:	4798      	blx	r3
90016ffa:	4b85      	ldr	r3, [pc, #532]	@ (90017210 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90016ffc:	4682      	mov	sl, r0
90016ffe:	2000      	movs	r0, #0
90017000:	881b      	ldrh	r3, [r3, #0]
90017002:	9302      	str	r3, [sp, #8]
90017004:	4b83      	ldr	r3, [pc, #524]	@ (90017214 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90017006:	881e      	ldrh	r6, [r3, #0]
90017008:	4b83      	ldr	r3, [pc, #524]	@ (90017218 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
9001700a:	781b      	ldrb	r3, [r3, #0]
9001700c:	2b01      	cmp	r3, #1
9001700e:	bf1e      	ittt	ne
90017010:	9b02      	ldrne	r3, [sp, #8]
90017012:	9602      	strne	r6, [sp, #8]
90017014:	461e      	movne	r6, r3
90017016:	f7e9 fe3d 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001701a:	fb96 fbfb 	sdiv	fp, r6, fp
9001701e:	fb0b f808 	mul.w	r8, fp, r8
90017022:	45c2      	cmp	sl, r8
90017024:	da0c      	bge.n	90017040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90017026:	6828      	ldr	r0, [r5, #0]
90017028:	210a      	movs	r1, #10
9001702a:	6803      	ldr	r3, [r0, #0]
9001702c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017030:	4798      	blx	r3
90017032:	6828      	ldr	r0, [r5, #0]
90017034:	6803      	ldr	r3, [r0, #0]
90017036:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
9001703a:	4798      	blx	r3
9001703c:	4682      	mov	sl, r0
9001703e:	e7f0      	b.n	90017022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90017040:	2000      	movs	r0, #0
90017042:	f04f 0800 	mov.w	r8, #0
90017046:	f7e9 fe59 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001704a:	fa1f f38b 	uxth.w	r3, fp
9001704e:	4645      	mov	r5, r8
90017050:	fb17 f703 	smulbb	r7, r7, r3
90017054:	9304      	str	r3, [sp, #16]
90017056:	b2bb      	uxth	r3, r7
90017058:	4f70      	ldr	r7, [pc, #448]	@ (9001721c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
9001705a:	9305      	str	r3, [sp, #20]
9001705c:	0973      	lsrs	r3, r6, #5
9001705e:	9306      	str	r3, [sp, #24]
90017060:	42b5      	cmp	r5, r6
90017062:	d087      	beq.n	90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90017064:	6838      	ldr	r0, [r7, #0]
90017066:	6803      	ldr	r3, [r0, #0]
90017068:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
9001706c:	4798      	blx	r3
9001706e:	4582      	cmp	sl, r0
90017070:	4681      	mov	r9, r0
90017072:	d907      	bls.n	90017084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90017074:	f1b8 0f00 	cmp.w	r8, #0
90017078:	d007      	beq.n	9001708a <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
9001707a:	6838      	ldr	r0, [r7, #0]
9001707c:	6803      	ldr	r3, [r0, #0]
9001707e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90017082:	e776      	b.n	90016f72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017084:	f1b8 0f00 	cmp.w	r8, #0
90017088:	d003      	beq.n	90017092 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
9001708a:	454d      	cmp	r5, r9
9001708c:	d3f5      	bcc.n	9001707a <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
9001708e:	f04f 0801 	mov.w	r8, #1
90017092:	9a04      	ldr	r2, [sp, #16]
90017094:	fb95 f3fb 	sdiv	r3, r5, fp
90017098:	9303      	str	r3, [sp, #12]
9001709a:	3301      	adds	r3, #1
9001709c:	fb13 f302 	smulbb	r3, r3, r2
900170a0:	b299      	uxth	r1, r3
900170a2:	f1b8 0f00 	cmp.w	r8, #0
900170a6:	d04d      	beq.n	90017144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
900170a8:	eb09 030b 	add.w	r3, r9, fp
900170ac:	42b3      	cmp	r3, r6
900170ae:	bfa8      	it	ge
900170b0:	4633      	movge	r3, r6
900170b2:	b29b      	uxth	r3, r3
900170b4:	9807      	ldr	r0, [sp, #28]
900170b6:	428b      	cmp	r3, r1
900170b8:	bf94      	ite	ls
900170ba:	ebc5 0203 	rsbls	r2, r5, r3
900170be:	ebc5 0201 	rsbhi	r2, r5, r1
900170c2:	4282      	cmp	r2, r0
900170c4:	bfa8      	it	ge
900170c6:	4602      	movge	r2, r0
900170c8:	9808      	ldr	r0, [sp, #32]
900170ca:	fa1f fa82 	uxth.w	sl, r2
900170ce:	4582      	cmp	sl, r0
900170d0:	d205      	bcs.n	900170de <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
900170d2:	fa15 f082 	uxtah	r0, r5, r2
900170d6:	4286      	cmp	r6, r0
900170d8:	d001      	beq.n	900170de <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
900170da:	4299      	cmp	r1, r3
900170dc:	d23f      	bcs.n	9001715e <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
900170de:	2001      	movs	r0, #1
900170e0:	9209      	str	r2, [sp, #36]	@ 0x24
900170e2:	f7e9 fdd7 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900170e6:	6838      	ldr	r0, [r7, #0]
900170e8:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
900170ec:	6803      	ldr	r3, [r0, #0]
900170ee:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
900170f2:	4798      	blx	r3
900170f4:	4b48      	ldr	r3, [pc, #288]	@ (90017218 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
900170f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900170f8:	2000      	movs	r0, #0
900170fa:	781b      	ldrb	r3, [r3, #0]
900170fc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90017100:	b212      	sxth	r2, r2
90017102:	2b01      	cmp	r3, #1
90017104:	d122      	bne.n	9001714c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90017106:	1b73      	subs	r3, r6, r5
90017108:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
9001710c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90017110:	eba3 030a 	sub.w	r3, r3, sl
90017114:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90017118:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001711c:	6823      	ldr	r3, [r4, #0]
9001711e:	a90d      	add	r1, sp, #52	@ 0x34
90017120:	4620      	mov	r0, r4
90017122:	4455      	add	r5, sl
90017124:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017126:	4798      	blx	r3
90017128:	6838      	ldr	r0, [r7, #0]
9001712a:	9b03      	ldr	r3, [sp, #12]
9001712c:	b2ad      	uxth	r5, r5
9001712e:	4259      	negs	r1, r3
90017130:	6803      	ldr	r3, [r0, #0]
90017132:	b209      	sxth	r1, r1
90017134:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017138:	4798      	blx	r3
9001713a:	2001      	movs	r0, #1
9001713c:	f7e9 fdde 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017140:	46ca      	mov	sl, r9
90017142:	e78d      	b.n	90017060 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90017144:	9b05      	ldr	r3, [sp, #20]
90017146:	eba9 0303 	sub.w	r3, r9, r3
9001714a:	e7b2      	b.n	900170b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
9001714c:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90017150:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90017154:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90017158:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
9001715c:	e7de      	b.n	9001711c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
9001715e:	6838      	ldr	r0, [r7, #0]
90017160:	6803      	ldr	r3, [r0, #0]
90017162:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017164:	4798      	blx	r3
90017166:	6838      	ldr	r0, [r7, #0]
90017168:	9906      	ldr	r1, [sp, #24]
9001716a:	6803      	ldr	r3, [r0, #0]
9001716c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017170:	4798      	blx	r3
90017172:	e7e5      	b.n	90017140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90017174:	2b03      	cmp	r3, #3
90017176:	f040 8133 	bne.w	900173e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
9001717a:	4b27      	ldr	r3, [pc, #156]	@ (90017218 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
9001717c:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90017180:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
90017184:	781b      	ldrb	r3, [r3, #0]
90017186:	2b01      	cmp	r3, #1
90017188:	f000 8095 	beq.w	900172b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
9001718c:	8832      	ldrh	r2, [r6, #0]
9001718e:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90017192:	3201      	adds	r2, #1
90017194:	b292      	uxth	r2, r2
90017196:	2900      	cmp	r1, #0
90017198:	f43f aeec 	beq.w	90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001719c:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
900171a0:	4694      	mov	ip, r2
900171a2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
900171a6:	f04f 0800 	mov.w	r8, #0
900171aa:	441d      	add	r5, r3
900171ac:	b22d      	sxth	r5, r5
900171ae:	fa1f f38c 	uxth.w	r3, ip
900171b2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
900171b6:	4299      	cmp	r1, r3
900171b8:	f240 80bc 	bls.w	90017334 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
900171bc:	4427      	add	r7, r4
900171be:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900171c2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
900171c6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
900171ca:	4283      	cmp	r3, r0
900171cc:	f340 809e 	ble.w	9001730c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
900171d0:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
900171d4:	46e0      	mov	r8, ip
900171d6:	4405      	add	r5, r0
900171d8:	b22d      	sxth	r5, r5
900171da:	429d      	cmp	r5, r3
900171dc:	bfa8      	it	ge
900171de:	461d      	movge	r5, r3
900171e0:	f10c 0c01 	add.w	ip, ip, #1
900171e4:	e7e3      	b.n	900171ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
900171e6:	d10a      	bne.n	900171fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
900171e8:	4562      	cmp	r2, ip
900171ea:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
900171ee:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
900171f2:	bfb8      	it	lt
900171f4:	4662      	movlt	r2, ip
900171f6:	4288      	cmp	r0, r1
900171f8:	bfb8      	it	lt
900171fa:	4698      	movlt	r8, r3
900171fc:	e084      	b.n	90017308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
900171fe:	428a      	cmp	r2, r1
90017200:	bfb8      	it	lt
90017202:	460a      	movlt	r2, r1
90017204:	e080      	b.n	90017308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90017206:	bf00      	nop
90017208:	2402198a 	.word	0x2402198a
9001720c:	24000088 	.word	0x24000088
90017210:	24021982 	.word	0x24021982
90017214:	24021980 	.word	0x24021980
90017218:	24021984 	.word	0x24021984
9001721c:	2402198c 	.word	0x2402198c
90017220:	19e1      	adds	r1, r4, r7
90017222:	ab0d      	add	r3, sp, #52	@ 0x34
90017224:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017228:	6849      	ldr	r1, [r1, #4]
9001722a:	c303      	stmia	r3!, {r0, r1}
9001722c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
90017230:	a80d      	add	r0, sp, #52	@ 0x34
90017232:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90017236:	454b      	cmp	r3, r9
90017238:	440b      	add	r3, r1
9001723a:	bfb8      	it	lt
9001723c:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
90017240:	1a9b      	subs	r3, r3, r2
90017242:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90017246:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001724a:	f7fe fe7d 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001724e:	a80d      	add	r0, sp, #52	@ 0x34
90017250:	f7f9 f855 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017254:	bb78      	cbnz	r0, 900172b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90017256:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
9001725a:	4427      	add	r7, r4
9001725c:	6828      	ldr	r0, [r5, #0]
9001725e:	45cc      	cmp	ip, r9
90017260:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017264:	f8d0 e000 	ldr.w	lr, [r0]
90017268:	bfd8      	it	le
9001726a:	fa1f fc8c 	uxthle.w	ip, ip
9001726e:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90017272:	bfc8      	it	gt
90017274:	fa1f fc89 	uxthgt.w	ip, r9
90017278:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001727c:	f8cd c000 	str.w	ip, [sp]
90017280:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
90017284:	47d8      	blx	fp
90017286:	4683      	mov	fp, r0
90017288:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001728c:	a80d      	add	r0, sp, #52	@ 0x34
9001728e:	f7fe fe41 	bl	90015f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017292:	6823      	ldr	r3, [r4, #0]
90017294:	4620      	mov	r0, r4
90017296:	a90d      	add	r1, sp, #52	@ 0x34
90017298:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001729a:	4798      	blx	r3
9001729c:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
900172a0:	eba0 000b 	sub.w	r0, r0, fp
900172a4:	b200      	sxth	r0, r0
900172a6:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
900172aa:	b920      	cbnz	r0, 900172b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
900172ac:	fa1f f188 	uxth.w	r1, r8
900172b0:	4650      	mov	r0, sl
900172b2:	f7ff f93d 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900172b6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900172ba:	f1bb 0f00 	cmp.w	fp, #0
900172be:	f43f ae59 	beq.w	90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900172c2:	8833      	ldrh	r3, [r6, #0]
900172c4:	f04f 0800 	mov.w	r8, #0
900172c8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900172cc:	3301      	adds	r3, #1
900172ce:	b29b      	uxth	r3, r3
900172d0:	b299      	uxth	r1, r3
900172d2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
900172d6:	458b      	cmp	fp, r1
900172d8:	d9a2      	bls.n	90017220 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
900172da:	4427      	add	r7, r4
900172dc:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900172e0:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
900172e4:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
900172e8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
900172ec:	4408      	add	r0, r1
900172ee:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
900172f2:	4461      	add	r1, ip
900172f4:	b200      	sxth	r0, r0
900172f6:	b209      	sxth	r1, r1
900172f8:	4288      	cmp	r0, r1
900172fa:	f6bf af74 	bge.w	900171e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
900172fe:	4584      	cmp	ip, r0
90017300:	4662      	mov	r2, ip
90017302:	4698      	mov	r8, r3
90017304:	bfb8      	it	lt
90017306:	4602      	movlt	r2, r0
90017308:	3301      	adds	r3, #1
9001730a:	e7e1      	b.n	900172d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
9001730c:	d10e      	bne.n	9001732c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
9001730e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90017312:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90017316:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001731a:	4473      	add	r3, lr
9001731c:	b21b      	sxth	r3, r3
9001731e:	429d      	cmp	r5, r3
90017320:	bfa8      	it	ge
90017322:	461d      	movge	r5, r3
90017324:	4287      	cmp	r7, r0
90017326:	bfb8      	it	lt
90017328:	46e0      	movlt	r8, ip
9001732a:	e759      	b.n	900171e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
9001732c:	4285      	cmp	r5, r0
9001732e:	bfa8      	it	ge
90017330:	4605      	movge	r5, r0
90017332:	e755      	b.n	900171e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
90017334:	eb0a 0007 	add.w	r0, sl, r7
90017338:	4427      	add	r7, r4
9001733a:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001733e:	45cb      	cmp	fp, r9
90017340:	bfbc      	itt	lt
90017342:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
90017346:	445d      	addlt	r5, fp
90017348:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001734c:	bfb8      	it	lt
9001734e:	b22d      	sxthlt	r5, r5
90017350:	f7f8 ffd5 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017354:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90017358:	2800      	cmp	r0, #0
9001735a:	f47f af1c 	bne.w	90017196 <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
9001735e:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90017362:	fa1f fb8b 	uxth.w	fp, fp
90017366:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001736a:	1aad      	subs	r5, r5, r2
9001736c:	4829      	ldr	r0, [pc, #164]	@ (90017414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
9001736e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90017372:	454d      	cmp	r5, r9
90017374:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90017378:	6800      	ldr	r0, [r0, #0]
9001737a:	bfa8      	it	ge
9001737c:	464d      	movge	r5, r9
9001737e:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
90017382:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90017386:	b289      	uxth	r1, r1
90017388:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001738c:	b2ad      	uxth	r5, r5
9001738e:	f8d0 c000 	ldr.w	ip, [r0]
90017392:	b292      	uxth	r2, r2
90017394:	455d      	cmp	r5, fp
90017396:	bf94      	ite	ls
90017398:	9500      	strls	r5, [sp, #0]
9001739a:	f8cd b000 	strhi.w	fp, [sp]
9001739e:	b29b      	uxth	r3, r3
900173a0:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
900173a4:	47a8      	blx	r5
900173a6:	6823      	ldr	r3, [r4, #0]
900173a8:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900173ac:	a90d      	add	r1, sp, #52	@ 0x34
900173ae:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900173b0:	4620      	mov	r0, r4
900173b2:	4798      	blx	r3
900173b4:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
900173b8:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900173bc:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900173c0:	1a5b      	subs	r3, r3, r1
900173c2:	440a      	add	r2, r1
900173c4:	b21b      	sxth	r3, r3
900173c6:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900173ca:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900173ce:	2b00      	cmp	r3, #0
900173d0:	f47f aedc 	bne.w	9001718c <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900173d4:	fa1f f188 	uxth.w	r1, r8
900173d8:	4650      	mov	r0, sl
900173da:	f7ff f8a9 	bl	90016530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900173de:	e6d5      	b.n	9001718c <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900173e0:	8835      	ldrh	r5, [r6, #0]
900173e2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900173e6:	42ab      	cmp	r3, r5
900173e8:	f67f adc4 	bls.w	90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900173ec:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
900173f0:	ab0d      	add	r3, sp, #52	@ 0x34
900173f2:	f852 0fac 	ldr.w	r0, [r2, #172]!
900173f6:	6851      	ldr	r1, [r2, #4]
900173f8:	c303      	stmia	r3!, {r0, r1}
900173fa:	a80d      	add	r0, sp, #52	@ 0x34
900173fc:	f7f8 ff7f 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017400:	b920      	cbnz	r0, 9001740c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
90017402:	6823      	ldr	r3, [r4, #0]
90017404:	a90d      	add	r1, sp, #52	@ 0x34
90017406:	4620      	mov	r0, r4
90017408:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001740a:	4798      	blx	r3
9001740c:	3501      	adds	r5, #1
9001740e:	b2ad      	uxth	r5, r5
90017410:	e7e7      	b.n	900173e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
90017412:	bf00      	nop
90017414:	2402198c 	.word	0x2402198c

90017418 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90017418:	4b03      	ldr	r3, [pc, #12]	@ (90017428 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001741a:	2200      	movs	r2, #0
9001741c:	801a      	strh	r2, [r3, #0]
9001741e:	805a      	strh	r2, [r3, #2]
90017420:	809a      	strh	r2, [r3, #4]
90017422:	80da      	strh	r2, [r3, #6]
90017424:	4770      	bx	lr
90017426:	bf00      	nop
90017428:	240219d8 	.word	0x240219d8

9001742c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001742c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017430:	b09d      	sub	sp, #116	@ 0x74
90017432:	4606      	mov	r6, r0
90017434:	4614      	mov	r4, r2
90017436:	468a      	mov	sl, r1
90017438:	a803      	add	r0, sp, #12
9001743a:	461d      	mov	r5, r3
9001743c:	f001 f926 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
90017440:	6833      	ldr	r3, [r6, #0]
90017442:	4630      	mov	r0, r6
90017444:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90017448:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001744a:	4798      	blx	r3
9001744c:	6833      	ldr	r3, [r6, #0]
9001744e:	4607      	mov	r7, r0
90017450:	4630      	mov	r0, r6
90017452:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017454:	4798      	blx	r3
90017456:	462a      	mov	r2, r5
90017458:	2500      	movs	r5, #0
9001745a:	4621      	mov	r1, r4
9001745c:	9000      	str	r0, [sp, #0]
9001745e:	463b      	mov	r3, r7
90017460:	462c      	mov	r4, r5
90017462:	46a9      	mov	r9, r5
90017464:	46a8      	mov	r8, r5
90017466:	a803      	add	r0, sp, #12
90017468:	f001 f96b 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001746c:	2300      	movs	r3, #0
9001746e:	9302      	str	r3, [sp, #8]
90017470:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017474:	429c      	cmp	r4, r3
90017476:	d002      	beq.n	9001747e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90017478:	455c      	cmp	r4, fp
9001747a:	bf18      	it	ne
9001747c:	4625      	movne	r5, r4
9001747e:	ab02      	add	r3, sp, #8
90017480:	4632      	mov	r2, r6
90017482:	4651      	mov	r1, sl
90017484:	a803      	add	r0, sp, #12
90017486:	f001 fc8f 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001748a:	4604      	mov	r4, r0
9001748c:	b108      	cbz	r0, 90017492 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001748e:	280a      	cmp	r0, #10
90017490:	d10a      	bne.n	900174a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90017492:	45c1      	cmp	r9, r8
90017494:	bf38      	it	cc
90017496:	46c1      	movcc	r9, r8
90017498:	f04f 0800 	mov.w	r8, #0
9001749c:	2c00      	cmp	r4, #0
9001749e:	d1e5      	bne.n	9001746c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900174a0:	4648      	mov	r0, r9
900174a2:	b01d      	add	sp, #116	@ 0x74
900174a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900174a8:	9a02      	ldr	r2, [sp, #8]
900174aa:	2a00      	cmp	r2, #0
900174ac:	d0de      	beq.n	9001746c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900174ae:	7b57      	ldrb	r7, [r2, #13]
900174b0:	4629      	mov	r1, r5
900174b2:	6833      	ldr	r3, [r6, #0]
900174b4:	007f      	lsls	r7, r7, #1
900174b6:	8894      	ldrh	r4, [r2, #4]
900174b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900174ba:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900174be:	7a97      	ldrb	r7, [r2, #10]
900174c0:	4307      	orrs	r7, r0
900174c2:	4630      	mov	r0, r6
900174c4:	4798      	blx	r3
900174c6:	4438      	add	r0, r7
900174c8:	4480      	add	r8, r0
900174ca:	fa1f f888 	uxth.w	r8, r8
900174ce:	e7e5      	b.n	9001749c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900174d0 <_ZNK8touchgfx4Font12getCharWidthEt>:
900174d0:	b508      	push	{r3, lr}
900174d2:	6803      	ldr	r3, [r0, #0]
900174d4:	68db      	ldr	r3, [r3, #12]
900174d6:	4798      	blx	r3
900174d8:	b128      	cbz	r0, 900174e6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900174da:	7b43      	ldrb	r3, [r0, #13]
900174dc:	7a80      	ldrb	r0, [r0, #10]
900174de:	005b      	lsls	r3, r3, #1
900174e0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900174e4:	4318      	orrs	r0, r3
900174e6:	bd08      	pop	{r3, pc}

900174e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900174e8:	b40e      	push	{r1, r2, r3}
900174ea:	b5f0      	push	{r4, r5, r6, r7, lr}
900174ec:	b09e      	sub	sp, #120	@ 0x78
900174ee:	4605      	mov	r5, r0
900174f0:	ab23      	add	r3, sp, #140	@ 0x8c
900174f2:	a805      	add	r0, sp, #20
900174f4:	f853 4b04 	ldr.w	r4, [r3], #4
900174f8:	9303      	str	r3, [sp, #12]
900174fa:	f001 f8c7 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
900174fe:	682b      	ldr	r3, [r5, #0]
90017500:	4628      	mov	r0, r5
90017502:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017504:	4798      	blx	r3
90017506:	682b      	ldr	r3, [r5, #0]
90017508:	4606      	mov	r6, r0
9001750a:	4628      	mov	r0, r5
9001750c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001750e:	4798      	blx	r3
90017510:	4633      	mov	r3, r6
90017512:	4621      	mov	r1, r4
90017514:	ae1e      	add	r6, sp, #120	@ 0x78
90017516:	2400      	movs	r4, #0
90017518:	9000      	str	r0, [sp, #0]
9001751a:	9a03      	ldr	r2, [sp, #12]
9001751c:	a805      	add	r0, sp, #20
9001751e:	f001 f910 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017522:	f846 4d68 	str.w	r4, [r6, #-104]!
90017526:	462a      	mov	r2, r5
90017528:	4633      	mov	r3, r6
9001752a:	4621      	mov	r1, r4
9001752c:	a805      	add	r0, sp, #20
9001752e:	f001 fc3b 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017532:	b300      	cbz	r0, 90017576 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017534:	280a      	cmp	r0, #10
90017536:	d01a      	beq.n	9001756e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017538:	9f04      	ldr	r7, [sp, #16]
9001753a:	b1c7      	cbz	r7, 9001756e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001753c:	7b78      	ldrb	r0, [r7, #13]
9001753e:	7a3b      	ldrb	r3, [r7, #8]
90017540:	00c1      	lsls	r1, r0, #3
90017542:	88ea      	ldrh	r2, [r5, #6]
90017544:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017548:	4319      	orrs	r1, r3
9001754a:	0643      	lsls	r3, r0, #25
9001754c:	ea4f 1000 	mov.w	r0, r0, lsl #4
90017550:	bf48      	it	mi
90017552:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90017556:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001755a:	bf48      	it	mi
9001755c:	b219      	sxthmi	r1, r3
9001755e:	79fb      	ldrb	r3, [r7, #7]
90017560:	4303      	orrs	r3, r0
90017562:	4413      	add	r3, r2
90017564:	1a5b      	subs	r3, r3, r1
90017566:	b21b      	sxth	r3, r3
90017568:	429c      	cmp	r4, r3
9001756a:	bfb8      	it	lt
9001756c:	461c      	movlt	r4, r3
9001756e:	4633      	mov	r3, r6
90017570:	462a      	mov	r2, r5
90017572:	2100      	movs	r1, #0
90017574:	e7da      	b.n	9001752c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90017576:	b2a0      	uxth	r0, r4
90017578:	b01e      	add	sp, #120	@ 0x78
9001757a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001757e:	b003      	add	sp, #12
90017580:	4770      	bx	lr

90017582 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90017582:	7a43      	ldrb	r3, [r0, #9]
90017584:	8880      	ldrh	r0, [r0, #4]
90017586:	4418      	add	r0, r3
90017588:	b280      	uxth	r0, r0
9001758a:	4770      	bx	lr

9001758c <_ZNK8touchgfx4Font13getFontHeightEv>:
9001758c:	6803      	ldr	r3, [r0, #0]
9001758e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90017590:	4718      	bx	r3

90017592 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90017592:	b40e      	push	{r1, r2, r3}
90017594:	b570      	push	{r4, r5, r6, lr}
90017596:	b09d      	sub	sp, #116	@ 0x74
90017598:	4604      	mov	r4, r0
9001759a:	ab21      	add	r3, sp, #132	@ 0x84
9001759c:	a803      	add	r0, sp, #12
9001759e:	f853 5b04 	ldr.w	r5, [r3], #4
900175a2:	9302      	str	r3, [sp, #8]
900175a4:	f001 f872 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
900175a8:	6823      	ldr	r3, [r4, #0]
900175aa:	4620      	mov	r0, r4
900175ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900175ae:	4798      	blx	r3
900175b0:	6823      	ldr	r3, [r4, #0]
900175b2:	4606      	mov	r6, r0
900175b4:	4620      	mov	r0, r4
900175b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900175b8:	2401      	movs	r4, #1
900175ba:	4798      	blx	r3
900175bc:	4633      	mov	r3, r6
900175be:	9000      	str	r0, [sp, #0]
900175c0:	4629      	mov	r1, r5
900175c2:	9a02      	ldr	r2, [sp, #8]
900175c4:	a803      	add	r0, sp, #12
900175c6:	f001 f8bc 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900175ca:	a803      	add	r0, sp, #12
900175cc:	f001 fcb8 	bl	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
900175d0:	b2a3      	uxth	r3, r4
900175d2:	b138      	cbz	r0, 900175e4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900175d4:	280a      	cmp	r0, #10
900175d6:	a803      	add	r0, sp, #12
900175d8:	bf04      	itt	eq
900175da:	3301      	addeq	r3, #1
900175dc:	b21c      	sxtheq	r4, r3
900175de:	f001 fcaf 	bl	90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>
900175e2:	e7f5      	b.n	900175d0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900175e4:	4618      	mov	r0, r3
900175e6:	b01d      	add	sp, #116	@ 0x74
900175e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900175ec:	b003      	add	sp, #12
900175ee:	4770      	bx	lr

900175f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900175f0:	b40e      	push	{r1, r2, r3}
900175f2:	b5f0      	push	{r4, r5, r6, r7, lr}
900175f4:	b09e      	sub	sp, #120	@ 0x78
900175f6:	4604      	mov	r4, r0
900175f8:	ab23      	add	r3, sp, #140	@ 0x8c
900175fa:	a805      	add	r0, sp, #20
900175fc:	f853 5b04 	ldr.w	r5, [r3], #4
90017600:	9303      	str	r3, [sp, #12]
90017602:	f001 f843 	bl	9001868c <_ZN8touchgfx12TextProviderC1Ev>
90017606:	6823      	ldr	r3, [r4, #0]
90017608:	4620      	mov	r0, r4
9001760a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001760c:	4798      	blx	r3
9001760e:	6823      	ldr	r3, [r4, #0]
90017610:	4606      	mov	r6, r0
90017612:	4620      	mov	r0, r4
90017614:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017616:	4798      	blx	r3
90017618:	4633      	mov	r3, r6
9001761a:	4629      	mov	r1, r5
9001761c:	9000      	str	r0, [sp, #0]
9001761e:	9a03      	ldr	r2, [sp, #12]
90017620:	a805      	add	r0, sp, #20
90017622:	f001 f88e 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017626:	ad1e      	add	r5, sp, #120	@ 0x78
90017628:	2100      	movs	r1, #0
9001762a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001762e:	4622      	mov	r2, r4
90017630:	a805      	add	r0, sp, #20
90017632:	f845 1d68 	str.w	r1, [r5, #-104]!
90017636:	462b      	mov	r3, r5
90017638:	f001 fbb6 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001763c:	b1d8      	cbz	r0, 90017676 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001763e:	280a      	cmp	r0, #10
90017640:	d012      	beq.n	90017668 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017642:	9804      	ldr	r0, [sp, #16]
90017644:	b180      	cbz	r0, 90017668 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017646:	7b47      	ldrb	r7, [r0, #13]
90017648:	88e2      	ldrh	r2, [r4, #6]
9001764a:	00fb      	lsls	r3, r7, #3
9001764c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017650:	7a03      	ldrb	r3, [r0, #8]
90017652:	430b      	orrs	r3, r1
90017654:	0679      	lsls	r1, r7, #25
90017656:	bf44      	itt	mi
90017658:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001765c:	b21b      	sxthmi	r3, r3
9001765e:	1ad3      	subs	r3, r2, r3
90017660:	b21b      	sxth	r3, r3
90017662:	429e      	cmp	r6, r3
90017664:	bfa8      	it	ge
90017666:	461e      	movge	r6, r3
90017668:	462b      	mov	r3, r5
9001766a:	4622      	mov	r2, r4
9001766c:	2100      	movs	r1, #0
9001766e:	a805      	add	r0, sp, #20
90017670:	f001 fb9a 	bl	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017674:	e7e2      	b.n	9001763c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90017676:	4630      	mov	r0, r6
90017678:	b01e      	add	sp, #120	@ 0x78
9001767a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001767e:	b003      	add	sp, #12
90017680:	4770      	bx	lr

90017682 <_ZNK8touchgfx8Drawable10invalidateEv>:
90017682:	b513      	push	{r0, r1, r4, lr}
90017684:	6803      	ldr	r3, [r0, #0]
90017686:	2400      	movs	r4, #0
90017688:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001768c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017690:	f8ad 1004 	strh.w	r1, [sp, #4]
90017694:	4669      	mov	r1, sp
90017696:	691b      	ldr	r3, [r3, #16]
90017698:	9400      	str	r4, [sp, #0]
9001769a:	f8ad 2006 	strh.w	r2, [sp, #6]
9001769e:	4798      	blx	r3
900176a0:	b002      	add	sp, #8
900176a2:	bd10      	pop	{r4, pc}

900176a4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900176a4:	b538      	push	{r3, r4, r5, lr}
900176a6:	680b      	ldr	r3, [r1, #0]
900176a8:	460c      	mov	r4, r1
900176aa:	4605      	mov	r5, r0
900176ac:	68db      	ldr	r3, [r3, #12]
900176ae:	4798      	blx	r3
900176b0:	6823      	ldr	r3, [r4, #0]
900176b2:	4620      	mov	r0, r4
900176b4:	4629      	mov	r1, r5
900176b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900176b8:	4798      	blx	r3
900176ba:	4628      	mov	r0, r5
900176bc:	bd38      	pop	{r3, r4, r5, pc}

900176be <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900176be:	b410      	push	{r4}
900176c0:	880a      	ldrh	r2, [r1, #0]
900176c2:	8884      	ldrh	r4, [r0, #4]
900176c4:	4422      	add	r2, r4
900176c6:	800a      	strh	r2, [r1, #0]
900176c8:	884a      	ldrh	r2, [r1, #2]
900176ca:	88c4      	ldrh	r4, [r0, #6]
900176cc:	4422      	add	r2, r4
900176ce:	804a      	strh	r2, [r1, #2]
900176d0:	6940      	ldr	r0, [r0, #20]
900176d2:	b120      	cbz	r0, 900176de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900176d4:	6803      	ldr	r3, [r0, #0]
900176d6:	f85d 4b04 	ldr.w	r4, [sp], #4
900176da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900176dc:	4718      	bx	r3
900176de:	f85d 4b04 	ldr.w	r4, [sp], #4
900176e2:	4770      	bx	lr

900176e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900176e4:	b570      	push	{r4, r5, r6, lr}
900176e6:	8882      	ldrh	r2, [r0, #4]
900176e8:	460c      	mov	r4, r1
900176ea:	880b      	ldrh	r3, [r1, #0]
900176ec:	4605      	mov	r5, r0
900176ee:	4413      	add	r3, r2
900176f0:	800b      	strh	r3, [r1, #0]
900176f2:	884b      	ldrh	r3, [r1, #2]
900176f4:	88c2      	ldrh	r2, [r0, #6]
900176f6:	4413      	add	r3, r2
900176f8:	804b      	strh	r3, [r1, #2]
900176fa:	1d01      	adds	r1, r0, #4
900176fc:	4620      	mov	r0, r4
900176fe:	f7f8 fdbb 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90017702:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017706:	2b00      	cmp	r3, #0
90017708:	dd0b      	ble.n	90017722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001770a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001770e:	2b00      	cmp	r3, #0
90017710:	dd07      	ble.n	90017722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017712:	6968      	ldr	r0, [r5, #20]
90017714:	b128      	cbz	r0, 90017722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017716:	6803      	ldr	r3, [r0, #0]
90017718:	4621      	mov	r1, r4
9001771a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001771c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017720:	4718      	bx	r3
90017722:	bd70      	pop	{r4, r5, r6, pc}

90017724 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017724:	b570      	push	{r4, r5, r6, lr}
90017726:	8882      	ldrh	r2, [r0, #4]
90017728:	460c      	mov	r4, r1
9001772a:	880b      	ldrh	r3, [r1, #0]
9001772c:	4605      	mov	r5, r0
9001772e:	4413      	add	r3, r2
90017730:	800b      	strh	r3, [r1, #0]
90017732:	884b      	ldrh	r3, [r1, #2]
90017734:	88c2      	ldrh	r2, [r0, #6]
90017736:	4413      	add	r3, r2
90017738:	804b      	strh	r3, [r1, #2]
9001773a:	1d01      	adds	r1, r0, #4
9001773c:	4620      	mov	r0, r4
9001773e:	f7f8 fd9b 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90017742:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017746:	2b00      	cmp	r3, #0
90017748:	dd19      	ble.n	9001777e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001774a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001774e:	2b00      	cmp	r3, #0
90017750:	dd15      	ble.n	9001777e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017752:	6968      	ldr	r0, [r5, #20]
90017754:	b128      	cbz	r0, 90017762 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90017756:	6803      	ldr	r3, [r0, #0]
90017758:	4621      	mov	r1, r4
9001775a:	691b      	ldr	r3, [r3, #16]
9001775c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017760:	4718      	bx	r3
90017762:	4b07      	ldr	r3, [pc, #28]	@ (90017780 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017764:	681b      	ldr	r3, [r3, #0]
90017766:	3304      	adds	r3, #4
90017768:	429d      	cmp	r5, r3
9001776a:	d108      	bne.n	9001777e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001776c:	f7fe fd86 	bl	9001627c <_ZN8touchgfx11Application11getInstanceEv>
90017770:	6803      	ldr	r3, [r0, #0]
90017772:	6821      	ldr	r1, [r4, #0]
90017774:	6862      	ldr	r2, [r4, #4]
90017776:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001777c:	4718      	bx	r3
9001777e:	bd70      	pop	{r4, r5, r6, pc}
90017780:	240219d0 	.word	0x240219d0

90017784 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90017784:	b570      	push	{r4, r5, r6, lr}
90017786:	4604      	mov	r4, r0
90017788:	4616      	mov	r6, r2
9001778a:	460d      	mov	r5, r1
9001778c:	b901      	cbnz	r1, 90017790 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001778e:	b192      	cbz	r2, 900177b6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90017790:	6823      	ldr	r3, [r4, #0]
90017792:	4620      	mov	r0, r4
90017794:	699b      	ldr	r3, [r3, #24]
90017796:	4798      	blx	r3
90017798:	88e2      	ldrh	r2, [r4, #6]
9001779a:	88a1      	ldrh	r1, [r4, #4]
9001779c:	4620      	mov	r0, r4
9001779e:	4432      	add	r2, r6
900177a0:	4429      	add	r1, r5
900177a2:	b212      	sxth	r2, r2
900177a4:	b209      	sxth	r1, r1
900177a6:	f7f9 f84b 	bl	90010840 <_ZN8touchgfx8Drawable5setXYEss>
900177aa:	6823      	ldr	r3, [r4, #0]
900177ac:	4620      	mov	r0, r4
900177ae:	699b      	ldr	r3, [r3, #24]
900177b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900177b4:	4718      	bx	r3
900177b6:	bd70      	pop	{r4, r5, r6, pc}

900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900177b8:	b510      	push	{r4, lr}
900177ba:	2300      	movs	r3, #0
900177bc:	4604      	mov	r4, r0
900177be:	4608      	mov	r0, r1
900177c0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900177c4:	8023      	strh	r3, [r4, #0]
900177c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900177ca:	8063      	strh	r3, [r4, #2]
900177cc:	6803      	ldr	r3, [r0, #0]
900177ce:	80a1      	strh	r1, [r4, #4]
900177d0:	4621      	mov	r1, r4
900177d2:	80e2      	strh	r2, [r4, #6]
900177d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900177d6:	4798      	blx	r3
900177d8:	4620      	mov	r0, r4
900177da:	bd10      	pop	{r4, pc}

900177dc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
900177dc:	4770      	bx	lr

900177de <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
900177de:	b510      	push	{r4, lr}
900177e0:	4604      	mov	r4, r0
900177e2:	211c      	movs	r1, #28
900177e4:	f011 fbba 	bl	90028f5c <_ZdlPvj>
900177e8:	4620      	mov	r0, r4
900177ea:	bd10      	pop	{r4, pc}

900177ec <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
900177ec:	4a04      	ldr	r2, [pc, #16]	@ (90017800 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
900177ee:	6002      	str	r2, [r0, #0]
900177f0:	2200      	movs	r2, #0
900177f2:	e9c0 2201 	strd	r2, r2, [r0, #4]
900177f6:	e9c0 2203 	strd	r2, r2, [r0, #12]
900177fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
900177fe:	4770      	bx	lr
90017800:	9002d6c4 	.word	0x9002d6c4

90017804 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90017804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017808:	4604      	mov	r4, r0
9001780a:	b087      	sub	sp, #28
9001780c:	8b45      	ldrh	r5, [r0, #26]
9001780e:	f8b2 c000 	ldrh.w	ip, [r2]
90017812:	9105      	str	r1, [sp, #20]
90017814:	1c68      	adds	r0, r5, #1
90017816:	68e1      	ldr	r1, [r4, #12]
90017818:	9203      	str	r2, [sp, #12]
9001781a:	b280      	uxth	r0, r0
9001781c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017820:	f01c 0501 	ands.w	r5, ip, #1
90017824:	f9b3 2000 	ldrsh.w	r2, [r3]
90017828:	9502      	str	r5, [sp, #8]
9001782a:	d07d      	beq.n	90017928 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
9001782c:	ee07 2a90 	vmov	s15, r2
90017830:	8360      	strh	r0, [r4, #26]
90017832:	f04f 0e00 	mov.w	lr, #0
90017836:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9001783a:	ee06 ea10 	vmov	s12, lr
9001783e:	edc1 6a00 	vstr	s13, [r1]
90017842:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017846:	8b61      	ldrh	r1, [r4, #26]
90017848:	ee07 2a10 	vmov	s14, r2
9001784c:	68e2      	ldr	r2, [r4, #12]
9001784e:	1c48      	adds	r0, r1, #1
90017850:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017854:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90017858:	8360      	strh	r0, [r4, #26]
9001785a:	ed82 7a00 	vstr	s14, [r2]
9001785e:	8b21      	ldrh	r1, [r4, #24]
90017860:	2501      	movs	r5, #1
90017862:	68a2      	ldr	r2, [r4, #8]
90017864:	3304      	adds	r3, #4
90017866:	1c48      	adds	r0, r1, #1
90017868:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
9001786c:	9300      	str	r3, [sp, #0]
9001786e:	46aa      	mov	sl, r5
90017870:	8320      	strh	r0, [r4, #24]
90017872:	462e      	mov	r6, r5
90017874:	5455      	strb	r5, [r2, r1]
90017876:	2200      	movs	r2, #0
90017878:	ee07 2a90 	vmov	s15, r2
9001787c:	4613      	mov	r3, r2
9001787e:	4611      	mov	r1, r2
90017880:	9201      	str	r2, [sp, #4]
90017882:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90017886:	9805      	ldr	r0, [sp, #20]
90017888:	f108 0701 	add.w	r7, r8, #1
9001788c:	f8d4 b008 	ldr.w	fp, [r4, #8]
90017890:	42a8      	cmp	r0, r5
90017892:	b2bf      	uxth	r7, r7
90017894:	eb0b 0908 	add.w	r9, fp, r8
90017898:	f340 80db 	ble.w	90017a52 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
9001789c:	fa4c f906 	asr.w	r9, ip, r6
900178a0:	f009 0901 	and.w	r9, r9, #1
900178a4:	fa5f f389 	uxtb.w	r3, r9
900178a8:	9304      	str	r3, [sp, #16]
900178aa:	9b00      	ldr	r3, [sp, #0]
900178ac:	f9b3 1000 	ldrsh.w	r1, [r3]
900178b0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900178b4:	f1b9 0f00 	cmp.w	r9, #0
900178b8:	d07d      	beq.n	900179b6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
900178ba:	ee05 1a10 	vmov	s10, r1
900178be:	8327      	strh	r7, [r4, #24]
900178c0:	eef8 4ac5 	vcvt.f32.s32	s9, s10
900178c4:	ee05 3a10 	vmov	s10, r3
900178c8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900178cc:	f1ba 0f00 	cmp.w	sl, #0
900178d0:	d050      	beq.n	90017974 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
900178d2:	f04f 0002 	mov.w	r0, #2
900178d6:	f80b 0008 	strb.w	r0, [fp, r8]
900178da:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900178de:	68e7      	ldr	r7, [r4, #12]
900178e0:	f108 0901 	add.w	r9, r8, #1
900178e4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900178e8:	f8a4 901a 	strh.w	r9, [r4, #26]
900178ec:	edc7 4a00 	vstr	s9, [r7]
900178f0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900178f4:	68e7      	ldr	r7, [r4, #12]
900178f6:	f108 0901 	add.w	r9, r8, #1
900178fa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900178fe:	f8a4 901a 	strh.w	r9, [r4, #26]
90017902:	ed87 5a00 	vstr	s10, [r7]
90017906:	3601      	adds	r6, #1
90017908:	2e10      	cmp	r6, #16
9001790a:	d106      	bne.n	9001791a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
9001790c:	9e01      	ldr	r6, [sp, #4]
9001790e:	9803      	ldr	r0, [sp, #12]
90017910:	3601      	adds	r6, #1
90017912:	9601      	str	r6, [sp, #4]
90017914:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
90017918:	2600      	movs	r6, #0
9001791a:	9800      	ldr	r0, [sp, #0]
9001791c:	3501      	adds	r5, #1
9001791e:	f8dd a010 	ldr.w	sl, [sp, #16]
90017922:	3004      	adds	r0, #4
90017924:	9000      	str	r0, [sp, #0]
90017926:	e7ac      	b.n	90017882 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
90017928:	ee06 2a10 	vmov	s12, r2
9001792c:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
90017930:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90017934:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90017938:	ee16 5a10 	vmov	r5, s12
9001793c:	442a      	add	r2, r5
9001793e:	ee06 2a90 	vmov	s13, r2
90017942:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
90017946:	8360      	strh	r0, [r4, #26]
90017948:	4472      	add	r2, lr
9001794a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001794e:	ee07 2a10 	vmov	s14, r2
90017952:	ee66 6aa7 	vmul.f32	s13, s13, s15
90017956:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001795a:	edc1 6a00 	vstr	s13, [r1]
9001795e:	8b61      	ldrh	r1, [r4, #26]
90017960:	ee27 7a27 	vmul.f32	s14, s14, s15
90017964:	68e2      	ldr	r2, [r4, #12]
90017966:	1c48      	adds	r0, r1, #1
90017968:	eb02 0281 	add.w	r2, r2, r1, lsl #2
9001796c:	8360      	strh	r0, [r4, #26]
9001796e:	ed82 7a00 	vstr	s14, [r2]
90017972:	e774      	b.n	9001785e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
90017974:	f04f 0005 	mov.w	r0, #5
90017978:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
9001797c:	f80b 0008 	strb.w	r0, [fp, r8]
90017980:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017984:	68e7      	ldr	r7, [r4, #12]
90017986:	f108 0901 	add.w	r9, r8, #1
9001798a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001798e:	f8a4 901a 	strh.w	r9, [r4, #26]
90017992:	ed87 4a00 	vstr	s8, [r7]
90017996:	ee04 2a10 	vmov	s8, r2
9001799a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001799e:	68e7      	ldr	r7, [r4, #12]
900179a0:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
900179a4:	f108 0901 	add.w	r9, r8, #1
900179a8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900179ac:	f8a4 901a 	strh.w	r9, [r4, #26]
900179b0:	ed87 4a00 	vstr	s8, [r7]
900179b4:	e791      	b.n	900178da <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
900179b6:	f1ba 0f00 	cmp.w	sl, #0
900179ba:	d146      	bne.n	90017a4a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
900179bc:	f04f 0005 	mov.w	r0, #5
900179c0:	8327      	strh	r7, [r4, #24]
900179c2:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900179c6:	f80b 0008 	strb.w	r0, [fp, r8]
900179ca:	ee17 0a90 	vmov	r0, s15
900179ce:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900179d2:	68e7      	ldr	r7, [r4, #12]
900179d4:	4408      	add	r0, r1
900179d6:	f108 0901 	add.w	r9, r8, #1
900179da:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900179de:	ee07 0a90 	vmov	s15, r0
900179e2:	f8a4 901a 	strh.w	r9, [r4, #26]
900179e6:	ed87 5a00 	vstr	s10, [r7]
900179ea:	ee05 2a10 	vmov	s10, r2
900179ee:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900179f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900179f6:	68e7      	ldr	r7, [r4, #12]
900179f8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900179fc:	f108 0901 	add.w	r9, r8, #1
90017a00:	441a      	add	r2, r3
90017a02:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017a06:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017a0a:	f8a4 901a 	strh.w	r9, [r4, #26]
90017a0e:	ed87 5a00 	vstr	s10, [r7]
90017a12:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017a16:	68e7      	ldr	r7, [r4, #12]
90017a18:	f108 0901 	add.w	r9, r8, #1
90017a1c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017a20:	f8a4 901a 	strh.w	r9, [r4, #26]
90017a24:	edc7 7a00 	vstr	s15, [r7]
90017a28:	ee07 2a90 	vmov	s15, r2
90017a2c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017a30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017a34:	68e7      	ldr	r7, [r4, #12]
90017a36:	f108 0901 	add.w	r9, r8, #1
90017a3a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017a3e:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017a42:	f8a4 901a 	strh.w	r9, [r4, #26]
90017a46:	edc7 7a00 	vstr	s15, [r7]
90017a4a:	461a      	mov	r2, r3
90017a4c:	ee07 1a90 	vmov	s15, r1
90017a50:	e759      	b.n	90017906 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90017a52:	f1ba 0f00 	cmp.w	sl, #0
90017a56:	d045      	beq.n	90017ae4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90017a58:	ee05 1a90 	vmov	s11, r1
90017a5c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017a60:	eef4 5a66 	vcmp.f32	s11, s13
90017a64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017a68:	d108      	bne.n	90017a7c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
90017a6a:	ee05 3a90 	vmov	s11, r3
90017a6e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017a72:	eef4 5a47 	vcmp.f32	s11, s14
90017a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017a7a:	d033      	beq.n	90017ae4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90017a7c:	9b02      	ldr	r3, [sp, #8]
90017a7e:	8327      	strh	r7, [r4, #24]
90017a80:	b1b3      	cbz	r3, 90017ab0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
90017a82:	2302      	movs	r3, #2
90017a84:	f889 3000 	strb.w	r3, [r9]
90017a88:	8b62      	ldrh	r2, [r4, #26]
90017a8a:	68e3      	ldr	r3, [r4, #12]
90017a8c:	1c51      	adds	r1, r2, #1
90017a8e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017a92:	8361      	strh	r1, [r4, #26]
90017a94:	edc3 6a00 	vstr	s13, [r3]
90017a98:	8b62      	ldrh	r2, [r4, #26]
90017a9a:	68e3      	ldr	r3, [r4, #12]
90017a9c:	1c51      	adds	r1, r2, #1
90017a9e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017aa2:	8361      	strh	r1, [r4, #26]
90017aa4:	ed83 7a00 	vstr	s14, [r3]
90017aa8:	9800      	ldr	r0, [sp, #0]
90017aaa:	b007      	add	sp, #28
90017aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ab0:	2305      	movs	r3, #5
90017ab2:	f889 3000 	strb.w	r3, [r9]
90017ab6:	8b62      	ldrh	r2, [r4, #26]
90017ab8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90017abc:	68e3      	ldr	r3, [r4, #12]
90017abe:	ee07 ea90 	vmov	s15, lr
90017ac2:	1c51      	adds	r1, r2, #1
90017ac4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017ac8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017acc:	8361      	strh	r1, [r4, #26]
90017ace:	ed83 6a00 	vstr	s12, [r3]
90017ad2:	8b62      	ldrh	r2, [r4, #26]
90017ad4:	68e3      	ldr	r3, [r4, #12]
90017ad6:	1c51      	adds	r1, r2, #1
90017ad8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017adc:	8361      	strh	r1, [r4, #26]
90017ade:	edc3 7a00 	vstr	s15, [r3]
90017ae2:	e7d1      	b.n	90017a88 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90017ae4:	ee05 2a90 	vmov	s11, r2
90017ae8:	2305      	movs	r3, #5
90017aea:	9902      	ldr	r1, [sp, #8]
90017aec:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90017af0:	8327      	strh	r7, [r4, #24]
90017af2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017af6:	f889 3000 	strb.w	r3, [r9]
90017afa:	b181      	cbz	r1, 90017b1e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
90017afc:	8b62      	ldrh	r2, [r4, #26]
90017afe:	68e3      	ldr	r3, [r4, #12]
90017b00:	1c51      	adds	r1, r2, #1
90017b02:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017b06:	8361      	strh	r1, [r4, #26]
90017b08:	ed83 5a00 	vstr	s10, [r3]
90017b0c:	8b62      	ldrh	r2, [r4, #26]
90017b0e:	68e3      	ldr	r3, [r4, #12]
90017b10:	1c51      	adds	r1, r2, #1
90017b12:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017b16:	8361      	strh	r1, [r4, #26]
90017b18:	edc3 5a00 	vstr	s11, [r3]
90017b1c:	e7b4      	b.n	90017a88 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90017b1e:	8b65      	ldrh	r5, [r4, #26]
90017b20:	ee17 0a90 	vmov	r0, s15
90017b24:	68e1      	ldr	r1, [r4, #12]
90017b26:	4472      	add	r2, lr
90017b28:	1c6e      	adds	r6, r5, #1
90017b2a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017b2e:	8366      	strh	r6, [r4, #26]
90017b30:	ed81 5a00 	vstr	s10, [r1]
90017b34:	8b65      	ldrh	r5, [r4, #26]
90017b36:	68e1      	ldr	r1, [r4, #12]
90017b38:	1c6e      	adds	r6, r5, #1
90017b3a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017b3e:	8366      	strh	r6, [r4, #26]
90017b40:	edc1 5a00 	vstr	s11, [r1]
90017b44:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90017b48:	8b65      	ldrh	r5, [r4, #26]
90017b4a:	68e1      	ldr	r1, [r4, #12]
90017b4c:	1c6e      	adds	r6, r5, #1
90017b4e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017b52:	ee16 5a10 	vmov	r5, s12
90017b56:	8366      	strh	r6, [r4, #26]
90017b58:	4428      	add	r0, r5
90017b5a:	ee07 0a90 	vmov	s15, r0
90017b5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017b62:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017b66:	edc1 7a00 	vstr	s15, [r1]
90017b6a:	ee07 2a90 	vmov	s15, r2
90017b6e:	8b61      	ldrh	r1, [r4, #26]
90017b70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017b74:	68e5      	ldr	r5, [r4, #12]
90017b76:	1c4e      	adds	r6, r1, #1
90017b78:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90017b7c:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017b80:	8366      	strh	r6, [r4, #26]
90017b82:	edc1 7a00 	vstr	s15, [r1]
90017b86:	8b22      	ldrh	r2, [r4, #24]
90017b88:	68a1      	ldr	r1, [r4, #8]
90017b8a:	1c55      	adds	r5, r2, #1
90017b8c:	8325      	strh	r5, [r4, #24]
90017b8e:	548b      	strb	r3, [r1, r2]
90017b90:	e791      	b.n	90017ab6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90017b94 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90017b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017b98:	4604      	mov	r4, r0
90017b9a:	b08e      	sub	sp, #56	@ 0x38
90017b9c:	4699      	mov	r9, r3
90017b9e:	4688      	mov	r8, r1
90017ba0:	4615      	mov	r5, r2
90017ba2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90017ba4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90017ba8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90017baa:	f7eb fce1 	bl	90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90017bae:	6060      	str	r0, [r4, #4]
90017bb0:	f1b9 0f00 	cmp.w	r9, #0
90017bb4:	f000 80e8 	beq.w	90017d88 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90017bb8:	2800      	cmp	r0, #0
90017bba:	f000 80e5 	beq.w	90017d88 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90017bbe:	a805      	add	r0, sp, #20
90017bc0:	f000 f8f9 	bl	90017db6 <_ZN8touchgfx9Matrix3x3C1Ev>
90017bc4:	6833      	ldr	r3, [r6, #0]
90017bc6:	4630      	mov	r0, r6
90017bc8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90017bca:	4798      	blx	r3
90017bcc:	a805      	add	r0, sp, #20
90017bce:	eef0 0a40 	vmov.f32	s1, s0
90017bd2:	f000 f8f4 	bl	90017dbe <_ZN8touchgfx9Matrix3x35scaleEff>
90017bd6:	6860      	ldr	r0, [r4, #4]
90017bd8:	f1ba 0f03 	cmp.w	sl, #3
90017bdc:	d83b      	bhi.n	90017c56 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90017bde:	e8df f00a 	tbb	[pc, sl]
90017be2:	1002      	.short	0x1002
90017be4:	9f71      	.short	0x9f71
90017be6:	6803      	ldr	r3, [r0, #0]
90017be8:	462a      	mov	r2, r5
90017bea:	4641      	mov	r1, r8
90017bec:	689b      	ldr	r3, [r3, #8]
90017bee:	4798      	blx	r3
90017bf0:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90017bf4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90017bf8:	ee07 7a90 	vmov	s15, r7
90017bfc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90017c00:	e026      	b.n	90017c50 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90017c02:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90017c06:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90017c0a:	8869      	ldrh	r1, [r5, #2]
90017c0c:	1a9b      	subs	r3, r3, r2
90017c0e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017c12:	aa03      	add	r2, sp, #12
90017c14:	1a5b      	subs	r3, r3, r1
90017c16:	4641      	mov	r1, r8
90017c18:	f8ad 300c 	strh.w	r3, [sp, #12]
90017c1c:	882b      	ldrh	r3, [r5, #0]
90017c1e:	f8ad 300e 	strh.w	r3, [sp, #14]
90017c22:	88ab      	ldrh	r3, [r5, #4]
90017c24:	f8ad 3012 	strh.w	r3, [sp, #18]
90017c28:	6803      	ldr	r3, [r0, #0]
90017c2a:	689b      	ldr	r3, [r3, #8]
90017c2c:	4798      	blx	r3
90017c2e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90017d90 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90017c32:	a805      	add	r0, sp, #20
90017c34:	f000 f8e8 	bl	90017e08 <_ZN8touchgfx9Matrix3x36rotateEf>
90017c38:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90017c3c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90017c3e:	ee07 7a90 	vmov	s15, r7
90017c42:	1a9b      	subs	r3, r3, r2
90017c44:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90017c48:	ee00 3a10 	vmov	s0, r3
90017c4c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90017c50:	a805      	add	r0, sp, #20
90017c52:	f000 f927 	bl	90017ea4 <_ZN8touchgfx9Matrix3x39translateEff>
90017c56:	6860      	ldr	r0, [r4, #4]
90017c58:	a905      	add	r1, sp, #20
90017c5a:	2500      	movs	r5, #0
90017c5c:	f109 0602 	add.w	r6, r9, #2
90017c60:	6803      	ldr	r3, [r0, #0]
90017c62:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90017c64:	4798      	blx	r3
90017c66:	6860      	ldr	r0, [r4, #4]
90017c68:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90017c6a:	6803      	ldr	r3, [r0, #0]
90017c6c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90017c70:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017c72:	4798      	blx	r3
90017c74:	6860      	ldr	r0, [r4, #4]
90017c76:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90017c7a:	6803      	ldr	r3, [r0, #0]
90017c7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017c7e:	4798      	blx	r3
90017c80:	6860      	ldr	r0, [r4, #4]
90017c82:	2101      	movs	r1, #1
90017c84:	6803      	ldr	r3, [r0, #0]
90017c86:	68db      	ldr	r3, [r3, #12]
90017c88:	4798      	blx	r3
90017c8a:	f8b9 7000 	ldrh.w	r7, [r9]
90017c8e:	f104 0310 	add.w	r3, r4, #16
90017c92:	61a5      	str	r5, [r4, #24]
90017c94:	f104 0208 	add.w	r2, r4, #8
90017c98:	f104 0114 	add.w	r1, r4, #20
90017c9c:	f104 000c 	add.w	r0, r4, #12
90017ca0:	f7ed ff1a 	bl	90005ad8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90017ca4:	42af      	cmp	r7, r5
90017ca6:	dd60      	ble.n	90017d6a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90017ca8:	8831      	ldrh	r1, [r6, #0]
90017caa:	1cb2      	adds	r2, r6, #2
90017cac:	4620      	mov	r0, r4
90017cae:	3501      	adds	r5, #1
90017cb0:	f101 030f 	add.w	r3, r1, #15
90017cb4:	f3c3 1307 	ubfx	r3, r3, #4, #8
90017cb8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90017cbc:	f7ff fda2 	bl	90017804 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90017cc0:	4606      	mov	r6, r0
90017cc2:	e7ef      	b.n	90017ca4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90017cc4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90017cc8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90017ccc:	8829      	ldrh	r1, [r5, #0]
90017cce:	1a9b      	subs	r3, r3, r2
90017cd0:	f8ad 2010 	strh.w	r2, [sp, #16]
90017cd4:	aa03      	add	r2, sp, #12
90017cd6:	1a5b      	subs	r3, r3, r1
90017cd8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90017cdc:	886d      	ldrh	r5, [r5, #2]
90017cde:	f8ad 300c 	strh.w	r3, [sp, #12]
90017ce2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90017ce6:	f8ad 1012 	strh.w	r1, [sp, #18]
90017cea:	1a5b      	subs	r3, r3, r1
90017cec:	4641      	mov	r1, r8
90017cee:	1b5b      	subs	r3, r3, r5
90017cf0:	f8ad 300e 	strh.w	r3, [sp, #14]
90017cf4:	6803      	ldr	r3, [r0, #0]
90017cf6:	689b      	ldr	r3, [r3, #8]
90017cf8:	4798      	blx	r3
90017cfa:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90017d94 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90017cfe:	a805      	add	r0, sp, #20
90017d00:	f000 f882 	bl	90017e08 <_ZN8touchgfx9Matrix3x36rotateEf>
90017d04:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017d08:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90017d0a:	1a9b      	subs	r3, r3, r2
90017d0c:	ee00 3a90 	vmov	s1, r3
90017d10:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90017d14:	1bdb      	subs	r3, r3, r7
90017d16:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90017d1a:	ee00 3a10 	vmov	s0, r3
90017d1e:	e795      	b.n	90017c4c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90017d20:	886b      	ldrh	r3, [r5, #2]
90017d22:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90017d26:	f8ad 300c 	strh.w	r3, [sp, #12]
90017d2a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90017d2e:	8829      	ldrh	r1, [r5, #0]
90017d30:	1a9b      	subs	r3, r3, r2
90017d32:	f8ad 2012 	strh.w	r2, [sp, #18]
90017d36:	aa03      	add	r2, sp, #12
90017d38:	1a5b      	subs	r3, r3, r1
90017d3a:	4641      	mov	r1, r8
90017d3c:	f8ad 300e 	strh.w	r3, [sp, #14]
90017d40:	88eb      	ldrh	r3, [r5, #6]
90017d42:	f8ad 3010 	strh.w	r3, [sp, #16]
90017d46:	6803      	ldr	r3, [r0, #0]
90017d48:	689b      	ldr	r3, [r3, #8]
90017d4a:	4798      	blx	r3
90017d4c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90017d98 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90017d50:	a805      	add	r0, sp, #20
90017d52:	f000 f859 	bl	90017e08 <_ZN8touchgfx9Matrix3x36rotateEf>
90017d56:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017d5a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90017d5e:	1bdb      	subs	r3, r3, r7
90017d60:	ee00 3a90 	vmov	s1, r3
90017d64:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90017d68:	e748      	b.n	90017bfc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90017d6a:	6860      	ldr	r0, [r4, #4]
90017d6c:	2100      	movs	r1, #0
90017d6e:	8b22      	ldrh	r2, [r4, #24]
90017d70:	6803      	ldr	r3, [r0, #0]
90017d72:	9101      	str	r1, [sp, #4]
90017d74:	8b61      	ldrh	r1, [r4, #26]
90017d76:	9100      	str	r1, [sp, #0]
90017d78:	6a1d      	ldr	r5, [r3, #32]
90017d7a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90017d7e:	47a8      	blx	r5
90017d80:	6860      	ldr	r0, [r4, #4]
90017d82:	6803      	ldr	r3, [r0, #0]
90017d84:	69db      	ldr	r3, [r3, #28]
90017d86:	4798      	blx	r3
90017d88:	b00e      	add	sp, #56	@ 0x38
90017d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017d8e:	bf00      	nop
90017d90:	42b40000 	.word	0x42b40000
90017d94:	43340000 	.word	0x43340000
90017d98:	43870000 	.word	0x43870000

90017d9c <_ZN8touchgfx9Matrix3x35resetEv>:
90017d9c:	2300      	movs	r3, #0
90017d9e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90017da2:	6043      	str	r3, [r0, #4]
90017da4:	6002      	str	r2, [r0, #0]
90017da6:	6083      	str	r3, [r0, #8]
90017da8:	60c3      	str	r3, [r0, #12]
90017daa:	6102      	str	r2, [r0, #16]
90017dac:	6143      	str	r3, [r0, #20]
90017dae:	6183      	str	r3, [r0, #24]
90017db0:	61c3      	str	r3, [r0, #28]
90017db2:	6202      	str	r2, [r0, #32]
90017db4:	4770      	bx	lr

90017db6 <_ZN8touchgfx9Matrix3x3C1Ev>:
90017db6:	b508      	push	{r3, lr}
90017db8:	f7ff fff0 	bl	90017d9c <_ZN8touchgfx9Matrix3x35resetEv>
90017dbc:	bd08      	pop	{r3, pc}

90017dbe <_ZN8touchgfx9Matrix3x35scaleEff>:
90017dbe:	edd0 7a00 	vldr	s15, [r0]
90017dc2:	ee67 7a80 	vmul.f32	s15, s15, s0
90017dc6:	edc0 7a00 	vstr	s15, [r0]
90017dca:	edd0 7a01 	vldr	s15, [r0, #4]
90017dce:	ee67 7a80 	vmul.f32	s15, s15, s0
90017dd2:	edc0 7a01 	vstr	s15, [r0, #4]
90017dd6:	edd0 7a02 	vldr	s15, [r0, #8]
90017dda:	ee27 0a80 	vmul.f32	s0, s15, s0
90017dde:	edd0 7a03 	vldr	s15, [r0, #12]
90017de2:	ee67 7aa0 	vmul.f32	s15, s15, s1
90017de6:	ed80 0a02 	vstr	s0, [r0, #8]
90017dea:	edc0 7a03 	vstr	s15, [r0, #12]
90017dee:	edd0 7a04 	vldr	s15, [r0, #16]
90017df2:	ee67 7aa0 	vmul.f32	s15, s15, s1
90017df6:	edc0 7a04 	vstr	s15, [r0, #16]
90017dfa:	edd0 7a05 	vldr	s15, [r0, #20]
90017dfe:	ee67 0aa0 	vmul.f32	s1, s15, s1
90017e02:	edc0 0a05 	vstr	s1, [r0, #20]
90017e06:	4770      	bx	lr

90017e08 <_ZN8touchgfx9Matrix3x36rotateEf>:
90017e08:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90017e9c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90017e0c:	ee20 0a27 	vmul.f32	s0, s0, s15
90017e10:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90017ea0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90017e14:	b510      	push	{r4, lr}
90017e16:	ed2d 8b02 	vpush	{d8}
90017e1a:	eec0 8a27 	vdiv.f32	s17, s0, s15
90017e1e:	4604      	mov	r4, r0
90017e20:	eeb0 0a68 	vmov.f32	s0, s17
90017e24:	f011 f9d0 	bl	900291c8 <cosf>
90017e28:	eeb0 8a40 	vmov.f32	s16, s0
90017e2c:	eeb0 0a68 	vmov.f32	s0, s17
90017e30:	f011 f906 	bl	90029040 <sinf>
90017e34:	edd4 6a03 	vldr	s13, [r4, #12]
90017e38:	edd4 4a00 	vldr	s9, [r4]
90017e3c:	ee60 7a66 	vnmul.f32	s15, s0, s13
90017e40:	ed94 7a04 	vldr	s14, [r4, #16]
90017e44:	ed94 5a01 	vldr	s10, [r4, #4]
90017e48:	ee66 6a88 	vmul.f32	s13, s13, s16
90017e4c:	edd4 5a02 	vldr	s11, [r4, #8]
90017e50:	eee8 7a24 	vfma.f32	s15, s16, s9
90017e54:	eee0 6a24 	vfma.f32	s13, s0, s9
90017e58:	edc4 7a00 	vstr	s15, [r4]
90017e5c:	ee60 7a47 	vnmul.f32	s15, s0, s14
90017e60:	ee27 7a08 	vmul.f32	s14, s14, s16
90017e64:	edc4 6a03 	vstr	s13, [r4, #12]
90017e68:	eee8 7a05 	vfma.f32	s15, s16, s10
90017e6c:	eea0 7a05 	vfma.f32	s14, s0, s10
90017e70:	edc4 7a01 	vstr	s15, [r4, #4]
90017e74:	edd4 7a05 	vldr	s15, [r4, #20]
90017e78:	ed84 7a04 	vstr	s14, [r4, #16]
90017e7c:	ee20 6a67 	vnmul.f32	s12, s0, s15
90017e80:	ee67 7a88 	vmul.f32	s15, s15, s16
90017e84:	eea8 6a25 	vfma.f32	s12, s16, s11
90017e88:	eee0 7a25 	vfma.f32	s15, s0, s11
90017e8c:	ecbd 8b02 	vpop	{d8}
90017e90:	ed84 6a02 	vstr	s12, [r4, #8]
90017e94:	edc4 7a05 	vstr	s15, [r4, #20]
90017e98:	bd10      	pop	{r4, pc}
90017e9a:	bf00      	nop
90017e9c:	40490fdb 	.word	0x40490fdb
90017ea0:	43340000 	.word	0x43340000

90017ea4 <_ZN8touchgfx9Matrix3x39translateEff>:
90017ea4:	ed90 6a06 	vldr	s12, [r0, #24]
90017ea8:	edd0 7a00 	vldr	s15, [r0]
90017eac:	edd0 6a07 	vldr	s13, [r0, #28]
90017eb0:	eee6 7a00 	vfma.f32	s15, s12, s0
90017eb4:	ed90 7a08 	vldr	s14, [r0, #32]
90017eb8:	edc0 7a00 	vstr	s15, [r0]
90017ebc:	edd0 7a01 	vldr	s15, [r0, #4]
90017ec0:	eee6 7a80 	vfma.f32	s15, s13, s0
90017ec4:	edc0 7a01 	vstr	s15, [r0, #4]
90017ec8:	edd0 7a02 	vldr	s15, [r0, #8]
90017ecc:	eee7 7a00 	vfma.f32	s15, s14, s0
90017ed0:	edc0 7a02 	vstr	s15, [r0, #8]
90017ed4:	edd0 7a03 	vldr	s15, [r0, #12]
90017ed8:	eee6 7a20 	vfma.f32	s15, s12, s1
90017edc:	edc0 7a03 	vstr	s15, [r0, #12]
90017ee0:	edd0 7a04 	vldr	s15, [r0, #16]
90017ee4:	eee6 7aa0 	vfma.f32	s15, s13, s1
90017ee8:	edc0 7a04 	vstr	s15, [r0, #16]
90017eec:	edd0 7a05 	vldr	s15, [r0, #20]
90017ef0:	eee7 7a20 	vfma.f32	s15, s14, s1
90017ef4:	edc0 7a05 	vstr	s15, [r0, #20]
90017ef8:	4770      	bx	lr

90017efa <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90017efa:	edd0 6a01 	vldr	s13, [r0, #4]
90017efe:	b084      	sub	sp, #16
90017f00:	edd0 7a04 	vldr	s15, [r0, #16]
90017f04:	ed90 7a03 	vldr	s14, [r0, #12]
90017f08:	ee60 7aa7 	vmul.f32	s15, s1, s15
90017f0c:	ee60 0aa6 	vmul.f32	s1, s1, s13
90017f10:	edd0 6a00 	vldr	s13, [r0]
90017f14:	eee7 7a00 	vfma.f32	s15, s14, s0
90017f18:	ed90 7a05 	vldr	s14, [r0, #20]
90017f1c:	eee6 0a80 	vfma.f32	s1, s13, s0
90017f20:	ed90 0a02 	vldr	s0, [r0, #8]
90017f24:	ee30 0a80 	vadd.f32	s0, s1, s0
90017f28:	ee77 0a87 	vadd.f32	s1, s15, s14
90017f2c:	b004      	add	sp, #16
90017f2e:	4770      	bx	lr

90017f30 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90017f30:	b530      	push	{r4, r5, lr}
90017f32:	8083      	strh	r3, [r0, #4]
90017f34:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90017f38:	f89d 5018 	ldrb.w	r5, [sp, #24]
90017f3c:	80c3      	strh	r3, [r0, #6]
90017f3e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90017f42:	6141      	str	r1, [r0, #20]
90017f44:	7203      	strb	r3, [r0, #8]
90017f46:	f89d 3014 	ldrb.w	r3, [sp, #20]
90017f4a:	8302      	strh	r2, [r0, #24]
90017f4c:	7243      	strb	r3, [r0, #9]
90017f4e:	7a83      	ldrb	r3, [r0, #10]
90017f50:	f365 0306 	bfi	r3, r5, #0, #7
90017f54:	f89d 501c 	ldrb.w	r5, [sp, #28]
90017f58:	f365 13c7 	bfi	r3, r5, #7, #1
90017f5c:	7283      	strb	r3, [r0, #10]
90017f5e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017f62:	72c3      	strb	r3, [r0, #11]
90017f64:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90017f68:	7303      	strb	r3, [r0, #12]
90017f6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90017f6e:	81c3      	strh	r3, [r0, #14]
90017f70:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90017f74:	8203      	strh	r3, [r0, #16]
90017f76:	4b01      	ldr	r3, [pc, #4]	@ (90017f7c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017f78:	6003      	str	r3, [r0, #0]
90017f7a:	bd30      	pop	{r4, r5, pc}
90017f7c:	9002d6d8 	.word	0x9002d6d8

90017f80 <_ZNK8touchgfx9ConstFont4findEt>:
90017f80:	b5f0      	push	{r4, r5, r6, r7, lr}
90017f82:	6944      	ldr	r4, [r0, #20]
90017f84:	b3bc      	cbz	r4, 90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017f86:	88a3      	ldrh	r3, [r4, #4]
90017f88:	8b02      	ldrh	r2, [r0, #24]
90017f8a:	1acb      	subs	r3, r1, r3
90017f8c:	f102 32ff 	add.w	r2, r2, #4294967295
90017f90:	d431      	bmi.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017f92:	4293      	cmp	r3, r2
90017f94:	dd0c      	ble.n	90017fb0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90017f96:	230e      	movs	r3, #14
90017f98:	fb03 4302 	mla	r3, r3, r2, r4
90017f9c:	889b      	ldrh	r3, [r3, #4]
90017f9e:	1a5b      	subs	r3, r3, r1
90017fa0:	1ad3      	subs	r3, r2, r3
90017fa2:	429a      	cmp	r2, r3
90017fa4:	db27      	blt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017fa6:	2b00      	cmp	r3, #0
90017fa8:	bfbc      	itt	lt
90017faa:	2302      	movlt	r3, #2
90017fac:	fb92 f3f3 	sdivlt	r3, r2, r3
90017fb0:	2500      	movs	r5, #0
90017fb2:	260e      	movs	r6, #14
90017fb4:	4295      	cmp	r5, r2
90017fb6:	dc1e      	bgt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017fb8:	fb06 4003 	mla	r0, r6, r3, r4
90017fbc:	8887      	ldrh	r7, [r0, #4]
90017fbe:	42b9      	cmp	r1, r7
90017fc0:	d01a      	beq.n	90017ff8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90017fc2:	d20d      	bcs.n	90017fe0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90017fc4:	1e5a      	subs	r2, r3, #1
90017fc6:	4295      	cmp	r5, r2
90017fc8:	dc15      	bgt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017fca:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90017fce:	1a5b      	subs	r3, r3, r1
90017fd0:	1ad3      	subs	r3, r2, r3
90017fd2:	429a      	cmp	r2, r3
90017fd4:	db0f      	blt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017fd6:	429d      	cmp	r5, r3
90017fd8:	ddec      	ble.n	90017fb4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017fda:	1953      	adds	r3, r2, r5
90017fdc:	105b      	asrs	r3, r3, #1
90017fde:	e7e9      	b.n	90017fb4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017fe0:	1c5d      	adds	r5, r3, #1
90017fe2:	42aa      	cmp	r2, r5
90017fe4:	db07      	blt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017fe6:	8a43      	ldrh	r3, [r0, #18]
90017fe8:	1acb      	subs	r3, r1, r3
90017fea:	442b      	add	r3, r5
90017fec:	429d      	cmp	r5, r3
90017fee:	dc02      	bgt.n	90017ff6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ff0:	429a      	cmp	r2, r3
90017ff2:	dadf      	bge.n	90017fb4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017ff4:	e7f1      	b.n	90017fda <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017ff6:	2000      	movs	r0, #0
90017ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017ffa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90017ffa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017ffc:	4604      	mov	r4, r0
90017ffe:	4617      	mov	r7, r2
90018000:	461e      	mov	r6, r3
90018002:	b911      	cbnz	r1, 9001800a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90018004:	2500      	movs	r5, #0
90018006:	4628      	mov	r0, r5
90018008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001800a:	290a      	cmp	r1, #10
9001800c:	d0fa      	beq.n	90018004 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001800e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018012:	4291      	cmp	r1, r2
90018014:	d0f6      	beq.n	90018004 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018016:	f242 020b 	movw	r2, #8203	@ 0x200b
9001801a:	4291      	cmp	r1, r2
9001801c:	d0f2      	beq.n	90018004 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001801e:	f7ff ffaf 	bl	90017f80 <_ZNK8touchgfx9ConstFont4findEt>
90018022:	4605      	mov	r5, r0
90018024:	b950      	cbnz	r0, 9001803c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90018026:	6823      	ldr	r3, [r4, #0]
90018028:	4620      	mov	r0, r4
9001802a:	691b      	ldr	r3, [r3, #16]
9001802c:	4798      	blx	r3
9001802e:	4601      	mov	r1, r0
90018030:	4620      	mov	r0, r4
90018032:	f7ff ffa5 	bl	90017f80 <_ZNK8touchgfx9ConstFont4findEt>
90018036:	4605      	mov	r5, r0
90018038:	2800      	cmp	r0, #0
9001803a:	d0e3      	beq.n	90018004 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001803c:	6823      	ldr	r3, [r4, #0]
9001803e:	4629      	mov	r1, r5
90018040:	4620      	mov	r0, r4
90018042:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90018044:	4798      	blx	r3
90018046:	6038      	str	r0, [r7, #0]
90018048:	6823      	ldr	r3, [r4, #0]
9001804a:	4620      	mov	r0, r4
9001804c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001804e:	4798      	blx	r3
90018050:	7030      	strb	r0, [r6, #0]
90018052:	e7d8      	b.n	90018006 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90018054 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018054:	2000      	movs	r0, #0
90018056:	4770      	bx	lr

90018058 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90018058:	2001      	movs	r0, #1
9001805a:	4770      	bx	lr

9001805c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001805c:	2002      	movs	r0, #2
9001805e:	4770      	bx	lr

90018060 <_ZN8touchgfx6ScreenD1Ev>:
90018060:	4770      	bx	lr

90018062 <_ZN8touchgfx6Screen11setupScreenEv>:
90018062:	4770      	bx	lr

90018064 <_ZN8touchgfx12GestureEventD1Ev>:
90018064:	4770      	bx	lr

90018066 <_ZN8touchgfx9DragEventD1Ev>:
90018066:	4770      	bx	lr

90018068 <_ZN8touchgfx10ClickEventD1Ev>:
90018068:	4770      	bx	lr

9001806a <_ZN8touchgfx10ClickEventD0Ev>:
9001806a:	b510      	push	{r4, lr}
9001806c:	4604      	mov	r4, r0
9001806e:	210c      	movs	r1, #12
90018070:	f010 ff74 	bl	90028f5c <_ZdlPvj>
90018074:	4620      	mov	r0, r4
90018076:	bd10      	pop	{r4, pc}

90018078 <_ZN8touchgfx9DragEventD0Ev>:
90018078:	b510      	push	{r4, lr}
9001807a:	4604      	mov	r4, r0
9001807c:	2110      	movs	r1, #16
9001807e:	f010 ff6d 	bl	90028f5c <_ZdlPvj>
90018082:	4620      	mov	r0, r4
90018084:	bd10      	pop	{r4, pc}

90018086 <_ZN8touchgfx12GestureEventD0Ev>:
90018086:	b510      	push	{r4, lr}
90018088:	4604      	mov	r4, r0
9001808a:	210c      	movs	r1, #12
9001808c:	f010 ff66 	bl	90028f5c <_ZdlPvj>
90018090:	4620      	mov	r0, r4
90018092:	bd10      	pop	{r4, pc}

90018094 <_ZN8touchgfx6ScreenD0Ev>:
90018094:	b510      	push	{r4, lr}
90018096:	4604      	mov	r4, r0
90018098:	213c      	movs	r1, #60	@ 0x3c
9001809a:	f010 ff5f 	bl	90028f5c <_ZdlPvj>
9001809e:	4620      	mov	r0, r4
900180a0:	bd10      	pop	{r4, pc}
	...

900180a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900180a4:	b530      	push	{r4, r5, lr}
900180a6:	460d      	mov	r5, r1
900180a8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900180aa:	b087      	sub	sp, #28
900180ac:	4604      	mov	r4, r0
900180ae:	b301      	cbz	r1, 900180f2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900180b0:	a801      	add	r0, sp, #4
900180b2:	f7ff fb81 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900180b6:	892a      	ldrh	r2, [r5, #8]
900180b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900180bc:	7928      	ldrb	r0, [r5, #4]
900180be:	1ad2      	subs	r2, r2, r3
900180c0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900180c2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900180c6:	441a      	add	r2, r3
900180c8:	896b      	ldrh	r3, [r5, #10]
900180ca:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900180ce:	f88d 0010 	strb.w	r0, [sp, #16]
900180d2:	1b5b      	subs	r3, r3, r5
900180d4:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
900180d6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900180d8:	442b      	add	r3, r5
900180da:	4d07      	ldr	r5, [pc, #28]	@ (900180f8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900180dc:	f8ad 1012 	strh.w	r1, [sp, #18]
900180e0:	a903      	add	r1, sp, #12
900180e2:	9503      	str	r5, [sp, #12]
900180e4:	f8ad 2014 	strh.w	r2, [sp, #20]
900180e8:	f8ad 3016 	strh.w	r3, [sp, #22]
900180ec:	6803      	ldr	r3, [r0, #0]
900180ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900180f0:	4798      	blx	r3
900180f2:	b007      	add	sp, #28
900180f4:	bd30      	pop	{r4, r5, pc}
900180f6:	bf00      	nop
900180f8:	9002d768 	.word	0x9002d768

900180fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900180fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018100:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90018102:	b08a      	sub	sp, #40	@ 0x28
90018104:	4604      	mov	r4, r0
90018106:	460d      	mov	r5, r1
90018108:	b113      	cbz	r3, 90018110 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001810a:	790b      	ldrb	r3, [r1, #4]
9001810c:	2b00      	cmp	r3, #0
9001810e:	d044      	beq.n	9001819a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018110:	f104 0804 	add.w	r8, r4, #4
90018114:	a803      	add	r0, sp, #12
90018116:	4641      	mov	r1, r8
90018118:	f7ff fb4e 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001811c:	792b      	ldrb	r3, [r5, #4]
9001811e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018122:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018126:	b983      	cbnz	r3, 9001814a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018128:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001812c:	892a      	ldrh	r2, [r5, #8]
9001812e:	88e9      	ldrh	r1, [r5, #6]
90018130:	4640      	mov	r0, r8
90018132:	1b92      	subs	r2, r2, r6
90018134:	9301      	str	r3, [sp, #4]
90018136:	1bc9      	subs	r1, r1, r7
90018138:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001813c:	b212      	sxth	r2, r2
9001813e:	9300      	str	r3, [sp, #0]
90018140:	b209      	sxth	r1, r1
90018142:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90018146:	f7f7 ffb5 	bl	900100b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001814a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001814c:	b329      	cbz	r1, 9001819a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001814e:	a805      	add	r0, sp, #20
90018150:	f7ff fb32 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018154:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018158:	792b      	ldrb	r3, [r5, #4]
9001815a:	a907      	add	r1, sp, #28
9001815c:	1abf      	subs	r7, r7, r2
9001815e:	88ea      	ldrh	r2, [r5, #6]
90018160:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018162:	4417      	add	r7, r2
90018164:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90018166:	f88d 3020 	strb.w	r3, [sp, #32]
9001816a:	4417      	add	r7, r2
9001816c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90018170:	1ab6      	subs	r6, r6, r2
90018172:	892a      	ldrh	r2, [r5, #8]
90018174:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90018178:	4416      	add	r6, r2
9001817a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001817c:	4416      	add	r6, r2
9001817e:	4a08      	ldr	r2, [pc, #32]	@ (900181a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90018180:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90018184:	2600      	movs	r6, #0
90018186:	9207      	str	r2, [sp, #28]
90018188:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001818c:	6803      	ldr	r3, [r0, #0]
9001818e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018190:	4798      	blx	r3
90018192:	792b      	ldrb	r3, [r5, #4]
90018194:	b10b      	cbz	r3, 9001819a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018196:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001819a:	b00a      	add	sp, #40	@ 0x28
9001819c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900181a0:	9002d740 	.word	0x9002d740

900181a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900181a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900181a8:	460c      	mov	r4, r1
900181aa:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900181ac:	b088      	sub	sp, #32
900181ae:	4605      	mov	r5, r0
900181b0:	2900      	cmp	r1, #0
900181b2:	d06d      	beq.n	90018290 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900181b4:	4668      	mov	r0, sp
900181b6:	f7ff faff 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900181ba:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
900181bc:	88e3      	ldrh	r3, [r4, #6]
900181be:	f9bd 8000 	ldrsh.w	r8, [sp]
900181c2:	440b      	add	r3, r1
900181c4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900181c8:	b21b      	sxth	r3, r3
900181ca:	4543      	cmp	r3, r8
900181cc:	db31      	blt.n	90018232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900181ce:	f8bd c004 	ldrh.w	ip, [sp, #4]
900181d2:	44c4      	add	ip, r8
900181d4:	fa0f fc8c 	sxth.w	ip, ip
900181d8:	4563      	cmp	r3, ip
900181da:	da2a      	bge.n	90018232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900181dc:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900181de:	8926      	ldrh	r6, [r4, #8]
900181e0:	4416      	add	r6, r2
900181e2:	b236      	sxth	r6, r6
900181e4:	42be      	cmp	r6, r7
900181e6:	db24      	blt.n	90018232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900181e8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900181ec:	4438      	add	r0, r7
900181ee:	b200      	sxth	r0, r0
900181f0:	4286      	cmp	r6, r0
900181f2:	da1e      	bge.n	90018232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900181f4:	8963      	ldrh	r3, [r4, #10]
900181f6:	4419      	add	r1, r3
900181f8:	b209      	sxth	r1, r1
900181fa:	4541      	cmp	r1, r8
900181fc:	db08      	blt.n	90018210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900181fe:	4561      	cmp	r1, ip
90018200:	da06      	bge.n	90018210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018202:	89a3      	ldrh	r3, [r4, #12]
90018204:	441a      	add	r2, r3
90018206:	b212      	sxth	r2, r2
90018208:	42ba      	cmp	r2, r7
9001820a:	db01      	blt.n	90018210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001820c:	4282      	cmp	r2, r0
9001820e:	db10      	blt.n	90018232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018210:	4b21      	ldr	r3, [pc, #132]	@ (90018298 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90018212:	a904      	add	r1, sp, #16
90018214:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018216:	9304      	str	r3, [sp, #16]
90018218:	2302      	movs	r3, #2
9001821a:	f88d 3014 	strb.w	r3, [sp, #20]
9001821e:	2300      	movs	r3, #0
90018220:	f8ad 3016 	strh.w	r3, [sp, #22]
90018224:	f8ad 3018 	strh.w	r3, [sp, #24]
90018228:	f8ad 301a 	strh.w	r3, [sp, #26]
9001822c:	6803      	ldr	r3, [r0, #0]
9001822e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018230:	4798      	blx	r3
90018232:	1d29      	adds	r1, r5, #4
90018234:	a802      	add	r0, sp, #8
90018236:	f7ff fabf 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001823a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001823e:	88e0      	ldrh	r0, [r4, #6]
90018240:	eba3 0808 	sub.w	r8, r3, r8
90018244:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018248:	7921      	ldrb	r1, [r4, #4]
9001824a:	fa1f f888 	uxth.w	r8, r8
9001824e:	1bdf      	subs	r7, r3, r7
90018250:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90018254:	b2bb      	uxth	r3, r7
90018256:	4440      	add	r0, r8
90018258:	8922      	ldrh	r2, [r4, #8]
9001825a:	8967      	ldrh	r7, [r4, #10]
9001825c:	4460      	add	r0, ip
9001825e:	89a4      	ldrh	r4, [r4, #12]
90018260:	441a      	add	r2, r3
90018262:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90018264:	44b8      	add	r8, r7
90018266:	4423      	add	r3, r4
90018268:	f8ad 0016 	strh.w	r0, [sp, #22]
9001826c:	4432      	add	r2, r6
9001826e:	44e0      	add	r8, ip
90018270:	4433      	add	r3, r6
90018272:	4c0a      	ldr	r4, [pc, #40]	@ (9001829c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018274:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018276:	f88d 1014 	strb.w	r1, [sp, #20]
9001827a:	a904      	add	r1, sp, #16
9001827c:	9404      	str	r4, [sp, #16]
9001827e:	f8ad 2018 	strh.w	r2, [sp, #24]
90018282:	f8ad 801a 	strh.w	r8, [sp, #26]
90018286:	f8ad 301c 	strh.w	r3, [sp, #28]
9001828a:	6803      	ldr	r3, [r0, #0]
9001828c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001828e:	4798      	blx	r3
90018290:	b008      	add	sp, #32
90018292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018296:	bf00      	nop
90018298:	9002d740 	.word	0x9002d740
9001829c:	9002d754 	.word	0x9002d754

900182a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900182a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900182a2:	4604      	mov	r4, r0
900182a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900182a8:	3201      	adds	r2, #1
900182aa:	d112      	bne.n	900182d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900182ac:	2500      	movs	r5, #0
900182ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900182b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900182b6:	6803      	ldr	r3, [r0, #0]
900182b8:	9500      	str	r5, [sp, #0]
900182ba:	466d      	mov	r5, sp
900182bc:	f8ad 1004 	strh.w	r1, [sp, #4]
900182c0:	f8ad 2006 	strh.w	r2, [sp, #6]
900182c4:	4629      	mov	r1, r5
900182c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900182c8:	4798      	blx	r3
900182ca:	e895 0003 	ldmia.w	r5, {r0, r1}
900182ce:	e884 0003 	stmia.w	r4, {r0, r1}
900182d2:	4620      	mov	r0, r4
900182d4:	b003      	add	sp, #12
900182d6:	bd30      	pop	{r4, r5, pc}

900182d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900182d8:	b513      	push	{r0, r1, r4, lr}
900182da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900182de:	4604      	mov	r4, r0
900182e0:	3301      	adds	r3, #1
900182e2:	d109      	bne.n	900182f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900182e4:	4601      	mov	r1, r0
900182e6:	4668      	mov	r0, sp
900182e8:	f7ff fa66 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900182ec:	f8bd 3000 	ldrh.w	r3, [sp]
900182f0:	8423      	strh	r3, [r4, #32]
900182f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900182f6:	8463      	strh	r3, [r4, #34]	@ 0x22
900182f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900182fc:	b002      	add	sp, #8
900182fe:	bd10      	pop	{r4, pc}

90018300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90018300:	b513      	push	{r0, r1, r4, lr}
90018302:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90018306:	4604      	mov	r4, r0
90018308:	3301      	adds	r3, #1
9001830a:	d109      	bne.n	90018320 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001830c:	4601      	mov	r1, r0
9001830e:	4668      	mov	r0, sp
90018310:	f7ff fa52 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018314:	f8bd 3000 	ldrh.w	r3, [sp]
90018318:	8423      	strh	r3, [r4, #32]
9001831a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001831e:	8463      	strh	r3, [r4, #34]	@ 0x22
90018320:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90018324:	b002      	add	sp, #8
90018326:	bd10      	pop	{r4, pc}

90018328 <_ZN8touchgfx6ScreenC1Ev>:
90018328:	b570      	push	{r4, r5, r6, lr}
9001832a:	4b17      	ldr	r3, [pc, #92]	@ (90018388 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001832c:	4605      	mov	r5, r0
9001832e:	4a17      	ldr	r2, [pc, #92]	@ (9001838c <_ZN8touchgfx6ScreenC1Ev+0x64>)
90018330:	2101      	movs	r1, #1
90018332:	f845 3b04 	str.w	r3, [r5], #4
90018336:	2300      	movs	r3, #0
90018338:	6042      	str	r2, [r0, #4]
9001833a:	4604      	mov	r4, r0
9001833c:	8103      	strh	r3, [r0, #8]
9001833e:	8143      	strh	r3, [r0, #10]
90018340:	8183      	strh	r3, [r0, #12]
90018342:	81c3      	strh	r3, [r0, #14]
90018344:	8203      	strh	r3, [r0, #16]
90018346:	8243      	strh	r3, [r0, #18]
90018348:	8283      	strh	r3, [r0, #20]
9001834a:	82c3      	strh	r3, [r0, #22]
9001834c:	6203      	str	r3, [r0, #32]
9001834e:	8483      	strh	r3, [r0, #36]	@ 0x24
90018350:	84c3      	strh	r3, [r0, #38]	@ 0x26
90018352:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90018356:	6343      	str	r3, [r0, #52]	@ 0x34
90018358:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001835c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90018360:	e9c0 3306 	strd	r3, r3, [r0, #24]
90018364:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90018368:	4b09      	ldr	r3, [pc, #36]	@ (90018390 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001836a:	4628      	mov	r0, r5
9001836c:	f9b3 6000 	ldrsh.w	r6, [r3]
90018370:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90018372:	4a08      	ldr	r2, [pc, #32]	@ (90018394 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90018374:	f9b2 1000 	ldrsh.w	r1, [r2]
90018378:	4798      	blx	r3
9001837a:	6863      	ldr	r3, [r4, #4]
9001837c:	4628      	mov	r0, r5
9001837e:	4631      	mov	r1, r6
90018380:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90018382:	4798      	blx	r3
90018384:	4620      	mov	r0, r4
90018386:	bd70      	pop	{r4, r5, r6, pc}
90018388:	9002d77c 	.word	0x9002d77c
9001838c:	9002d21c 	.word	0x9002d21c
90018390:	24021982 	.word	0x24021982
90018394:	24021980 	.word	0x24021980

90018398 <_ZN8touchgfx6Screen4drawEv>:
90018398:	4b09      	ldr	r3, [pc, #36]	@ (900183c0 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001839a:	b507      	push	{r0, r1, r2, lr}
9001839c:	f9b3 2000 	ldrsh.w	r2, [r3]
900183a0:	2100      	movs	r1, #0
900183a2:	4b08      	ldr	r3, [pc, #32]	@ (900183c4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900183a4:	9100      	str	r1, [sp, #0]
900183a6:	4669      	mov	r1, sp
900183a8:	f9b3 3000 	ldrsh.w	r3, [r3]
900183ac:	f8ad 2004 	strh.w	r2, [sp, #4]
900183b0:	f8ad 3006 	strh.w	r3, [sp, #6]
900183b4:	6803      	ldr	r3, [r0, #0]
900183b6:	689b      	ldr	r3, [r3, #8]
900183b8:	4798      	blx	r3
900183ba:	b003      	add	sp, #12
900183bc:	f85d fb04 	ldr.w	pc, [sp], #4
900183c0:	24021980 	.word	0x24021980
900183c4:	24021982 	.word	0x24021982

900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900183c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900183cc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900183d0:	b089      	sub	sp, #36	@ 0x24
900183d2:	4680      	mov	r8, r0
900183d4:	460c      	mov	r4, r1
900183d6:	2b00      	cmp	r3, #0
900183d8:	4615      	mov	r5, r2
900183da:	dd0e      	ble.n	900183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900183dc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900183e0:	2b00      	cmp	r3, #0
900183e2:	dd0a      	ble.n	900183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900183e4:	4628      	mov	r0, r5
900183e6:	f7ff ff5b 	bl	900182a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900183ea:	4621      	mov	r1, r4
900183ec:	f7fd fe67 	bl	900160be <_ZNK8touchgfx4Rect9intersectERKS0_>
900183f0:	69eb      	ldr	r3, [r5, #28]
900183f2:	b928      	cbnz	r0, 90018400 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900183f4:	461d      	mov	r5, r3
900183f6:	2b00      	cmp	r3, #0
900183f8:	d1f4      	bne.n	900183e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900183fa:	b009      	add	sp, #36	@ 0x24
900183fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018400:	ae04      	add	r6, sp, #16
90018402:	2b00      	cmp	r3, #0
90018404:	f000 80b5 	beq.w	90018572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018408:	682b      	ldr	r3, [r5, #0]
9001840a:	4629      	mov	r1, r5
9001840c:	a802      	add	r0, sp, #8
9001840e:	68db      	ldr	r3, [r3, #12]
90018410:	4798      	blx	r3
90018412:	4628      	mov	r0, r5
90018414:	f7ff ff60 	bl	900182d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018418:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001841c:	4407      	add	r7, r0
9001841e:	4628      	mov	r0, r5
90018420:	f7ff ff6e 	bl	90018300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018424:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018428:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001842c:	b23f      	sxth	r7, r7
9001842e:	4418      	add	r0, r3
90018430:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90018434:	4621      	mov	r1, r4
90018436:	f8ad 2014 	strh.w	r2, [sp, #20]
9001843a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001843e:	4630      	mov	r0, r6
90018440:	f8ad 3016 	strh.w	r3, [sp, #22]
90018444:	f8ad 7010 	strh.w	r7, [sp, #16]
90018448:	f7f7 ff16 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001844c:	4628      	mov	r0, r5
9001844e:	f7ff ff27 	bl	900182a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018452:	ab06      	add	r3, sp, #24
90018454:	4602      	mov	r2, r0
90018456:	e896 0003 	ldmia.w	r6, {r0, r1}
9001845a:	e883 0003 	stmia.w	r3, {r0, r1}
9001845e:	4611      	mov	r1, r2
90018460:	4618      	mov	r0, r3
90018462:	f7f7 ff09 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
90018466:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001846a:	f9b4 1000 	ldrsh.w	r1, [r4]
9001846e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90018472:	4299      	cmp	r1, r3
90018474:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90018478:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001847c:	d10b      	bne.n	90018496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001847e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90018482:	4552      	cmp	r2, sl
90018484:	d107      	bne.n	90018496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018486:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001848a:	455a      	cmp	r2, fp
9001848c:	d103      	bne.n	90018496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001848e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90018492:	454a      	cmp	r2, r9
90018494:	d06d      	beq.n	90018572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018496:	f1bb 0f00 	cmp.w	fp, #0
9001849a:	dd65      	ble.n	90018568 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001849c:	f1b9 0f00 	cmp.w	r9, #0
900184a0:	dd62      	ble.n	90018568 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900184a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900184a6:	fa1f f08a 	uxth.w	r0, sl
900184aa:	4552      	cmp	r2, sl
900184ac:	9000      	str	r0, [sp, #0]
900184ae:	da12      	bge.n	900184d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900184b0:	9301      	str	r3, [sp, #4]
900184b2:	9b00      	ldr	r3, [sp, #0]
900184b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900184b8:	f8ad 2012 	strh.w	r2, [sp, #18]
900184bc:	1a9a      	subs	r2, r3, r2
900184be:	f8ad 1010 	strh.w	r1, [sp, #16]
900184c2:	4631      	mov	r1, r6
900184c4:	f8ad 0014 	strh.w	r0, [sp, #20]
900184c8:	4640      	mov	r0, r8
900184ca:	f8ad 2016 	strh.w	r2, [sp, #22]
900184ce:	69ea      	ldr	r2, [r5, #28]
900184d0:	f7ff ff7a 	bl	900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900184d4:	9b01      	ldr	r3, [sp, #4]
900184d6:	f9b4 2000 	ldrsh.w	r2, [r4]
900184da:	b29f      	uxth	r7, r3
900184dc:	429a      	cmp	r2, r3
900184de:	da0d      	bge.n	900184fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900184e0:	f8ad 2010 	strh.w	r2, [sp, #16]
900184e4:	1aba      	subs	r2, r7, r2
900184e6:	f8ad a012 	strh.w	sl, [sp, #18]
900184ea:	4631      	mov	r1, r6
900184ec:	f8ad 2014 	strh.w	r2, [sp, #20]
900184f0:	4640      	mov	r0, r8
900184f2:	f8ad 9016 	strh.w	r9, [sp, #22]
900184f6:	69ea      	ldr	r2, [r5, #28]
900184f8:	f7ff ff66 	bl	900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900184fc:	8822      	ldrh	r2, [r4, #0]
900184fe:	445f      	add	r7, fp
90018500:	88a3      	ldrh	r3, [r4, #4]
90018502:	b2bf      	uxth	r7, r7
90018504:	4413      	add	r3, r2
90018506:	b23a      	sxth	r2, r7
90018508:	b29b      	uxth	r3, r3
9001850a:	b219      	sxth	r1, r3
9001850c:	4291      	cmp	r1, r2
9001850e:	dd0d      	ble.n	9001852c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90018510:	1bdb      	subs	r3, r3, r7
90018512:	f8ad 2010 	strh.w	r2, [sp, #16]
90018516:	f8ad a012 	strh.w	sl, [sp, #18]
9001851a:	4631      	mov	r1, r6
9001851c:	f8ad 3014 	strh.w	r3, [sp, #20]
90018520:	4640      	mov	r0, r8
90018522:	f8ad 9016 	strh.w	r9, [sp, #22]
90018526:	69ea      	ldr	r2, [r5, #28]
90018528:	f7ff ff4e 	bl	900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001852c:	88e2      	ldrh	r2, [r4, #6]
9001852e:	8863      	ldrh	r3, [r4, #2]
90018530:	4413      	add	r3, r2
90018532:	9a00      	ldr	r2, [sp, #0]
90018534:	444a      	add	r2, r9
90018536:	b29b      	uxth	r3, r3
90018538:	fa1f f982 	uxth.w	r9, r2
9001853c:	b219      	sxth	r1, r3
9001853e:	fa0f f289 	sxth.w	r2, r9
90018542:	428a      	cmp	r2, r1
90018544:	da15      	bge.n	90018572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018546:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001854a:	eba3 0309 	sub.w	r3, r3, r9
9001854e:	f9b4 0000 	ldrsh.w	r0, [r4]
90018552:	f8ad 1014 	strh.w	r1, [sp, #20]
90018556:	4631      	mov	r1, r6
90018558:	f8ad 0010 	strh.w	r0, [sp, #16]
9001855c:	f8ad 2012 	strh.w	r2, [sp, #18]
90018560:	f8ad 3016 	strh.w	r3, [sp, #22]
90018564:	69ea      	ldr	r2, [r5, #28]
90018566:	e001      	b.n	9001856c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90018568:	69ea      	ldr	r2, [r5, #28]
9001856a:	4621      	mov	r1, r4
9001856c:	4640      	mov	r0, r8
9001856e:	f7ff ff2b 	bl	900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018572:	4628      	mov	r0, r5
90018574:	f7ff fe94 	bl	900182a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018578:	6861      	ldr	r1, [r4, #4]
9001857a:	4602      	mov	r2, r0
9001857c:	4633      	mov	r3, r6
9001857e:	6820      	ldr	r0, [r4, #0]
90018580:	c303      	stmia	r3!, {r0, r1}
90018582:	4611      	mov	r1, r2
90018584:	4630      	mov	r0, r6
90018586:	f7f7 fe77 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001858a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001858e:	2b00      	cmp	r3, #0
90018590:	f77f af33 	ble.w	900183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018594:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018598:	2b00      	cmp	r3, #0
9001859a:	f77f af2e 	ble.w	900183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001859e:	4628      	mov	r0, r5
900185a0:	f7ff fe9a 	bl	900182d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900185a4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900185a8:	1a18      	subs	r0, r3, r0
900185aa:	f8ad 0010 	strh.w	r0, [sp, #16]
900185ae:	4628      	mov	r0, r5
900185b0:	f7ff fea6 	bl	90018300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900185b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900185b8:	4631      	mov	r1, r6
900185ba:	1a18      	subs	r0, r3, r0
900185bc:	f8ad 0012 	strh.w	r0, [sp, #18]
900185c0:	4628      	mov	r0, r5
900185c2:	682b      	ldr	r3, [r5, #0]
900185c4:	689b      	ldr	r3, [r3, #8]
900185c6:	4798      	blx	r3
900185c8:	e717      	b.n	900183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900185ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900185ca:	b570      	push	{r4, r5, r6, lr}
900185cc:	1d06      	adds	r6, r0, #4
900185ce:	b086      	sub	sp, #24
900185d0:	460c      	mov	r4, r1
900185d2:	2300      	movs	r3, #0
900185d4:	4631      	mov	r1, r6
900185d6:	4605      	mov	r5, r0
900185d8:	a802      	add	r0, sp, #8
900185da:	9301      	str	r3, [sp, #4]
900185dc:	f7ff f8ec 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900185e0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900185e4:	8822      	ldrh	r2, [r4, #0]
900185e6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900185ea:	1ad2      	subs	r2, r2, r3
900185ec:	8863      	ldrh	r3, [r4, #2]
900185ee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900185f2:	1a5b      	subs	r3, r3, r1
900185f4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900185f8:	f8ad 2010 	strh.w	r2, [sp, #16]
900185fc:	aa01      	add	r2, sp, #4
900185fe:	f8ad 0014 	strh.w	r0, [sp, #20]
90018602:	4630      	mov	r0, r6
90018604:	f8ad 1016 	strh.w	r1, [sp, #22]
90018608:	a904      	add	r1, sp, #16
9001860a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001860e:	f7f7 ff0b 	bl	90010428 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90018612:	9a01      	ldr	r2, [sp, #4]
90018614:	b11a      	cbz	r2, 9001861e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90018616:	4621      	mov	r1, r4
90018618:	4628      	mov	r0, r5
9001861a:	f7ff fed5 	bl	900183c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001861e:	b006      	add	sp, #24
90018620:	bd70      	pop	{r4, r5, r6, pc}

90018622 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90018622:	4602      	mov	r2, r0
90018624:	b530      	push	{r4, r5, lr}
90018626:	4604      	mov	r4, r0
90018628:	b085      	sub	sp, #20
9001862a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001862e:	460d      	mov	r5, r1
90018630:	466b      	mov	r3, sp
90018632:	6851      	ldr	r1, [r2, #4]
90018634:	c303      	stmia	r3!, {r0, r1}
90018636:	4629      	mov	r1, r5
90018638:	4668      	mov	r0, sp
9001863a:	f7f7 fe1d 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001863e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90018642:	b12b      	cbz	r3, 90018650 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90018644:	4669      	mov	r1, sp
90018646:	4620      	mov	r0, r4
90018648:	f7ff ffbf 	bl	900185ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001864c:	b005      	add	sp, #20
9001864e:	bd30      	pop	{r4, r5, pc}
90018650:	3404      	adds	r4, #4
90018652:	a802      	add	r0, sp, #8
90018654:	4621      	mov	r1, r4
90018656:	f7ff f8af 	bl	900177b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001865a:	f8bd 3000 	ldrh.w	r3, [sp]
9001865e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90018662:	4669      	mov	r1, sp
90018664:	4620      	mov	r0, r4
90018666:	1a9b      	subs	r3, r3, r2
90018668:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001866c:	f8ad 3000 	strh.w	r3, [sp]
90018670:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018674:	1a9b      	subs	r3, r3, r2
90018676:	f8ad 3002 	strh.w	r3, [sp, #2]
9001867a:	f7f7 fe9c 	bl	900103b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001867e:	e7e5      	b.n	9001864c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90018680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90018680:	460b      	mov	r3, r1
90018682:	680a      	ldr	r2, [r1, #0]
90018684:	1d01      	adds	r1, r0, #4
90018686:	6992      	ldr	r2, [r2, #24]
90018688:	4618      	mov	r0, r3
9001868a:	4710      	bx	r2

9001868c <_ZN8touchgfx12TextProviderC1Ev>:
9001868c:	b538      	push	{r3, r4, r5, lr}
9001868e:	2500      	movs	r5, #0
90018690:	2302      	movs	r3, #2
90018692:	4604      	mov	r4, r0
90018694:	220e      	movs	r2, #14
90018696:	7403      	strb	r3, [r0, #16]
90018698:	4629      	mov	r1, r5
9001869a:	6145      	str	r5, [r0, #20]
9001869c:	7605      	strb	r5, [r0, #24]
9001869e:	83c5      	strh	r5, [r0, #30]
900186a0:	8405      	strh	r5, [r0, #32]
900186a2:	86c5      	strh	r5, [r0, #54]	@ 0x36
900186a4:	8705      	strh	r5, [r0, #56]	@ 0x38
900186a6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900186a8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900186ac:	e9c0 5500 	strd	r5, r5, [r0]
900186b0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900186b4:	304c      	adds	r0, #76	@ 0x4c
900186b6:	f011 fa63 	bl	90029b80 <memset>
900186ba:	2301      	movs	r3, #1
900186bc:	4620      	mov	r0, r4
900186be:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900186c2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900186c6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900186ca:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900186ce:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
900186d2:	f7ed f987 	bl	900059e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
900186d6:	4620      	mov	r0, r4
900186d8:	bd38      	pop	{r3, r4, r5, pc}

900186da <_ZN8touchgfx12TextProvider11endOfStringEv>:
900186da:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
900186dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900186e0:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
900186e2:	fab0 f080 	clz	r0, r0
900186e6:	0940      	lsrs	r0, r0, #5
900186e8:	4770      	bx	lr

900186ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900186ea:	b530      	push	{r4, r5, lr}
900186ec:	2500      	movs	r5, #0
900186ee:	2401      	movs	r4, #1
900186f0:	6843      	ldr	r3, [r0, #4]
900186f2:	b913      	cbnz	r3, 900186fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
900186f4:	6803      	ldr	r3, [r0, #0]
900186f6:	b313      	cbz	r3, 9001873e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900186f8:	6043      	str	r3, [r0, #4]
900186fa:	7e03      	ldrb	r3, [r0, #24]
900186fc:	b143      	cbz	r3, 90018710 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
900186fe:	6943      	ldr	r3, [r0, #20]
90018700:	b12b      	cbz	r3, 9001870e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018702:	881a      	ldrh	r2, [r3, #0]
90018704:	b11a      	cbz	r2, 9001870e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018706:	1c9a      	adds	r2, r3, #2
90018708:	6142      	str	r2, [r0, #20]
9001870a:	8818      	ldrh	r0, [r3, #0]
9001870c:	bd30      	pop	{r4, r5, pc}
9001870e:	7605      	strb	r5, [r0, #24]
90018710:	6843      	ldr	r3, [r0, #4]
90018712:	8819      	ldrh	r1, [r3, #0]
90018714:	b199      	cbz	r1, 9001873e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018716:	1c9a      	adds	r2, r3, #2
90018718:	2902      	cmp	r1, #2
9001871a:	6042      	str	r2, [r0, #4]
9001871c:	d1f5      	bne.n	9001870a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001871e:	7c03      	ldrb	r3, [r0, #16]
90018720:	2b01      	cmp	r3, #1
90018722:	d8e5      	bhi.n	900186f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018724:	1c5a      	adds	r2, r3, #1
90018726:	3302      	adds	r3, #2
90018728:	7402      	strb	r2, [r0, #16]
9001872a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001872e:	6143      	str	r3, [r0, #20]
90018730:	2b00      	cmp	r3, #0
90018732:	d0dd      	beq.n	900186f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018734:	881b      	ldrh	r3, [r3, #0]
90018736:	2b00      	cmp	r3, #0
90018738:	d0da      	beq.n	900186f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001873a:	7604      	strb	r4, [r0, #24]
9001873c:	e7d8      	b.n	900186f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001873e:	2000      	movs	r0, #0
90018740:	e7e4      	b.n	9001870c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018742:	6001      	str	r1, [r0, #0]
90018744:	2100      	movs	r1, #0
90018746:	b430      	push	{r4, r5}
90018748:	6041      	str	r1, [r0, #4]
9001874a:	6815      	ldr	r5, [r2, #0]
9001874c:	6085      	str	r5, [r0, #8]
9001874e:	6852      	ldr	r2, [r2, #4]
90018750:	6443      	str	r3, [r0, #68]	@ 0x44
90018752:	9b02      	ldr	r3, [sp, #8]
90018754:	60c2      	str	r2, [r0, #12]
90018756:	7401      	strb	r1, [r0, #16]
90018758:	6141      	str	r1, [r0, #20]
9001875a:	7601      	strb	r1, [r0, #24]
9001875c:	8701      	strh	r1, [r0, #56]	@ 0x38
9001875e:	8401      	strh	r1, [r0, #32]
90018760:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90018764:	6483      	str	r3, [r0, #72]	@ 0x48
90018766:	bc30      	pop	{r4, r5}
90018768:	f7ed b93c 	b.w	900059e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001876c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001876c:	b408      	push	{r3}
9001876e:	b510      	push	{r4, lr}
90018770:	b085      	sub	sp, #20
90018772:	ac07      	add	r4, sp, #28
90018774:	f854 3b04 	ldr.w	r3, [r4], #4
90018778:	9300      	str	r3, [sp, #0]
9001877a:	4613      	mov	r3, r2
9001877c:	4622      	mov	r2, r4
9001877e:	9403      	str	r4, [sp, #12]
90018780:	f7ff ffdf 	bl	90018742 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018784:	b005      	add	sp, #20
90018786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001878a:	b001      	add	sp, #4
9001878c:	4770      	bx	lr

9001878e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001878e:	b5f0      	push	{r4, r5, r6, r7, lr}
90018790:	4605      	mov	r5, r0
90018792:	4608      	mov	r0, r1
90018794:	b1f1      	cbz	r1, 900187d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90018796:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001879a:	460b      	mov	r3, r1
9001879c:	f101 0708 	add.w	r7, r1, #8
900187a0:	4622      	mov	r2, r4
900187a2:	6818      	ldr	r0, [r3, #0]
900187a4:	3308      	adds	r3, #8
900187a6:	f853 1c04 	ldr.w	r1, [r3, #-4]
900187aa:	4626      	mov	r6, r4
900187ac:	42bb      	cmp	r3, r7
900187ae:	c603      	stmia	r6!, {r0, r1}
900187b0:	4634      	mov	r4, r6
900187b2:	d1f6      	bne.n	900187a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900187b4:	6818      	ldr	r0, [r3, #0]
900187b6:	6030      	str	r0, [r6, #0]
900187b8:	4610      	mov	r0, r2
900187ba:	889b      	ldrh	r3, [r3, #4]
900187bc:	80b3      	strh	r3, [r6, #4]
900187be:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900187c2:	015b      	lsls	r3, r3, #5
900187c4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900187c8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900187cc:	430b      	orrs	r3, r1
900187ce:	425b      	negs	r3, r3
900187d0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900187d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

900187d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900187d6:	b538      	push	{r3, r4, r5, lr}
900187d8:	460c      	mov	r4, r1
900187da:	6811      	ldr	r1, [r2, #0]
900187dc:	4610      	mov	r0, r2
900187de:	68cd      	ldr	r5, [r1, #12]
900187e0:	4619      	mov	r1, r3
900187e2:	47a8      	blx	r5
900187e4:	2800      	cmp	r0, #0
900187e6:	bf08      	it	eq
900187e8:	4620      	moveq	r0, r4
900187ea:	bd38      	pop	{r3, r4, r5, pc}

900187ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900187ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900187f0:	468c      	mov	ip, r1
900187f2:	4605      	mov	r5, r0
900187f4:	4614      	mov	r4, r2
900187f6:	b942      	cbnz	r2, 9001880a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
900187f8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900187fc:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
90018800:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
90018804:	4620      	mov	r0, r4
90018806:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001880a:	7b50      	ldrb	r0, [r2, #13]
9001880c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90018810:	8893      	ldrh	r3, [r2, #4]
90018812:	0106      	lsls	r6, r0, #4
90018814:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90018818:	79e6      	ldrb	r6, [r4, #7]
9001881a:	4316      	orrs	r6, r2
9001881c:	185a      	adds	r2, r3, r1
9001881e:	b291      	uxth	r1, r2
90018820:	b2b7      	uxth	r7, r6
90018822:	291d      	cmp	r1, #29
90018824:	d87f      	bhi.n	90018926 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018826:	2201      	movs	r2, #1
90018828:	10f6      	asrs	r6, r6, #3
9001882a:	408a      	lsls	r2, r1
9001882c:	498b      	ldr	r1, [pc, #556]	@ (90018a5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001882e:	420a      	tst	r2, r1
90018830:	d12e      	bne.n	90018890 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018832:	f412 7f60 	tst.w	r2, #896	@ 0x380
90018836:	d076      	beq.n	90018926 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018838:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001883c:	4623      	mov	r3, r4
9001883e:	f104 0e08 	add.w	lr, r4, #8
90018842:	4614      	mov	r4, r2
90018844:	6818      	ldr	r0, [r3, #0]
90018846:	3308      	adds	r3, #8
90018848:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001884c:	4694      	mov	ip, r2
9001884e:	4573      	cmp	r3, lr
90018850:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018854:	4662      	mov	r2, ip
90018856:	d1f5      	bne.n	90018844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90018858:	6818      	ldr	r0, [r3, #0]
9001885a:	f8cc 0000 	str.w	r0, [ip]
9001885e:	889b      	ldrh	r3, [r3, #4]
90018860:	f8ac 3004 	strh.w	r3, [ip, #4]
90018864:	b2b3      	uxth	r3, r6
90018866:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001886a:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001886e:	1aca      	subs	r2, r1, r3
90018870:	1bcf      	subs	r7, r1, r7
90018872:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90018876:	b292      	uxth	r2, r2
90018878:	1afb      	subs	r3, r7, r3
9001887a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
9001887e:	10d2      	asrs	r2, r2, #3
90018880:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90018884:	4302      	orrs	r2, r0
90018886:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
9001888a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
9001888e:	e7b9      	b.n	90018804 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90018890:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90018894:	4623      	mov	r3, r4
90018896:	f104 0808 	add.w	r8, r4, #8
9001889a:	4614      	mov	r4, r2
9001889c:	6818      	ldr	r0, [r3, #0]
9001889e:	3308      	adds	r3, #8
900188a0:	f853 1c04 	ldr.w	r1, [r3, #-4]
900188a4:	4696      	mov	lr, r2
900188a6:	4543      	cmp	r3, r8
900188a8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900188ac:	4672      	mov	r2, lr
900188ae:	d1f5      	bne.n	9001889c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900188b0:	6818      	ldr	r0, [r3, #0]
900188b2:	f8ce 0000 	str.w	r0, [lr]
900188b6:	889b      	ldrh	r3, [r3, #4]
900188b8:	f8ae 3004 	strh.w	r3, [lr, #4]
900188bc:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
900188be:	eb05 0343 	add.w	r3, r5, r3, lsl #1
900188c2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
900188c4:	f640 6333 	movw	r3, #3635	@ 0xe33
900188c8:	4299      	cmp	r1, r3
900188ca:	d111      	bne.n	900188f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
900188cc:	f8dc 3000 	ldr.w	r3, [ip]
900188d0:	4660      	mov	r0, ip
900188d2:	68db      	ldr	r3, [r3, #12]
900188d4:	4798      	blx	r3
900188d6:	7b41      	ldrb	r1, [r0, #13]
900188d8:	00cb      	lsls	r3, r1, #3
900188da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900188de:	7a03      	ldrb	r3, [r0, #8]
900188e0:	4313      	orrs	r3, r2
900188e2:	064a      	lsls	r2, r1, #25
900188e4:	bf44      	itt	mi
900188e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900188ea:	b21b      	sxthmi	r3, r3
900188ec:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900188f0:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
900188f4:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
900188f8:	443b      	add	r3, r7
900188fa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900188fe:	4433      	add	r3, r6
90018900:	b29b      	uxth	r3, r3
90018902:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90018906:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001890a:	10db      	asrs	r3, r3, #3
9001890c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018910:	4313      	orrs	r3, r2
90018912:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90018916:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001891a:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001891e:	1a9b      	subs	r3, r3, r2
90018920:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90018924:	e76e      	b.n	90018804 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90018926:	f023 0204 	bic.w	r2, r3, #4
9001892a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001892e:	428a      	cmp	r2, r1
90018930:	d003      	beq.n	9001893a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90018932:	f640 621d 	movw	r2, #3613	@ 0xe1d
90018936:	4293      	cmp	r3, r2
90018938:	d138      	bne.n	900189ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001893a:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001893e:	4622      	mov	r2, r4
90018940:	f104 0808 	add.w	r8, r4, #8
90018944:	4634      	mov	r4, r6
90018946:	6810      	ldr	r0, [r2, #0]
90018948:	3208      	adds	r2, #8
9001894a:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001894e:	46b6      	mov	lr, r6
90018950:	4542      	cmp	r2, r8
90018952:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018956:	4676      	mov	r6, lr
90018958:	d1f5      	bne.n	90018946 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001895a:	6810      	ldr	r0, [r2, #0]
9001895c:	3b01      	subs	r3, #1
9001895e:	4621      	mov	r1, r4
90018960:	f8ce 0000 	str.w	r0, [lr]
90018964:	b29b      	uxth	r3, r3
90018966:	8892      	ldrh	r2, [r2, #4]
90018968:	4628      	mov	r0, r5
9001896a:	f8ae 2004 	strh.w	r2, [lr, #4]
9001896e:	4662      	mov	r2, ip
90018970:	f7ff ff31 	bl	900187d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018974:	7b41      	ldrb	r1, [r0, #13]
90018976:	00cb      	lsls	r3, r1, #3
90018978:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001897c:	7a03      	ldrb	r3, [r0, #8]
9001897e:	0648      	lsls	r0, r1, #25
90018980:	ea43 0302 	orr.w	r3, r3, r2
90018984:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
90018988:	bf44      	itt	mi
9001898a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001898e:	b21b      	sxthmi	r3, r3
90018990:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90018994:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
90018998:	005b      	lsls	r3, r3, #1
9001899a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001899e:	4313      	orrs	r3, r2
900189a0:	115a      	asrs	r2, r3, #5
900189a2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900189a6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
900189aa:	e047      	b.n	90018a3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
900189ac:	00c2      	lsls	r2, r0, #3
900189ae:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900189b2:	7a22      	ldrb	r2, [r4, #8]
900189b4:	430a      	orrs	r2, r1
900189b6:	0641      	lsls	r1, r0, #25
900189b8:	f640 6109 	movw	r1, #3593	@ 0xe09
900189bc:	bf44      	itt	mi
900189be:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
900189c2:	b212      	sxthmi	r2, r2
900189c4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900189c8:	f023 0210 	bic.w	r2, r3, #16
900189cc:	428a      	cmp	r2, r1
900189ce:	d003      	beq.n	900189d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
900189d0:	f640 6213 	movw	r2, #3603	@ 0xe13
900189d4:	4293      	cmp	r3, r2
900189d6:	d13e      	bne.n	90018a56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
900189d8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900189dc:	f104 0808 	add.w	r8, r4, #8
900189e0:	4696      	mov	lr, r2
900189e2:	6820      	ldr	r0, [r4, #0]
900189e4:	3408      	adds	r4, #8
900189e6:	f854 1c04 	ldr.w	r1, [r4, #-4]
900189ea:	4616      	mov	r6, r2
900189ec:	4544      	cmp	r4, r8
900189ee:	c603      	stmia	r6!, {r0, r1}
900189f0:	4632      	mov	r2, r6
900189f2:	d1f6      	bne.n	900189e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
900189f4:	6820      	ldr	r0, [r4, #0]
900189f6:	6030      	str	r0, [r6, #0]
900189f8:	4628      	mov	r0, r5
900189fa:	88a1      	ldrh	r1, [r4, #4]
900189fc:	4674      	mov	r4, lr
900189fe:	80b1      	strh	r1, [r6, #4]
90018a00:	4671      	mov	r1, lr
90018a02:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90018a06:	0076      	lsls	r6, r6, #1
90018a08:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90018a0c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
90018a10:	4316      	orrs	r6, r2
90018a12:	f640 6213 	movw	r2, #3603	@ 0xe13
90018a16:	4293      	cmp	r3, r2
90018a18:	4662      	mov	r2, ip
90018a1a:	bf16      	itet	ne
90018a1c:	f103 33ff 	addne.w	r3, r3, #4294967295
90018a20:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90018a24:	b29b      	uxthne	r3, r3
90018a26:	f7ff fed6 	bl	900187d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018a2a:	7b43      	ldrb	r3, [r0, #13]
90018a2c:	7a82      	ldrb	r2, [r0, #10]
90018a2e:	005b      	lsls	r3, r3, #1
90018a30:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018a34:	4313      	orrs	r3, r2
90018a36:	1af6      	subs	r6, r6, r3
90018a38:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
90018a3c:	7b61      	ldrb	r1, [r4, #13]
90018a3e:	00cb      	lsls	r3, r1, #3
90018a40:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018a44:	7a23      	ldrb	r3, [r4, #8]
90018a46:	4313      	orrs	r3, r2
90018a48:	064a      	lsls	r2, r1, #25
90018a4a:	bf44      	itt	mi
90018a4c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018a50:	b21b      	sxthmi	r3, r3
90018a52:	1bdb      	subs	r3, r3, r7
90018a54:	e719      	b.n	9001888a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90018a56:	2300      	movs	r3, #0
90018a58:	e7a5      	b.n	900189a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90018a5a:	bf00      	nop
90018a5c:	3fc00079 	.word	0x3fc00079

90018a60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90018a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018a64:	4604      	mov	r4, r0
90018a66:	b942      	cbnz	r2, 90018a7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90018a68:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018a6c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90018a70:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90018a74:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90018a78:	e047      	b.n	90018b0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018a7a:	7b51      	ldrb	r1, [r2, #13]
90018a7c:	8893      	ldrh	r3, [r2, #4]
90018a7e:	010d      	lsls	r5, r1, #4
90018a80:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90018a84:	79d5      	ldrb	r5, [r2, #7]
90018a86:	4305      	orrs	r5, r0
90018a88:	2d04      	cmp	r5, #4
90018a8a:	bfcc      	ite	gt
90018a8c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90018a90:	f04f 0e01 	movle.w	lr, #1
90018a94:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90018a98:	f200 80ab 	bhi.w	90018bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90018a9c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90018aa0:	4283      	cmp	r3, r0
90018aa2:	d216      	bcs.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018aa4:	f240 605b 	movw	r0, #1627	@ 0x65b
90018aa8:	4283      	cmp	r3, r0
90018aaa:	d859      	bhi.n	90018b60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90018aac:	f240 6057 	movw	r0, #1623	@ 0x657
90018ab0:	4283      	cmp	r3, r0
90018ab2:	d20e      	bcs.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018ab4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90018ab8:	d24a      	bcs.n	90018b50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90018aba:	f240 604e 	movw	r0, #1614	@ 0x64e
90018abe:	4283      	cmp	r3, r0
90018ac0:	d207      	bcs.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018ac2:	f240 601a 	movw	r0, #1562	@ 0x61a
90018ac6:	4283      	cmp	r3, r0
90018ac8:	d02a      	beq.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018aca:	d821      	bhi.n	90018b10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90018acc:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90018ad0:	d35b      	bcc.n	90018b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018ad2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90018ad6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018ada:	f040 80d0 	bne.w	90018c7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018ade:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90018ae2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018ae6:	f040 80ca 	bne.w	90018c7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018aea:	00cb      	lsls	r3, r1, #3
90018aec:	0649      	lsls	r1, r1, #25
90018aee:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018af2:	7a13      	ldrb	r3, [r2, #8]
90018af4:	ea43 0300 	orr.w	r3, r3, r0
90018af8:	bf44      	itt	mi
90018afa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018afe:	b21b      	sxthmi	r3, r3
90018b00:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018b04:	1b5d      	subs	r5, r3, r5
90018b06:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018b0a:	4610      	mov	r0, r2
90018b0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018b10:	f240 604b 	movw	r0, #1611	@ 0x64b
90018b14:	4283      	cmp	r3, r0
90018b16:	d338      	bcc.n	90018b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018b18:	f240 604c 	movw	r0, #1612	@ 0x64c
90018b1c:	4283      	cmp	r3, r0
90018b1e:	d9d8      	bls.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b20:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90018b24:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90018b28:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018b2c:	f040 80f3 	bne.w	90018d16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018b30:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018b34:	f040 80ef 	bne.w	90018d16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018b38:	00cb      	lsls	r3, r1, #3
90018b3a:	064e      	lsls	r6, r1, #25
90018b3c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018b40:	7a13      	ldrb	r3, [r2, #8]
90018b42:	ea43 0300 	orr.w	r3, r3, r0
90018b46:	bf44      	itt	mi
90018b48:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018b4c:	b21b      	sxthmi	r3, r3
90018b4e:	e7d9      	b.n	90018b04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90018b50:	f240 6054 	movw	r0, #1620	@ 0x654
90018b54:	4283      	cmp	r3, r0
90018b56:	d8e3      	bhi.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b58:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90018b5c:	d9e0      	bls.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b5e:	e7b8      	b.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b60:	f240 6074 	movw	r0, #1652	@ 0x674
90018b64:	4283      	cmp	r3, r0
90018b66:	d0b4      	beq.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b68:	d82d      	bhi.n	90018bc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90018b6a:	f240 605e 	movw	r0, #1630	@ 0x65e
90018b6e:	4283      	cmp	r3, r0
90018b70:	d804      	bhi.n	90018b7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90018b72:	f240 605d 	movw	r0, #1629	@ 0x65d
90018b76:	4283      	cmp	r3, r0
90018b78:	d3d2      	bcc.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b7a:	e7aa      	b.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b7c:	f240 605f 	movw	r0, #1631	@ 0x65f
90018b80:	4283      	cmp	r3, r0
90018b82:	d0cd      	beq.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b84:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90018b88:	d0a3      	beq.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b8a:	00cb      	lsls	r3, r1, #3
90018b8c:	0649      	lsls	r1, r1, #25
90018b8e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018b92:	7a13      	ldrb	r3, [r2, #8]
90018b94:	ea43 0300 	orr.w	r3, r3, r0
90018b98:	bf44      	itt	mi
90018b9a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018b9e:	b21b      	sxthmi	r3, r3
90018ba0:	1b5d      	subs	r5, r3, r5
90018ba2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018ba6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018baa:	7b53      	ldrb	r3, [r2, #13]
90018bac:	015b      	lsls	r3, r3, #5
90018bae:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90018bb2:	7993      	ldrb	r3, [r2, #6]
90018bb4:	430b      	orrs	r3, r1
90018bb6:	2105      	movs	r1, #5
90018bb8:	005b      	lsls	r3, r3, #1
90018bba:	fb93 f3f1 	sdiv	r3, r3, r1
90018bbe:	f992 1009 	ldrsb.w	r1, [r2, #9]
90018bc2:	440b      	add	r3, r1
90018bc4:	e756      	b.n	90018a74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90018bc6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90018bca:	4283      	cmp	r3, r0
90018bcc:	d809      	bhi.n	90018be2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90018bce:	f240 60df 	movw	r0, #1759	@ 0x6df
90018bd2:	4283      	cmp	r3, r0
90018bd4:	f4bf af7d 	bcs.w	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018bd8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90018bdc:	2b05      	cmp	r3, #5
90018bde:	d8d4      	bhi.n	90018b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018be0:	e777      	b.n	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018be2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90018be6:	4283      	cmp	r3, r0
90018be8:	d09a      	beq.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018bea:	f240 60e4 	movw	r0, #1764	@ 0x6e4
90018bee:	4283      	cmp	r3, r0
90018bf0:	e7ca      	b.n	90018b88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90018bf2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90018bf6:	d22b      	bcs.n	90018c50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90018bf8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90018bfc:	4283      	cmp	r3, r0
90018bfe:	d28f      	bcs.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018c00:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90018c04:	4283      	cmp	r3, r0
90018c06:	d816      	bhi.n	90018c36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018c08:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90018c0c:	4283      	cmp	r3, r0
90018c0e:	f4bf af60 	bcs.w	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018c12:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90018c16:	4283      	cmp	r3, r0
90018c18:	d80a      	bhi.n	90018c30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90018c1a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
90018c1e:	4283      	cmp	r3, r0
90018c20:	f4bf af57 	bcs.w	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018c24:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90018c28:	4283      	cmp	r3, r0
90018c2a:	f43f af79 	beq.w	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018c2e:	e7ac      	b.n	90018b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018c30:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90018c34:	e7f8      	b.n	90018c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90018c36:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90018c3a:	4283      	cmp	r3, r0
90018c3c:	d802      	bhi.n	90018c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90018c3e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90018c42:	e798      	b.n	90018b76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90018c44:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90018c48:	4283      	cmp	r3, r0
90018c4a:	f47f af42 	bne.w	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018c4e:	e767      	b.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018c50:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90018c54:	4283      	cmp	r3, r0
90018c56:	f43f af63 	beq.w	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018c5a:	d802      	bhi.n	90018c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90018c5c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90018c60:	e7f2      	b.n	90018c48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90018c62:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90018c66:	4283      	cmp	r3, r0
90018c68:	d805      	bhi.n	90018c76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90018c6a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90018c6e:	4283      	cmp	r3, r0
90018c70:	f4ff af2f 	bcc.w	90018ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018c74:	e754      	b.n	90018b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018c76:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90018c7a:	4283      	cmp	r3, r0
90018c7c:	e7af      	b.n	90018bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018c7e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90018c82:	4617      	mov	r7, r2
90018c84:	f102 0808 	add.w	r8, r2, #8
90018c88:	4666      	mov	r6, ip
90018c8a:	6838      	ldr	r0, [r7, #0]
90018c8c:	3708      	adds	r7, #8
90018c8e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018c92:	46e6      	mov	lr, ip
90018c94:	4547      	cmp	r7, r8
90018c96:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018c9a:	46f4      	mov	ip, lr
90018c9c:	d1f5      	bne.n	90018c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018c9e:	6838      	ldr	r0, [r7, #0]
90018ca0:	f8ce 0000 	str.w	r0, [lr]
90018ca4:	88b9      	ldrh	r1, [r7, #4]
90018ca6:	f8ae 1004 	strh.w	r1, [lr, #4]
90018caa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90018cae:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018cb2:	d009      	beq.n	90018cc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90018cb4:	7b51      	ldrb	r1, [r2, #13]
90018cb6:	7992      	ldrb	r2, [r2, #6]
90018cb8:	0149      	lsls	r1, r1, #5
90018cba:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018cbe:	4311      	orrs	r1, r2
90018cc0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018cc4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90018cc8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018ccc:	b2ad      	uxth	r5, r5
90018cce:	d00d      	beq.n	90018cec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90018cd0:	442b      	add	r3, r5
90018cd2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90018cd6:	b29b      	uxth	r3, r3
90018cd8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90018cdc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90018ce0:	10db      	asrs	r3, r3, #3
90018ce2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018ce6:	4313      	orrs	r3, r2
90018ce8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90018cec:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90018cf0:	00cb      	lsls	r3, r1, #3
90018cf2:	064f      	lsls	r7, r1, #25
90018cf4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018cf8:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90018cfc:	ea43 0302 	orr.w	r3, r3, r2
90018d00:	bf44      	itt	mi
90018d02:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018d06:	b21b      	sxthmi	r3, r3
90018d08:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018d0c:	1b5b      	subs	r3, r3, r5
90018d0e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90018d12:	4632      	mov	r2, r6
90018d14:	e6f9      	b.n	90018b0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018d16:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90018d1a:	4617      	mov	r7, r2
90018d1c:	f102 0908 	add.w	r9, r2, #8
90018d20:	4666      	mov	r6, ip
90018d22:	6838      	ldr	r0, [r7, #0]
90018d24:	3708      	adds	r7, #8
90018d26:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018d2a:	46e0      	mov	r8, ip
90018d2c:	454f      	cmp	r7, r9
90018d2e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90018d32:	46c4      	mov	ip, r8
90018d34:	d1f5      	bne.n	90018d22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90018d36:	6838      	ldr	r0, [r7, #0]
90018d38:	f8c8 0000 	str.w	r0, [r8]
90018d3c:	88b9      	ldrh	r1, [r7, #4]
90018d3e:	f8a8 1004 	strh.w	r1, [r8, #4]
90018d42:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90018d46:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018d4a:	d009      	beq.n	90018d60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90018d4c:	7b51      	ldrb	r1, [r2, #13]
90018d4e:	7992      	ldrb	r2, [r2, #6]
90018d50:	0149      	lsls	r1, r1, #5
90018d52:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018d56:	4311      	orrs	r1, r2
90018d58:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018d5c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90018d60:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018d64:	d00e      	beq.n	90018d84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90018d66:	eba3 030e 	sub.w	r3, r3, lr
90018d6a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90018d6e:	b29b      	uxth	r3, r3
90018d70:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90018d74:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90018d78:	10db      	asrs	r3, r3, #3
90018d7a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018d7e:	4313      	orrs	r3, r2
90018d80:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90018d84:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90018d88:	00cb      	lsls	r3, r1, #3
90018d8a:	0648      	lsls	r0, r1, #25
90018d8c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018d90:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90018d94:	ea43 0302 	orr.w	r3, r3, r2
90018d98:	bf44      	itt	mi
90018d9a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018d9e:	b21b      	sxthmi	r3, r3
90018da0:	1b5d      	subs	r5, r3, r5
90018da2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018da6:	e7b4      	b.n	90018d12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90018da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018dac:	461e      	mov	r6, r3
90018dae:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018db0:	4604      	mov	r4, r0
90018db2:	4617      	mov	r7, r2
90018db4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018db8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90018dbc:	f7ec fdc2 	bl	90005944 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018dc0:	4605      	mov	r5, r0
90018dc2:	b918      	cbnz	r0, 90018dcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90018dc4:	6030      	str	r0, [r6, #0]
90018dc6:	4628      	mov	r0, r5
90018dc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018dcc:	683b      	ldr	r3, [r7, #0]
90018dce:	4601      	mov	r1, r0
90018dd0:	4638      	mov	r0, r7
90018dd2:	68db      	ldr	r3, [r3, #12]
90018dd4:	4798      	blx	r3
90018dd6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90018dda:	4602      	mov	r2, r0
90018ddc:	6030      	str	r0, [r6, #0]
90018dde:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90018de2:	d213      	bcs.n	90018e0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90018de4:	4643      	mov	r3, r8
90018de6:	4639      	mov	r1, r7
90018de8:	4620      	mov	r0, r4
90018dea:	f7ff fe39 	bl	90018a60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018dee:	6030      	str	r0, [r6, #0]
90018df0:	6833      	ldr	r3, [r6, #0]
90018df2:	b143      	cbz	r3, 90018e06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90018df4:	7b5a      	ldrb	r2, [r3, #13]
90018df6:	7a9b      	ldrb	r3, [r3, #10]
90018df8:	0052      	lsls	r2, r2, #1
90018dfa:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90018dfe:	4313      	orrs	r3, r2
90018e00:	bf0c      	ite	eq
90018e02:	2301      	moveq	r3, #1
90018e04:	2300      	movne	r3, #0
90018e06:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90018e0a:	e7dc      	b.n	90018dc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90018e0c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90018e10:	b29b      	uxth	r3, r3
90018e12:	2b7f      	cmp	r3, #127	@ 0x7f
90018e14:	d804      	bhi.n	90018e20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90018e16:	4639      	mov	r1, r7
90018e18:	4620      	mov	r0, r4
90018e1a:	f7ff fce7 	bl	900187ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018e1e:	e7e6      	b.n	90018dee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90018e20:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90018e24:	2b00      	cmp	r3, #0
90018e26:	d0e3      	beq.n	90018df0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018e28:	f640 1302 	movw	r3, #2306	@ 0x902
90018e2c:	429d      	cmp	r5, r3
90018e2e:	d1df      	bne.n	90018df0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018e30:	4601      	mov	r1, r0
90018e32:	4620      	mov	r0, r4
90018e34:	f7ff fcab 	bl	9001878e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018e38:	e7d9      	b.n	90018dee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90018e3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90018e3a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90018e3e:	461e      	mov	r6, r3
90018e40:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018e42:	4604      	mov	r4, r0
90018e44:	4617      	mov	r7, r2
90018e46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018e4a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90018e4e:	f7ec fd79 	bl	90005944 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018e52:	4605      	mov	r5, r0
90018e54:	b918      	cbnz	r0, 90018e5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90018e56:	6030      	str	r0, [r6, #0]
90018e58:	4628      	mov	r0, r5
90018e5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90018e5e:	683b      	ldr	r3, [r7, #0]
90018e60:	4601      	mov	r1, r0
90018e62:	4638      	mov	r0, r7
90018e64:	f8d3 9008 	ldr.w	r9, [r3, #8]
90018e68:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90018e6c:	47c8      	blx	r9
90018e6e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90018e72:	4602      	mov	r2, r0
90018e74:	6030      	str	r0, [r6, #0]
90018e76:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90018e7a:	d213      	bcs.n	90018ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018e7c:	4643      	mov	r3, r8
90018e7e:	4639      	mov	r1, r7
90018e80:	4620      	mov	r0, r4
90018e82:	f7ff fded 	bl	90018a60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018e86:	6030      	str	r0, [r6, #0]
90018e88:	6833      	ldr	r3, [r6, #0]
90018e8a:	b143      	cbz	r3, 90018e9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018e8c:	7b5a      	ldrb	r2, [r3, #13]
90018e8e:	7a9b      	ldrb	r3, [r3, #10]
90018e90:	0052      	lsls	r2, r2, #1
90018e92:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90018e96:	4313      	orrs	r3, r2
90018e98:	bf0c      	ite	eq
90018e9a:	2301      	moveq	r3, #1
90018e9c:	2300      	movne	r3, #0
90018e9e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90018ea2:	e7d9      	b.n	90018e58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90018ea4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90018ea8:	b29b      	uxth	r3, r3
90018eaa:	2b7f      	cmp	r3, #127	@ 0x7f
90018eac:	d804      	bhi.n	90018eb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90018eae:	4639      	mov	r1, r7
90018eb0:	4620      	mov	r0, r4
90018eb2:	f7ff fc9b 	bl	900187ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018eb6:	e7e6      	b.n	90018e86 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90018eb8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90018ebc:	2b00      	cmp	r3, #0
90018ebe:	d0e3      	beq.n	90018e88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018ec0:	f640 1302 	movw	r3, #2306	@ 0x902
90018ec4:	429d      	cmp	r5, r3
90018ec6:	d1df      	bne.n	90018e88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018ec8:	4601      	mov	r1, r0
90018eca:	4620      	mov	r0, r4
90018ecc:	f7ff fc5f 	bl	9001878e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018ed0:	e7d9      	b.n	90018e86 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90018ed2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90018ed2:	b510      	push	{r4, lr}
90018ed4:	4604      	mov	r4, r0
90018ed6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90018eda:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018edc:	b1e1      	cbz	r1, 90018f18 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018ede:	2b0a      	cmp	r3, #10
90018ee0:	d02d      	beq.n	90018f3e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018ee2:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90018ee4:	3901      	subs	r1, #1
90018ee6:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90018eea:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90018eec:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90018ef0:	1c51      	adds	r1, r2, #1
90018ef2:	b289      	uxth	r1, r1
90018ef4:	2901      	cmp	r1, #1
90018ef6:	bf8a      	itet	hi
90018ef8:	f102 32ff 	addhi.w	r2, r2, #4294967295
90018efc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90018efe:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90018f00:	1c5a      	adds	r2, r3, #1
90018f02:	8722      	strh	r2, [r4, #56]	@ 0x38
90018f04:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018f06:	4413      	add	r3, r2
90018f08:	b29b      	uxth	r3, r3
90018f0a:	2b09      	cmp	r3, #9
90018f0c:	bf88      	it	hi
90018f0e:	3b0a      	subhi	r3, #10
90018f10:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018f14:	8458      	strh	r0, [r3, #34]	@ 0x22
90018f16:	e7de      	b.n	90018ed6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90018f18:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018f1a:	2b0a      	cmp	r3, #10
90018f1c:	d00f      	beq.n	90018f3e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018f1e:	4620      	mov	r0, r4
90018f20:	f7ff fbe3 	bl	900186ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90018f24:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018f26:	1c5a      	adds	r2, r3, #1
90018f28:	8722      	strh	r2, [r4, #56]	@ 0x38
90018f2a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018f2c:	4413      	add	r3, r2
90018f2e:	b29b      	uxth	r3, r3
90018f30:	2b09      	cmp	r3, #9
90018f32:	bf88      	it	hi
90018f34:	3b0a      	subhi	r3, #10
90018f36:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018f3a:	8458      	strh	r0, [r3, #34]	@ 0x22
90018f3c:	e7ec      	b.n	90018f18 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018f3e:	bd10      	pop	{r4, pc}

90018f40 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90018f40:	b538      	push	{r3, r4, r5, lr}
90018f42:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018f44:	4604      	mov	r4, r0
90018f46:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90018f4a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90018f4c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90018f4e:	3a01      	subs	r2, #1
90018f50:	8702      	strh	r2, [r0, #56]	@ 0x38
90018f52:	1c5a      	adds	r2, r3, #1
90018f54:	b292      	uxth	r2, r2
90018f56:	2a09      	cmp	r2, #9
90018f58:	bf8a      	itet	hi
90018f5a:	3b09      	subhi	r3, #9
90018f5c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90018f5e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90018f60:	f7ff ffb7 	bl	90018ed2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90018f64:	8c23      	ldrh	r3, [r4, #32]
90018f66:	2b01      	cmp	r3, #1
90018f68:	bf9c      	itt	ls
90018f6a:	3301      	addls	r3, #1
90018f6c:	8423      	strhls	r3, [r4, #32]
90018f6e:	8be3      	ldrh	r3, [r4, #30]
90018f70:	b90b      	cbnz	r3, 90018f76 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90018f72:	2302      	movs	r3, #2
90018f74:	83e3      	strh	r3, [r4, #30]
90018f76:	8be3      	ldrh	r3, [r4, #30]
90018f78:	4628      	mov	r0, r5
90018f7a:	3b01      	subs	r3, #1
90018f7c:	b29b      	uxth	r3, r3
90018f7e:	83e3      	strh	r3, [r4, #30]
90018f80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018f84:	8365      	strh	r5, [r4, #26]
90018f86:	bd38      	pop	{r3, r4, r5, pc}

90018f88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90018f88:	428a      	cmp	r2, r1
90018f8a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018f8e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90018f90:	d932      	bls.n	90018ff8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90018f92:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90018f94:	1a54      	subs	r4, r2, r1
90018f96:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90018f9a:	19ee      	adds	r6, r5, r7
90018f9c:	fa1f fe84 	uxth.w	lr, r4
90018fa0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90018fa4:	3e01      	subs	r6, #1
90018fa6:	b2b4      	uxth	r4, r6
90018fa8:	eba4 090e 	sub.w	r9, r4, lr
90018fac:	fa1f f989 	uxth.w	r9, r9
90018fb0:	2c09      	cmp	r4, #9
90018fb2:	4626      	mov	r6, r4
90018fb4:	bf88      	it	hi
90018fb6:	f1a4 060a 	subhi.w	r6, r4, #10
90018fba:	f1bc 0f00 	cmp.w	ip, #0
90018fbe:	f104 34ff 	add.w	r4, r4, #4294967295
90018fc2:	bf08      	it	eq
90018fc4:	f04f 0c02 	moveq.w	ip, #2
90018fc8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90018fcc:	b2a4      	uxth	r4, r4
90018fce:	f10c 3cff 	add.w	ip, ip, #4294967295
90018fd2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90018fd6:	454c      	cmp	r4, r9
90018fd8:	fa1f fc8c 	uxth.w	ip, ip
90018fdc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90018fe0:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90018fe4:	d1e4      	bne.n	90018fb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90018fe6:	eba5 050e 	sub.w	r5, r5, lr
90018fea:	eb0e 0408 	add.w	r4, lr, r8
90018fee:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90018ff2:	8705      	strh	r5, [r0, #56]	@ 0x38
90018ff4:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90018ff8:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90018ffa:	250a      	movs	r5, #10
90018ffc:	1a64      	subs	r4, r4, r1
90018ffe:	4439      	add	r1, r7
90019000:	b289      	uxth	r1, r1
90019002:	8704      	strh	r4, [r0, #56]	@ 0x38
90019004:	2909      	cmp	r1, #9
90019006:	bf88      	it	hi
90019008:	390a      	subhi	r1, #10
9001900a:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001900c:	b18a      	cbz	r2, 90019032 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001900e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90019010:	3a01      	subs	r2, #1
90019012:	3101      	adds	r1, #1
90019014:	b292      	uxth	r2, r2
90019016:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001901a:	8701      	strh	r1, [r0, #56]	@ 0x38
9001901c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001901e:	b901      	cbnz	r1, 90019022 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90019020:	86c5      	strh	r5, [r0, #54]	@ 0x36
90019022:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019024:	3901      	subs	r1, #1
90019026:	b289      	uxth	r1, r1
90019028:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001902a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001902e:	844c      	strh	r4, [r1, #34]	@ 0x22
90019030:	e7ec      	b.n	9001900c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90019032:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019036:	f7ff bf4c 	b.w	90018ed2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001903a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001903a:	b570      	push	{r4, r5, r6, lr}
9001903c:	2500      	movs	r5, #0
9001903e:	4295      	cmp	r5, r2
90019040:	d011      	beq.n	90019066 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90019042:	8bc4      	ldrh	r4, [r0, #30]
90019044:	f831 6b02 	ldrh.w	r6, [r1], #2
90019048:	4414      	add	r4, r2
9001904a:	3c01      	subs	r4, #1
9001904c:	1b64      	subs	r4, r4, r5
9001904e:	b2a4      	uxth	r4, r4
90019050:	2c01      	cmp	r4, #1
90019052:	bf88      	it	hi
90019054:	3c02      	subhi	r4, #2
90019056:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001905a:	8b64      	ldrh	r4, [r4, #26]
9001905c:	42b4      	cmp	r4, r6
9001905e:	d117      	bne.n	90019090 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90019060:	3501      	adds	r5, #1
90019062:	b2ad      	uxth	r5, r5
90019064:	e7eb      	b.n	9001903e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019066:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001906a:	2400      	movs	r4, #0
9001906c:	4413      	add	r3, r2
9001906e:	b2a2      	uxth	r2, r4
90019070:	429a      	cmp	r2, r3
90019072:	da0f      	bge.n	90019094 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019074:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90019076:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001907a:	3401      	adds	r4, #1
9001907c:	4432      	add	r2, r6
9001907e:	b292      	uxth	r2, r2
90019080:	2a09      	cmp	r2, #9
90019082:	bf88      	it	hi
90019084:	3a0a      	subhi	r2, #10
90019086:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001908a:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001908c:	42aa      	cmp	r2, r5
9001908e:	d0ee      	beq.n	9001906e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90019090:	2000      	movs	r0, #0
90019092:	bd70      	pop	{r4, r5, r6, pc}
90019094:	2001      	movs	r0, #1
90019096:	e7fc      	b.n	90019092 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90019098 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90019098:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001909c:	4605      	mov	r5, r0
9001909e:	4616      	mov	r6, r2
900190a0:	1c8c      	adds	r4, r1, #2
900190a2:	8809      	ldrh	r1, [r1, #0]
900190a4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
900190a8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
900190ac:	42b3      	cmp	r3, r6
900190ae:	d124      	bne.n	900190fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
900190b0:	f3c1 2903 	ubfx	r9, r1, #8, #4
900190b4:	f3c1 1803 	ubfx	r8, r1, #4, #4
900190b8:	f001 070f 	and.w	r7, r1, #15
900190bc:	4652      	mov	r2, sl
900190be:	f8cd 8000 	str.w	r8, [sp]
900190c2:	464b      	mov	r3, r9
900190c4:	4621      	mov	r1, r4
900190c6:	4628      	mov	r0, r5
900190c8:	f7ff ffb7 	bl	9001903a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900190cc:	4683      	mov	fp, r0
900190ce:	b168      	cbz	r0, 900190ec <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900190d0:	eb0a 0109 	add.w	r1, sl, r9
900190d4:	463a      	mov	r2, r7
900190d6:	4628      	mov	r0, r5
900190d8:	4441      	add	r1, r8
900190da:	eb04 0341 	add.w	r3, r4, r1, lsl #1
900190de:	4649      	mov	r1, r9
900190e0:	f7ff ff52 	bl	90018f88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900190e4:	4658      	mov	r0, fp
900190e6:	b003      	add	sp, #12
900190e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900190ec:	eb07 010a 	add.w	r1, r7, sl
900190f0:	4449      	add	r1, r9
900190f2:	4441      	add	r1, r8
900190f4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900190f8:	e7d2      	b.n	900190a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
900190fa:	f04f 0b00 	mov.w	fp, #0
900190fe:	e7f1      	b.n	900190e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90019100 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90019100:	b570      	push	{r4, r5, r6, lr}
90019102:	8810      	ldrh	r0, [r2, #0]
90019104:	4298      	cmp	r0, r3
90019106:	d817      	bhi.n	90019138 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019108:	1e48      	subs	r0, r1, #1
9001910a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001910e:	4298      	cmp	r0, r3
90019110:	d312      	bcc.n	90019138 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019112:	2400      	movs	r4, #0
90019114:	428c      	cmp	r4, r1
90019116:	d20f      	bcs.n	90019138 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019118:	1860      	adds	r0, r4, r1
9001911a:	1040      	asrs	r0, r0, #1
9001911c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90019120:	0085      	lsls	r5, r0, #2
90019122:	42b3      	cmp	r3, r6
90019124:	d902      	bls.n	9001912c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019126:	3001      	adds	r0, #1
90019128:	b284      	uxth	r4, r0
9001912a:	e7f3      	b.n	90019114 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001912c:	d201      	bcs.n	90019132 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001912e:	b281      	uxth	r1, r0
90019130:	e7f0      	b.n	90019114 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019132:	442a      	add	r2, r5
90019134:	8850      	ldrh	r0, [r2, #2]
90019136:	bd70      	pop	{r4, r5, r6, pc}
90019138:	2000      	movs	r0, #0
9001913a:	e7fc      	b.n	90019136 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001913c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001913c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019140:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90019142:	4604      	mov	r4, r0
90019144:	260b      	movs	r6, #11
90019146:	886f      	ldrh	r7, [r5, #2]
90019148:	087f      	lsrs	r7, r7, #1
9001914a:	3e01      	subs	r6, #1
9001914c:	d013      	beq.n	90019176 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001914e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90019150:	462a      	mov	r2, r5
90019152:	4639      	mov	r1, r7
90019154:	4620      	mov	r0, r4
90019156:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001915a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001915e:	4643      	mov	r3, r8
90019160:	f7ff ffce 	bl	90019100 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019164:	b138      	cbz	r0, 90019176 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019166:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001916a:	4642      	mov	r2, r8
9001916c:	4620      	mov	r0, r4
9001916e:	f7ff ff93 	bl	90019098 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90019172:	2800      	cmp	r0, #0
90019174:	d1e9      	bne.n	9001914a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001917c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001917c:	b570      	push	{r4, r5, r6, lr}
9001917e:	694a      	ldr	r2, [r1, #20]
90019180:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90019182:	684b      	ldr	r3, [r1, #4]
90019184:	1b54      	subs	r4, r2, r5
90019186:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90019188:	f000 8106 	beq.w	90019398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001918c:	1b9b      	subs	r3, r3, r6
9001918e:	d003      	beq.n	90019198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90019190:	4363      	muls	r3, r4
90019192:	2210      	movs	r2, #16
90019194:	fb93 f3f2 	sdiv	r3, r3, r2
90019198:	680c      	ldr	r4, [r1, #0]
9001919a:	698a      	ldr	r2, [r1, #24]
9001919c:	1b65      	subs	r5, r4, r5
9001919e:	f000 80fd 	beq.w	9001939c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
900191a2:	1b92      	subs	r2, r2, r6
900191a4:	d003      	beq.n	900191ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900191a6:	436a      	muls	r2, r5
900191a8:	2410      	movs	r4, #16
900191aa:	fb92 f2f4 	sdiv	r2, r2, r4
900191ae:	1a9b      	subs	r3, r3, r2
900191b0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 900193d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900191b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900191b8:	460a      	mov	r2, r1
900191ba:	ee07 3a90 	vmov	s15, r3
900191be:	f100 040c 	add.w	r4, r0, #12
900191c2:	4603      	mov	r3, r0
900191c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900191c8:	ee67 7a84 	vmul.f32	s15, s15, s8
900191cc:	ee87 3a27 	vdiv.f32	s6, s14, s15
900191d0:	eeb1 6a43 	vneg.f32	s12, s6
900191d4:	edd2 7a02 	vldr	s15, [r2, #8]
900191d8:	3214      	adds	r2, #20
900191da:	eec7 6a27 	vdiv.f32	s13, s14, s15
900191de:	ece3 6a01 	vstmia	r3!, {s13}
900191e2:	429c      	cmp	r4, r3
900191e4:	ed52 7a02 	vldr	s15, [r2, #-8]
900191e8:	ee67 7aa6 	vmul.f32	s15, s15, s13
900191ec:	edc3 7a02 	vstr	s15, [r3, #8]
900191f0:	ed52 7a01 	vldr	s15, [r2, #-4]
900191f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
900191f8:	edc3 7a05 	vstr	s15, [r3, #20]
900191fc:	d1ea      	bne.n	900191d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
900191fe:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019200:	698b      	ldr	r3, [r1, #24]
90019202:	edd0 4a02 	vldr	s9, [r0, #8]
90019206:	1a9b      	subs	r3, r3, r2
90019208:	edd0 3a00 	vldr	s7, [r0]
9001920c:	edd0 6a01 	vldr	s13, [r0, #4]
90019210:	ee07 3a90 	vmov	s15, r3
90019214:	684b      	ldr	r3, [r1, #4]
90019216:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001921a:	ed90 5a05 	vldr	s10, [r0, #20]
9001921e:	1a9b      	subs	r3, r3, r2
90019220:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019224:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019228:	ed90 2a03 	vldr	s4, [r0, #12]
9001922c:	ee07 3a10 	vmov	s14, r3
90019230:	edd0 5a04 	vldr	s11, [r0, #16]
90019234:	ee67 7a84 	vmul.f32	s15, s15, s8
90019238:	ed90 1a07 	vldr	s2, [r0, #28]
9001923c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019240:	edd0 2a06 	vldr	s5, [r0, #24]
90019244:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019248:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001924c:	ee27 7a04 	vmul.f32	s14, s14, s8
90019250:	ee32 5a45 	vsub.f32	s10, s4, s10
90019254:	eee6 7a87 	vfma.f32	s15, s13, s14
90019258:	ee67 7a83 	vmul.f32	s15, s15, s6
9001925c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90019260:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019262:	694a      	ldr	r2, [r1, #20]
90019264:	1b13      	subs	r3, r2, r4
90019266:	ee07 3a10 	vmov	s14, r3
9001926a:	680b      	ldr	r3, [r1, #0]
9001926c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019270:	1b1b      	subs	r3, r3, r4
90019272:	ee27 7a04 	vmul.f32	s14, s14, s8
90019276:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001927a:	ee07 3a10 	vmov	s14, r3
9001927e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019282:	ee27 7a04 	vmul.f32	s14, s14, s8
90019286:	eee6 4a87 	vfma.f32	s9, s13, s14
9001928a:	ee64 4a86 	vmul.f32	s9, s9, s12
9001928e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90019292:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019294:	698b      	ldr	r3, [r1, #24]
90019296:	1a9b      	subs	r3, r3, r2
90019298:	ee06 3a90 	vmov	s13, r3
9001929c:	684b      	ldr	r3, [r1, #4]
9001929e:	1a9b      	subs	r3, r3, r2
900192a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900192a4:	ee07 3a10 	vmov	s14, r3
900192a8:	ee66 6a84 	vmul.f32	s13, s13, s8
900192ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900192b0:	ee65 6a66 	vnmul.f32	s13, s10, s13
900192b4:	ee27 7a04 	vmul.f32	s14, s14, s8
900192b8:	eee5 6a87 	vfma.f32	s13, s11, s14
900192bc:	ee66 6a83 	vmul.f32	s13, s13, s6
900192c0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
900192c4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900192c6:	694a      	ldr	r2, [r1, #20]
900192c8:	1b13      	subs	r3, r2, r4
900192ca:	ee07 3a10 	vmov	s14, r3
900192ce:	680b      	ldr	r3, [r1, #0]
900192d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900192d4:	1b1b      	subs	r3, r3, r4
900192d6:	ee27 7a04 	vmul.f32	s14, s14, s8
900192da:	ee25 5a47 	vnmul.f32	s10, s10, s14
900192de:	ee07 3a10 	vmov	s14, r3
900192e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900192e6:	ee27 7a04 	vmul.f32	s14, s14, s8
900192ea:	eea5 5a87 	vfma.f32	s10, s11, s14
900192ee:	edd0 5a08 	vldr	s11, [r0, #32]
900192f2:	ee31 1a65 	vsub.f32	s2, s2, s11
900192f6:	ee72 5ae5 	vsub.f32	s11, s5, s11
900192fa:	ee25 5a06 	vmul.f32	s10, s10, s12
900192fe:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
90019302:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019304:	698b      	ldr	r3, [r1, #24]
90019306:	1a9b      	subs	r3, r3, r2
90019308:	ee07 3a10 	vmov	s14, r3
9001930c:	684b      	ldr	r3, [r1, #4]
9001930e:	1a9b      	subs	r3, r3, r2
90019310:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019314:	ee01 3a90 	vmov	s3, r3
90019318:	ee27 7a04 	vmul.f32	s14, s14, s8
9001931c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90019320:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90019324:	ee61 1a84 	vmul.f32	s3, s3, s8
90019328:	eea1 7a21 	vfma.f32	s14, s2, s3
9001932c:	ee27 7a03 	vmul.f32	s14, s14, s6
90019330:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90019334:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019336:	694a      	ldr	r2, [r1, #20]
90019338:	1b13      	subs	r3, r2, r4
9001933a:	ee03 3a10 	vmov	s6, r3
9001933e:	680b      	ldr	r3, [r1, #0]
90019340:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019344:	1b1b      	subs	r3, r3, r4
90019346:	ee23 3a04 	vmul.f32	s6, s6, s8
9001934a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001934e:	ee03 3a10 	vmov	s6, r3
90019352:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019356:	ee23 4a04 	vmul.f32	s8, s6, s8
9001935a:	eee1 5a04 	vfma.f32	s11, s2, s8
9001935e:	ee25 6a86 	vmul.f32	s12, s11, s12
90019362:	ee62 5a67 	vnmul.f32	s11, s4, s15
90019366:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001936a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001936e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90019372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019376:	dd13      	ble.n	900193a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90019378:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001937c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90019380:	63c3      	str	r3, [r0, #60]	@ 0x3c
90019382:	eee3 7a87 	vfma.f32	s15, s7, s14
90019386:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001938a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001938e:	dd15      	ble.n	900193bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90019390:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90019394:	6403      	str	r3, [r0, #64]	@ 0x40
90019396:	bd70      	pop	{r4, r5, r6, pc}
90019398:	4623      	mov	r3, r4
9001939a:	e6fd      	b.n	90019198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001939c:	462a      	mov	r2, r5
9001939e:	e706      	b.n	900191ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900193a0:	d502      	bpl.n	900193a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
900193a2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
900193a6:	e7e9      	b.n	9001937c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900193a8:	ee22 2a64 	vnmul.f32	s4, s4, s9
900193ac:	eea3 2a85 	vfma.f32	s4, s7, s10
900193b0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900193b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900193b8:	dade      	bge.n	90019378 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
900193ba:	e7f2      	b.n	900193a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
900193bc:	d502      	bpl.n	900193c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
900193be:	f647 73ff 	movw	r3, #32767	@ 0x7fff
900193c2:	e7e7      	b.n	90019394 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900193c4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900193c8:	eee3 4a86 	vfma.f32	s9, s7, s12
900193cc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900193d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900193d4:	dadc      	bge.n	90019390 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900193d6:	e7f2      	b.n	900193be <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900193d8:	3d800000 	.word	0x3d800000

900193dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900193dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900193e0:	2714      	movs	r7, #20
900193e2:	435f      	muls	r7, r3
900193e4:	eb02 0c07 	add.w	ip, r2, r7
900193e8:	f8dc 5004 	ldr.w	r5, [ip, #4]
900193ec:	f115 0e0f 	adds.w	lr, r5, #15
900193f0:	f100 80a2 	bmi.w	90019538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900193f4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900193f8:	9c08      	ldr	r4, [sp, #32]
900193fa:	2614      	movs	r6, #20
900193fc:	f8c0 e014 	str.w	lr, [r0, #20]
90019400:	4366      	muls	r6, r4
90019402:	eb02 0806 	add.w	r8, r2, r6
90019406:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001940a:	f115 040f 	adds.w	r4, r5, #15
9001940e:	f100 809f 	bmi.w	90019550 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
90019412:	1124      	asrs	r4, r4, #4
90019414:	eba4 040e 	sub.w	r4, r4, lr
90019418:	6184      	str	r4, [r0, #24]
9001941a:	2c00      	cmp	r4, #0
9001941c:	f000 808a 	beq.w	90019534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90019420:	f8dc 9004 	ldr.w	r9, [ip, #4]
90019424:	f8d8 4004 	ldr.w	r4, [r8, #4]
90019428:	5995      	ldr	r5, [r2, r6]
9001942a:	eba4 0809 	sub.w	r8, r4, r9
9001942e:	59d4      	ldr	r4, [r2, r7]
90019430:	eba5 0a04 	sub.w	sl, r5, r4
90019434:	ea4f 1608 	mov.w	r6, r8, lsl #4
90019438:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001943c:	fb0e fe05 	mul.w	lr, lr, r5
90019440:	fb0a ee19 	mls	lr, sl, r9, lr
90019444:	fb08 e404 	mla	r4, r8, r4, lr
90019448:	3c01      	subs	r4, #1
9001944a:	19a4      	adds	r4, r4, r6
9001944c:	f100 808c 	bmi.w	90019568 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90019450:	fb94 fef6 	sdiv	lr, r4, r6
90019454:	fb06 441e 	mls	r4, r6, lr, r4
90019458:	f8c0 e000 	str.w	lr, [r0]
9001945c:	6104      	str	r4, [r0, #16]
9001945e:	2d00      	cmp	r5, #0
90019460:	f2c0 8095 	blt.w	9001958e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90019464:	fb95 f4f6 	sdiv	r4, r5, r6
90019468:	fb06 5514 	mls	r5, r6, r4, r5
9001946c:	6044      	str	r4, [r0, #4]
9001946e:	6085      	str	r5, [r0, #8]
90019470:	60c6      	str	r6, [r0, #12]
90019472:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90019476:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001947a:	6945      	ldr	r5, [r0, #20]
9001947c:	59d2      	ldr	r2, [r2, r7]
9001947e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90019482:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 900195b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90019486:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001948a:	ee07 4a10 	vmov	s14, r4
9001948e:	6804      	ldr	r4, [r0, #0]
90019490:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90019494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019498:	ee07 2a90 	vmov	s15, r2
9001949c:	ee27 7a26 	vmul.f32	s14, s14, s13
900194a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900194a4:	ee67 7aa6 	vmul.f32	s15, s15, s13
900194a8:	edd3 6a00 	vldr	s13, [r3]
900194ac:	eee6 6a07 	vfma.f32	s13, s12, s14
900194b0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
900194b4:	eee6 6a27 	vfma.f32	s13, s12, s15
900194b8:	edc0 6a07 	vstr	s13, [r0, #28]
900194bc:	edd0 6a01 	vldr	s13, [r0, #4]
900194c0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
900194c4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900194c8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
900194cc:	eea6 6aa5 	vfma.f32	s12, s13, s11
900194d0:	ed80 6a08 	vstr	s12, [r0, #32]
900194d4:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
900194d6:	6242      	str	r2, [r0, #36]	@ 0x24
900194d8:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
900194dc:	ed93 6a03 	vldr	s12, [r3, #12]
900194e0:	eea5 6a87 	vfma.f32	s12, s11, s14
900194e4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
900194e8:	eea5 6aa7 	vfma.f32	s12, s11, s15
900194ec:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
900194f0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
900194f4:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
900194f8:	eea6 6aa5 	vfma.f32	s12, s13, s11
900194fc:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
90019500:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019502:	6302      	str	r2, [r0, #48]	@ 0x30
90019504:	ed93 6a06 	vldr	s12, [r3, #24]
90019508:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001950c:	eea5 6a87 	vfma.f32	s12, s11, s14
90019510:	eeb0 7a46 	vmov.f32	s14, s12
90019514:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
90019518:	eea6 7a27 	vfma.f32	s14, s12, s15
9001951c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90019520:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
90019524:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
90019528:	eee6 7a87 	vfma.f32	s15, s13, s14
9001952c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
90019530:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
90019532:	63c3      	str	r3, [r0, #60]	@ 0x3c
90019534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019538:	2410      	movs	r4, #16
9001953a:	f1c5 0501 	rsb	r5, r5, #1
9001953e:	fb9e fef4 	sdiv	lr, lr, r4
90019542:	f015 050f 	ands.w	r5, r5, #15
90019546:	bf18      	it	ne
90019548:	2501      	movne	r5, #1
9001954a:	ebae 0e05 	sub.w	lr, lr, r5
9001954e:	e753      	b.n	900193f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90019550:	f04f 0910 	mov.w	r9, #16
90019554:	f1c5 0501 	rsb	r5, r5, #1
90019558:	fb94 f4f9 	sdiv	r4, r4, r9
9001955c:	f015 050f 	ands.w	r5, r5, #15
90019560:	bf18      	it	ne
90019562:	2501      	movne	r5, #1
90019564:	1b64      	subs	r4, r4, r5
90019566:	e755      	b.n	90019414 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90019568:	4264      	negs	r4, r4
9001956a:	fb94 fef6 	sdiv	lr, r4, r6
9001956e:	f1ce 0800 	rsb	r8, lr, #0
90019572:	fb06 441e 	mls	r4, r6, lr, r4
90019576:	f8c0 8000 	str.w	r8, [r0]
9001957a:	6104      	str	r4, [r0, #16]
9001957c:	2c00      	cmp	r4, #0
9001957e:	f43f af6e 	beq.w	9001945e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90019582:	ea6f 0e0e 	mvn.w	lr, lr
90019586:	1b34      	subs	r4, r6, r4
90019588:	f8c0 e000 	str.w	lr, [r0]
9001958c:	e766      	b.n	9001945c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001958e:	426d      	negs	r5, r5
90019590:	fb95 f4f6 	sdiv	r4, r5, r6
90019594:	f1c4 0e00 	rsb	lr, r4, #0
90019598:	fb06 5514 	mls	r5, r6, r4, r5
9001959c:	f8c0 e004 	str.w	lr, [r0, #4]
900195a0:	6085      	str	r5, [r0, #8]
900195a2:	2d00      	cmp	r5, #0
900195a4:	f43f af64 	beq.w	90019470 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900195a8:	43e4      	mvns	r4, r4
900195aa:	1b75      	subs	r5, r6, r5
900195ac:	6044      	str	r4, [r0, #4]
900195ae:	e75e      	b.n	9001946e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900195b0:	3d800000 	.word	0x3d800000

900195b4 <_ZN8touchgfx7Unicode6strlenEPKt>:
900195b4:	4602      	mov	r2, r0
900195b6:	b148      	cbz	r0, 900195cc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
900195b8:	2300      	movs	r3, #0
900195ba:	b298      	uxth	r0, r3
900195bc:	3301      	adds	r3, #1
900195be:	eb02 0143 	add.w	r1, r2, r3, lsl #1
900195c2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900195c6:	2900      	cmp	r1, #0
900195c8:	d1f7      	bne.n	900195ba <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900195ca:	4770      	bx	lr
900195cc:	4770      	bx	lr

900195ce <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900195ce:	b530      	push	{r4, r5, lr}
900195d0:	4604      	mov	r4, r0
900195d2:	b159      	cbz	r1, 900195ec <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900195d4:	b148      	cbz	r0, 900195ea <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900195d6:	2300      	movs	r3, #0
900195d8:	b298      	uxth	r0, r3
900195da:	4282      	cmp	r2, r0
900195dc:	d905      	bls.n	900195ea <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900195de:	5ccd      	ldrb	r5, [r1, r3]
900195e0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
900195e4:	3301      	adds	r3, #1
900195e6:	2d00      	cmp	r5, #0
900195e8:	d1f6      	bne.n	900195d8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
900195ea:	bd30      	pop	{r4, r5, pc}
900195ec:	4608      	mov	r0, r1
900195ee:	e7fc      	b.n	900195ea <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

900195f0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
900195f0:	b5f0      	push	{r4, r5, r6, r7, lr}
900195f2:	b08b      	sub	sp, #44	@ 0x2c
900195f4:	468c      	mov	ip, r1
900195f6:	4604      	mov	r4, r0
900195f8:	2100      	movs	r1, #0
900195fa:	261f      	movs	r6, #31
900195fc:	af01      	add	r7, sp, #4
900195fe:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019602:	1e71      	subs	r1, r6, #1
90019604:	fb94 fef3 	sdiv	lr, r4, r3
90019608:	fb03 441e 	mls	r4, r3, lr, r4
9001960c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90019610:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90019614:	b2ec      	uxtb	r4, r5
90019616:	2d09      	cmp	r5, #9
90019618:	bfd4      	ite	le
9001961a:	3430      	addle	r4, #48	@ 0x30
9001961c:	3457      	addgt	r4, #87	@ 0x57
9001961e:	b2e4      	uxtb	r4, r4
90019620:	55bc      	strb	r4, [r7, r6]
90019622:	4674      	mov	r4, lr
90019624:	b974      	cbnz	r4, 90019644 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90019626:	2800      	cmp	r0, #0
90019628:	da05      	bge.n	90019636 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001962a:	ab0a      	add	r3, sp, #40	@ 0x28
9001962c:	4419      	add	r1, r3
9001962e:	232d      	movs	r3, #45	@ 0x2d
90019630:	f801 3c24 	strb.w	r3, [r1, #-36]
90019634:	1eb1      	subs	r1, r6, #2
90019636:	3101      	adds	r1, #1
90019638:	4660      	mov	r0, ip
9001963a:	4439      	add	r1, r7
9001963c:	f7ff ffc7 	bl	900195ce <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019640:	b00b      	add	sp, #44	@ 0x2c
90019642:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019644:	460e      	mov	r6, r1
90019646:	e7dc      	b.n	90019602 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90019648 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90019648:	b5f0      	push	{r4, r5, r6, r7, lr}
9001964a:	468c      	mov	ip, r1
9001964c:	b08b      	sub	sp, #44	@ 0x2c
9001964e:	2100      	movs	r1, #0
90019650:	ae01      	add	r6, sp, #4
90019652:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019656:	211f      	movs	r1, #31
90019658:	fbb0 f7f3 	udiv	r7, r0, r3
9001965c:	fb03 0517 	mls	r5, r3, r7, r0
90019660:	4638      	mov	r0, r7
90019662:	b2ec      	uxtb	r4, r5
90019664:	2d09      	cmp	r5, #9
90019666:	bfd4      	ite	le
90019668:	3430      	addle	r4, #48	@ 0x30
9001966a:	3457      	addgt	r4, #87	@ 0x57
9001966c:	b2e4      	uxtb	r4, r4
9001966e:	558c      	strb	r4, [r1, r6]
90019670:	1e4c      	subs	r4, r1, #1
90019672:	b92f      	cbnz	r7, 90019680 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90019674:	4431      	add	r1, r6
90019676:	4660      	mov	r0, ip
90019678:	f7ff ffa9 	bl	900195ce <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001967c:	b00b      	add	sp, #44	@ 0x2c
9001967e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019680:	4621      	mov	r1, r4
90019682:	e7e9      	b.n	90019658 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90019684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90019684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019688:	b085      	sub	sp, #20
9001968a:	4691      	mov	r9, r2
9001968c:	6802      	ldr	r2, [r0, #0]
9001968e:	4688      	mov	r8, r1
90019690:	461c      	mov	r4, r3
90019692:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
90019696:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001969a:	4683      	mov	fp, r0
9001969c:	4610      	mov	r0, r2
9001969e:	9103      	str	r1, [sp, #12]
900196a0:	9302      	str	r3, [sp, #8]
900196a2:	9201      	str	r2, [sp, #4]
900196a4:	f7ff ff86 	bl	900195b4 <_ZN8touchgfx7Unicode6strlenEPKt>
900196a8:	f1b8 0f00 	cmp.w	r8, #0
900196ac:	bf0c      	ite	eq
900196ae:	4684      	moveq	ip, r0
900196b0:	f100 0c01 	addne.w	ip, r0, #1
900196b4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
900196b8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
900196bc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900196be:	fa1f fc8c 	uxth.w	ip, ip
900196c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900196c4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
900196c8:	9903      	ldr	r1, [sp, #12]
900196ca:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900196ce:	d041      	beq.n	90019754 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900196d0:	d834      	bhi.n	9001973c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900196d2:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
900196d6:	d059      	beq.n	9001978c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900196d8:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
900196dc:	d03a      	beq.n	90019754 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900196de:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
900196e2:	d034      	beq.n	9001974e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900196e4:	2400      	movs	r4, #0
900196e6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
900196ea:	3a01      	subs	r2, #1
900196ec:	b169      	cbz	r1, 9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900196ee:	9911      	ldr	r1, [sp, #68]	@ 0x44
900196f0:	458c      	cmp	ip, r1
900196f2:	da09      	bge.n	90019708 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900196f4:	eba1 010c 	sub.w	r1, r1, ip
900196f8:	b289      	uxth	r1, r1
900196fa:	b933      	cbnz	r3, 9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900196fc:	2e00      	cmp	r6, #0
900196fe:	d051      	beq.n	900197a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019700:	2800      	cmp	r0, #0
90019702:	d04f      	beq.n	900197a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019704:	440c      	add	r4, r1
90019706:	b2a4      	uxth	r4, r4
90019708:	2100      	movs	r1, #0
9001970a:	682b      	ldr	r3, [r5, #0]
9001970c:	4293      	cmp	r3, r2
9001970e:	da07      	bge.n	90019720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019710:	f1b8 0f00 	cmp.w	r8, #0
90019714:	d004      	beq.n	90019720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019716:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001971a:	682b      	ldr	r3, [r5, #0]
9001971c:	3301      	adds	r3, #1
9001971e:	602b      	str	r3, [r5, #0]
90019720:	2730      	movs	r7, #48	@ 0x30
90019722:	2c00      	cmp	r4, #0
90019724:	d04e      	beq.n	900197c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019726:	682e      	ldr	r6, [r5, #0]
90019728:	3c01      	subs	r4, #1
9001972a:	42b2      	cmp	r2, r6
9001972c:	b2a4      	uxth	r4, r4
9001972e:	dd49      	ble.n	900197c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019730:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019734:	682b      	ldr	r3, [r5, #0]
90019736:	3301      	adds	r3, #1
90019738:	602b      	str	r3, [r5, #0]
9001973a:	e7f2      	b.n	90019722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001973c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
90019740:	d01d      	beq.n	9001977e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90019742:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
90019746:	d002      	beq.n	9001974e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019748:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001974c:	e7c9      	b.n	900196e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001974e:	4684      	mov	ip, r0
90019750:	f04f 0800 	mov.w	r8, #0
90019754:	2c00      	cmp	r4, #0
90019756:	d0c6      	beq.n	900196e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019758:	b947      	cbnz	r7, 9001976c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001975a:	2801      	cmp	r0, #1
9001975c:	d106      	bne.n	9001976c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001975e:	8814      	ldrh	r4, [r2, #0]
90019760:	2c30      	cmp	r4, #48	@ 0x30
90019762:	bf02      	ittt	eq
90019764:	3202      	addeq	r2, #2
90019766:	4638      	moveq	r0, r7
90019768:	f8cb 2000 	streq.w	r2, [fp]
9001976c:	45bc      	cmp	ip, r7
9001976e:	da14      	bge.n	9001979a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90019770:	b2bf      	uxth	r7, r7
90019772:	eba7 040c 	sub.w	r4, r7, ip
90019776:	46bc      	mov	ip, r7
90019778:	b2a4      	uxth	r4, r4
9001977a:	2600      	movs	r6, #0
9001977c:	e7b3      	b.n	900196e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001977e:	4684      	mov	ip, r0
90019780:	b16c      	cbz	r4, 9001979e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90019782:	42b8      	cmp	r0, r7
90019784:	dd00      	ble.n	90019788 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90019786:	b2b8      	uxth	r0, r7
90019788:	2400      	movs	r4, #0
9001978a:	e003      	b.n	90019794 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001978c:	f04f 0c01 	mov.w	ip, #1
90019790:	2400      	movs	r4, #0
90019792:	4660      	mov	r0, ip
90019794:	4626      	mov	r6, r4
90019796:	46a0      	mov	r8, r4
90019798:	e7a5      	b.n	900196e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001979a:	2400      	movs	r4, #0
9001979c:	e7ed      	b.n	9001977a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001979e:	4626      	mov	r6, r4
900197a0:	46a0      	mov	r8, r4
900197a2:	e7a0      	b.n	900196e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900197a4:	2900      	cmp	r1, #0
900197a6:	d0b0      	beq.n	9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900197a8:	2720      	movs	r7, #32
900197aa:	682e      	ldr	r6, [r5, #0]
900197ac:	2900      	cmp	r1, #0
900197ae:	d0ac      	beq.n	9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900197b0:	3901      	subs	r1, #1
900197b2:	4296      	cmp	r6, r2
900197b4:	b289      	uxth	r1, r1
900197b6:	daa7      	bge.n	90019708 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900197b8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900197bc:	682b      	ldr	r3, [r5, #0]
900197be:	3301      	adds	r3, #1
900197c0:	602b      	str	r3, [r5, #0]
900197c2:	e7f2      	b.n	900197aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
900197c4:	b188      	cbz	r0, 900197ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900197c6:	682b      	ldr	r3, [r5, #0]
900197c8:	3801      	subs	r0, #1
900197ca:	429a      	cmp	r2, r3
900197cc:	b280      	uxth	r0, r0
900197ce:	dd0c      	ble.n	900197ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900197d0:	f8db 3000 	ldr.w	r3, [fp]
900197d4:	1c9c      	adds	r4, r3, #2
900197d6:	f8cb 4000 	str.w	r4, [fp]
900197da:	881c      	ldrh	r4, [r3, #0]
900197dc:	682b      	ldr	r3, [r5, #0]
900197de:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
900197e2:	682b      	ldr	r3, [r5, #0]
900197e4:	3301      	adds	r3, #1
900197e6:	602b      	str	r3, [r5, #0]
900197e8:	e7ec      	b.n	900197c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900197ea:	2620      	movs	r6, #32
900197ec:	b151      	cbz	r1, 90019804 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900197ee:	6828      	ldr	r0, [r5, #0]
900197f0:	3901      	subs	r1, #1
900197f2:	4282      	cmp	r2, r0
900197f4:	b289      	uxth	r1, r1
900197f6:	dd05      	ble.n	90019804 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900197f8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
900197fc:	682b      	ldr	r3, [r5, #0]
900197fe:	3301      	adds	r3, #1
90019800:	602b      	str	r3, [r5, #0]
90019802:	e7f3      	b.n	900197ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90019804:	b005      	add	sp, #20
90019806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001980a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001980e:	2400      	movs	r4, #0
90019810:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90019814:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
90019818:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001981c:	8014      	strh	r4, [r2, #0]
9001981e:	701c      	strb	r4, [r3, #0]
90019820:	f888 4000 	strb.w	r4, [r8]
90019824:	f88c 4000 	strb.w	r4, [ip]
90019828:	f88e 4000 	strb.w	r4, [lr]
9001982c:	703c      	strb	r4, [r7, #0]
9001982e:	6804      	ldr	r4, [r0, #0]
90019830:	b1a4      	cbz	r4, 9001985c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90019832:	8824      	ldrh	r4, [r4, #0]
90019834:	f04f 0901 	mov.w	r9, #1
90019838:	b314      	cbz	r4, 90019880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001983a:	2c2b      	cmp	r4, #43	@ 0x2b
9001983c:	d001      	beq.n	90019842 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001983e:	2c20      	cmp	r4, #32
90019840:	d110      	bne.n	90019864 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90019842:	8014      	strh	r4, [r2, #0]
90019844:	6804      	ldr	r4, [r0, #0]
90019846:	b10c      	cbz	r4, 9001984c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019848:	3402      	adds	r4, #2
9001984a:	6004      	str	r4, [r0, #0]
9001984c:	680c      	ldr	r4, [r1, #0]
9001984e:	b10c      	cbz	r4, 90019854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019850:	3401      	adds	r4, #1
90019852:	600c      	str	r4, [r1, #0]
90019854:	6804      	ldr	r4, [r0, #0]
90019856:	b17c      	cbz	r4, 90019878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019858:	8824      	ldrh	r4, [r4, #0]
9001985a:	e7ed      	b.n	90019838 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001985c:	680c      	ldr	r4, [r1, #0]
9001985e:	b17c      	cbz	r4, 90019880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019860:	7824      	ldrb	r4, [r4, #0]
90019862:	e7e7      	b.n	90019834 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90019864:	2c2d      	cmp	r4, #45	@ 0x2d
90019866:	d102      	bne.n	9001986e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019868:	f883 9000 	strb.w	r9, [r3]
9001986c:	e7ea      	b.n	90019844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001986e:	2c23      	cmp	r4, #35	@ 0x23
90019870:	d107      	bne.n	90019882 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90019872:	f888 9000 	strb.w	r9, [r8]
90019876:	e7e5      	b.n	90019844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019878:	680c      	ldr	r4, [r1, #0]
9001987a:	b10c      	cbz	r4, 90019880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001987c:	7824      	ldrb	r4, [r4, #0]
9001987e:	e7db      	b.n	90019838 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019880:	2400      	movs	r4, #0
90019882:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
90019886:	2b09      	cmp	r3, #9
90019888:	d901      	bls.n	9001988e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001988a:	2c2a      	cmp	r4, #42	@ 0x2a
9001988c:	d122      	bne.n	900198d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001988e:	2301      	movs	r3, #1
90019890:	2c30      	cmp	r4, #48	@ 0x30
90019892:	f88e 3000 	strb.w	r3, [lr]
90019896:	d10d      	bne.n	900198b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019898:	f88c 3000 	strb.w	r3, [ip]
9001989c:	6803      	ldr	r3, [r0, #0]
9001989e:	b10b      	cbz	r3, 900198a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
900198a0:	3302      	adds	r3, #2
900198a2:	6003      	str	r3, [r0, #0]
900198a4:	680b      	ldr	r3, [r1, #0]
900198a6:	b10b      	cbz	r3, 900198ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
900198a8:	3301      	adds	r3, #1
900198aa:	600b      	str	r3, [r1, #0]
900198ac:	6803      	ldr	r3, [r0, #0]
900198ae:	2b00      	cmp	r3, #0
900198b0:	d02f      	beq.n	90019912 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
900198b2:	881c      	ldrh	r4, [r3, #0]
900198b4:	2c2a      	cmp	r4, #42	@ 0x2a
900198b6:	d135      	bne.n	90019924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900198b8:	f04f 33ff 	mov.w	r3, #4294967295
900198bc:	6033      	str	r3, [r6, #0]
900198be:	6803      	ldr	r3, [r0, #0]
900198c0:	b10b      	cbz	r3, 900198c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
900198c2:	3302      	adds	r3, #2
900198c4:	6003      	str	r3, [r0, #0]
900198c6:	680b      	ldr	r3, [r1, #0]
900198c8:	b10b      	cbz	r3, 900198ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900198ca:	3301      	adds	r3, #1
900198cc:	600b      	str	r3, [r1, #0]
900198ce:	6803      	ldr	r3, [r0, #0]
900198d0:	b31b      	cbz	r3, 9001991a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900198d2:	881c      	ldrh	r4, [r3, #0]
900198d4:	2c2e      	cmp	r4, #46	@ 0x2e
900198d6:	d11a      	bne.n	9001990e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900198d8:	2301      	movs	r3, #1
900198da:	703b      	strb	r3, [r7, #0]
900198dc:	6803      	ldr	r3, [r0, #0]
900198de:	b10b      	cbz	r3, 900198e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900198e0:	3302      	adds	r3, #2
900198e2:	6003      	str	r3, [r0, #0]
900198e4:	680b      	ldr	r3, [r1, #0]
900198e6:	b10b      	cbz	r3, 900198ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900198e8:	3301      	adds	r3, #1
900198ea:	600b      	str	r3, [r1, #0]
900198ec:	6803      	ldr	r3, [r0, #0]
900198ee:	2b00      	cmp	r3, #0
900198f0:	d036      	beq.n	90019960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900198f2:	881b      	ldrh	r3, [r3, #0]
900198f4:	2b2a      	cmp	r3, #42	@ 0x2a
900198f6:	d137      	bne.n	90019968 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900198f8:	f04f 33ff 	mov.w	r3, #4294967295
900198fc:	602b      	str	r3, [r5, #0]
900198fe:	6803      	ldr	r3, [r0, #0]
90019900:	b10b      	cbz	r3, 90019906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90019902:	3302      	adds	r3, #2
90019904:	6003      	str	r3, [r0, #0]
90019906:	680b      	ldr	r3, [r1, #0]
90019908:	b10b      	cbz	r3, 9001990e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001990a:	3301      	adds	r3, #1
9001990c:	600b      	str	r3, [r1, #0]
9001990e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019912:	680c      	ldr	r4, [r1, #0]
90019914:	b134      	cbz	r4, 90019924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019916:	7824      	ldrb	r4, [r4, #0]
90019918:	e7cc      	b.n	900198b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001991a:	680b      	ldr	r3, [r1, #0]
9001991c:	2b00      	cmp	r3, #0
9001991e:	d0f6      	beq.n	9001990e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019920:	781c      	ldrb	r4, [r3, #0]
90019922:	e7d7      	b.n	900198d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019924:	2300      	movs	r3, #0
90019926:	220a      	movs	r2, #10
90019928:	6033      	str	r3, [r6, #0]
9001992a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001992e:	fa1f f38c 	uxth.w	r3, ip
90019932:	2b09      	cmp	r3, #9
90019934:	d8ce      	bhi.n	900198d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019936:	6833      	ldr	r3, [r6, #0]
90019938:	fb02 c303 	mla	r3, r2, r3, ip
9001993c:	6033      	str	r3, [r6, #0]
9001993e:	6803      	ldr	r3, [r0, #0]
90019940:	b10b      	cbz	r3, 90019946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90019942:	3302      	adds	r3, #2
90019944:	6003      	str	r3, [r0, #0]
90019946:	680b      	ldr	r3, [r1, #0]
90019948:	b10b      	cbz	r3, 9001994e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001994a:	3301      	adds	r3, #1
9001994c:	600b      	str	r3, [r1, #0]
9001994e:	6803      	ldr	r3, [r0, #0]
90019950:	b10b      	cbz	r3, 90019956 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90019952:	881c      	ldrh	r4, [r3, #0]
90019954:	e7e9      	b.n	9001992a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019956:	680c      	ldr	r4, [r1, #0]
90019958:	2c00      	cmp	r4, #0
9001995a:	d0e6      	beq.n	9001992a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001995c:	7824      	ldrb	r4, [r4, #0]
9001995e:	e7e4      	b.n	9001992a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019960:	680b      	ldr	r3, [r1, #0]
90019962:	b10b      	cbz	r3, 90019968 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019964:	781b      	ldrb	r3, [r3, #0]
90019966:	e7c5      	b.n	900198f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019968:	2200      	movs	r2, #0
9001996a:	240a      	movs	r4, #10
9001996c:	602a      	str	r2, [r5, #0]
9001996e:	3b30      	subs	r3, #48	@ 0x30
90019970:	682a      	ldr	r2, [r5, #0]
90019972:	b29e      	uxth	r6, r3
90019974:	2e09      	cmp	r6, #9
90019976:	d813      	bhi.n	900199a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019978:	fb04 3302 	mla	r3, r4, r2, r3
9001997c:	602b      	str	r3, [r5, #0]
9001997e:	6803      	ldr	r3, [r0, #0]
90019980:	b10b      	cbz	r3, 90019986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90019982:	3302      	adds	r3, #2
90019984:	6003      	str	r3, [r0, #0]
90019986:	680b      	ldr	r3, [r1, #0]
90019988:	b10b      	cbz	r3, 9001998e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001998a:	3301      	adds	r3, #1
9001998c:	600b      	str	r3, [r1, #0]
9001998e:	6803      	ldr	r3, [r0, #0]
90019990:	b10b      	cbz	r3, 90019996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90019992:	881b      	ldrh	r3, [r3, #0]
90019994:	e7eb      	b.n	9001996e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019996:	680b      	ldr	r3, [r1, #0]
90019998:	2b00      	cmp	r3, #0
9001999a:	d0e8      	beq.n	9001996e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001999c:	781b      	ldrb	r3, [r3, #0]
9001999e:	e7e6      	b.n	9001996e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900199a0:	2a06      	cmp	r2, #6
900199a2:	bfa8      	it	ge
900199a4:	2206      	movge	r2, #6
900199a6:	602a      	str	r2, [r5, #0]
900199a8:	e7b1      	b.n	9001990e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

900199aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
900199aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900199ae:	b0a3      	sub	sp, #140	@ 0x8c
900199b0:	2600      	movs	r6, #0
900199b2:	4607      	mov	r7, r0
900199b4:	4688      	mov	r8, r1
900199b6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
900199ba:	4631      	mov	r1, r6
900199bc:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
900199be:	4648      	mov	r0, r9
900199c0:	960d      	str	r6, [sp, #52]	@ 0x34
900199c2:	e9cd 3208 	strd	r3, r2, [sp, #32]
900199c6:	2242      	movs	r2, #66	@ 0x42
900199c8:	f010 f8da 	bl	90029b80 <memset>
900199cc:	b15f      	cbz	r7, 900199e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900199ce:	f108 3aff 	add.w	sl, r8, #4294967295
900199d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900199d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900199d6:	b152      	cbz	r2, 900199ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900199d8:	8812      	ldrh	r2, [r2, #0]
900199da:	b10a      	cbz	r2, 900199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900199dc:	459a      	cmp	sl, r3
900199de:	dc2e      	bgt.n	90019a3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
900199e0:	2200      	movs	r2, #0
900199e2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900199e6:	4638      	mov	r0, r7
900199e8:	b023      	add	sp, #140	@ 0x8c
900199ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900199ee:	9a08      	ldr	r2, [sp, #32]
900199f0:	2a00      	cmp	r2, #0
900199f2:	d0f5      	beq.n	900199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900199f4:	7812      	ldrb	r2, [r2, #0]
900199f6:	e7f0      	b.n	900199da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
900199f8:	2d00      	cmp	r5, #0
900199fa:	d0ea      	beq.n	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900199fc:	782a      	ldrb	r2, [r5, #0]
900199fe:	b142      	cbz	r2, 90019a12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90019a00:	2a25      	cmp	r2, #37	@ 0x25
90019a02:	d001      	beq.n	90019a08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90019a04:	459a      	cmp	sl, r3
90019a06:	dc08      	bgt.n	90019a1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019a08:	f1bb 0f00 	cmp.w	fp, #0
90019a0c:	d121      	bne.n	90019a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019a0e:	2d00      	cmp	r5, #0
90019a10:	d0df      	beq.n	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019a12:	782a      	ldrb	r2, [r5, #0]
90019a14:	f04f 0b00 	mov.w	fp, #0
90019a18:	e01d      	b.n	90019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90019a1a:	f1bb 0f00 	cmp.w	fp, #0
90019a1e:	d077      	beq.n	90019b10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019a20:	f8bb 2000 	ldrh.w	r2, [fp]
90019a24:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019a28:	f1bb 0f00 	cmp.w	fp, #0
90019a2c:	d002      	beq.n	90019a34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90019a2e:	f10b 0202 	add.w	r2, fp, #2
90019a32:	9209      	str	r2, [sp, #36]	@ 0x24
90019a34:	b10d      	cbz	r5, 90019a3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90019a36:	3501      	adds	r5, #1
90019a38:	9508      	str	r5, [sp, #32]
90019a3a:	3301      	adds	r3, #1
90019a3c:	930d      	str	r3, [sp, #52]	@ 0x34
90019a3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019a40:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90019a44:	f1bb 0f00 	cmp.w	fp, #0
90019a48:	d0d6      	beq.n	900199f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90019a4a:	f8bb 2000 	ldrh.w	r2, [fp]
90019a4e:	2a00      	cmp	r2, #0
90019a50:	d1d6      	bne.n	90019a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90019a52:	f8bb 2000 	ldrh.w	r2, [fp]
90019a56:	2a00      	cmp	r2, #0
90019a58:	d0bb      	beq.n	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019a5a:	459a      	cmp	sl, r3
90019a5c:	ddb9      	ble.n	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019a5e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
90019a62:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
90019a66:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
90019a6a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
90019a6e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
90019a72:	960e      	str	r6, [sp, #56]	@ 0x38
90019a74:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
90019a78:	960f      	str	r6, [sp, #60]	@ 0x3c
90019a7a:	f1bb 0f00 	cmp.w	fp, #0
90019a7e:	d002      	beq.n	90019a86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90019a80:	f10b 0302 	add.w	r3, fp, #2
90019a84:	9309      	str	r3, [sp, #36]	@ 0x24
90019a86:	b10d      	cbz	r5, 90019a8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90019a88:	1c6b      	adds	r3, r5, #1
90019a8a:	9308      	str	r3, [sp, #32]
90019a8c:	ab0f      	add	r3, sp, #60	@ 0x3c
90019a8e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
90019a92:	a908      	add	r1, sp, #32
90019a94:	a809      	add	r0, sp, #36	@ 0x24
90019a96:	9305      	str	r3, [sp, #20]
90019a98:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
90019a9c:	9304      	str	r3, [sp, #16]
90019a9e:	ab0e      	add	r3, sp, #56	@ 0x38
90019aa0:	9303      	str	r3, [sp, #12]
90019aa2:	ab0c      	add	r3, sp, #48	@ 0x30
90019aa4:	9302      	str	r3, [sp, #8]
90019aa6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
90019aaa:	9301      	str	r3, [sp, #4]
90019aac:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
90019ab0:	9300      	str	r3, [sp, #0]
90019ab2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
90019ab6:	f7ff fea8 	bl	9001980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90019aba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019abc:	2b00      	cmp	r3, #0
90019abe:	bfbf      	itttt	lt
90019ac0:	6823      	ldrlt	r3, [r4, #0]
90019ac2:	3404      	addlt	r4, #4
90019ac4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019ac8:	930e      	strlt	r3, [sp, #56]	@ 0x38
90019aca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90019acc:	2b00      	cmp	r3, #0
90019ace:	bfbe      	ittt	lt
90019ad0:	6823      	ldrlt	r3, [r4, #0]
90019ad2:	3404      	addlt	r4, #4
90019ad4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019ad8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90019adc:	bfb8      	it	lt
90019ade:	930f      	strlt	r3, [sp, #60]	@ 0x3c
90019ae0:	b1d9      	cbz	r1, 90019b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90019ae2:	880b      	ldrh	r3, [r1, #0]
90019ae4:	2b69      	cmp	r3, #105	@ 0x69
90019ae6:	d01f      	beq.n	90019b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019ae8:	d82f      	bhi.n	90019b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90019aea:	2b58      	cmp	r3, #88	@ 0x58
90019aec:	d01c      	beq.n	90019b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019aee:	d818      	bhi.n	90019b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90019af0:	2b25      	cmp	r3, #37	@ 0x25
90019af2:	d034      	beq.n	90019b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90019af4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019af6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90019afa:	f1bb 0f00 	cmp.w	fp, #0
90019afe:	f000 80b7 	beq.w	90019c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90019b02:	f8bb 5000 	ldrh.w	r5, [fp]
90019b06:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019b0a:	3301      	adds	r3, #1
90019b0c:	930d      	str	r3, [sp, #52]	@ 0x34
90019b0e:	e029      	b.n	90019b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019b10:	b10d      	cbz	r5, 90019b16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90019b12:	782a      	ldrb	r2, [r5, #0]
90019b14:	e786      	b.n	90019a24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019b16:	462a      	mov	r2, r5
90019b18:	e784      	b.n	90019a24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019b1a:	2a00      	cmp	r2, #0
90019b1c:	d0ea      	beq.n	90019af4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019b1e:	7813      	ldrb	r3, [r2, #0]
90019b20:	e7e0      	b.n	90019ae4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90019b22:	3b63      	subs	r3, #99	@ 0x63
90019b24:	2b01      	cmp	r3, #1
90019b26:	d8e5      	bhi.n	90019af4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019b28:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
90019b2c:	b329      	cbz	r1, 90019b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90019b2e:	880b      	ldrh	r3, [r1, #0]
90019b30:	2b69      	cmp	r3, #105	@ 0x69
90019b32:	d063      	beq.n	90019bfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019b34:	d825      	bhi.n	90019b82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90019b36:	2b63      	cmp	r3, #99	@ 0x63
90019b38:	d038      	beq.n	90019bac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90019b3a:	2b64      	cmp	r3, #100	@ 0x64
90019b3c:	d05e      	beq.n	90019bfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019b3e:	2b58      	cmp	r3, #88	@ 0x58
90019b40:	d07a      	beq.n	90019c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90019b42:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
90019b46:	4625      	mov	r5, r4
90019b48:	e036      	b.n	90019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019b4a:	2b73      	cmp	r3, #115	@ 0x73
90019b4c:	d0ec      	beq.n	90019b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019b4e:	d802      	bhi.n	90019b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90019b50:	2b6f      	cmp	r3, #111	@ 0x6f
90019b52:	d1cf      	bne.n	90019af4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019b54:	e7e8      	b.n	90019b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019b56:	2b75      	cmp	r3, #117	@ 0x75
90019b58:	d0e6      	beq.n	90019b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019b5a:	2b78      	cmp	r3, #120	@ 0x78
90019b5c:	e7f9      	b.n	90019b52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90019b5e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019b60:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90019b64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019b66:	b10b      	cbz	r3, 90019b6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90019b68:	3302      	adds	r3, #2
90019b6a:	9309      	str	r3, [sp, #36]	@ 0x24
90019b6c:	9b08      	ldr	r3, [sp, #32]
90019b6e:	2b00      	cmp	r3, #0
90019b70:	f43f af2f 	beq.w	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019b74:	3301      	adds	r3, #1
90019b76:	9308      	str	r3, [sp, #32]
90019b78:	e72b      	b.n	900199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019b7a:	2a00      	cmp	r2, #0
90019b7c:	d0e1      	beq.n	90019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019b7e:	7813      	ldrb	r3, [r2, #0]
90019b80:	e7d6      	b.n	90019b30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90019b82:	2b73      	cmp	r3, #115	@ 0x73
90019b84:	d036      	beq.n	90019bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90019b86:	d807      	bhi.n	90019b98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019b88:	2b6f      	cmp	r3, #111	@ 0x6f
90019b8a:	d1da      	bne.n	90019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019b8c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019b8e:	1d25      	adds	r5, r4, #4
90019b90:	2308      	movs	r3, #8
90019b92:	eba8 0202 	sub.w	r2, r8, r2
90019b96:	e049      	b.n	90019c2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019b98:	2b75      	cmp	r3, #117	@ 0x75
90019b9a:	d042      	beq.n	90019c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019b9c:	2b78      	cmp	r3, #120	@ 0x78
90019b9e:	d1d0      	bne.n	90019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019ba0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019ba2:	1d25      	adds	r5, r4, #4
90019ba4:	2310      	movs	r3, #16
90019ba6:	eba8 0202 	sub.w	r2, r8, r2
90019baa:	e03f      	b.n	90019c2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019bac:	6823      	ldr	r3, [r4, #0]
90019bae:	1d25      	adds	r5, r4, #4
90019bb0:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
90019bb4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
90019bb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019bba:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
90019bbe:	2b00      	cmp	r3, #0
90019bc0:	d051      	beq.n	90019c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90019bc2:	881a      	ldrh	r2, [r3, #0]
90019bc4:	a80d      	add	r0, sp, #52	@ 0x34
90019bc6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
90019bca:	462c      	mov	r4, r5
90019bcc:	9005      	str	r0, [sp, #20]
90019bce:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
90019bd2:	9004      	str	r0, [sp, #16]
90019bd4:	980e      	ldr	r0, [sp, #56]	@ 0x38
90019bd6:	9003      	str	r0, [sp, #12]
90019bd8:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
90019bdc:	9002      	str	r0, [sp, #8]
90019bde:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90019be0:	9001      	str	r0, [sp, #4]
90019be2:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
90019be6:	e9cd 8706 	strd	r8, r7, [sp, #24]
90019bea:	9000      	str	r0, [sp, #0]
90019bec:	a810      	add	r0, sp, #64	@ 0x40
90019bee:	f7ff fd49 	bl	90019684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90019bf2:	e7b7      	b.n	90019b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019bf4:	1d25      	adds	r5, r4, #4
90019bf6:	6823      	ldr	r3, [r4, #0]
90019bf8:	9310      	str	r3, [sp, #64]	@ 0x40
90019bfa:	e7dd      	b.n	90019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019bfc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019bfe:	230a      	movs	r3, #10
90019c00:	4649      	mov	r1, r9
90019c02:	6820      	ldr	r0, [r4, #0]
90019c04:	eba8 0202 	sub.w	r2, r8, r2
90019c08:	1d25      	adds	r5, r4, #4
90019c0a:	b292      	uxth	r2, r2
90019c0c:	f7ff fcf0 	bl	900195f0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019c10:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90019c14:	2b2d      	cmp	r3, #45	@ 0x2d
90019c16:	d1cf      	bne.n	90019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019c18:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90019c1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019c1e:	3302      	adds	r3, #2
90019c20:	e7ea      	b.n	90019bf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90019c22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019c24:	1d25      	adds	r5, r4, #4
90019c26:	230a      	movs	r3, #10
90019c28:	eba8 0202 	sub.w	r2, r8, r2
90019c2c:	b292      	uxth	r2, r2
90019c2e:	4649      	mov	r1, r9
90019c30:	6820      	ldr	r0, [r4, #0]
90019c32:	f7ff fd09 	bl	90019648 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019c36:	e7bf      	b.n	90019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019c38:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019c3a:	2310      	movs	r3, #16
90019c3c:	4649      	mov	r1, r9
90019c3e:	6820      	ldr	r0, [r4, #0]
90019c40:	eba8 0202 	sub.w	r2, r8, r2
90019c44:	1d25      	adds	r5, r4, #4
90019c46:	b292      	uxth	r2, r2
90019c48:	f7ff fcfe 	bl	90019648 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019c4c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
90019c50:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90019c54:	2b00      	cmp	r3, #0
90019c56:	d0af      	beq.n	90019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019c58:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
90019c5c:	2919      	cmp	r1, #25
90019c5e:	d8f7      	bhi.n	90019c50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019c60:	3b20      	subs	r3, #32
90019c62:	8013      	strh	r3, [r2, #0]
90019c64:	e7f4      	b.n	90019c50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019c66:	9a08      	ldr	r2, [sp, #32]
90019c68:	2a00      	cmp	r2, #0
90019c6a:	d0ab      	beq.n	90019bc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019c6c:	7812      	ldrb	r2, [r2, #0]
90019c6e:	e7a9      	b.n	90019bc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019c70:	2d00      	cmp	r5, #0
90019c72:	f43f af48 	beq.w	90019b06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90019c76:	782d      	ldrb	r5, [r5, #0]
90019c78:	e745      	b.n	90019b06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019c7a:	b507      	push	{r0, r1, r2, lr}
90019c7c:	9300      	str	r3, [sp, #0]
90019c7e:	4613      	mov	r3, r2
90019c80:	2200      	movs	r2, #0
90019c82:	f7ff fe92 	bl	900199aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90019c86:	b003      	add	sp, #12
90019c88:	f85d fb04 	ldr.w	pc, [sp], #4

90019c8c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019c8c:	b40c      	push	{r2, r3}
90019c8e:	b507      	push	{r0, r1, r2, lr}
90019c90:	ab04      	add	r3, sp, #16
90019c92:	f853 2b04 	ldr.w	r2, [r3], #4
90019c96:	9301      	str	r3, [sp, #4]
90019c98:	f7ff ffef 	bl	90019c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019c9c:	b003      	add	sp, #12
90019c9e:	f85d eb04 	ldr.w	lr, [sp], #4
90019ca2:	b002      	add	sp, #8
90019ca4:	4770      	bx	lr
	...

90019ca8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90019ca8:	4b01      	ldr	r3, [pc, #4]	@ (90019cb0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90019caa:	6018      	str	r0, [r3, #0]
90019cac:	4770      	bx	lr
90019cae:	bf00      	nop
90019cb0:	240219f4 	.word	0x240219f4

90019cb4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90019cb4:	4b06      	ldr	r3, [pc, #24]	@ (90019cd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90019cb6:	881a      	ldrh	r2, [r3, #0]
90019cb8:	4282      	cmp	r2, r0
90019cba:	d807      	bhi.n	90019ccc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90019cbc:	4b05      	ldr	r3, [pc, #20]	@ (90019cd4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90019cbe:	881b      	ldrh	r3, [r3, #0]
90019cc0:	4413      	add	r3, r2
90019cc2:	4298      	cmp	r0, r3
90019cc4:	bfac      	ite	ge
90019cc6:	2000      	movge	r0, #0
90019cc8:	2001      	movlt	r0, #1
90019cca:	4770      	bx	lr
90019ccc:	2000      	movs	r0, #0
90019cce:	4770      	bx	lr
90019cd0:	24021a14 	.word	0x24021a14
90019cd4:	24021a18 	.word	0x24021a18

90019cd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90019cd8:	b508      	push	{r3, lr}
90019cda:	4601      	mov	r1, r0
90019cdc:	f7ff ffea 	bl	90019cb4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90019ce0:	b118      	cbz	r0, 90019cea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90019ce2:	4b02      	ldr	r3, [pc, #8]	@ (90019cec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90019ce4:	681b      	ldr	r3, [r3, #0]
90019ce6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90019cea:	bd08      	pop	{r3, pc}
90019cec:	240219f8 	.word	0x240219f8

90019cf0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90019cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
90019cf2:	4c24      	ldr	r4, [pc, #144]	@ (90019d84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90019cf4:	6823      	ldr	r3, [r4, #0]
90019cf6:	2b00      	cmp	r3, #0
90019cf8:	d042      	beq.n	90019d80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019cfa:	4a23      	ldr	r2, [pc, #140]	@ (90019d88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90019cfc:	4d23      	ldr	r5, [pc, #140]	@ (90019d8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90019cfe:	8811      	ldrh	r1, [r2, #0]
90019d00:	f8b5 c000 	ldrh.w	ip, [r5]
90019d04:	4822      	ldr	r0, [pc, #136]	@ (90019d90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90019d06:	4461      	add	r1, ip
90019d08:	1c4a      	adds	r2, r1, #1
90019d0a:	008f      	lsls	r7, r1, #2
90019d0c:	f022 0201 	bic.w	r2, r2, #1
90019d10:	19de      	adds	r6, r3, r7
90019d12:	0412      	lsls	r2, r2, #16
90019d14:	6006      	str	r6, [r0, #0]
90019d16:	4e1f      	ldr	r6, [pc, #124]	@ (90019d94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90019d18:	0c12      	lsrs	r2, r2, #16
90019d1a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90019d1e:	19da      	adds	r2, r3, r7
90019d20:	6032      	str	r2, [r6, #0]
90019d22:	220e      	movs	r2, #14
90019d24:	fb02 f20c 	mul.w	r2, r2, ip
90019d28:	3203      	adds	r2, #3
90019d2a:	f022 0203 	bic.w	r2, r2, #3
90019d2e:	443a      	add	r2, r7
90019d30:	4f19      	ldr	r7, [pc, #100]	@ (90019d98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90019d32:	4413      	add	r3, r2
90019d34:	603b      	str	r3, [r7, #0]
90019d36:	2300      	movs	r3, #0
90019d38:	4f18      	ldr	r7, [pc, #96]	@ (90019d9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90019d3a:	469c      	mov	ip, r3
90019d3c:	803b      	strh	r3, [r7, #0]
90019d3e:	4f18      	ldr	r7, [pc, #96]	@ (90019da0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90019d40:	683f      	ldr	r7, [r7, #0]
90019d42:	1aba      	subs	r2, r7, r2
90019d44:	4f17      	ldr	r7, [pc, #92]	@ (90019da4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90019d46:	603a      	str	r2, [r7, #0]
90019d48:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90019d4c:	4a16      	ldr	r2, [pc, #88]	@ (90019da8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90019d4e:	8013      	strh	r3, [r2, #0]
90019d50:	428b      	cmp	r3, r1
90019d52:	d10d      	bne.n	90019d70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90019d54:	882d      	ldrh	r5, [r5, #0]
90019d56:	2300      	movs	r3, #0
90019d58:	6830      	ldr	r0, [r6, #0]
90019d5a:	240e      	movs	r4, #14
90019d5c:	429d      	cmp	r5, r3
90019d5e:	d90f      	bls.n	90019d80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019d60:	fb04 0203 	mla	r2, r4, r3, r0
90019d64:	3301      	adds	r3, #1
90019d66:	7b11      	ldrb	r1, [r2, #12]
90019d68:	f36f 1145 	bfc	r1, #5, #1
90019d6c:	7311      	strb	r1, [r2, #12]
90019d6e:	e7f5      	b.n	90019d5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90019d70:	6822      	ldr	r2, [r4, #0]
90019d72:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90019d76:	6802      	ldr	r2, [r0, #0]
90019d78:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90019d7c:	3301      	adds	r3, #1
90019d7e:	e7e7      	b.n	90019d50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90019d80:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019d82:	bf00      	nop
90019d84:	240219f8 	.word	0x240219f8
90019d88:	24021a14 	.word	0x24021a14
90019d8c:	24021a18 	.word	0x24021a18
90019d90:	24021a0c 	.word	0x24021a0c
90019d94:	240219fc 	.word	0x240219fc
90019d98:	24021a04 	.word	0x24021a04
90019d9c:	24021a16 	.word	0x24021a16
90019da0:	24021a00 	.word	0x24021a00
90019da4:	24021a10 	.word	0x24021a10
90019da8:	24021a08 	.word	0x24021a08

90019dac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90019dac:	4b06      	ldr	r3, [pc, #24]	@ (90019dc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90019dae:	681b      	ldr	r3, [r3, #0]
90019db0:	b943      	cbnz	r3, 90019dc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019db2:	b139      	cbz	r1, 90019dc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019db4:	4b05      	ldr	r3, [pc, #20]	@ (90019dcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90019db6:	801a      	strh	r2, [r3, #0]
90019db8:	4b05      	ldr	r3, [pc, #20]	@ (90019dd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90019dba:	6019      	str	r1, [r3, #0]
90019dbc:	4b05      	ldr	r3, [pc, #20]	@ (90019dd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90019dbe:	6018      	str	r0, [r3, #0]
90019dc0:	f7ff bf96 	b.w	90019cf0 <_ZN8touchgfx6Bitmap10clearCacheEv>
90019dc4:	4770      	bx	lr
90019dc6:	bf00      	nop
90019dc8:	24021a04 	.word	0x24021a04
90019dcc:	24021a18 	.word	0x24021a18
90019dd0:	24021a00 	.word	0x24021a00
90019dd4:	240219f8 	.word	0x240219f8

90019dd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90019dd8:	b470      	push	{r4, r5, r6}
90019dda:	4c07      	ldr	r4, [pc, #28]	@ (90019df8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90019ddc:	4605      	mov	r5, r0
90019dde:	4610      	mov	r0, r2
90019de0:	9a03      	ldr	r2, [sp, #12]
90019de2:	6826      	ldr	r6, [r4, #0]
90019de4:	b936      	cbnz	r6, 90019df4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90019de6:	6025      	str	r5, [r4, #0]
90019de8:	4c04      	ldr	r4, [pc, #16]	@ (90019dfc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90019dea:	8021      	strh	r1, [r4, #0]
90019dec:	4619      	mov	r1, r3
90019dee:	bc70      	pop	{r4, r5, r6}
90019df0:	f7ff bfdc 	b.w	90019dac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90019df4:	bc70      	pop	{r4, r5, r6}
90019df6:	4770      	bx	lr
90019df8:	24021a1c 	.word	0x24021a1c
90019dfc:	24021a14 	.word	0x24021a14

90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90019e00:	4a12      	ldr	r2, [pc, #72]	@ (90019e4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90019e02:	8803      	ldrh	r3, [r0, #0]
90019e04:	8812      	ldrh	r2, [r2, #0]
90019e06:	4293      	cmp	r3, r2
90019e08:	d207      	bcs.n	90019e1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90019e0a:	4a11      	ldr	r2, [pc, #68]	@ (90019e50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90019e0c:	2114      	movs	r1, #20
90019e0e:	6812      	ldr	r2, [r2, #0]
90019e10:	fb01 2303 	mla	r3, r1, r3, r2
90019e14:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90019e18:	4770      	bx	lr
90019e1a:	490e      	ldr	r1, [pc, #56]	@ (90019e54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90019e1c:	8809      	ldrh	r1, [r1, #0]
90019e1e:	4411      	add	r1, r2
90019e20:	428b      	cmp	r3, r1
90019e22:	da04      	bge.n	90019e2e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90019e24:	1a9b      	subs	r3, r3, r2
90019e26:	4a0c      	ldr	r2, [pc, #48]	@ (90019e58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90019e28:	210e      	movs	r1, #14
90019e2a:	6812      	ldr	r2, [r2, #0]
90019e2c:	e7f0      	b.n	90019e10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90019e2e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019e32:	4293      	cmp	r3, r2
90019e34:	d108      	bne.n	90019e48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90019e36:	4b09      	ldr	r3, [pc, #36]	@ (90019e5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90019e38:	781b      	ldrb	r3, [r3, #0]
90019e3a:	b91b      	cbnz	r3, 90019e44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90019e3c:	4b08      	ldr	r3, [pc, #32]	@ (90019e60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90019e3e:	f9b3 0000 	ldrsh.w	r0, [r3]
90019e42:	4770      	bx	lr
90019e44:	4b07      	ldr	r3, [pc, #28]	@ (90019e64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90019e46:	e7fa      	b.n	90019e3e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90019e48:	2000      	movs	r0, #0
90019e4a:	4770      	bx	lr
90019e4c:	24021a14 	.word	0x24021a14
90019e50:	24021a1c 	.word	0x24021a1c
90019e54:	24021a18 	.word	0x24021a18
90019e58:	240219fc 	.word	0x240219fc
90019e5c:	24021984 	.word	0x24021984
90019e60:	24021986 	.word	0x24021986
90019e64:	24021988 	.word	0x24021988

90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90019e68:	4a12      	ldr	r2, [pc, #72]	@ (90019eb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90019e6a:	8803      	ldrh	r3, [r0, #0]
90019e6c:	8812      	ldrh	r2, [r2, #0]
90019e6e:	4293      	cmp	r3, r2
90019e70:	d207      	bcs.n	90019e82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90019e72:	4a11      	ldr	r2, [pc, #68]	@ (90019eb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90019e74:	2114      	movs	r1, #20
90019e76:	6812      	ldr	r2, [r2, #0]
90019e78:	fb01 2303 	mla	r3, r1, r3, r2
90019e7c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019e80:	4770      	bx	lr
90019e82:	490e      	ldr	r1, [pc, #56]	@ (90019ebc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90019e84:	8809      	ldrh	r1, [r1, #0]
90019e86:	4411      	add	r1, r2
90019e88:	428b      	cmp	r3, r1
90019e8a:	da04      	bge.n	90019e96 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019e8c:	1a9b      	subs	r3, r3, r2
90019e8e:	4a0c      	ldr	r2, [pc, #48]	@ (90019ec0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019e90:	210e      	movs	r1, #14
90019e92:	6812      	ldr	r2, [r2, #0]
90019e94:	e7f0      	b.n	90019e78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90019e96:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019e9a:	4293      	cmp	r3, r2
90019e9c:	d108      	bne.n	90019eb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019e9e:	4b09      	ldr	r3, [pc, #36]	@ (90019ec4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019ea0:	781b      	ldrb	r3, [r3, #0]
90019ea2:	b91b      	cbnz	r3, 90019eac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90019ea4:	4b08      	ldr	r3, [pc, #32]	@ (90019ec8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90019ea6:	f9b3 0000 	ldrsh.w	r0, [r3]
90019eaa:	4770      	bx	lr
90019eac:	4b07      	ldr	r3, [pc, #28]	@ (90019ecc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90019eae:	e7fa      	b.n	90019ea6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90019eb0:	2000      	movs	r0, #0
90019eb2:	4770      	bx	lr
90019eb4:	24021a14 	.word	0x24021a14
90019eb8:	24021a1c 	.word	0x24021a1c
90019ebc:	24021a18 	.word	0x24021a18
90019ec0:	240219fc 	.word	0x240219fc
90019ec4:	24021984 	.word	0x24021984
90019ec8:	24021988 	.word	0x24021988
90019ecc:	24021986 	.word	0x24021986

90019ed0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90019ed0:	4a22      	ldr	r2, [pc, #136]	@ (90019f5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90019ed2:	b530      	push	{r4, r5, lr}
90019ed4:	880b      	ldrh	r3, [r1, #0]
90019ed6:	8812      	ldrh	r2, [r2, #0]
90019ed8:	4293      	cmp	r3, r2
90019eda:	d213      	bcs.n	90019f04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90019edc:	4a20      	ldr	r2, [pc, #128]	@ (90019f60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90019ede:	2114      	movs	r1, #20
90019ee0:	6812      	ldr	r2, [r2, #0]
90019ee2:	fb01 2303 	mla	r3, r1, r3, r2
90019ee6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90019eea:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90019eee:	8a1a      	ldrh	r2, [r3, #16]
90019ef0:	8a5b      	ldrh	r3, [r3, #18]
90019ef2:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019ef6:	8004      	strh	r4, [r0, #0]
90019ef8:	f3c3 030c 	ubfx	r3, r3, #0, #13
90019efc:	8041      	strh	r1, [r0, #2]
90019efe:	8082      	strh	r2, [r0, #4]
90019f00:	80c3      	strh	r3, [r0, #6]
90019f02:	e024      	b.n	90019f4e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
90019f04:	4917      	ldr	r1, [pc, #92]	@ (90019f64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
90019f06:	8809      	ldrh	r1, [r1, #0]
90019f08:	4411      	add	r1, r2
90019f0a:	428b      	cmp	r3, r1
90019f0c:	da10      	bge.n	90019f30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
90019f0e:	1a9b      	subs	r3, r3, r2
90019f10:	220e      	movs	r2, #14
90019f12:	4353      	muls	r3, r2
90019f14:	4a14      	ldr	r2, [pc, #80]	@ (90019f68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
90019f16:	6811      	ldr	r1, [r2, #0]
90019f18:	18ca      	adds	r2, r1, r3
90019f1a:	5ecd      	ldrsh	r5, [r1, r3]
90019f1c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
90019f20:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90019f24:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
90019f28:	8005      	strh	r5, [r0, #0]
90019f2a:	8044      	strh	r4, [r0, #2]
90019f2c:	8081      	strh	r1, [r0, #4]
90019f2e:	e7e7      	b.n	90019f00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019f30:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019f34:	4293      	cmp	r3, r2
90019f36:	d10b      	bne.n	90019f50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
90019f38:	4b0c      	ldr	r3, [pc, #48]	@ (90019f6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
90019f3a:	f9b3 1000 	ldrsh.w	r1, [r3]
90019f3e:	4b0c      	ldr	r3, [pc, #48]	@ (90019f70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
90019f40:	8081      	strh	r1, [r0, #4]
90019f42:	f9b3 2000 	ldrsh.w	r2, [r3]
90019f46:	2300      	movs	r3, #0
90019f48:	80c2      	strh	r2, [r0, #6]
90019f4a:	8003      	strh	r3, [r0, #0]
90019f4c:	8043      	strh	r3, [r0, #2]
90019f4e:	bd30      	pop	{r4, r5, pc}
90019f50:	2300      	movs	r3, #0
90019f52:	8003      	strh	r3, [r0, #0]
90019f54:	8043      	strh	r3, [r0, #2]
90019f56:	8083      	strh	r3, [r0, #4]
90019f58:	e7d2      	b.n	90019f00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019f5a:	bf00      	nop
90019f5c:	24021a14 	.word	0x24021a14
90019f60:	24021a1c 	.word	0x24021a1c
90019f64:	24021a18 	.word	0x24021a18
90019f68:	240219fc 	.word	0x240219fc
90019f6c:	24021980 	.word	0x24021980
90019f70:	24021982 	.word	0x24021982

90019f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90019f74:	4a17      	ldr	r2, [pc, #92]	@ (90019fd4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90019f76:	8803      	ldrh	r3, [r0, #0]
90019f78:	8812      	ldrh	r2, [r2, #0]
90019f7a:	4293      	cmp	r3, r2
90019f7c:	d213      	bcs.n	90019fa6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
90019f7e:	4a16      	ldr	r2, [pc, #88]	@ (90019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90019f80:	2114      	movs	r1, #20
90019f82:	6812      	ldr	r2, [r2, #0]
90019f84:	fb01 2303 	mla	r3, r1, r3, r2
90019f88:	8a1a      	ldrh	r2, [r3, #16]
90019f8a:	8919      	ldrh	r1, [r3, #8]
90019f8c:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019f90:	428a      	cmp	r2, r1
90019f92:	db1d      	blt.n	90019fd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019f94:	8a58      	ldrh	r0, [r3, #18]
90019f96:	f3c0 000c 	ubfx	r0, r0, #0, #13
90019f9a:	895b      	ldrh	r3, [r3, #10]
90019f9c:	4298      	cmp	r0, r3
90019f9e:	bfac      	ite	ge
90019fa0:	2000      	movge	r0, #0
90019fa2:	2001      	movlt	r0, #1
90019fa4:	4770      	bx	lr
90019fa6:	490d      	ldr	r1, [pc, #52]	@ (90019fdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90019fa8:	8809      	ldrh	r1, [r1, #0]
90019faa:	4411      	add	r1, r2
90019fac:	428b      	cmp	r3, r1
90019fae:	da0d      	bge.n	90019fcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90019fb0:	1a9b      	subs	r3, r3, r2
90019fb2:	4a0b      	ldr	r2, [pc, #44]	@ (90019fe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90019fb4:	210e      	movs	r1, #14
90019fb6:	6812      	ldr	r2, [r2, #0]
90019fb8:	fb01 2303 	mla	r3, r1, r3, r2
90019fbc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90019fc0:	891a      	ldrh	r2, [r3, #8]
90019fc2:	4291      	cmp	r1, r2
90019fc4:	db04      	blt.n	90019fd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019fc6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90019fca:	e7e6      	b.n	90019f9a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90019fcc:	2000      	movs	r0, #0
90019fce:	4770      	bx	lr
90019fd0:	2001      	movs	r0, #1
90019fd2:	4770      	bx	lr
90019fd4:	24021a14 	.word	0x24021a14
90019fd8:	24021a1c 	.word	0x24021a1c
90019fdc:	24021a18 	.word	0x24021a18
90019fe0:	240219fc 	.word	0x240219fc

90019fe4 <_ZNK8touchgfx6Bitmap7getDataEv>:
90019fe4:	4a12      	ldr	r2, [pc, #72]	@ (9001a030 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90019fe6:	8803      	ldrh	r3, [r0, #0]
90019fe8:	8811      	ldrh	r1, [r2, #0]
90019fea:	428b      	cmp	r3, r1
90019fec:	d20b      	bcs.n	9001a006 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
90019fee:	4a11      	ldr	r2, [pc, #68]	@ (9001a034 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019ff0:	6812      	ldr	r2, [r2, #0]
90019ff2:	b112      	cbz	r2, 90019ffa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90019ff4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019ff8:	b9c0      	cbnz	r0, 9001a02c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90019ffa:	4a0f      	ldr	r2, [pc, #60]	@ (9001a038 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90019ffc:	6811      	ldr	r1, [r2, #0]
90019ffe:	2214      	movs	r2, #20
9001a000:	4353      	muls	r3, r2
9001a002:	58c8      	ldr	r0, [r1, r3]
9001a004:	4770      	bx	lr
9001a006:	4a0d      	ldr	r2, [pc, #52]	@ (9001a03c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001a008:	8812      	ldrh	r2, [r2, #0]
9001a00a:	440a      	add	r2, r1
9001a00c:	4293      	cmp	r3, r2
9001a00e:	da04      	bge.n	9001a01a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001a010:	4a08      	ldr	r2, [pc, #32]	@ (9001a034 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a012:	6812      	ldr	r2, [r2, #0]
9001a014:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a018:	4770      	bx	lr
9001a01a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a01e:	4293      	cmp	r3, r2
9001a020:	d103      	bne.n	9001a02a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001a022:	4b07      	ldr	r3, [pc, #28]	@ (9001a040 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001a024:	681b      	ldr	r3, [r3, #0]
9001a026:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001a028:	4770      	bx	lr
9001a02a:	2000      	movs	r0, #0
9001a02c:	4770      	bx	lr
9001a02e:	bf00      	nop
9001a030:	24021a14 	.word	0x24021a14
9001a034:	240219f8 	.word	0x240219f8
9001a038:	24021a1c 	.word	0x24021a1c
9001a03c:	24021a18 	.word	0x24021a18
9001a040:	2402198c 	.word	0x2402198c

9001a044 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001a044:	4b24      	ldr	r3, [pc, #144]	@ (9001a0d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001a046:	8802      	ldrh	r2, [r0, #0]
9001a048:	8818      	ldrh	r0, [r3, #0]
9001a04a:	4282      	cmp	r2, r0
9001a04c:	d221      	bcs.n	9001a092 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001a04e:	4b23      	ldr	r3, [pc, #140]	@ (9001a0dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001a050:	6819      	ldr	r1, [r3, #0]
9001a052:	2314      	movs	r3, #20
9001a054:	fb03 1302 	mla	r3, r3, r2, r1
9001a058:	6858      	ldr	r0, [r3, #4]
9001a05a:	2800      	cmp	r0, #0
9001a05c:	d03a      	beq.n	9001a0d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a05e:	4920      	ldr	r1, [pc, #128]	@ (9001a0e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a060:	6809      	ldr	r1, [r1, #0]
9001a062:	2900      	cmp	r1, #0
9001a064:	d036      	beq.n	9001a0d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a066:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001a06a:	2900      	cmp	r1, #0
9001a06c:	d032      	beq.n	9001a0d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a06e:	891a      	ldrh	r2, [r3, #8]
9001a070:	8958      	ldrh	r0, [r3, #10]
9001a072:	4350      	muls	r0, r2
9001a074:	7c5a      	ldrb	r2, [r3, #17]
9001a076:	7cdb      	ldrb	r3, [r3, #19]
9001a078:	0952      	lsrs	r2, r2, #5
9001a07a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a07e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001a082:	2b0b      	cmp	r3, #11
9001a084:	bf18      	it	ne
9001a086:	0040      	lslne	r0, r0, #1
9001a088:	3003      	adds	r0, #3
9001a08a:	f020 0003 	bic.w	r0, r0, #3
9001a08e:	4408      	add	r0, r1
9001a090:	4770      	bx	lr
9001a092:	4b14      	ldr	r3, [pc, #80]	@ (9001a0e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001a094:	881b      	ldrh	r3, [r3, #0]
9001a096:	4403      	add	r3, r0
9001a098:	429a      	cmp	r2, r3
9001a09a:	da1a      	bge.n	9001a0d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a09c:	4b12      	ldr	r3, [pc, #72]	@ (9001a0e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001a09e:	1a10      	subs	r0, r2, r0
9001a0a0:	210e      	movs	r1, #14
9001a0a2:	681b      	ldr	r3, [r3, #0]
9001a0a4:	fb01 3000 	mla	r0, r1, r0, r3
9001a0a8:	7b03      	ldrb	r3, [r0, #12]
9001a0aa:	f003 031f 	and.w	r3, r3, #31
9001a0ae:	2b0b      	cmp	r3, #11
9001a0b0:	d10b      	bne.n	9001a0ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001a0b2:	8903      	ldrh	r3, [r0, #8]
9001a0b4:	8940      	ldrh	r0, [r0, #10]
9001a0b6:	4358      	muls	r0, r3
9001a0b8:	4b09      	ldr	r3, [pc, #36]	@ (9001a0e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a0ba:	3003      	adds	r0, #3
9001a0bc:	6819      	ldr	r1, [r3, #0]
9001a0be:	f020 0303 	bic.w	r3, r0, #3
9001a0c2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001a0c6:	4418      	add	r0, r3
9001a0c8:	4770      	bx	lr
9001a0ca:	2b0d      	cmp	r3, #13
9001a0cc:	d101      	bne.n	9001a0d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a0ce:	300d      	adds	r0, #13
9001a0d0:	4770      	bx	lr
9001a0d2:	2000      	movs	r0, #0
9001a0d4:	4770      	bx	lr
9001a0d6:	bf00      	nop
9001a0d8:	24021a14 	.word	0x24021a14
9001a0dc:	24021a1c 	.word	0x24021a1c
9001a0e0:	240219f8 	.word	0x240219f8
9001a0e4:	24021a18 	.word	0x24021a18
9001a0e8:	240219fc 	.word	0x240219fc

9001a0ec <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001a0ec:	4b1f      	ldr	r3, [pc, #124]	@ (9001a16c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001a0ee:	b510      	push	{r4, lr}
9001a0f0:	8802      	ldrh	r2, [r0, #0]
9001a0f2:	881b      	ldrh	r3, [r3, #0]
9001a0f4:	429a      	cmp	r2, r3
9001a0f6:	d21a      	bcs.n	9001a12e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001a0f8:	4b1d      	ldr	r3, [pc, #116]	@ (9001a170 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001a0fa:	2114      	movs	r1, #20
9001a0fc:	681b      	ldr	r3, [r3, #0]
9001a0fe:	fb01 3102 	mla	r1, r1, r2, r3
9001a102:	7c4b      	ldrb	r3, [r1, #17]
9001a104:	0958      	lsrs	r0, r3, #5
9001a106:	7ccb      	ldrb	r3, [r1, #19]
9001a108:	491a      	ldr	r1, [pc, #104]	@ (9001a174 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001a10a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a10e:	6809      	ldr	r1, [r1, #0]
9001a110:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001a114:	b2d8      	uxtb	r0, r3
9001a116:	b149      	cbz	r1, 9001a12c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a118:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001a11c:	b132      	cbz	r2, 9001a12c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a11e:	2b0e      	cmp	r3, #14
9001a120:	d021      	beq.n	9001a166 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a122:	280f      	cmp	r0, #15
9001a124:	d01d      	beq.n	9001a162 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001a126:	2810      	cmp	r0, #16
9001a128:	bf08      	it	eq
9001a12a:	2002      	moveq	r0, #2
9001a12c:	bd10      	pop	{r4, pc}
9001a12e:	4912      	ldr	r1, [pc, #72]	@ (9001a178 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001a130:	8809      	ldrh	r1, [r1, #0]
9001a132:	4419      	add	r1, r3
9001a134:	428a      	cmp	r2, r1
9001a136:	da09      	bge.n	9001a14c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001a138:	1ad3      	subs	r3, r2, r3
9001a13a:	4a10      	ldr	r2, [pc, #64]	@ (9001a17c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001a13c:	210e      	movs	r1, #14
9001a13e:	6812      	ldr	r2, [r2, #0]
9001a140:	fb01 2303 	mla	r3, r1, r3, r2
9001a144:	7b18      	ldrb	r0, [r3, #12]
9001a146:	f000 001f 	and.w	r0, r0, #31
9001a14a:	e7ef      	b.n	9001a12c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a14c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001a150:	429a      	cmp	r2, r3
9001a152:	d108      	bne.n	9001a166 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a154:	f7f6 fb82 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
9001a158:	6803      	ldr	r3, [r0, #0]
9001a15a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a15e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a160:	4718      	bx	r3
9001a162:	2001      	movs	r0, #1
9001a164:	e7e2      	b.n	9001a12c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a166:	2000      	movs	r0, #0
9001a168:	e7e0      	b.n	9001a12c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a16a:	bf00      	nop
9001a16c:	24021a14 	.word	0x24021a14
9001a170:	24021a1c 	.word	0x24021a1c
9001a174:	240219f8 	.word	0x240219f8
9001a178:	24021a18 	.word	0x24021a18
9001a17c:	240219fc 	.word	0x240219fc

9001a180 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001a180:	2010      	movs	r0, #16
9001a182:	4770      	bx	lr

9001a184 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001a184:	4b02      	ldr	r3, [pc, #8]	@ (9001a190 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001a186:	8818      	ldrh	r0, [r3, #0]
9001a188:	0040      	lsls	r0, r0, #1
9001a18a:	b280      	uxth	r0, r0
9001a18c:	4770      	bx	lr
9001a18e:	bf00      	nop
9001a190:	24021986 	.word	0x24021986

9001a194 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001a194:	2bff      	cmp	r3, #255	@ 0xff
9001a196:	d05e      	beq.n	9001a256 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001a198:	2a0b      	cmp	r2, #11
9001a19a:	d058      	beq.n	9001a24e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a19c:	d80e      	bhi.n	9001a1bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001a19e:	2a03      	cmp	r2, #3
9001a1a0:	d04d      	beq.n	9001a23e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001a1a2:	d804      	bhi.n	9001a1ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001a1a4:	2a01      	cmp	r2, #1
9001a1a6:	d04c      	beq.n	9001a242 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001a1a8:	d94d      	bls.n	9001a246 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001a1aa:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001a1ac:	e031      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1ae:	2a09      	cmp	r2, #9
9001a1b0:	d04d      	beq.n	9001a24e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a1b2:	d84a      	bhi.n	9001a24a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a1b4:	2a08      	cmp	r2, #8
9001a1b6:	d048      	beq.n	9001a24a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a1b8:	2300      	movs	r3, #0
9001a1ba:	e02a      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1bc:	2a2f      	cmp	r2, #47	@ 0x2f
9001a1be:	d02c      	beq.n	9001a21a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001a1c0:	d811      	bhi.n	9001a1e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001a1c2:	2a2d      	cmp	r2, #45	@ 0x2d
9001a1c4:	d018      	beq.n	9001a1f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001a1c6:	d831      	bhi.n	9001a22c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001a1c8:	2a2c      	cmp	r2, #44	@ 0x2c
9001a1ca:	d1f5      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1cc:	684a      	ldr	r2, [r1, #4]
9001a1ce:	7813      	ldrb	r3, [r2, #0]
9001a1d0:	7852      	ldrb	r2, [r2, #1]
9001a1d2:	2a00      	cmp	r2, #0
9001a1d4:	d1f0      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1d6:	2b01      	cmp	r3, #1
9001a1d8:	d01d      	beq.n	9001a216 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001a1da:	2b00      	cmp	r3, #0
9001a1dc:	d02d      	beq.n	9001a23a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001a1de:	2b02      	cmp	r3, #2
9001a1e0:	d1ea      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1e2:	68c3      	ldr	r3, [r0, #12]
9001a1e4:	e015      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1e6:	2a31      	cmp	r2, #49	@ 0x31
9001a1e8:	d004      	beq.n	9001a1f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001a1ea:	d332      	bcc.n	9001a252 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a1ec:	2a32      	cmp	r2, #50	@ 0x32
9001a1ee:	d030      	beq.n	9001a252 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a1f0:	2a33      	cmp	r2, #51	@ 0x33
9001a1f2:	d1e1      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1f4:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001a1f6:	e00c      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1f8:	684a      	ldr	r2, [r1, #4]
9001a1fa:	7813      	ldrb	r3, [r2, #0]
9001a1fc:	7852      	ldrb	r2, [r2, #1]
9001a1fe:	2a00      	cmp	r2, #0
9001a200:	d1da      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a202:	2b01      	cmp	r3, #1
9001a204:	d004      	beq.n	9001a210 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001a206:	d30f      	bcc.n	9001a228 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001a208:	2b02      	cmp	r3, #2
9001a20a:	d1d5      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a20c:	6943      	ldr	r3, [r0, #20]
9001a20e:	e000      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a210:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001a212:	4618      	mov	r0, r3
9001a214:	4770      	bx	lr
9001a216:	69c3      	ldr	r3, [r0, #28]
9001a218:	e7fb      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a21a:	684b      	ldr	r3, [r1, #4]
9001a21c:	781a      	ldrb	r2, [r3, #0]
9001a21e:	785b      	ldrb	r3, [r3, #1]
9001a220:	2b00      	cmp	r3, #0
9001a222:	d1c9      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a224:	2a00      	cmp	r2, #0
9001a226:	d1f4      	bne.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a228:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001a22a:	e7f2      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a22c:	684b      	ldr	r3, [r1, #4]
9001a22e:	781a      	ldrb	r2, [r3, #0]
9001a230:	785b      	ldrb	r3, [r3, #1]
9001a232:	2b00      	cmp	r3, #0
9001a234:	d1c0      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a236:	2a00      	cmp	r2, #0
9001a238:	d1eb      	bne.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a23a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001a23c:	e7e9      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a23e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001a240:	e7e7      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a242:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001a244:	e7e5      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a246:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001a248:	e7e3      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a24a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001a24c:	e7e1      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a24e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001a250:	e7df      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a252:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001a254:	e7dd      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a256:	2a0b      	cmp	r2, #11
9001a258:	d059      	beq.n	9001a30e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a25a:	d80e      	bhi.n	9001a27a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001a25c:	2a03      	cmp	r2, #3
9001a25e:	d050      	beq.n	9001a302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001a260:	d804      	bhi.n	9001a26c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001a262:	2a01      	cmp	r2, #1
9001a264:	d04f      	beq.n	9001a306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001a266:	d950      	bls.n	9001a30a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001a268:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001a26a:	e7d2      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a26c:	2a09      	cmp	r2, #9
9001a26e:	d04e      	beq.n	9001a30e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a270:	d801      	bhi.n	9001a276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001a272:	2a08      	cmp	r2, #8
9001a274:	d1a0      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a276:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001a278:	e7cb      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a27a:	2a2f      	cmp	r2, #47	@ 0x2f
9001a27c:	d02d      	beq.n	9001a2da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001a27e:	d811      	bhi.n	9001a2a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001a280:	2a2d      	cmp	r2, #45	@ 0x2d
9001a282:	d018      	beq.n	9001a2b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001a284:	d833      	bhi.n	9001a2ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001a286:	2a2c      	cmp	r2, #44	@ 0x2c
9001a288:	d196      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a28a:	684a      	ldr	r2, [r1, #4]
9001a28c:	7813      	ldrb	r3, [r2, #0]
9001a28e:	7852      	ldrb	r2, [r2, #1]
9001a290:	2a00      	cmp	r2, #0
9001a292:	d191      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a294:	2b01      	cmp	r3, #1
9001a296:	d01e      	beq.n	9001a2d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a298:	2b00      	cmp	r3, #0
9001a29a:	d030      	beq.n	9001a2fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001a29c:	2b02      	cmp	r3, #2
9001a29e:	d18b      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2a0:	6903      	ldr	r3, [r0, #16]
9001a2a2:	e7b6      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2a4:	2a31      	cmp	r2, #49	@ 0x31
9001a2a6:	d004      	beq.n	9001a2b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001a2a8:	d333      	bcc.n	9001a312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a2aa:	2a32      	cmp	r2, #50	@ 0x32
9001a2ac:	d031      	beq.n	9001a312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a2ae:	2a33      	cmp	r2, #51	@ 0x33
9001a2b0:	d182      	bne.n	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2b2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001a2b4:	e7ad      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2b6:	684a      	ldr	r2, [r1, #4]
9001a2b8:	7813      	ldrb	r3, [r2, #0]
9001a2ba:	7852      	ldrb	r2, [r2, #1]
9001a2bc:	2a00      	cmp	r2, #0
9001a2be:	f47f af7b 	bne.w	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2c2:	2b01      	cmp	r3, #1
9001a2c4:	d005      	beq.n	9001a2d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a2c6:	d310      	bcc.n	9001a2ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001a2c8:	2b02      	cmp	r3, #2
9001a2ca:	f47f af75 	bne.w	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2ce:	6983      	ldr	r3, [r0, #24]
9001a2d0:	e79f      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2d2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001a2d4:	e79d      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2d6:	6a03      	ldr	r3, [r0, #32]
9001a2d8:	e79b      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2da:	684b      	ldr	r3, [r1, #4]
9001a2dc:	781a      	ldrb	r2, [r3, #0]
9001a2de:	785b      	ldrb	r3, [r3, #1]
9001a2e0:	2b00      	cmp	r3, #0
9001a2e2:	f47f af69 	bne.w	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2e6:	2a00      	cmp	r2, #0
9001a2e8:	d193      	bne.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2ea:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001a2ec:	e791      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2ee:	684b      	ldr	r3, [r1, #4]
9001a2f0:	781a      	ldrb	r2, [r3, #0]
9001a2f2:	785b      	ldrb	r3, [r3, #1]
9001a2f4:	2b00      	cmp	r3, #0
9001a2f6:	f47f af5f 	bne.w	9001a1b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a2fa:	2a00      	cmp	r2, #0
9001a2fc:	d189      	bne.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a2fe:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001a300:	e787      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a302:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001a304:	e785      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a306:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001a308:	e783      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a30a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001a30c:	e781      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a30e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001a310:	e77f      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a312:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001a314:	e77d      	b.n	9001a212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001a316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a316:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a31a:	b087      	sub	sp, #28
9001a31c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a31e:	9205      	str	r2, [sp, #20]
9001a320:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a324:	9101      	str	r1, [sp, #4]
9001a326:	9202      	str	r2, [sp, #8]
9001a328:	6841      	ldr	r1, [r0, #4]
9001a32a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001a32e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a332:	fb01 2404 	mla	r4, r1, r4, r2
9001a336:	6802      	ldr	r2, [r0, #0]
9001a338:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a33c:	f8de 2000 	ldr.w	r2, [lr]
9001a340:	9203      	str	r2, [sp, #12]
9001a342:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a346:	3204      	adds	r2, #4
9001a348:	9204      	str	r2, [sp, #16]
9001a34a:	9a02      	ldr	r2, [sp, #8]
9001a34c:	43d6      	mvns	r6, r2
9001a34e:	b2f6      	uxtb	r6, r6
9001a350:	9a01      	ldr	r2, [sp, #4]
9001a352:	2a00      	cmp	r2, #0
9001a354:	dc03      	bgt.n	9001a35e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a356:	9a05      	ldr	r2, [sp, #20]
9001a358:	2a00      	cmp	r2, #0
9001a35a:	f340 8129 	ble.w	9001a5b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a35e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a360:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a364:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a368:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a36a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a36e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a372:	2b00      	cmp	r3, #0
9001a374:	dd0e      	ble.n	9001a394 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a376:	1408      	asrs	r0, r1, #16
9001a378:	d405      	bmi.n	9001a386 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a37a:	4560      	cmp	r0, ip
9001a37c:	da03      	bge.n	9001a386 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a37e:	1410      	asrs	r0, r2, #16
9001a380:	d401      	bmi.n	9001a386 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a382:	42b8      	cmp	r0, r7
9001a384:	db07      	blt.n	9001a396 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a386:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a388:	3b01      	subs	r3, #1
9001a38a:	3402      	adds	r4, #2
9001a38c:	4401      	add	r1, r0
9001a38e:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a390:	4402      	add	r2, r0
9001a392:	e7ee      	b.n	9001a372 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a394:	d071      	beq.n	9001a47a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a396:	1e58      	subs	r0, r3, #1
9001a398:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a39a:	fb05 1500 	mla	r5, r5, r0, r1
9001a39e:	142d      	asrs	r5, r5, #16
9001a3a0:	d45f      	bmi.n	9001a462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a3a2:	4565      	cmp	r5, ip
9001a3a4:	da5d      	bge.n	9001a462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a3a6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a3a8:	fb05 2000 	mla	r0, r5, r0, r2
9001a3ac:	1400      	asrs	r0, r0, #16
9001a3ae:	d458      	bmi.n	9001a462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a3b0:	42b8      	cmp	r0, r7
9001a3b2:	da56      	bge.n	9001a462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a3b4:	4699      	mov	r9, r3
9001a3b6:	46a2      	mov	sl, r4
9001a3b8:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001a3bc:	f1b9 0f00 	cmp.w	r9, #0
9001a3c0:	dd57      	ble.n	9001a472 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001a3c2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001a3c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a3ca:	9803      	ldr	r0, [sp, #12]
9001a3cc:	140d      	asrs	r5, r1, #16
9001a3ce:	f109 39ff 	add.w	r9, r9, #4294967295
9001a3d2:	fb07 000c 	mla	r0, r7, ip, r0
9001a3d6:	5d40      	ldrb	r0, [r0, r5]
9001a3d8:	9d04      	ldr	r5, [sp, #16]
9001a3da:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a3de:	f8ba 5000 	ldrh.w	r5, [sl]
9001a3e2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a3e6:	122f      	asrs	r7, r5, #8
9001a3e8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a3ec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a3f0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a3f4:	00ed      	lsls	r5, r5, #3
9001a3f6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001a3fa:	fb17 f706 	smulbb	r7, r7, r6
9001a3fe:	b2ed      	uxtb	r5, r5
9001a400:	fb18 f806 	smulbb	r8, r8, r6
9001a404:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a408:	10c7      	asrs	r7, r0, #3
9001a40a:	fb15 f506 	smulbb	r5, r5, r6
9001a40e:	00c0      	lsls	r0, r0, #3
9001a410:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a414:	fa1f fc8c 	uxth.w	ip, ip
9001a418:	b2c0      	uxtb	r0, r0
9001a41a:	fb07 870b 	mla	r7, r7, fp, r8
9001a41e:	fb00 500b 	mla	r0, r0, fp, r5
9001a422:	f10c 0501 	add.w	r5, ip, #1
9001a426:	b2bf      	uxth	r7, r7
9001a428:	b280      	uxth	r0, r0
9001a42a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a42e:	f107 0801 	add.w	r8, r7, #1
9001a432:	1c45      	adds	r5, r0, #1
9001a434:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a438:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a43c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a440:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a442:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a446:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a44a:	4401      	add	r1, r0
9001a44c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001a450:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a452:	ea45 0c0c 	orr.w	ip, r5, ip
9001a456:	4402      	add	r2, r0
9001a458:	ea4c 0c08 	orr.w	ip, ip, r8
9001a45c:	f82a cb02 	strh.w	ip, [sl], #2
9001a460:	e7ac      	b.n	9001a3bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a462:	f04f 0800 	mov.w	r8, #0
9001a466:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001a46a:	eb03 0008 	add.w	r0, r3, r8
9001a46e:	2800      	cmp	r0, #0
9001a470:	dc41      	bgt.n	9001a4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001a472:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a476:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a47a:	9b01      	ldr	r3, [sp, #4]
9001a47c:	2b00      	cmp	r3, #0
9001a47e:	f340 8097 	ble.w	9001a5b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a482:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a486:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a488:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a48c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a490:	eef0 6a62 	vmov.f32	s13, s5
9001a494:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a498:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a49c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a4a0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001a4a4:	eef0 6a43 	vmov.f32	s13, s6
9001a4a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a4ac:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001a4b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a4b4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a4b8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a4bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a4c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a4c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a4c8:	ee12 2a90 	vmov	r2, s5
9001a4cc:	eef0 2a47 	vmov.f32	s5, s14
9001a4d0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a4d4:	ee13 2a10 	vmov	r2, s6
9001a4d8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a4da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a4dc:	eeb0 3a67 	vmov.f32	s6, s15
9001a4e0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a4e4:	9314      	str	r3, [sp, #80]	@ 0x50
9001a4e6:	9b01      	ldr	r3, [sp, #4]
9001a4e8:	9a05      	ldr	r2, [sp, #20]
9001a4ea:	3b01      	subs	r3, #1
9001a4ec:	9301      	str	r3, [sp, #4]
9001a4ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a4f0:	bf08      	it	eq
9001a4f2:	4613      	moveq	r3, r2
9001a4f4:	e72c      	b.n	9001a350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a4f6:	140f      	asrs	r7, r1, #16
9001a4f8:	d453      	bmi.n	9001a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a4fa:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a4fe:	42bd      	cmp	r5, r7
9001a500:	dd4f      	ble.n	9001a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a502:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a506:	d44c      	bmi.n	9001a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a508:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a50c:	4560      	cmp	r0, ip
9001a50e:	dd48      	ble.n	9001a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a510:	9803      	ldr	r0, [sp, #12]
9001a512:	b22d      	sxth	r5, r5
9001a514:	fb0c 0505 	mla	r5, ip, r5, r0
9001a518:	5de8      	ldrb	r0, [r5, r7]
9001a51a:	9d04      	ldr	r5, [sp, #16]
9001a51c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a520:	f06f 0501 	mvn.w	r5, #1
9001a524:	fb05 fb08 	mul.w	fp, r5, r8
9001a528:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a52c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001a530:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a534:	122f      	asrs	r7, r5, #8
9001a536:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001a53a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a53e:	00ed      	lsls	r5, r5, #3
9001a540:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001a544:	fb17 f706 	smulbb	r7, r7, r6
9001a548:	b2ed      	uxtb	r5, r5
9001a54a:	fb19 f906 	smulbb	r9, r9, r6
9001a54e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001a552:	10c7      	asrs	r7, r0, #3
9001a554:	fb15 f506 	smulbb	r5, r5, r6
9001a558:	00c0      	lsls	r0, r0, #3
9001a55a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a55e:	fa1f fc8c 	uxth.w	ip, ip
9001a562:	b2c0      	uxtb	r0, r0
9001a564:	fb07 970a 	mla	r7, r7, sl, r9
9001a568:	fb00 500a 	mla	r0, r0, sl, r5
9001a56c:	f10c 0501 	add.w	r5, ip, #1
9001a570:	b2bf      	uxth	r7, r7
9001a572:	b280      	uxth	r0, r0
9001a574:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a578:	f107 0901 	add.w	r9, r7, #1
9001a57c:	1c45      	adds	r5, r0, #1
9001a57e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001a582:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a586:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a58a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001a58e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a592:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001a596:	ea45 0c0c 	orr.w	ip, r5, ip
9001a59a:	ea4c 0c09 	orr.w	ip, ip, r9
9001a59e:	f824 c00b 	strh.w	ip, [r4, fp]
9001a5a2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a5a4:	f108 38ff 	add.w	r8, r8, #4294967295
9001a5a8:	4401      	add	r1, r0
9001a5aa:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a5ac:	4402      	add	r2, r0
9001a5ae:	e75c      	b.n	9001a46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001a5b0:	b007      	add	sp, #28
9001a5b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a5b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a5b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a5ba:	b085      	sub	sp, #20
9001a5bc:	4693      	mov	fp, r2
9001a5be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a5c2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a5c4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001a5c6:	6870      	ldr	r0, [r6, #4]
9001a5c8:	9100      	str	r1, [sp, #0]
9001a5ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a5ce:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001a5d2:	fb00 2404 	mla	r4, r0, r4, r2
9001a5d6:	6832      	ldr	r2, [r6, #0]
9001a5d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a5dc:	682a      	ldr	r2, [r5, #0]
9001a5de:	9201      	str	r2, [sp, #4]
9001a5e0:	686a      	ldr	r2, [r5, #4]
9001a5e2:	3204      	adds	r2, #4
9001a5e4:	9202      	str	r2, [sp, #8]
9001a5e6:	9a00      	ldr	r2, [sp, #0]
9001a5e8:	2a00      	cmp	r2, #0
9001a5ea:	dc03      	bgt.n	9001a5f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a5ec:	f1bb 0f00 	cmp.w	fp, #0
9001a5f0:	f340 80a0 	ble.w	9001a734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a5f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a5f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a5fa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a5fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a600:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a604:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a608:	2b00      	cmp	r3, #0
9001a60a:	dd0c      	ble.n	9001a626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a60c:	1406      	asrs	r6, r0, #16
9001a60e:	d405      	bmi.n	9001a61c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a610:	454e      	cmp	r6, r9
9001a612:	da03      	bge.n	9001a61c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a614:	1416      	asrs	r6, r2, #16
9001a616:	d401      	bmi.n	9001a61c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a618:	4546      	cmp	r6, r8
9001a61a:	db05      	blt.n	9001a628 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a61c:	4470      	add	r0, lr
9001a61e:	4462      	add	r2, ip
9001a620:	3b01      	subs	r3, #1
9001a622:	3402      	adds	r4, #2
9001a624:	e7f0      	b.n	9001a608 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a626:	d00f      	beq.n	9001a648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a628:	1e5e      	subs	r6, r3, #1
9001a62a:	fb0e 0706 	mla	r7, lr, r6, r0
9001a62e:	143f      	asrs	r7, r7, #16
9001a630:	d541      	bpl.n	9001a6b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001a632:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001a636:	4698      	mov	r8, r3
9001a638:	9603      	str	r6, [sp, #12]
9001a63a:	f1b8 0f00 	cmp.w	r8, #0
9001a63e:	dc59      	bgt.n	9001a6f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a640:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a644:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a648:	9b00      	ldr	r3, [sp, #0]
9001a64a:	2b00      	cmp	r3, #0
9001a64c:	dd72      	ble.n	9001a734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a64e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a652:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a654:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a658:	eeb0 6a62 	vmov.f32	s12, s5
9001a65c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a660:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a664:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a668:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a66c:	eeb0 6a43 	vmov.f32	s12, s6
9001a670:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a674:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a678:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a67c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a680:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a684:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a688:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a68c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a690:	ee12 2a90 	vmov	r2, s5
9001a694:	eef0 2a47 	vmov.f32	s5, s14
9001a698:	fb92 fef3 	sdiv	lr, r2, r3
9001a69c:	ee13 2a10 	vmov	r2, s6
9001a6a0:	eeb0 3a67 	vmov.f32	s6, s15
9001a6a4:	fb92 fcf3 	sdiv	ip, r2, r3
9001a6a8:	9b00      	ldr	r3, [sp, #0]
9001a6aa:	3b01      	subs	r3, #1
9001a6ac:	9300      	str	r3, [sp, #0]
9001a6ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a6b0:	bf08      	it	eq
9001a6b2:	465b      	moveq	r3, fp
9001a6b4:	e797      	b.n	9001a5e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a6b6:	454f      	cmp	r7, r9
9001a6b8:	dabb      	bge.n	9001a632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a6ba:	fb0c 2606 	mla	r6, ip, r6, r2
9001a6be:	1436      	asrs	r6, r6, #16
9001a6c0:	d4b7      	bmi.n	9001a632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a6c2:	4546      	cmp	r6, r8
9001a6c4:	dab5      	bge.n	9001a632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a6c6:	461e      	mov	r6, r3
9001a6c8:	46a0      	mov	r8, r4
9001a6ca:	2e00      	cmp	r6, #0
9001a6cc:	ddb8      	ble.n	9001a640 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a6ce:	1417      	asrs	r7, r2, #16
9001a6d0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a6d4:	9901      	ldr	r1, [sp, #4]
9001a6d6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a6da:	4462      	add	r2, ip
9001a6dc:	4470      	add	r0, lr
9001a6de:	fb0a 1707 	mla	r7, sl, r7, r1
9001a6e2:	9902      	ldr	r1, [sp, #8]
9001a6e4:	3e01      	subs	r6, #1
9001a6e6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001a6ea:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a6ee:	f828 7b02 	strh.w	r7, [r8], #2
9001a6f2:	e7ea      	b.n	9001a6ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001a6f4:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a6f8:	d417      	bmi.n	9001a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a6fa:	68ae      	ldr	r6, [r5, #8]
9001a6fc:	454e      	cmp	r6, r9
9001a6fe:	dd14      	ble.n	9001a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a700:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a704:	d411      	bmi.n	9001a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a706:	68ef      	ldr	r7, [r5, #12]
9001a708:	4557      	cmp	r7, sl
9001a70a:	dd0e      	ble.n	9001a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a70c:	9f01      	ldr	r7, [sp, #4]
9001a70e:	b236      	sxth	r6, r6
9001a710:	f06f 0101 	mvn.w	r1, #1
9001a714:	fb0a 7606 	mla	r6, sl, r6, r7
9001a718:	9f02      	ldr	r7, [sp, #8]
9001a71a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001a71e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a722:	fb01 f608 	mul.w	r6, r1, r8
9001a726:	9903      	ldr	r1, [sp, #12]
9001a728:	538f      	strh	r7, [r1, r6]
9001a72a:	4470      	add	r0, lr
9001a72c:	4462      	add	r2, ip
9001a72e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a732:	e782      	b.n	9001a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a734:	b005      	add	sp, #20
9001a736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a73a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a73a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a73e:	b087      	sub	sp, #28
9001a740:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001a742:	9205      	str	r2, [sp, #20]
9001a744:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a748:	9102      	str	r1, [sp, #8]
9001a74a:	9203      	str	r2, [sp, #12]
9001a74c:	6861      	ldr	r1, [r4, #4]
9001a74e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001a752:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001a756:	fb01 2000 	mla	r0, r1, r0, r2
9001a75a:	6822      	ldr	r2, [r4, #0]
9001a75c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001a760:	9200      	str	r2, [sp, #0]
9001a762:	f8dc 2000 	ldr.w	r2, [ip]
9001a766:	9204      	str	r2, [sp, #16]
9001a768:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a76c:	3204      	adds	r2, #4
9001a76e:	9201      	str	r2, [sp, #4]
9001a770:	9a03      	ldr	r2, [sp, #12]
9001a772:	43d5      	mvns	r5, r2
9001a774:	b2ed      	uxtb	r5, r5
9001a776:	9a02      	ldr	r2, [sp, #8]
9001a778:	2a00      	cmp	r2, #0
9001a77a:	dc03      	bgt.n	9001a784 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a77c:	9a05      	ldr	r2, [sp, #20]
9001a77e:	2a00      	cmp	r2, #0
9001a780:	f340 812c 	ble.w	9001a9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a784:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a786:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001a78a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a78e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a790:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001a794:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a798:	2b00      	cmp	r3, #0
9001a79a:	dd10      	ble.n	9001a7be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a79c:	140c      	asrs	r4, r1, #16
9001a79e:	d405      	bmi.n	9001a7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a7a0:	4574      	cmp	r4, lr
9001a7a2:	da03      	bge.n	9001a7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a7a4:	1414      	asrs	r4, r2, #16
9001a7a6:	d401      	bmi.n	9001a7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a7a8:	42bc      	cmp	r4, r7
9001a7aa:	db09      	blt.n	9001a7c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001a7ac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a7ae:	3b01      	subs	r3, #1
9001a7b0:	9800      	ldr	r0, [sp, #0]
9001a7b2:	4421      	add	r1, r4
9001a7b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a7b6:	3002      	adds	r0, #2
9001a7b8:	4422      	add	r2, r4
9001a7ba:	9000      	str	r0, [sp, #0]
9001a7bc:	e7ec      	b.n	9001a798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a7be:	d071      	beq.n	9001a8a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001a7c0:	1e5c      	subs	r4, r3, #1
9001a7c2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a7c4:	fb06 1604 	mla	r6, r6, r4, r1
9001a7c8:	1436      	asrs	r6, r6, #16
9001a7ca:	d45d      	bmi.n	9001a888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a7cc:	4576      	cmp	r6, lr
9001a7ce:	da5b      	bge.n	9001a888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a7d0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001a7d2:	fb06 2404 	mla	r4, r6, r4, r2
9001a7d6:	1424      	asrs	r4, r4, #16
9001a7d8:	d456      	bmi.n	9001a888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a7da:	42bc      	cmp	r4, r7
9001a7dc:	da54      	bge.n	9001a888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a7de:	4698      	mov	r8, r3
9001a7e0:	f8dd 9000 	ldr.w	r9, [sp]
9001a7e4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001a7e8:	f1b8 0f00 	cmp.w	r8, #0
9001a7ec:	dd54      	ble.n	9001a898 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a7ee:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a7f2:	1414      	asrs	r4, r2, #16
9001a7f4:	9804      	ldr	r0, [sp, #16]
9001a7f6:	140e      	asrs	r6, r1, #16
9001a7f8:	f108 38ff 	add.w	r8, r8, #4294967295
9001a7fc:	fb07 0404 	mla	r4, r7, r4, r0
9001a800:	9801      	ldr	r0, [sp, #4]
9001a802:	f814 e006 	ldrb.w	lr, [r4, r6]
9001a806:	f8b9 4000 	ldrh.w	r4, [r9]
9001a80a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a80e:	1227      	asrs	r7, r4, #8
9001a810:	eb00 0b0e 	add.w	fp, r0, lr
9001a814:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001a818:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a81c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a81e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a822:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a826:	4401      	add	r1, r0
9001a828:	fb16 f60a 	smulbb	r6, r6, sl
9001a82c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a82e:	fb1b fb0a 	smulbb	fp, fp, sl
9001a832:	fb07 6705 	mla	r7, r7, r5, r6
9001a836:	10e6      	asrs	r6, r4, #3
9001a838:	00e4      	lsls	r4, r4, #3
9001a83a:	4402      	add	r2, r0
9001a83c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a840:	b2bf      	uxth	r7, r7
9001a842:	b2e4      	uxtb	r4, r4
9001a844:	fb06 b605 	mla	r6, r6, r5, fp
9001a848:	fb14 f405 	smulbb	r4, r4, r5
9001a84c:	b2b6      	uxth	r6, r6
9001a84e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001a852:	1c7c      	adds	r4, r7, #1
9001a854:	f106 0b01 	add.w	fp, r6, #1
9001a858:	fa1f fe8e 	uxth.w	lr, lr
9001a85c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a860:	f10e 0401 	add.w	r4, lr, #1
9001a864:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a868:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a86c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001a870:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a874:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a878:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001a87c:	4327      	orrs	r7, r4
9001a87e:	ea47 070b 	orr.w	r7, r7, fp
9001a882:	f829 7b02 	strh.w	r7, [r9], #2
9001a886:	e7af      	b.n	9001a7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001a888:	f04f 0e00 	mov.w	lr, #0
9001a88c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001a890:	eb03 040e 	add.w	r4, r3, lr
9001a894:	2c00      	cmp	r4, #0
9001a896:	dc43      	bgt.n	9001a920 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001a898:	9a00      	ldr	r2, [sp, #0]
9001a89a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a89e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a8a2:	9300      	str	r3, [sp, #0]
9001a8a4:	9b02      	ldr	r3, [sp, #8]
9001a8a6:	2b00      	cmp	r3, #0
9001a8a8:	f340 8098 	ble.w	9001a9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a8ac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a8b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a8b2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a8b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a8ba:	eef0 6a62 	vmov.f32	s13, s5
9001a8be:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a8c2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a8c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a8ca:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001a8ce:	eef0 6a43 	vmov.f32	s13, s6
9001a8d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a8d6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001a8da:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a8de:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a8e2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a8e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a8ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a8ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a8f2:	ee12 2a90 	vmov	r2, s5
9001a8f6:	eef0 2a47 	vmov.f32	s5, s14
9001a8fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001a8fe:	ee13 2a10 	vmov	r2, s6
9001a902:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a904:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a906:	eeb0 3a67 	vmov.f32	s6, s15
9001a90a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a90e:	9314      	str	r3, [sp, #80]	@ 0x50
9001a910:	9b02      	ldr	r3, [sp, #8]
9001a912:	9a05      	ldr	r2, [sp, #20]
9001a914:	3b01      	subs	r3, #1
9001a916:	9302      	str	r3, [sp, #8]
9001a918:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a91a:	bf08      	it	eq
9001a91c:	4613      	moveq	r3, r2
9001a91e:	e72a      	b.n	9001a776 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a920:	140f      	asrs	r7, r1, #16
9001a922:	d454      	bmi.n	9001a9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a924:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001a928:	42be      	cmp	r6, r7
9001a92a:	dd50      	ble.n	9001a9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a92c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001a930:	d44d      	bmi.n	9001a9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a932:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001a936:	4544      	cmp	r4, r8
9001a938:	dd49      	ble.n	9001a9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a93a:	9c04      	ldr	r4, [sp, #16]
9001a93c:	b236      	sxth	r6, r6
9001a93e:	f06f 0001 	mvn.w	r0, #1
9001a942:	fb08 4606 	mla	r6, r8, r6, r4
9001a946:	9c01      	ldr	r4, [sp, #4]
9001a948:	fb00 fa0e 	mul.w	sl, r0, lr
9001a94c:	9800      	ldr	r0, [sp, #0]
9001a94e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001a952:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001a956:	eb04 0b08 	add.w	fp, r4, r8
9001a95a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001a95e:	9801      	ldr	r0, [sp, #4]
9001a960:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a964:	1227      	asrs	r7, r4, #8
9001a966:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a96a:	fb16 f609 	smulbb	r6, r6, r9
9001a96e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a972:	f810 8008 	ldrb.w	r8, [r0, r8]
9001a976:	fb1b fb09 	smulbb	fp, fp, r9
9001a97a:	fb07 6705 	mla	r7, r7, r5, r6
9001a97e:	10e6      	asrs	r6, r4, #3
9001a980:	00e4      	lsls	r4, r4, #3
9001a982:	9800      	ldr	r0, [sp, #0]
9001a984:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a988:	b2bf      	uxth	r7, r7
9001a98a:	b2e4      	uxtb	r4, r4
9001a98c:	fb06 b605 	mla	r6, r6, r5, fp
9001a990:	fb14 f405 	smulbb	r4, r4, r5
9001a994:	b2b6      	uxth	r6, r6
9001a996:	fb08 4809 	mla	r8, r8, r9, r4
9001a99a:	1c7c      	adds	r4, r7, #1
9001a99c:	f106 0b01 	add.w	fp, r6, #1
9001a9a0:	fa1f f888 	uxth.w	r8, r8
9001a9a4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a9a8:	f108 0401 	add.w	r4, r8, #1
9001a9ac:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a9b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a9b4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001a9b8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a9bc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a9c0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001a9c4:	4327      	orrs	r7, r4
9001a9c6:	ea47 070b 	orr.w	r7, r7, fp
9001a9ca:	f820 700a 	strh.w	r7, [r0, sl]
9001a9ce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a9d0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a9d4:	4401      	add	r1, r0
9001a9d6:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a9d8:	4402      	add	r2, r0
9001a9da:	e759      	b.n	9001a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a9dc:	b007      	add	sp, #28
9001a9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a9e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a9e8:	b085      	sub	sp, #20
9001a9ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a9ee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a9f0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001a9f2:	9203      	str	r2, [sp, #12]
9001a9f4:	6870      	ldr	r0, [r6, #4]
9001a9f6:	686f      	ldr	r7, [r5, #4]
9001a9f8:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001a9fc:	3704      	adds	r7, #4
9001a9fe:	9101      	str	r1, [sp, #4]
9001aa00:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001aa04:	fb00 2404 	mla	r4, r0, r4, r2
9001aa08:	6832      	ldr	r2, [r6, #0]
9001aa0a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001aa0e:	682a      	ldr	r2, [r5, #0]
9001aa10:	9202      	str	r2, [sp, #8]
9001aa12:	9a01      	ldr	r2, [sp, #4]
9001aa14:	2a00      	cmp	r2, #0
9001aa16:	dc03      	bgt.n	9001aa20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001aa18:	9a03      	ldr	r2, [sp, #12]
9001aa1a:	2a00      	cmp	r2, #0
9001aa1c:	f340 80cc 	ble.w	9001abb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001aa20:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001aa22:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001aa26:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001aa2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001aa2c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001aa30:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001aa34:	2b00      	cmp	r3, #0
9001aa36:	dd0d      	ble.n	9001aa54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001aa38:	1406      	asrs	r6, r0, #16
9001aa3a:	d405      	bmi.n	9001aa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001aa3c:	454e      	cmp	r6, r9
9001aa3e:	da03      	bge.n	9001aa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001aa40:	1416      	asrs	r6, r2, #16
9001aa42:	d401      	bmi.n	9001aa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001aa44:	4546      	cmp	r6, r8
9001aa46:	db06      	blt.n	9001aa56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001aa48:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001aa4a:	4460      	add	r0, ip
9001aa4c:	3b01      	subs	r3, #1
9001aa4e:	3402      	adds	r4, #2
9001aa50:	4432      	add	r2, r6
9001aa52:	e7ef      	b.n	9001aa34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001aa54:	d00f      	beq.n	9001aa76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001aa56:	1e5e      	subs	r6, r3, #1
9001aa58:	fb0c 0e06 	mla	lr, ip, r6, r0
9001aa5c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001aa60:	d543      	bpl.n	9001aaea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001aa62:	4698      	mov	r8, r3
9001aa64:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001aa68:	f1b8 0f00 	cmp.w	r8, #0
9001aa6c:	dc71      	bgt.n	9001ab52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001aa6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001aa72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aa76:	9b01      	ldr	r3, [sp, #4]
9001aa78:	2b00      	cmp	r3, #0
9001aa7a:	f340 809d 	ble.w	9001abb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001aa7e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001aa82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aa84:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001aa88:	eeb0 6a62 	vmov.f32	s12, s5
9001aa8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001aa90:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aa98:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001aa9c:	eeb0 6a43 	vmov.f32	s12, s6
9001aaa0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aaa4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001aaa8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aaac:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aab0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aab4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aab8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aabc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aac0:	ee12 2a90 	vmov	r2, s5
9001aac4:	eef0 2a47 	vmov.f32	s5, s14
9001aac8:	fb92 fcf3 	sdiv	ip, r2, r3
9001aacc:	ee13 2a10 	vmov	r2, s6
9001aad0:	eeb0 3a67 	vmov.f32	s6, s15
9001aad4:	fb92 f3f3 	sdiv	r3, r2, r3
9001aad8:	9312      	str	r3, [sp, #72]	@ 0x48
9001aada:	9b01      	ldr	r3, [sp, #4]
9001aadc:	9a03      	ldr	r2, [sp, #12]
9001aade:	3b01      	subs	r3, #1
9001aae0:	9301      	str	r3, [sp, #4]
9001aae2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aae4:	bf08      	it	eq
9001aae6:	4613      	moveq	r3, r2
9001aae8:	e793      	b.n	9001aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001aaea:	45ce      	cmp	lr, r9
9001aaec:	dab9      	bge.n	9001aa62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aaee:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001aaf0:	fb01 2606 	mla	r6, r1, r6, r2
9001aaf4:	1436      	asrs	r6, r6, #16
9001aaf6:	d4b4      	bmi.n	9001aa62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aaf8:	4546      	cmp	r6, r8
9001aafa:	dab2      	bge.n	9001aa62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aafc:	4698      	mov	r8, r3
9001aafe:	46a2      	mov	sl, r4
9001ab00:	f1b8 0f00 	cmp.w	r8, #0
9001ab04:	ddb3      	ble.n	9001aa6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001ab06:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001ab0a:	1416      	asrs	r6, r2, #16
9001ab0c:	9902      	ldr	r1, [sp, #8]
9001ab0e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001ab12:	f108 38ff 	add.w	r8, r8, #4294967295
9001ab16:	4460      	add	r0, ip
9001ab18:	fb09 1606 	mla	r6, r9, r6, r1
9001ab1c:	4928      	ldr	r1, [pc, #160]	@ (9001abc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001ab1e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001ab22:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001ab26:	eb07 0b0e 	add.w	fp, r7, lr
9001ab2a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001ab2e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001ab32:	00f6      	lsls	r6, r6, #3
9001ab34:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001ab38:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001ab3a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ab3e:	440a      	add	r2, r1
9001ab40:	ea49 0606 	orr.w	r6, r9, r6
9001ab44:	f817 900e 	ldrb.w	r9, [r7, lr]
9001ab48:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001ab4c:	f82a 6b02 	strh.w	r6, [sl], #2
9001ab50:	e7d6      	b.n	9001ab00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001ab52:	ea5f 4920 	movs.w	r9, r0, asr #16
9001ab56:	d429      	bmi.n	9001abac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ab58:	68ae      	ldr	r6, [r5, #8]
9001ab5a:	454e      	cmp	r6, r9
9001ab5c:	dd26      	ble.n	9001abac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ab5e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001ab62:	d423      	bmi.n	9001abac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ab64:	68e9      	ldr	r1, [r5, #12]
9001ab66:	4559      	cmp	r1, fp
9001ab68:	dd20      	ble.n	9001abac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001ab6a:	fa0f fe86 	sxth.w	lr, r6
9001ab6e:	9902      	ldr	r1, [sp, #8]
9001ab70:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001ab74:	f06f 0101 	mvn.w	r1, #1
9001ab78:	f81e e009 	ldrb.w	lr, [lr, r9]
9001ab7c:	fb01 f908 	mul.w	r9, r1, r8
9001ab80:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001ab84:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001ab88:	eb07 060e 	add.w	r6, r7, lr
9001ab8c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001ab90:	7876      	ldrb	r6, [r6, #1]
9001ab92:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001ab96:	00f6      	lsls	r6, r6, #3
9001ab98:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ab9c:	ea4b 0606 	orr.w	r6, fp, r6
9001aba0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001aba4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001aba8:	f82a 6009 	strh.w	r6, [sl, r9]
9001abac:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001abae:	4460      	add	r0, ip
9001abb0:	f108 38ff 	add.w	r8, r8, #4294967295
9001abb4:	440a      	add	r2, r1
9001abb6:	e757      	b.n	9001aa68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001abb8:	b005      	add	sp, #20
9001abba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001abbe:	bf00      	nop
9001abc0:	fffff800 	.word	0xfffff800

9001abc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001abc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001abc8:	b087      	sub	sp, #28
9001abca:	468b      	mov	fp, r1
9001abcc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001abd0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001abd2:	9204      	str	r2, [sp, #16]
9001abd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001abd8:	6841      	ldr	r1, [r0, #4]
9001abda:	9205      	str	r2, [sp, #20]
9001abdc:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001abe0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001abe4:	fb01 2404 	mla	r4, r1, r4, r2
9001abe8:	6802      	ldr	r2, [r0, #0]
9001abea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001abee:	f8dc 2000 	ldr.w	r2, [ip]
9001abf2:	9201      	str	r2, [sp, #4]
9001abf4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001abf8:	3204      	adds	r2, #4
9001abfa:	9202      	str	r2, [sp, #8]
9001abfc:	f1bb 0f00 	cmp.w	fp, #0
9001ac00:	dc03      	bgt.n	9001ac0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001ac02:	9a04      	ldr	r2, [sp, #16]
9001ac04:	2a00      	cmp	r2, #0
9001ac06:	f340 8138 	ble.w	9001ae7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ac0a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ac0c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001ac10:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ac14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ac16:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001ac1a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ac1e:	2b00      	cmp	r3, #0
9001ac20:	dd0e      	ble.n	9001ac40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ac22:	1402      	asrs	r2, r0, #16
9001ac24:	d405      	bmi.n	9001ac32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ac26:	42ba      	cmp	r2, r7
9001ac28:	da03      	bge.n	9001ac32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ac2a:	140a      	asrs	r2, r1, #16
9001ac2c:	d401      	bmi.n	9001ac32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ac2e:	42b2      	cmp	r2, r6
9001ac30:	db07      	blt.n	9001ac42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ac32:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ac34:	3b01      	subs	r3, #1
9001ac36:	3402      	adds	r4, #2
9001ac38:	4410      	add	r0, r2
9001ac3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ac3c:	4411      	add	r1, r2
9001ac3e:	e7ee      	b.n	9001ac1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001ac40:	d019      	beq.n	9001ac76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ac42:	1e5a      	subs	r2, r3, #1
9001ac44:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ac46:	fb05 0502 	mla	r5, r5, r2, r0
9001ac4a:	142d      	asrs	r5, r5, #16
9001ac4c:	d409      	bmi.n	9001ac62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ac4e:	42bd      	cmp	r5, r7
9001ac50:	da07      	bge.n	9001ac62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ac52:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ac54:	fb05 1202 	mla	r2, r5, r2, r1
9001ac58:	1412      	asrs	r2, r2, #16
9001ac5a:	d402      	bmi.n	9001ac62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ac5c:	42b2      	cmp	r2, r6
9001ac5e:	f2c0 80ac 	blt.w	9001adba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001ac62:	f04f 0e00 	mov.w	lr, #0
9001ac66:	eb03 020e 	add.w	r2, r3, lr
9001ac6a:	2a00      	cmp	r2, #0
9001ac6c:	dc3e      	bgt.n	9001acec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ac6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ac72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac76:	f1bb 0f00 	cmp.w	fp, #0
9001ac7a:	f340 80fe 	ble.w	9001ae7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ac7e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ac82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ac84:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ac88:	f1bb 0b01 	subs.w	fp, fp, #1
9001ac8c:	eeb0 6a62 	vmov.f32	s12, s5
9001ac90:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ac94:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ac98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ac9c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001aca0:	eeb0 6a43 	vmov.f32	s12, s6
9001aca4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aca8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001acac:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001acb0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001acb4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001acb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001acbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001acc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001acc4:	ee12 2a90 	vmov	r2, s5
9001acc8:	eef0 2a47 	vmov.f32	s5, s14
9001accc:	fb92 f3f3 	sdiv	r3, r2, r3
9001acd0:	ee13 2a10 	vmov	r2, s6
9001acd4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001acd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001acd8:	eeb0 3a67 	vmov.f32	s6, s15
9001acdc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ace0:	9a04      	ldr	r2, [sp, #16]
9001ace2:	9314      	str	r3, [sp, #80]	@ 0x50
9001ace4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ace6:	bf08      	it	eq
9001ace8:	4613      	moveq	r3, r2
9001acea:	e787      	b.n	9001abfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001acec:	1406      	asrs	r6, r0, #16
9001acee:	d45d      	bmi.n	9001adac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001acf0:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001acf4:	42b5      	cmp	r5, r6
9001acf6:	dd59      	ble.n	9001adac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001acf8:	140f      	asrs	r7, r1, #16
9001acfa:	d457      	bmi.n	9001adac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001acfc:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001ad00:	42ba      	cmp	r2, r7
9001ad02:	dd53      	ble.n	9001adac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ad04:	9a01      	ldr	r2, [sp, #4]
9001ad06:	b22d      	sxth	r5, r5
9001ad08:	fb07 2505 	mla	r5, r7, r5, r2
9001ad0c:	5daa      	ldrb	r2, [r5, r6]
9001ad0e:	9d02      	ldr	r5, [sp, #8]
9001ad10:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ad14:	0e2e      	lsrs	r6, r5, #24
9001ad16:	d049      	beq.n	9001adac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ad18:	f06f 0201 	mvn.w	r2, #1
9001ad1c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ad20:	fb02 f20e 	mul.w	r2, r2, lr
9001ad24:	f834 8002 	ldrh.w	r8, [r4, r2]
9001ad28:	9203      	str	r2, [sp, #12]
9001ad2a:	9a05      	ldr	r2, [sp, #20]
9001ad2c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001ad30:	4356      	muls	r6, r2
9001ad32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ad36:	1c72      	adds	r2, r6, #1
9001ad38:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ad3c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ad40:	b2ed      	uxtb	r5, r5
9001ad42:	1212      	asrs	r2, r2, #8
9001ad44:	fa1f f982 	uxth.w	r9, r2
9001ad48:	43d2      	mvns	r2, r2
9001ad4a:	fb16 f609 	smulbb	r6, r6, r9
9001ad4e:	b2d2      	uxtb	r2, r2
9001ad50:	fb15 f509 	smulbb	r5, r5, r9
9001ad54:	fb07 6702 	mla	r7, r7, r2, r6
9001ad58:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ad5c:	fb1a fa09 	smulbb	sl, sl, r9
9001ad60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ad64:	b2bf      	uxth	r7, r7
9001ad66:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ad6a:	fa5f f888 	uxtb.w	r8, r8
9001ad6e:	fb06 a602 	mla	r6, r6, r2, sl
9001ad72:	fb08 5502 	mla	r5, r8, r2, r5
9001ad76:	1c7a      	adds	r2, r7, #1
9001ad78:	b2b6      	uxth	r6, r6
9001ad7a:	b2ad      	uxth	r5, r5
9001ad7c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ad80:	9a03      	ldr	r2, [sp, #12]
9001ad82:	f105 0a01 	add.w	sl, r5, #1
9001ad86:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ad8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ad8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ad92:	ea4a 0707 	orr.w	r7, sl, r7
9001ad96:	f106 0a01 	add.w	sl, r6, #1
9001ad9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ad9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ada2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ada6:	ea47 070a 	orr.w	r7, r7, sl
9001adaa:	52a7      	strh	r7, [r4, r2]
9001adac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001adae:	f10e 3eff 	add.w	lr, lr, #4294967295
9001adb2:	4410      	add	r0, r2
9001adb4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001adb6:	4411      	add	r1, r2
9001adb8:	e755      	b.n	9001ac66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001adba:	f04f 0800 	mov.w	r8, #0
9001adbe:	eba3 0208 	sub.w	r2, r3, r8
9001adc2:	2a00      	cmp	r2, #0
9001adc4:	f77f af53 	ble.w	9001ac6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001adc8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001adcc:	140a      	asrs	r2, r1, #16
9001adce:	9f01      	ldr	r7, [sp, #4]
9001add0:	1405      	asrs	r5, r0, #16
9001add2:	fb06 7202 	mla	r2, r6, r2, r7
9001add6:	5d52      	ldrb	r2, [r2, r5]
9001add8:	9d02      	ldr	r5, [sp, #8]
9001adda:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001adde:	0e2e      	lsrs	r6, r5, #24
9001ade0:	d044      	beq.n	9001ae6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001ade2:	9a05      	ldr	r2, [sp, #20]
9001ade4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ade8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001adec:	4356      	muls	r6, r2
9001adee:	ea4f 272e 	mov.w	r7, lr, asr #8
9001adf2:	1c72      	adds	r2, r6, #1
9001adf4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001adf8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001adfc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ae00:	b2ed      	uxtb	r5, r5
9001ae02:	1212      	asrs	r2, r2, #8
9001ae04:	fa1f f982 	uxth.w	r9, r2
9001ae08:	43d2      	mvns	r2, r2
9001ae0a:	fb16 f609 	smulbb	r6, r6, r9
9001ae0e:	b2d2      	uxtb	r2, r2
9001ae10:	fb15 f509 	smulbb	r5, r5, r9
9001ae14:	fb07 6702 	mla	r7, r7, r2, r6
9001ae18:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ae1c:	fb1a fa09 	smulbb	sl, sl, r9
9001ae20:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ae24:	b2bf      	uxth	r7, r7
9001ae26:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ae2a:	fa5f fe8e 	uxtb.w	lr, lr
9001ae2e:	fb06 a602 	mla	r6, r6, r2, sl
9001ae32:	fb0e 5502 	mla	r5, lr, r2, r5
9001ae36:	1c7a      	adds	r2, r7, #1
9001ae38:	b2b6      	uxth	r6, r6
9001ae3a:	b2ad      	uxth	r5, r5
9001ae3c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ae40:	f105 0a01 	add.w	sl, r5, #1
9001ae44:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ae48:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ae4c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ae50:	ea4a 0707 	orr.w	r7, sl, r7
9001ae54:	f106 0a01 	add.w	sl, r6, #1
9001ae58:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ae5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ae60:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ae64:	ea47 070a 	orr.w	r7, r7, sl
9001ae68:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001ae6c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ae6e:	f108 0801 	add.w	r8, r8, #1
9001ae72:	4410      	add	r0, r2
9001ae74:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ae76:	4411      	add	r1, r2
9001ae78:	e7a1      	b.n	9001adbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001ae7a:	b007      	add	sp, #28
9001ae7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ae80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ae80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ae84:	b085      	sub	sp, #20
9001ae86:	468b      	mov	fp, r1
9001ae88:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ae8c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ae8e:	9203      	str	r2, [sp, #12]
9001ae90:	6841      	ldr	r1, [r0, #4]
9001ae92:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001ae96:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ae9a:	fb01 2404 	mla	r4, r1, r4, r2
9001ae9e:	6802      	ldr	r2, [r0, #0]
9001aea0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001aea4:	f8de 2000 	ldr.w	r2, [lr]
9001aea8:	9200      	str	r2, [sp, #0]
9001aeaa:	f8de 2004 	ldr.w	r2, [lr, #4]
9001aeae:	3204      	adds	r2, #4
9001aeb0:	9201      	str	r2, [sp, #4]
9001aeb2:	f1bb 0f00 	cmp.w	fp, #0
9001aeb6:	dc03      	bgt.n	9001aec0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001aeb8:	9a03      	ldr	r2, [sp, #12]
9001aeba:	2a00      	cmp	r2, #0
9001aebc:	f340 8153 	ble.w	9001b166 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001aec0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001aec2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001aec6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001aeca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001aecc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001aed0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001aed4:	2b00      	cmp	r3, #0
9001aed6:	dd0e      	ble.n	9001aef6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001aed8:	1408      	asrs	r0, r1, #16
9001aeda:	d405      	bmi.n	9001aee8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aedc:	42b8      	cmp	r0, r7
9001aede:	da03      	bge.n	9001aee8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aee0:	1410      	asrs	r0, r2, #16
9001aee2:	d401      	bmi.n	9001aee8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aee4:	42b0      	cmp	r0, r6
9001aee6:	db07      	blt.n	9001aef8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001aee8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001aeea:	3b01      	subs	r3, #1
9001aeec:	3402      	adds	r4, #2
9001aeee:	4401      	add	r1, r0
9001aef0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001aef2:	4402      	add	r2, r0
9001aef4:	e7ee      	b.n	9001aed4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001aef6:	d017      	beq.n	9001af28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001aef8:	1e58      	subs	r0, r3, #1
9001aefa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001aefc:	fb05 1500 	mla	r5, r5, r0, r1
9001af00:	142d      	asrs	r5, r5, #16
9001af02:	d409      	bmi.n	9001af18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001af04:	42bd      	cmp	r5, r7
9001af06:	da07      	bge.n	9001af18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001af08:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001af0a:	fb05 2000 	mla	r0, r5, r0, r2
9001af0e:	1400      	asrs	r0, r0, #16
9001af10:	d402      	bmi.n	9001af18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001af12:	42b0      	cmp	r0, r6
9001af14:	f2c0 80bc 	blt.w	9001b090 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001af18:	2600      	movs	r6, #0
9001af1a:	1998      	adds	r0, r3, r6
9001af1c:	2800      	cmp	r0, #0
9001af1e:	dc3e      	bgt.n	9001af9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001af20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001af24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001af28:	f1bb 0f00 	cmp.w	fp, #0
9001af2c:	f340 811b 	ble.w	9001b166 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001af30:	ee30 0a04 	vadd.f32	s0, s0, s8
9001af34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001af36:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001af3a:	f1bb 0b01 	subs.w	fp, fp, #1
9001af3e:	eeb0 6a62 	vmov.f32	s12, s5
9001af42:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001af46:	ee31 1a05 	vadd.f32	s2, s2, s10
9001af4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001af4e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001af52:	eeb0 6a43 	vmov.f32	s12, s6
9001af56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001af5a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001af5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001af62:	ee61 7a27 	vmul.f32	s15, s2, s15
9001af66:	ee77 2a62 	vsub.f32	s5, s14, s5
9001af6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001af6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001af72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001af76:	ee12 2a90 	vmov	r2, s5
9001af7a:	eef0 2a47 	vmov.f32	s5, s14
9001af7e:	fb92 f3f3 	sdiv	r3, r2, r3
9001af82:	ee13 2a10 	vmov	r2, s6
9001af86:	9311      	str	r3, [sp, #68]	@ 0x44
9001af88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001af8a:	eeb0 3a67 	vmov.f32	s6, s15
9001af8e:	fb92 f3f3 	sdiv	r3, r2, r3
9001af92:	9a03      	ldr	r2, [sp, #12]
9001af94:	9312      	str	r3, [sp, #72]	@ 0x48
9001af96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001af98:	bf08      	it	eq
9001af9a:	4613      	moveq	r3, r2
9001af9c:	e789      	b.n	9001aeb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001af9e:	140f      	asrs	r7, r1, #16
9001afa0:	d426      	bmi.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001afa2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001afa6:	42bd      	cmp	r5, r7
9001afa8:	dd22      	ble.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001afaa:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001afae:	d41f      	bmi.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001afb0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001afb4:	4560      	cmp	r0, ip
9001afb6:	dd1b      	ble.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001afb8:	9800      	ldr	r0, [sp, #0]
9001afba:	b22d      	sxth	r5, r5
9001afbc:	fb0c 0505 	mla	r5, ip, r5, r0
9001afc0:	5de8      	ldrb	r0, [r5, r7]
9001afc2:	9d01      	ldr	r5, [sp, #4]
9001afc4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001afc8:	0e07      	lsrs	r7, r0, #24
9001afca:	2fff      	cmp	r7, #255	@ 0xff
9001afcc:	d116      	bne.n	9001affc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001afce:	f06f 0501 	mvn.w	r5, #1
9001afd2:	fb05 f706 	mul.w	r7, r5, r6
9001afd6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001afda:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001afde:	0945      	lsrs	r5, r0, #5
9001afe0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001afe4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001afe8:	ea4c 0505 	orr.w	r5, ip, r5
9001afec:	4305      	orrs	r5, r0
9001afee:	53e5      	strh	r5, [r4, r7]
9001aff0:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001aff2:	3e01      	subs	r6, #1
9001aff4:	4401      	add	r1, r0
9001aff6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001aff8:	4402      	add	r2, r0
9001affa:	e78e      	b.n	9001af1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001affc:	b2fd      	uxtb	r5, r7
9001affe:	2f00      	cmp	r7, #0
9001b000:	d0f6      	beq.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b002:	f06f 0701 	mvn.w	r7, #1
9001b006:	fa1f f985 	uxth.w	r9, r5
9001b00a:	43ed      	mvns	r5, r5
9001b00c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b010:	4377      	muls	r7, r6
9001b012:	fb1a fa09 	smulbb	sl, sl, r9
9001b016:	b2ed      	uxtb	r5, r5
9001b018:	f834 8007 	ldrh.w	r8, [r4, r7]
9001b01c:	9702      	str	r7, [sp, #8]
9001b01e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b022:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b026:	fb17 f709 	smulbb	r7, r7, r9
9001b02a:	b2c0      	uxtb	r0, r0
9001b02c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b030:	fb10 f009 	smulbb	r0, r0, r9
9001b034:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b038:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001b03c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b040:	fa1f fc8c 	uxth.w	ip, ip
9001b044:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b048:	fa5f f888 	uxtb.w	r8, r8
9001b04c:	fb07 a705 	mla	r7, r7, r5, sl
9001b050:	fb08 0005 	mla	r0, r8, r5, r0
9001b054:	f10c 0501 	add.w	r5, ip, #1
9001b058:	b2bf      	uxth	r7, r7
9001b05a:	b280      	uxth	r0, r0
9001b05c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b060:	f100 0a01 	add.w	sl, r0, #1
9001b064:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b068:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b06c:	9802      	ldr	r0, [sp, #8]
9001b06e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b072:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b076:	f107 0a01 	add.w	sl, r7, #1
9001b07a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b07e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b082:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b086:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b08a:	f824 c000 	strh.w	ip, [r4, r0]
9001b08e:	e7af      	b.n	9001aff0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b090:	f04f 0800 	mov.w	r8, #0
9001b094:	eba3 0008 	sub.w	r0, r3, r8
9001b098:	2800      	cmp	r0, #0
9001b09a:	f77f af41 	ble.w	9001af20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b09e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b0a2:	1410      	asrs	r0, r2, #16
9001b0a4:	9f00      	ldr	r7, [sp, #0]
9001b0a6:	140d      	asrs	r5, r1, #16
9001b0a8:	fb06 7000 	mla	r0, r6, r0, r7
9001b0ac:	5d40      	ldrb	r0, [r0, r5]
9001b0ae:	9d01      	ldr	r5, [sp, #4]
9001b0b0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b0b4:	0e2e      	lsrs	r6, r5, #24
9001b0b6:	2eff      	cmp	r6, #255	@ 0xff
9001b0b8:	d112      	bne.n	9001b0e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001b0ba:	482c      	ldr	r0, [pc, #176]	@ (9001b16c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001b0bc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b0c0:	0968      	lsrs	r0, r5, #5
9001b0c2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b0c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001b0ca:	4330      	orrs	r0, r6
9001b0cc:	4328      	orrs	r0, r5
9001b0ce:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001b0d2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b0d4:	f108 0801 	add.w	r8, r8, #1
9001b0d8:	4401      	add	r1, r0
9001b0da:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b0dc:	4402      	add	r2, r0
9001b0de:	e7d9      	b.n	9001b094 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b0e0:	b2f0      	uxtb	r0, r6
9001b0e2:	2e00      	cmp	r6, #0
9001b0e4:	d0f5      	beq.n	9001b0d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b0e6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001b0ea:	fa1f f980 	uxth.w	r9, r0
9001b0ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b0f2:	43c0      	mvns	r0, r0
9001b0f4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b0f8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b0fc:	fb16 f609 	smulbb	r6, r6, r9
9001b100:	b2c0      	uxtb	r0, r0
9001b102:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b106:	b2ed      	uxtb	r5, r5
9001b108:	fb1a fa09 	smulbb	sl, sl, r9
9001b10c:	fb07 6700 	mla	r7, r7, r0, r6
9001b110:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b114:	fb15 f509 	smulbb	r5, r5, r9
9001b118:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b11c:	b2bf      	uxth	r7, r7
9001b11e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b122:	fa5f fc8c 	uxtb.w	ip, ip
9001b126:	fb06 a600 	mla	r6, r6, r0, sl
9001b12a:	fb0c 5500 	mla	r5, ip, r0, r5
9001b12e:	1c78      	adds	r0, r7, #1
9001b130:	b2b6      	uxth	r6, r6
9001b132:	b2ad      	uxth	r5, r5
9001b134:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b138:	f105 0a01 	add.w	sl, r5, #1
9001b13c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b140:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b144:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b148:	ea4a 0707 	orr.w	r7, sl, r7
9001b14c:	f106 0a01 	add.w	sl, r6, #1
9001b150:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b154:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b158:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b15c:	ea47 070a 	orr.w	r7, r7, sl
9001b160:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b164:	e7b5      	b.n	9001b0d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b166:	b005      	add	sp, #20
9001b168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b16c:	fffff800 	.word	0xfffff800

9001b170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b174:	b087      	sub	sp, #28
9001b176:	468b      	mov	fp, r1
9001b178:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b17c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b17e:	9204      	str	r2, [sp, #16]
9001b180:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b184:	6861      	ldr	r1, [r4, #4]
9001b186:	9205      	str	r2, [sp, #20]
9001b188:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b18c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b190:	fb01 2000 	mla	r0, r1, r0, r2
9001b194:	6822      	ldr	r2, [r4, #0]
9001b196:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b19a:	f8de 2000 	ldr.w	r2, [lr]
9001b19e:	9201      	str	r2, [sp, #4]
9001b1a0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b1a4:	9202      	str	r2, [sp, #8]
9001b1a6:	f1bb 0f00 	cmp.w	fp, #0
9001b1aa:	dc03      	bgt.n	9001b1b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001b1ac:	9a04      	ldr	r2, [sp, #16]
9001b1ae:	2a00      	cmp	r2, #0
9001b1b0:	f340 8142 	ble.w	9001b438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b1b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b1b6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b1ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b1be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b1c0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b1c4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b1c8:	2b00      	cmp	r3, #0
9001b1ca:	dd0e      	ble.n	9001b1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b1cc:	140c      	asrs	r4, r1, #16
9001b1ce:	d405      	bmi.n	9001b1dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b1d0:	42bc      	cmp	r4, r7
9001b1d2:	da03      	bge.n	9001b1dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b1d4:	1414      	asrs	r4, r2, #16
9001b1d6:	d401      	bmi.n	9001b1dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b1d8:	42b4      	cmp	r4, r6
9001b1da:	db07      	blt.n	9001b1ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b1dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b1de:	3b01      	subs	r3, #1
9001b1e0:	3002      	adds	r0, #2
9001b1e2:	4421      	add	r1, r4
9001b1e4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b1e6:	4422      	add	r2, r4
9001b1e8:	e7ee      	b.n	9001b1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001b1ea:	d019      	beq.n	9001b220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b1ec:	1e5c      	subs	r4, r3, #1
9001b1ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b1f0:	fb05 1504 	mla	r5, r5, r4, r1
9001b1f4:	142d      	asrs	r5, r5, #16
9001b1f6:	d409      	bmi.n	9001b20c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b1f8:	42bd      	cmp	r5, r7
9001b1fa:	da07      	bge.n	9001b20c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b1fc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b1fe:	fb05 2404 	mla	r4, r5, r4, r2
9001b202:	1424      	asrs	r4, r4, #16
9001b204:	d402      	bmi.n	9001b20c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b206:	42b4      	cmp	r4, r6
9001b208:	f2c0 80b1 	blt.w	9001b36e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001b20c:	f04f 0800 	mov.w	r8, #0
9001b210:	eb03 0408 	add.w	r4, r3, r8
9001b214:	2c00      	cmp	r4, #0
9001b216:	dc3e      	bgt.n	9001b296 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001b218:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b21c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b220:	f1bb 0f00 	cmp.w	fp, #0
9001b224:	f340 8108 	ble.w	9001b438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b228:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b22c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b22e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b232:	f1bb 0b01 	subs.w	fp, fp, #1
9001b236:	eeb0 6a62 	vmov.f32	s12, s5
9001b23a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b23e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b242:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b246:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b24a:	eeb0 6a43 	vmov.f32	s12, s6
9001b24e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b252:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b256:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b25a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b25e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b262:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b266:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b26a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b26e:	ee12 2a90 	vmov	r2, s5
9001b272:	eef0 2a47 	vmov.f32	s5, s14
9001b276:	fb92 f3f3 	sdiv	r3, r2, r3
9001b27a:	ee13 2a10 	vmov	r2, s6
9001b27e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b280:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b282:	eeb0 3a67 	vmov.f32	s6, s15
9001b286:	fb92 f3f3 	sdiv	r3, r2, r3
9001b28a:	9a04      	ldr	r2, [sp, #16]
9001b28c:	9314      	str	r3, [sp, #80]	@ 0x50
9001b28e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b290:	bf08      	it	eq
9001b292:	4613      	moveq	r3, r2
9001b294:	e787      	b.n	9001b1a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001b296:	140e      	asrs	r6, r1, #16
9001b298:	d462      	bmi.n	9001b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b29a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b29e:	42b5      	cmp	r5, r6
9001b2a0:	dd5e      	ble.n	9001b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b2a2:	1417      	asrs	r7, r2, #16
9001b2a4:	d45c      	bmi.n	9001b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b2a6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001b2aa:	42bc      	cmp	r4, r7
9001b2ac:	dd58      	ble.n	9001b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b2ae:	b22d      	sxth	r5, r5
9001b2b0:	9c02      	ldr	r4, [sp, #8]
9001b2b2:	fb07 6505 	mla	r5, r7, r5, r6
9001b2b6:	5d66      	ldrb	r6, [r4, r5]
9001b2b8:	2e00      	cmp	r6, #0
9001b2ba:	d051      	beq.n	9001b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b2bc:	9c01      	ldr	r4, [sp, #4]
9001b2be:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001b2c2:	f06f 0401 	mvn.w	r4, #1
9001b2c6:	fb04 f408 	mul.w	r4, r4, r8
9001b2ca:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001b2ce:	5b05      	ldrh	r5, [r0, r4]
9001b2d0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b2d4:	9403      	str	r4, [sp, #12]
9001b2d6:	9c05      	ldr	r4, [sp, #20]
9001b2d8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b2dc:	4366      	muls	r6, r4
9001b2de:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b2e2:	1c74      	adds	r4, r6, #1
9001b2e4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b2e8:	122e      	asrs	r6, r5, #8
9001b2ea:	1224      	asrs	r4, r4, #8
9001b2ec:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b2f0:	00ed      	lsls	r5, r5, #3
9001b2f2:	b2a7      	uxth	r7, r4
9001b2f4:	43e4      	mvns	r4, r4
9001b2f6:	b2ed      	uxtb	r5, r5
9001b2f8:	b2e4      	uxtb	r4, r4
9001b2fa:	fb16 f604 	smulbb	r6, r6, r4
9001b2fe:	fb15 f504 	smulbb	r5, r5, r4
9001b302:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b306:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001b30a:	fb1a fa04 	smulbb	sl, sl, r4
9001b30e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b312:	fa1f fc8c 	uxth.w	ip, ip
9001b316:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b31a:	fa5f f989 	uxtb.w	r9, r9
9001b31e:	fb06 a607 	mla	r6, r6, r7, sl
9001b322:	f10c 0401 	add.w	r4, ip, #1
9001b326:	fb09 5507 	mla	r5, r9, r7, r5
9001b32a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b32e:	9c03      	ldr	r4, [sp, #12]
9001b330:	b2ad      	uxth	r5, r5
9001b332:	b2b6      	uxth	r6, r6
9001b334:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b338:	f105 0a01 	add.w	sl, r5, #1
9001b33c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b340:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b344:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b348:	f106 0a01 	add.w	sl, r6, #1
9001b34c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b350:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b354:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b358:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b35c:	f820 c004 	strh.w	ip, [r0, r4]
9001b360:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b362:	f108 38ff 	add.w	r8, r8, #4294967295
9001b366:	4421      	add	r1, r4
9001b368:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b36a:	4422      	add	r2, r4
9001b36c:	e750      	b.n	9001b210 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b36e:	f04f 0900 	mov.w	r9, #0
9001b372:	eba3 0409 	sub.w	r4, r3, r9
9001b376:	2c00      	cmp	r4, #0
9001b378:	f77f af4e 	ble.w	9001b218 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b37c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b380:	140d      	asrs	r5, r1, #16
9001b382:	1414      	asrs	r4, r2, #16
9001b384:	fb06 5404 	mla	r4, r6, r4, r5
9001b388:	9d02      	ldr	r5, [sp, #8]
9001b38a:	5d2e      	ldrb	r6, [r5, r4]
9001b38c:	2e00      	cmp	r6, #0
9001b38e:	d04c      	beq.n	9001b42a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001b390:	9d01      	ldr	r5, [sp, #4]
9001b392:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001b396:	9c05      	ldr	r4, [sp, #20]
9001b398:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b39c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b3a0:	4366      	muls	r6, r4
9001b3a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b3a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b3aa:	1c74      	adds	r4, r6, #1
9001b3ac:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b3b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b3b4:	122e      	asrs	r6, r5, #8
9001b3b6:	1224      	asrs	r4, r4, #8
9001b3b8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b3bc:	00ed      	lsls	r5, r5, #3
9001b3be:	b2a7      	uxth	r7, r4
9001b3c0:	43e4      	mvns	r4, r4
9001b3c2:	b2ed      	uxtb	r5, r5
9001b3c4:	b2e4      	uxtb	r4, r4
9001b3c6:	fb16 f604 	smulbb	r6, r6, r4
9001b3ca:	fb15 f504 	smulbb	r5, r5, r4
9001b3ce:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b3d2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b3d6:	fb1a fa04 	smulbb	sl, sl, r4
9001b3da:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b3de:	fa1f fc8c 	uxth.w	ip, ip
9001b3e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b3e6:	fa5f f888 	uxtb.w	r8, r8
9001b3ea:	fb06 a607 	mla	r6, r6, r7, sl
9001b3ee:	f10c 0401 	add.w	r4, ip, #1
9001b3f2:	fb08 5507 	mla	r5, r8, r7, r5
9001b3f6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b3fa:	b2ad      	uxth	r5, r5
9001b3fc:	b2b6      	uxth	r6, r6
9001b3fe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b402:	f105 0a01 	add.w	sl, r5, #1
9001b406:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b40a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b40e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b412:	f106 0a01 	add.w	sl, r6, #1
9001b416:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b41a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b41e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b422:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b426:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b42a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b42c:	f109 0901 	add.w	r9, r9, #1
9001b430:	4421      	add	r1, r4
9001b432:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b434:	4422      	add	r2, r4
9001b436:	e79c      	b.n	9001b372 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001b438:	b007      	add	sp, #28
9001b43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b43e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b43e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b442:	b085      	sub	sp, #20
9001b444:	468b      	mov	fp, r1
9001b446:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b44a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b44c:	9203      	str	r2, [sp, #12]
9001b44e:	6861      	ldr	r1, [r4, #4]
9001b450:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001b454:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001b458:	fb01 2000 	mla	r0, r1, r0, r2
9001b45c:	6822      	ldr	r2, [r4, #0]
9001b45e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b462:	f8d8 2000 	ldr.w	r2, [r8]
9001b466:	9200      	str	r2, [sp, #0]
9001b468:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001b46c:	9201      	str	r2, [sp, #4]
9001b46e:	f1bb 0f00 	cmp.w	fp, #0
9001b472:	dc03      	bgt.n	9001b47c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b474:	9a03      	ldr	r2, [sp, #12]
9001b476:	2a00      	cmp	r2, #0
9001b478:	f340 8146 	ble.w	9001b708 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b47c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b47e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b482:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b486:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b488:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b48c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b490:	2b00      	cmp	r3, #0
9001b492:	dd0e      	ble.n	9001b4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b494:	140c      	asrs	r4, r1, #16
9001b496:	d405      	bmi.n	9001b4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b498:	42bc      	cmp	r4, r7
9001b49a:	da03      	bge.n	9001b4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b49c:	1414      	asrs	r4, r2, #16
9001b49e:	d401      	bmi.n	9001b4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b4a0:	42b4      	cmp	r4, r6
9001b4a2:	db07      	blt.n	9001b4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b4a4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b4a6:	3b01      	subs	r3, #1
9001b4a8:	3002      	adds	r0, #2
9001b4aa:	4421      	add	r1, r4
9001b4ac:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b4ae:	4422      	add	r2, r4
9001b4b0:	e7ee      	b.n	9001b490 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b4b2:	d017      	beq.n	9001b4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b4b4:	1e5c      	subs	r4, r3, #1
9001b4b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b4b8:	fb05 1504 	mla	r5, r5, r4, r1
9001b4bc:	142d      	asrs	r5, r5, #16
9001b4be:	d409      	bmi.n	9001b4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4c0:	42bd      	cmp	r5, r7
9001b4c2:	da07      	bge.n	9001b4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4c4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b4c6:	fb05 2404 	mla	r4, r5, r4, r2
9001b4ca:	1424      	asrs	r4, r4, #16
9001b4cc:	d402      	bmi.n	9001b4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4ce:	42b4      	cmp	r4, r6
9001b4d0:	f2c0 80b3 	blt.w	9001b63a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001b4d4:	2600      	movs	r6, #0
9001b4d6:	199c      	adds	r4, r3, r6
9001b4d8:	2c00      	cmp	r4, #0
9001b4da:	dc3e      	bgt.n	9001b55a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b4dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b4e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b4e4:	f1bb 0f00 	cmp.w	fp, #0
9001b4e8:	f340 810e 	ble.w	9001b708 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b4ec:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b4f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b4f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b4f6:	f1bb 0b01 	subs.w	fp, fp, #1
9001b4fa:	eeb0 6a62 	vmov.f32	s12, s5
9001b4fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b502:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b506:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b50a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b50e:	eeb0 6a43 	vmov.f32	s12, s6
9001b512:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b516:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b51a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b51e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b522:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b526:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b52a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b52e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b532:	ee12 2a90 	vmov	r2, s5
9001b536:	eef0 2a47 	vmov.f32	s5, s14
9001b53a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b53e:	ee13 2a10 	vmov	r2, s6
9001b542:	9311      	str	r3, [sp, #68]	@ 0x44
9001b544:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b546:	eeb0 3a67 	vmov.f32	s6, s15
9001b54a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b54e:	9a03      	ldr	r2, [sp, #12]
9001b550:	9312      	str	r3, [sp, #72]	@ 0x48
9001b552:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b554:	bf08      	it	eq
9001b556:	4613      	moveq	r3, r2
9001b558:	e789      	b.n	9001b46e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b55a:	140f      	asrs	r7, r1, #16
9001b55c:	d418      	bmi.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b55e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b562:	42bd      	cmp	r5, r7
9001b564:	dd14      	ble.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b566:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b56a:	d411      	bmi.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b56c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001b570:	4564      	cmp	r4, ip
9001b572:	dd0d      	ble.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b574:	b22d      	sxth	r5, r5
9001b576:	9c01      	ldr	r4, [sp, #4]
9001b578:	fb0c 7505 	mla	r5, ip, r5, r7
9001b57c:	5d64      	ldrb	r4, [r4, r5]
9001b57e:	2cff      	cmp	r4, #255	@ 0xff
9001b580:	d10c      	bne.n	9001b59c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b582:	9c00      	ldr	r4, [sp, #0]
9001b584:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001b588:	f06f 0401 	mvn.w	r4, #1
9001b58c:	4374      	muls	r4, r6
9001b58e:	5305      	strh	r5, [r0, r4]
9001b590:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b592:	3e01      	subs	r6, #1
9001b594:	4421      	add	r1, r4
9001b596:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b598:	4422      	add	r2, r4
9001b59a:	e79c      	b.n	9001b4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b59c:	2c00      	cmp	r4, #0
9001b59e:	d0f7      	beq.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b5a0:	9f00      	ldr	r7, [sp, #0]
9001b5a2:	fa1f fc84 	uxth.w	ip, r4
9001b5a6:	43e4      	mvns	r4, r4
9001b5a8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001b5ac:	f06f 0501 	mvn.w	r5, #1
9001b5b0:	b2e4      	uxtb	r4, r4
9001b5b2:	4375      	muls	r5, r6
9001b5b4:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001b5b8:	9502      	str	r5, [sp, #8]
9001b5ba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001b5be:	5b45      	ldrh	r5, [r0, r5]
9001b5c0:	122f      	asrs	r7, r5, #8
9001b5c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b5c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b5ca:	00ed      	lsls	r5, r5, #3
9001b5cc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b5d0:	fb17 f704 	smulbb	r7, r7, r4
9001b5d4:	b2ed      	uxtb	r5, r5
9001b5d6:	fb1a fa04 	smulbb	sl, sl, r4
9001b5da:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001b5de:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001b5e2:	fb15 f504 	smulbb	r5, r5, r4
9001b5e6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b5ea:	fa1f fe8e 	uxth.w	lr, lr
9001b5ee:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b5f2:	fa5f f989 	uxtb.w	r9, r9
9001b5f6:	fb07 a70c 	mla	r7, r7, ip, sl
9001b5fa:	f10e 0401 	add.w	r4, lr, #1
9001b5fe:	fb09 550c 	mla	r5, r9, ip, r5
9001b602:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001b606:	9c02      	ldr	r4, [sp, #8]
9001b608:	b2ad      	uxth	r5, r5
9001b60a:	b2bf      	uxth	r7, r7
9001b60c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001b610:	f105 0a01 	add.w	sl, r5, #1
9001b614:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b618:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b61c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001b620:	f107 0a01 	add.w	sl, r7, #1
9001b624:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b628:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b62c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b630:	ea4e 0e0a 	orr.w	lr, lr, sl
9001b634:	f820 e004 	strh.w	lr, [r0, r4]
9001b638:	e7aa      	b.n	9001b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b63a:	f04f 0900 	mov.w	r9, #0
9001b63e:	eba3 0409 	sub.w	r4, r3, r9
9001b642:	2c00      	cmp	r4, #0
9001b644:	f77f af4a 	ble.w	9001b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b648:	1414      	asrs	r4, r2, #16
9001b64a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b64e:	140d      	asrs	r5, r1, #16
9001b650:	fb06 5504 	mla	r5, r6, r4, r5
9001b654:	9c01      	ldr	r4, [sp, #4]
9001b656:	5d64      	ldrb	r4, [r4, r5]
9001b658:	2cff      	cmp	r4, #255	@ 0xff
9001b65a:	d10b      	bne.n	9001b674 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b65c:	9c00      	ldr	r4, [sp, #0]
9001b65e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001b662:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001b666:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b668:	f109 0901 	add.w	r9, r9, #1
9001b66c:	4421      	add	r1, r4
9001b66e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b670:	4422      	add	r2, r4
9001b672:	e7e4      	b.n	9001b63e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001b674:	2c00      	cmp	r4, #0
9001b676:	d0f6      	beq.n	9001b666 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b678:	9e00      	ldr	r6, [sp, #0]
9001b67a:	b2a7      	uxth	r7, r4
9001b67c:	43e4      	mvns	r4, r4
9001b67e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001b682:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b686:	b2e4      	uxtb	r4, r4
9001b688:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b68c:	122e      	asrs	r6, r5, #8
9001b68e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b692:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b696:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b69a:	00ed      	lsls	r5, r5, #3
9001b69c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b6a0:	fb16 f604 	smulbb	r6, r6, r4
9001b6a4:	b2ed      	uxtb	r5, r5
9001b6a6:	fb1a fa04 	smulbb	sl, sl, r4
9001b6aa:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b6ae:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b6b2:	fb15 f504 	smulbb	r5, r5, r4
9001b6b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b6ba:	fa1f fc8c 	uxth.w	ip, ip
9001b6be:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b6c2:	fa5f fe8e 	uxtb.w	lr, lr
9001b6c6:	fb06 a607 	mla	r6, r6, r7, sl
9001b6ca:	f10c 0401 	add.w	r4, ip, #1
9001b6ce:	fb0e 5507 	mla	r5, lr, r7, r5
9001b6d2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b6d6:	b2ad      	uxth	r5, r5
9001b6d8:	b2b6      	uxth	r6, r6
9001b6da:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b6de:	f105 0a01 	add.w	sl, r5, #1
9001b6e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b6e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b6ea:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b6ee:	f106 0a01 	add.w	sl, r6, #1
9001b6f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b6f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b6fa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b6fe:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b702:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b706:	e7ae      	b.n	9001b666 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b708:	b005      	add	sp, #20
9001b70a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b70e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b70e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b712:	b085      	sub	sp, #20
9001b714:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b716:	9203      	str	r2, [sp, #12]
9001b718:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001b71c:	9100      	str	r1, [sp, #0]
9001b71e:	9201      	str	r2, [sp, #4]
9001b720:	6841      	ldr	r1, [r0, #4]
9001b722:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001b726:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b72a:	fb01 2404 	mla	r4, r1, r4, r2
9001b72e:	6802      	ldr	r2, [r0, #0]
9001b730:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b734:	f8de 2000 	ldr.w	r2, [lr]
9001b738:	9202      	str	r2, [sp, #8]
9001b73a:	9a01      	ldr	r2, [sp, #4]
9001b73c:	43d6      	mvns	r6, r2
9001b73e:	b2f6      	uxtb	r6, r6
9001b740:	9a00      	ldr	r2, [sp, #0]
9001b742:	2a00      	cmp	r2, #0
9001b744:	dc03      	bgt.n	9001b74e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b746:	9a03      	ldr	r2, [sp, #12]
9001b748:	2a00      	cmp	r2, #0
9001b74a:	f340 8124 	ble.w	9001b996 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b74e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b750:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b754:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b758:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b75a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b75e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b762:	2b00      	cmp	r3, #0
9001b764:	dd0e      	ble.n	9001b784 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b766:	1408      	asrs	r0, r1, #16
9001b768:	d405      	bmi.n	9001b776 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b76a:	4560      	cmp	r0, ip
9001b76c:	da03      	bge.n	9001b776 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b76e:	1410      	asrs	r0, r2, #16
9001b770:	d401      	bmi.n	9001b776 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b772:	42b8      	cmp	r0, r7
9001b774:	db07      	blt.n	9001b786 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b776:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b778:	3b01      	subs	r3, #1
9001b77a:	3402      	adds	r4, #2
9001b77c:	4401      	add	r1, r0
9001b77e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b780:	4402      	add	r2, r0
9001b782:	e7ee      	b.n	9001b762 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b784:	d06e      	beq.n	9001b864 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b786:	1e58      	subs	r0, r3, #1
9001b788:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b78a:	fb05 1500 	mla	r5, r5, r0, r1
9001b78e:	142d      	asrs	r5, r5, #16
9001b790:	d45c      	bmi.n	9001b84c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b792:	4565      	cmp	r5, ip
9001b794:	da5a      	bge.n	9001b84c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b796:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b798:	fb05 2000 	mla	r0, r5, r0, r2
9001b79c:	1400      	asrs	r0, r0, #16
9001b79e:	d455      	bmi.n	9001b84c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b7a0:	42b8      	cmp	r0, r7
9001b7a2:	da53      	bge.n	9001b84c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b7a4:	4699      	mov	r9, r3
9001b7a6:	46a2      	mov	sl, r4
9001b7a8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001b7ac:	f1b9 0f00 	cmp.w	r9, #0
9001b7b0:	dd54      	ble.n	9001b85c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b7b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b7b6:	140d      	asrs	r5, r1, #16
9001b7b8:	1410      	asrs	r0, r2, #16
9001b7ba:	f109 39ff 	add.w	r9, r9, #4294967295
9001b7be:	fb07 5000 	mla	r0, r7, r0, r5
9001b7c2:	9d02      	ldr	r5, [sp, #8]
9001b7c4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b7c8:	f8ba 5000 	ldrh.w	r5, [sl]
9001b7cc:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b7d0:	122f      	asrs	r7, r5, #8
9001b7d2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b7d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b7da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b7de:	00ed      	lsls	r5, r5, #3
9001b7e0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001b7e4:	fb17 f706 	smulbb	r7, r7, r6
9001b7e8:	b2ed      	uxtb	r5, r5
9001b7ea:	fb18 f806 	smulbb	r8, r8, r6
9001b7ee:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b7f2:	10c7      	asrs	r7, r0, #3
9001b7f4:	fb15 f506 	smulbb	r5, r5, r6
9001b7f8:	00c0      	lsls	r0, r0, #3
9001b7fa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b7fe:	fa1f fc8c 	uxth.w	ip, ip
9001b802:	b2c0      	uxtb	r0, r0
9001b804:	fb07 870b 	mla	r7, r7, fp, r8
9001b808:	fb00 500b 	mla	r0, r0, fp, r5
9001b80c:	f10c 0501 	add.w	r5, ip, #1
9001b810:	b2bf      	uxth	r7, r7
9001b812:	b280      	uxth	r0, r0
9001b814:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b818:	f107 0801 	add.w	r8, r7, #1
9001b81c:	1c45      	adds	r5, r0, #1
9001b81e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b822:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b826:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b82a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b82c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b830:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b834:	4401      	add	r1, r0
9001b836:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001b83a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b83c:	ea45 0c0c 	orr.w	ip, r5, ip
9001b840:	4402      	add	r2, r0
9001b842:	ea4c 0c08 	orr.w	ip, ip, r8
9001b846:	f82a cb02 	strh.w	ip, [sl], #2
9001b84a:	e7af      	b.n	9001b7ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b84c:	f04f 0800 	mov.w	r8, #0
9001b850:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001b854:	eb03 0008 	add.w	r0, r3, r8
9001b858:	2800      	cmp	r0, #0
9001b85a:	dc41      	bgt.n	9001b8e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001b85c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b860:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b864:	9b00      	ldr	r3, [sp, #0]
9001b866:	2b00      	cmp	r3, #0
9001b868:	f340 8095 	ble.w	9001b996 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b86c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b870:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b872:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b876:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b87a:	eef0 6a62 	vmov.f32	s13, s5
9001b87e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b882:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b886:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b88a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001b88e:	eef0 6a43 	vmov.f32	s13, s6
9001b892:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b896:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001b89a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b89e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b8a2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b8a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b8aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b8ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b8b2:	ee12 2a90 	vmov	r2, s5
9001b8b6:	eef0 2a47 	vmov.f32	s5, s14
9001b8ba:	fb92 f3f3 	sdiv	r3, r2, r3
9001b8be:	ee13 2a10 	vmov	r2, s6
9001b8c2:	9311      	str	r3, [sp, #68]	@ 0x44
9001b8c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b8c6:	eeb0 3a67 	vmov.f32	s6, s15
9001b8ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001b8ce:	9312      	str	r3, [sp, #72]	@ 0x48
9001b8d0:	9b00      	ldr	r3, [sp, #0]
9001b8d2:	9a03      	ldr	r2, [sp, #12]
9001b8d4:	3b01      	subs	r3, #1
9001b8d6:	9300      	str	r3, [sp, #0]
9001b8d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b8da:	bf08      	it	eq
9001b8dc:	4613      	moveq	r3, r2
9001b8de:	e72f      	b.n	9001b740 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b8e0:	140f      	asrs	r7, r1, #16
9001b8e2:	d451      	bmi.n	9001b988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b8e4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b8e8:	42bd      	cmp	r5, r7
9001b8ea:	dd4d      	ble.n	9001b988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b8ec:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b8f0:	d44a      	bmi.n	9001b988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b8f2:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b8f6:	4560      	cmp	r0, ip
9001b8f8:	dd46      	ble.n	9001b988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b8fa:	b22d      	sxth	r5, r5
9001b8fc:	9802      	ldr	r0, [sp, #8]
9001b8fe:	fb0c 7505 	mla	r5, ip, r5, r7
9001b902:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001b906:	f06f 0501 	mvn.w	r5, #1
9001b90a:	fb05 fb08 	mul.w	fp, r5, r8
9001b90e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b912:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b916:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b91a:	122f      	asrs	r7, r5, #8
9001b91c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b920:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b924:	00ed      	lsls	r5, r5, #3
9001b926:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b92a:	fb17 f706 	smulbb	r7, r7, r6
9001b92e:	b2ed      	uxtb	r5, r5
9001b930:	fb19 f906 	smulbb	r9, r9, r6
9001b934:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b938:	10c7      	asrs	r7, r0, #3
9001b93a:	fb15 f506 	smulbb	r5, r5, r6
9001b93e:	00c0      	lsls	r0, r0, #3
9001b940:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b944:	fa1f fc8c 	uxth.w	ip, ip
9001b948:	b2c0      	uxtb	r0, r0
9001b94a:	fb07 970a 	mla	r7, r7, sl, r9
9001b94e:	fb00 500a 	mla	r0, r0, sl, r5
9001b952:	f10c 0501 	add.w	r5, ip, #1
9001b956:	b2bf      	uxth	r7, r7
9001b958:	b280      	uxth	r0, r0
9001b95a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b95e:	f107 0901 	add.w	r9, r7, #1
9001b962:	1c45      	adds	r5, r0, #1
9001b964:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b968:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b96c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b970:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b974:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b978:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b97c:	ea45 0c0c 	orr.w	ip, r5, ip
9001b980:	ea4c 0c09 	orr.w	ip, ip, r9
9001b984:	f824 c00b 	strh.w	ip, [r4, fp]
9001b988:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b98a:	f108 38ff 	add.w	r8, r8, #4294967295
9001b98e:	4401      	add	r1, r0
9001b990:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b992:	4402      	add	r2, r0
9001b994:	e75e      	b.n	9001b854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001b996:	b005      	add	sp, #20
9001b998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b99c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b9a0:	b085      	sub	sp, #20
9001b9a2:	4693      	mov	fp, r2
9001b9a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b9a8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b9aa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b9ac:	6870      	ldr	r0, [r6, #4]
9001b9ae:	9101      	str	r1, [sp, #4]
9001b9b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b9b4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001b9b8:	fb00 2404 	mla	r4, r0, r4, r2
9001b9bc:	6832      	ldr	r2, [r6, #0]
9001b9be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b9c2:	682a      	ldr	r2, [r5, #0]
9001b9c4:	9202      	str	r2, [sp, #8]
9001b9c6:	9a01      	ldr	r2, [sp, #4]
9001b9c8:	2a00      	cmp	r2, #0
9001b9ca:	dc03      	bgt.n	9001b9d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b9cc:	f1bb 0f00 	cmp.w	fp, #0
9001b9d0:	f340 809a 	ble.w	9001bb08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b9d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b9d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b9da:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b9de:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b9e0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b9e4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b9e8:	2b00      	cmp	r3, #0
9001b9ea:	dd0c      	ble.n	9001ba06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001b9ec:	1406      	asrs	r6, r0, #16
9001b9ee:	d405      	bmi.n	9001b9fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b9f0:	454e      	cmp	r6, r9
9001b9f2:	da03      	bge.n	9001b9fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b9f4:	1416      	asrs	r6, r2, #16
9001b9f6:	d401      	bmi.n	9001b9fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b9f8:	4546      	cmp	r6, r8
9001b9fa:	db05      	blt.n	9001ba08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b9fc:	4470      	add	r0, lr
9001b9fe:	4462      	add	r2, ip
9001ba00:	3b01      	subs	r3, #1
9001ba02:	3402      	adds	r4, #2
9001ba04:	e7f0      	b.n	9001b9e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ba06:	d00f      	beq.n	9001ba28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ba08:	1e5e      	subs	r6, r3, #1
9001ba0a:	fb0e 0706 	mla	r7, lr, r6, r0
9001ba0e:	143f      	asrs	r7, r7, #16
9001ba10:	d541      	bpl.n	9001ba96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001ba12:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001ba16:	4698      	mov	r8, r3
9001ba18:	9603      	str	r6, [sp, #12]
9001ba1a:	f1b8 0f00 	cmp.w	r8, #0
9001ba1e:	dc56      	bgt.n	9001bace <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001ba20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ba24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ba28:	9b01      	ldr	r3, [sp, #4]
9001ba2a:	2b00      	cmp	r3, #0
9001ba2c:	dd6c      	ble.n	9001bb08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ba2e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ba32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ba34:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ba38:	eeb0 6a62 	vmov.f32	s12, s5
9001ba3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ba40:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ba44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ba48:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ba4c:	eeb0 6a43 	vmov.f32	s12, s6
9001ba50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ba54:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ba58:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ba5c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ba60:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ba64:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ba68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ba6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ba70:	ee12 2a90 	vmov	r2, s5
9001ba74:	eef0 2a47 	vmov.f32	s5, s14
9001ba78:	fb92 fef3 	sdiv	lr, r2, r3
9001ba7c:	ee13 2a10 	vmov	r2, s6
9001ba80:	eeb0 3a67 	vmov.f32	s6, s15
9001ba84:	fb92 fcf3 	sdiv	ip, r2, r3
9001ba88:	9b01      	ldr	r3, [sp, #4]
9001ba8a:	3b01      	subs	r3, #1
9001ba8c:	9301      	str	r3, [sp, #4]
9001ba8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ba90:	bf08      	it	eq
9001ba92:	465b      	moveq	r3, fp
9001ba94:	e797      	b.n	9001b9c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001ba96:	454f      	cmp	r7, r9
9001ba98:	dabb      	bge.n	9001ba12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ba9a:	fb0c 2606 	mla	r6, ip, r6, r2
9001ba9e:	1436      	asrs	r6, r6, #16
9001baa0:	d4b7      	bmi.n	9001ba12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001baa2:	4546      	cmp	r6, r8
9001baa4:	dab5      	bge.n	9001ba12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001baa6:	461e      	mov	r6, r3
9001baa8:	46a0      	mov	r8, r4
9001baaa:	2e00      	cmp	r6, #0
9001baac:	ddb8      	ble.n	9001ba20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001baae:	1417      	asrs	r7, r2, #16
9001bab0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001bab4:	ea4f 4920 	mov.w	r9, r0, asr #16
9001bab8:	9902      	ldr	r1, [sp, #8]
9001baba:	4470      	add	r0, lr
9001babc:	4462      	add	r2, ip
9001babe:	fb0a 9707 	mla	r7, sl, r7, r9
9001bac2:	3e01      	subs	r6, #1
9001bac4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001bac8:	f828 7b02 	strh.w	r7, [r8], #2
9001bacc:	e7ed      	b.n	9001baaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001bace:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bad2:	d414      	bmi.n	9001bafe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bad4:	68ae      	ldr	r6, [r5, #8]
9001bad6:	454e      	cmp	r6, r9
9001bad8:	dd11      	ble.n	9001bafe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bada:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001bade:	d40e      	bmi.n	9001bafe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bae0:	68ef      	ldr	r7, [r5, #12]
9001bae2:	4557      	cmp	r7, sl
9001bae4:	dd0b      	ble.n	9001bafe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001bae6:	b236      	sxth	r6, r6
9001bae8:	f06f 0101 	mvn.w	r1, #1
9001baec:	9f02      	ldr	r7, [sp, #8]
9001baee:	fb0a 9606 	mla	r6, sl, r6, r9
9001baf2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001baf6:	fb01 f608 	mul.w	r6, r1, r8
9001bafa:	9903      	ldr	r1, [sp, #12]
9001bafc:	538f      	strh	r7, [r1, r6]
9001bafe:	4470      	add	r0, lr
9001bb00:	4462      	add	r2, ip
9001bb02:	f108 38ff 	add.w	r8, r8, #4294967295
9001bb06:	e788      	b.n	9001ba1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bb08:	b005      	add	sp, #20
9001bb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bb0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb12:	b087      	sub	sp, #28
9001bb14:	468b      	mov	fp, r1
9001bb16:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bb1a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001bb1c:	9203      	str	r2, [sp, #12]
9001bb1e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001bb22:	6841      	ldr	r1, [r0, #4]
9001bb24:	9204      	str	r2, [sp, #16]
9001bb26:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001bb2a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001bb2e:	fb01 2505 	mla	r5, r1, r5, r2
9001bb32:	6802      	ldr	r2, [r0, #0]
9001bb34:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001bb38:	f8d9 2000 	ldr.w	r2, [r9]
9001bb3c:	9201      	str	r2, [sp, #4]
9001bb3e:	f1bb 0f00 	cmp.w	fp, #0
9001bb42:	dc03      	bgt.n	9001bb4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001bb44:	9a03      	ldr	r2, [sp, #12]
9001bb46:	2a00      	cmp	r2, #0
9001bb48:	f340 8158 	ble.w	9001bdfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001bb4c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001bb4e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001bb52:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001bb56:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bb58:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001bb5c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bb60:	2b00      	cmp	r3, #0
9001bb62:	dd0e      	ble.n	9001bb82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001bb64:	1402      	asrs	r2, r0, #16
9001bb66:	d405      	bmi.n	9001bb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bb68:	42ba      	cmp	r2, r7
9001bb6a:	da03      	bge.n	9001bb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bb6c:	140a      	asrs	r2, r1, #16
9001bb6e:	d401      	bmi.n	9001bb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bb70:	42b2      	cmp	r2, r6
9001bb72:	db07      	blt.n	9001bb84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bb74:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bb76:	3b01      	subs	r3, #1
9001bb78:	3502      	adds	r5, #2
9001bb7a:	4410      	add	r0, r2
9001bb7c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bb7e:	4411      	add	r1, r2
9001bb80:	e7ee      	b.n	9001bb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001bb82:	d017      	beq.n	9001bbb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001bb84:	1e5a      	subs	r2, r3, #1
9001bb86:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001bb88:	fb04 0402 	mla	r4, r4, r2, r0
9001bb8c:	1424      	asrs	r4, r4, #16
9001bb8e:	d409      	bmi.n	9001bba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bb90:	42bc      	cmp	r4, r7
9001bb92:	da07      	bge.n	9001bba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bb94:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bb96:	fb04 1202 	mla	r2, r4, r2, r1
9001bb9a:	1412      	asrs	r2, r2, #16
9001bb9c:	d402      	bmi.n	9001bba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bb9e:	42b2      	cmp	r2, r6
9001bba0:	f2c0 80bf 	blt.w	9001bd22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001bba4:	2700      	movs	r7, #0
9001bba6:	19da      	adds	r2, r3, r7
9001bba8:	2a00      	cmp	r2, #0
9001bbaa:	dc3e      	bgt.n	9001bc2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001bbac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bbb0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001bbb4:	f1bb 0f00 	cmp.w	fp, #0
9001bbb8:	f340 8120 	ble.w	9001bdfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001bbbc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bbc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bbc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bbc6:	f1bb 0b01 	subs.w	fp, fp, #1
9001bbca:	eeb0 6a62 	vmov.f32	s12, s5
9001bbce:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bbd2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bbd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bbda:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001bbde:	eeb0 6a43 	vmov.f32	s12, s6
9001bbe2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bbe6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001bbea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bbee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bbf2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bbf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bbfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bbfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bc02:	ee12 2a90 	vmov	r2, s5
9001bc06:	eef0 2a47 	vmov.f32	s5, s14
9001bc0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc0e:	ee13 2a10 	vmov	r2, s6
9001bc12:	9313      	str	r3, [sp, #76]	@ 0x4c
9001bc14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bc16:	eeb0 3a67 	vmov.f32	s6, s15
9001bc1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc1e:	9a03      	ldr	r2, [sp, #12]
9001bc20:	9314      	str	r3, [sp, #80]	@ 0x50
9001bc22:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bc24:	bf08      	it	eq
9001bc26:	4613      	moveq	r3, r2
9001bc28:	e789      	b.n	9001bb3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bc2a:	1406      	asrs	r6, r0, #16
9001bc2c:	d42d      	bmi.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc2e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001bc32:	42b4      	cmp	r4, r6
9001bc34:	dd29      	ble.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc36:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001bc3a:	d426      	bmi.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc3c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001bc40:	4562      	cmp	r2, ip
9001bc42:	dd22      	ble.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc44:	b224      	sxth	r4, r4
9001bc46:	9a01      	ldr	r2, [sp, #4]
9001bc48:	fb0c 6404 	mla	r4, ip, r4, r6
9001bc4c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001bc50:	0e22      	lsrs	r2, r4, #24
9001bc52:	d01a      	beq.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc54:	9e04      	ldr	r6, [sp, #16]
9001bc56:	4372      	muls	r2, r6
9001bc58:	1c56      	adds	r6, r2, #1
9001bc5a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001bc5e:	0a26      	lsrs	r6, r4, #8
9001bc60:	1212      	asrs	r2, r2, #8
9001bc62:	9605      	str	r6, [sp, #20]
9001bc64:	2aff      	cmp	r2, #255	@ 0xff
9001bc66:	d116      	bne.n	9001bc96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001bc68:	f06f 0201 	mvn.w	r2, #1
9001bc6c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001bc70:	fb02 fc07 	mul.w	ip, r2, r7
9001bc74:	0962      	lsrs	r2, r4, #5
9001bc76:	f026 0607 	bic.w	r6, r6, #7
9001bc7a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001bc7e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bc82:	4316      	orrs	r6, r2
9001bc84:	4326      	orrs	r6, r4
9001bc86:	f825 600c 	strh.w	r6, [r5, ip]
9001bc8a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bc8c:	3f01      	subs	r7, #1
9001bc8e:	4410      	add	r0, r2
9001bc90:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bc92:	4411      	add	r1, r2
9001bc94:	e787      	b.n	9001bba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc96:	f06f 0601 	mvn.w	r6, #1
9001bc9a:	fa1f fa82 	uxth.w	sl, r2
9001bc9e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001bca2:	43d2      	mvns	r2, r2
9001bca4:	437e      	muls	r6, r7
9001bca6:	b2e4      	uxtb	r4, r4
9001bca8:	fb1c fc0a 	smulbb	ip, ip, sl
9001bcac:	b2d2      	uxtb	r2, r2
9001bcae:	f835 8006 	ldrh.w	r8, [r5, r6]
9001bcb2:	fb14 f40a 	smulbb	r4, r4, sl
9001bcb6:	9602      	str	r6, [sp, #8]
9001bcb8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001bcbc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001bcc0:	fb16 f60a 	smulbb	r6, r6, sl
9001bcc4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001bcc8:	fb0e ce02 	mla	lr, lr, r2, ip
9001bccc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001bcd0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bcd4:	fa1f fe8e 	uxth.w	lr, lr
9001bcd8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001bcdc:	fa5f f888 	uxtb.w	r8, r8
9001bce0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001bce4:	fb08 4402 	mla	r4, r8, r2, r4
9001bce8:	f10e 0201 	add.w	r2, lr, #1
9001bcec:	fa1f fc8c 	uxth.w	ip, ip
9001bcf0:	b2a4      	uxth	r4, r4
9001bcf2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001bcf6:	9a02      	ldr	r2, [sp, #8]
9001bcf8:	1c66      	adds	r6, r4, #1
9001bcfa:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001bcfe:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bd02:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bd06:	ea46 0e0e 	orr.w	lr, r6, lr
9001bd0a:	f10c 0601 	add.w	r6, ip, #1
9001bd0e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001bd12:	0976      	lsrs	r6, r6, #5
9001bd14:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bd18:	ea4e 0e06 	orr.w	lr, lr, r6
9001bd1c:	f825 e002 	strh.w	lr, [r5, r2]
9001bd20:	e7b3      	b.n	9001bc8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bd22:	f04f 0800 	mov.w	r8, #0
9001bd26:	eba3 0208 	sub.w	r2, r3, r8
9001bd2a:	2a00      	cmp	r2, #0
9001bd2c:	f77f af3e 	ble.w	9001bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001bd30:	1404      	asrs	r4, r0, #16
9001bd32:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001bd36:	140a      	asrs	r2, r1, #16
9001bd38:	fb06 4202 	mla	r2, r6, r2, r4
9001bd3c:	9c01      	ldr	r4, [sp, #4]
9001bd3e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001bd42:	0e22      	lsrs	r2, r4, #24
9001bd44:	d015      	beq.n	9001bd72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bd46:	9e04      	ldr	r6, [sp, #16]
9001bd48:	4372      	muls	r2, r6
9001bd4a:	1c56      	adds	r6, r2, #1
9001bd4c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001bd50:	0a26      	lsrs	r6, r4, #8
9001bd52:	1212      	asrs	r2, r2, #8
9001bd54:	2aff      	cmp	r2, #255	@ 0xff
9001bd56:	d113      	bne.n	9001bd80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001bd58:	0962      	lsrs	r2, r4, #5
9001bd5a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001bd5e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001bd62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bd66:	f026 0607 	bic.w	r6, r6, #7
9001bd6a:	4316      	orrs	r6, r2
9001bd6c:	4326      	orrs	r6, r4
9001bd6e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001bd72:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bd74:	f108 0801 	add.w	r8, r8, #1
9001bd78:	4410      	add	r0, r2
9001bd7a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bd7c:	4411      	add	r1, r2
9001bd7e:	e7d2      	b.n	9001bd26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001bd80:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001bd84:	fa1f fa82 	uxth.w	sl, r2
9001bd88:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001bd8c:	43d2      	mvns	r2, r2
9001bd8e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bd92:	fb17 f70a 	smulbb	r7, r7, sl
9001bd96:	b2d2      	uxtb	r2, r2
9001bd98:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bd9c:	b2e4      	uxtb	r4, r4
9001bd9e:	b2f6      	uxtb	r6, r6
9001bda0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001bda4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bda8:	fb14 f40a 	smulbb	r4, r4, sl
9001bdac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bdb0:	fa1f fc8c 	uxth.w	ip, ip
9001bdb4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bdb8:	fb16 f60a 	smulbb	r6, r6, sl
9001bdbc:	fa5f fe8e 	uxtb.w	lr, lr
9001bdc0:	fb0e 4402 	mla	r4, lr, r2, r4
9001bdc4:	fb07 6702 	mla	r7, r7, r2, r6
9001bdc8:	f10c 0201 	add.w	r2, ip, #1
9001bdcc:	b2a4      	uxth	r4, r4
9001bdce:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001bdd2:	1c66      	adds	r6, r4, #1
9001bdd4:	b2bf      	uxth	r7, r7
9001bdd6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bdda:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bdde:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bde2:	ea46 0c0c 	orr.w	ip, r6, ip
9001bde6:	1c7e      	adds	r6, r7, #1
9001bde8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001bdec:	0976      	lsrs	r6, r6, #5
9001bdee:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bdf2:	ea4c 0c06 	orr.w	ip, ip, r6
9001bdf6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001bdfa:	e7ba      	b.n	9001bd72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bdfc:	b007      	add	sp, #28
9001bdfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001be04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001be04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be08:	b085      	sub	sp, #20
9001be0a:	468b      	mov	fp, r1
9001be0c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001be10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001be12:	9203      	str	r2, [sp, #12]
9001be14:	6841      	ldr	r1, [r0, #4]
9001be16:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001be1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001be1e:	fb01 2404 	mla	r4, r1, r4, r2
9001be22:	6802      	ldr	r2, [r0, #0]
9001be24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001be28:	f8d8 2000 	ldr.w	r2, [r8]
9001be2c:	9201      	str	r2, [sp, #4]
9001be2e:	f1bb 0f00 	cmp.w	fp, #0
9001be32:	dc03      	bgt.n	9001be3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001be34:	9a03      	ldr	r2, [sp, #12]
9001be36:	2a00      	cmp	r2, #0
9001be38:	f340 814f 	ble.w	9001c0da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001be3c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001be3e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001be42:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001be46:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001be48:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001be4c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001be50:	2b00      	cmp	r3, #0
9001be52:	dd0e      	ble.n	9001be72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001be54:	1408      	asrs	r0, r1, #16
9001be56:	d405      	bmi.n	9001be64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001be58:	42b8      	cmp	r0, r7
9001be5a:	da03      	bge.n	9001be64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001be5c:	1410      	asrs	r0, r2, #16
9001be5e:	d401      	bmi.n	9001be64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001be60:	42b0      	cmp	r0, r6
9001be62:	db07      	blt.n	9001be74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001be64:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001be66:	3b01      	subs	r3, #1
9001be68:	3402      	adds	r4, #2
9001be6a:	4401      	add	r1, r0
9001be6c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001be6e:	4402      	add	r2, r0
9001be70:	e7ee      	b.n	9001be50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001be72:	d017      	beq.n	9001bea4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001be74:	1e58      	subs	r0, r3, #1
9001be76:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001be78:	fb05 1500 	mla	r5, r5, r0, r1
9001be7c:	142d      	asrs	r5, r5, #16
9001be7e:	d409      	bmi.n	9001be94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001be80:	42bd      	cmp	r5, r7
9001be82:	da07      	bge.n	9001be94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001be84:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001be86:	fb05 2000 	mla	r0, r5, r0, r2
9001be8a:	1400      	asrs	r0, r0, #16
9001be8c:	d402      	bmi.n	9001be94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001be8e:	42b0      	cmp	r0, r6
9001be90:	f2c0 80ba 	blt.w	9001c008 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001be94:	2600      	movs	r6, #0
9001be96:	1998      	adds	r0, r3, r6
9001be98:	2800      	cmp	r0, #0
9001be9a:	dc3e      	bgt.n	9001bf1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001be9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bea0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bea4:	f1bb 0f00 	cmp.w	fp, #0
9001bea8:	f340 8117 	ble.w	9001c0da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001beac:	ee30 0a04 	vadd.f32	s0, s0, s8
9001beb0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001beb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001beb6:	f1bb 0b01 	subs.w	fp, fp, #1
9001beba:	eeb0 6a62 	vmov.f32	s12, s5
9001bebe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bec2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bec6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001beca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bece:	eeb0 6a43 	vmov.f32	s12, s6
9001bed2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bed6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001beda:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bede:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bee2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bee6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001beea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001beee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bef2:	ee12 2a90 	vmov	r2, s5
9001bef6:	eef0 2a47 	vmov.f32	s5, s14
9001befa:	fb92 f3f3 	sdiv	r3, r2, r3
9001befe:	ee13 2a10 	vmov	r2, s6
9001bf02:	9311      	str	r3, [sp, #68]	@ 0x44
9001bf04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bf06:	eeb0 3a67 	vmov.f32	s6, s15
9001bf0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf0e:	9a03      	ldr	r2, [sp, #12]
9001bf10:	9312      	str	r3, [sp, #72]	@ 0x48
9001bf12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bf14:	bf08      	it	eq
9001bf16:	4613      	moveq	r3, r2
9001bf18:	e789      	b.n	9001be2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001bf1a:	140f      	asrs	r7, r1, #16
9001bf1c:	d424      	bmi.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf1e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001bf22:	42bd      	cmp	r5, r7
9001bf24:	dd20      	ble.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf26:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bf2a:	d41d      	bmi.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf2c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001bf30:	4560      	cmp	r0, ip
9001bf32:	dd19      	ble.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf34:	b22d      	sxth	r5, r5
9001bf36:	9801      	ldr	r0, [sp, #4]
9001bf38:	fb0c 7505 	mla	r5, ip, r5, r7
9001bf3c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001bf40:	0e07      	lsrs	r7, r0, #24
9001bf42:	2fff      	cmp	r7, #255	@ 0xff
9001bf44:	d116      	bne.n	9001bf74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bf46:	f06f 0501 	mvn.w	r5, #1
9001bf4a:	fb05 f706 	mul.w	r7, r5, r6
9001bf4e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001bf52:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001bf56:	0945      	lsrs	r5, r0, #5
9001bf58:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bf5c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001bf60:	ea4c 0505 	orr.w	r5, ip, r5
9001bf64:	4305      	orrs	r5, r0
9001bf66:	53e5      	strh	r5, [r4, r7]
9001bf68:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bf6a:	3e01      	subs	r6, #1
9001bf6c:	4401      	add	r1, r0
9001bf6e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bf70:	4402      	add	r2, r0
9001bf72:	e790      	b.n	9001be96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001bf74:	b2fd      	uxtb	r5, r7
9001bf76:	2f00      	cmp	r7, #0
9001bf78:	d0f6      	beq.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf7a:	f06f 0701 	mvn.w	r7, #1
9001bf7e:	fa1f f985 	uxth.w	r9, r5
9001bf82:	43ed      	mvns	r5, r5
9001bf84:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001bf88:	4377      	muls	r7, r6
9001bf8a:	fb1a fa09 	smulbb	sl, sl, r9
9001bf8e:	b2ed      	uxtb	r5, r5
9001bf90:	f834 e007 	ldrh.w	lr, [r4, r7]
9001bf94:	9702      	str	r7, [sp, #8]
9001bf96:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001bf9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bf9e:	fb17 f709 	smulbb	r7, r7, r9
9001bfa2:	b2c0      	uxtb	r0, r0
9001bfa4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bfa8:	fb10 f009 	smulbb	r0, r0, r9
9001bfac:	fb0c 7c05 	mla	ip, ip, r5, r7
9001bfb0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bfb4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bfb8:	fa1f fc8c 	uxth.w	ip, ip
9001bfbc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bfc0:	fa5f fe8e 	uxtb.w	lr, lr
9001bfc4:	fb07 a705 	mla	r7, r7, r5, sl
9001bfc8:	fb0e 0005 	mla	r0, lr, r5, r0
9001bfcc:	f10c 0501 	add.w	r5, ip, #1
9001bfd0:	b2bf      	uxth	r7, r7
9001bfd2:	b280      	uxth	r0, r0
9001bfd4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bfd8:	f100 0a01 	add.w	sl, r0, #1
9001bfdc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bfe0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001bfe4:	9802      	ldr	r0, [sp, #8]
9001bfe6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bfea:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bfee:	f107 0a01 	add.w	sl, r7, #1
9001bff2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bff6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bffa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bffe:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c002:	f824 c000 	strh.w	ip, [r4, r0]
9001c006:	e7af      	b.n	9001bf68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c008:	f04f 0e00 	mov.w	lr, #0
9001c00c:	eba3 000e 	sub.w	r0, r3, lr
9001c010:	2800      	cmp	r0, #0
9001c012:	f77f af43 	ble.w	9001be9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c016:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c01a:	140d      	asrs	r5, r1, #16
9001c01c:	1410      	asrs	r0, r2, #16
9001c01e:	fb06 5000 	mla	r0, r6, r0, r5
9001c022:	9d01      	ldr	r5, [sp, #4]
9001c024:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c028:	0e2e      	lsrs	r6, r5, #24
9001c02a:	2eff      	cmp	r6, #255	@ 0xff
9001c02c:	d112      	bne.n	9001c054 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001c02e:	482c      	ldr	r0, [pc, #176]	@ (9001c0e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001c030:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c034:	0968      	lsrs	r0, r5, #5
9001c036:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c03a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001c03e:	4330      	orrs	r0, r6
9001c040:	4328      	orrs	r0, r5
9001c042:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001c046:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c048:	f10e 0e01 	add.w	lr, lr, #1
9001c04c:	4401      	add	r1, r0
9001c04e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c050:	4402      	add	r2, r0
9001c052:	e7db      	b.n	9001c00c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001c054:	b2f0      	uxtb	r0, r6
9001c056:	2e00      	cmp	r6, #0
9001c058:	d0f5      	beq.n	9001c046 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c05a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c05e:	fa1f f980 	uxth.w	r9, r0
9001c062:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c066:	43c0      	mvns	r0, r0
9001c068:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c06c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c070:	fb16 f609 	smulbb	r6, r6, r9
9001c074:	b2c0      	uxtb	r0, r0
9001c076:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c07a:	b2ed      	uxtb	r5, r5
9001c07c:	fb1a fa09 	smulbb	sl, sl, r9
9001c080:	fb07 6700 	mla	r7, r7, r0, r6
9001c084:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c088:	fb15 f509 	smulbb	r5, r5, r9
9001c08c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c090:	b2bf      	uxth	r7, r7
9001c092:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c096:	fa5f fc8c 	uxtb.w	ip, ip
9001c09a:	fb06 a600 	mla	r6, r6, r0, sl
9001c09e:	fb0c 5500 	mla	r5, ip, r0, r5
9001c0a2:	1c78      	adds	r0, r7, #1
9001c0a4:	b2b6      	uxth	r6, r6
9001c0a6:	b2ad      	uxth	r5, r5
9001c0a8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c0ac:	f105 0a01 	add.w	sl, r5, #1
9001c0b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c0b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c0b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c0bc:	ea4a 0707 	orr.w	r7, sl, r7
9001c0c0:	f106 0a01 	add.w	sl, r6, #1
9001c0c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c0c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c0cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c0d0:	ea47 070a 	orr.w	r7, r7, sl
9001c0d4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001c0d8:	e7b5      	b.n	9001c046 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c0da:	b005      	add	sp, #20
9001c0dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c0e0:	fffff800 	.word	0xfffff800

9001c0e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c0e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0e8:	b087      	sub	sp, #28
9001c0ea:	468b      	mov	fp, r1
9001c0ec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c0f0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c0f2:	9203      	str	r2, [sp, #12]
9001c0f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c0f8:	6841      	ldr	r1, [r0, #4]
9001c0fa:	9204      	str	r2, [sp, #16]
9001c0fc:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c100:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c104:	fb01 2404 	mla	r4, r1, r4, r2
9001c108:	6802      	ldr	r2, [r0, #0]
9001c10a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c10e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c112:	3201      	adds	r2, #1
9001c114:	f022 0201 	bic.w	r2, r2, #1
9001c118:	9200      	str	r2, [sp, #0]
9001c11a:	f8d9 2000 	ldr.w	r2, [r9]
9001c11e:	9201      	str	r2, [sp, #4]
9001c120:	f1bb 0f00 	cmp.w	fp, #0
9001c124:	dc03      	bgt.n	9001c12e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c126:	9a03      	ldr	r2, [sp, #12]
9001c128:	2a00      	cmp	r2, #0
9001c12a:	f340 816a 	ble.w	9001c402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c12e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c130:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c134:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c138:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c13a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c13e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c142:	2b00      	cmp	r3, #0
9001c144:	dd0e      	ble.n	9001c164 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c146:	1402      	asrs	r2, r0, #16
9001c148:	d405      	bmi.n	9001c156 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c14a:	42ba      	cmp	r2, r7
9001c14c:	da03      	bge.n	9001c156 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c14e:	140a      	asrs	r2, r1, #16
9001c150:	d401      	bmi.n	9001c156 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c152:	42b2      	cmp	r2, r6
9001c154:	db07      	blt.n	9001c166 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001c156:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c158:	3b01      	subs	r3, #1
9001c15a:	3402      	adds	r4, #2
9001c15c:	4410      	add	r0, r2
9001c15e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c160:	4411      	add	r1, r2
9001c162:	e7ee      	b.n	9001c142 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c164:	d017      	beq.n	9001c196 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c166:	1e5a      	subs	r2, r3, #1
9001c168:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c16a:	fb05 0502 	mla	r5, r5, r2, r0
9001c16e:	142d      	asrs	r5, r5, #16
9001c170:	d409      	bmi.n	9001c186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c172:	42bd      	cmp	r5, r7
9001c174:	da07      	bge.n	9001c186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c176:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c178:	fb05 1202 	mla	r2, r5, r2, r1
9001c17c:	1412      	asrs	r2, r2, #16
9001c17e:	d402      	bmi.n	9001c186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c180:	42b2      	cmp	r2, r6
9001c182:	f2c0 80c8 	blt.w	9001c316 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001c186:	2700      	movs	r7, #0
9001c188:	19da      	adds	r2, r3, r7
9001c18a:	2a00      	cmp	r2, #0
9001c18c:	dc3e      	bgt.n	9001c20c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c18e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c192:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c196:	f1bb 0f00 	cmp.w	fp, #0
9001c19a:	f340 8132 	ble.w	9001c402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c19e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c1a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c1a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c1a8:	f1bb 0b01 	subs.w	fp, fp, #1
9001c1ac:	eeb0 6a62 	vmov.f32	s12, s5
9001c1b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c1b4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c1b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c1bc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c1c0:	eeb0 6a43 	vmov.f32	s12, s6
9001c1c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c1c8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c1cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c1d0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c1d4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c1d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c1dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c1e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c1e4:	ee12 2a90 	vmov	r2, s5
9001c1e8:	eef0 2a47 	vmov.f32	s5, s14
9001c1ec:	fb92 f3f3 	sdiv	r3, r2, r3
9001c1f0:	ee13 2a10 	vmov	r2, s6
9001c1f4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c1f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c1f8:	eeb0 3a67 	vmov.f32	s6, s15
9001c1fc:	fb92 f3f3 	sdiv	r3, r2, r3
9001c200:	9a03      	ldr	r2, [sp, #12]
9001c202:	9314      	str	r3, [sp, #80]	@ 0x50
9001c204:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c206:	bf08      	it	eq
9001c208:	4613      	moveq	r3, r2
9001c20a:	e789      	b.n	9001c120 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c20c:	1405      	asrs	r5, r0, #16
9001c20e:	d436      	bmi.n	9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c210:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c214:	42aa      	cmp	r2, r5
9001c216:	dd32      	ble.n	9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c218:	140e      	asrs	r6, r1, #16
9001c21a:	d430      	bmi.n	9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c21c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c220:	42b2      	cmp	r2, r6
9001c222:	dd2c      	ble.n	9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c224:	9a00      	ldr	r2, [sp, #0]
9001c226:	fb06 5502 	mla	r5, r6, r2, r5
9001c22a:	9e01      	ldr	r6, [sp, #4]
9001c22c:	086a      	lsrs	r2, r5, #1
9001c22e:	5cb2      	ldrb	r2, [r6, r2]
9001c230:	07ee      	lsls	r6, r5, #31
9001c232:	bf54      	ite	pl
9001c234:	f002 020f 	andpl.w	r2, r2, #15
9001c238:	1112      	asrmi	r2, r2, #4
9001c23a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c23e:	b2d2      	uxtb	r2, r2
9001c240:	b1ea      	cbz	r2, 9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c242:	9d04      	ldr	r5, [sp, #16]
9001c244:	436a      	muls	r2, r5
9001c246:	1c55      	adds	r5, r2, #1
9001c248:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c24c:	4d6e      	ldr	r5, [pc, #440]	@ (9001c408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c24e:	1212      	asrs	r2, r2, #8
9001c250:	682d      	ldr	r5, [r5, #0]
9001c252:	2aff      	cmp	r2, #255	@ 0xff
9001c254:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001c258:	9605      	str	r6, [sp, #20]
9001c25a:	d116      	bne.n	9001c28a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001c25c:	f06f 0201 	mvn.w	r2, #1
9001c260:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c264:	fb02 fc07 	mul.w	ip, r2, r7
9001c268:	096a      	lsrs	r2, r5, #5
9001c26a:	f026 0607 	bic.w	r6, r6, #7
9001c26e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c272:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c276:	4316      	orrs	r6, r2
9001c278:	432e      	orrs	r6, r5
9001c27a:	f824 600c 	strh.w	r6, [r4, ip]
9001c27e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c280:	3f01      	subs	r7, #1
9001c282:	4410      	add	r0, r2
9001c284:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c286:	4411      	add	r1, r2
9001c288:	e77e      	b.n	9001c188 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001c28a:	f06f 0601 	mvn.w	r6, #1
9001c28e:	fa1f fa82 	uxth.w	sl, r2
9001c292:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001c296:	43d2      	mvns	r2, r2
9001c298:	437e      	muls	r6, r7
9001c29a:	b2ed      	uxtb	r5, r5
9001c29c:	fb1c fc0a 	smulbb	ip, ip, sl
9001c2a0:	b2d2      	uxtb	r2, r2
9001c2a2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001c2a6:	fb15 f50a 	smulbb	r5, r5, sl
9001c2aa:	9602      	str	r6, [sp, #8]
9001c2ac:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c2b0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c2b4:	fb16 f60a 	smulbb	r6, r6, sl
9001c2b8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c2bc:	fb0e ce02 	mla	lr, lr, r2, ip
9001c2c0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c2c4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c2c8:	fa1f fe8e 	uxth.w	lr, lr
9001c2cc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c2d0:	fa5f f888 	uxtb.w	r8, r8
9001c2d4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c2d8:	fb08 5502 	mla	r5, r8, r2, r5
9001c2dc:	f10e 0201 	add.w	r2, lr, #1
9001c2e0:	fa1f fc8c 	uxth.w	ip, ip
9001c2e4:	b2ad      	uxth	r5, r5
9001c2e6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c2ea:	9a02      	ldr	r2, [sp, #8]
9001c2ec:	1c6e      	adds	r6, r5, #1
9001c2ee:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c2f2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001c2f6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c2fa:	ea46 0e0e 	orr.w	lr, r6, lr
9001c2fe:	f10c 0601 	add.w	r6, ip, #1
9001c302:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c306:	0976      	lsrs	r6, r6, #5
9001c308:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c30c:	ea4e 0e06 	orr.w	lr, lr, r6
9001c310:	f824 e002 	strh.w	lr, [r4, r2]
9001c314:	e7b3      	b.n	9001c27e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c316:	f04f 0800 	mov.w	r8, #0
9001c31a:	eba3 0208 	sub.w	r2, r3, r8
9001c31e:	2a00      	cmp	r2, #0
9001c320:	f77f af35 	ble.w	9001c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c324:	1402      	asrs	r2, r0, #16
9001c326:	9e00      	ldr	r6, [sp, #0]
9001c328:	140d      	asrs	r5, r1, #16
9001c32a:	fb06 2505 	mla	r5, r6, r5, r2
9001c32e:	9e01      	ldr	r6, [sp, #4]
9001c330:	086a      	lsrs	r2, r5, #1
9001c332:	07ed      	lsls	r5, r5, #31
9001c334:	5cb2      	ldrb	r2, [r6, r2]
9001c336:	bf54      	ite	pl
9001c338:	f002 020f 	andpl.w	r2, r2, #15
9001c33c:	1112      	asrmi	r2, r2, #4
9001c33e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c342:	b2d2      	uxtb	r2, r2
9001c344:	b1c2      	cbz	r2, 9001c378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c346:	9d04      	ldr	r5, [sp, #16]
9001c348:	436a      	muls	r2, r5
9001c34a:	1c55      	adds	r5, r2, #1
9001c34c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c350:	4d2d      	ldr	r5, [pc, #180]	@ (9001c408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c352:	1212      	asrs	r2, r2, #8
9001c354:	682e      	ldr	r6, [r5, #0]
9001c356:	2aff      	cmp	r2, #255	@ 0xff
9001c358:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001c35c:	d113      	bne.n	9001c386 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c35e:	0972      	lsrs	r2, r6, #5
9001c360:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001c364:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c368:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c36c:	f025 0507 	bic.w	r5, r5, #7
9001c370:	4315      	orrs	r5, r2
9001c372:	4335      	orrs	r5, r6
9001c374:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001c378:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c37a:	f108 0801 	add.w	r8, r8, #1
9001c37e:	4410      	add	r0, r2
9001c380:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c382:	4411      	add	r1, r2
9001c384:	e7c9      	b.n	9001c31a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c386:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c38a:	fa1f fa82 	uxth.w	sl, r2
9001c38e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001c392:	43d2      	mvns	r2, r2
9001c394:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c398:	fb17 f70a 	smulbb	r7, r7, sl
9001c39c:	b2d2      	uxtb	r2, r2
9001c39e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c3a2:	b2f6      	uxtb	r6, r6
9001c3a4:	b2ed      	uxtb	r5, r5
9001c3a6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c3aa:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c3ae:	fb16 f60a 	smulbb	r6, r6, sl
9001c3b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c3b6:	fa1f fc8c 	uxth.w	ip, ip
9001c3ba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c3be:	fb15 f50a 	smulbb	r5, r5, sl
9001c3c2:	fa5f fe8e 	uxtb.w	lr, lr
9001c3c6:	fb0e 6602 	mla	r6, lr, r2, r6
9001c3ca:	fb07 5702 	mla	r7, r7, r2, r5
9001c3ce:	f10c 0201 	add.w	r2, ip, #1
9001c3d2:	b2b6      	uxth	r6, r6
9001c3d4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c3d8:	1c75      	adds	r5, r6, #1
9001c3da:	b2bf      	uxth	r7, r7
9001c3dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c3e0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c3e4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c3e8:	ea45 0c0c 	orr.w	ip, r5, ip
9001c3ec:	1c7d      	adds	r5, r7, #1
9001c3ee:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001c3f2:	096d      	lsrs	r5, r5, #5
9001c3f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c3f8:	ea4c 0c05 	orr.w	ip, ip, r5
9001c3fc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001c400:	e7ba      	b.n	9001c378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c402:	b007      	add	sp, #28
9001c404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c408:	2402199c 	.word	0x2402199c

9001c40c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c40c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c410:	b087      	sub	sp, #28
9001c412:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c416:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001c720 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001c41a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c41c:	9101      	str	r1, [sp, #4]
9001c41e:	9205      	str	r2, [sp, #20]
9001c420:	6841      	ldr	r1, [r0, #4]
9001c422:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001c426:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c42a:	fb01 2404 	mla	r4, r1, r4, r2
9001c42e:	6802      	ldr	r2, [r0, #0]
9001c430:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c434:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c438:	3201      	adds	r2, #1
9001c43a:	f022 0201 	bic.w	r2, r2, #1
9001c43e:	9202      	str	r2, [sp, #8]
9001c440:	f8db 2000 	ldr.w	r2, [fp]
9001c444:	9203      	str	r2, [sp, #12]
9001c446:	9a01      	ldr	r2, [sp, #4]
9001c448:	2a00      	cmp	r2, #0
9001c44a:	dc03      	bgt.n	9001c454 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c44c:	9a05      	ldr	r2, [sp, #20]
9001c44e:	2a00      	cmp	r2, #0
9001c450:	f340 8162 	ble.w	9001c718 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c454:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c456:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001c45a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c45e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c460:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001c464:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c468:	2b00      	cmp	r3, #0
9001c46a:	dd0e      	ble.n	9001c48a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c46c:	1402      	asrs	r2, r0, #16
9001c46e:	d405      	bmi.n	9001c47c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c470:	42ba      	cmp	r2, r7
9001c472:	da03      	bge.n	9001c47c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c474:	140a      	asrs	r2, r1, #16
9001c476:	d401      	bmi.n	9001c47c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c478:	42b2      	cmp	r2, r6
9001c47a:	db07      	blt.n	9001c48c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c47c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c47e:	3b01      	subs	r3, #1
9001c480:	3402      	adds	r4, #2
9001c482:	4410      	add	r0, r2
9001c484:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c486:	4411      	add	r1, r2
9001c488:	e7ee      	b.n	9001c468 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c48a:	d017      	beq.n	9001c4bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c48c:	1e5a      	subs	r2, r3, #1
9001c48e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c490:	fb05 0502 	mla	r5, r5, r2, r0
9001c494:	142d      	asrs	r5, r5, #16
9001c496:	d409      	bmi.n	9001c4ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c498:	42bd      	cmp	r5, r7
9001c49a:	da07      	bge.n	9001c4ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c49c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c49e:	fb05 1202 	mla	r2, r5, r2, r1
9001c4a2:	1412      	asrs	r2, r2, #16
9001c4a4:	d402      	bmi.n	9001c4ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c4a6:	42b2      	cmp	r2, r6
9001c4a8:	f2c0 80c3 	blt.w	9001c632 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001c4ac:	2500      	movs	r5, #0
9001c4ae:	195a      	adds	r2, r3, r5
9001c4b0:	2a00      	cmp	r2, #0
9001c4b2:	dc3f      	bgt.n	9001c534 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c4b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c4b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c4bc:	9b01      	ldr	r3, [sp, #4]
9001c4be:	2b00      	cmp	r3, #0
9001c4c0:	f340 812a 	ble.w	9001c718 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c4c4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c4c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c4ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c4ce:	eeb0 6a62 	vmov.f32	s12, s5
9001c4d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c4d6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c4da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c4de:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c4e2:	eeb0 6a43 	vmov.f32	s12, s6
9001c4e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c4ea:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c4ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c4f2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c4f6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c4fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c4fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c502:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c506:	ee12 2a90 	vmov	r2, s5
9001c50a:	eef0 2a47 	vmov.f32	s5, s14
9001c50e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c512:	ee13 2a10 	vmov	r2, s6
9001c516:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c518:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c51a:	eeb0 3a67 	vmov.f32	s6, s15
9001c51e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c522:	9314      	str	r3, [sp, #80]	@ 0x50
9001c524:	9b01      	ldr	r3, [sp, #4]
9001c526:	9a05      	ldr	r2, [sp, #20]
9001c528:	3b01      	subs	r3, #1
9001c52a:	9301      	str	r3, [sp, #4]
9001c52c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c52e:	bf08      	it	eq
9001c530:	4613      	moveq	r3, r2
9001c532:	e788      	b.n	9001c446 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c534:	1406      	asrs	r6, r0, #16
9001c536:	d42c      	bmi.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c538:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c53c:	42b2      	cmp	r2, r6
9001c53e:	dd28      	ble.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c540:	140f      	asrs	r7, r1, #16
9001c542:	d426      	bmi.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c544:	f8db 200c 	ldr.w	r2, [fp, #12]
9001c548:	42ba      	cmp	r2, r7
9001c54a:	dd22      	ble.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c54c:	9a02      	ldr	r2, [sp, #8]
9001c54e:	fb07 6602 	mla	r6, r7, r2, r6
9001c552:	9f03      	ldr	r7, [sp, #12]
9001c554:	0872      	lsrs	r2, r6, #1
9001c556:	07f6      	lsls	r6, r6, #31
9001c558:	5cba      	ldrb	r2, [r7, r2]
9001c55a:	bf54      	ite	pl
9001c55c:	f002 020f 	andpl.w	r2, r2, #15
9001c560:	1112      	asrmi	r2, r2, #4
9001c562:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c566:	b2d2      	uxtb	r2, r2
9001c568:	2aff      	cmp	r2, #255	@ 0xff
9001c56a:	d118      	bne.n	9001c59e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001c56c:	f06f 0601 	mvn.w	r6, #1
9001c570:	f8d8 2000 	ldr.w	r2, [r8]
9001c574:	fb06 f705 	mul.w	r7, r6, r5
9001c578:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001c57c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001c580:	0956      	lsrs	r6, r2, #5
9001c582:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001c586:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c58a:	ea4c 0606 	orr.w	r6, ip, r6
9001c58e:	4316      	orrs	r6, r2
9001c590:	53e6      	strh	r6, [r4, r7]
9001c592:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c594:	3d01      	subs	r5, #1
9001c596:	4410      	add	r0, r2
9001c598:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c59a:	4411      	add	r1, r2
9001c59c:	e787      	b.n	9001c4ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c59e:	2a00      	cmp	r2, #0
9001c5a0:	d0f7      	beq.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c5a2:	f06f 0601 	mvn.w	r6, #1
9001c5a6:	f8d8 c000 	ldr.w	ip, [r8]
9001c5aa:	fa1f f982 	uxth.w	r9, r2
9001c5ae:	43d2      	mvns	r2, r2
9001c5b0:	436e      	muls	r6, r5
9001c5b2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001c5b6:	b2d2      	uxtb	r2, r2
9001c5b8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001c5bc:	fb1a fa09 	smulbb	sl, sl, r9
9001c5c0:	9604      	str	r6, [sp, #16]
9001c5c2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001c5c6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c5ca:	fb16 f609 	smulbb	r6, r6, r9
9001c5ce:	fa5f fc8c 	uxtb.w	ip, ip
9001c5d2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c5d6:	fb1c fc09 	smulbb	ip, ip, r9
9001c5da:	fb07 6702 	mla	r7, r7, r2, r6
9001c5de:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c5e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c5e6:	b2bf      	uxth	r7, r7
9001c5e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c5ec:	fa5f fe8e 	uxtb.w	lr, lr
9001c5f0:	fb06 a602 	mla	r6, r6, r2, sl
9001c5f4:	fb0e cc02 	mla	ip, lr, r2, ip
9001c5f8:	1c7a      	adds	r2, r7, #1
9001c5fa:	b2b6      	uxth	r6, r6
9001c5fc:	fa1f fc8c 	uxth.w	ip, ip
9001c600:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c604:	9a04      	ldr	r2, [sp, #16]
9001c606:	f10c 0a01 	add.w	sl, ip, #1
9001c60a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c60e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001c612:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c616:	ea4a 0707 	orr.w	r7, sl, r7
9001c61a:	f106 0a01 	add.w	sl, r6, #1
9001c61e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c622:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c626:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c62a:	ea47 070a 	orr.w	r7, r7, sl
9001c62e:	52a7      	strh	r7, [r4, r2]
9001c630:	e7af      	b.n	9001c592 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c632:	f04f 0e00 	mov.w	lr, #0
9001c636:	eba3 020e 	sub.w	r2, r3, lr
9001c63a:	2a00      	cmp	r2, #0
9001c63c:	f77f af3a 	ble.w	9001c4b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c640:	1402      	asrs	r2, r0, #16
9001c642:	9e02      	ldr	r6, [sp, #8]
9001c644:	140d      	asrs	r5, r1, #16
9001c646:	fb06 2505 	mla	r5, r6, r5, r2
9001c64a:	9e03      	ldr	r6, [sp, #12]
9001c64c:	086a      	lsrs	r2, r5, #1
9001c64e:	07ed      	lsls	r5, r5, #31
9001c650:	5cb2      	ldrb	r2, [r6, r2]
9001c652:	bf54      	ite	pl
9001c654:	f002 020f 	andpl.w	r2, r2, #15
9001c658:	1112      	asrmi	r2, r2, #4
9001c65a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c65e:	b2d2      	uxtb	r2, r2
9001c660:	2aff      	cmp	r2, #255	@ 0xff
9001c662:	d115      	bne.n	9001c690 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001c664:	f8d8 5000 	ldr.w	r5, [r8]
9001c668:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001c66c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001c670:	096a      	lsrs	r2, r5, #5
9001c672:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c676:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c67a:	4332      	orrs	r2, r6
9001c67c:	432a      	orrs	r2, r5
9001c67e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001c682:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c684:	f10e 0e01 	add.w	lr, lr, #1
9001c688:	4410      	add	r0, r2
9001c68a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c68c:	4411      	add	r1, r2
9001c68e:	e7d2      	b.n	9001c636 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001c690:	2a00      	cmp	r2, #0
9001c692:	d0f6      	beq.n	9001c682 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c694:	f8d8 7000 	ldr.w	r7, [r8]
9001c698:	fa1f f982 	uxth.w	r9, r2
9001c69c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c6a0:	43d2      	mvns	r2, r2
9001c6a2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001c6a6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001c6aa:	ea4f 262c 	mov.w	r6, ip, asr #8
9001c6ae:	fb15 f509 	smulbb	r5, r5, r9
9001c6b2:	b2d2      	uxtb	r2, r2
9001c6b4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c6b8:	b2ff      	uxtb	r7, r7
9001c6ba:	fb1a fa09 	smulbb	sl, sl, r9
9001c6be:	fb06 5602 	mla	r6, r6, r2, r5
9001c6c2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001c6c6:	fb17 f709 	smulbb	r7, r7, r9
9001c6ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c6ce:	b2b6      	uxth	r6, r6
9001c6d0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c6d4:	fa5f fc8c 	uxtb.w	ip, ip
9001c6d8:	fb05 a502 	mla	r5, r5, r2, sl
9001c6dc:	fb0c 7702 	mla	r7, ip, r2, r7
9001c6e0:	1c72      	adds	r2, r6, #1
9001c6e2:	b2ad      	uxth	r5, r5
9001c6e4:	b2bf      	uxth	r7, r7
9001c6e6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001c6ea:	f107 0a01 	add.w	sl, r7, #1
9001c6ee:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c6f2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c6f6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c6fa:	ea4a 0606 	orr.w	r6, sl, r6
9001c6fe:	f105 0a01 	add.w	sl, r5, #1
9001c702:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c706:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c70a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c70e:	ea46 060a 	orr.w	r6, r6, sl
9001c712:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001c716:	e7b4      	b.n	9001c682 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c718:	b007      	add	sp, #28
9001c71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c71e:	bf00      	nop
9001c720:	2402199c 	.word	0x2402199c

9001c724 <_ZN8touchgfx8LCD16bppD1Ev>:
9001c724:	4770      	bx	lr

9001c726 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001c726:	4770      	bx	lr

9001c728 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001c728:	4770      	bx	lr

9001c72a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001c72a:	4770      	bx	lr

9001c72c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001c72c:	4770      	bx	lr

9001c72e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001c72e:	4770      	bx	lr

9001c730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001c730:	4770      	bx	lr

9001c732 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001c732:	4770      	bx	lr

9001c734 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001c734:	4770      	bx	lr

9001c736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c736:	4770      	bx	lr

9001c738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c738:	4770      	bx	lr

9001c73a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c73a:	4770      	bx	lr

9001c73c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c73c:	4770      	bx	lr

9001c73e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c73e:	4770      	bx	lr

9001c740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c740:	4770      	bx	lr

9001c742 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c742:	4770      	bx	lr

9001c744 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c744:	4770      	bx	lr

9001c746 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c746:	4770      	bx	lr

9001c748 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c748:	4770      	bx	lr

9001c74a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c74a:	4770      	bx	lr

9001c74c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c74c:	4770      	bx	lr

9001c74e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c74e:	4770      	bx	lr

9001c750 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c750:	4770      	bx	lr

9001c752 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c752:	4770      	bx	lr

9001c754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c754:	4770      	bx	lr

9001c756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c756:	4770      	bx	lr

9001c758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001c758:	4770      	bx	lr

9001c75a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c75a:	4770      	bx	lr

9001c75c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001c75c:	4770      	bx	lr

9001c75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c75e:	4770      	bx	lr

9001c760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c760:	4770      	bx	lr

9001c762 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c762:	4770      	bx	lr

9001c764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c764:	4770      	bx	lr

9001c766 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001c766:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c76a:	b088      	sub	sp, #32
9001c76c:	4606      	mov	r6, r0
9001c76e:	4688      	mov	r8, r1
9001c770:	4691      	mov	r9, r2
9001c772:	ac08      	add	r4, sp, #32
9001c774:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001c778:	4620      	mov	r0, r4
9001c77a:	f7fd fc33 	bl	90019fe4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001c77e:	6833      	ldr	r3, [r6, #0]
9001c780:	4605      	mov	r5, r0
9001c782:	4620      	mov	r0, r4
9001c784:	699f      	ldr	r7, [r3, #24]
9001c786:	f7fd fb3b 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001c78a:	4682      	mov	sl, r0
9001c78c:	4620      	mov	r0, r4
9001c78e:	f7fd fb6b 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001c792:	9500      	str	r5, [sp, #0]
9001c794:	464b      	mov	r3, r9
9001c796:	4642      	mov	r2, r8
9001c798:	4631      	mov	r1, r6
9001c79a:	e9cd a001 	strd	sl, r0, [sp, #4]
9001c79e:	a806      	add	r0, sp, #24
9001c7a0:	47b8      	blx	r7
9001c7a2:	4628      	mov	r0, r5
9001c7a4:	b008      	add	sp, #32
9001c7a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001c7ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001c7ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001c7b0:	2300      	movs	r3, #0
9001c7b2:	9300      	str	r3, [sp, #0]
9001c7b4:	4b3d      	ldr	r3, [pc, #244]	@ (9001c8ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001c7b6:	781b      	ldrb	r3, [r3, #0]
9001c7b8:	2b00      	cmp	r3, #0
9001c7ba:	d137      	bne.n	9001c82c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001c7bc:	4a3c      	ldr	r2, [pc, #240]	@ (9001c8b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c7be:	f9b2 2000 	ldrsh.w	r2, [r2]
9001c7c2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c7c6:	2b00      	cmp	r3, #0
9001c7c8:	d132      	bne.n	9001c830 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001c7ca:	4b3a      	ldr	r3, [pc, #232]	@ (9001c8b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c7cc:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c7d0:	ac02      	add	r4, sp, #8
9001c7d2:	6808      	ldr	r0, [r1, #0]
9001c7d4:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c7d8:	ab02      	add	r3, sp, #8
9001c7da:	6849      	ldr	r1, [r1, #4]
9001c7dc:	4d36      	ldr	r5, [pc, #216]	@ (9001c8b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001c7de:	c303      	stmia	r3!, {r0, r1}
9001c7e0:	4669      	mov	r1, sp
9001c7e2:	4620      	mov	r0, r4
9001c7e4:	f7f9 fbd8 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c7e8:	4668      	mov	r0, sp
9001c7ea:	f7f9 fbad 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c7ee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c7f2:	f8bd 2000 	ldrh.w	r2, [sp]
9001c7f6:	462f      	mov	r7, r5
9001c7f8:	6828      	ldr	r0, [r5, #0]
9001c7fa:	4413      	add	r3, r2
9001c7fc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c800:	f8ad 3008 	strh.w	r3, [sp, #8]
9001c804:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c808:	4413      	add	r3, r2
9001c80a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c80e:	6803      	ldr	r3, [r0, #0]
9001c810:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001c812:	4798      	blx	r3
9001c814:	f010 0f01 	tst.w	r0, #1
9001c818:	d00c      	beq.n	9001c834 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001c81a:	6828      	ldr	r0, [r5, #0]
9001c81c:	6803      	ldr	r3, [r0, #0]
9001c81e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001c822:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001c824:	4798      	blx	r3
9001c826:	b004      	add	sp, #16
9001c828:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c82c:	4a21      	ldr	r2, [pc, #132]	@ (9001c8b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c82e:	e7c6      	b.n	9001c7be <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001c830:	4b1f      	ldr	r3, [pc, #124]	@ (9001c8b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c832:	e7cb      	b.n	9001c7cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001c834:	6838      	ldr	r0, [r7, #0]
9001c836:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001c83a:	6803      	ldr	r3, [r0, #0]
9001c83c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001c840:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001c844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001c846:	4798      	blx	r3
9001c848:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001c84c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c850:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001c854:	fb16 3602 	smlabb	r6, r6, r2, r3
9001c858:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c85c:	6838      	ldr	r0, [r7, #0]
9001c85e:	6803      	ldr	r3, [r0, #0]
9001c860:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c862:	4798      	blx	r3
9001c864:	4a12      	ldr	r2, [pc, #72]	@ (9001c8b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c866:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001c86a:	8813      	ldrh	r3, [r2, #0]
9001c86c:	4691      	mov	r9, r2
9001c86e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c872:	435d      	muls	r5, r3
9001c874:	fb03 1404 	mla	r4, r3, r4, r1
9001c878:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c87c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c880:	6838      	ldr	r0, [r7, #0]
9001c882:	42ac      	cmp	r4, r5
9001c884:	6803      	ldr	r3, [r0, #0]
9001c886:	d20e      	bcs.n	9001c8a6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001c888:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001c88c:	4632      	mov	r2, r6
9001c88e:	4643      	mov	r3, r8
9001c890:	4621      	mov	r1, r4
9001c892:	47d0      	blx	sl
9001c894:	f8b9 3000 	ldrh.w	r3, [r9]
9001c898:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c89c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001c8a0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c8a4:	e7ec      	b.n	9001c880 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001c8a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c8a8:	4798      	blx	r3
9001c8aa:	e7bc      	b.n	9001c826 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001c8ac:	24021984 	.word	0x24021984
9001c8b0:	24021986 	.word	0x24021986
9001c8b4:	24021988 	.word	0x24021988
9001c8b8:	2402198c 	.word	0x2402198c

9001c8bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001c8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c8c0:	b08b      	sub	sp, #44	@ 0x2c
9001c8c2:	460f      	mov	r7, r1
9001c8c4:	4616      	mov	r6, r2
9001c8c6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001c8ca:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001c8ce:	f1bb 0f00 	cmp.w	fp, #0
9001c8d2:	d04a      	beq.n	9001c96a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c8d4:	6810      	ldr	r0, [r2, #0]
9001c8d6:	ad06      	add	r5, sp, #24
9001c8d8:	6851      	ldr	r1, [r2, #4]
9001c8da:	c503      	stmia	r5!, {r0, r1}
9001c8dc:	6818      	ldr	r0, [r3, #0]
9001c8de:	ad08      	add	r5, sp, #32
9001c8e0:	6859      	ldr	r1, [r3, #4]
9001c8e2:	c503      	stmia	r5!, {r0, r1}
9001c8e4:	a806      	add	r0, sp, #24
9001c8e6:	f7f9 fb2f 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c8ea:	4631      	mov	r1, r6
9001c8ec:	a808      	add	r0, sp, #32
9001c8ee:	f7f9 fb53 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c8f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001c8f6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001c8fa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001c8fe:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001c902:	fb16 2103 	smlabb	r1, r6, r3, r2
9001c906:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001c90a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001c90e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001c912:	4f5f      	ldr	r7, [pc, #380]	@ (9001ca90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c914:	440a      	add	r2, r1
9001c916:	6838      	ldr	r0, [r7, #0]
9001c918:	46b9      	mov	r9, r7
9001c91a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001c91e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001c922:	4413      	add	r3, r2
9001c924:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001c928:	6803      	ldr	r3, [r0, #0]
9001c92a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001c92c:	4798      	blx	r3
9001c92e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001c932:	d11d      	bne.n	9001c970 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001c934:	b9fc      	cbnz	r4, 9001c976 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c936:	f010 0f01 	tst.w	r0, #1
9001c93a:	d01c      	beq.n	9001c976 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c93c:	f8d9 0000 	ldr.w	r0, [r9]
9001c940:	2700      	movs	r7, #0
9001c942:	b2ad      	uxth	r5, r5
9001c944:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001c948:	6801      	ldr	r1, [r0, #0]
9001c94a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001c94e:	f8cd b00c 	str.w	fp, [sp, #12]
9001c952:	9501      	str	r5, [sp, #4]
9001c954:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001c958:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001c95c:	9402      	str	r4, [sp, #8]
9001c95e:	fa1f f488 	uxth.w	r4, r8
9001c962:	9400      	str	r4, [sp, #0]
9001c964:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001c966:	4631      	mov	r1, r6
9001c968:	47a0      	blx	r4
9001c96a:	b00b      	add	sp, #44	@ 0x2c
9001c96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c970:	f010 0f04 	tst.w	r0, #4
9001c974:	e7e1      	b.n	9001c93a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001c976:	f8d9 0000 	ldr.w	r0, [r9]
9001c97a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001c97e:	6803      	ldr	r3, [r0, #0]
9001c980:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c982:	4798      	blx	r3
9001c984:	4b43      	ldr	r3, [pc, #268]	@ (9001ca94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001c986:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001c98a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001c98e:	881a      	ldrh	r2, [r3, #0]
9001c990:	469a      	mov	sl, r3
9001c992:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001c996:	fb05 f502 	mul.w	r5, r5, r2
9001c99a:	fb02 1404 	mla	r4, r2, r4, r1
9001c99e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c9a2:	d059      	beq.n	9001ca58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001c9a4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001c9a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c9ac:	fa1f f28b 	uxth.w	r2, fp
9001c9b0:	469e      	mov	lr, r3
9001c9b2:	fa1f f989 	uxth.w	r9, r9
9001c9b6:	42ac      	cmp	r4, r5
9001c9b8:	d264      	bcs.n	9001ca84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c9ba:	eb04 0a07 	add.w	sl, r4, r7
9001c9be:	4554      	cmp	r4, sl
9001c9c0:	d23d      	bcs.n	9001ca3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001c9c2:	8821      	ldrh	r1, [r4, #0]
9001c9c4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001c9c8:	1208      	asrs	r0, r1, #8
9001c9ca:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c9ce:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001c9d2:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001c9d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c9da:	00c9      	lsls	r1, r1, #3
9001c9dc:	fb10 f009 	smulbb	r0, r0, r9
9001c9e0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001c9e4:	b2c9      	uxtb	r1, r1
9001c9e6:	fb0c 0c02 	mla	ip, ip, r2, r0
9001c9ea:	10d8      	asrs	r0, r3, #3
9001c9ec:	fb1b fb09 	smulbb	fp, fp, r9
9001c9f0:	00db      	lsls	r3, r3, #3
9001c9f2:	fa1f fc8c 	uxth.w	ip, ip
9001c9f6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001c9fa:	fb11 f109 	smulbb	r1, r1, r9
9001c9fe:	b2db      	uxtb	r3, r3
9001ca00:	fb00 b002 	mla	r0, r0, r2, fp
9001ca04:	f10c 0b01 	add.w	fp, ip, #1
9001ca08:	fb03 1302 	mla	r3, r3, r2, r1
9001ca0c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001ca10:	b29b      	uxth	r3, r3
9001ca12:	b280      	uxth	r0, r0
9001ca14:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001ca18:	f103 0c01 	add.w	ip, r3, #1
9001ca1c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ca20:	1c43      	adds	r3, r0, #1
9001ca22:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001ca26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ca2a:	0940      	lsrs	r0, r0, #5
9001ca2c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001ca30:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001ca34:	ea4c 0c00 	orr.w	ip, ip, r0
9001ca38:	f824 cb02 	strh.w	ip, [r4], #2
9001ca3c:	e7bf      	b.n	9001c9be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001ca3e:	f8be 3000 	ldrh.w	r3, [lr]
9001ca42:	eba3 0308 	sub.w	r3, r3, r8
9001ca46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ca4a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ca4e:	eba3 0308 	sub.w	r3, r3, r8
9001ca52:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ca56:	e7ae      	b.n	9001c9b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001ca58:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ca5c:	f8d9 0000 	ldr.w	r0, [r9]
9001ca60:	42ac      	cmp	r4, r5
9001ca62:	6803      	ldr	r3, [r0, #0]
9001ca64:	d20e      	bcs.n	9001ca84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ca66:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001ca6a:	4632      	mov	r2, r6
9001ca6c:	463b      	mov	r3, r7
9001ca6e:	4621      	mov	r1, r4
9001ca70:	47c0      	blx	r8
9001ca72:	f8ba 3000 	ldrh.w	r3, [sl]
9001ca76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ca7a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ca7e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ca82:	e7eb      	b.n	9001ca5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001ca84:	4b02      	ldr	r3, [pc, #8]	@ (9001ca90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ca86:	6818      	ldr	r0, [r3, #0]
9001ca88:	6803      	ldr	r3, [r0, #0]
9001ca8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ca8c:	4798      	blx	r3
9001ca8e:	e76c      	b.n	9001c96a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ca90:	2402198c 	.word	0x2402198c
9001ca94:	24021986 	.word	0x24021986

9001ca98 <_ZN8touchgfx8LCD16bppD0Ev>:
9001ca98:	b510      	push	{r4, lr}
9001ca9a:	4604      	mov	r4, r0
9001ca9c:	218c      	movs	r1, #140	@ 0x8c
9001ca9e:	f00c fa5d 	bl	90028f5c <_ZdlPvj>
9001caa2:	4620      	mov	r0, r4
9001caa4:	bd10      	pop	{r4, pc}

9001caa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001caa6:	b510      	push	{r4, lr}
9001caa8:	4604      	mov	r4, r0
9001caaa:	2104      	movs	r1, #4
9001caac:	f00c fa56 	bl	90028f5c <_ZdlPvj>
9001cab0:	4620      	mov	r0, r4
9001cab2:	bd10      	pop	{r4, pc}

9001cab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001cab4:	b510      	push	{r4, lr}
9001cab6:	4604      	mov	r4, r0
9001cab8:	2104      	movs	r1, #4
9001caba:	f00c fa4f 	bl	90028f5c <_ZdlPvj>
9001cabe:	4620      	mov	r0, r4
9001cac0:	bd10      	pop	{r4, pc}

9001cac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001cac2:	b510      	push	{r4, lr}
9001cac4:	4604      	mov	r4, r0
9001cac6:	f640 0144 	movw	r1, #2116	@ 0x844
9001caca:	f00c fa47 	bl	90028f5c <_ZdlPvj>
9001cace:	4620      	mov	r0, r4
9001cad0:	bd10      	pop	{r4, pc}

9001cad2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001cad2:	b510      	push	{r4, lr}
9001cad4:	4604      	mov	r4, r0
9001cad6:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001cada:	f00c fa3f 	bl	90028f5c <_ZdlPvj>
9001cade:	4620      	mov	r0, r4
9001cae0:	bd10      	pop	{r4, pc}

9001cae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001cae2:	b510      	push	{r4, lr}
9001cae4:	4604      	mov	r4, r0
9001cae6:	2104      	movs	r1, #4
9001cae8:	f00c fa38 	bl	90028f5c <_ZdlPvj>
9001caec:	4620      	mov	r0, r4
9001caee:	bd10      	pop	{r4, pc}

9001caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001caf0:	b510      	push	{r4, lr}
9001caf2:	4604      	mov	r4, r0
9001caf4:	2104      	movs	r1, #4
9001caf6:	f00c fa31 	bl	90028f5c <_ZdlPvj>
9001cafa:	4620      	mov	r0, r4
9001cafc:	bd10      	pop	{r4, pc}

9001cafe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cafe:	b510      	push	{r4, lr}
9001cb00:	4604      	mov	r4, r0
9001cb02:	2104      	movs	r1, #4
9001cb04:	f00c fa2a 	bl	90028f5c <_ZdlPvj>
9001cb08:	4620      	mov	r0, r4
9001cb0a:	bd10      	pop	{r4, pc}

9001cb0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001cb0c:	b510      	push	{r4, lr}
9001cb0e:	4604      	mov	r4, r0
9001cb10:	2104      	movs	r1, #4
9001cb12:	f00c fa23 	bl	90028f5c <_ZdlPvj>
9001cb16:	4620      	mov	r0, r4
9001cb18:	bd10      	pop	{r4, pc}

9001cb1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001cb1a:	b510      	push	{r4, lr}
9001cb1c:	4604      	mov	r4, r0
9001cb1e:	2104      	movs	r1, #4
9001cb20:	f00c fa1c 	bl	90028f5c <_ZdlPvj>
9001cb24:	4620      	mov	r0, r4
9001cb26:	bd10      	pop	{r4, pc}

9001cb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001cb28:	b510      	push	{r4, lr}
9001cb2a:	4604      	mov	r4, r0
9001cb2c:	2104      	movs	r1, #4
9001cb2e:	f00c fa15 	bl	90028f5c <_ZdlPvj>
9001cb32:	4620      	mov	r0, r4
9001cb34:	bd10      	pop	{r4, pc}

9001cb36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cb36:	b510      	push	{r4, lr}
9001cb38:	4604      	mov	r4, r0
9001cb3a:	2104      	movs	r1, #4
9001cb3c:	f00c fa0e 	bl	90028f5c <_ZdlPvj>
9001cb40:	4620      	mov	r0, r4
9001cb42:	bd10      	pop	{r4, pc}

9001cb44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001cb44:	b510      	push	{r4, lr}
9001cb46:	4604      	mov	r4, r0
9001cb48:	2104      	movs	r1, #4
9001cb4a:	f00c fa07 	bl	90028f5c <_ZdlPvj>
9001cb4e:	4620      	mov	r0, r4
9001cb50:	bd10      	pop	{r4, pc}

9001cb52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cb52:	b510      	push	{r4, lr}
9001cb54:	4604      	mov	r4, r0
9001cb56:	2104      	movs	r1, #4
9001cb58:	f00c fa00 	bl	90028f5c <_ZdlPvj>
9001cb5c:	4620      	mov	r0, r4
9001cb5e:	bd10      	pop	{r4, pc}

9001cb60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cb60:	b510      	push	{r4, lr}
9001cb62:	4604      	mov	r4, r0
9001cb64:	2104      	movs	r1, #4
9001cb66:	f00c f9f9 	bl	90028f5c <_ZdlPvj>
9001cb6a:	4620      	mov	r0, r4
9001cb6c:	bd10      	pop	{r4, pc}

9001cb6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cb6e:	b510      	push	{r4, lr}
9001cb70:	4604      	mov	r4, r0
9001cb72:	2104      	movs	r1, #4
9001cb74:	f00c f9f2 	bl	90028f5c <_ZdlPvj>
9001cb78:	4620      	mov	r0, r4
9001cb7a:	bd10      	pop	{r4, pc}

9001cb7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001cb7c:	b510      	push	{r4, lr}
9001cb7e:	4604      	mov	r4, r0
9001cb80:	2104      	movs	r1, #4
9001cb82:	f00c f9eb 	bl	90028f5c <_ZdlPvj>
9001cb86:	4620      	mov	r0, r4
9001cb88:	bd10      	pop	{r4, pc}

9001cb8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001cb8a:	b510      	push	{r4, lr}
9001cb8c:	4604      	mov	r4, r0
9001cb8e:	2104      	movs	r1, #4
9001cb90:	f00c f9e4 	bl	90028f5c <_ZdlPvj>
9001cb94:	4620      	mov	r0, r4
9001cb96:	bd10      	pop	{r4, pc}

9001cb98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001cb98:	b510      	push	{r4, lr}
9001cb9a:	4604      	mov	r4, r0
9001cb9c:	2104      	movs	r1, #4
9001cb9e:	f00c f9dd 	bl	90028f5c <_ZdlPvj>
9001cba2:	4620      	mov	r0, r4
9001cba4:	bd10      	pop	{r4, pc}

9001cba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cba6:	b510      	push	{r4, lr}
9001cba8:	4604      	mov	r4, r0
9001cbaa:	2104      	movs	r1, #4
9001cbac:	f00c f9d6 	bl	90028f5c <_ZdlPvj>
9001cbb0:	4620      	mov	r0, r4
9001cbb2:	bd10      	pop	{r4, pc}

9001cbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cbb4:	b510      	push	{r4, lr}
9001cbb6:	4604      	mov	r4, r0
9001cbb8:	2104      	movs	r1, #4
9001cbba:	f00c f9cf 	bl	90028f5c <_ZdlPvj>
9001cbbe:	4620      	mov	r0, r4
9001cbc0:	bd10      	pop	{r4, pc}

9001cbc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cbc2:	b510      	push	{r4, lr}
9001cbc4:	4604      	mov	r4, r0
9001cbc6:	2104      	movs	r1, #4
9001cbc8:	f00c f9c8 	bl	90028f5c <_ZdlPvj>
9001cbcc:	4620      	mov	r0, r4
9001cbce:	bd10      	pop	{r4, pc}

9001cbd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001cbd0:	b510      	push	{r4, lr}
9001cbd2:	4604      	mov	r4, r0
9001cbd4:	2104      	movs	r1, #4
9001cbd6:	f00c f9c1 	bl	90028f5c <_ZdlPvj>
9001cbda:	4620      	mov	r0, r4
9001cbdc:	bd10      	pop	{r4, pc}

9001cbde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cbde:	b510      	push	{r4, lr}
9001cbe0:	4604      	mov	r4, r0
9001cbe2:	2104      	movs	r1, #4
9001cbe4:	f00c f9ba 	bl	90028f5c <_ZdlPvj>
9001cbe8:	4620      	mov	r0, r4
9001cbea:	bd10      	pop	{r4, pc}

9001cbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001cbec:	b510      	push	{r4, lr}
9001cbee:	4604      	mov	r4, r0
9001cbf0:	2104      	movs	r1, #4
9001cbf2:	f00c f9b3 	bl	90028f5c <_ZdlPvj>
9001cbf6:	4620      	mov	r0, r4
9001cbf8:	bd10      	pop	{r4, pc}

9001cbfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cbfa:	b510      	push	{r4, lr}
9001cbfc:	4604      	mov	r4, r0
9001cbfe:	2104      	movs	r1, #4
9001cc00:	f00c f9ac 	bl	90028f5c <_ZdlPvj>
9001cc04:	4620      	mov	r0, r4
9001cc06:	bd10      	pop	{r4, pc}

9001cc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cc08:	b510      	push	{r4, lr}
9001cc0a:	4604      	mov	r4, r0
9001cc0c:	2104      	movs	r1, #4
9001cc0e:	f00c f9a5 	bl	90028f5c <_ZdlPvj>
9001cc12:	4620      	mov	r0, r4
9001cc14:	bd10      	pop	{r4, pc}

9001cc16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cc16:	b510      	push	{r4, lr}
9001cc18:	4604      	mov	r4, r0
9001cc1a:	2104      	movs	r1, #4
9001cc1c:	f00c f99e 	bl	90028f5c <_ZdlPvj>
9001cc20:	4620      	mov	r0, r4
9001cc22:	bd10      	pop	{r4, pc}

9001cc24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001cc24:	b510      	push	{r4, lr}
9001cc26:	4604      	mov	r4, r0
9001cc28:	2104      	movs	r1, #4
9001cc2a:	f00c f997 	bl	90028f5c <_ZdlPvj>
9001cc2e:	4620      	mov	r0, r4
9001cc30:	bd10      	pop	{r4, pc}

9001cc32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001cc32:	b510      	push	{r4, lr}
9001cc34:	4604      	mov	r4, r0
9001cc36:	2104      	movs	r1, #4
9001cc38:	f00c f990 	bl	90028f5c <_ZdlPvj>
9001cc3c:	4620      	mov	r0, r4
9001cc3e:	bd10      	pop	{r4, pc}

9001cc40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001cc40:	b510      	push	{r4, lr}
9001cc42:	4604      	mov	r4, r0
9001cc44:	2104      	movs	r1, #4
9001cc46:	f00c f989 	bl	90028f5c <_ZdlPvj>
9001cc4a:	4620      	mov	r0, r4
9001cc4c:	bd10      	pop	{r4, pc}

9001cc4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001cc4e:	b510      	push	{r4, lr}
9001cc50:	4604      	mov	r4, r0
9001cc52:	2104      	movs	r1, #4
9001cc54:	f00c f982 	bl	90028f5c <_ZdlPvj>
9001cc58:	4620      	mov	r0, r4
9001cc5a:	bd10      	pop	{r4, pc}

9001cc5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001cc5c:	b510      	push	{r4, lr}
9001cc5e:	4604      	mov	r4, r0
9001cc60:	2104      	movs	r1, #4
9001cc62:	f00c f97b 	bl	90028f5c <_ZdlPvj>
9001cc66:	4620      	mov	r0, r4
9001cc68:	bd10      	pop	{r4, pc}
	...

9001cc6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001cc6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc70:	b08f      	sub	sp, #60	@ 0x3c
9001cc72:	4616      	mov	r6, r2
9001cc74:	4682      	mov	sl, r0
9001cc76:	460d      	mov	r5, r1
9001cc78:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001cc7c:	9205      	str	r2, [sp, #20]
9001cc7e:	2a00      	cmp	r2, #0
9001cc80:	f000 82b7 	beq.w	9001d1f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001cc84:	6830      	ldr	r0, [r6, #0]
9001cc86:	ac0a      	add	r4, sp, #40	@ 0x28
9001cc88:	6871      	ldr	r1, [r6, #4]
9001cc8a:	c403      	stmia	r4!, {r0, r1}
9001cc8c:	6818      	ldr	r0, [r3, #0]
9001cc8e:	ac0c      	add	r4, sp, #48	@ 0x30
9001cc90:	6859      	ldr	r1, [r3, #4]
9001cc92:	c403      	stmia	r4!, {r0, r1}
9001cc94:	a80a      	add	r0, sp, #40	@ 0x28
9001cc96:	f7f9 f957 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cc9a:	4631      	mov	r1, r6
9001cc9c:	a80c      	add	r0, sp, #48	@ 0x30
9001cc9e:	f7f9 f97b 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cca2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001cca6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001ccaa:	bfdb      	ittet	le
9001ccac:	b293      	uxthle	r3, r2
9001ccae:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ccb2:	2301      	movgt	r3, #1
9001ccb4:	fb91 f3f3 	sdivle	r3, r1, r3
9001ccb8:	9300      	str	r3, [sp, #0]
9001ccba:	f105 0308 	add.w	r3, r5, #8
9001ccbe:	9900      	ldr	r1, [sp, #0]
9001ccc0:	9306      	str	r3, [sp, #24]
9001ccc2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001ccc6:	440b      	add	r3, r1
9001ccc8:	3b01      	subs	r3, #1
9001ccca:	fb93 f3f1 	sdiv	r3, r3, r1
9001ccce:	3b01      	subs	r3, #1
9001ccd0:	9906      	ldr	r1, [sp, #24]
9001ccd2:	b29b      	uxth	r3, r3
9001ccd4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ccd8:	9900      	ldr	r1, [sp, #0]
9001ccda:	9307      	str	r3, [sp, #28]
9001ccdc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001cce0:	fb93 f0f1 	sdiv	r0, r3, r1
9001cce4:	b284      	uxth	r4, r0
9001cce6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001ccea:	9402      	str	r4, [sp, #8]
9001ccec:	9d02      	ldr	r5, [sp, #8]
9001ccee:	9c00      	ldr	r4, [sp, #0]
9001ccf0:	fb05 3414 	mls	r4, r5, r4, r3
9001ccf4:	fb14 f402 	smulbb	r4, r4, r2
9001ccf8:	440c      	add	r4, r1
9001ccfa:	b2a4      	uxth	r4, r4
9001ccfc:	2d00      	cmp	r5, #0
9001ccfe:	d06c      	beq.n	9001cdda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001cd00:	1e6a      	subs	r2, r5, #1
9001cd02:	9806      	ldr	r0, [sp, #24]
9001cd04:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001cd08:	9a07      	ldr	r2, [sp, #28]
9001cd0a:	ba36      	rev	r6, r6
9001cd0c:	4416      	add	r6, r2
9001cd0e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001cd12:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001cd16:	4411      	add	r1, r2
9001cd18:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001cd1c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001d04c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001cd20:	4413      	add	r3, r2
9001cd22:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001cd26:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001cd2a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001cd2e:	9301      	str	r3, [sp, #4]
9001cd30:	4bc4      	ldr	r3, [pc, #784]	@ (9001d044 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001cd32:	6818      	ldr	r0, [r3, #0]
9001cd34:	6803      	ldr	r3, [r0, #0]
9001cd36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cd38:	4798      	blx	r3
9001cd3a:	4bc3      	ldr	r3, [pc, #780]	@ (9001d048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001cd3c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001cd40:	881b      	ldrh	r3, [r3, #0]
9001cd42:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001cd46:	fb03 2808 	mla	r8, r3, r8, r2
9001cd4a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001cd4e:	436b      	muls	r3, r5
9001cd50:	2500      	movs	r5, #0
9001cd52:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001cd56:	4629      	mov	r1, r5
9001cd58:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001cd5c:	9309      	str	r3, [sp, #36]	@ 0x24
9001cd5e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001cd62:	fb94 f3f3 	sdiv	r3, r4, r3
9001cd66:	9304      	str	r3, [sp, #16]
9001cd68:	f10a 0304 	add.w	r3, sl, #4
9001cd6c:	4618      	mov	r0, r3
9001cd6e:	9308      	str	r3, [sp, #32]
9001cd70:	f00c ff06 	bl	90029b80 <memset>
9001cd74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001cd76:	4543      	cmp	r3, r8
9001cd78:	f240 8236 	bls.w	9001d1e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001cd7c:	2203      	movs	r2, #3
9001cd7e:	2107      	movs	r1, #7
9001cd80:	200b      	movs	r0, #11
9001cd82:	2c00      	cmp	r4, #0
9001cd84:	f000 8131 	beq.w	9001cfea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001cd88:	7833      	ldrb	r3, [r6, #0]
9001cd8a:	b2db      	uxtb	r3, r3
9001cd8c:	2bfe      	cmp	r3, #254	@ 0xfe
9001cd8e:	d126      	bne.n	9001cdde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001cd90:	f896 e001 	ldrb.w	lr, [r6, #1]
9001cd94:	3c01      	subs	r4, #1
9001cd96:	f896 c002 	ldrb.w	ip, [r6, #2]
9001cd9a:	1d37      	adds	r7, r6, #4
9001cd9c:	fa5f fe8e 	uxtb.w	lr, lr
9001cda0:	f896 b003 	ldrb.w	fp, [r6, #3]
9001cda4:	fa5f fc8c 	uxtb.w	ip, ip
9001cda8:	f36e 0507 	bfi	r5, lr, #0, #8
9001cdac:	fa5f fb8b 	uxtb.w	fp, fp
9001cdb0:	b2a4      	uxth	r4, r4
9001cdb2:	f36c 250f 	bfi	r5, ip, #8, #8
9001cdb6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001cdba:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001cdbe:	f36b 4517 	bfi	r5, fp, #16, #8
9001cdc2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001cdc6:	0e2b      	lsrs	r3, r5, #24
9001cdc8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001cdcc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cdd0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001cdd4:	605d      	str	r5, [r3, #4]
9001cdd6:	463e      	mov	r6, r7
9001cdd8:	e7d3      	b.n	9001cd82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001cdda:	9e07      	ldr	r6, [sp, #28]
9001cddc:	e797      	b.n	9001cd0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001cdde:	2bff      	cmp	r3, #255	@ 0xff
9001cde0:	d127      	bne.n	9001ce32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001cde2:	f896 c001 	ldrb.w	ip, [r6, #1]
9001cde6:	3c01      	subs	r4, #1
9001cde8:	78b3      	ldrb	r3, [r6, #2]
9001cdea:	1d77      	adds	r7, r6, #5
9001cdec:	fa5f fc8c 	uxtb.w	ip, ip
9001cdf0:	f896 e003 	ldrb.w	lr, [r6, #3]
9001cdf4:	b2db      	uxtb	r3, r3
9001cdf6:	f896 b004 	ldrb.w	fp, [r6, #4]
9001cdfa:	f36c 0507 	bfi	r5, ip, #0, #8
9001cdfe:	fa5f fe8e 	uxtb.w	lr, lr
9001ce02:	fa5f fb8b 	uxtb.w	fp, fp
9001ce06:	f363 250f 	bfi	r5, r3, #8, #8
9001ce0a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001ce0e:	b2a4      	uxth	r4, r4
9001ce10:	fb12 330e 	smlabb	r3, r2, lr, r3
9001ce14:	f36e 4517 	bfi	r5, lr, #16, #8
9001ce18:	fb11 330c 	smlabb	r3, r1, ip, r3
9001ce1c:	f36b 651f 	bfi	r5, fp, #24, #8
9001ce20:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001ce24:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001ce28:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001ce2c:	f8cb 5004 	str.w	r5, [fp, #4]
9001ce30:	e7d1      	b.n	9001cdd6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001ce32:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001ce36:	f106 0701 	add.w	r7, r6, #1
9001ce3a:	d107      	bne.n	9001ce4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001ce3c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ce40:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ce44:	685d      	ldr	r5, [r3, #4]
9001ce46:	3c01      	subs	r4, #1
9001ce48:	b2a4      	uxth	r4, r4
9001ce4a:	e7c4      	b.n	9001cdd6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001ce4c:	f1bc 0f01 	cmp.w	ip, #1
9001ce50:	d12c      	bne.n	9001ceac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001ce52:	f003 0e03 	and.w	lr, r3, #3
9001ce56:	f003 0c0c 	and.w	ip, r3, #12
9001ce5a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001ce5e:	f1ae 0e02 	sub.w	lr, lr, #2
9001ce62:	f1ac 0c08 	sub.w	ip, ip, #8
9001ce66:	3b02      	subs	r3, #2
9001ce68:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001ce6c:	fa5f fe8e 	uxtb.w	lr, lr
9001ce70:	f36e 0507 	bfi	r5, lr, #0, #8
9001ce74:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001ce78:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001ce7c:	f36c 250f 	bfi	r5, ip, #8, #8
9001ce80:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001ce84:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ce88:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001ce8c:	b2db      	uxtb	r3, r3
9001ce8e:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001ce92:	f363 4517 	bfi	r5, r3, #16, #8
9001ce96:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001ce9a:	0e2e      	lsrs	r6, r5, #24
9001ce9c:	fb10 c606 	smlabb	r6, r0, r6, ip
9001cea0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001cea4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001cea8:	6075      	str	r5, [r6, #4]
9001ceaa:	e7cc      	b.n	9001ce46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001ceac:	f1bc 0f02 	cmp.w	ip, #2
9001ceb0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ceb4:	d12a      	bne.n	9001cf0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001ceb6:	1cb7      	adds	r7, r6, #2
9001ceb8:	7876      	ldrb	r6, [r6, #1]
9001ceba:	3b20      	subs	r3, #32
9001cebc:	b2f6      	uxtb	r6, r6
9001cebe:	f006 0c0f 	and.w	ip, r6, #15
9001cec2:	1136      	asrs	r6, r6, #4
9001cec4:	f1ac 0c08 	sub.w	ip, ip, #8
9001cec8:	3e08      	subs	r6, #8
9001ceca:	449c      	add	ip, r3
9001cecc:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001ced0:	fa5f fc8c 	uxtb.w	ip, ip
9001ced4:	f36c 0507 	bfi	r5, ip, #0, #8
9001ced8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001cedc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001cee0:	4433      	add	r3, r6
9001cee2:	fa5f fe8e 	uxtb.w	lr, lr
9001cee6:	f36e 250f 	bfi	r5, lr, #8, #8
9001ceea:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001ceee:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cef2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001cef6:	b2db      	uxtb	r3, r3
9001cef8:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001cefc:	f363 4517 	bfi	r5, r3, #16, #8
9001cf00:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001cf04:	0e2e      	lsrs	r6, r5, #24
9001cf06:	fb10 e606 	smlabb	r6, r0, r6, lr
9001cf0a:	e7c9      	b.n	9001cea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001cf0c:	1c5e      	adds	r6, r3, #1
9001cf0e:	42a6      	cmp	r6, r4
9001cf10:	dd4e      	ble.n	9001cfb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001cf12:	1b36      	subs	r6, r6, r4
9001cf14:	2e00      	cmp	r6, #0
9001cf16:	dc4e      	bgt.n	9001cfb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001cf18:	f8dd b004 	ldr.w	fp, [sp, #4]
9001cf1c:	2400      	movs	r4, #0
9001cf1e:	f1bb 0f00 	cmp.w	fp, #0
9001cf22:	f340 8122 	ble.w	9001d16a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001cf26:	1c7b      	adds	r3, r7, #1
9001cf28:	9303      	str	r3, [sp, #12]
9001cf2a:	783b      	ldrb	r3, [r7, #0]
9001cf2c:	b2db      	uxtb	r3, r3
9001cf2e:	2bfe      	cmp	r3, #254	@ 0xfe
9001cf30:	d160      	bne.n	9001cff4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001cf32:	7879      	ldrb	r1, [r7, #1]
9001cf34:	1d3b      	adds	r3, r7, #4
9001cf36:	78ba      	ldrb	r2, [r7, #2]
9001cf38:	b2c9      	uxtb	r1, r1
9001cf3a:	78f8      	ldrb	r0, [r7, #3]
9001cf3c:	b2d2      	uxtb	r2, r2
9001cf3e:	9303      	str	r3, [sp, #12]
9001cf40:	f361 0507 	bfi	r5, r1, #0, #8
9001cf44:	b2c0      	uxtb	r0, r0
9001cf46:	2303      	movs	r3, #3
9001cf48:	f362 250f 	bfi	r5, r2, #8, #8
9001cf4c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001cf50:	fb13 2200 	smlabb	r2, r3, r0, r2
9001cf54:	f360 4517 	bfi	r5, r0, #16, #8
9001cf58:	2307      	movs	r3, #7
9001cf5a:	0e2e      	lsrs	r6, r5, #24
9001cf5c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001cf60:	230b      	movs	r3, #11
9001cf62:	fb13 1306 	smlabb	r3, r3, r6, r1
9001cf66:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cf6a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001cf6e:	605d      	str	r5, [r3, #4]
9001cf70:	2601      	movs	r6, #1
9001cf72:	4637      	mov	r7, r6
9001cf74:	0e2b      	lsrs	r3, r5, #24
9001cf76:	ebab 0b07 	sub.w	fp, fp, r7
9001cf7a:	eba6 0607 	sub.w	r6, r6, r7
9001cf7e:	f040 80d3 	bne.w	9001d128 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001cf82:	b18c      	cbz	r4, 9001cfa8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001cf84:	4648      	mov	r0, r9
9001cf86:	00a1      	lsls	r1, r4, #2
9001cf88:	f7e5 fcf0 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001cf8c:	9b05      	ldr	r3, [sp, #20]
9001cf8e:	4622      	mov	r2, r4
9001cf90:	4649      	mov	r1, r9
9001cf92:	4640      	mov	r0, r8
9001cf94:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001cf98:	f7e5 fd56 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001cf9c:	4b2b      	ldr	r3, [pc, #172]	@ (9001d04c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001cf9e:	4a2c      	ldr	r2, [pc, #176]	@ (9001d050 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001cfa0:	4599      	cmp	r9, r3
9001cfa2:	bf08      	it	eq
9001cfa4:	4613      	moveq	r3, r2
9001cfa6:	4699      	mov	r9, r3
9001cfa8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001cfac:	2400      	movs	r4, #0
9001cfae:	e0da      	b.n	9001d166 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001cfb0:	1ba6      	subs	r6, r4, r6
9001cfb2:	b2b4      	uxth	r4, r6
9001cfb4:	e70f      	b.n	9001cdd6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001cfb6:	9b01      	ldr	r3, [sp, #4]
9001cfb8:	9a01      	ldr	r2, [sp, #4]
9001cfba:	42b3      	cmp	r3, r6
9001cfbc:	bfa8      	it	ge
9001cfbe:	4633      	movge	r3, r6
9001cfc0:	0e2c      	lsrs	r4, r5, #24
9001cfc2:	eba2 0b03 	sub.w	fp, r2, r3
9001cfc6:	eba6 0603 	sub.w	r6, r6, r3
9001cfca:	d00b      	beq.n	9001cfe4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001cfcc:	f1a9 0104 	sub.w	r1, r9, #4
9001cfd0:	461a      	mov	r2, r3
9001cfd2:	2a00      	cmp	r2, #0
9001cfd4:	dc02      	bgt.n	9001cfdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001cfd6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001cfda:	e7a0      	b.n	9001cf1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cfdc:	f841 5f04 	str.w	r5, [r1, #4]!
9001cfe0:	3a01      	subs	r2, #1
9001cfe2:	e7f6      	b.n	9001cfd2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001cfe4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001cfe8:	e799      	b.n	9001cf1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cfea:	4637      	mov	r7, r6
9001cfec:	f8dd b004 	ldr.w	fp, [sp, #4]
9001cff0:	4626      	mov	r6, r4
9001cff2:	e794      	b.n	9001cf1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cff4:	2bff      	cmp	r3, #255	@ 0xff
9001cff6:	d11d      	bne.n	9001d034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001cff8:	7878      	ldrb	r0, [r7, #1]
9001cffa:	1d7b      	adds	r3, r7, #5
9001cffc:	78ba      	ldrb	r2, [r7, #2]
9001cffe:	b2c0      	uxtb	r0, r0
9001d000:	78fe      	ldrb	r6, [r7, #3]
9001d002:	b2d2      	uxtb	r2, r2
9001d004:	9303      	str	r3, [sp, #12]
9001d006:	f360 0507 	bfi	r5, r0, #0, #8
9001d00a:	793b      	ldrb	r3, [r7, #4]
9001d00c:	b2f6      	uxtb	r6, r6
9001d00e:	b2d9      	uxtb	r1, r3
9001d010:	f362 250f 	bfi	r5, r2, #8, #8
9001d014:	2303      	movs	r3, #3
9001d016:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d01a:	f366 4517 	bfi	r5, r6, #16, #8
9001d01e:	fb13 2206 	smlabb	r2, r3, r6, r2
9001d022:	2307      	movs	r3, #7
9001d024:	f361 651f 	bfi	r5, r1, #24, #8
9001d028:	fb13 2000 	smlabb	r0, r3, r0, r2
9001d02c:	230b      	movs	r3, #11
9001d02e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001d032:	e798      	b.n	9001cf66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001d034:	119e      	asrs	r6, r3, #6
9001d036:	d10d      	bne.n	9001d054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001d038:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d03c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d040:	685d      	ldr	r5, [r3, #4]
9001d042:	e795      	b.n	9001cf70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d044:	2402198c 	.word	0x2402198c
9001d048:	24021986 	.word	0x24021986
9001d04c:	24005b80 	.word	0x24005b80
9001d050:	24005c80 	.word	0x24005c80
9001d054:	2e01      	cmp	r6, #1
9001d056:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001d05a:	d12b      	bne.n	9001d0b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001d05c:	f003 0003 	and.w	r0, r3, #3
9001d060:	f003 020c 	and.w	r2, r3, #12
9001d064:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001d068:	3802      	subs	r0, #2
9001d06a:	3a08      	subs	r2, #8
9001d06c:	1e9f      	subs	r7, r3, #2
9001d06e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001d072:	b2c0      	uxtb	r0, r0
9001d074:	f360 0507 	bfi	r5, r0, #0, #8
9001d078:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001d07c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001d080:	f362 250f 	bfi	r5, r2, #8, #8
9001d084:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d088:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001d08c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001d090:	2703      	movs	r7, #3
9001d092:	b2db      	uxtb	r3, r3
9001d094:	fb17 2203 	smlabb	r2, r7, r3, r2
9001d098:	2707      	movs	r7, #7
9001d09a:	f363 4517 	bfi	r5, r3, #16, #8
9001d09e:	230b      	movs	r3, #11
9001d0a0:	fb17 2000 	smlabb	r0, r7, r0, r2
9001d0a4:	fb13 0101 	smlabb	r1, r3, r1, r0
9001d0a8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d0ac:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d0b0:	604d      	str	r5, [r1, #4]
9001d0b2:	e75e      	b.n	9001cf72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001d0b4:	2e02      	cmp	r6, #2
9001d0b6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d0ba:	d12f      	bne.n	9001d11c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001d0bc:	7878      	ldrb	r0, [r7, #1]
9001d0be:	1cba      	adds	r2, r7, #2
9001d0c0:	3b20      	subs	r3, #32
9001d0c2:	b2c0      	uxtb	r0, r0
9001d0c4:	9203      	str	r2, [sp, #12]
9001d0c6:	f000 020f 	and.w	r2, r0, #15
9001d0ca:	1100      	asrs	r0, r0, #4
9001d0cc:	3a08      	subs	r2, #8
9001d0ce:	3808      	subs	r0, #8
9001d0d0:	441a      	add	r2, r3
9001d0d2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001d0d6:	b2d2      	uxtb	r2, r2
9001d0d8:	f362 0507 	bfi	r5, r2, #0, #8
9001d0dc:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001d0e0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001d0e4:	4403      	add	r3, r0
9001d0e6:	b2f6      	uxtb	r6, r6
9001d0e8:	f366 250f 	bfi	r5, r6, #8, #8
9001d0ec:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001d0f0:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001d0f4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001d0f8:	2003      	movs	r0, #3
9001d0fa:	b2db      	uxtb	r3, r3
9001d0fc:	fb10 6603 	smlabb	r6, r0, r3, r6
9001d100:	2007      	movs	r0, #7
9001d102:	f363 4517 	bfi	r5, r3, #16, #8
9001d106:	230b      	movs	r3, #11
9001d108:	fb10 6202 	smlabb	r2, r0, r2, r6
9001d10c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d110:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d114:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d118:	604d      	str	r5, [r1, #4]
9001d11a:	e729      	b.n	9001cf70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d11c:	1c5e      	adds	r6, r3, #1
9001d11e:	465f      	mov	r7, fp
9001d120:	45b3      	cmp	fp, r6
9001d122:	bfa8      	it	ge
9001d124:	4637      	movge	r7, r6
9001d126:	e725      	b.n	9001cf74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001d128:	193b      	adds	r3, r7, r4
9001d12a:	2b40      	cmp	r3, #64	@ 0x40
9001d12c:	dd13      	ble.n	9001d156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001d12e:	4648      	mov	r0, r9
9001d130:	00a1      	lsls	r1, r4, #2
9001d132:	f7e5 fc1b 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001d136:	4649      	mov	r1, r9
9001d138:	9b05      	ldr	r3, [sp, #20]
9001d13a:	4622      	mov	r2, r4
9001d13c:	4640      	mov	r0, r8
9001d13e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d142:	f7e5 fc81 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d146:	4b2c      	ldr	r3, [pc, #176]	@ (9001d1f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001d148:	2400      	movs	r4, #0
9001d14a:	4599      	cmp	r9, r3
9001d14c:	bf0c      	ite	eq
9001d14e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001d204 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001d152:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001d1f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001d156:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001d15a:	463b      	mov	r3, r7
9001d15c:	3b01      	subs	r3, #1
9001d15e:	f842 5b04 	str.w	r5, [r2], #4
9001d162:	d1fb      	bne.n	9001d15c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001d164:	443c      	add	r4, r7
9001d166:	9f03      	ldr	r7, [sp, #12]
9001d168:	e6d9      	b.n	9001cf1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d16a:	b15c      	cbz	r4, 9001d184 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001d16c:	00a1      	lsls	r1, r4, #2
9001d16e:	4648      	mov	r0, r9
9001d170:	f7e5 fbfc 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001d174:	4640      	mov	r0, r8
9001d176:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d17a:	9b05      	ldr	r3, [sp, #20]
9001d17c:	4622      	mov	r2, r4
9001d17e:	4649      	mov	r1, r9
9001d180:	f7e5 fc62 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d184:	4b1d      	ldr	r3, [pc, #116]	@ (9001d1fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001d186:	9a01      	ldr	r2, [sp, #4]
9001d188:	881b      	ldrh	r3, [r3, #0]
9001d18a:	1a9b      	subs	r3, r3, r2
9001d18c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d190:	9b04      	ldr	r3, [sp, #16]
9001d192:	3301      	adds	r3, #1
9001d194:	9304      	str	r3, [sp, #16]
9001d196:	9a04      	ldr	r2, [sp, #16]
9001d198:	9b00      	ldr	r3, [sp, #0]
9001d19a:	4293      	cmp	r3, r2
9001d19c:	d11d      	bne.n	9001d1da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001d19e:	9b02      	ldr	r3, [sp, #8]
9001d1a0:	2500      	movs	r5, #0
9001d1a2:	9a02      	ldr	r2, [sp, #8]
9001d1a4:	f103 0b01 	add.w	fp, r3, #1
9001d1a8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001d1ac:	9b06      	ldr	r3, [sp, #24]
9001d1ae:	4629      	mov	r1, r5
9001d1b0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001d1b4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001d1b8:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d1bc:	1ba4      	subs	r4, r4, r6
9001d1be:	9b07      	ldr	r3, [sp, #28]
9001d1c0:	ba3f      	rev	r7, r7
9001d1c2:	9808      	ldr	r0, [sp, #32]
9001d1c4:	b2a4      	uxth	r4, r4
9001d1c6:	441f      	add	r7, r3
9001d1c8:	f00c fcda 	bl	90029b80 <memset>
9001d1cc:	f8cd b008 	str.w	fp, [sp, #8]
9001d1d0:	9504      	str	r5, [sp, #16]
9001d1d2:	f7e5 fbc1 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001d1d6:	463e      	mov	r6, r7
9001d1d8:	e5cc      	b.n	9001cd74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001d1da:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d1de:	9b01      	ldr	r3, [sp, #4]
9001d1e0:	1ae4      	subs	r4, r4, r3
9001d1e2:	1ba4      	subs	r4, r4, r6
9001d1e4:	b2a4      	uxth	r4, r4
9001d1e6:	e7f4      	b.n	9001d1d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001d1e8:	4b05      	ldr	r3, [pc, #20]	@ (9001d200 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001d1ea:	6818      	ldr	r0, [r3, #0]
9001d1ec:	6803      	ldr	r3, [r0, #0]
9001d1ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d1f0:	4798      	blx	r3
9001d1f2:	b00f      	add	sp, #60	@ 0x3c
9001d1f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d1f8:	24005b80 	.word	0x24005b80
9001d1fc:	24021986 	.word	0x24021986
9001d200:	2402198c 	.word	0x2402198c
9001d204:	24005c80 	.word	0x24005c80

9001d208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d20c:	b08f      	sub	sp, #60	@ 0x3c
9001d20e:	461c      	mov	r4, r3
9001d210:	9205      	str	r2, [sp, #20]
9001d212:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d216:	9100      	str	r1, [sp, #0]
9001d218:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001d21a:	9201      	str	r2, [sp, #4]
9001d21c:	2a00      	cmp	r2, #0
9001d21e:	f000 8116 	beq.w	9001d44e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001d222:	6820      	ldr	r0, [r4, #0]
9001d224:	aa0a      	add	r2, sp, #40	@ 0x28
9001d226:	6861      	ldr	r1, [r4, #4]
9001d228:	c203      	stmia	r2!, {r0, r1}
9001d22a:	6818      	ldr	r0, [r3, #0]
9001d22c:	aa0c      	add	r2, sp, #48	@ 0x30
9001d22e:	6859      	ldr	r1, [r3, #4]
9001d230:	c203      	stmia	r2!, {r0, r1}
9001d232:	a80a      	add	r0, sp, #40	@ 0x28
9001d234:	f7f8 fe88 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d238:	4621      	mov	r1, r4
9001d23a:	a80c      	add	r0, sp, #48	@ 0x30
9001d23c:	f7f8 feac 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d240:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001d244:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001d248:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001d24c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001d250:	bfdb      	ittet	le
9001d252:	b2b3      	uxthle	r3, r6
9001d254:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001d258:	2301      	movgt	r3, #1
9001d25a:	fb92 f3f3 	sdivle	r3, r2, r3
9001d25e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d262:	441d      	add	r5, r3
9001d264:	fb92 f1f3 	sdiv	r1, r2, r3
9001d268:	fa1f fc81 	uxth.w	ip, r1
9001d26c:	3d01      	subs	r5, #1
9001d26e:	fb0c 2413 	mls	r4, ip, r3, r2
9001d272:	4661      	mov	r1, ip
9001d274:	fb14 f406 	smulbb	r4, r4, r6
9001d278:	4404      	add	r4, r0
9001d27a:	fb95 f5f3 	sdiv	r5, r5, r3
9001d27e:	b2a4      	uxth	r4, r4
9001d280:	b131      	cbz	r1, 9001d290 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001d282:	9b05      	ldr	r3, [sp, #20]
9001d284:	9900      	ldr	r1, [sp, #0]
9001d286:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d28a:	ba1b      	rev	r3, r3
9001d28c:	4419      	add	r1, r3
9001d28e:	9100      	str	r1, [sp, #0]
9001d290:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001d294:	b2ad      	uxth	r5, r5
9001d296:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001d29a:	4418      	add	r0, r3
9001d29c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001d2a0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001d2a4:	00ad      	lsls	r5, r5, #2
9001d2a6:	441a      	add	r2, r3
9001d2a8:	4b6a      	ldr	r3, [pc, #424]	@ (9001d454 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d2aa:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001d2ae:	6818      	ldr	r0, [r3, #0]
9001d2b0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001d2b4:	6803      	ldr	r3, [r0, #0]
9001d2b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d2b8:	4798      	blx	r3
9001d2ba:	4967      	ldr	r1, [pc, #412]	@ (9001d458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001d2bc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d2c0:	2c00      	cmp	r4, #0
9001d2c2:	880b      	ldrh	r3, [r1, #0]
9001d2c4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001d2c8:	bf0c      	ite	eq
9001d2ca:	46c6      	moveq	lr, r8
9001d2cc:	f04f 0e00 	movne.w	lr, #0
9001d2d0:	9109      	str	r1, [sp, #36]	@ 0x24
9001d2d2:	fb03 c202 	mla	r2, r3, r2, ip
9001d2d6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001d2da:	4373      	muls	r3, r6
9001d2dc:	fa1f fe8e 	uxth.w	lr, lr
9001d2e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d2e4:	9103      	str	r1, [sp, #12]
9001d2e6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d2ea:	9306      	str	r3, [sp, #24]
9001d2ec:	1d2b      	adds	r3, r5, #4
9001d2ee:	9307      	str	r3, [sp, #28]
9001d2f0:	9b01      	ldr	r3, [sp, #4]
9001d2f2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001d2f6:	2300      	movs	r3, #0
9001d2f8:	b292      	uxth	r2, r2
9001d2fa:	9302      	str	r3, [sp, #8]
9001d2fc:	9204      	str	r2, [sp, #16]
9001d2fe:	9a06      	ldr	r2, [sp, #24]
9001d300:	4282      	cmp	r2, r0
9001d302:	f240 809f 	bls.w	9001d444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001d306:	b963      	cbnz	r3, 9001d322 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d308:	9b00      	ldr	r3, [sp, #0]
9001d30a:	781a      	ldrb	r2, [r3, #0]
9001d30c:	0993      	lsrs	r3, r2, #6
9001d30e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d312:	9202      	str	r2, [sp, #8]
9001d314:	1e5a      	subs	r2, r3, #1
9001d316:	2a02      	cmp	r2, #2
9001d318:	d815      	bhi.n	9001d346 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001d31a:	9a00      	ldr	r2, [sp, #0]
9001d31c:	b29b      	uxth	r3, r3
9001d31e:	3201      	adds	r2, #1
9001d320:	9200      	str	r2, [sp, #0]
9001d322:	b1b4      	cbz	r4, 9001d352 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001d324:	429c      	cmp	r4, r3
9001d326:	bf91      	iteee	ls
9001d328:	1b1c      	subls	r4, r3, r4
9001d32a:	1ae4      	subhi	r4, r4, r3
9001d32c:	4671      	movhi	r1, lr
9001d32e:	f04f 0a00 	movhi.w	sl, #0
9001d332:	bf9b      	ittet	ls
9001d334:	fa1f fa84 	uxthls.w	sl, r4
9001d338:	2400      	movls	r4, #0
9001d33a:	b2a4      	uxthhi	r4, r4
9001d33c:	fa1f f188 	uxthls.w	r1, r8
9001d340:	4653      	mov	r3, sl
9001d342:	468e      	mov	lr, r1
9001d344:	e7db      	b.n	9001d2fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001d346:	9a00      	ldr	r2, [sp, #0]
9001d348:	9b00      	ldr	r3, [sp, #0]
9001d34a:	3202      	adds	r2, #2
9001d34c:	785b      	ldrb	r3, [r3, #1]
9001d34e:	9200      	str	r2, [sp, #0]
9001d350:	e7e7      	b.n	9001d322 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d352:	2202      	movs	r2, #2
9001d354:	9907      	ldr	r1, [sp, #28]
9001d356:	4573      	cmp	r3, lr
9001d358:	4615      	mov	r5, r2
9001d35a:	9a02      	ldr	r2, [sp, #8]
9001d35c:	bf24      	itt	cs
9001d35e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001d362:	46f1      	movcs	r9, lr
9001d364:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d368:	9905      	ldr	r1, [sp, #20]
9001d36a:	bf34      	ite	cc
9001d36c:	4699      	movcc	r9, r3
9001d36e:	fa1f fa8a 	uxthcs.w	sl, sl
9001d372:	f831 c002 	ldrh.w	ip, [r1, r2]
9001d376:	bf38      	it	cc
9001d378:	ebae 0103 	subcc.w	r1, lr, r3
9001d37c:	9a01      	ldr	r2, [sp, #4]
9001d37e:	bf2e      	itee	cs
9001d380:	4621      	movcs	r1, r4
9001d382:	b289      	uxthcc	r1, r1
9001d384:	46a2      	movcc	sl, r4
9001d386:	2aff      	cmp	r2, #255	@ 0xff
9001d388:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001d38c:	d105      	bne.n	9001d39a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001d38e:	4481      	add	r9, r0
9001d390:	4581      	cmp	r9, r0
9001d392:	d045      	beq.n	9001d420 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d394:	f820 cb02 	strh.w	ip, [r0], #2
9001d398:	e7fa      	b.n	9001d390 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001d39a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001d39e:	9d03      	ldr	r5, [sp, #12]
9001d3a0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001d3a4:	4481      	add	r9, r0
9001d3a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d3aa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001d3ae:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d3b2:	fa5f fc8c 	uxtb.w	ip, ip
9001d3b6:	436a      	muls	r2, r5
9001d3b8:	fb0b fb05 	mul.w	fp, fp, r5
9001d3bc:	fb0c fc05 	mul.w	ip, ip, r5
9001d3c0:	9208      	str	r2, [sp, #32]
9001d3c2:	4581      	cmp	r9, r0
9001d3c4:	d02c      	beq.n	9001d420 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d3c6:	8802      	ldrh	r2, [r0, #0]
9001d3c8:	9d04      	ldr	r5, [sp, #16]
9001d3ca:	1216      	asrs	r6, r2, #8
9001d3cc:	9f04      	ldr	r7, [sp, #16]
9001d3ce:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d3d2:	fb16 f605 	smulbb	r6, r6, r5
9001d3d6:	9d08      	ldr	r5, [sp, #32]
9001d3d8:	442e      	add	r6, r5
9001d3da:	10d5      	asrs	r5, r2, #3
9001d3dc:	00d2      	lsls	r2, r2, #3
9001d3de:	b2b6      	uxth	r6, r6
9001d3e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d3e4:	b2d2      	uxtb	r2, r2
9001d3e6:	fb15 f507 	smulbb	r5, r5, r7
9001d3ea:	fb12 f207 	smulbb	r2, r2, r7
9001d3ee:	1c77      	adds	r7, r6, #1
9001d3f0:	445d      	add	r5, fp
9001d3f2:	4462      	add	r2, ip
9001d3f4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001d3f8:	b2ad      	uxth	r5, r5
9001d3fa:	b292      	uxth	r2, r2
9001d3fc:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d400:	1c57      	adds	r7, r2, #1
9001d402:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001d406:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d40a:	4316      	orrs	r6, r2
9001d40c:	1c6a      	adds	r2, r5, #1
9001d40e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d412:	096d      	lsrs	r5, r5, #5
9001d414:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d418:	432e      	orrs	r6, r5
9001d41a:	f820 6b02 	strh.w	r6, [r0], #2
9001d41e:	e7d0      	b.n	9001d3c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001d420:	4573      	cmp	r3, lr
9001d422:	d38d      	bcc.n	9001d340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d424:	fa1f f188 	uxth.w	r1, r8
9001d428:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d42c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d42e:	1a64      	subs	r4, r4, r1
9001d430:	881b      	ldrh	r3, [r3, #0]
9001d432:	b2a4      	uxth	r4, r4
9001d434:	eba3 0308 	sub.w	r3, r3, r8
9001d438:	2c00      	cmp	r4, #0
9001d43a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d43e:	bf18      	it	ne
9001d440:	2100      	movne	r1, #0
9001d442:	e77d      	b.n	9001d340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d444:	4b03      	ldr	r3, [pc, #12]	@ (9001d454 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d446:	6818      	ldr	r0, [r3, #0]
9001d448:	6803      	ldr	r3, [r0, #0]
9001d44a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d44c:	4798      	blx	r3
9001d44e:	b00f      	add	sp, #60	@ 0x3c
9001d450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d454:	2402198c 	.word	0x2402198c
9001d458:	24021986 	.word	0x24021986

9001d45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d460:	b09f      	sub	sp, #124	@ 0x7c
9001d462:	461d      	mov	r5, r3
9001d464:	4604      	mov	r4, r0
9001d466:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001d468:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001d46c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001d470:	9209      	str	r2, [sp, #36]	@ 0x24
9001d472:	2a00      	cmp	r2, #0
9001d474:	f000 81ed 	beq.w	9001d852 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001d478:	6828      	ldr	r0, [r5, #0]
9001d47a:	aa1a      	add	r2, sp, #104	@ 0x68
9001d47c:	6869      	ldr	r1, [r5, #4]
9001d47e:	c203      	stmia	r2!, {r0, r1}
9001d480:	6818      	ldr	r0, [r3, #0]
9001d482:	aa1c      	add	r2, sp, #112	@ 0x70
9001d484:	6859      	ldr	r1, [r3, #4]
9001d486:	c203      	stmia	r2!, {r0, r1}
9001d488:	a81a      	add	r0, sp, #104	@ 0x68
9001d48a:	f7f8 fd5d 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d48e:	4629      	mov	r1, r5
9001d490:	a81c      	add	r0, sp, #112	@ 0x70
9001d492:	f7f8 fd81 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d496:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d49a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001d49e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d4a2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001d4a6:	bfdb      	ittet	le
9001d4a8:	b29a      	uxthle	r2, r3
9001d4aa:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d4ae:	2201      	movgt	r2, #1
9001d4b0:	fb91 f2f2 	sdivle	r2, r1, r2
9001d4b4:	9202      	str	r2, [sp, #8]
9001d4b6:	9802      	ldr	r0, [sp, #8]
9001d4b8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001d4bc:	9902      	ldr	r1, [sp, #8]
9001d4be:	fb92 f0f0 	sdiv	r0, r2, r0
9001d4c2:	b280      	uxth	r0, r0
9001d4c4:	4488      	add	r8, r1
9001d4c6:	9010      	str	r0, [sp, #64]	@ 0x40
9001d4c8:	f108 38ff 	add.w	r8, r8, #4294967295
9001d4cc:	9802      	ldr	r0, [sp, #8]
9001d4ce:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001d4d0:	fb05 2510 	mls	r5, r5, r0, r2
9001d4d4:	fb98 f8f1 	sdiv	r8, r8, r1
9001d4d8:	fb15 f503 	smulbb	r5, r5, r3
9001d4dc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001d4e0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001d4e4:	f108 0801 	add.w	r8, r8, #1
9001d4e8:	440d      	add	r5, r1
9001d4ea:	4419      	add	r1, r3
9001d4ec:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001d4f0:	fa1f f888 	uxth.w	r8, r8
9001d4f4:	441a      	add	r2, r3
9001d4f6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001d4fa:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001d4fe:	b2ad      	uxth	r5, r5
9001d500:	9304      	str	r3, [sp, #16]
9001d502:	4b94      	ldr	r3, [pc, #592]	@ (9001d754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001d504:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001d508:	6818      	ldr	r0, [r3, #0]
9001d50a:	6803      	ldr	r3, [r0, #0]
9001d50c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d50e:	4798      	blx	r3
9001d510:	4b91      	ldr	r3, [pc, #580]	@ (9001d758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d512:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001d516:	2d00      	cmp	r5, #0
9001d518:	881a      	ldrh	r2, [r3, #0]
9001d51a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001d51e:	fb02 f606 	mul.w	r6, r2, r6
9001d522:	fb02 7101 	mla	r1, r2, r1, r7
9001d526:	9318      	str	r3, [sp, #96]	@ 0x60
9001d528:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d52c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001d530:	f04f 0100 	mov.w	r1, #0
9001d534:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001d538:	930f      	str	r3, [sp, #60]	@ 0x3c
9001d53a:	4b88      	ldr	r3, [pc, #544]	@ (9001d75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001d53c:	920a      	str	r2, [sp, #40]	@ 0x28
9001d53e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d540:	eba3 0304 	sub.w	r3, r3, r4
9001d544:	910d      	str	r1, [sp, #52]	@ 0x34
9001d546:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001d54a:	9319      	str	r3, [sp, #100]	@ 0x64
9001d54c:	f108 0204 	add.w	r2, r8, #4
9001d550:	9211      	str	r2, [sp, #68]	@ 0x44
9001d552:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d554:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001d558:	9215      	str	r2, [sp, #84]	@ 0x54
9001d55a:	9a04      	ldr	r2, [sp, #16]
9001d55c:	bf18      	it	ne
9001d55e:	2200      	movne	r2, #0
9001d560:	b292      	uxth	r2, r2
9001d562:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001d564:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d566:	fa11 f383 	uxtah	r3, r1, r3
9001d56a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001d56c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d570:	3304      	adds	r3, #4
9001d572:	9306      	str	r3, [sp, #24]
9001d574:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d576:	4283      	cmp	r3, r0
9001d578:	f240 8166 	bls.w	9001d848 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001d57c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001d580:	f04f 0a01 	mov.w	sl, #1
9001d584:	9902      	ldr	r1, [sp, #8]
9001d586:	9e06      	ldr	r6, [sp, #24]
9001d588:	46d3      	mov	fp, sl
9001d58a:	4657      	mov	r7, sl
9001d58c:	7836      	ldrb	r6, [r6, #0]
9001d58e:	fbb5 f3f3 	udiv	r3, r5, r3
9001d592:	1acb      	subs	r3, r1, r3
9001d594:	9612      	str	r6, [sp, #72]	@ 0x48
9001d596:	3601      	adds	r6, #1
9001d598:	b29b      	uxth	r3, r3
9001d59a:	9605      	str	r6, [sp, #20]
9001d59c:	9316      	str	r3, [sp, #88]	@ 0x58
9001d59e:	9b06      	ldr	r3, [sp, #24]
9001d5a0:	7859      	ldrb	r1, [r3, #1]
9001d5a2:	789b      	ldrb	r3, [r3, #2]
9001d5a4:	021b      	lsls	r3, r3, #8
9001d5a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001d5aa:	9906      	ldr	r1, [sp, #24]
9001d5ac:	78c9      	ldrb	r1, [r1, #3]
9001d5ae:	430b      	orrs	r3, r1
9001d5b0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001d5b2:	4419      	add	r1, r3
9001d5b4:	1c4e      	adds	r6, r1, #1
9001d5b6:	7849      	ldrb	r1, [r1, #1]
9001d5b8:	9603      	str	r6, [sp, #12]
9001d5ba:	0209      	lsls	r1, r1, #8
9001d5bc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d5be:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001d5c2:	5cf3      	ldrb	r3, [r6, r3]
9001d5c4:	4319      	orrs	r1, r3
9001d5c6:	b28b      	uxth	r3, r1
9001d5c8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001d5cc:	930c      	str	r3, [sp, #48]	@ 0x30
9001d5ce:	2300      	movs	r3, #0
9001d5d0:	9307      	str	r3, [sp, #28]
9001d5d2:	469c      	mov	ip, r3
9001d5d4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001d5d8:	930e      	str	r3, [sp, #56]	@ 0x38
9001d5da:	2d00      	cmp	r5, #0
9001d5dc:	d07e      	beq.n	9001d6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001d5de:	42af      	cmp	r7, r5
9001d5e0:	d26e      	bcs.n	9001d6c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001d5e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d5e4:	1bed      	subs	r5, r5, r7
9001d5e6:	9201      	str	r2, [sp, #4]
9001d5e8:	4283      	cmp	r3, r0
9001d5ea:	b2ad      	uxth	r5, r5
9001d5ec:	d802      	bhi.n	9001d5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001d5ee:	e073      	b.n	9001d6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001d5f0:	2b00      	cmp	r3, #0
9001d5f2:	d15f      	bne.n	9001d6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001d5f4:	9b03      	ldr	r3, [sp, #12]
9001d5f6:	f1cb 0207 	rsb	r2, fp, #7
9001d5fa:	785b      	ldrb	r3, [r3, #1]
9001d5fc:	4093      	lsls	r3, r2
9001d5fe:	005b      	lsls	r3, r3, #1
9001d600:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001d604:	9b03      	ldr	r3, [sp, #12]
9001d606:	781b      	ldrb	r3, [r3, #0]
9001d608:	fa43 f30b 	asr.w	r3, r3, fp
9001d60c:	b2db      	uxtb	r3, r3
9001d60e:	4313      	orrs	r3, r2
9001d610:	f10b 0201 	add.w	r2, fp, #1
9001d614:	fa5f fb82 	uxtb.w	fp, r2
9001d618:	9a03      	ldr	r2, [sp, #12]
9001d61a:	b29f      	uxth	r7, r3
9001d61c:	f1bb 0f08 	cmp.w	fp, #8
9001d620:	bf13      	iteet	ne
9001d622:	3201      	addne	r2, #1
9001d624:	3202      	addeq	r2, #2
9001d626:	f04f 0b00 	moveq.w	fp, #0
9001d62a:	9203      	strne	r2, [sp, #12]
9001d62c:	bf08      	it	eq
9001d62e:	9203      	streq	r2, [sp, #12]
9001d630:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d632:	42ba      	cmp	r2, r7
9001d634:	d309      	bcc.n	9001d64a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001d636:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001d63a:	2301      	movs	r3, #1
9001d63c:	9a05      	ldr	r2, [sp, #20]
9001d63e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001d642:	d30e      	bcc.n	9001d662 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001d644:	469a      	mov	sl, r3
9001d646:	2600      	movs	r6, #0
9001d648:	e035      	b.n	9001d6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001d64a:	9b05      	ldr	r3, [sp, #20]
9001d64c:	429f      	cmp	r7, r3
9001d64e:	d318      	bcc.n	9001d682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001d650:	eb04 030a 	add.w	r3, r4, sl
9001d654:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001d658:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001d65c:	f10a 0301 	add.w	r3, sl, #1
9001d660:	b29b      	uxth	r3, r3
9001d662:	9a05      	ldr	r2, [sp, #20]
9001d664:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001d668:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d66c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001d66e:	7116      	strb	r6, [r2, #4]
9001d670:	f10a 0601 	add.w	r6, sl, #1
9001d674:	80d1      	strh	r1, [r2, #6]
9001d676:	7156      	strb	r6, [r2, #5]
9001d678:	9a05      	ldr	r2, [sp, #20]
9001d67a:	3201      	adds	r2, #1
9001d67c:	b292      	uxth	r2, r2
9001d67e:	9205      	str	r2, [sp, #20]
9001d680:	e7e0      	b.n	9001d644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001d682:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001d686:	463a      	mov	r2, r7
9001d688:	795b      	ldrb	r3, [r3, #5]
9001d68a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001d68e:	4426      	add	r6, r4
9001d690:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001d692:	eb01 0c06 	add.w	ip, r1, r6
9001d696:	f1bc 0f00 	cmp.w	ip, #0
9001d69a:	dd07      	ble.n	9001d6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001d69c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d6a0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001d6a4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001d6a8:	88d2      	ldrh	r2, [r2, #6]
9001d6aa:	e7f1      	b.n	9001d690 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001d6ac:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001d6b0:	b29b      	uxth	r3, r3
9001d6b2:	e7c3      	b.n	9001d63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001d6b4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001d6b6:	970c      	str	r7, [sp, #48]	@ 0x30
9001d6b8:	46b4      	mov	ip, r6
9001d6ba:	9a01      	ldr	r2, [sp, #4]
9001d6bc:	461f      	mov	r7, r3
9001d6be:	e78c      	b.n	9001d5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001d6c0:	1b7b      	subs	r3, r7, r5
9001d6c2:	eb0c 0605 	add.w	r6, ip, r5
9001d6c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d6ca:	b29b      	uxth	r3, r3
9001d6cc:	b2b6      	uxth	r6, r6
9001d6ce:	9201      	str	r2, [sp, #4]
9001d6d0:	2500      	movs	r5, #0
9001d6d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001d6d4:	4282      	cmp	r2, r0
9001d6d6:	d88b      	bhi.n	9001d5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001d6d8:	9a01      	ldr	r2, [sp, #4]
9001d6da:	e74b      	b.n	9001d574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001d6dc:	4297      	cmp	r7, r2
9001d6de:	d332      	bcc.n	9001d746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001d6e0:	1abb      	subs	r3, r7, r2
9001d6e2:	9208      	str	r2, [sp, #32]
9001d6e4:	9501      	str	r5, [sp, #4]
9001d6e6:	b29b      	uxth	r3, r3
9001d6e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001d6ea:	29ff      	cmp	r1, #255	@ 0xff
9001d6ec:	9908      	ldr	r1, [sp, #32]
9001d6ee:	eb0c 0601 	add.w	r6, ip, r1
9001d6f2:	d135      	bne.n	9001d760 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001d6f4:	f1a0 0e02 	sub.w	lr, r0, #2
9001d6f8:	b2b6      	uxth	r6, r6
9001d6fa:	45b4      	cmp	ip, r6
9001d6fc:	f040 808c 	bne.w	9001d818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001d700:	9908      	ldr	r1, [sp, #32]
9001d702:	4297      	cmp	r7, r2
9001d704:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d708:	d3e2      	bcc.n	9001d6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001d70a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001d70c:	9904      	ldr	r1, [sp, #16]
9001d70e:	8812      	ldrh	r2, [r2, #0]
9001d710:	1a52      	subs	r2, r2, r1
9001d712:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001d714:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d718:	9a07      	ldr	r2, [sp, #28]
9001d71a:	3201      	adds	r2, #1
9001d71c:	428a      	cmp	r2, r1
9001d71e:	9207      	str	r2, [sp, #28]
9001d720:	f040 8087 	bne.w	9001d832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001d724:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001d728:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001d72c:	9b04      	ldr	r3, [sp, #16]
9001d72e:	1bed      	subs	r5, r5, r7
9001d730:	b2ad      	uxth	r5, r5
9001d732:	2d00      	cmp	r5, #0
9001d734:	bf08      	it	eq
9001d736:	461a      	moveq	r2, r3
9001d738:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d73a:	bf18      	it	ne
9001d73c:	2200      	movne	r2, #0
9001d73e:	3301      	adds	r3, #1
9001d740:	b292      	uxth	r2, r2
9001d742:	930d      	str	r3, [sp, #52]	@ 0x34
9001d744:	e70d      	b.n	9001d562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001d746:	1bd1      	subs	r1, r2, r7
9001d748:	9708      	str	r7, [sp, #32]
9001d74a:	b28b      	uxth	r3, r1
9001d74c:	9301      	str	r3, [sp, #4]
9001d74e:	462b      	mov	r3, r5
9001d750:	e7ca      	b.n	9001d6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001d752:	bf00      	nop
9001d754:	2402198c 	.word	0x2402198c
9001d758:	24021986 	.word	0x24021986
9001d75c:	fffff7fb 	.word	0xfffff7fb
9001d760:	b2b6      	uxth	r6, r6
9001d762:	900b      	str	r0, [sp, #44]	@ 0x2c
9001d764:	45b4      	cmp	ip, r6
9001d766:	d0cb      	beq.n	9001d700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001d768:	f10c 0101 	add.w	r1, ip, #1
9001d76c:	44a4      	add	ip, r4
9001d76e:	9117      	str	r1, [sp, #92]	@ 0x5c
9001d770:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001d774:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d776:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d77a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001d77c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001d780:	f8b1 c000 	ldrh.w	ip, [r1]
9001d784:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d786:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001d78a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001d78e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001d792:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001d796:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d79a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d79e:	fb1e fe01 	smulbb	lr, lr, r1
9001d7a2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d7a4:	fa5f fc8c 	uxtb.w	ip, ip
9001d7a8:	fb08 e801 	mla	r8, r8, r1, lr
9001d7ac:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001d7b0:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d7b2:	00ed      	lsls	r5, r5, #3
9001d7b4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001d7b8:	fa1f f888 	uxth.w	r8, r8
9001d7bc:	fb19 f901 	smulbb	r9, r9, r1
9001d7c0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d7c2:	b2ed      	uxtb	r5, r5
9001d7c4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001d7c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d7ca:	fb1c fc01 	smulbb	ip, ip, r1
9001d7ce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d7d0:	fa1f fe8e 	uxth.w	lr, lr
9001d7d4:	fb05 c501 	mla	r5, r5, r1, ip
9001d7d8:	f108 0c01 	add.w	ip, r8, #1
9001d7dc:	f10e 0901 	add.w	r9, lr, #1
9001d7e0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001d7e2:	b2ad      	uxth	r5, r5
9001d7e4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001d7e8:	f105 0c01 	add.w	ip, r5, #1
9001d7ec:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001d7f0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001d7f4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001d7f8:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d7fc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d800:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d804:	ea4c 0808 	orr.w	r8, ip, r8
9001d808:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001d80c:	ea48 0809 	orr.w	r8, r8, r9
9001d810:	f821 8b02 	strh.w	r8, [r1], #2
9001d814:	910b      	str	r1, [sp, #44]	@ 0x2c
9001d816:	e7a5      	b.n	9001d764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001d818:	f10c 0801 	add.w	r8, ip, #1
9001d81c:	44a4      	add	ip, r4
9001d81e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d820:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001d824:	fa1f fc88 	uxth.w	ip, r8
9001d828:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d82c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001d830:	e763      	b.n	9001d6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001d832:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d836:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001d83a:	1aad      	subs	r5, r5, r2
9001d83c:	b2ad      	uxth	r5, r5
9001d83e:	2d00      	cmp	r5, #0
9001d840:	bf18      	it	ne
9001d842:	2200      	movne	r2, #0
9001d844:	9201      	str	r2, [sp, #4]
9001d846:	e744      	b.n	9001d6d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001d848:	4b03      	ldr	r3, [pc, #12]	@ (9001d858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001d84a:	6818      	ldr	r0, [r3, #0]
9001d84c:	6803      	ldr	r3, [r0, #0]
9001d84e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d850:	4798      	blx	r3
9001d852:	b01f      	add	sp, #124	@ 0x7c
9001d854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d858:	2402198c 	.word	0x2402198c

9001d85c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001d85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d860:	b093      	sub	sp, #76	@ 0x4c
9001d862:	4616      	mov	r6, r2
9001d864:	460d      	mov	r5, r1
9001d866:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001d86a:	9003      	str	r0, [sp, #12]
9001d86c:	9201      	str	r2, [sp, #4]
9001d86e:	2a00      	cmp	r2, #0
9001d870:	f000 8303 	beq.w	9001de7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001d874:	6830      	ldr	r0, [r6, #0]
9001d876:	ac0e      	add	r4, sp, #56	@ 0x38
9001d878:	6871      	ldr	r1, [r6, #4]
9001d87a:	c403      	stmia	r4!, {r0, r1}
9001d87c:	6818      	ldr	r0, [r3, #0]
9001d87e:	ac10      	add	r4, sp, #64	@ 0x40
9001d880:	6859      	ldr	r1, [r3, #4]
9001d882:	c403      	stmia	r4!, {r0, r1}
9001d884:	a80e      	add	r0, sp, #56	@ 0x38
9001d886:	f7f8 fb5f 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d88a:	4631      	mov	r1, r6
9001d88c:	a810      	add	r0, sp, #64	@ 0x40
9001d88e:	f7f8 fb83 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d892:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001d896:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d89a:	bfdb      	ittet	le
9001d89c:	b293      	uxthle	r3, r2
9001d89e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d8a2:	2301      	movgt	r3, #1
9001d8a4:	fb91 f3f3 	sdivle	r3, r1, r3
9001d8a8:	9304      	str	r3, [sp, #16]
9001d8aa:	f105 0308 	add.w	r3, r5, #8
9001d8ae:	9904      	ldr	r1, [sp, #16]
9001d8b0:	9308      	str	r3, [sp, #32]
9001d8b2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001d8b6:	440b      	add	r3, r1
9001d8b8:	3b01      	subs	r3, #1
9001d8ba:	fb93 f3f1 	sdiv	r3, r3, r1
9001d8be:	3b01      	subs	r3, #1
9001d8c0:	9908      	ldr	r1, [sp, #32]
9001d8c2:	b29b      	uxth	r3, r3
9001d8c4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d8c8:	9904      	ldr	r1, [sp, #16]
9001d8ca:	9309      	str	r3, [sp, #36]	@ 0x24
9001d8cc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001d8d0:	fb93 f0f1 	sdiv	r0, r3, r1
9001d8d4:	b284      	uxth	r4, r0
9001d8d6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001d8da:	9405      	str	r4, [sp, #20]
9001d8dc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001d8e0:	fb05 3914 	mls	r9, r5, r4, r3
9001d8e4:	fb19 f902 	smulbb	r9, r9, r2
9001d8e8:	4489      	add	r9, r1
9001d8ea:	fa1f f989 	uxth.w	r9, r9
9001d8ee:	2d00      	cmp	r5, #0
9001d8f0:	d05d      	beq.n	9001d9ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001d8f2:	1e6a      	subs	r2, r5, #1
9001d8f4:	9808      	ldr	r0, [sp, #32]
9001d8f6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001d8fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d8fc:	fa9a fa8a 	rev.w	sl, sl
9001d900:	4492      	add	sl, r2
9001d902:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001d906:	f04f 0600 	mov.w	r6, #0
9001d90a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001d90e:	4411      	add	r1, r2
9001d910:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001d914:	4413      	add	r3, r2
9001d916:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001d91a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001d91e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001d922:	9302      	str	r3, [sp, #8]
9001d924:	4bca      	ldr	r3, [pc, #808]	@ (9001dc50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001d926:	6818      	ldr	r0, [r3, #0]
9001d928:	6803      	ldr	r3, [r0, #0]
9001d92a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d92c:	4798      	blx	r3
9001d92e:	4bc9      	ldr	r3, [pc, #804]	@ (9001dc54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001d930:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001d934:	2100      	movs	r1, #0
9001d936:	881b      	ldrh	r3, [r3, #0]
9001d938:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001d93c:	fb03 2404 	mla	r4, r3, r4, r2
9001d940:	2280      	movs	r2, #128	@ 0x80
9001d942:	436b      	muls	r3, r5
9001d944:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d948:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d94c:	930d      	str	r3, [sp, #52]	@ 0x34
9001d94e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001d952:	fb99 f3f3 	sdiv	r3, r9, r3
9001d956:	9306      	str	r3, [sp, #24]
9001d958:	9b01      	ldr	r3, [sp, #4]
9001d95a:	43db      	mvns	r3, r3
9001d95c:	b2db      	uxtb	r3, r3
9001d95e:	930a      	str	r3, [sp, #40]	@ 0x28
9001d960:	9b03      	ldr	r3, [sp, #12]
9001d962:	3304      	adds	r3, #4
9001d964:	4618      	mov	r0, r3
9001d966:	930b      	str	r3, [sp, #44]	@ 0x2c
9001d968:	f00c f90a 	bl	90029b80 <memset>
9001d96c:	4bba      	ldr	r3, [pc, #744]	@ (9001dc58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001d96e:	9300      	str	r3, [sp, #0]
9001d970:	2300      	movs	r3, #0
9001d972:	9307      	str	r3, [sp, #28]
9001d974:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d976:	42a3      	cmp	r3, r4
9001d978:	f240 827a 	bls.w	9001de70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001d97c:	f04f 0e07 	mov.w	lr, #7
9001d980:	f1b9 0f00 	cmp.w	r9, #0
9001d984:	f000 8159 	beq.w	9001dc3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001d988:	f89a 5000 	ldrb.w	r5, [sl]
9001d98c:	f10a 0701 	add.w	r7, sl, #1
9001d990:	b2ed      	uxtb	r5, r5
9001d992:	11aa      	asrs	r2, r5, #6
9001d994:	d10e      	bne.n	9001d9b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001d996:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001d99a:	9b03      	ldr	r3, [sp, #12]
9001d99c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001d9a0:	88ae      	ldrh	r6, [r5, #4]
9001d9a2:	f109 39ff 	add.w	r9, r9, #4294967295
9001d9a6:	fa1f f989 	uxth.w	r9, r9
9001d9aa:	46ba      	mov	sl, r7
9001d9ac:	e7e8      	b.n	9001d980 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001d9ae:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001d9b2:	e7a6      	b.n	9001d902 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001d9b4:	2a01      	cmp	r2, #1
9001d9b6:	d129      	bne.n	9001da0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001d9b8:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001d9bc:	f005 0203 	and.w	r2, r5, #3
9001d9c0:	2103      	movs	r1, #3
9001d9c2:	3b02      	subs	r3, #2
9001d9c4:	4413      	add	r3, r2
9001d9c6:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001d9ca:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001d9ce:	f003 031f 	and.w	r3, r3, #31
9001d9d2:	3a02      	subs	r2, #2
9001d9d4:	3d02      	subs	r5, #2
9001d9d6:	f363 0604 	bfi	r6, r3, #0, #5
9001d9da:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001d9de:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d9e2:	f362 164a 	bfi	r6, r2, #5, #6
9001d9e6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d9ea:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001d9ee:	f005 051f 	and.w	r5, r5, #31
9001d9f2:	fb11 2205 	smlabb	r2, r1, r5, r2
9001d9f6:	f365 26cf 	bfi	r6, r5, #11, #5
9001d9fa:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001d9fe:	9a03      	ldr	r2, [sp, #12]
9001da00:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001da04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001da08:	809e      	strh	r6, [r3, #4]
9001da0a:	e7ca      	b.n	9001d9a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001da0c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001da10:	2a02      	cmp	r2, #2
9001da12:	b2ab      	uxth	r3, r5
9001da14:	d136      	bne.n	9001da84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001da16:	2101      	movs	r1, #1
9001da18:	fb12 1205 	smlabb	r2, r2, r5, r1
9001da1c:	4492      	add	sl, r2
9001da1e:	463a      	mov	r2, r7
9001da20:	4552      	cmp	r2, sl
9001da22:	d01c      	beq.n	9001da5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001da24:	4694      	mov	ip, r2
9001da26:	f04f 0b03 	mov.w	fp, #3
9001da2a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001da2e:	7852      	ldrb	r2, [r2, #1]
9001da30:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001da34:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001da38:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001da3c:	f001 021f 	and.w	r2, r1, #31
9001da40:	460e      	mov	r6, r1
9001da42:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001da46:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001da4a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001da4e:	9a03      	ldr	r2, [sp, #12]
9001da50:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001da54:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001da58:	4662      	mov	r2, ip
9001da5a:	8081      	strh	r1, [r0, #4]
9001da5c:	e7e0      	b.n	9001da20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001da5e:	4599      	cmp	r9, r3
9001da60:	d20b      	bcs.n	9001da7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001da62:	eba5 0509 	sub.w	r5, r5, r9
9001da66:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001da6a:	2d00      	cmp	r5, #0
9001da6c:	f300 8208 	bgt.w	9001de80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001da70:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001da74:	2301      	movs	r3, #1
9001da76:	9307      	str	r3, [sp, #28]
9001da78:	e00c      	b.n	9001da94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001da7a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001da7e:	eba9 0903 	sub.w	r9, r9, r3
9001da82:	e790      	b.n	9001d9a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001da84:	4599      	cmp	r9, r3
9001da86:	d2fa      	bcs.n	9001da7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001da88:	eba5 0509 	sub.w	r5, r5, r9
9001da8c:	2d00      	cmp	r5, #0
9001da8e:	dc1d      	bgt.n	9001dacc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001da90:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001da94:	f04f 0b00 	mov.w	fp, #0
9001da98:	f1b8 0f00 	cmp.w	r8, #0
9001da9c:	f340 81a0 	ble.w	9001dde0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001daa0:	783b      	ldrb	r3, [r7, #0]
9001daa2:	f107 0a01 	add.w	sl, r7, #1
9001daa6:	b2db      	uxtb	r3, r3
9001daa8:	119a      	asrs	r2, r3, #6
9001daaa:	f040 80d7 	bne.w	9001dc5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001daae:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dab2:	9a03      	ldr	r2, [sp, #12]
9001dab4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001dab8:	889e      	ldrh	r6, [r3, #4]
9001daba:	9b01      	ldr	r3, [sp, #4]
9001dabc:	2bff      	cmp	r3, #255	@ 0xff
9001dabe:	f040 81e8 	bne.w	9001de92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001dac2:	8026      	strh	r6, [r4, #0]
9001dac4:	f108 38ff 	add.w	r8, r8, #4294967295
9001dac8:	3402      	adds	r4, #2
9001daca:	e0be      	b.n	9001dc4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001dacc:	9b02      	ldr	r3, [sp, #8]
9001dace:	9a02      	ldr	r2, [sp, #8]
9001dad0:	42ab      	cmp	r3, r5
9001dad2:	bfa8      	it	ge
9001dad4:	462b      	movge	r3, r5
9001dad6:	eba2 0803 	sub.w	r8, r2, r3
9001dada:	9a07      	ldr	r2, [sp, #28]
9001dadc:	1aed      	subs	r5, r5, r3
9001dade:	2a00      	cmp	r2, #0
9001dae0:	d05a      	beq.n	9001db98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001dae2:	9a01      	ldr	r2, [sp, #4]
9001dae4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001dae8:	2aff      	cmp	r2, #255	@ 0xff
9001daea:	d049      	beq.n	9001db80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001daec:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001daf0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001daf4:	42a3      	cmp	r3, r4
9001daf6:	f240 80a5 	bls.w	9001dc44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001dafa:	46bc      	mov	ip, r7
9001dafc:	8820      	ldrh	r0, [r4, #0]
9001dafe:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001db02:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001db06:	7879      	ldrb	r1, [r7, #1]
9001db08:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001db0c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001db10:	fb1a fa09 	smulbb	sl, sl, r9
9001db14:	b212      	sxth	r2, r2
9001db16:	b291      	uxth	r1, r2
9001db18:	00d2      	lsls	r2, r2, #3
9001db1a:	120f      	asrs	r7, r1, #8
9001db1c:	10c9      	asrs	r1, r1, #3
9001db1e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001db22:	b2d2      	uxtb	r2, r2
9001db24:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001db28:	fb07 a70e 	mla	r7, r7, lr, sl
9001db2c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001db30:	00c0      	lsls	r0, r0, #3
9001db32:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001db36:	b2bf      	uxth	r7, r7
9001db38:	b2c0      	uxtb	r0, r0
9001db3a:	fb1a fa09 	smulbb	sl, sl, r9
9001db3e:	fb10 f009 	smulbb	r0, r0, r9
9001db42:	fb01 a10e 	mla	r1, r1, lr, sl
9001db46:	fb02 020e 	mla	r2, r2, lr, r0
9001db4a:	1c78      	adds	r0, r7, #1
9001db4c:	b289      	uxth	r1, r1
9001db4e:	b292      	uxth	r2, r2
9001db50:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001db54:	f101 0a01 	add.w	sl, r1, #1
9001db58:	1c50      	adds	r0, r2, #1
9001db5a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001db5e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001db62:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001db66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001db6a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001db6e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001db72:	4307      	orrs	r7, r0
9001db74:	ea47 070a 	orr.w	r7, r7, sl
9001db78:	f824 7b02 	strh.w	r7, [r4], #2
9001db7c:	4667      	mov	r7, ip
9001db7e:	e7b9      	b.n	9001daf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001db80:	42a3      	cmp	r3, r4
9001db82:	d95f      	bls.n	9001dc44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001db84:	463a      	mov	r2, r7
9001db86:	f812 1b02 	ldrb.w	r1, [r2], #2
9001db8a:	7878      	ldrb	r0, [r7, #1]
9001db8c:	4617      	mov	r7, r2
9001db8e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001db92:	f824 1b02 	strh.w	r1, [r4], #2
9001db96:	e7f3      	b.n	9001db80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001db98:	9901      	ldr	r1, [sp, #4]
9001db9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001db9e:	b2b2      	uxth	r2, r6
9001dba0:	29ff      	cmp	r1, #255	@ 0xff
9001dba2:	d044      	beq.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001dba4:	ea4f 2922 	mov.w	r9, r2, asr #8
9001dba8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001dbac:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001dbb0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001dbb4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001dbb8:	4608      	mov	r0, r1
9001dbba:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001dbbe:	fb09 f901 	mul.w	r9, r9, r1
9001dbc2:	fb0e fe01 	mul.w	lr, lr, r1
9001dbc6:	00d1      	lsls	r1, r2, #3
9001dbc8:	b2c9      	uxtb	r1, r1
9001dbca:	4341      	muls	r1, r0
9001dbcc:	429c      	cmp	r4, r3
9001dbce:	f4bf af61 	bcs.w	9001da94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001dbd2:	8822      	ldrh	r2, [r4, #0]
9001dbd4:	1210      	asrs	r0, r2, #8
9001dbd6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001dbda:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001dbde:	00d2      	lsls	r2, r2, #3
9001dbe0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001dbe4:	fb00 900a 	mla	r0, r0, sl, r9
9001dbe8:	b2d2      	uxtb	r2, r2
9001dbea:	fb0c ec0a 	mla	ip, ip, sl, lr
9001dbee:	b280      	uxth	r0, r0
9001dbf0:	fb02 120a 	mla	r2, r2, sl, r1
9001dbf4:	fa1f fc8c 	uxth.w	ip, ip
9001dbf8:	b292      	uxth	r2, r2
9001dbfa:	f100 0b01 	add.w	fp, r0, #1
9001dbfe:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001dc02:	1c50      	adds	r0, r2, #1
9001dc04:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001dc08:	f10c 0201 	add.w	r2, ip, #1
9001dc0c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001dc10:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001dc14:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001dc18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001dc1c:	ea40 0b0b 	orr.w	fp, r0, fp
9001dc20:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001dc24:	ea4b 0b0c 	orr.w	fp, fp, ip
9001dc28:	f824 bb02 	strh.w	fp, [r4], #2
9001dc2c:	e7ce      	b.n	9001dbcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001dc2e:	429c      	cmp	r4, r3
9001dc30:	f4bf af30 	bcs.w	9001da94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001dc34:	f824 2b02 	strh.w	r2, [r4], #2
9001dc38:	e7f9      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001dc3a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001dc3e:	4657      	mov	r7, sl
9001dc40:	464d      	mov	r5, r9
9001dc42:	e727      	b.n	9001da94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001dc44:	2300      	movs	r3, #0
9001dc46:	e716      	b.n	9001da76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001dc48:	44bb      	add	fp, r7
9001dc4a:	4657      	mov	r7, sl
9001dc4c:	e724      	b.n	9001da98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001dc4e:	bf00      	nop
9001dc50:	2402198c 	.word	0x2402198c
9001dc54:	24021986 	.word	0x24021986
9001dc58:	24005b80 	.word	0x24005b80
9001dc5c:	2a01      	cmp	r2, #1
9001dc5e:	d12a      	bne.n	9001dcb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001dc60:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001dc64:	f003 0203 	and.w	r2, r3, #3
9001dc68:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001dc6c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001dc70:	3902      	subs	r1, #2
9001dc72:	3802      	subs	r0, #2
9001dc74:	3b02      	subs	r3, #2
9001dc76:	4411      	add	r1, r2
9001dc78:	f001 011f 	and.w	r1, r1, #31
9001dc7c:	f361 0604 	bfi	r6, r1, #0, #5
9001dc80:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001dc84:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001dc88:	f360 164a 	bfi	r6, r0, #5, #6
9001dc8c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001dc90:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001dc94:	f002 031f 	and.w	r3, r2, #31
9001dc98:	2203      	movs	r2, #3
9001dc9a:	f363 26cf 	bfi	r6, r3, #11, #5
9001dc9e:	fb12 0303 	smlabb	r3, r2, r3, r0
9001dca2:	2207      	movs	r2, #7
9001dca4:	fb12 3301 	smlabb	r3, r2, r1, r3
9001dca8:	9a03      	ldr	r2, [sp, #12]
9001dcaa:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dcae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001dcb2:	809e      	strh	r6, [r3, #4]
9001dcb4:	e701      	b.n	9001daba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001dcb6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001dcba:	4647      	mov	r7, r8
9001dcbc:	45a8      	cmp	r8, r5
9001dcbe:	bfa8      	it	ge
9001dcc0:	462f      	movge	r7, r5
9001dcc2:	2a02      	cmp	r2, #2
9001dcc4:	d154      	bne.n	9001dd70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001dcc6:	9b01      	ldr	r3, [sp, #4]
9001dcc8:	2bff      	cmp	r3, #255	@ 0xff
9001dcca:	d01a      	beq.n	9001dd02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001dccc:	eb0b 0307 	add.w	r3, fp, r7
9001dcd0:	2b40      	cmp	r3, #64	@ 0x40
9001dcd2:	dd16      	ble.n	9001dd02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001dcd4:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001dcd8:	9800      	ldr	r0, [sp, #0]
9001dcda:	4649      	mov	r1, r9
9001dcdc:	f7e4 fe46 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001dce0:	465a      	mov	r2, fp
9001dce2:	9b01      	ldr	r3, [sp, #4]
9001dce4:	4620      	mov	r0, r4
9001dce6:	9900      	ldr	r1, [sp, #0]
9001dce8:	444c      	add	r4, r9
9001dcea:	f7e4 fe85 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001dcee:	9b00      	ldr	r3, [sp, #0]
9001dcf0:	f04f 0b00 	mov.w	fp, #0
9001dcf4:	461a      	mov	r2, r3
9001dcf6:	4b6a      	ldr	r3, [pc, #424]	@ (9001dea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dcf8:	429a      	cmp	r2, r3
9001dcfa:	bf0c      	ite	eq
9001dcfc:	4b69      	ldreq	r3, [pc, #420]	@ (9001dea4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001dcfe:	4b68      	ldrne	r3, [pc, #416]	@ (9001dea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dd00:	9300      	str	r3, [sp, #0]
9001dd02:	4652      	mov	r2, sl
9001dd04:	2100      	movs	r1, #0
9001dd06:	42a9      	cmp	r1, r5
9001dd08:	da2c      	bge.n	9001dd64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001dd0a:	4694      	mov	ip, r2
9001dd0c:	f04f 0903 	mov.w	r9, #3
9001dd10:	42b9      	cmp	r1, r7
9001dd12:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001dd16:	7852      	ldrb	r2, [r2, #1]
9001dd18:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001dd1c:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001dd20:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001dd24:	f003 021f 	and.w	r2, r3, #31
9001dd28:	461e      	mov	r6, r3
9001dd2a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001dd2e:	fb19 000e 	smlabb	r0, r9, lr, r0
9001dd32:	f04f 0e07 	mov.w	lr, #7
9001dd36:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001dd3a:	9a03      	ldr	r2, [sp, #12]
9001dd3c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001dd40:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001dd44:	8083      	strh	r3, [r0, #4]
9001dd46:	da0a      	bge.n	9001dd5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001dd48:	9a01      	ldr	r2, [sp, #4]
9001dd4a:	2aff      	cmp	r2, #255	@ 0xff
9001dd4c:	bf13      	iteet	ne
9001dd4e:	9a00      	ldrne	r2, [sp, #0]
9001dd50:	8023      	strheq	r3, [r4, #0]
9001dd52:	3402      	addeq	r4, #2
9001dd54:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001dd58:	bf18      	it	ne
9001dd5a:	f10b 0b01 	addne.w	fp, fp, #1
9001dd5e:	3101      	adds	r1, #1
9001dd60:	4662      	mov	r2, ip
9001dd62:	e7d0      	b.n	9001dd06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001dd64:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001dd68:	eba8 0807 	sub.w	r8, r8, r7
9001dd6c:	1bed      	subs	r5, r5, r7
9001dd6e:	e76c      	b.n	9001dc4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001dd70:	9b01      	ldr	r3, [sp, #4]
9001dd72:	eba8 0807 	sub.w	r8, r8, r7
9001dd76:	1bed      	subs	r5, r5, r7
9001dd78:	fa1f f986 	uxth.w	r9, r6
9001dd7c:	2bff      	cmp	r3, #255	@ 0xff
9001dd7e:	d027      	beq.n	9001ddd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001dd80:	eb0b 0307 	add.w	r3, fp, r7
9001dd84:	2b40      	cmp	r3, #64	@ 0x40
9001dd86:	dd18      	ble.n	9001ddba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001dd88:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001dd8c:	9800      	ldr	r0, [sp, #0]
9001dd8e:	4619      	mov	r1, r3
9001dd90:	930c      	str	r3, [sp, #48]	@ 0x30
9001dd92:	f7e4 fdeb 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001dd96:	465a      	mov	r2, fp
9001dd98:	9b01      	ldr	r3, [sp, #4]
9001dd9a:	4620      	mov	r0, r4
9001dd9c:	9900      	ldr	r1, [sp, #0]
9001dd9e:	f04f 0b00 	mov.w	fp, #0
9001dda2:	f7e4 fe29 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001dda6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001dda8:	441c      	add	r4, r3
9001ddaa:	9b00      	ldr	r3, [sp, #0]
9001ddac:	461a      	mov	r2, r3
9001ddae:	4b3c      	ldr	r3, [pc, #240]	@ (9001dea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ddb0:	429a      	cmp	r2, r3
9001ddb2:	bf0c      	ite	eq
9001ddb4:	4b3b      	ldreq	r3, [pc, #236]	@ (9001dea4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001ddb6:	4b3a      	ldrne	r3, [pc, #232]	@ (9001dea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ddb8:	9300      	str	r3, [sp, #0]
9001ddba:	9b00      	ldr	r3, [sp, #0]
9001ddbc:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001ddc0:	463b      	mov	r3, r7
9001ddc2:	2b00      	cmp	r3, #0
9001ddc4:	f43f af40 	beq.w	9001dc48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001ddc8:	f822 9b02 	strh.w	r9, [r2], #2
9001ddcc:	3b01      	subs	r3, #1
9001ddce:	e7f8      	b.n	9001ddc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001ddd0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001ddd4:	42a7      	cmp	r7, r4
9001ddd6:	f67f af38 	bls.w	9001dc4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001ddda:	f824 9b02 	strh.w	r9, [r4], #2
9001ddde:	e7f9      	b.n	9001ddd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001dde0:	f1bb 0f00 	cmp.w	fp, #0
9001dde4:	d00c      	beq.n	9001de00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001dde6:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001ddea:	9800      	ldr	r0, [sp, #0]
9001ddec:	4641      	mov	r1, r8
9001ddee:	f7e4 fdbd 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001ddf2:	4620      	mov	r0, r4
9001ddf4:	4444      	add	r4, r8
9001ddf6:	9b01      	ldr	r3, [sp, #4]
9001ddf8:	465a      	mov	r2, fp
9001ddfa:	9900      	ldr	r1, [sp, #0]
9001ddfc:	f7e4 fdfc 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001de00:	4b29      	ldr	r3, [pc, #164]	@ (9001dea8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001de02:	9a02      	ldr	r2, [sp, #8]
9001de04:	881b      	ldrh	r3, [r3, #0]
9001de06:	1a9b      	subs	r3, r3, r2
9001de08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001de0c:	9b06      	ldr	r3, [sp, #24]
9001de0e:	3301      	adds	r3, #1
9001de10:	9306      	str	r3, [sp, #24]
9001de12:	9a06      	ldr	r2, [sp, #24]
9001de14:	9b04      	ldr	r3, [sp, #16]
9001de16:	4293      	cmp	r3, r2
9001de18:	d120      	bne.n	9001de5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001de1a:	9b05      	ldr	r3, [sp, #20]
9001de1c:	2100      	movs	r1, #0
9001de1e:	9a05      	ldr	r2, [sp, #20]
9001de20:	f04f 0600 	mov.w	r6, #0
9001de24:	f103 0801 	add.w	r8, r3, #1
9001de28:	9b08      	ldr	r3, [sp, #32]
9001de2a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001de2e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001de32:	2280      	movs	r2, #128	@ 0x80
9001de34:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001de38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001de3a:	ba3f      	rev	r7, r7
9001de3c:	eba9 0905 	sub.w	r9, r9, r5
9001de40:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001de42:	441f      	add	r7, r3
9001de44:	f00b fe9c 	bl	90029b80 <memset>
9001de48:	fa1f f989 	uxth.w	r9, r9
9001de4c:	2300      	movs	r3, #0
9001de4e:	f8cd 8014 	str.w	r8, [sp, #20]
9001de52:	9306      	str	r3, [sp, #24]
9001de54:	f7e4 fd80 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001de58:	46ba      	mov	sl, r7
9001de5a:	e58b      	b.n	9001d974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001de5c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001de60:	9b02      	ldr	r3, [sp, #8]
9001de62:	eba9 0903 	sub.w	r9, r9, r3
9001de66:	eba9 0505 	sub.w	r5, r9, r5
9001de6a:	fa1f f985 	uxth.w	r9, r5
9001de6e:	e7f1      	b.n	9001de54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001de70:	4b0e      	ldr	r3, [pc, #56]	@ (9001deac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001de72:	6818      	ldr	r0, [r3, #0]
9001de74:	6803      	ldr	r3, [r0, #0]
9001de76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001de78:	4798      	blx	r3
9001de7a:	b013      	add	sp, #76	@ 0x4c
9001de7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de80:	9b02      	ldr	r3, [sp, #8]
9001de82:	9a02      	ldr	r2, [sp, #8]
9001de84:	42ab      	cmp	r3, r5
9001de86:	bfa8      	it	ge
9001de88:	462b      	movge	r3, r5
9001de8a:	eba2 0803 	sub.w	r8, r2, r3
9001de8e:	1aed      	subs	r5, r5, r3
9001de90:	e627      	b.n	9001dae2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001de92:	f108 38ff 	add.w	r8, r8, #4294967295
9001de96:	fa1f f986 	uxth.w	r9, r6
9001de9a:	2500      	movs	r5, #0
9001de9c:	2701      	movs	r7, #1
9001de9e:	e76f      	b.n	9001dd80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001dea0:	24005b80 	.word	0x24005b80
9001dea4:	24005c80 	.word	0x24005c80
9001dea8:	24021986 	.word	0x24021986
9001deac:	2402198c 	.word	0x2402198c

9001deb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001deb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001deb4:	b08f      	sub	sp, #60	@ 0x3c
9001deb6:	461c      	mov	r4, r3
9001deb8:	460f      	mov	r7, r1
9001deba:	9203      	str	r2, [sp, #12]
9001debc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001dec0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001dec2:	9202      	str	r2, [sp, #8]
9001dec4:	2a00      	cmp	r2, #0
9001dec6:	f000 8128 	beq.w	9001e11a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001deca:	6820      	ldr	r0, [r4, #0]
9001decc:	aa0a      	add	r2, sp, #40	@ 0x28
9001dece:	6861      	ldr	r1, [r4, #4]
9001ded0:	c203      	stmia	r2!, {r0, r1}
9001ded2:	6818      	ldr	r0, [r3, #0]
9001ded4:	aa0c      	add	r2, sp, #48	@ 0x30
9001ded6:	6859      	ldr	r1, [r3, #4]
9001ded8:	c203      	stmia	r2!, {r0, r1}
9001deda:	a80a      	add	r0, sp, #40	@ 0x28
9001dedc:	f7f8 f834 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dee0:	4621      	mov	r1, r4
9001dee2:	a80c      	add	r0, sp, #48	@ 0x30
9001dee4:	f7f8 f858 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dee8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001deec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001def0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001def4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001def8:	bfdb      	ittet	le
9001defa:	b2b3      	uxthle	r3, r6
9001defc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001df00:	2301      	movgt	r3, #1
9001df02:	fb92 f3f3 	sdivle	r3, r2, r3
9001df06:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001df0a:	441d      	add	r5, r3
9001df0c:	fb92 f1f3 	sdiv	r1, r2, r3
9001df10:	fa1f fc81 	uxth.w	ip, r1
9001df14:	3d01      	subs	r5, #1
9001df16:	fb0c 2413 	mls	r4, ip, r3, r2
9001df1a:	4661      	mov	r1, ip
9001df1c:	fb14 f406 	smulbb	r4, r4, r6
9001df20:	4404      	add	r4, r0
9001df22:	fb95 f5f3 	sdiv	r5, r5, r3
9001df26:	b2a4      	uxth	r4, r4
9001df28:	b121      	cbz	r1, 9001df34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001df2a:	9b03      	ldr	r3, [sp, #12]
9001df2c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001df30:	ba1b      	rev	r3, r3
9001df32:	441f      	add	r7, r3
9001df34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001df38:	b2ad      	uxth	r5, r5
9001df3a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001df3e:	4418      	add	r0, r3
9001df40:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001df44:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001df48:	00ad      	lsls	r5, r5, #2
9001df4a:	441a      	add	r2, r3
9001df4c:	4b74      	ldr	r3, [pc, #464]	@ (9001e120 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001df4e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001df52:	6818      	ldr	r0, [r3, #0]
9001df54:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001df58:	6803      	ldr	r3, [r0, #0]
9001df5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001df5c:	4798      	blx	r3
9001df5e:	4a71      	ldr	r2, [pc, #452]	@ (9001e124 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001df60:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001df64:	2c00      	cmp	r4, #0
9001df66:	8813      	ldrh	r3, [r2, #0]
9001df68:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001df6c:	bf0c      	ite	eq
9001df6e:	46c8      	moveq	r8, r9
9001df70:	f04f 0800 	movne.w	r8, #0
9001df74:	9209      	str	r2, [sp, #36]	@ 0x24
9001df76:	fb03 c101 	mla	r1, r3, r1, ip
9001df7a:	4373      	muls	r3, r6
9001df7c:	fa1f f888 	uxth.w	r8, r8
9001df80:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001df84:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001df88:	9304      	str	r3, [sp, #16]
9001df8a:	1d2b      	adds	r3, r5, #4
9001df8c:	9305      	str	r3, [sp, #20]
9001df8e:	2300      	movs	r3, #0
9001df90:	9301      	str	r3, [sp, #4]
9001df92:	9a04      	ldr	r2, [sp, #16]
9001df94:	4282      	cmp	r2, r0
9001df96:	f240 80bb 	bls.w	9001e110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001df9a:	b95b      	cbnz	r3, 9001dfb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001df9c:	783a      	ldrb	r2, [r7, #0]
9001df9e:	0993      	lsrs	r3, r2, #6
9001dfa0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001dfa4:	9201      	str	r2, [sp, #4]
9001dfa6:	1e5a      	subs	r2, r3, #1
9001dfa8:	2a02      	cmp	r2, #2
9001dfaa:	bf8d      	iteet	hi
9001dfac:	787b      	ldrbhi	r3, [r7, #1]
9001dfae:	3701      	addls	r7, #1
9001dfb0:	b29b      	uxthls	r3, r3
9001dfb2:	3702      	addhi	r7, #2
9001dfb4:	b184      	cbz	r4, 9001dfd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001dfb6:	429c      	cmp	r4, r3
9001dfb8:	bf91      	iteee	ls
9001dfba:	1b1c      	subls	r4, r3, r4
9001dfbc:	1ae4      	subhi	r4, r4, r3
9001dfbe:	46c4      	movhi	ip, r8
9001dfc0:	f04f 0a00 	movhi.w	sl, #0
9001dfc4:	bf9b      	ittet	ls
9001dfc6:	fa1f fa84 	uxthls.w	sl, r4
9001dfca:	2400      	movls	r4, #0
9001dfcc:	b2a4      	uxthhi	r4, r4
9001dfce:	fa1f fc89 	uxthls.w	ip, r9
9001dfd2:	4653      	mov	r3, sl
9001dfd4:	46e0      	mov	r8, ip
9001dfd6:	e7dc      	b.n	9001df92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001dfd8:	2204      	movs	r2, #4
9001dfda:	9905      	ldr	r1, [sp, #20]
9001dfdc:	4543      	cmp	r3, r8
9001dfde:	4615      	mov	r5, r2
9001dfe0:	9a01      	ldr	r2, [sp, #4]
9001dfe2:	bf24      	itt	cs
9001dfe4:	eba3 0a08 	subcs.w	sl, r3, r8
9001dfe8:	46c6      	movcs	lr, r8
9001dfea:	fb15 1202 	smlabb	r2, r5, r2, r1
9001dfee:	9903      	ldr	r1, [sp, #12]
9001dff0:	bf3c      	itt	cc
9001dff2:	eba8 0c03 	subcc.w	ip, r8, r3
9001dff6:	469e      	movcc	lr, r3
9001dff8:	588a      	ldr	r2, [r1, r2]
9001dffa:	bf26      	itte	cs
9001dffc:	fa1f fa8a 	uxthcs.w	sl, sl
9001e000:	46a4      	movcs	ip, r4
9001e002:	fa1f fc8c 	uxthcc.w	ip, ip
9001e006:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001e00a:	bf38      	it	cc
9001e00c:	46a2      	movcc	sl, r4
9001e00e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001e012:	2900      	cmp	r1, #0
9001e014:	d066      	beq.n	9001e0e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001e016:	29ff      	cmp	r1, #255	@ 0xff
9001e018:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001e01c:	d114      	bne.n	9001e048 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e01e:	9d02      	ldr	r5, [sp, #8]
9001e020:	2dff      	cmp	r5, #255	@ 0xff
9001e022:	d111      	bne.n	9001e048 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e024:	0951      	lsrs	r1, r2, #5
9001e026:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e02a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e02e:	4486      	add	lr, r0
9001e030:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e034:	f026 0607 	bic.w	r6, r6, #7
9001e038:	430e      	orrs	r6, r1
9001e03a:	4316      	orrs	r6, r2
9001e03c:	b2b6      	uxth	r6, r6
9001e03e:	4586      	cmp	lr, r0
9001e040:	d051      	beq.n	9001e0e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e042:	f820 6b02 	strh.w	r6, [r0], #2
9001e046:	e7fa      	b.n	9001e03e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001e048:	9d02      	ldr	r5, [sp, #8]
9001e04a:	b2f6      	uxtb	r6, r6
9001e04c:	4486      	add	lr, r0
9001e04e:	4369      	muls	r1, r5
9001e050:	1c4d      	adds	r5, r1, #1
9001e052:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001e056:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001e05a:	b2d2      	uxtb	r2, r2
9001e05c:	122d      	asrs	r5, r5, #8
9001e05e:	ea6f 0b05 	mvn.w	fp, r5
9001e062:	b2ad      	uxth	r5, r5
9001e064:	fb11 f105 	smulbb	r1, r1, r5
9001e068:	fa5f fb8b 	uxtb.w	fp, fp
9001e06c:	fb16 f605 	smulbb	r6, r6, r5
9001e070:	fb12 f205 	smulbb	r2, r2, r5
9001e074:	b289      	uxth	r1, r1
9001e076:	b2b6      	uxth	r6, r6
9001e078:	b292      	uxth	r2, r2
9001e07a:	9106      	str	r1, [sp, #24]
9001e07c:	9607      	str	r6, [sp, #28]
9001e07e:	9208      	str	r2, [sp, #32]
9001e080:	4586      	cmp	lr, r0
9001e082:	d030      	beq.n	9001e0e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e084:	8802      	ldrh	r2, [r0, #0]
9001e086:	9906      	ldr	r1, [sp, #24]
9001e088:	1216      	asrs	r6, r2, #8
9001e08a:	10d5      	asrs	r5, r2, #3
9001e08c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e090:	00d2      	lsls	r2, r2, #3
9001e092:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e096:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e09a:	b2d2      	uxtb	r2, r2
9001e09c:	fb06 160b 	mla	r6, r6, fp, r1
9001e0a0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e0a4:	9907      	ldr	r1, [sp, #28]
9001e0a6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e0aa:	b2b6      	uxth	r6, r6
9001e0ac:	fb05 150b 	mla	r5, r5, fp, r1
9001e0b0:	9908      	ldr	r1, [sp, #32]
9001e0b2:	fb02 120b 	mla	r2, r2, fp, r1
9001e0b6:	1c71      	adds	r1, r6, #1
9001e0b8:	b2ad      	uxth	r5, r5
9001e0ba:	b292      	uxth	r2, r2
9001e0bc:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001e0c0:	1c51      	adds	r1, r2, #1
9001e0c2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e0c6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e0ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e0ce:	4316      	orrs	r6, r2
9001e0d0:	1c6a      	adds	r2, r5, #1
9001e0d2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e0d6:	096d      	lsrs	r5, r5, #5
9001e0d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e0dc:	432e      	orrs	r6, r5
9001e0de:	f820 6b02 	strh.w	r6, [r0], #2
9001e0e2:	e7cd      	b.n	9001e080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001e0e4:	4470      	add	r0, lr
9001e0e6:	4543      	cmp	r3, r8
9001e0e8:	f4ff af73 	bcc.w	9001dfd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e0ec:	fa1f fc89 	uxth.w	ip, r9
9001e0f0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e0f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e0f6:	eba4 040c 	sub.w	r4, r4, ip
9001e0fa:	881b      	ldrh	r3, [r3, #0]
9001e0fc:	b2a4      	uxth	r4, r4
9001e0fe:	eba3 0309 	sub.w	r3, r3, r9
9001e102:	2c00      	cmp	r4, #0
9001e104:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e108:	bf18      	it	ne
9001e10a:	f04f 0c00 	movne.w	ip, #0
9001e10e:	e760      	b.n	9001dfd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e110:	4b03      	ldr	r3, [pc, #12]	@ (9001e120 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e112:	6818      	ldr	r0, [r3, #0]
9001e114:	6803      	ldr	r3, [r0, #0]
9001e116:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e118:	4798      	blx	r3
9001e11a:	b00f      	add	sp, #60	@ 0x3c
9001e11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e120:	2402198c 	.word	0x2402198c
9001e124:	24021986 	.word	0x24021986

9001e128 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e12c:	b093      	sub	sp, #76	@ 0x4c
9001e12e:	461c      	mov	r4, r3
9001e130:	9205      	str	r2, [sp, #20]
9001e132:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001e136:	9101      	str	r1, [sp, #4]
9001e138:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001e13a:	9202      	str	r2, [sp, #8]
9001e13c:	2a00      	cmp	r2, #0
9001e13e:	f000 812e 	beq.w	9001e39e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001e142:	6820      	ldr	r0, [r4, #0]
9001e144:	aa0e      	add	r2, sp, #56	@ 0x38
9001e146:	6861      	ldr	r1, [r4, #4]
9001e148:	c203      	stmia	r2!, {r0, r1}
9001e14a:	6818      	ldr	r0, [r3, #0]
9001e14c:	aa10      	add	r2, sp, #64	@ 0x40
9001e14e:	6859      	ldr	r1, [r3, #4]
9001e150:	c203      	stmia	r2!, {r0, r1}
9001e152:	a80e      	add	r0, sp, #56	@ 0x38
9001e154:	f7f7 fef8 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e158:	4621      	mov	r1, r4
9001e15a:	a810      	add	r0, sp, #64	@ 0x40
9001e15c:	f7f7 ff1c 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e160:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001e164:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001e168:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e16c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001e170:	bfdb      	ittet	le
9001e172:	b2b3      	uxthle	r3, r6
9001e174:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e178:	2301      	movgt	r3, #1
9001e17a:	fb92 f3f3 	sdivle	r3, r2, r3
9001e17e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e182:	441d      	add	r5, r3
9001e184:	fb92 f1f3 	sdiv	r1, r2, r3
9001e188:	fa1f fc81 	uxth.w	ip, r1
9001e18c:	3d01      	subs	r5, #1
9001e18e:	fb0c 2413 	mls	r4, ip, r3, r2
9001e192:	4661      	mov	r1, ip
9001e194:	fb14 f406 	smulbb	r4, r4, r6
9001e198:	4404      	add	r4, r0
9001e19a:	fb95 f5f3 	sdiv	r5, r5, r3
9001e19e:	b2a4      	uxth	r4, r4
9001e1a0:	b131      	cbz	r1, 9001e1b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001e1a2:	9b05      	ldr	r3, [sp, #20]
9001e1a4:	9901      	ldr	r1, [sp, #4]
9001e1a6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e1aa:	ba1b      	rev	r3, r3
9001e1ac:	4419      	add	r1, r3
9001e1ae:	9101      	str	r1, [sp, #4]
9001e1b0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001e1b4:	b2ad      	uxth	r5, r5
9001e1b6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001e1ba:	4418      	add	r0, r3
9001e1bc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001e1c0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001e1c4:	00ad      	lsls	r5, r5, #2
9001e1c6:	441a      	add	r2, r3
9001e1c8:	4b76      	ldr	r3, [pc, #472]	@ (9001e3a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e1ca:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001e1ce:	6818      	ldr	r0, [r3, #0]
9001e1d0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001e1d4:	6803      	ldr	r3, [r0, #0]
9001e1d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e1d8:	4798      	blx	r3
9001e1da:	4973      	ldr	r1, [pc, #460]	@ (9001e3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001e1dc:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001e1e0:	2c00      	cmp	r4, #0
9001e1e2:	880b      	ldrh	r3, [r1, #0]
9001e1e4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e1e8:	910d      	str	r1, [sp, #52]	@ 0x34
9001e1ea:	fb03 c202 	mla	r2, r3, r2, ip
9001e1ee:	bf08      	it	eq
9001e1f0:	46dc      	moveq	ip, fp
9001e1f2:	fb03 f306 	mul.w	r3, r3, r6
9001e1f6:	bf18      	it	ne
9001e1f8:	f04f 0c00 	movne.w	ip, #0
9001e1fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e200:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e204:	fa1f fc8c 	uxth.w	ip, ip
9001e208:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e20c:	9106      	str	r1, [sp, #24]
9001e20e:	9308      	str	r3, [sp, #32]
9001e210:	1d2b      	adds	r3, r5, #4
9001e212:	9309      	str	r3, [sp, #36]	@ 0x24
9001e214:	9b02      	ldr	r3, [sp, #8]
9001e216:	43da      	mvns	r2, r3
9001e218:	2300      	movs	r3, #0
9001e21a:	b2d2      	uxtb	r2, r2
9001e21c:	9303      	str	r3, [sp, #12]
9001e21e:	9207      	str	r2, [sp, #28]
9001e220:	9a08      	ldr	r2, [sp, #32]
9001e222:	4282      	cmp	r2, r0
9001e224:	f240 80b6 	bls.w	9001e394 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001e228:	b963      	cbnz	r3, 9001e244 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e22a:	9b01      	ldr	r3, [sp, #4]
9001e22c:	781a      	ldrb	r2, [r3, #0]
9001e22e:	0993      	lsrs	r3, r2, #6
9001e230:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e234:	9203      	str	r2, [sp, #12]
9001e236:	1e5a      	subs	r2, r3, #1
9001e238:	2a02      	cmp	r2, #2
9001e23a:	d815      	bhi.n	9001e268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001e23c:	9a01      	ldr	r2, [sp, #4]
9001e23e:	b29b      	uxth	r3, r3
9001e240:	3201      	adds	r2, #1
9001e242:	9201      	str	r2, [sp, #4]
9001e244:	b1b4      	cbz	r4, 9001e274 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001e246:	429c      	cmp	r4, r3
9001e248:	bf91      	iteee	ls
9001e24a:	1b1c      	subls	r4, r3, r4
9001e24c:	1ae4      	subhi	r4, r4, r3
9001e24e:	4666      	movhi	r6, ip
9001e250:	f04f 0800 	movhi.w	r8, #0
9001e254:	bf9b      	ittet	ls
9001e256:	fa1f f884 	uxthls.w	r8, r4
9001e25a:	2400      	movls	r4, #0
9001e25c:	b2a4      	uxthhi	r4, r4
9001e25e:	fa1f f68b 	uxthls.w	r6, fp
9001e262:	4643      	mov	r3, r8
9001e264:	46b4      	mov	ip, r6
9001e266:	e7db      	b.n	9001e220 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001e268:	9a01      	ldr	r2, [sp, #4]
9001e26a:	9b01      	ldr	r3, [sp, #4]
9001e26c:	3202      	adds	r2, #2
9001e26e:	785b      	ldrb	r3, [r3, #1]
9001e270:	9201      	str	r2, [sp, #4]
9001e272:	e7e7      	b.n	9001e244 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e274:	2203      	movs	r2, #3
9001e276:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e278:	4563      	cmp	r3, ip
9001e27a:	4615      	mov	r5, r2
9001e27c:	9a03      	ldr	r2, [sp, #12]
9001e27e:	bf2c      	ite	cs
9001e280:	eba3 080c 	subcs.w	r8, r3, ip
9001e284:	ebac 0603 	subcc.w	r6, ip, r3
9001e288:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e28c:	9905      	ldr	r1, [sp, #20]
9001e28e:	bf24      	itt	cs
9001e290:	fa1f f888 	uxthcs.w	r8, r8
9001e294:	46e1      	movcs	r9, ip
9001e296:	eb01 0502 	add.w	r5, r1, r2
9001e29a:	9902      	ldr	r1, [sp, #8]
9001e29c:	bf2f      	iteee	cs
9001e29e:	4626      	movcs	r6, r4
9001e2a0:	b2b6      	uxthcc	r6, r6
9001e2a2:	4699      	movcc	r9, r3
9001e2a4:	46a0      	movcc	r8, r4
9001e2a6:	29ff      	cmp	r1, #255	@ 0xff
9001e2a8:	d04a      	beq.n	9001e340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001e2aa:	9f06      	ldr	r7, [sp, #24]
9001e2ac:	46ca      	mov	sl, r9
9001e2ae:	78a9      	ldrb	r1, [r5, #2]
9001e2b0:	9004      	str	r0, [sp, #16]
9001e2b2:	4379      	muls	r1, r7
9001e2b4:	910a      	str	r1, [sp, #40]	@ 0x28
9001e2b6:	7869      	ldrb	r1, [r5, #1]
9001e2b8:	4379      	muls	r1, r7
9001e2ba:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e2bc:	9905      	ldr	r1, [sp, #20]
9001e2be:	5c8a      	ldrb	r2, [r1, r2]
9001e2c0:	437a      	muls	r2, r7
9001e2c2:	920c      	str	r2, [sp, #48]	@ 0x30
9001e2c4:	f1ba 0f00 	cmp.w	sl, #0
9001e2c8:	d03d      	beq.n	9001e346 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001e2ca:	9a04      	ldr	r2, [sp, #16]
9001e2cc:	f10a 3aff 	add.w	sl, sl, #4294967295
9001e2d0:	9f07      	ldr	r7, [sp, #28]
9001e2d2:	8812      	ldrh	r2, [r2, #0]
9001e2d4:	fa1f fa8a 	uxth.w	sl, sl
9001e2d8:	46be      	mov	lr, r7
9001e2da:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001e2dc:	1215      	asrs	r5, r2, #8
9001e2de:	10d1      	asrs	r1, r2, #3
9001e2e0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e2e4:	00d2      	lsls	r2, r2, #3
9001e2e6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e2ea:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e2ee:	b2d2      	uxtb	r2, r2
9001e2f0:	fb05 750e 	mla	r5, r5, lr, r7
9001e2f4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001e2f8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001e2fa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e2fe:	b2ad      	uxth	r5, r5
9001e300:	fb01 710e 	mla	r1, r1, lr, r7
9001e304:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e306:	fb02 720e 	mla	r2, r2, lr, r7
9001e30a:	f105 0e01 	add.w	lr, r5, #1
9001e30e:	b289      	uxth	r1, r1
9001e310:	b292      	uxth	r2, r2
9001e312:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e316:	f102 0e01 	add.w	lr, r2, #1
9001e31a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e31e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001e322:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e326:	4315      	orrs	r5, r2
9001e328:	1c4a      	adds	r2, r1, #1
9001e32a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e32e:	9a04      	ldr	r2, [sp, #16]
9001e330:	0949      	lsrs	r1, r1, #5
9001e332:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e336:	430d      	orrs	r5, r1
9001e338:	f822 5b02 	strh.w	r5, [r2], #2
9001e33c:	9204      	str	r2, [sp, #16]
9001e33e:	e7c1      	b.n	9001e2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001e340:	4649      	mov	r1, r9
9001e342:	4686      	mov	lr, r0
9001e344:	b999      	cbnz	r1, 9001e36e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001e346:	4563      	cmp	r3, ip
9001e348:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001e34c:	d389      	bcc.n	9001e262 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e34e:	fa1f f68b 	uxth.w	r6, fp
9001e352:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001e356:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e358:	1ba4      	subs	r4, r4, r6
9001e35a:	881b      	ldrh	r3, [r3, #0]
9001e35c:	b2a4      	uxth	r4, r4
9001e35e:	eba3 030b 	sub.w	r3, r3, fp
9001e362:	2c00      	cmp	r4, #0
9001e364:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e368:	bf18      	it	ne
9001e36a:	2600      	movne	r6, #0
9001e36c:	e779      	b.n	9001e262 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e36e:	78aa      	ldrb	r2, [r5, #2]
9001e370:	3901      	subs	r1, #1
9001e372:	4f0e      	ldr	r7, [pc, #56]	@ (9001e3ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001e374:	b289      	uxth	r1, r1
9001e376:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001e37a:	786a      	ldrb	r2, [r5, #1]
9001e37c:	00d2      	lsls	r2, r2, #3
9001e37e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e382:	ea4a 0202 	orr.w	r2, sl, r2
9001e386:	f895 a000 	ldrb.w	sl, [r5]
9001e38a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001e38e:	f82e 2b02 	strh.w	r2, [lr], #2
9001e392:	e7d7      	b.n	9001e344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001e394:	4b03      	ldr	r3, [pc, #12]	@ (9001e3a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e396:	6818      	ldr	r0, [r3, #0]
9001e398:	6803      	ldr	r3, [r0, #0]
9001e39a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e39c:	4798      	blx	r3
9001e39e:	b013      	add	sp, #76	@ 0x4c
9001e3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e3a4:	2402198c 	.word	0x2402198c
9001e3a8:	24021986 	.word	0x24021986
9001e3ac:	fffff800 	.word	0xfffff800

9001e3b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e3b4:	b09d      	sub	sp, #116	@ 0x74
9001e3b6:	461c      	mov	r4, r3
9001e3b8:	4683      	mov	fp, r0
9001e3ba:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001e3bc:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001e3c0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001e3c4:	920e      	str	r2, [sp, #56]	@ 0x38
9001e3c6:	2a00      	cmp	r2, #0
9001e3c8:	f000 81e4 	beq.w	9001e794 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001e3cc:	6820      	ldr	r0, [r4, #0]
9001e3ce:	aa18      	add	r2, sp, #96	@ 0x60
9001e3d0:	6861      	ldr	r1, [r4, #4]
9001e3d2:	c203      	stmia	r2!, {r0, r1}
9001e3d4:	6818      	ldr	r0, [r3, #0]
9001e3d6:	aa1a      	add	r2, sp, #104	@ 0x68
9001e3d8:	6859      	ldr	r1, [r3, #4]
9001e3da:	c203      	stmia	r2!, {r0, r1}
9001e3dc:	a818      	add	r0, sp, #96	@ 0x60
9001e3de:	f7f7 fdb3 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e3e2:	4621      	mov	r1, r4
9001e3e4:	a81a      	add	r0, sp, #104	@ 0x68
9001e3e6:	f7f7 fdd7 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e3ea:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001e3ee:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001e3f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e3f6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001e3fa:	bfdb      	ittet	le
9001e3fc:	b29a      	uxthle	r2, r3
9001e3fe:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e402:	2201      	movgt	r2, #1
9001e404:	fb91 f2f2 	sdivle	r2, r1, r2
9001e408:	9202      	str	r2, [sp, #8]
9001e40a:	9802      	ldr	r0, [sp, #8]
9001e40c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001e410:	9902      	ldr	r1, [sp, #8]
9001e412:	fb92 f0f0 	sdiv	r0, r2, r0
9001e416:	b280      	uxth	r0, r0
9001e418:	440c      	add	r4, r1
9001e41a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001e41c:	3c01      	subs	r4, #1
9001e41e:	9802      	ldr	r0, [sp, #8]
9001e420:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001e422:	fb05 2510 	mls	r5, r5, r0, r2
9001e426:	fb94 f4f1 	sdiv	r4, r4, r1
9001e42a:	fb15 f503 	smulbb	r5, r5, r3
9001e42e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001e432:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001e436:	3401      	adds	r4, #1
9001e438:	440d      	add	r5, r1
9001e43a:	4419      	add	r1, r3
9001e43c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001e440:	b2a4      	uxth	r4, r4
9001e442:	441a      	add	r2, r3
9001e444:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e448:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001e44c:	00a4      	lsls	r4, r4, #2
9001e44e:	9306      	str	r3, [sp, #24]
9001e450:	b2ad      	uxth	r5, r5
9001e452:	4bb3      	ldr	r3, [pc, #716]	@ (9001e720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001e454:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001e458:	6818      	ldr	r0, [r3, #0]
9001e45a:	6803      	ldr	r3, [r0, #0]
9001e45c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e45e:	4798      	blx	r3
9001e460:	4bb0      	ldr	r3, [pc, #704]	@ (9001e724 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001e462:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001e466:	2d00      	cmp	r5, #0
9001e468:	881a      	ldrh	r2, [r3, #0]
9001e46a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001e46e:	fb02 f606 	mul.w	r6, r2, r6
9001e472:	fb02 7101 	mla	r1, r2, r1, r7
9001e476:	9316      	str	r3, [sp, #88]	@ 0x58
9001e478:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001e47c:	4baa      	ldr	r3, [pc, #680]	@ (9001e728 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001e47e:	bf18      	it	ne
9001e480:	2100      	movne	r1, #0
9001e482:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001e486:	eba3 030b 	sub.w	r3, r3, fp
9001e48a:	920a      	str	r2, [sp, #40]	@ 0x28
9001e48c:	f104 0204 	add.w	r2, r4, #4
9001e490:	9317      	str	r3, [sp, #92]	@ 0x5c
9001e492:	9213      	str	r2, [sp, #76]	@ 0x4c
9001e494:	9a06      	ldr	r2, [sp, #24]
9001e496:	bf08      	it	eq
9001e498:	4611      	moveq	r1, r2
9001e49a:	2200      	movs	r2, #0
9001e49c:	b289      	uxth	r1, r1
9001e49e:	920d      	str	r2, [sp, #52]	@ 0x34
9001e4a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e4a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e4a4:	fa12 f383 	uxtah	r3, r2, r3
9001e4a8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e4aa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001e4ae:	3304      	adds	r3, #4
9001e4b0:	9308      	str	r3, [sp, #32]
9001e4b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e4b4:	4543      	cmp	r3, r8
9001e4b6:	f240 8168 	bls.w	9001e78a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001e4ba:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001e4be:	f04f 0e01 	mov.w	lr, #1
9001e4c2:	9a02      	ldr	r2, [sp, #8]
9001e4c4:	9808      	ldr	r0, [sp, #32]
9001e4c6:	fbb5 f3f3 	udiv	r3, r5, r3
9001e4ca:	1ad3      	subs	r3, r2, r3
9001e4cc:	7800      	ldrb	r0, [r0, #0]
9001e4ce:	b29b      	uxth	r3, r3
9001e4d0:	9010      	str	r0, [sp, #64]	@ 0x40
9001e4d2:	3001      	adds	r0, #1
9001e4d4:	9314      	str	r3, [sp, #80]	@ 0x50
9001e4d6:	9b08      	ldr	r3, [sp, #32]
9001e4d8:	9007      	str	r0, [sp, #28]
9001e4da:	785a      	ldrb	r2, [r3, #1]
9001e4dc:	789b      	ldrb	r3, [r3, #2]
9001e4de:	021b      	lsls	r3, r3, #8
9001e4e0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001e4e4:	9a08      	ldr	r2, [sp, #32]
9001e4e6:	78d2      	ldrb	r2, [r2, #3]
9001e4e8:	4313      	orrs	r3, r2
9001e4ea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e4ec:	441a      	add	r2, r3
9001e4ee:	1c50      	adds	r0, r2, #1
9001e4f0:	7852      	ldrb	r2, [r2, #1]
9001e4f2:	9005      	str	r0, [sp, #20]
9001e4f4:	0212      	lsls	r2, r2, #8
9001e4f6:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e4f8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001e4fc:	5cc3      	ldrb	r3, [r0, r3]
9001e4fe:	431a      	orrs	r2, r3
9001e500:	b293      	uxth	r3, r2
9001e502:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001e506:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e508:	2300      	movs	r3, #0
9001e50a:	9309      	str	r3, [sp, #36]	@ 0x24
9001e50c:	2301      	movs	r3, #1
9001e50e:	9301      	str	r3, [sp, #4]
9001e510:	9304      	str	r3, [sp, #16]
9001e512:	2300      	movs	r3, #0
9001e514:	9303      	str	r3, [sp, #12]
9001e516:	2d00      	cmp	r5, #0
9001e518:	d07d      	beq.n	9001e616 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001e51a:	45ae      	cmp	lr, r5
9001e51c:	d26c      	bcs.n	9001e5f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001e51e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e520:	eba5 050e 	sub.w	r5, r5, lr
9001e524:	460c      	mov	r4, r1
9001e526:	4543      	cmp	r3, r8
9001e528:	b2ad      	uxth	r5, r5
9001e52a:	d802      	bhi.n	9001e532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001e52c:	e071      	b.n	9001e612 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001e52e:	2b00      	cmp	r3, #0
9001e530:	d15d      	bne.n	9001e5ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001e532:	9b05      	ldr	r3, [sp, #20]
9001e534:	9a04      	ldr	r2, [sp, #16]
9001e536:	785b      	ldrb	r3, [r3, #1]
9001e538:	f1c2 0207 	rsb	r2, r2, #7
9001e53c:	9904      	ldr	r1, [sp, #16]
9001e53e:	4093      	lsls	r3, r2
9001e540:	005b      	lsls	r3, r3, #1
9001e542:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e546:	9b05      	ldr	r3, [sp, #20]
9001e548:	781b      	ldrb	r3, [r3, #0]
9001e54a:	410b      	asrs	r3, r1
9001e54c:	3101      	adds	r1, #1
9001e54e:	b2c9      	uxtb	r1, r1
9001e550:	b2db      	uxtb	r3, r3
9001e552:	2908      	cmp	r1, #8
9001e554:	9104      	str	r1, [sp, #16]
9001e556:	9905      	ldr	r1, [sp, #20]
9001e558:	ea43 0302 	orr.w	r3, r3, r2
9001e55c:	bf0c      	ite	eq
9001e55e:	3102      	addeq	r1, #2
9001e560:	3101      	addne	r1, #1
9001e562:	b29a      	uxth	r2, r3
9001e564:	bf05      	ittet	eq
9001e566:	9105      	streq	r1, [sp, #20]
9001e568:	2100      	moveq	r1, #0
9001e56a:	9105      	strne	r1, [sp, #20]
9001e56c:	9104      	streq	r1, [sp, #16]
9001e56e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001e570:	4291      	cmp	r1, r2
9001e572:	d30a      	bcc.n	9001e58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001e574:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001e578:	2301      	movs	r3, #1
9001e57a:	9907      	ldr	r1, [sp, #28]
9001e57c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001e580:	d30f      	bcc.n	9001e5a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001e582:	2100      	movs	r1, #0
9001e584:	9301      	str	r3, [sp, #4]
9001e586:	9103      	str	r1, [sp, #12]
9001e588:	e032      	b.n	9001e5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001e58a:	9b07      	ldr	r3, [sp, #28]
9001e58c:	429a      	cmp	r2, r3
9001e58e:	d318      	bcc.n	9001e5c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001e590:	9b01      	ldr	r3, [sp, #4]
9001e592:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001e596:	445b      	add	r3, fp
9001e598:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001e59c:	9b01      	ldr	r3, [sp, #4]
9001e59e:	3301      	adds	r3, #1
9001e5a0:	b29b      	uxth	r3, r3
9001e5a2:	9907      	ldr	r1, [sp, #28]
9001e5a4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001e5a8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001e5ac:	7108      	strb	r0, [r1, #4]
9001e5ae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001e5b0:	80c8      	strh	r0, [r1, #6]
9001e5b2:	9801      	ldr	r0, [sp, #4]
9001e5b4:	3001      	adds	r0, #1
9001e5b6:	7148      	strb	r0, [r1, #5]
9001e5b8:	9907      	ldr	r1, [sp, #28]
9001e5ba:	3101      	adds	r1, #1
9001e5bc:	b289      	uxth	r1, r1
9001e5be:	9107      	str	r1, [sp, #28]
9001e5c0:	e7df      	b.n	9001e582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001e5c2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001e5c6:	4611      	mov	r1, r2
9001e5c8:	795b      	ldrb	r3, [r3, #5]
9001e5ca:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001e5ce:	4458      	add	r0, fp
9001e5d0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001e5d2:	4406      	add	r6, r0
9001e5d4:	2e00      	cmp	r6, #0
9001e5d6:	dd06      	ble.n	9001e5e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e5d8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001e5dc:	790e      	ldrb	r6, [r1, #4]
9001e5de:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001e5e2:	88c9      	ldrh	r1, [r1, #6]
9001e5e4:	e7f4      	b.n	9001e5d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001e5e6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001e5ea:	b29b      	uxth	r3, r3
9001e5ec:	e7c5      	b.n	9001e57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001e5ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001e5f0:	4621      	mov	r1, r4
9001e5f2:	920b      	str	r2, [sp, #44]	@ 0x2c
9001e5f4:	469e      	mov	lr, r3
9001e5f6:	e78e      	b.n	9001e516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001e5f8:	9a03      	ldr	r2, [sp, #12]
9001e5fa:	ebae 0305 	sub.w	r3, lr, r5
9001e5fe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001e602:	442a      	add	r2, r5
9001e604:	b29b      	uxth	r3, r3
9001e606:	b292      	uxth	r2, r2
9001e608:	9203      	str	r2, [sp, #12]
9001e60a:	2500      	movs	r5, #0
9001e60c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e60e:	4542      	cmp	r2, r8
9001e610:	d88d      	bhi.n	9001e52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001e612:	4621      	mov	r1, r4
9001e614:	e74d      	b.n	9001e4b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001e616:	458e      	cmp	lr, r1
9001e618:	f04f 0900 	mov.w	r9, #0
9001e61c:	bf2b      	itete	cs
9001e61e:	ebae 0301 	subcs.w	r3, lr, r1
9001e622:	eba1 040e 	subcc.w	r4, r1, lr
9001e626:	462c      	movcs	r4, r5
9001e628:	462b      	movcc	r3, r5
9001e62a:	bf27      	ittee	cs
9001e62c:	b29b      	uxthcs	r3, r3
9001e62e:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001e630:	b2a4      	uxthcc	r4, r4
9001e632:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001e636:	9a03      	ldr	r2, [sp, #12]
9001e638:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001e63a:	444a      	add	r2, r9
9001e63c:	4548      	cmp	r0, r9
9001e63e:	b292      	uxth	r2, r2
9001e640:	d074      	beq.n	9001e72c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001e642:	2004      	movs	r0, #4
9001e644:	445a      	add	r2, fp
9001e646:	4605      	mov	r5, r0
9001e648:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001e64c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e64e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001e652:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e654:	5880      	ldr	r0, [r0, r2]
9001e656:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001e65a:	d014      	beq.n	9001e686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001e65c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e660:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001e664:	d112      	bne.n	9001e68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001e666:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001e668:	2aff      	cmp	r2, #255	@ 0xff
9001e66a:	d10f      	bne.n	9001e68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001e66c:	0942      	lsrs	r2, r0, #5
9001e66e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001e672:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001e676:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e67a:	f025 0507 	bic.w	r5, r5, #7
9001e67e:	4315      	orrs	r5, r2
9001e680:	4305      	orrs	r5, r0
9001e682:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001e686:	f109 0901 	add.w	r9, r9, #1
9001e68a:	e7d4      	b.n	9001e636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001e68c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001e690:	b2ed      	uxtb	r5, r5
9001e692:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001e696:	ea4f 272c 	mov.w	r7, ip, asr #8
9001e69a:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001e69e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e6a2:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001e6a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e6aa:	9215      	str	r2, [sp, #84]	@ 0x54
9001e6ac:	fa5f fc8c 	uxtb.w	ip, ip
9001e6b0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001e6b2:	b2c0      	uxtb	r0, r0
9001e6b4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001e6b8:	fb02 fa0a 	mul.w	sl, r2, sl
9001e6bc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001e6c0:	f10a 0201 	add.w	r2, sl, #1
9001e6c4:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001e6c8:	1212      	asrs	r2, r2, #8
9001e6ca:	fa1f fa82 	uxth.w	sl, r2
9001e6ce:	43d2      	mvns	r2, r2
9001e6d0:	fb16 f60a 	smulbb	r6, r6, sl
9001e6d4:	b2d2      	uxtb	r2, r2
9001e6d6:	fb10 f00a 	smulbb	r0, r0, sl
9001e6da:	fb07 6702 	mla	r7, r7, r2, r6
9001e6de:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001e6e0:	fb0c 0002 	mla	r0, ip, r2, r0
9001e6e4:	fb15 f50a 	smulbb	r5, r5, sl
9001e6e8:	b2bf      	uxth	r7, r7
9001e6ea:	b280      	uxth	r0, r0
9001e6ec:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001e6f0:	fb06 5602 	mla	r6, r6, r2, r5
9001e6f4:	1c7a      	adds	r2, r7, #1
9001e6f6:	1c45      	adds	r5, r0, #1
9001e6f8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e6fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e700:	b2b6      	uxth	r6, r6
9001e702:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e706:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e70a:	432f      	orrs	r7, r5
9001e70c:	1c75      	adds	r5, r6, #1
9001e70e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001e712:	096d      	lsrs	r5, r5, #5
9001e714:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e718:	432f      	orrs	r7, r5
9001e71a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001e71e:	e7b2      	b.n	9001e686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001e720:	2402198c 	.word	0x2402198c
9001e724:	24021986 	.word	0x24021986
9001e728:	fffff7fb 	.word	0xfffff7fb
9001e72c:	9203      	str	r2, [sp, #12]
9001e72e:	458e      	cmp	lr, r1
9001e730:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001e732:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001e736:	f4ff af68 	bcc.w	9001e60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001e73a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001e73c:	9906      	ldr	r1, [sp, #24]
9001e73e:	8812      	ldrh	r2, [r2, #0]
9001e740:	1a52      	subs	r2, r2, r1
9001e742:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001e744:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001e748:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e74a:	3201      	adds	r2, #1
9001e74c:	428a      	cmp	r2, r1
9001e74e:	9209      	str	r2, [sp, #36]	@ 0x24
9001e750:	d111      	bne.n	9001e776 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001e752:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001e756:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001e75a:	9b06      	ldr	r3, [sp, #24]
9001e75c:	eba5 0509 	sub.w	r5, r5, r9
9001e760:	b2ad      	uxth	r5, r5
9001e762:	2d00      	cmp	r5, #0
9001e764:	bf08      	it	eq
9001e766:	4619      	moveq	r1, r3
9001e768:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e76a:	bf18      	it	ne
9001e76c:	2100      	movne	r1, #0
9001e76e:	3301      	adds	r3, #1
9001e770:	b289      	uxth	r1, r1
9001e772:	930d      	str	r3, [sp, #52]	@ 0x34
9001e774:	e694      	b.n	9001e4a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001e776:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001e77a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001e77e:	1b2d      	subs	r5, r5, r4
9001e780:	b2ad      	uxth	r5, r5
9001e782:	2d00      	cmp	r5, #0
9001e784:	bf18      	it	ne
9001e786:	2400      	movne	r4, #0
9001e788:	e740      	b.n	9001e60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001e78a:	4b04      	ldr	r3, [pc, #16]	@ (9001e79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001e78c:	6818      	ldr	r0, [r3, #0]
9001e78e:	6803      	ldr	r3, [r0, #0]
9001e790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e792:	4798      	blx	r3
9001e794:	b01d      	add	sp, #116	@ 0x74
9001e796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e79a:	bf00      	nop
9001e79c:	2402198c 	.word	0x2402198c

9001e7a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e7a4:	b09f      	sub	sp, #124	@ 0x7c
9001e7a6:	461d      	mov	r5, r3
9001e7a8:	4604      	mov	r4, r0
9001e7aa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001e7ac:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001e7b0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001e7b4:	920a      	str	r2, [sp, #40]	@ 0x28
9001e7b6:	2a00      	cmp	r2, #0
9001e7b8:	f000 81fe 	beq.w	9001ebb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001e7bc:	6828      	ldr	r0, [r5, #0]
9001e7be:	aa1a      	add	r2, sp, #104	@ 0x68
9001e7c0:	6869      	ldr	r1, [r5, #4]
9001e7c2:	c203      	stmia	r2!, {r0, r1}
9001e7c4:	6818      	ldr	r0, [r3, #0]
9001e7c6:	aa1c      	add	r2, sp, #112	@ 0x70
9001e7c8:	6859      	ldr	r1, [r3, #4]
9001e7ca:	c203      	stmia	r2!, {r0, r1}
9001e7cc:	a81a      	add	r0, sp, #104	@ 0x68
9001e7ce:	f7f7 fbbb 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e7d2:	4629      	mov	r1, r5
9001e7d4:	a81c      	add	r0, sp, #112	@ 0x70
9001e7d6:	f7f7 fbdf 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e7da:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e7de:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001e7e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e7e6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001e7ea:	bfdb      	ittet	le
9001e7ec:	b29a      	uxthle	r2, r3
9001e7ee:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e7f2:	2201      	movgt	r2, #1
9001e7f4:	fb91 f2f2 	sdivle	r2, r1, r2
9001e7f8:	9201      	str	r2, [sp, #4]
9001e7fa:	9801      	ldr	r0, [sp, #4]
9001e7fc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001e800:	9901      	ldr	r1, [sp, #4]
9001e802:	fb92 f0f0 	sdiv	r0, r2, r0
9001e806:	b280      	uxth	r0, r0
9001e808:	440e      	add	r6, r1
9001e80a:	9010      	str	r0, [sp, #64]	@ 0x40
9001e80c:	3e01      	subs	r6, #1
9001e80e:	9801      	ldr	r0, [sp, #4]
9001e810:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001e812:	fb05 2510 	mls	r5, r5, r0, r2
9001e816:	fb96 f6f1 	sdiv	r6, r6, r1
9001e81a:	fb15 f503 	smulbb	r5, r5, r3
9001e81e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001e822:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001e826:	3601      	adds	r6, #1
9001e828:	440d      	add	r5, r1
9001e82a:	4419      	add	r1, r3
9001e82c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001e830:	b2b6      	uxth	r6, r6
9001e832:	441a      	add	r2, r3
9001e834:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001e838:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001e83c:	b2ad      	uxth	r5, r5
9001e83e:	9304      	str	r3, [sp, #16]
9001e840:	4b96      	ldr	r3, [pc, #600]	@ (9001ea9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e842:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001e846:	6818      	ldr	r0, [r3, #0]
9001e848:	6803      	ldr	r3, [r0, #0]
9001e84a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e84c:	4798      	blx	r3
9001e84e:	4b94      	ldr	r3, [pc, #592]	@ (9001eaa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001e850:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001e854:	2d00      	cmp	r5, #0
9001e856:	881a      	ldrh	r2, [r3, #0]
9001e858:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001e85c:	fb02 f707 	mul.w	r7, r2, r7
9001e860:	fb02 c101 	mla	r1, r2, r1, ip
9001e864:	9318      	str	r3, [sp, #96]	@ 0x60
9001e866:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001e86a:	4b8e      	ldr	r3, [pc, #568]	@ (9001eaa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001e86c:	bf18      	it	ne
9001e86e:	2100      	movne	r1, #0
9001e870:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001e874:	eba3 0304 	sub.w	r3, r3, r4
9001e878:	920b      	str	r2, [sp, #44]	@ 0x2c
9001e87a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e87c:	9319      	str	r3, [sp, #100]	@ 0x64
9001e87e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001e882:	f106 0204 	add.w	r2, r6, #4
9001e886:	9206      	str	r2, [sp, #24]
9001e888:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e88a:	ea6f 0202 	mvn.w	r2, r2
9001e88e:	b2d2      	uxtb	r2, r2
9001e890:	9215      	str	r2, [sp, #84]	@ 0x54
9001e892:	9a04      	ldr	r2, [sp, #16]
9001e894:	bf08      	it	eq
9001e896:	4611      	moveq	r1, r2
9001e898:	2200      	movs	r2, #0
9001e89a:	b289      	uxth	r1, r1
9001e89c:	920d      	str	r2, [sp, #52]	@ 0x34
9001e89e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e8a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e8a2:	fa12 f383 	uxtah	r3, r2, r3
9001e8a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e8a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001e8ac:	3304      	adds	r3, #4
9001e8ae:	9307      	str	r3, [sp, #28]
9001e8b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e8b2:	455b      	cmp	r3, fp
9001e8b4:	f240 817b 	bls.w	9001ebae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001e8b8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001e8bc:	f04f 0801 	mov.w	r8, #1
9001e8c0:	9a01      	ldr	r2, [sp, #4]
9001e8c2:	9807      	ldr	r0, [sp, #28]
9001e8c4:	46c4      	mov	ip, r8
9001e8c6:	f8cd 8008 	str.w	r8, [sp, #8]
9001e8ca:	7800      	ldrb	r0, [r0, #0]
9001e8cc:	fbb5 f3f3 	udiv	r3, r5, r3
9001e8d0:	1ad3      	subs	r3, r2, r3
9001e8d2:	9011      	str	r0, [sp, #68]	@ 0x44
9001e8d4:	3001      	adds	r0, #1
9001e8d6:	b29b      	uxth	r3, r3
9001e8d8:	9005      	str	r0, [sp, #20]
9001e8da:	9316      	str	r3, [sp, #88]	@ 0x58
9001e8dc:	9b07      	ldr	r3, [sp, #28]
9001e8de:	785a      	ldrb	r2, [r3, #1]
9001e8e0:	789b      	ldrb	r3, [r3, #2]
9001e8e2:	021b      	lsls	r3, r3, #8
9001e8e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001e8e8:	9a07      	ldr	r2, [sp, #28]
9001e8ea:	78d2      	ldrb	r2, [r2, #3]
9001e8ec:	4313      	orrs	r3, r2
9001e8ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e8f0:	441a      	add	r2, r3
9001e8f2:	1c50      	adds	r0, r2, #1
9001e8f4:	7852      	ldrb	r2, [r2, #1]
9001e8f6:	9003      	str	r0, [sp, #12]
9001e8f8:	0212      	lsls	r2, r2, #8
9001e8fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e8fc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001e900:	5cc3      	ldrb	r3, [r0, r3]
9001e902:	431a      	orrs	r2, r3
9001e904:	b293      	uxth	r3, r2
9001e906:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001e90a:	930c      	str	r3, [sp, #48]	@ 0x30
9001e90c:	2300      	movs	r3, #0
9001e90e:	9308      	str	r3, [sp, #32]
9001e910:	461a      	mov	r2, r3
9001e912:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001e916:	930e      	str	r3, [sp, #56]	@ 0x38
9001e918:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001e91c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e91e:	2d00      	cmp	r5, #0
9001e920:	d07d      	beq.n	9001ea1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001e922:	45ac      	cmp	ip, r5
9001e924:	d26d      	bcs.n	9001ea02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001e926:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e928:	eba5 050c 	sub.w	r5, r5, ip
9001e92c:	4608      	mov	r0, r1
9001e92e:	455b      	cmp	r3, fp
9001e930:	b2ad      	uxth	r5, r5
9001e932:	d802      	bhi.n	9001e93a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001e934:	e071      	b.n	9001ea1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001e936:	2b00      	cmp	r3, #0
9001e938:	d15d      	bne.n	9001e9f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001e93a:	9b03      	ldr	r3, [sp, #12]
9001e93c:	9a02      	ldr	r2, [sp, #8]
9001e93e:	785b      	ldrb	r3, [r3, #1]
9001e940:	f1c2 0207 	rsb	r2, r2, #7
9001e944:	9902      	ldr	r1, [sp, #8]
9001e946:	4093      	lsls	r3, r2
9001e948:	005b      	lsls	r3, r3, #1
9001e94a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e94e:	9b03      	ldr	r3, [sp, #12]
9001e950:	781b      	ldrb	r3, [r3, #0]
9001e952:	410b      	asrs	r3, r1
9001e954:	3101      	adds	r1, #1
9001e956:	b2c9      	uxtb	r1, r1
9001e958:	b2db      	uxtb	r3, r3
9001e95a:	2908      	cmp	r1, #8
9001e95c:	9102      	str	r1, [sp, #8]
9001e95e:	9903      	ldr	r1, [sp, #12]
9001e960:	ea43 0302 	orr.w	r3, r3, r2
9001e964:	bf0c      	ite	eq
9001e966:	3102      	addeq	r1, #2
9001e968:	3101      	addne	r1, #1
9001e96a:	b29a      	uxth	r2, r3
9001e96c:	bf05      	ittet	eq
9001e96e:	9103      	streq	r1, [sp, #12]
9001e970:	2100      	moveq	r1, #0
9001e972:	9103      	strne	r1, [sp, #12]
9001e974:	9102      	streq	r1, [sp, #8]
9001e976:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e978:	4291      	cmp	r1, r2
9001e97a:	d30a      	bcc.n	9001e992 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001e97c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001e980:	2301      	movs	r3, #1
9001e982:	9905      	ldr	r1, [sp, #20]
9001e984:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001e988:	d30f      	bcc.n	9001e9aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001e98a:	2100      	movs	r1, #0
9001e98c:	4698      	mov	r8, r3
9001e98e:	9100      	str	r1, [sp, #0]
9001e990:	e032      	b.n	9001e9f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001e992:	9b05      	ldr	r3, [sp, #20]
9001e994:	429a      	cmp	r2, r3
9001e996:	d318      	bcc.n	9001e9ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001e998:	eb04 0308 	add.w	r3, r4, r8
9001e99c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001e9a0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001e9a4:	f108 0301 	add.w	r3, r8, #1
9001e9a8:	b29b      	uxth	r3, r3
9001e9aa:	9905      	ldr	r1, [sp, #20]
9001e9ac:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001e9b0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e9b4:	710e      	strb	r6, [r1, #4]
9001e9b6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001e9b8:	80ce      	strh	r6, [r1, #6]
9001e9ba:	f108 0601 	add.w	r6, r8, #1
9001e9be:	714e      	strb	r6, [r1, #5]
9001e9c0:	9905      	ldr	r1, [sp, #20]
9001e9c2:	3101      	adds	r1, #1
9001e9c4:	b289      	uxth	r1, r1
9001e9c6:	9105      	str	r1, [sp, #20]
9001e9c8:	e7df      	b.n	9001e98a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001e9ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001e9ce:	4611      	mov	r1, r2
9001e9d0:	795b      	ldrb	r3, [r3, #5]
9001e9d2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001e9d6:	4426      	add	r6, r4
9001e9d8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001e9da:	4437      	add	r7, r6
9001e9dc:	2f00      	cmp	r7, #0
9001e9de:	dd06      	ble.n	9001e9ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001e9e0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e9e4:	790f      	ldrb	r7, [r1, #4]
9001e9e6:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001e9ea:	88c9      	ldrh	r1, [r1, #6]
9001e9ec:	e7f4      	b.n	9001e9d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001e9ee:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001e9f2:	b29b      	uxth	r3, r3
9001e9f4:	e7c5      	b.n	9001e982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001e9f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001e9f8:	920c      	str	r2, [sp, #48]	@ 0x30
9001e9fa:	4601      	mov	r1, r0
9001e9fc:	9a00      	ldr	r2, [sp, #0]
9001e9fe:	469c      	mov	ip, r3
9001ea00:	e78d      	b.n	9001e91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001ea02:	ebac 0305 	sub.w	r3, ip, r5
9001ea06:	1957      	adds	r7, r2, r5
9001ea08:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001ea0c:	b2ba      	uxth	r2, r7
9001ea0e:	b29b      	uxth	r3, r3
9001ea10:	9200      	str	r2, [sp, #0]
9001ea12:	2500      	movs	r5, #0
9001ea14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001ea16:	455a      	cmp	r2, fp
9001ea18:	d88d      	bhi.n	9001e936 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001ea1a:	4601      	mov	r1, r0
9001ea1c:	e748      	b.n	9001e8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001ea1e:	458c      	cmp	ip, r1
9001ea20:	bf27      	ittee	cs
9001ea22:	ebac 0301 	subcs.w	r3, ip, r1
9001ea26:	4628      	movcs	r0, r5
9001ea28:	eba1 000c 	subcc.w	r0, r1, ip
9001ea2c:	462b      	movcc	r3, r5
9001ea2e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001ea30:	bf27      	ittee	cs
9001ea32:	b29b      	uxthcs	r3, r3
9001ea34:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001ea36:	b280      	uxthcc	r0, r0
9001ea38:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001ea3c:	2dff      	cmp	r5, #255	@ 0xff
9001ea3e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001ea40:	eb02 0705 	add.w	r7, r2, r5
9001ea44:	b2bd      	uxth	r5, r7
9001ea46:	9500      	str	r5, [sp, #0]
9001ea48:	d12e      	bne.n	9001eaa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001ea4a:	465e      	mov	r6, fp
9001ea4c:	9d00      	ldr	r5, [sp, #0]
9001ea4e:	42aa      	cmp	r2, r5
9001ea50:	f040 8083 	bne.w	9001eb5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001ea54:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ea56:	458c      	cmp	ip, r1
9001ea58:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001ea5c:	d3d9      	bcc.n	9001ea12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001ea5e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001ea60:	9904      	ldr	r1, [sp, #16]
9001ea62:	8812      	ldrh	r2, [r2, #0]
9001ea64:	1a52      	subs	r2, r2, r1
9001ea66:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001ea68:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001ea6c:	9a08      	ldr	r2, [sp, #32]
9001ea6e:	3201      	adds	r2, #1
9001ea70:	428a      	cmp	r2, r1
9001ea72:	9208      	str	r2, [sp, #32]
9001ea74:	f040 8091 	bne.w	9001eb9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001ea78:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001ea7c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001ea80:	9b04      	ldr	r3, [sp, #16]
9001ea82:	eba5 050c 	sub.w	r5, r5, ip
9001ea86:	b2ad      	uxth	r5, r5
9001ea88:	2d00      	cmp	r5, #0
9001ea8a:	bf08      	it	eq
9001ea8c:	4619      	moveq	r1, r3
9001ea8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ea90:	bf18      	it	ne
9001ea92:	2100      	movne	r1, #0
9001ea94:	3301      	adds	r3, #1
9001ea96:	b289      	uxth	r1, r1
9001ea98:	930d      	str	r3, [sp, #52]	@ 0x34
9001ea9a:	e700      	b.n	9001e89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001ea9c:	2402198c 	.word	0x2402198c
9001eaa0:	24021986 	.word	0x24021986
9001eaa4:	fffff7fb 	.word	0xfffff7fb
9001eaa8:	46d9      	mov	r9, fp
9001eaaa:	9d00      	ldr	r5, [sp, #0]
9001eaac:	42aa      	cmp	r2, r5
9001eaae:	d0d1      	beq.n	9001ea54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001eab0:	1c55      	adds	r5, r2, #1
9001eab2:	4422      	add	r2, r4
9001eab4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001eab8:	9a06      	ldr	r2, [sp, #24]
9001eaba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001eabe:	9517      	str	r5, [sp, #92]	@ 0x5c
9001eac0:	4472      	add	r2, lr
9001eac2:	9212      	str	r2, [sp, #72]	@ 0x48
9001eac4:	f8b9 2000 	ldrh.w	r2, [r9]
9001eac8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001eaca:	1216      	asrs	r6, r2, #8
9001eacc:	f897 a002 	ldrb.w	sl, [r7, #2]
9001ead0:	10d5      	asrs	r5, r2, #3
9001ead2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001ead4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ead8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001eadc:	00d2      	lsls	r2, r2, #3
9001eade:	fb1a fa07 	smulbb	sl, sl, r7
9001eae2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001eae6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001eae8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001eaec:	b2d2      	uxtb	r2, r2
9001eaee:	fb06 a607 	mla	r6, r6, r7, sl
9001eaf2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001eaf4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001eaf8:	f897 a001 	ldrb.w	sl, [r7, #1]
9001eafc:	b2b6      	uxth	r6, r6
9001eafe:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001eb00:	fb1a fa07 	smulbb	sl, sl, r7
9001eb04:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001eb06:	fb05 a507 	mla	r5, r5, r7, sl
9001eb0a:	9f06      	ldr	r7, [sp, #24]
9001eb0c:	f106 0a01 	add.w	sl, r6, #1
9001eb10:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001eb14:	b2ad      	uxth	r5, r5
9001eb16:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001eb18:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001eb1c:	f105 0a01 	add.w	sl, r5, #1
9001eb20:	fb1e fe07 	smulbb	lr, lr, r7
9001eb24:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001eb26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001eb2a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001eb2e:	fb02 e207 	mla	r2, r2, r7, lr
9001eb32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001eb36:	b292      	uxth	r2, r2
9001eb38:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001eb3c:	f102 0e01 	add.w	lr, r2, #1
9001eb40:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001eb44:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001eb48:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001eb4c:	ea4e 0606 	orr.w	r6, lr, r6
9001eb50:	ea46 060a 	orr.w	r6, r6, sl
9001eb54:	f829 6b02 	strh.w	r6, [r9], #2
9001eb58:	e7a7      	b.n	9001eaaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001eb5a:	f102 0e01 	add.w	lr, r2, #1
9001eb5e:	4422      	add	r2, r4
9001eb60:	9f06      	ldr	r7, [sp, #24]
9001eb62:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001eb66:	9a06      	ldr	r2, [sp, #24]
9001eb68:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001eb6c:	eb02 0a05 	add.w	sl, r2, r5
9001eb70:	4a13      	ldr	r2, [pc, #76]	@ (9001ebc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001eb72:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001eb76:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001eb7a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001eb7e:	00d2      	lsls	r2, r2, #3
9001eb80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001eb84:	ea49 0202 	orr.w	r2, r9, r2
9001eb88:	f817 9005 	ldrb.w	r9, [r7, r5]
9001eb8c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001eb90:	f826 2b02 	strh.w	r2, [r6], #2
9001eb94:	fa1f f28e 	uxth.w	r2, lr
9001eb98:	e758      	b.n	9001ea4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001eb9a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001eb9e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001eba2:	1a2d      	subs	r5, r5, r0
9001eba4:	b2ad      	uxth	r5, r5
9001eba6:	2d00      	cmp	r5, #0
9001eba8:	bf18      	it	ne
9001ebaa:	2000      	movne	r0, #0
9001ebac:	e732      	b.n	9001ea14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001ebae:	4b05      	ldr	r3, [pc, #20]	@ (9001ebc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001ebb0:	6818      	ldr	r0, [r3, #0]
9001ebb2:	6803      	ldr	r3, [r0, #0]
9001ebb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ebb6:	4798      	blx	r3
9001ebb8:	b01f      	add	sp, #124	@ 0x7c
9001ebba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ebbe:	bf00      	nop
9001ebc0:	fffff800 	.word	0xfffff800
9001ebc4:	2402198c 	.word	0x2402198c

9001ebc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001ebc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebcc:	b091      	sub	sp, #68	@ 0x44
9001ebce:	469b      	mov	fp, r3
9001ebd0:	4616      	mov	r6, r2
9001ebd2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ebd6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001ebda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001ebde:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001ebe2:	4604      	mov	r4, r0
9001ebe4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001ebe8:	4640      	mov	r0, r8
9001ebea:	460d      	mov	r5, r1
9001ebec:	4659      	mov	r1, fp
9001ebee:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001ebf2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001ebf6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001ebfa:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001ebfe:	f7f1 fb3b 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001ec02:	4631      	mov	r1, r6
9001ec04:	4640      	mov	r0, r8
9001ec06:	f7f1 fb37 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001ec0a:	4b74      	ldr	r3, [pc, #464]	@ (9001eddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001ec0c:	8818      	ldrh	r0, [r3, #0]
9001ec0e:	4b74      	ldr	r3, [pc, #464]	@ (9001ede0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001ec10:	b202      	sxth	r2, r0
9001ec12:	8819      	ldrh	r1, [r3, #0]
9001ec14:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001ec18:	b20e      	sxth	r6, r1
9001ec1a:	2b00      	cmp	r3, #0
9001ec1c:	da07      	bge.n	9001ec2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001ec1e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001ec22:	4463      	add	r3, ip
9001ec24:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001ec28:	2300      	movs	r3, #0
9001ec2a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001ec2e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001ec32:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001ec36:	1ad2      	subs	r2, r2, r3
9001ec38:	4594      	cmp	ip, r2
9001ec3a:	bfc4      	itt	gt
9001ec3c:	1ac2      	subgt	r2, r0, r3
9001ec3e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001ec42:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ec46:	2a00      	cmp	r2, #0
9001ec48:	da07      	bge.n	9001ec5a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001ec4a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001ec4e:	4462      	add	r2, ip
9001ec50:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001ec54:	2200      	movs	r2, #0
9001ec56:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001ec5a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001ec5e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001ec62:	eba6 060a 	sub.w	r6, r6, sl
9001ec66:	42b2      	cmp	r2, r6
9001ec68:	bfc4      	itt	gt
9001ec6a:	eba1 020a 	subgt.w	r2, r1, sl
9001ec6e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001ec72:	4a5c      	ldr	r2, [pc, #368]	@ (9001ede4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001ec74:	7812      	ldrb	r2, [r2, #0]
9001ec76:	b9a2      	cbnz	r2, 9001eca2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001ec78:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001ec7c:	4286      	cmp	r6, r0
9001ec7e:	4640      	mov	r0, r8
9001ec80:	9303      	str	r3, [sp, #12]
9001ec82:	bf14      	ite	ne
9001ec84:	2600      	movne	r6, #0
9001ec86:	2601      	moveq	r6, #1
9001ec88:	f7f1 fb39 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001ec8c:	9b03      	ldr	r3, [sp, #12]
9001ec8e:	b160      	cbz	r0, 9001ecaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001ec90:	2300      	movs	r3, #0
9001ec92:	8023      	strh	r3, [r4, #0]
9001ec94:	8063      	strh	r3, [r4, #2]
9001ec96:	80a3      	strh	r3, [r4, #4]
9001ec98:	4620      	mov	r0, r4
9001ec9a:	80e3      	strh	r3, [r4, #6]
9001ec9c:	b011      	add	sp, #68	@ 0x44
9001ec9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eca2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001eca6:	428e      	cmp	r6, r1
9001eca8:	e7e9      	b.n	9001ec7e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001ecaa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001ecae:	a90e      	add	r1, sp, #56	@ 0x38
9001ecb0:	900e      	str	r0, [sp, #56]	@ 0x38
9001ecb2:	a80c      	add	r0, sp, #48	@ 0x30
9001ecb4:	9205      	str	r2, [sp, #20]
9001ecb6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001ecba:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001ecbe:	9206      	str	r2, [sp, #24]
9001ecc0:	f8bb 2000 	ldrh.w	r2, [fp]
9001ecc4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001ecc8:	1a9b      	subs	r3, r3, r2
9001ecca:	b21b      	sxth	r3, r3
9001eccc:	9303      	str	r3, [sp, #12]
9001ecce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001ecd2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001edec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ecd6:	ebaa 0a03 	sub.w	sl, sl, r3
9001ecda:	fa0f f38a 	sxth.w	r3, sl
9001ecde:	9304      	str	r3, [sp, #16]
9001ece0:	9b03      	ldr	r3, [sp, #12]
9001ece2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001ece6:	9b04      	ldr	r3, [sp, #16]
9001ece8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001ecec:	9b05      	ldr	r3, [sp, #20]
9001ecee:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001ecf2:	9b06      	ldr	r3, [sp, #24]
9001ecf4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001ecf8:	f7f7 f94e 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ecfc:	4640      	mov	r0, r8
9001ecfe:	f7f7 f923 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed02:	a80e      	add	r0, sp, #56	@ 0x38
9001ed04:	f7f7 f920 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed08:	4b37      	ldr	r3, [pc, #220]	@ (9001ede8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001ed0a:	4628      	mov	r0, r5
9001ed0c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001ed10:	881b      	ldrh	r3, [r3, #0]
9001ed12:	9307      	str	r3, [sp, #28]
9001ed14:	682b      	ldr	r3, [r5, #0]
9001ed16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ed18:	4798      	blx	r3
9001ed1a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001ed1e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001ed22:	4681      	mov	r9, r0
9001ed24:	f8db 0000 	ldr.w	r0, [fp]
9001ed28:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001ed2c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001ed2e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ed32:	6803      	ldr	r3, [r0, #0]
9001ed34:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001ed36:	4798      	blx	r3
9001ed38:	4607      	mov	r7, r0
9001ed3a:	f8db 0000 	ldr.w	r0, [fp]
9001ed3e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001ed42:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ed46:	6803      	ldr	r3, [r0, #0]
9001ed48:	9109      	str	r1, [sp, #36]	@ 0x24
9001ed4a:	9208      	str	r2, [sp, #32]
9001ed4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ed4e:	4798      	blx	r3
9001ed50:	f010 0f01 	tst.w	r0, #1
9001ed54:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001ed58:	d012      	beq.n	9001ed80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001ed5a:	f8db 0000 	ldr.w	r0, [fp]
9001ed5e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001ed62:	6803      	ldr	r3, [r0, #0]
9001ed64:	9200      	str	r2, [sp, #0]
9001ed66:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001ed68:	462b      	mov	r3, r5
9001ed6a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001ed6e:	47b0      	blx	r6
9001ed70:	9b03      	ldr	r3, [sp, #12]
9001ed72:	8023      	strh	r3, [r4, #0]
9001ed74:	9b04      	ldr	r3, [sp, #16]
9001ed76:	8063      	strh	r3, [r4, #2]
9001ed78:	9b05      	ldr	r3, [sp, #20]
9001ed7a:	80a3      	strh	r3, [r4, #4]
9001ed7c:	9b06      	ldr	r3, [sp, #24]
9001ed7e:	e78b      	b.n	9001ec98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001ed80:	fb09 f202 	mul.w	r2, r9, r2
9001ed84:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001ed88:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001ed8c:	440f      	add	r7, r1
9001ed8e:	b166      	cbz	r6, 9001edaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ed90:	9a07      	ldr	r2, [sp, #28]
9001ed92:	4592      	cmp	sl, r2
9001ed94:	d109      	bne.n	9001edaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ed96:	f8db 0000 	ldr.w	r0, [fp]
9001ed9a:	fb09 f303 	mul.w	r3, r9, r3
9001ed9e:	4629      	mov	r1, r5
9001eda0:	6802      	ldr	r2, [r0, #0]
9001eda2:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001eda4:	463a      	mov	r2, r7
9001eda6:	47b0      	blx	r6
9001eda8:	e7e2      	b.n	9001ed70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001edaa:	fb0a f303 	mul.w	r3, sl, r3
9001edae:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001edb2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001edec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001edb6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001edba:	4545      	cmp	r5, r8
9001edbc:	d2d8      	bcs.n	9001ed70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001edbe:	f8db 0000 	ldr.w	r0, [fp]
9001edc2:	4629      	mov	r1, r5
9001edc4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001edc8:	4435      	add	r5, r6
9001edca:	6802      	ldr	r2, [r0, #0]
9001edcc:	005b      	lsls	r3, r3, #1
9001edce:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001edd2:	463a      	mov	r2, r7
9001edd4:	47d0      	blx	sl
9001edd6:	444f      	add	r7, r9
9001edd8:	e7ef      	b.n	9001edba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001edda:	bf00      	nop
9001eddc:	24021980 	.word	0x24021980
9001ede0:	24021982 	.word	0x24021982
9001ede4:	24021984 	.word	0x24021984
9001ede8:	24021986 	.word	0x24021986
9001edec:	2402198c 	.word	0x2402198c

9001edf0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001edf0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001edf2:	4606      	mov	r6, r0
9001edf4:	b087      	sub	sp, #28
9001edf6:	460c      	mov	r4, r1
9001edf8:	4617      	mov	r7, r2
9001edfa:	461d      	mov	r5, r3
9001edfc:	b333      	cbz	r3, 9001ee4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001edfe:	4608      	mov	r0, r1
9001ee00:	f7f1 fa7d 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001ee04:	bb10      	cbnz	r0, 9001ee4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ee06:	6820      	ldr	r0, [r4, #0]
9001ee08:	ab04      	add	r3, sp, #16
9001ee0a:	6861      	ldr	r1, [r4, #4]
9001ee0c:	4c1b      	ldr	r4, [pc, #108]	@ (9001ee7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001ee0e:	c303      	stmia	r3!, {r0, r1}
9001ee10:	a804      	add	r0, sp, #16
9001ee12:	f7f7 f899 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ee16:	6820      	ldr	r0, [r4, #0]
9001ee18:	6803      	ldr	r3, [r0, #0]
9001ee1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ee1c:	4798      	blx	r3
9001ee1e:	2dff      	cmp	r5, #255	@ 0xff
9001ee20:	d016      	beq.n	9001ee50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001ee22:	f010 0f08 	tst.w	r0, #8
9001ee26:	6820      	ldr	r0, [r4, #0]
9001ee28:	d015      	beq.n	9001ee56 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001ee2a:	2400      	movs	r4, #0
9001ee2c:	6801      	ldr	r1, [r0, #0]
9001ee2e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001ee32:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ee36:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001ee3a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001ee3e:	9401      	str	r4, [sp, #4]
9001ee40:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001ee44:	9400      	str	r4, [sp, #0]
9001ee46:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
9001ee48:	4639      	mov	r1, r7
9001ee4a:	47a0      	blx	r4
9001ee4c:	b007      	add	sp, #28
9001ee4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ee50:	f010 0f02 	tst.w	r0, #2
9001ee54:	e7e7      	b.n	9001ee26 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001ee56:	6803      	ldr	r3, [r0, #0]
9001ee58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ee5a:	4798      	blx	r3
9001ee5c:	4b08      	ldr	r3, [pc, #32]	@ (9001ee80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001ee5e:	4601      	mov	r1, r0
9001ee60:	4630      	mov	r0, r6
9001ee62:	881a      	ldrh	r2, [r3, #0]
9001ee64:	6833      	ldr	r3, [r6, #0]
9001ee66:	e9cd 7500 	strd	r7, r5, [sp]
9001ee6a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001ee6c:	ab04      	add	r3, sp, #16
9001ee6e:	47a8      	blx	r5
9001ee70:	6820      	ldr	r0, [r4, #0]
9001ee72:	6803      	ldr	r3, [r0, #0]
9001ee74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ee76:	4798      	blx	r3
9001ee78:	e7e8      	b.n	9001ee4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ee7a:	bf00      	nop
9001ee7c:	2402198c 	.word	0x2402198c
9001ee80:	24021986 	.word	0x24021986

9001ee84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001ee84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ee88:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001ee8c:	4688      	mov	r8, r1
9001ee8e:	4614      	mov	r4, r2
9001ee90:	461d      	mov	r5, r3
9001ee92:	9e08      	ldr	r6, [sp, #32]
9001ee94:	2f00      	cmp	r7, #0
9001ee96:	f000 80ab 	beq.w	9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001ee9a:	4618      	mov	r0, r3
9001ee9c:	f7f1 fa2f 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001eea0:	2800      	cmp	r0, #0
9001eea2:	f040 80a5 	bne.w	9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001eea6:	f9b5 1000 	ldrsh.w	r1, [r5]
9001eeaa:	2fff      	cmp	r7, #255	@ 0xff
9001eeac:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001eeb0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001eeb4:	fb04 1303 	mla	r3, r4, r3, r1
9001eeb8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001eebc:	eba4 0200 	sub.w	r2, r4, r0
9001eec0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001eec4:	fb04 f505 	mul.w	r5, r4, r5
9001eec8:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001eecc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001eed0:	d04a      	beq.n	9001ef68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001eed2:	b2bc      	uxth	r4, r7
9001eed4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001eed8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001eedc:	fa5f f788 	uxtb.w	r7, r8
9001eee0:	b2f3      	uxtb	r3, r6
9001eee2:	0040      	lsls	r0, r0, #1
9001eee4:	fb0e fe04 	mul.w	lr, lr, r4
9001eee8:	4367      	muls	r7, r4
9001eeea:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001eeee:	4363      	muls	r3, r4
9001eef0:	fa1f fc8c 	uxth.w	ip, ip
9001eef4:	42a9      	cmp	r1, r5
9001eef6:	d27b      	bcs.n	9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001eef8:	eb01 0900 	add.w	r9, r1, r0
9001eefc:	4549      	cmp	r1, r9
9001eefe:	d231      	bcs.n	9001ef64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001ef00:	880a      	ldrh	r2, [r1, #0]
9001ef02:	1214      	asrs	r4, r2, #8
9001ef04:	10d6      	asrs	r6, r2, #3
9001ef06:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001ef0a:	00d2      	lsls	r2, r2, #3
9001ef0c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ef10:	b2d2      	uxtb	r2, r2
9001ef12:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001ef16:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ef1a:	fb14 f40c 	smulbb	r4, r4, ip
9001ef1e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001ef22:	fb12 f20c 	smulbb	r2, r2, ip
9001ef26:	fb16 f60c 	smulbb	r6, r6, ip
9001ef2a:	4474      	add	r4, lr
9001ef2c:	441a      	add	r2, r3
9001ef2e:	b2a4      	uxth	r4, r4
9001ef30:	443e      	add	r6, r7
9001ef32:	b292      	uxth	r2, r2
9001ef34:	f104 0a01 	add.w	sl, r4, #1
9001ef38:	b2b6      	uxth	r6, r6
9001ef3a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001ef3e:	f102 0a01 	add.w	sl, r2, #1
9001ef42:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001ef46:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001ef4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ef4e:	4322      	orrs	r2, r4
9001ef50:	1c74      	adds	r4, r6, #1
9001ef52:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001ef56:	0976      	lsrs	r6, r6, #5
9001ef58:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ef5c:	4332      	orrs	r2, r6
9001ef5e:	f821 2b02 	strh.w	r2, [r1], #2
9001ef62:	e7cb      	b.n	9001eefc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001ef64:	4441      	add	r1, r8
9001ef66:	e7c5      	b.n	9001eef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001ef68:	0973      	lsrs	r3, r6, #5
9001ef6a:	4f22      	ldr	r7, [pc, #136]	@ (9001eff4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001ef6c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001ef70:	ea08 0707 	and.w	r7, r8, r7
9001ef74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ef78:	433b      	orrs	r3, r7
9001ef7a:	07e7      	lsls	r7, r4, #31
9001ef7c:	ea43 0306 	orr.w	r3, r3, r6
9001ef80:	b29b      	uxth	r3, r3
9001ef82:	d50b      	bpl.n	9001ef9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001ef84:	0040      	lsls	r0, r0, #1
9001ef86:	0052      	lsls	r2, r2, #1
9001ef88:	42a9      	cmp	r1, r5
9001ef8a:	d231      	bcs.n	9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001ef8c:	180c      	adds	r4, r1, r0
9001ef8e:	42a1      	cmp	r1, r4
9001ef90:	d202      	bcs.n	9001ef98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001ef92:	f821 3b02 	strh.w	r3, [r1], #2
9001ef96:	e7fa      	b.n	9001ef8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001ef98:	4411      	add	r1, r2
9001ef9a:	e7f5      	b.n	9001ef88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001ef9c:	078e      	lsls	r6, r1, #30
9001ef9e:	d008      	beq.n	9001efb2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001efa0:	0066      	lsls	r6, r4, #1
9001efa2:	460a      	mov	r2, r1
9001efa4:	42aa      	cmp	r2, r5
9001efa6:	d202      	bcs.n	9001efae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001efa8:	8013      	strh	r3, [r2, #0]
9001efaa:	4432      	add	r2, r6
9001efac:	e7fa      	b.n	9001efa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001efae:	3102      	adds	r1, #2
9001efb0:	3801      	subs	r0, #1
9001efb2:	07c2      	lsls	r2, r0, #31
9001efb4:	d50b      	bpl.n	9001efce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001efb6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001efba:	0066      	lsls	r6, r4, #1
9001efbc:	3a01      	subs	r2, #1
9001efbe:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001efc2:	42aa      	cmp	r2, r5
9001efc4:	d202      	bcs.n	9001efcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001efc6:	8013      	strh	r3, [r2, #0]
9001efc8:	4432      	add	r2, r6
9001efca:	e7fa      	b.n	9001efc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001efcc:	3801      	subs	r0, #1
9001efce:	b178      	cbz	r0, 9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001efd0:	1040      	asrs	r0, r0, #1
9001efd2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001efd6:	0080      	lsls	r0, r0, #2
9001efd8:	0064      	lsls	r4, r4, #1
9001efda:	42a9      	cmp	r1, r5
9001efdc:	d208      	bcs.n	9001eff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001efde:	180e      	adds	r6, r1, r0
9001efe0:	460a      	mov	r2, r1
9001efe2:	42b2      	cmp	r2, r6
9001efe4:	d202      	bcs.n	9001efec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001efe6:	f842 3b04 	str.w	r3, [r2], #4
9001efea:	e7fa      	b.n	9001efe2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001efec:	4421      	add	r1, r4
9001efee:	e7f4      	b.n	9001efda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001eff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001eff4:	00fff800 	.word	0x00fff800

9001eff8 <_ZN8touchgfx8LCD16bppC1Ev>:
9001eff8:	2200      	movs	r2, #0
9001effa:	4912      	ldr	r1, [pc, #72]	@ (9001f044 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001effc:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001f000:	6001      	str	r1, [r0, #0]
9001f002:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001f006:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001f00a:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001f00e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001f012:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001f016:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001f01a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001f01e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001f022:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001f026:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001f02a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001f02e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001f032:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001f036:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001f03a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001f03e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001f042:	4770      	bx	lr
9001f044:	9002da4c 	.word	0x9002da4c

9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001f048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f04c:	b08d      	sub	sp, #52	@ 0x34
9001f04e:	460d      	mov	r5, r1
9001f050:	4604      	mov	r4, r0
9001f052:	4699      	mov	r9, r3
9001f054:	6808      	ldr	r0, [r1, #0]
9001f056:	ab08      	add	r3, sp, #32
9001f058:	6849      	ldr	r1, [r1, #4]
9001f05a:	c303      	stmia	r3!, {r0, r1}
9001f05c:	6810      	ldr	r0, [r2, #0]
9001f05e:	ab0a      	add	r3, sp, #40	@ 0x28
9001f060:	6851      	ldr	r1, [r2, #4]
9001f062:	c303      	stmia	r3!, {r0, r1}
9001f064:	a808      	add	r0, sp, #32
9001f066:	f7f6 ff6f 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f06a:	4629      	mov	r1, r5
9001f06c:	a80a      	add	r0, sp, #40	@ 0x28
9001f06e:	4d67      	ldr	r5, [pc, #412]	@ (9001f20c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f070:	f7f6 ff92 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f074:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001f078:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001f07c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001f080:	6828      	ldr	r0, [r5, #0]
9001f082:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f086:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001f08a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f08e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f092:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001f096:	440a      	add	r2, r1
9001f098:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f09c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001f0a0:	4413      	add	r3, r2
9001f0a2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f0a6:	6803      	ldr	r3, [r0, #0]
9001f0a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f0aa:	4798      	blx	r3
9001f0ac:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f0b0:	d119      	bne.n	9001f0e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001f0b2:	f010 0f20 	tst.w	r0, #32
9001f0b6:	6828      	ldr	r0, [r5, #0]
9001f0b8:	d018      	beq.n	9001f0ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001f0ba:	2500      	movs	r5, #0
9001f0bc:	6801      	ldr	r1, [r0, #0]
9001f0be:	b2b6      	uxth	r6, r6
9001f0c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f0c4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001f0c8:	9601      	str	r6, [sp, #4]
9001f0ca:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001f0ce:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001f0d2:	9502      	str	r5, [sp, #8]
9001f0d4:	fa1f f588 	uxth.w	r5, r8
9001f0d8:	9500      	str	r5, [sp, #0]
9001f0da:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
9001f0dc:	4621      	mov	r1, r4
9001f0de:	47a8      	blx	r5
9001f0e0:	b00d      	add	sp, #52	@ 0x34
9001f0e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f0e6:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001f0ea:	e7e4      	b.n	9001f0b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001f0ec:	6803      	ldr	r3, [r0, #0]
9001f0ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f0f0:	4798      	blx	r3
9001f0f2:	4947      	ldr	r1, [pc, #284]	@ (9001f210 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001f0f4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f0f8:	880b      	ldrh	r3, [r1, #0]
9001f0fa:	468a      	mov	sl, r1
9001f0fc:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001f100:	fb03 5202 	mla	r2, r3, r2, r5
9001f104:	4373      	muls	r3, r6
9001f106:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f10a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f10e:	9307      	str	r3, [sp, #28]
9001f110:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001f114:	9306      	str	r3, [sp, #24]
9001f116:	9b07      	ldr	r3, [sp, #28]
9001f118:	4298      	cmp	r0, r3
9001f11a:	d270      	bcs.n	9001f1fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001f11c:	9b06      	ldr	r3, [sp, #24]
9001f11e:	4621      	mov	r1, r4
9001f120:	eb00 0b03 	add.w	fp, r0, r3
9001f124:	4558      	cmp	r0, fp
9001f126:	d25d      	bcs.n	9001f1e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001f128:	f851 4b04 	ldr.w	r4, [r1], #4
9001f12c:	0e23      	lsrs	r3, r4, #24
9001f12e:	d014      	beq.n	9001f15a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f130:	2bff      	cmp	r3, #255	@ 0xff
9001f132:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001f136:	d112      	bne.n	9001f15e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f138:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f13c:	d10f      	bne.n	9001f15e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f13e:	0963      	lsrs	r3, r4, #5
9001f140:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001f144:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f148:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f14c:	f02c 0c07 	bic.w	ip, ip, #7
9001f150:	ea43 0c0c 	orr.w	ip, r3, ip
9001f154:	ea4c 0404 	orr.w	r4, ip, r4
9001f158:	8004      	strh	r4, [r0, #0]
9001f15a:	3002      	adds	r0, #2
9001f15c:	e7e2      	b.n	9001f124 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001f15e:	fb09 f303 	mul.w	r3, r9, r3
9001f162:	8807      	ldrh	r7, [r0, #0]
9001f164:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001f168:	fa5f fc8c 	uxtb.w	ip, ip
9001f16c:	1c5a      	adds	r2, r3, #1
9001f16e:	123e      	asrs	r6, r7, #8
9001f170:	10fd      	asrs	r5, r7, #3
9001f172:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001f176:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f17a:	00ff      	lsls	r7, r7, #3
9001f17c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f180:	1212      	asrs	r2, r2, #8
9001f182:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f186:	b293      	uxth	r3, r2
9001f188:	43d2      	mvns	r2, r2
9001f18a:	b2ff      	uxtb	r7, r7
9001f18c:	fb1e fe03 	smulbb	lr, lr, r3
9001f190:	b2d2      	uxtb	r2, r2
9001f192:	fb1c fc03 	smulbb	ip, ip, r3
9001f196:	b2e4      	uxtb	r4, r4
9001f198:	fb06 e602 	mla	r6, r6, r2, lr
9001f19c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f1a0:	fb14 f403 	smulbb	r4, r4, r3
9001f1a4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f1a8:	b2b6      	uxth	r6, r6
9001f1aa:	fb05 c502 	mla	r5, r5, r2, ip
9001f1ae:	fb07 4702 	mla	r7, r7, r2, r4
9001f1b2:	f106 0e01 	add.w	lr, r6, #1
9001f1b6:	b2ad      	uxth	r5, r5
9001f1b8:	b2bf      	uxth	r7, r7
9001f1ba:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001f1be:	f105 0c01 	add.w	ip, r5, #1
9001f1c2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001f1c6:	1c7e      	adds	r6, r7, #1
9001f1c8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f1cc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001f1d0:	096d      	lsrs	r5, r5, #5
9001f1d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f1d6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f1da:	ea46 060e 	orr.w	r6, r6, lr
9001f1de:	432e      	orrs	r6, r5
9001f1e0:	8006      	strh	r6, [r0, #0]
9001f1e2:	e7ba      	b.n	9001f15a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f1e4:	f8ba 3000 	ldrh.w	r3, [sl]
9001f1e8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001f1ec:	eba3 0308 	sub.w	r3, r3, r8
9001f1f0:	eba4 0408 	sub.w	r4, r4, r8
9001f1f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f1f8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001f1fc:	e78b      	b.n	9001f116 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001f1fe:	4b03      	ldr	r3, [pc, #12]	@ (9001f20c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f200:	6818      	ldr	r0, [r3, #0]
9001f202:	6803      	ldr	r3, [r0, #0]
9001f204:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f206:	4798      	blx	r3
9001f208:	e76a      	b.n	9001f0e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001f20a:	bf00      	nop
9001f20c:	2402198c 	.word	0x2402198c
9001f210:	24021986 	.word	0x24021986

9001f214 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001f214:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001f218:	b085      	sub	sp, #20
9001f21a:	6810      	ldr	r0, [r2, #0]
9001f21c:	460c      	mov	r4, r1
9001f21e:	6851      	ldr	r1, [r2, #4]
9001f220:	466d      	mov	r5, sp
9001f222:	4616      	mov	r6, r2
9001f224:	c503      	stmia	r5!, {r0, r1}
9001f226:	6818      	ldr	r0, [r3, #0]
9001f228:	6859      	ldr	r1, [r3, #4]
9001f22a:	c503      	stmia	r5!, {r0, r1}
9001f22c:	4668      	mov	r0, sp
9001f22e:	4d2e      	ldr	r5, [pc, #184]	@ (9001f2e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001f230:	f7f6 fe8a 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f234:	4631      	mov	r1, r6
9001f236:	a802      	add	r0, sp, #8
9001f238:	4e2c      	ldr	r6, [pc, #176]	@ (9001f2ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001f23a:	f7f6 fead 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f23e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001f242:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001f246:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001f24a:	6828      	ldr	r0, [r5, #0]
9001f24c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f250:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001f254:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001f258:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f25c:	f8bd 1000 	ldrh.w	r1, [sp]
9001f260:	440a      	add	r2, r1
9001f262:	f8ad 2008 	strh.w	r2, [sp, #8]
9001f266:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f26a:	4413      	add	r3, r2
9001f26c:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f270:	6803      	ldr	r3, [r0, #0]
9001f272:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f274:	4798      	blx	r3
9001f276:	8833      	ldrh	r3, [r6, #0]
9001f278:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001f27c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001f280:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f284:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001f2f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001f288:	fb03 1202 	mla	r2, r3, r2, r1
9001f28c:	fb08 f303 	mul.w	r3, r8, r3
9001f290:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f294:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f298:	4298      	cmp	r0, r3
9001f29a:	d21d      	bcs.n	9001f2d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001f29c:	eb00 080c 	add.w	r8, r0, ip
9001f2a0:	4540      	cmp	r0, r8
9001f2a2:	d20f      	bcs.n	9001f2c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001f2a4:	f854 1b04 	ldr.w	r1, [r4], #4
9001f2a8:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001f2ac:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001f2b0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001f2b4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f2b8:	ea42 0209 	orr.w	r2, r2, r9
9001f2bc:	430a      	orrs	r2, r1
9001f2be:	f820 2b02 	strh.w	r2, [r0], #2
9001f2c2:	e7ed      	b.n	9001f2a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001f2c4:	8832      	ldrh	r2, [r6, #0]
9001f2c6:	1bd2      	subs	r2, r2, r7
9001f2c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f2cc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001f2d0:	1bd2      	subs	r2, r2, r7
9001f2d2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001f2d6:	e7df      	b.n	9001f298 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001f2d8:	6828      	ldr	r0, [r5, #0]
9001f2da:	6803      	ldr	r3, [r0, #0]
9001f2dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f2de:	4798      	blx	r3
9001f2e0:	b005      	add	sp, #20
9001f2e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001f2e6:	bf00      	nop
9001f2e8:	2402198c 	.word	0x2402198c
9001f2ec:	24021986 	.word	0x24021986
9001f2f0:	fffff800 	.word	0xfffff800

9001f2f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001f2f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f2f8:	b08e      	sub	sp, #56	@ 0x38
9001f2fa:	460e      	mov	r6, r1
9001f2fc:	4604      	mov	r4, r0
9001f2fe:	461d      	mov	r5, r3
9001f300:	6808      	ldr	r0, [r1, #0]
9001f302:	ab0a      	add	r3, sp, #40	@ 0x28
9001f304:	6849      	ldr	r1, [r1, #4]
9001f306:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001f4dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001f30a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001f4e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001f30e:	c303      	stmia	r3!, {r0, r1}
9001f310:	6810      	ldr	r0, [r2, #0]
9001f312:	ab0c      	add	r3, sp, #48	@ 0x30
9001f314:	6851      	ldr	r1, [r2, #4]
9001f316:	c303      	stmia	r3!, {r0, r1}
9001f318:	a80a      	add	r0, sp, #40	@ 0x28
9001f31a:	f7f6 fe15 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f31e:	4631      	mov	r1, r6
9001f320:	a80c      	add	r0, sp, #48	@ 0x30
9001f322:	f7f6 fe39 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f326:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001f32a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001f32e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f332:	f8d8 0000 	ldr.w	r0, [r8]
9001f336:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f33a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001f33e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f342:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001f346:	440c      	add	r4, r1
9001f348:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001f34c:	440a      	add	r2, r1
9001f34e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001f352:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001f356:	4413      	add	r3, r2
9001f358:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f35c:	6803      	ldr	r3, [r0, #0]
9001f35e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f360:	4798      	blx	r3
9001f362:	2dff      	cmp	r5, #255	@ 0xff
9001f364:	d124      	bne.n	9001f3b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001f366:	f010 0f01 	tst.w	r0, #1
9001f36a:	f8d8 0000 	ldr.w	r0, [r8]
9001f36e:	d022      	beq.n	9001f3b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001f370:	2100      	movs	r1, #0
9001f372:	f04f 0e01 	mov.w	lr, #1
9001f376:	f8d0 c000 	ldr.w	ip, [r0]
9001f37a:	b2b6      	uxth	r6, r6
9001f37c:	f8cd e018 	str.w	lr, [sp, #24]
9001f380:	b2bf      	uxth	r7, r7
9001f382:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001f386:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001f38a:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001f38e:	f8b9 e000 	ldrh.w	lr, [r9]
9001f392:	9503      	str	r5, [sp, #12]
9001f394:	9601      	str	r6, [sp, #4]
9001f396:	9700      	str	r7, [sp, #0]
9001f398:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001f39c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f3a0:	9102      	str	r1, [sp, #8]
9001f3a2:	4621      	mov	r1, r4
9001f3a4:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
9001f3a8:	47a8      	blx	r5
9001f3aa:	b00e      	add	sp, #56	@ 0x38
9001f3ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f3b0:	f010 0f04 	tst.w	r0, #4
9001f3b4:	e7d9      	b.n	9001f36a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001f3b6:	6803      	ldr	r3, [r0, #0]
9001f3b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f3ba:	4798      	blx	r3
9001f3bc:	f8b9 3000 	ldrh.w	r3, [r9]
9001f3c0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f3c4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001f3c8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001f3cc:	435e      	muls	r6, r3
9001f3ce:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f3d2:	2dff      	cmp	r5, #255	@ 0xff
9001f3d4:	fb03 1202 	mla	r2, r3, r2, r1
9001f3d8:	ebac 0c07 	sub.w	ip, ip, r7
9001f3dc:	eba3 0707 	sub.w	r7, r3, r7
9001f3e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f3e4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f3e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f3ec:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001f3f0:	d049      	beq.n	9001f486 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001f3f2:	43eb      	mvns	r3, r5
9001f3f4:	fa1f f985 	uxth.w	r9, r5
9001f3f8:	b2db      	uxtb	r3, r3
9001f3fa:	42b0      	cmp	r0, r6
9001f3fc:	d266      	bcs.n	9001f4cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001f3fe:	eb00 0a0e 	add.w	sl, r0, lr
9001f402:	4550      	cmp	r0, sl
9001f404:	4621      	mov	r1, r4
9001f406:	f104 0403 	add.w	r4, r4, #3
9001f40a:	d25b      	bcs.n	9001f4c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001f40c:	8802      	ldrh	r2, [r0, #0]
9001f40e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001f412:	ea4f 2822 	mov.w	r8, r2, asr #8
9001f416:	fb11 f109 	smulbb	r1, r1, r9
9001f41a:	10d5      	asrs	r5, r2, #3
9001f41c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001f420:	00d2      	lsls	r2, r2, #3
9001f422:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f426:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001f42a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f42e:	fb08 1803 	mla	r8, r8, r3, r1
9001f432:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001f436:	b2d2      	uxtb	r2, r2
9001f438:	fb11 f109 	smulbb	r1, r1, r9
9001f43c:	fa1f f888 	uxth.w	r8, r8
9001f440:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f444:	fb05 1503 	mla	r5, r5, r3, r1
9001f448:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001f44c:	fb11 f109 	smulbb	r1, r1, r9
9001f450:	b2ad      	uxth	r5, r5
9001f452:	fb02 1203 	mla	r2, r2, r3, r1
9001f456:	f108 0101 	add.w	r1, r8, #1
9001f45a:	b292      	uxth	r2, r2
9001f45c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001f460:	1c51      	adds	r1, r2, #1
9001f462:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001f466:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001f46a:	1c69      	adds	r1, r5, #1
9001f46c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001f470:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f474:	096d      	lsrs	r5, r5, #5
9001f476:	ea42 0208 	orr.w	r2, r2, r8
9001f47a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f47e:	432a      	orrs	r2, r5
9001f480:	f820 2b02 	strh.w	r2, [r0], #2
9001f484:	e7bd      	b.n	9001f402 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001f486:	4a14      	ldr	r2, [pc, #80]	@ (9001f4d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001f488:	42b0      	cmp	r0, r6
9001f48a:	d21f      	bcs.n	9001f4cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001f48c:	eb00 050e 	add.w	r5, r0, lr
9001f490:	42a8      	cmp	r0, r5
9001f492:	4621      	mov	r1, r4
9001f494:	f104 0403 	add.w	r4, r4, #3
9001f498:	d210      	bcs.n	9001f4bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001f49a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001f49e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001f4a2:	00db      	lsls	r3, r3, #3
9001f4a4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001f4a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f4ac:	430b      	orrs	r3, r1
9001f4ae:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001f4b2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001f4b6:	f820 3b02 	strh.w	r3, [r0], #2
9001f4ba:	e7e9      	b.n	9001f490 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001f4bc:	4438      	add	r0, r7
9001f4be:	eb01 040c 	add.w	r4, r1, ip
9001f4c2:	e7e1      	b.n	9001f488 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001f4c4:	4438      	add	r0, r7
9001f4c6:	eb01 040c 	add.w	r4, r1, ip
9001f4ca:	e796      	b.n	9001f3fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001f4cc:	4b03      	ldr	r3, [pc, #12]	@ (9001f4dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001f4ce:	6818      	ldr	r0, [r3, #0]
9001f4d0:	6803      	ldr	r3, [r0, #0]
9001f4d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f4d4:	4798      	blx	r3
9001f4d6:	e768      	b.n	9001f3aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001f4d8:	fffff800 	.word	0xfffff800
9001f4dc:	2402198c 	.word	0x2402198c
9001f4e0:	24021986 	.word	0x24021986

9001f4e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001f4e4:	b4f0      	push	{r4, r5, r6, r7}
9001f4e6:	4616      	mov	r6, r2
9001f4e8:	461c      	mov	r4, r3
9001f4ea:	460d      	mov	r5, r1
9001f4ec:	9a04      	ldr	r2, [sp, #16]
9001f4ee:	2e01      	cmp	r6, #1
9001f4f0:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001f4f4:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001f4f8:	d012      	beq.n	9001f520 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001f4fa:	d303      	bcc.n	9001f504 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001f4fc:	2e02      	cmp	r6, #2
9001f4fe:	d00a      	beq.n	9001f516 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001f500:	bcf0      	pop	{r4, r5, r6, r7}
9001f502:	4770      	bx	lr
9001f504:	6805      	ldr	r5, [r0, #0]
9001f506:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001f50a:	68ed      	ldr	r5, [r5, #12]
9001f50c:	4613      	mov	r3, r2
9001f50e:	4622      	mov	r2, r4
9001f510:	46ac      	mov	ip, r5
9001f512:	bcf0      	pop	{r4, r5, r6, r7}
9001f514:	4760      	bx	ip
9001f516:	4621      	mov	r1, r4
9001f518:	4628      	mov	r0, r5
9001f51a:	bcf0      	pop	{r4, r5, r6, r7}
9001f51c:	f7ff bd94 	b.w	9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f520:	4621      	mov	r1, r4
9001f522:	4628      	mov	r0, r5
9001f524:	bcf0      	pop	{r4, r5, r6, r7}
9001f526:	f7ff bee5 	b.w	9001f2f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001f52c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001f52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f530:	b093      	sub	sp, #76	@ 0x4c
9001f532:	4681      	mov	r9, r0
9001f534:	4688      	mov	r8, r1
9001f536:	6810      	ldr	r0, [r2, #0]
9001f538:	6851      	ldr	r1, [r2, #4]
9001f53a:	ac0e      	add	r4, sp, #56	@ 0x38
9001f53c:	4616      	mov	r6, r2
9001f53e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001f542:	4f6b      	ldr	r7, [pc, #428]	@ (9001f6f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001f544:	c403      	stmia	r4!, {r0, r1}
9001f546:	6818      	ldr	r0, [r3, #0]
9001f548:	ac10      	add	r4, sp, #64	@ 0x40
9001f54a:	6859      	ldr	r1, [r3, #4]
9001f54c:	c403      	stmia	r4!, {r0, r1}
9001f54e:	a80e      	add	r0, sp, #56	@ 0x38
9001f550:	f7f6 fcfa 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f554:	4631      	mov	r1, r6
9001f556:	a810      	add	r0, sp, #64	@ 0x40
9001f558:	4e66      	ldr	r6, [pc, #408]	@ (9001f6f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001f55a:	f7f6 fd1d 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f55e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001f562:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001f566:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001f56a:	6830      	ldr	r0, [r6, #0]
9001f56c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f570:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001f574:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001f578:	4489      	add	r9, r1
9001f57a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001f57e:	440a      	add	r2, r1
9001f580:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001f584:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001f588:	4413      	add	r3, r2
9001f58a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001f58e:	6803      	ldr	r3, [r0, #0]
9001f590:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f592:	4798      	blx	r3
9001f594:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001f598:	6830      	ldr	r0, [r6, #0]
9001f59a:	d01d      	beq.n	9001f5d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001f59c:	2200      	movs	r2, #0
9001f59e:	6801      	ldr	r1, [r0, #0]
9001f5a0:	b2a4      	uxth	r4, r4
9001f5a2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001f5a6:	b2ad      	uxth	r5, r5
9001f5a8:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001f5ac:	220b      	movs	r2, #11
9001f5ae:	9207      	str	r2, [sp, #28]
9001f5b0:	883a      	ldrh	r2, [r7, #0]
9001f5b2:	9502      	str	r5, [sp, #8]
9001f5b4:	9206      	str	r2, [sp, #24]
9001f5b6:	2201      	movs	r2, #1
9001f5b8:	9401      	str	r4, [sp, #4]
9001f5ba:	e9cd a204 	strd	sl, r2, [sp, #16]
9001f5be:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001f5c2:	9203      	str	r2, [sp, #12]
9001f5c4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001f5c8:	9200      	str	r2, [sp, #0]
9001f5ca:	4642      	mov	r2, r8
9001f5cc:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
9001f5ce:	4649      	mov	r1, r9
9001f5d0:	47a0      	blx	r4
9001f5d2:	b013      	add	sp, #76	@ 0x4c
9001f5d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f5d8:	6803      	ldr	r3, [r0, #0]
9001f5da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f5dc:	4798      	blx	r3
9001f5de:	883b      	ldrh	r3, [r7, #0]
9001f5e0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f5e4:	f04f 0e04 	mov.w	lr, #4
9001f5e8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001f5ec:	435d      	muls	r5, r3
9001f5ee:	fb03 1202 	mla	r2, r3, r2, r1
9001f5f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f5f6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001f5fa:	920c      	str	r2, [sp, #48]	@ 0x30
9001f5fc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001f600:	1b12      	subs	r2, r2, r4
9001f602:	920d      	str	r2, [sp, #52]	@ 0x34
9001f604:	0062      	lsls	r2, r4, #1
9001f606:	1b1c      	subs	r4, r3, r4
9001f608:	920a      	str	r2, [sp, #40]	@ 0x28
9001f60a:	0063      	lsls	r3, r4, #1
9001f60c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f60e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f610:	4298      	cmp	r0, r3
9001f612:	d266      	bcs.n	9001f6e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001f614:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f616:	eb00 0b03 	add.w	fp, r0, r3
9001f61a:	4558      	cmp	r0, fp
9001f61c:	d25c      	bcs.n	9001f6d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001f61e:	f819 3b01 	ldrb.w	r3, [r9], #1
9001f622:	fb1e e303 	smlabb	r3, lr, r3, lr
9001f626:	f858 2003 	ldr.w	r2, [r8, r3]
9001f62a:	0e11      	lsrs	r1, r2, #24
9001f62c:	d012      	beq.n	9001f654 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001f62e:	29ff      	cmp	r1, #255	@ 0xff
9001f630:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001f634:	d110      	bne.n	9001f658 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001f636:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f63a:	d10d      	bne.n	9001f658 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001f63c:	0953      	lsrs	r3, r2, #5
9001f63e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001f642:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f646:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f64a:	f027 0707 	bic.w	r7, r7, #7
9001f64e:	431f      	orrs	r7, r3
9001f650:	433a      	orrs	r2, r7
9001f652:	8002      	strh	r2, [r0, #0]
9001f654:	3002      	adds	r0, #2
9001f656:	e7e0      	b.n	9001f61a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001f658:	fb0a f101 	mul.w	r1, sl, r1
9001f65c:	8806      	ldrh	r6, [r0, #0]
9001f65e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001f662:	b2d2      	uxtb	r2, r2
9001f664:	1c4b      	adds	r3, r1, #1
9001f666:	1235      	asrs	r5, r6, #8
9001f668:	10f4      	asrs	r4, r6, #3
9001f66a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001f66e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f672:	00f6      	lsls	r6, r6, #3
9001f674:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001f678:	121b      	asrs	r3, r3, #8
9001f67a:	b2f6      	uxtb	r6, r6
9001f67c:	b299      	uxth	r1, r3
9001f67e:	43db      	mvns	r3, r3
9001f680:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f684:	fb1c fc01 	smulbb	ip, ip, r1
9001f688:	b2db      	uxtb	r3, r3
9001f68a:	fb12 f201 	smulbb	r2, r2, r1
9001f68e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f692:	fb05 c503 	mla	r5, r5, r3, ip
9001f696:	b2ff      	uxtb	r7, r7
9001f698:	fb06 2203 	mla	r2, r6, r3, r2
9001f69c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001f6a0:	fb17 f701 	smulbb	r7, r7, r1
9001f6a4:	b2ad      	uxth	r5, r5
9001f6a6:	b292      	uxth	r2, r2
9001f6a8:	fb04 7403 	mla	r4, r4, r3, r7
9001f6ac:	f105 0c01 	add.w	ip, r5, #1
9001f6b0:	1c57      	adds	r7, r2, #1
9001f6b2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f6b6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001f6ba:	b2a4      	uxth	r4, r4
9001f6bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f6c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f6c4:	433d      	orrs	r5, r7
9001f6c6:	1c67      	adds	r7, r4, #1
9001f6c8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001f6cc:	0964      	lsrs	r4, r4, #5
9001f6ce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001f6d2:	4325      	orrs	r5, r4
9001f6d4:	8005      	strh	r5, [r0, #0]
9001f6d6:	e7bd      	b.n	9001f654 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001f6d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f6da:	4418      	add	r0, r3
9001f6dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f6de:	4499      	add	r9, r3
9001f6e0:	e795      	b.n	9001f60e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001f6e2:	4b04      	ldr	r3, [pc, #16]	@ (9001f6f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001f6e4:	6818      	ldr	r0, [r3, #0]
9001f6e6:	6803      	ldr	r3, [r0, #0]
9001f6e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f6ea:	4798      	blx	r3
9001f6ec:	e771      	b.n	9001f5d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001f6ee:	bf00      	nop
9001f6f0:	24021986 	.word	0x24021986
9001f6f4:	2402198c 	.word	0x2402198c

9001f6f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001f6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f6fc:	b087      	sub	sp, #28
9001f6fe:	4680      	mov	r8, r0
9001f700:	460d      	mov	r5, r1
9001f702:	4614      	mov	r4, r2
9001f704:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001f708:	2e00      	cmp	r6, #0
9001f70a:	f000 80b9 	beq.w	9001f880 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001f70e:	6810      	ldr	r0, [r2, #0]
9001f710:	af02      	add	r7, sp, #8
9001f712:	6851      	ldr	r1, [r2, #4]
9001f714:	c703      	stmia	r7!, {r0, r1}
9001f716:	6818      	ldr	r0, [r3, #0]
9001f718:	af04      	add	r7, sp, #16
9001f71a:	6859      	ldr	r1, [r3, #4]
9001f71c:	c703      	stmia	r7!, {r0, r1}
9001f71e:	a802      	add	r0, sp, #8
9001f720:	f7f6 fc12 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f724:	4621      	mov	r1, r4
9001f726:	a804      	add	r0, sp, #16
9001f728:	f7f6 fc36 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f72c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001f730:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f734:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001f738:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001f73c:	fb14 2103 	smlabb	r1, r4, r3, r2
9001f740:	eb08 0401 	add.w	r4, r8, r1
9001f744:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f748:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001f74c:	440a      	add	r2, r1
9001f74e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001f752:	f8ad 2010 	strh.w	r2, [sp, #16]
9001f756:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f75a:	4413      	add	r3, r2
9001f75c:	f8ad 3012 	strh.w	r3, [sp, #18]
9001f760:	4b49      	ldr	r3, [pc, #292]	@ (9001f888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001f762:	6818      	ldr	r0, [r3, #0]
9001f764:	6803      	ldr	r3, [r0, #0]
9001f766:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f768:	4798      	blx	r3
9001f76a:	4b48      	ldr	r3, [pc, #288]	@ (9001f88c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001f76c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001f770:	2eff      	cmp	r6, #255	@ 0xff
9001f772:	881a      	ldrh	r2, [r3, #0]
9001f774:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001f778:	fb02 c101 	mla	r1, r2, r1, ip
9001f77c:	fb02 f207 	mul.w	r2, r2, r7
9001f780:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f784:	f105 0104 	add.w	r1, r5, #4
9001f788:	461d      	mov	r5, r3
9001f78a:	d05a      	beq.n	9001f842 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001f78c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001f790:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001f794:	b2b6      	uxth	r6, r6
9001f796:	9301      	str	r3, [sp, #4]
9001f798:	fa1f fe8e 	uxth.w	lr, lr
9001f79c:	4282      	cmp	r2, r0
9001f79e:	d96a      	bls.n	9001f876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001f7a0:	eb00 0b0a 	add.w	fp, r0, sl
9001f7a4:	4583      	cmp	fp, r0
9001f7a6:	d940      	bls.n	9001f82a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001f7a8:	8805      	ldrh	r5, [r0, #0]
9001f7aa:	f814 3b01 	ldrb.w	r3, [r4], #1
9001f7ae:	122f      	asrs	r7, r5, #8
9001f7b0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001f7b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001f7b8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f7bc:	00ed      	lsls	r5, r5, #3
9001f7be:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001f7c2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001f7c6:	fb17 f70e 	smulbb	r7, r7, lr
9001f7ca:	b2ed      	uxtb	r5, r5
9001f7cc:	fb19 f90e 	smulbb	r9, r9, lr
9001f7d0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f7d4:	fb15 f50e 	smulbb	r5, r5, lr
9001f7d8:	fb0c 7c06 	mla	ip, ip, r6, r7
9001f7dc:	10df      	asrs	r7, r3, #3
9001f7de:	00db      	lsls	r3, r3, #3
9001f7e0:	fa1f fc8c 	uxth.w	ip, ip
9001f7e4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f7e8:	b2db      	uxtb	r3, r3
9001f7ea:	fb07 9706 	mla	r7, r7, r6, r9
9001f7ee:	f10c 0901 	add.w	r9, ip, #1
9001f7f2:	fb03 5306 	mla	r3, r3, r6, r5
9001f7f6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001f7fa:	b29b      	uxth	r3, r3
9001f7fc:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001f800:	b2bf      	uxth	r7, r7
9001f802:	f103 0c01 	add.w	ip, r3, #1
9001f806:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f80a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f80e:	ea4c 0c09 	orr.w	ip, ip, r9
9001f812:	f107 0901 	add.w	r9, r7, #1
9001f816:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001f81a:	097f      	lsrs	r7, r7, #5
9001f81c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001f820:	ea4c 0c07 	orr.w	ip, ip, r7
9001f824:	f820 cb02 	strh.w	ip, [r0], #2
9001f828:	e7bc      	b.n	9001f7a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001f82a:	9b01      	ldr	r3, [sp, #4]
9001f82c:	881b      	ldrh	r3, [r3, #0]
9001f82e:	eba3 0308 	sub.w	r3, r3, r8
9001f832:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f836:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001f83a:	eba3 0308 	sub.w	r3, r3, r8
9001f83e:	441c      	add	r4, r3
9001f840:	e7ac      	b.n	9001f79c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001f842:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001f846:	4282      	cmp	r2, r0
9001f848:	d915      	bls.n	9001f876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001f84a:	eb00 060a 	add.w	r6, r0, sl
9001f84e:	4286      	cmp	r6, r0
9001f850:	d906      	bls.n	9001f860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001f852:	f814 3b01 	ldrb.w	r3, [r4], #1
9001f856:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001f85a:	f820 3b02 	strh.w	r3, [r0], #2
9001f85e:	e7f6      	b.n	9001f84e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001f860:	882b      	ldrh	r3, [r5, #0]
9001f862:	eba3 0308 	sub.w	r3, r3, r8
9001f866:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f86a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001f86e:	eba3 0308 	sub.w	r3, r3, r8
9001f872:	441c      	add	r4, r3
9001f874:	e7e7      	b.n	9001f846 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001f876:	4b04      	ldr	r3, [pc, #16]	@ (9001f888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001f878:	6818      	ldr	r0, [r3, #0]
9001f87a:	6803      	ldr	r3, [r0, #0]
9001f87c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f87e:	4798      	blx	r3
9001f880:	b007      	add	sp, #28
9001f882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f886:	bf00      	nop
9001f888:	2402198c 	.word	0x2402198c
9001f88c:	24021986 	.word	0x24021986

9001f890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001f890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f894:	b091      	sub	sp, #68	@ 0x44
9001f896:	4680      	mov	r8, r0
9001f898:	460f      	mov	r7, r1
9001f89a:	4614      	mov	r4, r2
9001f89c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001f8a0:	2d00      	cmp	r5, #0
9001f8a2:	d051      	beq.n	9001f948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001f8a4:	6810      	ldr	r0, [r2, #0]
9001f8a6:	ae0c      	add	r6, sp, #48	@ 0x30
9001f8a8:	6851      	ldr	r1, [r2, #4]
9001f8aa:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001faac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001f8ae:	c603      	stmia	r6!, {r0, r1}
9001f8b0:	6818      	ldr	r0, [r3, #0]
9001f8b2:	ae0e      	add	r6, sp, #56	@ 0x38
9001f8b4:	6859      	ldr	r1, [r3, #4]
9001f8b6:	c603      	stmia	r6!, {r0, r1}
9001f8b8:	a80c      	add	r0, sp, #48	@ 0x30
9001f8ba:	f7f6 fb45 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f8be:	4621      	mov	r1, r4
9001f8c0:	a80e      	add	r0, sp, #56	@ 0x38
9001f8c2:	f7f6 fb69 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f8c6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001f8ca:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001f8ce:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001f8d2:	f8d9 0000 	ldr.w	r0, [r9]
9001f8d6:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f8da:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001f8de:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001f8e2:	eb08 0401 	add.w	r4, r8, r1
9001f8e6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001f8ea:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001fab0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001f8ee:	440a      	add	r2, r1
9001f8f0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001f8f4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001f8f8:	4413      	add	r3, r2
9001f8fa:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001f8fe:	6803      	ldr	r3, [r0, #0]
9001f900:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f902:	4798      	blx	r3
9001f904:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001f908:	f8d9 0000 	ldr.w	r0, [r9]
9001f90c:	d01f      	beq.n	9001f94e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001f90e:	2200      	movs	r2, #0
9001f910:	6801      	ldr	r1, [r0, #0]
9001f912:	b2b6      	uxth	r6, r6
9001f914:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001f918:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001f91c:	220b      	movs	r2, #11
9001f91e:	9207      	str	r2, [sp, #28]
9001f920:	f8b8 2000 	ldrh.w	r2, [r8]
9001f924:	9601      	str	r6, [sp, #4]
9001f926:	9206      	str	r2, [sp, #24]
9001f928:	2201      	movs	r2, #1
9001f92a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001f92e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001f932:	9203      	str	r2, [sp, #12]
9001f934:	fa1f f28a 	uxth.w	r2, sl
9001f938:	9202      	str	r2, [sp, #8]
9001f93a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001f93e:	9200      	str	r2, [sp, #0]
9001f940:	463a      	mov	r2, r7
9001f942:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
9001f944:	4621      	mov	r1, r4
9001f946:	47a8      	blx	r5
9001f948:	b011      	add	sp, #68	@ 0x44
9001f94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f94e:	6803      	ldr	r3, [r0, #0]
9001f950:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001f954:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f956:	4798      	blx	r3
9001f958:	f8b8 2000 	ldrh.w	r2, [r8]
9001f95c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001f960:	2dff      	cmp	r5, #255	@ 0xff
9001f962:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001f966:	fb0a fa02 	mul.w	sl, sl, r2
9001f96a:	fb02 1303 	mla	r3, r2, r3, r1
9001f96e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f972:	d062      	beq.n	9001fa3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001f974:	ea6f 0c05 	mvn.w	ip, r5
9001f978:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001f97c:	b2ad      	uxth	r5, r5
9001f97e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001f982:	fa5f fc8c 	uxtb.w	ip, ip
9001f986:	930a      	str	r3, [sp, #40]	@ 0x28
9001f988:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f98a:	4298      	cmp	r0, r3
9001f98c:	f080 8085 	bcs.w	9001fa9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001f990:	eb00 0b09 	add.w	fp, r0, r9
9001f994:	4558      	cmp	r0, fp
9001f996:	d246      	bcs.n	9001fa26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001f998:	f814 eb01 	ldrb.w	lr, [r4], #1
9001f99c:	2303      	movs	r3, #3
9001f99e:	2204      	movs	r2, #4
9001f9a0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001f9a4:	8803      	ldrh	r3, [r0, #0]
9001f9a6:	eb07 0a0e 	add.w	sl, r7, lr
9001f9aa:	1219      	asrs	r1, r3, #8
9001f9ac:	10da      	asrs	r2, r3, #3
9001f9ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f9b2:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001f9b6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001f9ba:	00db      	lsls	r3, r3, #3
9001f9bc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001f9c0:	fb18 f805 	smulbb	r8, r8, r5
9001f9c4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001f9c8:	fb1e fe05 	smulbb	lr, lr, r5
9001f9cc:	b2db      	uxtb	r3, r3
9001f9ce:	fb01 810c 	mla	r1, r1, ip, r8
9001f9d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001f9d6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001f9da:	fb18 f805 	smulbb	r8, r8, r5
9001f9de:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001f9e2:	b289      	uxth	r1, r1
9001f9e4:	fb02 820c 	mla	r2, r2, ip, r8
9001f9e8:	fb03 e30c 	mla	r3, r3, ip, lr
9001f9ec:	f101 0801 	add.w	r8, r1, #1
9001f9f0:	b292      	uxth	r2, r2
9001f9f2:	b29b      	uxth	r3, r3
9001f9f4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001f9f8:	f102 0801 	add.w	r8, r2, #1
9001f9fc:	f103 0e01 	add.w	lr, r3, #1
9001fa00:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001fa04:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001fa08:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001fa0c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001fa10:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001fa14:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001fa18:	ea4e 0101 	orr.w	r1, lr, r1
9001fa1c:	ea41 0108 	orr.w	r1, r1, r8
9001fa20:	f820 1b02 	strh.w	r1, [r0], #2
9001fa24:	e7b6      	b.n	9001f994 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001fa26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fa28:	881b      	ldrh	r3, [r3, #0]
9001fa2a:	1b9b      	subs	r3, r3, r6
9001fa2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fa30:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fa34:	1b9b      	subs	r3, r3, r6
9001fa36:	441c      	add	r4, r3
9001fa38:	e7a6      	b.n	9001f988 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001fa3a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001fa3e:	2203      	movs	r2, #3
9001fa40:	2504      	movs	r5, #4
9001fa42:	4919      	ldr	r1, [pc, #100]	@ (9001faa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001fa44:	4550      	cmp	r0, sl
9001fa46:	d228      	bcs.n	9001fa9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001fa48:	eb00 0c09 	add.w	ip, r0, r9
9001fa4c:	4560      	cmp	r0, ip
9001fa4e:	4623      	mov	r3, r4
9001fa50:	d219      	bcs.n	9001fa86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001fa52:	f893 e000 	ldrb.w	lr, [r3]
9001fa56:	3401      	adds	r4, #1
9001fa58:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001fa5c:	eb07 0b0e 	add.w	fp, r7, lr
9001fa60:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001fa64:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001fa68:	f89b b001 	ldrb.w	fp, [fp, #1]
9001fa6c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001fa70:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001fa74:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001fa78:	ea43 030b 	orr.w	r3, r3, fp
9001fa7c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001fa80:	f820 3b02 	strh.w	r3, [r0], #2
9001fa84:	e7e2      	b.n	9001fa4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001fa86:	f8b8 3000 	ldrh.w	r3, [r8]
9001fa8a:	1b9b      	subs	r3, r3, r6
9001fa8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fa90:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fa94:	1b9b      	subs	r3, r3, r6
9001fa96:	441c      	add	r4, r3
9001fa98:	e7d4      	b.n	9001fa44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001fa9a:	4b04      	ldr	r3, [pc, #16]	@ (9001faac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001fa9c:	6818      	ldr	r0, [r3, #0]
9001fa9e:	6803      	ldr	r3, [r0, #0]
9001faa0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001faa2:	4798      	blx	r3
9001faa4:	e750      	b.n	9001f948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001faa6:	bf00      	nop
9001faa8:	fffff800 	.word	0xfffff800
9001faac:	2402198c 	.word	0x2402198c
9001fab0:	24021986 	.word	0x24021986

9001fab4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001fab4:	b4f0      	push	{r4, r5, r6, r7}
9001fab6:	460c      	mov	r4, r1
9001fab8:	4611      	mov	r1, r2
9001faba:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001fabe:	461a      	mov	r2, r3
9001fac0:	780f      	ldrb	r7, [r1, #0]
9001fac2:	9b04      	ldr	r3, [sp, #16]
9001fac4:	2f01      	cmp	r7, #1
9001fac6:	784e      	ldrb	r6, [r1, #1]
9001fac8:	d038      	beq.n	9001fb3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001faca:	d31f      	bcc.n	9001fb0c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001facc:	2f02      	cmp	r7, #2
9001face:	d14d      	bne.n	9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fad0:	2e03      	cmp	r6, #3
9001fad2:	d84b      	bhi.n	9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fad4:	e8df f006 	tbb	[pc, r6]
9001fad8:	17140702 	.word	0x17140702
9001fadc:	9504      	str	r5, [sp, #16]
9001fade:	4620      	mov	r0, r4
9001fae0:	bcf0      	pop	{r4, r5, r6, r7}
9001fae2:	f7ff be09 	b.w	9001f6f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001fae6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fae8:	2800      	cmp	r0, #0
9001faea:	d03f      	beq.n	9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001faec:	6806      	ldr	r6, [r0, #0]
9001faee:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001faf2:	68b5      	ldr	r5, [r6, #8]
9001faf4:	4613      	mov	r3, r2
9001faf6:	46ac      	mov	ip, r5
9001faf8:	460a      	mov	r2, r1
9001fafa:	4621      	mov	r1, r4
9001fafc:	bcf0      	pop	{r4, r5, r6, r7}
9001fafe:	4760      	bx	ip
9001fb00:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fb04:	e7f0      	b.n	9001fae8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001fb06:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fb0a:	e7ed      	b.n	9001fae8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001fb0c:	2e03      	cmp	r6, #3
9001fb0e:	d82d      	bhi.n	9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fb10:	e8df f006 	tbb	[pc, r6]
9001fb14:	110e0702 	.word	0x110e0702
9001fb18:	9504      	str	r5, [sp, #16]
9001fb1a:	4620      	mov	r0, r4
9001fb1c:	bcf0      	pop	{r4, r5, r6, r7}
9001fb1e:	f7ff bd05 	b.w	9001f52c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001fb22:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fb24:	b310      	cbz	r0, 9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fb26:	6806      	ldr	r6, [r0, #0]
9001fb28:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001fb2c:	68f5      	ldr	r5, [r6, #12]
9001fb2e:	e7e1      	b.n	9001faf4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001fb30:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fb34:	e7f6      	b.n	9001fb24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001fb36:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fb3a:	e7f3      	b.n	9001fb24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001fb3c:	2e03      	cmp	r6, #3
9001fb3e:	d815      	bhi.n	9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fb40:	e8df f006 	tbb	[pc, r6]
9001fb44:	110e0702 	.word	0x110e0702
9001fb48:	9504      	str	r5, [sp, #16]
9001fb4a:	4620      	mov	r0, r4
9001fb4c:	bcf0      	pop	{r4, r5, r6, r7}
9001fb4e:	f7ff be9f 	b.w	9001f890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001fb52:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fb54:	b150      	cbz	r0, 9001fb6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fb56:	6806      	ldr	r6, [r0, #0]
9001fb58:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001fb5c:	6935      	ldr	r5, [r6, #16]
9001fb5e:	e7c9      	b.n	9001faf4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001fb60:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fb64:	e7f6      	b.n	9001fb54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001fb66:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fb6a:	e7f3      	b.n	9001fb54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001fb6c:	bcf0      	pop	{r4, r5, r6, r7}
9001fb6e:	4770      	bx	lr

9001fb70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001fb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fb74:	b087      	sub	sp, #28
9001fb76:	4604      	mov	r4, r0
9001fb78:	460e      	mov	r6, r1
9001fb7a:	6810      	ldr	r0, [r2, #0]
9001fb7c:	6851      	ldr	r1, [r2, #4]
9001fb7e:	ad02      	add	r5, sp, #8
9001fb80:	4617      	mov	r7, r2
9001fb82:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001fb86:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001fdb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001fb8a:	c503      	stmia	r5!, {r0, r1}
9001fb8c:	6818      	ldr	r0, [r3, #0]
9001fb8e:	ad04      	add	r5, sp, #16
9001fb90:	6859      	ldr	r1, [r3, #4]
9001fb92:	c503      	stmia	r5!, {r0, r1}
9001fb94:	a802      	add	r0, sp, #8
9001fb96:	f7f6 f9d7 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb9a:	4639      	mov	r1, r7
9001fb9c:	a804      	add	r0, sp, #16
9001fb9e:	f7f6 f9fb 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fba2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001fba6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fbaa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001fbae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001fbb2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fbb6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001fbba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001fbbe:	440e      	add	r6, r1
9001fbc0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001fbc4:	440a      	add	r2, r1
9001fbc6:	f8ad 2010 	strh.w	r2, [sp, #16]
9001fbca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001fbce:	4413      	add	r3, r2
9001fbd0:	f8ad 3012 	strh.w	r3, [sp, #18]
9001fbd4:	4b77      	ldr	r3, [pc, #476]	@ (9001fdb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001fbd6:	6818      	ldr	r0, [r3, #0]
9001fbd8:	6803      	ldr	r3, [r0, #0]
9001fbda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fbdc:	4798      	blx	r3
9001fbde:	f8b9 b000 	ldrh.w	fp, [r9]
9001fbe2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fbe6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001fbea:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001fbee:	fb05 f50b 	mul.w	r5, r5, fp
9001fbf2:	fb0b 2303 	mla	r3, fp, r3, r2
9001fbf6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fbfa:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fbfe:	9300      	str	r3, [sp, #0]
9001fc00:	d069      	beq.n	9001fcd6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001fc02:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001fc06:	4558      	cmp	r0, fp
9001fc08:	f080 80cc 	bcs.w	9001fda4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001fc0c:	9b00      	ldr	r3, [sp, #0]
9001fc0e:	4631      	mov	r1, r6
9001fc10:	18c3      	adds	r3, r0, r3
9001fc12:	9301      	str	r3, [sp, #4]
9001fc14:	9b01      	ldr	r3, [sp, #4]
9001fc16:	4298      	cmp	r0, r3
9001fc18:	d24f      	bcs.n	9001fcba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001fc1a:	f811 2b01 	ldrb.w	r2, [r1], #1
9001fc1e:	2a00      	cmp	r2, #0
9001fc20:	d048      	beq.n	9001fcb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001fc22:	fb0a f202 	mul.w	r2, sl, r2
9001fc26:	1c53      	adds	r3, r2, #1
9001fc28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fc2c:	121b      	asrs	r3, r3, #8
9001fc2e:	d041      	beq.n	9001fcb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001fc30:	8802      	ldrh	r2, [r0, #0]
9001fc32:	b29e      	uxth	r6, r3
9001fc34:	f8b4 c000 	ldrh.w	ip, [r4]
9001fc38:	43db      	mvns	r3, r3
9001fc3a:	1215      	asrs	r5, r2, #8
9001fc3c:	b2db      	uxtb	r3, r3
9001fc3e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001fc42:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001fc46:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001fc4a:	fb15 f503 	smulbb	r5, r5, r3
9001fc4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fc52:	00d2      	lsls	r2, r2, #3
9001fc54:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001fc58:	fb07 5706 	mla	r7, r7, r6, r5
9001fc5c:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001fc60:	b2d2      	uxtb	r2, r2
9001fc62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001fc66:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fc6a:	fb1e fe03 	smulbb	lr, lr, r3
9001fc6e:	b2bf      	uxth	r7, r7
9001fc70:	fb12 f203 	smulbb	r2, r2, r3
9001fc74:	fa5f fc8c 	uxtb.w	ip, ip
9001fc78:	fb05 e506 	mla	r5, r5, r6, lr
9001fc7c:	f107 0e01 	add.w	lr, r7, #1
9001fc80:	fb0c 2c06 	mla	ip, ip, r6, r2
9001fc84:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001fc88:	fa1f fc8c 	uxth.w	ip, ip
9001fc8c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001fc90:	b2ad      	uxth	r5, r5
9001fc92:	f10c 0701 	add.w	r7, ip, #1
9001fc96:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001fc9a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fc9e:	ea47 070e 	orr.w	r7, r7, lr
9001fca2:	f105 0e01 	add.w	lr, r5, #1
9001fca6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001fcaa:	096d      	lsrs	r5, r5, #5
9001fcac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fcb0:	432f      	orrs	r7, r5
9001fcb2:	8007      	strh	r7, [r0, #0]
9001fcb4:	3002      	adds	r0, #2
9001fcb6:	3402      	adds	r4, #2
9001fcb8:	e7ac      	b.n	9001fc14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001fcba:	f8b9 3000 	ldrh.w	r3, [r9]
9001fcbe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001fcc2:	eba3 0308 	sub.w	r3, r3, r8
9001fcc6:	eba6 0608 	sub.w	r6, r6, r8
9001fcca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fcce:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001fcd2:	440e      	add	r6, r1
9001fcd4:	e797      	b.n	9001fc06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001fcd6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001fcda:	42a8      	cmp	r0, r5
9001fcdc:	d262      	bcs.n	9001fda4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001fcde:	9b00      	ldr	r3, [sp, #0]
9001fce0:	4631      	mov	r1, r6
9001fce2:	eb00 0b03 	add.w	fp, r0, r3
9001fce6:	4558      	cmp	r0, fp
9001fce8:	d24e      	bcs.n	9001fd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001fcea:	f811 3b01 	ldrb.w	r3, [r1], #1
9001fcee:	b12b      	cbz	r3, 9001fcfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001fcf0:	2bff      	cmp	r3, #255	@ 0xff
9001fcf2:	f8b4 e000 	ldrh.w	lr, [r4]
9001fcf6:	d104      	bne.n	9001fd02 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001fcf8:	f8a0 e000 	strh.w	lr, [r0]
9001fcfc:	3002      	adds	r0, #2
9001fcfe:	3402      	adds	r4, #2
9001fd00:	e7f1      	b.n	9001fce6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001fd02:	8802      	ldrh	r2, [r0, #0]
9001fd04:	b29f      	uxth	r7, r3
9001fd06:	43db      	mvns	r3, r3
9001fd08:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001fd0c:	1216      	asrs	r6, r2, #8
9001fd0e:	b2db      	uxtb	r3, r3
9001fd10:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fd14:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fd18:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001fd1c:	00d2      	lsls	r2, r2, #3
9001fd1e:	fb16 f603 	smulbb	r6, r6, r3
9001fd22:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001fd26:	b2d2      	uxtb	r2, r2
9001fd28:	fb0c 6c07 	mla	ip, ip, r7, r6
9001fd2c:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001fd30:	fb1a fa03 	smulbb	sl, sl, r3
9001fd34:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001fd38:	fa1f fc8c 	uxth.w	ip, ip
9001fd3c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001fd40:	fb12 f303 	smulbb	r3, r2, r3
9001fd44:	fa5f fe8e 	uxtb.w	lr, lr
9001fd48:	fb06 a607 	mla	r6, r6, r7, sl
9001fd4c:	f10c 0201 	add.w	r2, ip, #1
9001fd50:	fb0e 3307 	mla	r3, lr, r7, r3
9001fd54:	b2b6      	uxth	r6, r6
9001fd56:	b29b      	uxth	r3, r3
9001fd58:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001fd5c:	f106 0a01 	add.w	sl, r6, #1
9001fd60:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001fd64:	f103 0c01 	add.w	ip, r3, #1
9001fd68:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001fd6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001fd70:	0976      	lsrs	r6, r6, #5
9001fd72:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001fd76:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001fd7a:	ea4c 0c02 	orr.w	ip, ip, r2
9001fd7e:	ea4c 0c06 	orr.w	ip, ip, r6
9001fd82:	f8a0 c000 	strh.w	ip, [r0]
9001fd86:	e7b9      	b.n	9001fcfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001fd88:	f8b9 3000 	ldrh.w	r3, [r9]
9001fd8c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001fd90:	eba3 0308 	sub.w	r3, r3, r8
9001fd94:	eba6 0608 	sub.w	r6, r6, r8
9001fd98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fd9c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001fda0:	440e      	add	r6, r1
9001fda2:	e79a      	b.n	9001fcda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001fda4:	4b03      	ldr	r3, [pc, #12]	@ (9001fdb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001fda6:	6818      	ldr	r0, [r3, #0]
9001fda8:	6803      	ldr	r3, [r0, #0]
9001fdaa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fdac:	4798      	blx	r3
9001fdae:	b007      	add	sp, #28
9001fdb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fdb4:	2402198c 	.word	0x2402198c
9001fdb8:	24021986 	.word	0x24021986

9001fdbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001fdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fdc0:	b089      	sub	sp, #36	@ 0x24
9001fdc2:	4607      	mov	r7, r0
9001fdc4:	4688      	mov	r8, r1
9001fdc6:	4692      	mov	sl, r2
9001fdc8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001fdcc:	4699      	mov	r9, r3
9001fdce:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fdd0:	2e00      	cmp	r6, #0
9001fdd2:	d048      	beq.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fdd4:	4608      	mov	r0, r1
9001fdd6:	f7fa f813 	bl	90019e00 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001fdda:	4605      	mov	r5, r0
9001fddc:	4640      	mov	r0, r8
9001fdde:	f7fa f843 	bl	90019e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001fde2:	f8ad 000e 	strh.w	r0, [sp, #14]
9001fde6:	4640      	mov	r0, r8
9001fde8:	f8ad a008 	strh.w	sl, [sp, #8]
9001fdec:	f8ad 500c 	strh.w	r5, [sp, #12]
9001fdf0:	f8ad 900a 	strh.w	r9, [sp, #10]
9001fdf4:	f7fa f8f6 	bl	90019fe4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001fdf8:	4605      	mov	r5, r0
9001fdfa:	4640      	mov	r0, r8
9001fdfc:	f7fa f922 	bl	9001a044 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001fe00:	4682      	mov	sl, r0
9001fe02:	4640      	mov	r0, r8
9001fe04:	f7fa f972 	bl	9001a0ec <_ZNK8touchgfx6Bitmap9getFormatEv>
9001fe08:	2810      	cmp	r0, #16
9001fe0a:	d82c      	bhi.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fe0c:	e8df f010 	tbh	[pc, r0, lsl #1]
9001fe10:	00ba00ca 	.word	0x00ba00ca
9001fe14:	002b0011 	.word	0x002b0011
9001fe18:	002b002b 	.word	0x002b002b
9001fe1c:	002b002b 	.word	0x002b002b
9001fe20:	002b002b 	.word	0x002b002b
9001fe24:	00c1002b 	.word	0x00c1002b
9001fe28:	002b002b 	.word	0x002b002b
9001fe2c:	002b0180 	.word	0x002b0180
9001fe30:	0173      	.short	0x0173
9001fe32:	4bbc      	ldr	r3, [pc, #752]	@ (90020124 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9001fe34:	6818      	ldr	r0, [r3, #0]
9001fe36:	6803      	ldr	r3, [r0, #0]
9001fe38:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fe3a:	4798      	blx	r3
9001fe3c:	2eff      	cmp	r6, #255	@ 0xff
9001fe3e:	d101      	bne.n	9001fe44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001fe40:	0683      	lsls	r3, r0, #26
9001fe42:	d506      	bpl.n	9001fe52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9001fe44:	4633      	mov	r3, r6
9001fe46:	4622      	mov	r2, r4
9001fe48:	a902      	add	r1, sp, #8
9001fe4a:	4628      	mov	r0, r5
9001fe4c:	f7ff f8fc 	bl	9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fe50:	e009      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fe52:	4640      	mov	r0, r8
9001fe54:	f7fa f88e 	bl	90019f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001fe58:	b940      	cbnz	r0, 9001fe6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9001fe5a:	4623      	mov	r3, r4
9001fe5c:	aa02      	add	r2, sp, #8
9001fe5e:	4629      	mov	r1, r5
9001fe60:	4638      	mov	r0, r7
9001fe62:	f7ff f9d7 	bl	9001f214 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001fe66:	b009      	add	sp, #36	@ 0x24
9001fe68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe6c:	f10d 0918 	add.w	r9, sp, #24
9001fe70:	4641      	mov	r1, r8
9001fe72:	f10d 0810 	add.w	r8, sp, #16
9001fe76:	4648      	mov	r0, r9
9001fe78:	f7fa f82a 	bl	90019ed0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001fe7c:	e899 0003 	ldmia.w	r9, {r0, r1}
9001fe80:	e888 0003 	stmia.w	r8, {r0, r1}
9001fe84:	4640      	mov	r0, r8
9001fe86:	4621      	mov	r1, r4
9001fe88:	f7f0 f9f6 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001fe8c:	4640      	mov	r0, r8
9001fe8e:	f7f0 fa36 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001fe92:	2800      	cmp	r0, #0
9001fe94:	d1d6      	bne.n	9001fe44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001fe96:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fe9a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001fe9e:	4293      	cmp	r3, r2
9001fea0:	dd12      	ble.n	9001fec8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9001fea2:	1a9b      	subs	r3, r3, r2
9001fea4:	f9b4 0000 	ldrsh.w	r0, [r4]
9001fea8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001feac:	f8ad 0018 	strh.w	r0, [sp, #24]
9001feb0:	4628      	mov	r0, r5
9001feb2:	f8ad 201a 	strh.w	r2, [sp, #26]
9001feb6:	464a      	mov	r2, r9
9001feb8:	f8ad 101c 	strh.w	r1, [sp, #28]
9001febc:	a902      	add	r1, sp, #8
9001febe:	f8ad 301e 	strh.w	r3, [sp, #30]
9001fec2:	4633      	mov	r3, r6
9001fec4:	f7ff f8c0 	bl	9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fec8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001fecc:	f9b4 2000 	ldrsh.w	r2, [r4]
9001fed0:	4293      	cmp	r3, r2
9001fed2:	dd12      	ble.n	9001fefa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
9001fed4:	1a9b      	subs	r3, r3, r2
9001fed6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001feda:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001fede:	f8ad 2018 	strh.w	r2, [sp, #24]
9001fee2:	464a      	mov	r2, r9
9001fee4:	f8ad 001a 	strh.w	r0, [sp, #26]
9001fee8:	4628      	mov	r0, r5
9001feea:	f8ad 301c 	strh.w	r3, [sp, #28]
9001feee:	23ff      	movs	r3, #255	@ 0xff
9001fef0:	f8ad 101e 	strh.w	r1, [sp, #30]
9001fef4:	a902      	add	r1, sp, #8
9001fef6:	f7ff f8a7 	bl	9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fefa:	4643      	mov	r3, r8
9001fefc:	aa02      	add	r2, sp, #8
9001fefe:	4629      	mov	r1, r5
9001ff00:	4638      	mov	r0, r7
9001ff02:	f7ff f987 	bl	9001f214 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001ff06:	88a2      	ldrh	r2, [r4, #4]
9001ff08:	8823      	ldrh	r3, [r4, #0]
9001ff0a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ff0e:	4413      	add	r3, r2
9001ff10:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ff14:	440a      	add	r2, r1
9001ff16:	b29b      	uxth	r3, r3
9001ff18:	b292      	uxth	r2, r2
9001ff1a:	b218      	sxth	r0, r3
9001ff1c:	b211      	sxth	r1, r2
9001ff1e:	4288      	cmp	r0, r1
9001ff20:	dd12      	ble.n	9001ff48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9001ff22:	1a9b      	subs	r3, r3, r2
9001ff24:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ff28:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001ff2c:	464a      	mov	r2, r9
9001ff2e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ff32:	a902      	add	r1, sp, #8
9001ff34:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ff38:	23ff      	movs	r3, #255	@ 0xff
9001ff3a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ff3e:	4628      	mov	r0, r5
9001ff40:	f8ad 601a 	strh.w	r6, [sp, #26]
9001ff44:	f7ff f880 	bl	9001f048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ff48:	88e2      	ldrh	r2, [r4, #6]
9001ff4a:	8863      	ldrh	r3, [r4, #2]
9001ff4c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ff50:	4413      	add	r3, r2
9001ff52:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001ff56:	440a      	add	r2, r1
9001ff58:	b29b      	uxth	r3, r3
9001ff5a:	b292      	uxth	r2, r2
9001ff5c:	b218      	sxth	r0, r3
9001ff5e:	b211      	sxth	r1, r2
9001ff60:	4288      	cmp	r0, r1
9001ff62:	dd80      	ble.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ff64:	1a9b      	subs	r3, r3, r2
9001ff66:	f9b4 6000 	ldrsh.w	r6, [r4]
9001ff6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001ff6e:	464a      	mov	r2, r9
9001ff70:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ff74:	23ff      	movs	r3, #255	@ 0xff
9001ff76:	f8ad 6018 	strh.w	r6, [sp, #24]
9001ff7a:	f8ad 101a 	strh.w	r1, [sp, #26]
9001ff7e:	f8ad 001c 	strh.w	r0, [sp, #28]
9001ff82:	e761      	b.n	9001fe48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9001ff84:	4633      	mov	r3, r6
9001ff86:	4622      	mov	r2, r4
9001ff88:	a902      	add	r1, sp, #8
9001ff8a:	4628      	mov	r0, r5
9001ff8c:	f7ff f9b2 	bl	9001f2f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001ff90:	e769      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ff92:	e9cd 4600 	strd	r4, r6, [sp]
9001ff96:	ab02      	add	r3, sp, #8
9001ff98:	4652      	mov	r2, sl
9001ff9a:	4629      	mov	r1, r5
9001ff9c:	4638      	mov	r0, r7
9001ff9e:	f7ff fd89 	bl	9001fab4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001ffa2:	e760      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ffa4:	4640      	mov	r0, r8
9001ffa6:	f7f9 ffe5 	bl	90019f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001ffaa:	b948      	cbnz	r0, 9001ffc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9001ffac:	683b      	ldr	r3, [r7, #0]
9001ffae:	aa02      	add	r2, sp, #8
9001ffb0:	4629      	mov	r1, r5
9001ffb2:	e9cd 6000 	strd	r6, r0, [sp]
9001ffb6:	4638      	mov	r0, r7
9001ffb8:	68de      	ldr	r6, [r3, #12]
9001ffba:	4623      	mov	r3, r4
9001ffbc:	47b0      	blx	r6
9001ffbe:	e752      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ffc0:	f10d 0918 	add.w	r9, sp, #24
9001ffc4:	4641      	mov	r1, r8
9001ffc6:	f10d 0810 	add.w	r8, sp, #16
9001ffca:	4648      	mov	r0, r9
9001ffcc:	f7f9 ff80 	bl	90019ed0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001ffd0:	e899 0003 	ldmia.w	r9, {r0, r1}
9001ffd4:	e888 0003 	stmia.w	r8, {r0, r1}
9001ffd8:	4640      	mov	r0, r8
9001ffda:	4621      	mov	r1, r4
9001ffdc:	f7f0 f94c 	bl	90010278 <_ZN8touchgfx4RectaNERKS0_>
9001ffe0:	4640      	mov	r0, r8
9001ffe2:	f7f0 f98c 	bl	900102fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001ffe6:	b138      	cbz	r0, 9001fff8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
9001ffe8:	4623      	mov	r3, r4
9001ffea:	9600      	str	r6, [sp, #0]
9001ffec:	aa02      	add	r2, sp, #8
9001ffee:	4651      	mov	r1, sl
9001fff0:	4628      	mov	r0, r5
9001fff2:	f7ff fdbd 	bl	9001fb70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001fff6:	e736      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fff8:	683b      	ldr	r3, [r7, #0]
9001fffa:	aa02      	add	r2, sp, #8
9001fffc:	4629      	mov	r1, r5
9001fffe:	e9cd 6000 	strd	r6, r0, [sp]
90020002:	4638      	mov	r0, r7
90020004:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90020008:	4643      	mov	r3, r8
9002000a:	47d8      	blx	fp
9002000c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020010:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020014:	4293      	cmp	r3, r2
90020016:	dd13      	ble.n	90020040 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90020018:	f9b4 0000 	ldrsh.w	r0, [r4]
9002001c:	1a9b      	subs	r3, r3, r2
9002001e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020022:	f8ad 0018 	strh.w	r0, [sp, #24]
90020026:	4628      	mov	r0, r5
90020028:	f8ad 201a 	strh.w	r2, [sp, #26]
9002002c:	aa02      	add	r2, sp, #8
9002002e:	f8ad 101c 	strh.w	r1, [sp, #28]
90020032:	4651      	mov	r1, sl
90020034:	f8ad 301e 	strh.w	r3, [sp, #30]
90020038:	464b      	mov	r3, r9
9002003a:	9600      	str	r6, [sp, #0]
9002003c:	f7ff fd98 	bl	9001fb70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020040:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020044:	f9b4 2000 	ldrsh.w	r2, [r4]
90020048:	4293      	cmp	r3, r2
9002004a:	dd13      	ble.n	90020074 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9002004c:	1a9b      	subs	r3, r3, r2
9002004e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020052:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020056:	f8ad 2018 	strh.w	r2, [sp, #24]
9002005a:	aa02      	add	r2, sp, #8
9002005c:	f8ad 001a 	strh.w	r0, [sp, #26]
90020060:	4628      	mov	r0, r5
90020062:	f8ad 301c 	strh.w	r3, [sp, #28]
90020066:	464b      	mov	r3, r9
90020068:	f8ad 101e 	strh.w	r1, [sp, #30]
9002006c:	4651      	mov	r1, sl
9002006e:	9600      	str	r6, [sp, #0]
90020070:	f7ff fd7e 	bl	9001fb70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020074:	88a2      	ldrh	r2, [r4, #4]
90020076:	8823      	ldrh	r3, [r4, #0]
90020078:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002007c:	4413      	add	r3, r2
9002007e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020082:	440a      	add	r2, r1
90020084:	b29b      	uxth	r3, r3
90020086:	b292      	uxth	r2, r2
90020088:	b218      	sxth	r0, r3
9002008a:	b211      	sxth	r1, r2
9002008c:	4288      	cmp	r0, r1
9002008e:	dd13      	ble.n	900200b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90020090:	1a9b      	subs	r3, r3, r2
90020092:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020096:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9002009a:	aa02      	add	r2, sp, #8
9002009c:	f8ad 1018 	strh.w	r1, [sp, #24]
900200a0:	4651      	mov	r1, sl
900200a2:	f8ad 301c 	strh.w	r3, [sp, #28]
900200a6:	464b      	mov	r3, r9
900200a8:	f8ad 001e 	strh.w	r0, [sp, #30]
900200ac:	4628      	mov	r0, r5
900200ae:	9600      	str	r6, [sp, #0]
900200b0:	f8ad 701a 	strh.w	r7, [sp, #26]
900200b4:	f7ff fd5c 	bl	9001fb70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900200b8:	88e2      	ldrh	r2, [r4, #6]
900200ba:	8863      	ldrh	r3, [r4, #2]
900200bc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900200c0:	4413      	add	r3, r2
900200c2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900200c6:	440a      	add	r2, r1
900200c8:	b29b      	uxth	r3, r3
900200ca:	b292      	uxth	r2, r2
900200cc:	b218      	sxth	r0, r3
900200ce:	b211      	sxth	r1, r2
900200d0:	4288      	cmp	r0, r1
900200d2:	f77f aec8 	ble.w	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900200d6:	f9b4 7000 	ldrsh.w	r7, [r4]
900200da:	1a9b      	subs	r3, r3, r2
900200dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900200e0:	f8ad 301e 	strh.w	r3, [sp, #30]
900200e4:	464b      	mov	r3, r9
900200e6:	f8ad 7018 	strh.w	r7, [sp, #24]
900200ea:	f8ad 101a 	strh.w	r1, [sp, #26]
900200ee:	f8ad 001c 	strh.w	r0, [sp, #28]
900200f2:	9600      	str	r6, [sp, #0]
900200f4:	e77a      	b.n	9001ffec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
900200f6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900200fa:	2800      	cmp	r0, #0
900200fc:	f43f aeb3 	beq.w	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020100:	6803      	ldr	r3, [r0, #0]
90020102:	9600      	str	r6, [sp, #0]
90020104:	68de      	ldr	r6, [r3, #12]
90020106:	4623      	mov	r3, r4
90020108:	aa02      	add	r2, sp, #8
9002010a:	4629      	mov	r1, r5
9002010c:	47b0      	blx	r6
9002010e:	e6aa      	b.n	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020110:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020114:	2800      	cmp	r0, #0
90020116:	f43f aea6 	beq.w	9001fe66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002011a:	6803      	ldr	r3, [r0, #0]
9002011c:	9600      	str	r6, [sp, #0]
9002011e:	689e      	ldr	r6, [r3, #8]
90020120:	e7f1      	b.n	90020106 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90020122:	bf00      	nop
90020124:	2402198c 	.word	0x2402198c

90020128 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020128:	b180      	cbz	r0, 9002014c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9002012a:	2903      	cmp	r1, #3
9002012c:	d81c      	bhi.n	90020168 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002012e:	e8df f001 	tbb	[pc, r1]
90020132:	1d02      	.short	0x1d02
90020134:	1f08      	.short	0x1f08
90020136:	4b10      	ldr	r3, [pc, #64]	@ (90020178 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020138:	8818      	ldrh	r0, [r3, #0]
9002013a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002013e:	4240      	negs	r0, r0
90020140:	4770      	bx	lr
90020142:	4b0d      	ldr	r3, [pc, #52]	@ (90020178 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020144:	8818      	ldrh	r0, [r3, #0]
90020146:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002014a:	4770      	bx	lr
9002014c:	2903      	cmp	r1, #3
9002014e:	d80b      	bhi.n	90020168 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020150:	a301      	add	r3, pc, #4	@ (adr r3, 90020158 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020152:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020156:	bf00      	nop
90020158:	9002016d 	.word	0x9002016d
9002015c:	90020143 	.word	0x90020143
90020160:	90020171 	.word	0x90020171
90020164:	90020137 	.word	0x90020137
90020168:	2000      	movs	r0, #0
9002016a:	4770      	bx	lr
9002016c:	2001      	movs	r0, #1
9002016e:	4770      	bx	lr
90020170:	f04f 30ff 	mov.w	r0, #4294967295
90020174:	4770      	bx	lr
90020176:	bf00      	nop
90020178:	24021986 	.word	0x24021986

9002017c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9002017c:	b180      	cbz	r0, 900201a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9002017e:	2903      	cmp	r1, #3
90020180:	d81c      	bhi.n	900201bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020182:	e8df f001 	tbb	[pc, r1]
90020186:	021d      	.short	0x021d
90020188:	071f      	.short	0x071f
9002018a:	4b10      	ldr	r3, [pc, #64]	@ (900201cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9002018c:	8818      	ldrh	r0, [r3, #0]
9002018e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020192:	4770      	bx	lr
90020194:	4b0d      	ldr	r3, [pc, #52]	@ (900201cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020196:	8818      	ldrh	r0, [r3, #0]
90020198:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002019c:	4240      	negs	r0, r0
9002019e:	4770      	bx	lr
900201a0:	2903      	cmp	r1, #3
900201a2:	d80b      	bhi.n	900201bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900201a4:	a301      	add	r3, pc, #4	@ (adr r3, 900201ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
900201a6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900201aa:	bf00      	nop
900201ac:	9002018b 	.word	0x9002018b
900201b0:	900201c5 	.word	0x900201c5
900201b4:	90020195 	.word	0x90020195
900201b8:	900201c1 	.word	0x900201c1
900201bc:	2000      	movs	r0, #0
900201be:	4770      	bx	lr
900201c0:	2001      	movs	r0, #1
900201c2:	4770      	bx	lr
900201c4:	f04f 30ff 	mov.w	r0, #4294967295
900201c8:	4770      	bx	lr
900201ca:	bf00      	nop
900201cc:	24021986 	.word	0x24021986

900201d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900201d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900201d4:	b099      	sub	sp, #100	@ 0x64
900201d6:	910d      	str	r1, [sp, #52]	@ 0x34
900201d8:	a914      	add	r1, sp, #80	@ 0x50
900201da:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900201de:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900201e2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900201e6:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
900201e8:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
900201ec:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900201f0:	e881 000c 	stmia.w	r1, {r2, r3}
900201f4:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900201f8:	930b      	str	r3, [sp, #44]	@ 0x2c
900201fa:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900201fe:	9310      	str	r3, [sp, #64]	@ 0x40
90020200:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90020204:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90020208:	9308      	str	r3, [sp, #32]
9002020a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9002020e:	9309      	str	r3, [sp, #36]	@ 0x24
90020210:	7b4b      	ldrb	r3, [r1, #13]
90020212:	ea4f 1843 	mov.w	r8, r3, lsl #5
90020216:	f408 7080 	and.w	r0, r8, #256	@ 0x100
9002021a:	f891 8006 	ldrb.w	r8, [r1, #6]
9002021e:	ea58 0800 	orrs.w	r8, r8, r0
90020222:	f000 81d0 	beq.w	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020226:	011b      	lsls	r3, r3, #4
90020228:	79c8      	ldrb	r0, [r1, #7]
9002022a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9002022e:	4303      	orrs	r3, r0
90020230:	930c      	str	r3, [sp, #48]	@ 0x30
90020232:	f000 81c8 	beq.w	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020236:	f991 3009 	ldrsb.w	r3, [r1, #9]
9002023a:	b29b      	uxth	r3, r3
9002023c:	2d00      	cmp	r5, #0
9002023e:	f000 812d 	beq.w	9002049c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
90020242:	1aed      	subs	r5, r5, r3
90020244:	b2ad      	uxth	r5, r5
90020246:	0429      	lsls	r1, r5, #16
90020248:	d502      	bpl.n	90020250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9002024a:	1b64      	subs	r4, r4, r5
9002024c:	2500      	movs	r5, #0
9002024e:	b224      	sxth	r4, r4
90020250:	f9b2 0000 	ldrsh.w	r0, [r2]
90020254:	8891      	ldrh	r1, [r2, #4]
90020256:	4284      	cmp	r4, r0
90020258:	b283      	uxth	r3, r0
9002025a:	bfb8      	it	lt
9002025c:	18ed      	addlt	r5, r5, r3
9002025e:	440b      	add	r3, r1
90020260:	b21b      	sxth	r3, r3
90020262:	bfb8      	it	lt
90020264:	1b2c      	sublt	r4, r5, r4
90020266:	930a      	str	r3, [sp, #40]	@ 0x28
90020268:	bfb8      	it	lt
9002026a:	b2a5      	uxthlt	r5, r4
9002026c:	88d3      	ldrh	r3, [r2, #6]
9002026e:	bfb8      	it	lt
90020270:	4604      	movlt	r4, r0
90020272:	8852      	ldrh	r2, [r2, #2]
90020274:	a814      	add	r0, sp, #80	@ 0x50
90020276:	4621      	mov	r1, r4
90020278:	4413      	add	r3, r2
9002027a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002027c:	b21b      	sxth	r3, r3
9002027e:	930f      	str	r3, [sp, #60]	@ 0x3c
90020280:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020282:	930e      	str	r3, [sp, #56]	@ 0x38
90020284:	4bb2      	ldr	r3, [pc, #712]	@ (90020550 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
90020286:	f893 b000 	ldrb.w	fp, [r3]
9002028a:	4653      	mov	r3, sl
9002028c:	f7f5 fcd1 	bl	90015c32 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020290:	4621      	mov	r1, r4
90020292:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90020296:	4653      	mov	r3, sl
90020298:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002029a:	a814      	add	r0, sp, #80	@ 0x50
9002029c:	f7f5 fce6 	bl	90015c6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
900202a0:	a918      	add	r1, sp, #96	@ 0x60
900202a2:	f821 0d02 	strh.w	r0, [r1, #-2]!
900202a6:	a817      	add	r0, sp, #92	@ 0x5c
900202a8:	f7f5 fe0c 	bl	90015ec4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
900202ac:	f1ba 0f00 	cmp.w	sl, #0
900202b0:	f040 80f7 	bne.w	900204a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
900202b4:	f1bb 0f01 	cmp.w	fp, #1
900202b8:	f040 80fb 	bne.w	900204b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
900202bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900202be:	2b00      	cmp	r3, #0
900202c0:	f040 81a9 	bne.w	90020616 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
900202c4:	fa1f f288 	uxth.w	r2, r8
900202c8:	b905      	cbnz	r5, 900202cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
900202ca:	b15e      	cbz	r6, 900202e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
900202cc:	fb06 5302 	mla	r3, r6, r2, r5
900202d0:	9808      	ldr	r0, [sp, #32]
900202d2:	4631      	mov	r1, r6
900202d4:	4343      	muls	r3, r0
900202d6:	f003 0607 	and.w	r6, r3, #7
900202da:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
900202de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900202e0:	1a5b      	subs	r3, r3, r1
900202e2:	930e      	str	r3, [sp, #56]	@ 0x38
900202e4:	f10b 31ff 	add.w	r1, fp, #4294967295
900202e8:	424b      	negs	r3, r1
900202ea:	414b      	adcs	r3, r1
900202ec:	4651      	mov	r1, sl
900202ee:	4618      	mov	r0, r3
900202f0:	930c      	str	r3, [sp, #48]	@ 0x30
900202f2:	f7ff ff19 	bl	90020128 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900202f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900202f8:	4683      	mov	fp, r0
900202fa:	4618      	mov	r0, r3
900202fc:	f7ff ff3e 	bl	9002017c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020300:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020302:	4603      	mov	r3, r0
90020304:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020306:	eba1 0a00 	sub.w	sl, r1, r0
9002030a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002030c:	458a      	cmp	sl, r1
9002030e:	bfa8      	it	ge
90020310:	468a      	movge	sl, r1
90020312:	f1ba 0f00 	cmp.w	sl, #0
90020316:	f340 8156 	ble.w	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002031a:	1b64      	subs	r4, r4, r5
9002031c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002031e:	1b0c      	subs	r4, r1, r4
90020320:	4544      	cmp	r4, r8
90020322:	bfd4      	ite	le
90020324:	ebc5 0504 	rsble	r5, r5, r4
90020328:	ebc5 0508 	rsbgt	r5, r5, r8
9002032c:	2d00      	cmp	r5, #0
9002032e:	f340 814a 	ble.w	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020332:	1b52      	subs	r2, r2, r5
90020334:	9908      	ldr	r1, [sp, #32]
90020336:	434a      	muls	r2, r1
90020338:	920e      	str	r2, [sp, #56]	@ 0x38
9002033a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002033c:	2a00      	cmp	r2, #0
9002033e:	f040 8176 	bne.w	9002062e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
90020342:	4a84      	ldr	r2, [pc, #528]	@ (90020554 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90020344:	930a      	str	r3, [sp, #40]	@ 0x28
90020346:	6810      	ldr	r0, [r2, #0]
90020348:	6802      	ldr	r2, [r0, #0]
9002034a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9002034c:	4790      	blx	r2
9002034e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020350:	9908      	ldr	r1, [sp, #32]
90020352:	2201      	movs	r2, #1
90020354:	408a      	lsls	r2, r1
90020356:	4980      	ldr	r1, [pc, #512]	@ (90020558 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90020358:	3a01      	subs	r2, #1
9002035a:	880c      	ldrh	r4, [r1, #0]
9002035c:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
90020360:	b2d2      	uxtb	r2, r2
90020362:	920c      	str	r2, [sp, #48]	@ 0x30
90020364:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90020368:	fb04 1202 	mla	r2, r4, r2, r1
9002036c:	ea4f 2419 	mov.w	r4, r9, lsr #8
90020370:	ea4f 1159 	mov.w	r1, r9, lsr #5
90020374:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020378:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002037c:	920a      	str	r2, [sp, #40]	@ 0x28
9002037e:	f3c9 4207 	ubfx	r2, r9, #16, #8
90020382:	9212      	str	r2, [sp, #72]	@ 0x48
90020384:	b2e2      	uxtb	r2, r4
90020386:	9211      	str	r2, [sp, #68]	@ 0x44
90020388:	fa5f f289 	uxtb.w	r2, r9
9002038c:	f3c9 09c4 	ubfx	r9, r9, #3, #5
90020390:	9210      	str	r2, [sp, #64]	@ 0x40
90020392:	4a72      	ldr	r2, [pc, #456]	@ (9002055c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
90020394:	4022      	ands	r2, r4
90020396:	430a      	orrs	r2, r1
90020398:	ea4f 014b 	mov.w	r1, fp, lsl #1
9002039c:	fb05 3b1b 	mls	fp, r5, fp, r3
900203a0:	ea42 0209 	orr.w	r2, r2, r9
900203a4:	460b      	mov	r3, r1
900203a6:	910b      	str	r1, [sp, #44]	@ 0x2c
900203a8:	b292      	uxth	r2, r2
900203aa:	436b      	muls	r3, r5
900203ac:	920f      	str	r2, [sp, #60]	@ 0x3c
900203ae:	eb03 034b 	add.w	r3, r3, fp, lsl #1
900203b2:	783a      	ldrb	r2, [r7, #0]
900203b4:	9313      	str	r3, [sp, #76]	@ 0x4c
900203b6:	4132      	asrs	r2, r6
900203b8:	b2d2      	uxtb	r2, r2
900203ba:	f11a 3aff 	adds.w	sl, sl, #4294967295
900203be:	f0c0 814a 	bcc.w	90020656 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
900203c2:	46a9      	mov	r9, r5
900203c4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900203c8:	f119 39ff 	adds.w	r9, r9, #4294967295
900203cc:	f0c0 8133 	bcc.w	90020636 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
900203d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900203d2:	4013      	ands	r3, r2
900203d4:	d054      	beq.n	90020480 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
900203d6:	20ff      	movs	r0, #255	@ 0xff
900203d8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900203da:	fb90 f1f1 	sdiv	r1, r0, r1
900203de:	434b      	muls	r3, r1
900203e0:	2bfe      	cmp	r3, #254	@ 0xfe
900203e2:	dd03      	ble.n	900203ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
900203e4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900203e6:	4281      	cmp	r1, r0
900203e8:	f000 8123 	beq.w	90020632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
900203ec:	9909      	ldr	r1, [sp, #36]	@ 0x24
900203ee:	f8b8 4000 	ldrh.w	r4, [r8]
900203f2:	fb11 f303 	smulbb	r3, r1, r3
900203f6:	9812      	ldr	r0, [sp, #72]	@ 0x48
900203f8:	ea4f 0ce4 	mov.w	ip, r4, asr #3
900203fc:	b29b      	uxth	r3, r3
900203fe:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020402:	1c59      	adds	r1, r3, #1
90020404:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
90020408:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002040c:	1221      	asrs	r1, r4, #8
9002040e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90020412:	00e4      	lsls	r4, r4, #3
90020414:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020418:	fa1f fe83 	uxth.w	lr, r3
9002041c:	43db      	mvns	r3, r3
9002041e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020422:	fb10 fb0e 	smulbb	fp, r0, lr
90020426:	b2db      	uxtb	r3, r3
90020428:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002042a:	b2e4      	uxtb	r4, r4
9002042c:	fb01 b103 	mla	r1, r1, r3, fp
90020430:	fb10 fb0e 	smulbb	fp, r0, lr
90020434:	9810      	ldr	r0, [sp, #64]	@ 0x40
90020436:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002043a:	fb10 fe0e 	smulbb	lr, r0, lr
9002043e:	b289      	uxth	r1, r1
90020440:	fb0c bc03 	mla	ip, ip, r3, fp
90020444:	fb04 e403 	mla	r4, r4, r3, lr
90020448:	1c4b      	adds	r3, r1, #1
9002044a:	fa1f fc8c 	uxth.w	ip, ip
9002044e:	b2a4      	uxth	r4, r4
90020450:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90020454:	f104 0b01 	add.w	fp, r4, #1
90020458:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002045c:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
90020460:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90020464:	ea4b 0101 	orr.w	r1, fp, r1
90020468:	f10c 0b01 	add.w	fp, ip, #1
9002046c:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
90020470:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90020474:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020478:	ea41 010b 	orr.w	r1, r1, fp
9002047c:	f8a8 1000 	strh.w	r1, [r8]
90020480:	9b08      	ldr	r3, [sp, #32]
90020482:	441e      	add	r6, r3
90020484:	b2b6      	uxth	r6, r6
90020486:	2e07      	cmp	r6, #7
90020488:	bf98      	it	ls
9002048a:	411a      	asrls	r2, r3
9002048c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002048e:	bf85      	ittet	hi
90020490:	787a      	ldrbhi	r2, [r7, #1]
90020492:	2600      	movhi	r6, #0
90020494:	b2d2      	uxtbls	r2, r2
90020496:	3701      	addhi	r7, #1
90020498:	4498      	add	r8, r3
9002049a:	e795      	b.n	900203c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
9002049c:	441c      	add	r4, r3
9002049e:	b224      	sxth	r4, r4
900204a0:	e6d6      	b.n	90020250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
900204a2:	f1ba 0f01 	cmp.w	sl, #1
900204a6:	f47f af09 	bne.w	900202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900204aa:	f1bb 0f01 	cmp.w	fp, #1
900204ae:	f47f af05 	bne.w	900202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900204b2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900204b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900204b6:	1a99      	subs	r1, r3, r2
900204b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900204ba:	1b9b      	subs	r3, r3, r6
900204bc:	4299      	cmp	r1, r3
900204be:	bfa8      	it	ge
900204c0:	4619      	movge	r1, r3
900204c2:	2900      	cmp	r1, #0
900204c4:	9112      	str	r1, [sp, #72]	@ 0x48
900204c6:	dd7e      	ble.n	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900204c8:	4a22      	ldr	r2, [pc, #136]	@ (90020554 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
900204ca:	6810      	ldr	r0, [r2, #0]
900204cc:	9211      	str	r2, [sp, #68]	@ 0x44
900204ce:	6803      	ldr	r3, [r0, #0]
900204d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900204d2:	4798      	blx	r3
900204d4:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900204d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
900204da:	d006      	beq.n	900204ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900204dc:	9b08      	ldr	r3, [sp, #32]
900204de:	2b04      	cmp	r3, #4
900204e0:	d133      	bne.n	9002054a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
900204e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900204e4:	3300      	adds	r3, #0
900204e6:	bf18      	it	ne
900204e8:	2301      	movne	r3, #1
900204ea:	0582      	lsls	r2, r0, #22
900204ec:	fa1f fc88 	uxth.w	ip, r8
900204f0:	f140 80ba 	bpl.w	90020668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900204f4:	9808      	ldr	r0, [sp, #32]
900204f6:	2808      	cmp	r0, #8
900204f8:	f040 80b6 	bne.w	90020668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900204fc:	2b00      	cmp	r3, #0
900204fe:	d065      	beq.n	900205cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
90020500:	f10c 0c01 	add.w	ip, ip, #1
90020504:	f02c 0301 	bic.w	r3, ip, #1
90020508:	b29b      	uxth	r3, r3
9002050a:	bb4d      	cbnz	r5, 90020560 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9002050c:	eb08 0004 	add.w	r0, r8, r4
90020510:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020512:	4290      	cmp	r0, r2
90020514:	dc24      	bgt.n	90020560 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90020516:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020518:	b289      	uxth	r1, r1
9002051a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
9002051e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90020522:	6810      	ldr	r0, [r2, #0]
90020524:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020528:	6804      	ldr	r4, [r0, #0]
9002052a:	9506      	str	r5, [sp, #24]
9002052c:	f44f 7580 	mov.w	r5, #256	@ 0x100
90020530:	9302      	str	r3, [sp, #8]
90020532:	9505      	str	r5, [sp, #20]
90020534:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90020536:	e9cd 3100 	strd	r3, r1, [sp]
9002053a:	e9cd 9503 	strd	r9, r5, [sp, #12]
9002053e:	4673      	mov	r3, lr
90020540:	6da4      	ldr	r4, [r4, #88]	@ 0x58
90020542:	fb06 710c 	mla	r1, r6, ip, r7
90020546:	47a0      	blx	r4
90020548:	e03d      	b.n	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002054a:	2300      	movs	r3, #0
9002054c:	e7cd      	b.n	900204ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9002054e:	bf00      	nop
90020550:	24021984 	.word	0x24021984
90020554:	2402198c 	.word	0x2402198c
90020558:	24021986 	.word	0x24021986
9002055c:	00fff800 	.word	0x00fff800
90020560:	eba4 0e05 	sub.w	lr, r4, r5
90020564:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020566:	eba2 0e0e 	sub.w	lr, r2, lr
9002056a:	45c6      	cmp	lr, r8
9002056c:	bfd4      	ite	le
9002056e:	ebc5 0e0e 	rsble	lr, r5, lr
90020572:	ebc5 0e08 	rsbgt	lr, r5, r8
90020576:	f1be 0f00 	cmp.w	lr, #0
9002057a:	d024      	beq.n	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002057c:	07e8      	lsls	r0, r5, #31
9002057e:	f53f ae9d 	bmi.w	900202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020582:	f01e 0001 	ands.w	r0, lr, #1
90020586:	f47f ae99 	bne.w	900202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002058a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9002058c:	086d      	lsrs	r5, r5, #1
9002058e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90020592:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
90020596:	6814      	ldr	r4, [r2, #0]
90020598:	b289      	uxth	r1, r1
9002059a:	fb06 560c 	mla	r6, r6, ip, r5
9002059e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900205a2:	6825      	ldr	r5, [r4, #0]
900205a4:	9006      	str	r0, [sp, #24]
900205a6:	f44f 7080 	mov.w	r0, #256	@ 0x100
900205aa:	9302      	str	r3, [sp, #8]
900205ac:	fa1f f38e 	uxth.w	r3, lr
900205b0:	9005      	str	r0, [sp, #20]
900205b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900205b4:	9101      	str	r1, [sp, #4]
900205b6:	19b9      	adds	r1, r7, r6
900205b8:	9300      	str	r3, [sp, #0]
900205ba:	4643      	mov	r3, r8
900205bc:	e9cd 9003 	strd	r9, r0, [sp, #12]
900205c0:	4620      	mov	r0, r4
900205c2:	6dad      	ldr	r5, [r5, #88]	@ 0x58
900205c4:	47a8      	blx	r5
900205c6:	b019      	add	sp, #100	@ 0x64
900205c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900205cc:	4a28      	ldr	r2, [pc, #160]	@ (90020670 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
900205ce:	1b64      	subs	r4, r4, r5
900205d0:	fb06 5608 	mla	r6, r6, r8, r5
900205d4:	b289      	uxth	r1, r1
900205d6:	6810      	ldr	r0, [r2, #0]
900205d8:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900205dc:	f8d0 a000 	ldr.w	sl, [r0]
900205e0:	9306      	str	r3, [sp, #24]
900205e2:	f44f 7300 	mov.w	r3, #512	@ 0x200
900205e6:	9101      	str	r1, [sp, #4]
900205e8:	19b9      	adds	r1, r7, r6
900205ea:	9305      	str	r3, [sp, #20]
900205ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900205ee:	f8cd c008 	str.w	ip, [sp, #8]
900205f2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900205f6:	e9cd 9303 	strd	r9, r3, [sp, #12]
900205fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900205fc:	1b1c      	subs	r4, r3, r4
900205fe:	4673      	mov	r3, lr
90020600:	4544      	cmp	r4, r8
90020602:	bfd4      	ite	le
90020604:	ebc5 0504 	rsble	r5, r5, r4
90020608:	ebc5 0508 	rsbgt	r5, r5, r8
9002060c:	b2ad      	uxth	r5, r5
9002060e:	9500      	str	r5, [sp, #0]
90020610:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
90020614:	e797      	b.n	90020546 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020616:	2208      	movs	r2, #8
90020618:	9b08      	ldr	r3, [sp, #32]
9002061a:	fb92 f3f3 	sdiv	r3, r2, r3
9002061e:	1e5a      	subs	r2, r3, #1
90020620:	4442      	add	r2, r8
90020622:	fb92 f2f3 	sdiv	r2, r2, r3
90020626:	fb12 f203 	smulbb	r2, r2, r3
9002062a:	b292      	uxth	r2, r2
9002062c:	e64c      	b.n	900202c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9002062e:	980d      	ldr	r0, [sp, #52]	@ 0x34
90020630:	e68e      	b.n	90020350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
90020632:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020634:	e722      	b.n	9002047c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
90020636:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020638:	b143      	cbz	r3, 9002064c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
9002063a:	441e      	add	r6, r3
9002063c:	b2b6      	uxth	r6, r6
9002063e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
90020642:	f006 0607 	and.w	r6, r6, #7
90020646:	783a      	ldrb	r2, [r7, #0]
90020648:	4132      	asrs	r2, r6
9002064a:	b2d2      	uxtb	r2, r2
9002064c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002064e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90020650:	4419      	add	r1, r3
90020652:	910a      	str	r1, [sp, #40]	@ 0x28
90020654:	e6b1      	b.n	900203ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
90020656:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020658:	2b00      	cmp	r3, #0
9002065a:	d1b4      	bne.n	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002065c:	4b04      	ldr	r3, [pc, #16]	@ (90020670 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9002065e:	6818      	ldr	r0, [r3, #0]
90020660:	6803      	ldr	r3, [r0, #0]
90020662:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020664:	4798      	blx	r3
90020666:	e7ae      	b.n	900205c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020668:	2b00      	cmp	r3, #0
9002066a:	f47f af49 	bne.w	90020500 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
9002066e:	e625      	b.n	900202bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020670:	2402198c 	.word	0x2402198c

90020674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90020674:	b538      	push	{r3, r4, r5, lr}
90020676:	4c15      	ldr	r4, [pc, #84]	@ (900206cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90020678:	4605      	mov	r5, r0
9002067a:	7823      	ldrb	r3, [r4, #0]
9002067c:	f3bf 8f5b 	dmb	ish
90020680:	07da      	lsls	r2, r3, #31
90020682:	d40b      	bmi.n	9002069c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020684:	4620      	mov	r0, r4
90020686:	f008 fc6b 	bl	90028f60 <__cxa_guard_acquire>
9002068a:	b138      	cbz	r0, 9002069c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9002068c:	4620      	mov	r0, r4
9002068e:	f008 fc73 	bl	90028f78 <__cxa_guard_release>
90020692:	4a0f      	ldr	r2, [pc, #60]	@ (900206d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020694:	490f      	ldr	r1, [pc, #60]	@ (900206d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90020696:	4810      	ldr	r0, [pc, #64]	@ (900206d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020698:	f008 fc5b 	bl	90028f52 <__aeabi_atexit>
9002069c:	4c0f      	ldr	r4, [pc, #60]	@ (900206dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9002069e:	7823      	ldrb	r3, [r4, #0]
900206a0:	f3bf 8f5b 	dmb	ish
900206a4:	07db      	lsls	r3, r3, #31
900206a6:	d40b      	bmi.n	900206c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900206a8:	4620      	mov	r0, r4
900206aa:	f008 fc59 	bl	90028f60 <__cxa_guard_acquire>
900206ae:	b138      	cbz	r0, 900206c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900206b0:	4620      	mov	r0, r4
900206b2:	f008 fc61 	bl	90028f78 <__cxa_guard_release>
900206b6:	4a06      	ldr	r2, [pc, #24]	@ (900206d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900206b8:	4909      	ldr	r1, [pc, #36]	@ (900206e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900206ba:	480a      	ldr	r0, [pc, #40]	@ (900206e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900206bc:	f008 fc49 	bl	90028f52 <__aeabi_atexit>
900206c0:	4b05      	ldr	r3, [pc, #20]	@ (900206d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900206c2:	616b      	str	r3, [r5, #20]
900206c4:	4b07      	ldr	r3, [pc, #28]	@ (900206e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900206c6:	61ab      	str	r3, [r5, #24]
900206c8:	bd38      	pop	{r3, r4, r5, pc}
900206ca:	bf00      	nop
900206cc:	24021a70 	.word	0x24021a70
900206d0:	24000000 	.word	0x24000000
900206d4:	9001c761 	.word	0x9001c761
900206d8:	240000d4 	.word	0x240000d4
900206dc:	24021a74 	.word	0x24021a74
900206e0:	9001c75f 	.word	0x9001c75f
900206e4:	240000d8 	.word	0x240000d8

900206e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
900206e8:	b538      	push	{r3, r4, r5, lr}
900206ea:	4c15      	ldr	r4, [pc, #84]	@ (90020740 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
900206ec:	4605      	mov	r5, r0
900206ee:	7823      	ldrb	r3, [r4, #0]
900206f0:	f3bf 8f5b 	dmb	ish
900206f4:	07da      	lsls	r2, r3, #31
900206f6:	d40b      	bmi.n	90020710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900206f8:	4620      	mov	r0, r4
900206fa:	f008 fc31 	bl	90028f60 <__cxa_guard_acquire>
900206fe:	b138      	cbz	r0, 90020710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020700:	4620      	mov	r0, r4
90020702:	f008 fc39 	bl	90028f78 <__cxa_guard_release>
90020706:	4a0f      	ldr	r2, [pc, #60]	@ (90020744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020708:	490f      	ldr	r1, [pc, #60]	@ (90020748 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002070a:	4810      	ldr	r0, [pc, #64]	@ (9002074c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002070c:	f008 fc21 	bl	90028f52 <__aeabi_atexit>
90020710:	4c0f      	ldr	r4, [pc, #60]	@ (90020750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90020712:	7823      	ldrb	r3, [r4, #0]
90020714:	f3bf 8f5b 	dmb	ish
90020718:	07db      	lsls	r3, r3, #31
9002071a:	d40b      	bmi.n	90020734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002071c:	4620      	mov	r0, r4
9002071e:	f008 fc1f 	bl	90028f60 <__cxa_guard_acquire>
90020722:	b138      	cbz	r0, 90020734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020724:	4620      	mov	r0, r4
90020726:	f008 fc27 	bl	90028f78 <__cxa_guard_release>
9002072a:	4a06      	ldr	r2, [pc, #24]	@ (90020744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002072c:	4909      	ldr	r1, [pc, #36]	@ (90020754 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002072e:	480a      	ldr	r0, [pc, #40]	@ (90020758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020730:	f008 fc0f 	bl	90028f52 <__aeabi_atexit>
90020734:	4b05      	ldr	r3, [pc, #20]	@ (9002074c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020736:	60eb      	str	r3, [r5, #12]
90020738:	4b07      	ldr	r3, [pc, #28]	@ (90020758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002073a:	612b      	str	r3, [r5, #16]
9002073c:	bd38      	pop	{r3, r4, r5, pc}
9002073e:	bf00      	nop
90020740:	24021a48 	.word	0x24021a48
90020744:	24000000 	.word	0x24000000
90020748:	9001c765 	.word	0x9001c765
9002074c:	240000ac 	.word	0x240000ac
90020750:	24021a4c 	.word	0x24021a4c
90020754:	9001c763 	.word	0x9001c763
90020758:	240000b0 	.word	0x240000b0

9002075c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9002075c:	b510      	push	{r4, lr}
9002075e:	4604      	mov	r4, r0
90020760:	f7ff ff88 	bl	90020674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90020764:	4620      	mov	r0, r4
90020766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002076a:	f7ff bfbd 	b.w	900206e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90020770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90020770:	b538      	push	{r3, r4, r5, lr}
90020772:	4c15      	ldr	r4, [pc, #84]	@ (900207c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90020774:	4605      	mov	r5, r0
90020776:	7823      	ldrb	r3, [r4, #0]
90020778:	f3bf 8f5b 	dmb	ish
9002077c:	07da      	lsls	r2, r3, #31
9002077e:	d40b      	bmi.n	90020798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020780:	4620      	mov	r0, r4
90020782:	f008 fbed 	bl	90028f60 <__cxa_guard_acquire>
90020786:	b138      	cbz	r0, 90020798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020788:	4620      	mov	r0, r4
9002078a:	f008 fbf5 	bl	90028f78 <__cxa_guard_release>
9002078e:	4a0f      	ldr	r2, [pc, #60]	@ (900207cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90020790:	490f      	ldr	r1, [pc, #60]	@ (900207d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90020792:	4810      	ldr	r0, [pc, #64]	@ (900207d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90020794:	f008 fbdd 	bl	90028f52 <__aeabi_atexit>
90020798:	4c0f      	ldr	r4, [pc, #60]	@ (900207d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002079a:	7823      	ldrb	r3, [r4, #0]
9002079c:	f3bf 8f5b 	dmb	ish
900207a0:	07db      	lsls	r3, r3, #31
900207a2:	d40b      	bmi.n	900207bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900207a4:	4620      	mov	r0, r4
900207a6:	f008 fbdb 	bl	90028f60 <__cxa_guard_acquire>
900207aa:	b138      	cbz	r0, 900207bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900207ac:	4620      	mov	r0, r4
900207ae:	f008 fbe3 	bl	90028f78 <__cxa_guard_release>
900207b2:	4a06      	ldr	r2, [pc, #24]	@ (900207cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900207b4:	4909      	ldr	r1, [pc, #36]	@ (900207dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900207b6:	480a      	ldr	r0, [pc, #40]	@ (900207e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900207b8:	f008 fbcb 	bl	90028f52 <__aeabi_atexit>
900207bc:	4b05      	ldr	r3, [pc, #20]	@ (900207d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900207be:	626b      	str	r3, [r5, #36]	@ 0x24
900207c0:	4b07      	ldr	r3, [pc, #28]	@ (900207e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900207c2:	62ab      	str	r3, [r5, #40]	@ 0x28
900207c4:	bd38      	pop	{r3, r4, r5, pc}
900207c6:	bf00      	nop
900207c8:	24021a78 	.word	0x24021a78
900207cc:	24000000 	.word	0x24000000
900207d0:	9001c759 	.word	0x9001c759
900207d4:	240000dc 	.word	0x240000dc
900207d8:	24021a7c 	.word	0x24021a7c
900207dc:	9001c757 	.word	0x9001c757
900207e0:	240000e0 	.word	0x240000e0

900207e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900207e4:	b538      	push	{r3, r4, r5, lr}
900207e6:	4c15      	ldr	r4, [pc, #84]	@ (9002083c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900207e8:	4605      	mov	r5, r0
900207ea:	7823      	ldrb	r3, [r4, #0]
900207ec:	f3bf 8f5b 	dmb	ish
900207f0:	07da      	lsls	r2, r3, #31
900207f2:	d40b      	bmi.n	9002080c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900207f4:	4620      	mov	r0, r4
900207f6:	f008 fbb3 	bl	90028f60 <__cxa_guard_acquire>
900207fa:	b138      	cbz	r0, 9002080c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900207fc:	4620      	mov	r0, r4
900207fe:	f008 fbbb 	bl	90028f78 <__cxa_guard_release>
90020802:	4a0f      	ldr	r2, [pc, #60]	@ (90020840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020804:	490f      	ldr	r1, [pc, #60]	@ (90020844 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90020806:	4810      	ldr	r0, [pc, #64]	@ (90020848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020808:	f008 fba3 	bl	90028f52 <__aeabi_atexit>
9002080c:	4c0f      	ldr	r4, [pc, #60]	@ (9002084c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002080e:	7823      	ldrb	r3, [r4, #0]
90020810:	f3bf 8f5b 	dmb	ish
90020814:	07db      	lsls	r3, r3, #31
90020816:	d40b      	bmi.n	90020830 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020818:	4620      	mov	r0, r4
9002081a:	f008 fba1 	bl	90028f60 <__cxa_guard_acquire>
9002081e:	b138      	cbz	r0, 90020830 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020820:	4620      	mov	r0, r4
90020822:	f008 fba9 	bl	90028f78 <__cxa_guard_release>
90020826:	4a06      	ldr	r2, [pc, #24]	@ (90020840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020828:	4909      	ldr	r1, [pc, #36]	@ (90020850 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002082a:	480a      	ldr	r0, [pc, #40]	@ (90020854 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002082c:	f008 fb91 	bl	90028f52 <__aeabi_atexit>
90020830:	4b05      	ldr	r3, [pc, #20]	@ (90020848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020832:	61eb      	str	r3, [r5, #28]
90020834:	4b07      	ldr	r3, [pc, #28]	@ (90020854 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90020836:	622b      	str	r3, [r5, #32]
90020838:	bd38      	pop	{r3, r4, r5, pc}
9002083a:	bf00      	nop
9002083c:	24021a50 	.word	0x24021a50
90020840:	24000000 	.word	0x24000000
90020844:	9001c75d 	.word	0x9001c75d
90020848:	240000b4 	.word	0x240000b4
9002084c:	24021a54 	.word	0x24021a54
90020850:	9001c75b 	.word	0x9001c75b
90020854:	240000b8 	.word	0x240000b8

90020858 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90020858:	b510      	push	{r4, lr}
9002085a:	4604      	mov	r4, r0
9002085c:	f7ff ff88 	bl	90020770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90020860:	4620      	mov	r0, r4
90020862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020866:	f7ff bfbd 	b.w	900207e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9002086c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9002086c:	b538      	push	{r3, r4, r5, lr}
9002086e:	4c15      	ldr	r4, [pc, #84]	@ (900208c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90020870:	4605      	mov	r5, r0
90020872:	7823      	ldrb	r3, [r4, #0]
90020874:	f3bf 8f5b 	dmb	ish
90020878:	07da      	lsls	r2, r3, #31
9002087a:	d40b      	bmi.n	90020894 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9002087c:	4620      	mov	r0, r4
9002087e:	f008 fb6f 	bl	90028f60 <__cxa_guard_acquire>
90020882:	b138      	cbz	r0, 90020894 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90020884:	4620      	mov	r0, r4
90020886:	f008 fb77 	bl	90028f78 <__cxa_guard_release>
9002088a:	4a0f      	ldr	r2, [pc, #60]	@ (900208c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9002088c:	490f      	ldr	r1, [pc, #60]	@ (900208cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9002088e:	4810      	ldr	r0, [pc, #64]	@ (900208d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90020890:	f008 fb5f 	bl	90028f52 <__aeabi_atexit>
90020894:	4c0f      	ldr	r4, [pc, #60]	@ (900208d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90020896:	7823      	ldrb	r3, [r4, #0]
90020898:	f3bf 8f5b 	dmb	ish
9002089c:	07db      	lsls	r3, r3, #31
9002089e:	d40b      	bmi.n	900208b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900208a0:	4620      	mov	r0, r4
900208a2:	f008 fb5d 	bl	90028f60 <__cxa_guard_acquire>
900208a6:	b138      	cbz	r0, 900208b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900208a8:	4620      	mov	r0, r4
900208aa:	f008 fb65 	bl	90028f78 <__cxa_guard_release>
900208ae:	4a06      	ldr	r2, [pc, #24]	@ (900208c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900208b0:	4909      	ldr	r1, [pc, #36]	@ (900208d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900208b2:	480a      	ldr	r0, [pc, #40]	@ (900208dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900208b4:	f008 fb4d 	bl	90028f52 <__aeabi_atexit>
900208b8:	4b05      	ldr	r3, [pc, #20]	@ (900208d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900208ba:	636b      	str	r3, [r5, #52]	@ 0x34
900208bc:	4b07      	ldr	r3, [pc, #28]	@ (900208dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900208be:	63ab      	str	r3, [r5, #56]	@ 0x38
900208c0:	bd38      	pop	{r3, r4, r5, pc}
900208c2:	bf00      	nop
900208c4:	24021a88 	.word	0x24021a88
900208c8:	24000000 	.word	0x24000000
900208cc:	9001c751 	.word	0x9001c751
900208d0:	240000ec 	.word	0x240000ec
900208d4:	24021a8c 	.word	0x24021a8c
900208d8:	9001c74f 	.word	0x9001c74f
900208dc:	240000f0 	.word	0x240000f0

900208e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900208e0:	b538      	push	{r3, r4, r5, lr}
900208e2:	4c15      	ldr	r4, [pc, #84]	@ (90020938 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900208e4:	4605      	mov	r5, r0
900208e6:	7823      	ldrb	r3, [r4, #0]
900208e8:	f3bf 8f5b 	dmb	ish
900208ec:	07da      	lsls	r2, r3, #31
900208ee:	d40b      	bmi.n	90020908 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900208f0:	4620      	mov	r0, r4
900208f2:	f008 fb35 	bl	90028f60 <__cxa_guard_acquire>
900208f6:	b138      	cbz	r0, 90020908 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900208f8:	4620      	mov	r0, r4
900208fa:	f008 fb3d 	bl	90028f78 <__cxa_guard_release>
900208fe:	4a0f      	ldr	r2, [pc, #60]	@ (9002093c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020900:	490f      	ldr	r1, [pc, #60]	@ (90020940 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90020902:	4810      	ldr	r0, [pc, #64]	@ (90020944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90020904:	f008 fb25 	bl	90028f52 <__aeabi_atexit>
90020908:	4c0f      	ldr	r4, [pc, #60]	@ (90020948 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002090a:	7823      	ldrb	r3, [r4, #0]
9002090c:	f3bf 8f5b 	dmb	ish
90020910:	07db      	lsls	r3, r3, #31
90020912:	d40b      	bmi.n	9002092c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90020914:	4620      	mov	r0, r4
90020916:	f008 fb23 	bl	90028f60 <__cxa_guard_acquire>
9002091a:	b138      	cbz	r0, 9002092c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002091c:	4620      	mov	r0, r4
9002091e:	f008 fb2b 	bl	90028f78 <__cxa_guard_release>
90020922:	4a06      	ldr	r2, [pc, #24]	@ (9002093c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020924:	4909      	ldr	r1, [pc, #36]	@ (9002094c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90020926:	480a      	ldr	r0, [pc, #40]	@ (90020950 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020928:	f008 fb13 	bl	90028f52 <__aeabi_atexit>
9002092c:	4b05      	ldr	r3, [pc, #20]	@ (90020944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002092e:	62eb      	str	r3, [r5, #44]	@ 0x2c
90020930:	4b07      	ldr	r3, [pc, #28]	@ (90020950 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020932:	632b      	str	r3, [r5, #48]	@ 0x30
90020934:	bd38      	pop	{r3, r4, r5, pc}
90020936:	bf00      	nop
90020938:	24021a58 	.word	0x24021a58
9002093c:	24000000 	.word	0x24000000
90020940:	9001c755 	.word	0x9001c755
90020944:	240000bc 	.word	0x240000bc
90020948:	24021a5c 	.word	0x24021a5c
9002094c:	9001c753 	.word	0x9001c753
90020950:	240000c0 	.word	0x240000c0

90020954 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90020954:	b510      	push	{r4, lr}
90020956:	4604      	mov	r4, r0
90020958:	f7ff ff88 	bl	9002086c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9002095c:	4620      	mov	r0, r4
9002095e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020962:	f7ff bfbd 	b.w	900208e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90020968 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90020968:	b538      	push	{r3, r4, r5, lr}
9002096a:	4c15      	ldr	r4, [pc, #84]	@ (900209c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9002096c:	4605      	mov	r5, r0
9002096e:	7823      	ldrb	r3, [r4, #0]
90020970:	f3bf 8f5b 	dmb	ish
90020974:	07da      	lsls	r2, r3, #31
90020976:	d40b      	bmi.n	90020990 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90020978:	4620      	mov	r0, r4
9002097a:	f008 faf1 	bl	90028f60 <__cxa_guard_acquire>
9002097e:	b138      	cbz	r0, 90020990 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90020980:	4620      	mov	r0, r4
90020982:	f008 faf9 	bl	90028f78 <__cxa_guard_release>
90020986:	4a0f      	ldr	r2, [pc, #60]	@ (900209c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90020988:	490f      	ldr	r1, [pc, #60]	@ (900209c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002098a:	4810      	ldr	r0, [pc, #64]	@ (900209cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002098c:	f008 fae1 	bl	90028f52 <__aeabi_atexit>
90020990:	4c0f      	ldr	r4, [pc, #60]	@ (900209d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90020992:	7823      	ldrb	r3, [r4, #0]
90020994:	f3bf 8f5b 	dmb	ish
90020998:	07db      	lsls	r3, r3, #31
9002099a:	d40b      	bmi.n	900209b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9002099c:	4620      	mov	r0, r4
9002099e:	f008 fadf 	bl	90028f60 <__cxa_guard_acquire>
900209a2:	b138      	cbz	r0, 900209b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900209a4:	4620      	mov	r0, r4
900209a6:	f008 fae7 	bl	90028f78 <__cxa_guard_release>
900209aa:	4a06      	ldr	r2, [pc, #24]	@ (900209c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900209ac:	4909      	ldr	r1, [pc, #36]	@ (900209d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
900209ae:	480a      	ldr	r0, [pc, #40]	@ (900209d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900209b0:	f008 facf 	bl	90028f52 <__aeabi_atexit>
900209b4:	4b05      	ldr	r3, [pc, #20]	@ (900209cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900209b6:	656b      	str	r3, [r5, #84]	@ 0x54
900209b8:	4b07      	ldr	r3, [pc, #28]	@ (900209d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900209ba:	65ab      	str	r3, [r5, #88]	@ 0x58
900209bc:	bd38      	pop	{r3, r4, r5, pc}
900209be:	bf00      	nop
900209c0:	24021a90 	.word	0x24021a90
900209c4:	24000000 	.word	0x24000000
900209c8:	9001c741 	.word	0x9001c741
900209cc:	240000f4 	.word	0x240000f4
900209d0:	24021a94 	.word	0x24021a94
900209d4:	9001c73f 	.word	0x9001c73f
900209d8:	240000f8 	.word	0x240000f8

900209dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900209dc:	b538      	push	{r3, r4, r5, lr}
900209de:	4c15      	ldr	r4, [pc, #84]	@ (90020a34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900209e0:	4605      	mov	r5, r0
900209e2:	7823      	ldrb	r3, [r4, #0]
900209e4:	f3bf 8f5b 	dmb	ish
900209e8:	07da      	lsls	r2, r3, #31
900209ea:	d40b      	bmi.n	90020a04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900209ec:	4620      	mov	r0, r4
900209ee:	f008 fab7 	bl	90028f60 <__cxa_guard_acquire>
900209f2:	b138      	cbz	r0, 90020a04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900209f4:	4620      	mov	r0, r4
900209f6:	f008 fabf 	bl	90028f78 <__cxa_guard_release>
900209fa:	4a0f      	ldr	r2, [pc, #60]	@ (90020a38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900209fc:	490f      	ldr	r1, [pc, #60]	@ (90020a3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
900209fe:	4810      	ldr	r0, [pc, #64]	@ (90020a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90020a00:	f008 faa7 	bl	90028f52 <__aeabi_atexit>
90020a04:	4c0f      	ldr	r4, [pc, #60]	@ (90020a44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90020a06:	7823      	ldrb	r3, [r4, #0]
90020a08:	f3bf 8f5b 	dmb	ish
90020a0c:	07db      	lsls	r3, r3, #31
90020a0e:	d40b      	bmi.n	90020a28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020a10:	4620      	mov	r0, r4
90020a12:	f008 faa5 	bl	90028f60 <__cxa_guard_acquire>
90020a16:	b138      	cbz	r0, 90020a28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020a18:	4620      	mov	r0, r4
90020a1a:	f008 faad 	bl	90028f78 <__cxa_guard_release>
90020a1e:	4a06      	ldr	r2, [pc, #24]	@ (90020a38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90020a20:	4909      	ldr	r1, [pc, #36]	@ (90020a48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90020a22:	480a      	ldr	r0, [pc, #40]	@ (90020a4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90020a24:	f008 fa95 	bl	90028f52 <__aeabi_atexit>
90020a28:	4b05      	ldr	r3, [pc, #20]	@ (90020a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90020a2a:	64eb      	str	r3, [r5, #76]	@ 0x4c
90020a2c:	4b07      	ldr	r3, [pc, #28]	@ (90020a4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90020a2e:	652b      	str	r3, [r5, #80]	@ 0x50
90020a30:	bd38      	pop	{r3, r4, r5, pc}
90020a32:	bf00      	nop
90020a34:	24021a98 	.word	0x24021a98
90020a38:	24000000 	.word	0x24000000
90020a3c:	9001c745 	.word	0x9001c745
90020a40:	240000fc 	.word	0x240000fc
90020a44:	24021a9c 	.word	0x24021a9c
90020a48:	9001c743 	.word	0x9001c743
90020a4c:	24000100 	.word	0x24000100

90020a50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90020a50:	b538      	push	{r3, r4, r5, lr}
90020a52:	4c15      	ldr	r4, [pc, #84]	@ (90020aa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90020a54:	4605      	mov	r5, r0
90020a56:	7823      	ldrb	r3, [r4, #0]
90020a58:	f3bf 8f5b 	dmb	ish
90020a5c:	07da      	lsls	r2, r3, #31
90020a5e:	d40b      	bmi.n	90020a78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020a60:	4620      	mov	r0, r4
90020a62:	f008 fa7d 	bl	90028f60 <__cxa_guard_acquire>
90020a66:	b138      	cbz	r0, 90020a78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020a68:	4620      	mov	r0, r4
90020a6a:	f008 fa85 	bl	90028f78 <__cxa_guard_release>
90020a6e:	4a0f      	ldr	r2, [pc, #60]	@ (90020aac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020a70:	490f      	ldr	r1, [pc, #60]	@ (90020ab0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90020a72:	4810      	ldr	r0, [pc, #64]	@ (90020ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020a74:	f008 fa6d 	bl	90028f52 <__aeabi_atexit>
90020a78:	4c0f      	ldr	r4, [pc, #60]	@ (90020ab8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90020a7a:	7823      	ldrb	r3, [r4, #0]
90020a7c:	f3bf 8f5b 	dmb	ish
90020a80:	07db      	lsls	r3, r3, #31
90020a82:	d40b      	bmi.n	90020a9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020a84:	4620      	mov	r0, r4
90020a86:	f008 fa6b 	bl	90028f60 <__cxa_guard_acquire>
90020a8a:	b138      	cbz	r0, 90020a9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020a8c:	4620      	mov	r0, r4
90020a8e:	f008 fa73 	bl	90028f78 <__cxa_guard_release>
90020a92:	4a06      	ldr	r2, [pc, #24]	@ (90020aac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020a94:	4909      	ldr	r1, [pc, #36]	@ (90020abc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90020a96:	480a      	ldr	r0, [pc, #40]	@ (90020ac0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90020a98:	f008 fa5b 	bl	90028f52 <__aeabi_atexit>
90020a9c:	4b05      	ldr	r3, [pc, #20]	@ (90020ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020a9e:	646b      	str	r3, [r5, #68]	@ 0x44
90020aa0:	4b07      	ldr	r3, [pc, #28]	@ (90020ac0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90020aa2:	64ab      	str	r3, [r5, #72]	@ 0x48
90020aa4:	bd38      	pop	{r3, r4, r5, pc}
90020aa6:	bf00      	nop
90020aa8:	24021a60 	.word	0x24021a60
90020aac:	24000000 	.word	0x24000000
90020ab0:	9001c749 	.word	0x9001c749
90020ab4:	240000c4 	.word	0x240000c4
90020ab8:	24021a64 	.word	0x24021a64
90020abc:	9001c747 	.word	0x9001c747
90020ac0:	240000c8 	.word	0x240000c8

90020ac4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90020ac4:	b538      	push	{r3, r4, r5, lr}
90020ac6:	4c15      	ldr	r4, [pc, #84]	@ (90020b1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90020ac8:	4605      	mov	r5, r0
90020aca:	7823      	ldrb	r3, [r4, #0]
90020acc:	f3bf 8f5b 	dmb	ish
90020ad0:	07da      	lsls	r2, r3, #31
90020ad2:	d40b      	bmi.n	90020aec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020ad4:	4620      	mov	r0, r4
90020ad6:	f008 fa43 	bl	90028f60 <__cxa_guard_acquire>
90020ada:	b138      	cbz	r0, 90020aec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020adc:	4620      	mov	r0, r4
90020ade:	f008 fa4b 	bl	90028f78 <__cxa_guard_release>
90020ae2:	4a0f      	ldr	r2, [pc, #60]	@ (90020b20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020ae4:	490f      	ldr	r1, [pc, #60]	@ (90020b24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90020ae6:	4810      	ldr	r0, [pc, #64]	@ (90020b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90020ae8:	f008 fa33 	bl	90028f52 <__aeabi_atexit>
90020aec:	4c0f      	ldr	r4, [pc, #60]	@ (90020b2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90020aee:	7823      	ldrb	r3, [r4, #0]
90020af0:	f3bf 8f5b 	dmb	ish
90020af4:	07db      	lsls	r3, r3, #31
90020af6:	d40b      	bmi.n	90020b10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90020af8:	4620      	mov	r0, r4
90020afa:	f008 fa31 	bl	90028f60 <__cxa_guard_acquire>
90020afe:	b138      	cbz	r0, 90020b10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90020b00:	4620      	mov	r0, r4
90020b02:	f008 fa39 	bl	90028f78 <__cxa_guard_release>
90020b06:	4a06      	ldr	r2, [pc, #24]	@ (90020b20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020b08:	4909      	ldr	r1, [pc, #36]	@ (90020b30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90020b0a:	480a      	ldr	r0, [pc, #40]	@ (90020b34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90020b0c:	f008 fa21 	bl	90028f52 <__aeabi_atexit>
90020b10:	4b05      	ldr	r3, [pc, #20]	@ (90020b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90020b12:	63eb      	str	r3, [r5, #60]	@ 0x3c
90020b14:	4b07      	ldr	r3, [pc, #28]	@ (90020b34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90020b16:	642b      	str	r3, [r5, #64]	@ 0x40
90020b18:	bd38      	pop	{r3, r4, r5, pc}
90020b1a:	bf00      	nop
90020b1c:	24021a80 	.word	0x24021a80
90020b20:	24000000 	.word	0x24000000
90020b24:	9001c74d 	.word	0x9001c74d
90020b28:	240000e4 	.word	0x240000e4
90020b2c:	24021a84 	.word	0x24021a84
90020b30:	9001c74b 	.word	0x9001c74b
90020b34:	240000e8 	.word	0x240000e8

90020b38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90020b38:	b510      	push	{r4, lr}
90020b3a:	4604      	mov	r4, r0
90020b3c:	f7ff ff14 	bl	90020968 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90020b40:	4620      	mov	r0, r4
90020b42:	f7ff ff85 	bl	90020a50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90020b46:	4620      	mov	r0, r4
90020b48:	f7ff ff48 	bl	900209dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90020b4c:	4620      	mov	r0, r4
90020b4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020b52:	f7ff bfb7 	b.w	90020ac4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90020b58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90020b58:	b538      	push	{r3, r4, r5, lr}
90020b5a:	4c15      	ldr	r4, [pc, #84]	@ (90020bb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90020b5c:	4605      	mov	r5, r0
90020b5e:	7823      	ldrb	r3, [r4, #0]
90020b60:	f3bf 8f5b 	dmb	ish
90020b64:	07da      	lsls	r2, r3, #31
90020b66:	d40b      	bmi.n	90020b80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90020b68:	4620      	mov	r0, r4
90020b6a:	f008 f9f9 	bl	90028f60 <__cxa_guard_acquire>
90020b6e:	b138      	cbz	r0, 90020b80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90020b70:	4620      	mov	r0, r4
90020b72:	f008 fa01 	bl	90028f78 <__cxa_guard_release>
90020b76:	4a0f      	ldr	r2, [pc, #60]	@ (90020bb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90020b78:	490f      	ldr	r1, [pc, #60]	@ (90020bb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90020b7a:	4810      	ldr	r0, [pc, #64]	@ (90020bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90020b7c:	f008 f9e9 	bl	90028f52 <__aeabi_atexit>
90020b80:	4c0f      	ldr	r4, [pc, #60]	@ (90020bc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90020b82:	7823      	ldrb	r3, [r4, #0]
90020b84:	f3bf 8f5b 	dmb	ish
90020b88:	07db      	lsls	r3, r3, #31
90020b8a:	d40b      	bmi.n	90020ba4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020b8c:	4620      	mov	r0, r4
90020b8e:	f008 f9e7 	bl	90028f60 <__cxa_guard_acquire>
90020b92:	b138      	cbz	r0, 90020ba4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020b94:	4620      	mov	r0, r4
90020b96:	f008 f9ef 	bl	90028f78 <__cxa_guard_release>
90020b9a:	4a06      	ldr	r2, [pc, #24]	@ (90020bb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90020b9c:	4909      	ldr	r1, [pc, #36]	@ (90020bc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90020b9e:	480a      	ldr	r0, [pc, #40]	@ (90020bc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90020ba0:	f008 f9d7 	bl	90028f52 <__aeabi_atexit>
90020ba4:	4b05      	ldr	r3, [pc, #20]	@ (90020bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90020ba6:	666b      	str	r3, [r5, #100]	@ 0x64
90020ba8:	4b07      	ldr	r3, [pc, #28]	@ (90020bc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90020baa:	66ab      	str	r3, [r5, #104]	@ 0x68
90020bac:	bd38      	pop	{r3, r4, r5, pc}
90020bae:	bf00      	nop
90020bb0:	24021a68 	.word	0x24021a68
90020bb4:	24000000 	.word	0x24000000
90020bb8:	9001c739 	.word	0x9001c739
90020bbc:	240000cc 	.word	0x240000cc
90020bc0:	24021a6c 	.word	0x24021a6c
90020bc4:	9001c737 	.word	0x9001c737
90020bc8:	240000d0 	.word	0x240000d0

90020bcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90020bcc:	b538      	push	{r3, r4, r5, lr}
90020bce:	4c15      	ldr	r4, [pc, #84]	@ (90020c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90020bd0:	4605      	mov	r5, r0
90020bd2:	7823      	ldrb	r3, [r4, #0]
90020bd4:	f3bf 8f5b 	dmb	ish
90020bd8:	07da      	lsls	r2, r3, #31
90020bda:	d40b      	bmi.n	90020bf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020bdc:	4620      	mov	r0, r4
90020bde:	f008 f9bf 	bl	90028f60 <__cxa_guard_acquire>
90020be2:	b138      	cbz	r0, 90020bf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020be4:	4620      	mov	r0, r4
90020be6:	f008 f9c7 	bl	90028f78 <__cxa_guard_release>
90020bea:	4a0f      	ldr	r2, [pc, #60]	@ (90020c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90020bec:	490f      	ldr	r1, [pc, #60]	@ (90020c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90020bee:	4810      	ldr	r0, [pc, #64]	@ (90020c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90020bf0:	f008 f9af 	bl	90028f52 <__aeabi_atexit>
90020bf4:	4c0f      	ldr	r4, [pc, #60]	@ (90020c34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90020bf6:	7823      	ldrb	r3, [r4, #0]
90020bf8:	f3bf 8f5b 	dmb	ish
90020bfc:	07db      	lsls	r3, r3, #31
90020bfe:	d40b      	bmi.n	90020c18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90020c00:	4620      	mov	r0, r4
90020c02:	f008 f9ad 	bl	90028f60 <__cxa_guard_acquire>
90020c06:	b138      	cbz	r0, 90020c18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90020c08:	4620      	mov	r0, r4
90020c0a:	f008 f9b5 	bl	90028f78 <__cxa_guard_release>
90020c0e:	4a06      	ldr	r2, [pc, #24]	@ (90020c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90020c10:	4909      	ldr	r1, [pc, #36]	@ (90020c38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90020c12:	480a      	ldr	r0, [pc, #40]	@ (90020c3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90020c14:	f008 f99d 	bl	90028f52 <__aeabi_atexit>
90020c18:	4b05      	ldr	r3, [pc, #20]	@ (90020c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90020c1a:	65eb      	str	r3, [r5, #92]	@ 0x5c
90020c1c:	4b07      	ldr	r3, [pc, #28]	@ (90020c3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90020c1e:	662b      	str	r3, [r5, #96]	@ 0x60
90020c20:	bd38      	pop	{r3, r4, r5, pc}
90020c22:	bf00      	nop
90020c24:	24021a40 	.word	0x24021a40
90020c28:	24000000 	.word	0x24000000
90020c2c:	9001c73d 	.word	0x9001c73d
90020c30:	240000a4 	.word	0x240000a4
90020c34:	24021a44 	.word	0x24021a44
90020c38:	9001c73b 	.word	0x9001c73b
90020c3c:	240000a8 	.word	0x240000a8

90020c40 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90020c40:	b510      	push	{r4, lr}
90020c42:	4604      	mov	r4, r0
90020c44:	f7ff ff88 	bl	90020b58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90020c48:	4620      	mov	r0, r4
90020c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020c4e:	f7ff bfbd 	b.w	90020bcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90020c54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90020c54:	b538      	push	{r3, r4, r5, lr}
90020c56:	4c15      	ldr	r4, [pc, #84]	@ (90020cac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90020c58:	4605      	mov	r5, r0
90020c5a:	7823      	ldrb	r3, [r4, #0]
90020c5c:	f3bf 8f5b 	dmb	ish
90020c60:	07da      	lsls	r2, r3, #31
90020c62:	d40b      	bmi.n	90020c7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020c64:	4620      	mov	r0, r4
90020c66:	f008 f97b 	bl	90028f60 <__cxa_guard_acquire>
90020c6a:	b138      	cbz	r0, 90020c7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020c6c:	4620      	mov	r0, r4
90020c6e:	f008 f983 	bl	90028f78 <__cxa_guard_release>
90020c72:	4a0f      	ldr	r2, [pc, #60]	@ (90020cb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90020c74:	490f      	ldr	r1, [pc, #60]	@ (90020cb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90020c76:	4810      	ldr	r0, [pc, #64]	@ (90020cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90020c78:	f008 f96b 	bl	90028f52 <__aeabi_atexit>
90020c7c:	4c0f      	ldr	r4, [pc, #60]	@ (90020cbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90020c7e:	7823      	ldrb	r3, [r4, #0]
90020c80:	f3bf 8f5b 	dmb	ish
90020c84:	07db      	lsls	r3, r3, #31
90020c86:	d40b      	bmi.n	90020ca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90020c88:	4620      	mov	r0, r4
90020c8a:	f008 f969 	bl	90028f60 <__cxa_guard_acquire>
90020c8e:	b138      	cbz	r0, 90020ca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90020c90:	4620      	mov	r0, r4
90020c92:	f008 f971 	bl	90028f78 <__cxa_guard_release>
90020c96:	4a06      	ldr	r2, [pc, #24]	@ (90020cb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90020c98:	4909      	ldr	r1, [pc, #36]	@ (90020cc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90020c9a:	480a      	ldr	r0, [pc, #40]	@ (90020cc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90020c9c:	f008 f959 	bl	90028f52 <__aeabi_atexit>
90020ca0:	4b05      	ldr	r3, [pc, #20]	@ (90020cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90020ca2:	676b      	str	r3, [r5, #116]	@ 0x74
90020ca4:	4b07      	ldr	r3, [pc, #28]	@ (90020cc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90020ca6:	67ab      	str	r3, [r5, #120]	@ 0x78
90020ca8:	bd38      	pop	{r3, r4, r5, pc}
90020caa:	bf00      	nop
90020cac:	24021a38 	.word	0x24021a38
90020cb0:	24000000 	.word	0x24000000
90020cb4:	9001c731 	.word	0x9001c731
90020cb8:	2400009c 	.word	0x2400009c
90020cbc:	24021a3c 	.word	0x24021a3c
90020cc0:	9001c72f 	.word	0x9001c72f
90020cc4:	240000a0 	.word	0x240000a0

90020cc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90020cc8:	b538      	push	{r3, r4, r5, lr}
90020cca:	4c15      	ldr	r4, [pc, #84]	@ (90020d20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90020ccc:	4605      	mov	r5, r0
90020cce:	7823      	ldrb	r3, [r4, #0]
90020cd0:	f3bf 8f5b 	dmb	ish
90020cd4:	07da      	lsls	r2, r3, #31
90020cd6:	d40b      	bmi.n	90020cf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90020cd8:	4620      	mov	r0, r4
90020cda:	f008 f941 	bl	90028f60 <__cxa_guard_acquire>
90020cde:	b138      	cbz	r0, 90020cf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90020ce0:	4620      	mov	r0, r4
90020ce2:	f008 f949 	bl	90028f78 <__cxa_guard_release>
90020ce6:	4a0f      	ldr	r2, [pc, #60]	@ (90020d24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90020ce8:	490f      	ldr	r1, [pc, #60]	@ (90020d28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90020cea:	4810      	ldr	r0, [pc, #64]	@ (90020d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90020cec:	f008 f931 	bl	90028f52 <__aeabi_atexit>
90020cf0:	4c0f      	ldr	r4, [pc, #60]	@ (90020d30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90020cf2:	7823      	ldrb	r3, [r4, #0]
90020cf4:	f3bf 8f5b 	dmb	ish
90020cf8:	07db      	lsls	r3, r3, #31
90020cfa:	d40b      	bmi.n	90020d14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90020cfc:	4620      	mov	r0, r4
90020cfe:	f008 f92f 	bl	90028f60 <__cxa_guard_acquire>
90020d02:	b138      	cbz	r0, 90020d14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90020d04:	4620      	mov	r0, r4
90020d06:	f008 f937 	bl	90028f78 <__cxa_guard_release>
90020d0a:	4a06      	ldr	r2, [pc, #24]	@ (90020d24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90020d0c:	4909      	ldr	r1, [pc, #36]	@ (90020d34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90020d0e:	480a      	ldr	r0, [pc, #40]	@ (90020d38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90020d10:	f008 f91f 	bl	90028f52 <__aeabi_atexit>
90020d14:	4b05      	ldr	r3, [pc, #20]	@ (90020d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90020d16:	66eb      	str	r3, [r5, #108]	@ 0x6c
90020d18:	4b07      	ldr	r3, [pc, #28]	@ (90020d38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90020d1a:	672b      	str	r3, [r5, #112]	@ 0x70
90020d1c:	bd38      	pop	{r3, r4, r5, pc}
90020d1e:	bf00      	nop
90020d20:	24021a30 	.word	0x24021a30
90020d24:	24000000 	.word	0x24000000
90020d28:	9001c735 	.word	0x9001c735
90020d2c:	24000094 	.word	0x24000094
90020d30:	24021a34 	.word	0x24021a34
90020d34:	9001c733 	.word	0x9001c733
90020d38:	24000098 	.word	0x24000098

90020d3c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90020d3c:	b510      	push	{r4, lr}
90020d3e:	4604      	mov	r4, r0
90020d40:	f7ff ff88 	bl	90020c54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90020d44:	4620      	mov	r0, r4
90020d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020d4a:	f7ff bfbd 	b.w	90020cc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90020d4e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90020d4e:	b510      	push	{r4, lr}
90020d50:	4604      	mov	r4, r0
90020d52:	f7ff fff3 	bl	90020d3c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90020d56:	4620      	mov	r0, r4
90020d58:	f7ff ff72 	bl	90020c40 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90020d5c:	4620      	mov	r0, r4
90020d5e:	f7ff fdf9 	bl	90020954 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90020d62:	4620      	mov	r0, r4
90020d64:	f7ff fcfa 	bl	9002075c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90020d68:	4620      	mov	r0, r4
90020d6a:	f7ff fd75 	bl	90020858 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90020d6e:	4620      	mov	r0, r4
90020d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020d74:	f7ff bee0 	b.w	90020b38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90020d78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90020d78:	b538      	push	{r3, r4, r5, lr}
90020d7a:	4c0b      	ldr	r4, [pc, #44]	@ (90020da8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90020d7c:	4605      	mov	r5, r0
90020d7e:	7823      	ldrb	r3, [r4, #0]
90020d80:	f3bf 8f5b 	dmb	ish
90020d84:	07db      	lsls	r3, r3, #31
90020d86:	d40b      	bmi.n	90020da0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90020d88:	4620      	mov	r0, r4
90020d8a:	f008 f8e9 	bl	90028f60 <__cxa_guard_acquire>
90020d8e:	b138      	cbz	r0, 90020da0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90020d90:	4620      	mov	r0, r4
90020d92:	f008 f8f1 	bl	90028f78 <__cxa_guard_release>
90020d96:	4a05      	ldr	r2, [pc, #20]	@ (90020dac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90020d98:	4905      	ldr	r1, [pc, #20]	@ (90020db0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90020d9a:	4806      	ldr	r0, [pc, #24]	@ (90020db4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020d9c:	f008 f8d9 	bl	90028f52 <__aeabi_atexit>
90020da0:	4b04      	ldr	r3, [pc, #16]	@ (90020db4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020da2:	67eb      	str	r3, [r5, #124]	@ 0x7c
90020da4:	bd38      	pop	{r3, r4, r5, pc}
90020da6:	bf00      	nop
90020da8:	24021a24 	.word	0x24021a24
90020dac:	24000000 	.word	0x24000000
90020db0:	9001c72d 	.word	0x9001c72d
90020db4:	2400008c 	.word	0x2400008c

90020db8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90020db8:	b538      	push	{r3, r4, r5, lr}
90020dba:	4c0b      	ldr	r4, [pc, #44]	@ (90020de8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90020dbc:	4605      	mov	r5, r0
90020dbe:	7823      	ldrb	r3, [r4, #0]
90020dc0:	f3bf 8f5b 	dmb	ish
90020dc4:	07db      	lsls	r3, r3, #31
90020dc6:	d40b      	bmi.n	90020de0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90020dc8:	4620      	mov	r0, r4
90020dca:	f008 f8c9 	bl	90028f60 <__cxa_guard_acquire>
90020dce:	b138      	cbz	r0, 90020de0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90020dd0:	4620      	mov	r0, r4
90020dd2:	f008 f8d1 	bl	90028f78 <__cxa_guard_release>
90020dd6:	4a05      	ldr	r2, [pc, #20]	@ (90020dec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90020dd8:	4905      	ldr	r1, [pc, #20]	@ (90020df0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90020dda:	4806      	ldr	r0, [pc, #24]	@ (90020df4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020ddc:	f008 f8b9 	bl	90028f52 <__aeabi_atexit>
90020de0:	4b04      	ldr	r3, [pc, #16]	@ (90020df4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020de2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90020de6:	bd38      	pop	{r3, r4, r5, pc}
90020de8:	24021a28 	.word	0x24021a28
90020dec:	24000000 	.word	0x24000000
90020df0:	9001c72b 	.word	0x9001c72b
90020df4:	24000090 	.word	0x24000090

90020df8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90020df8:	b570      	push	{r4, r5, r6, lr}
90020dfa:	4d0d      	ldr	r5, [pc, #52]	@ (90020e30 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90020dfc:	4606      	mov	r6, r0
90020dfe:	4c0d      	ldr	r4, [pc, #52]	@ (90020e34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90020e00:	782b      	ldrb	r3, [r5, #0]
90020e02:	f3bf 8f5b 	dmb	ish
90020e06:	f013 0f01 	tst.w	r3, #1
90020e0a:	d10d      	bne.n	90020e28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90020e0c:	4628      	mov	r0, r5
90020e0e:	f008 f8a7 	bl	90028f60 <__cxa_guard_acquire>
90020e12:	b148      	cbz	r0, 90020e28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90020e14:	4b08      	ldr	r3, [pc, #32]	@ (90020e38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90020e16:	4628      	mov	r0, r5
90020e18:	6023      	str	r3, [r4, #0]
90020e1a:	f008 f8ad 	bl	90028f78 <__cxa_guard_release>
90020e1e:	4a07      	ldr	r2, [pc, #28]	@ (90020e3c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90020e20:	4620      	mov	r0, r4
90020e22:	4907      	ldr	r1, [pc, #28]	@ (90020e40 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90020e24:	f008 f895 	bl	90028f52 <__aeabi_atexit>
90020e28:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90020e2c:	bd70      	pop	{r4, r5, r6, pc}
90020e2e:	bf00      	nop
90020e30:	24021a2c 	.word	0x24021a2c
90020e34:	24021ba4 	.word	0x24021ba4
90020e38:	9002d7e8 	.word	0x9002d7e8
90020e3c:	24000000 	.word	0x24000000
90020e40:	9001c729 	.word	0x9001c729

90020e44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90020e44:	b510      	push	{r4, lr}
90020e46:	4604      	mov	r4, r0
90020e48:	f7ff ff96 	bl	90020d78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90020e4c:	4620      	mov	r0, r4
90020e4e:	f7ff ffb3 	bl	90020db8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90020e52:	4620      	mov	r0, r4
90020e54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020e58:	f7ff bfce 	b.w	90020df8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90020e5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90020e5c:	b570      	push	{r4, r5, r6, lr}
90020e5e:	4d0d      	ldr	r5, [pc, #52]	@ (90020e94 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90020e60:	4606      	mov	r6, r0
90020e62:	4c0d      	ldr	r4, [pc, #52]	@ (90020e98 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90020e64:	782b      	ldrb	r3, [r5, #0]
90020e66:	f3bf 8f5b 	dmb	ish
90020e6a:	f013 0f01 	tst.w	r3, #1
90020e6e:	d10d      	bne.n	90020e8c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90020e70:	4628      	mov	r0, r5
90020e72:	f008 f875 	bl	90028f60 <__cxa_guard_acquire>
90020e76:	b148      	cbz	r0, 90020e8c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90020e78:	4b08      	ldr	r3, [pc, #32]	@ (90020e9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90020e7a:	4628      	mov	r0, r5
90020e7c:	6023      	str	r3, [r4, #0]
90020e7e:	f008 f87b 	bl	90028f78 <__cxa_guard_release>
90020e82:	4a07      	ldr	r2, [pc, #28]	@ (90020ea0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90020e84:	4620      	mov	r0, r4
90020e86:	4907      	ldr	r1, [pc, #28]	@ (90020ea4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90020e88:	f008 f863 	bl	90028f52 <__aeabi_atexit>
90020e8c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90020e90:	bd70      	pop	{r4, r5, r6, pc}
90020e92:	bf00      	nop
90020e94:	24021a20 	.word	0x24021a20
90020e98:	24021aa0 	.word	0x24021aa0
90020e9c:	9002d804 	.word	0x9002d804
90020ea0:	24000000 	.word	0x24000000
90020ea4:	9001c727 	.word	0x9001c727

90020ea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90020ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020eac:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90020eb0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90020eb4:	2d00      	cmp	r5, #0
90020eb6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90020eba:	fb05 4c0e 	mla	ip, r5, lr, r4
90020ebe:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90020ec2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90020ec6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90020eca:	eb02 0a0c 	add.w	sl, r2, ip
90020ece:	8808      	ldrh	r0, [r1, #0]
90020ed0:	f2c0 80b0 	blt.w	90021034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90020ed4:	45ab      	cmp	fp, r5
90020ed6:	f340 80ad 	ble.w	90021034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90020eda:	2c00      	cmp	r4, #0
90020edc:	f2c0 80a8 	blt.w	90021030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90020ee0:	45a6      	cmp	lr, r4
90020ee2:	f340 80a5 	ble.w	90021030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90020ee6:	f812 200c 	ldrb.w	r2, [r2, ip]
90020eea:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90020eee:	1c62      	adds	r2, r4, #1
90020ef0:	f100 80a3 	bmi.w	9002103a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020ef4:	4596      	cmp	lr, r2
90020ef6:	f340 80a0 	ble.w	9002103a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020efa:	f1b9 0f00 	cmp.w	r9, #0
90020efe:	f000 809c 	beq.w	9002103a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020f02:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020f06:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90020f0a:	3501      	adds	r5, #1
90020f0c:	f100 8099 	bmi.w	90021042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020f10:	45ab      	cmp	fp, r5
90020f12:	f340 8096 	ble.w	90021042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020f16:	2f00      	cmp	r7, #0
90020f18:	f000 8093 	beq.w	90021042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020f1c:	2c00      	cmp	r4, #0
90020f1e:	f2c0 808e 	blt.w	9002103e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90020f22:	45a6      	cmp	lr, r4
90020f24:	f340 808b 	ble.w	9002103e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90020f28:	f81a 200e 	ldrb.w	r2, [sl, lr]
90020f2c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90020f30:	3401      	adds	r4, #1
90020f32:	f100 8089 	bmi.w	90021048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020f36:	45a6      	cmp	lr, r4
90020f38:	f340 8086 	ble.w	90021048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020f3c:	f1b9 0f00 	cmp.w	r9, #0
90020f40:	f000 8082 	beq.w	90021048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020f44:	44d6      	add	lr, sl
90020f46:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020f4a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90020f4e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90020f52:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90020f56:	fb19 fe07 	smulbb	lr, r9, r7
90020f5a:	f1c7 0210 	rsb	r2, r7, #16
90020f5e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020f62:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90020f66:	eba2 0209 	sub.w	r2, r2, r9
90020f6a:	ea44 0808 	orr.w	r8, r4, r8
90020f6e:	ea4f 440c 	mov.w	r4, ip, lsl #16
90020f72:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90020f76:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90020f7a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020f7e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90020f82:	ea44 0c0c 	orr.w	ip, r4, ip
90020f86:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90020f8a:	fb04 f40c 	mul.w	r4, r4, ip
90020f8e:	fb02 4808 	mla	r8, r2, r8, r4
90020f92:	041a      	lsls	r2, r3, #16
90020f94:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020f98:	b2b4      	uxth	r4, r6
90020f9a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020f9e:	43f6      	mvns	r6, r6
90020fa0:	4313      	orrs	r3, r2
90020fa2:	042a      	lsls	r2, r5, #16
90020fa4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90020fa8:	b2f6      	uxtb	r6, r6
90020faa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020fae:	fb0e 8303 	mla	r3, lr, r3, r8
90020fb2:	432a      	orrs	r2, r5
90020fb4:	fb07 3202 	mla	r2, r7, r2, r3
90020fb8:	10c7      	asrs	r7, r0, #3
90020fba:	0d53      	lsrs	r3, r2, #21
90020fbc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020fc0:	0952      	lsrs	r2, r2, #5
90020fc2:	fb17 f706 	smulbb	r7, r7, r6
90020fc6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020fca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90020fce:	431a      	orrs	r2, r3
90020fd0:	b293      	uxth	r3, r2
90020fd2:	1202      	asrs	r2, r0, #8
90020fd4:	121d      	asrs	r5, r3, #8
90020fd6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90020fda:	00c0      	lsls	r0, r0, #3
90020fdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020fe0:	fb12 f206 	smulbb	r2, r2, r6
90020fe4:	b2c0      	uxtb	r0, r0
90020fe6:	fb05 2504 	mla	r5, r5, r4, r2
90020fea:	10da      	asrs	r2, r3, #3
90020fec:	fb10 f006 	smulbb	r0, r0, r6
90020ff0:	00db      	lsls	r3, r3, #3
90020ff2:	b2ad      	uxth	r5, r5
90020ff4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020ff8:	b2db      	uxtb	r3, r3
90020ffa:	fb02 7204 	mla	r2, r2, r4, r7
90020ffe:	fb03 0004 	mla	r0, r3, r4, r0
90021002:	1c6b      	adds	r3, r5, #1
90021004:	b292      	uxth	r2, r2
90021006:	b280      	uxth	r0, r0
90021008:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002100c:	1c43      	adds	r3, r0, #1
9002100e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021012:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021016:	1c50      	adds	r0, r2, #1
90021018:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002101c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021020:	0952      	lsrs	r2, r2, #5
90021022:	432b      	orrs	r3, r5
90021024:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021028:	4313      	orrs	r3, r2
9002102a:	800b      	strh	r3, [r1, #0]
9002102c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021030:	4680      	mov	r8, r0
90021032:	e75c      	b.n	90020eee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021034:	4684      	mov	ip, r0
90021036:	4680      	mov	r8, r0
90021038:	e767      	b.n	90020f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002103a:	4684      	mov	ip, r0
9002103c:	e765      	b.n	90020f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002103e:	4605      	mov	r5, r0
90021040:	e776      	b.n	90020f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021042:	4603      	mov	r3, r0
90021044:	4605      	mov	r5, r0
90021046:	e782      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90021048:	4603      	mov	r3, r0
9002104a:	e780      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9002104c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002104c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021050:	b099      	sub	sp, #100	@ 0x64
90021052:	9215      	str	r2, [sp, #84]	@ 0x54
90021054:	9309      	str	r3, [sp, #36]	@ 0x24
90021056:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90021058:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9002105c:	9016      	str	r0, [sp, #88]	@ 0x58
9002105e:	930d      	str	r3, [sp, #52]	@ 0x34
90021060:	6850      	ldr	r0, [r2, #4]
90021062:	910c      	str	r1, [sp, #48]	@ 0x30
90021064:	6812      	ldr	r2, [r2, #0]
90021066:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002106a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9002106e:	fb00 1303 	mla	r3, r0, r3, r1
90021072:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90021076:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021078:	681b      	ldr	r3, [r3, #0]
9002107a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002107c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002107e:	685e      	ldr	r6, [r3, #4]
90021080:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021082:	3604      	adds	r6, #4
90021084:	43db      	mvns	r3, r3
90021086:	b2db      	uxtb	r3, r3
90021088:	930a      	str	r3, [sp, #40]	@ 0x28
9002108a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002108c:	2b00      	cmp	r3, #0
9002108e:	dc03      	bgt.n	90021098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021090:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90021092:	2b00      	cmp	r3, #0
90021094:	f340 8225 	ble.w	900214e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021098:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002109a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002109e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900210a2:	1e48      	subs	r0, r1, #1
900210a4:	1e57      	subs	r7, r2, #1
900210a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900210a8:	2b00      	cmp	r3, #0
900210aa:	f340 80e3 	ble.w	90021274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900210ae:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900210b2:	ea4f 4325 	mov.w	r3, r5, asr #16
900210b6:	d406      	bmi.n	900210c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900210b8:	4584      	cmp	ip, r0
900210ba:	da04      	bge.n	900210c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900210bc:	2b00      	cmp	r3, #0
900210be:	db02      	blt.n	900210c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900210c0:	42bb      	cmp	r3, r7
900210c2:	f2c0 80d8 	blt.w	90021276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900210c6:	f11c 0c01 	adds.w	ip, ip, #1
900210ca:	f100 80c9 	bmi.w	90021260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900210ce:	4561      	cmp	r1, ip
900210d0:	f2c0 80c6 	blt.w	90021260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900210d4:	3301      	adds	r3, #1
900210d6:	f100 80c3 	bmi.w	90021260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900210da:	429a      	cmp	r2, r3
900210dc:	f2c0 80c0 	blt.w	90021260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900210e0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900210e4:	4647      	mov	r7, r8
900210e6:	f1bb 0f00 	cmp.w	fp, #0
900210ea:	f340 80e3 	ble.w	900212b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900210ee:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900210f0:	ea4f 4c25 	mov.w	ip, r5, asr #16
900210f4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900210f6:	f3ca 3003 	ubfx	r0, sl, #12, #4
900210fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900210fe:	ea5f 422a 	movs.w	r2, sl, asr #16
90021102:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021106:	689b      	ldr	r3, [r3, #8]
90021108:	f100 8121 	bmi.w	9002134e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002110c:	f103 39ff 	add.w	r9, r3, #4294967295
90021110:	454a      	cmp	r2, r9
90021112:	f280 811c 	bge.w	9002134e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021116:	f1bc 0f00 	cmp.w	ip, #0
9002111a:	f2c0 8118 	blt.w	9002134e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002111e:	f10e 39ff 	add.w	r9, lr, #4294967295
90021122:	45cc      	cmp	ip, r9
90021124:	f280 8113 	bge.w	9002134e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021128:	b21b      	sxth	r3, r3
9002112a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002112c:	fb0c 2203 	mla	r2, ip, r3, r2
90021130:	eb04 0902 	add.w	r9, r4, r2
90021134:	5ca2      	ldrb	r2, [r4, r2]
90021136:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002113a:	2800      	cmp	r0, #0
9002113c:	f000 80fe 	beq.w	9002133c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021140:	f899 2001 	ldrb.w	r2, [r9, #1]
90021144:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021148:	9211      	str	r2, [sp, #68]	@ 0x44
9002114a:	b151      	cbz	r1, 90021162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002114c:	eb09 0203 	add.w	r2, r9, r3
90021150:	f819 3003 	ldrb.w	r3, [r9, r3]
90021154:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021158:	930f      	str	r3, [sp, #60]	@ 0x3c
9002115a:	7853      	ldrb	r3, [r2, #1]
9002115c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021160:	9312      	str	r3, [sp, #72]	@ 0x48
90021162:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021164:	fb10 f201 	smulbb	r2, r0, r1
90021168:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002116a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002116e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021172:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021176:	10d2      	asrs	r2, r2, #3
90021178:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002117c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021180:	ea4c 0c03 	orr.w	ip, ip, r3
90021184:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021186:	041b      	lsls	r3, r3, #16
90021188:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002118c:	4323      	orrs	r3, r4
9002118e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021190:	4353      	muls	r3, r2
90021192:	fb09 330c 	mla	r3, r9, ip, r3
90021196:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002119a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002119e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900211a2:	ea4c 0e0e 	orr.w	lr, ip, lr
900211a6:	f1c1 0c10 	rsb	ip, r1, #16
900211aa:	ebac 0c00 	sub.w	ip, ip, r0
900211ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900211b2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900211b6:	fb0c 3c0e 	mla	ip, ip, lr, r3
900211ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900211bc:	0418      	lsls	r0, r3, #16
900211be:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900211c2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900211c6:	4318      	orrs	r0, r3
900211c8:	fb02 c200 	mla	r2, r2, r0, ip
900211cc:	8838      	ldrh	r0, [r7, #0]
900211ce:	0d53      	lsrs	r3, r2, #21
900211d0:	0952      	lsrs	r2, r2, #5
900211d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900211d6:	1201      	asrs	r1, r0, #8
900211d8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900211dc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900211e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900211e4:	00c0      	lsls	r0, r0, #3
900211e6:	431a      	orrs	r2, r3
900211e8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900211ec:	fb11 f104 	smulbb	r1, r1, r4
900211f0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900211f4:	b292      	uxth	r2, r2
900211f6:	fb1e fe04 	smulbb	lr, lr, r4
900211fa:	b2c0      	uxtb	r0, r0
900211fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021200:	fb10 f004 	smulbb	r0, r0, r4
90021204:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021208:	fb0c 1c03 	mla	ip, ip, r3, r1
9002120c:	10d1      	asrs	r1, r2, #3
9002120e:	00d2      	lsls	r2, r2, #3
90021210:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021214:	fa1f fc8c 	uxth.w	ip, ip
90021218:	b2d2      	uxtb	r2, r2
9002121a:	fb01 e103 	mla	r1, r1, r3, lr
9002121e:	fb02 0303 	mla	r3, r2, r3, r0
90021222:	b289      	uxth	r1, r1
90021224:	b29a      	uxth	r2, r3
90021226:	f10c 0301 	add.w	r3, ip, #1
9002122a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002122e:	1c53      	adds	r3, r2, #1
90021230:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021234:	1c4a      	adds	r2, r1, #1
90021236:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002123a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002123e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021242:	0949      	lsrs	r1, r1, #5
90021244:	ea43 030c 	orr.w	r3, r3, ip
90021248:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002124c:	430b      	orrs	r3, r1
9002124e:	803b      	strh	r3, [r7, #0]
90021250:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021252:	3702      	adds	r7, #2
90021254:	f10b 3bff 	add.w	fp, fp, #4294967295
90021258:	449a      	add	sl, r3
9002125a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002125c:	441d      	add	r5, r3
9002125e:	e742      	b.n	900210e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021260:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021262:	f108 0802 	add.w	r8, r8, #2
90021266:	449a      	add	sl, r3
90021268:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002126a:	441d      	add	r5, r3
9002126c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002126e:	3b01      	subs	r3, #1
90021270:	9309      	str	r3, [sp, #36]	@ 0x24
90021272:	e718      	b.n	900210a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021274:	d023      	beq.n	900212be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021278:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002127a:	3b01      	subs	r3, #1
9002127c:	fb00 a003 	mla	r0, r0, r3, sl
90021280:	1400      	asrs	r0, r0, #16
90021282:	f53f af2d 	bmi.w	900210e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021286:	3901      	subs	r1, #1
90021288:	4288      	cmp	r0, r1
9002128a:	f6bf af29 	bge.w	900210e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002128e:	9926      	ldr	r1, [sp, #152]	@ 0x98
90021290:	fb01 5303 	mla	r3, r1, r3, r5
90021294:	141b      	asrs	r3, r3, #16
90021296:	f53f af23 	bmi.w	900210e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002129a:	3a01      	subs	r2, #1
9002129c:	4293      	cmp	r3, r2
9002129e:	f6bf af1f 	bge.w	900210e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900212a2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900212a6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
900212aa:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
900212ae:	f1be 0f00 	cmp.w	lr, #0
900212b2:	dc6c      	bgt.n	9002138e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900212b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900212b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900212ba:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900212be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900212c0:	2b00      	cmp	r3, #0
900212c2:	f340 810e 	ble.w	900214e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900212c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900212ca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900212cc:	ee30 0a04 	vadd.f32	s0, s0, s8
900212d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900212d4:	eef0 6a62 	vmov.f32	s13, s5
900212d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900212dc:	ee31 1a05 	vadd.f32	s2, s2, s10
900212e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900212e4:	ee16 aa90 	vmov	sl, s13
900212e8:	eef0 6a43 	vmov.f32	s13, s6
900212ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900212f0:	ee16 5a90 	vmov	r5, s13
900212f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900212f8:	ee61 7a27 	vmul.f32	s15, s2, s15
900212fc:	ee77 2a62 	vsub.f32	s5, s14, s5
90021300:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021308:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002130c:	ee12 2a90 	vmov	r2, s5
90021310:	eef0 2a47 	vmov.f32	s5, s14
90021314:	fb92 f3f3 	sdiv	r3, r2, r3
90021318:	ee13 2a10 	vmov	r2, s6
9002131c:	9325      	str	r3, [sp, #148]	@ 0x94
9002131e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021320:	eeb0 3a67 	vmov.f32	s6, s15
90021324:	fb92 f3f3 	sdiv	r3, r2, r3
90021328:	9326      	str	r3, [sp, #152]	@ 0x98
9002132a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002132c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002132e:	3b01      	subs	r3, #1
90021330:	930c      	str	r3, [sp, #48]	@ 0x30
90021332:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021334:	bf08      	it	eq
90021336:	4613      	moveq	r3, r2
90021338:	9309      	str	r3, [sp, #36]	@ 0x24
9002133a:	e6a6      	b.n	9002108a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002133c:	2900      	cmp	r1, #0
9002133e:	f43f af10 	beq.w	90021162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021342:	f819 3003 	ldrb.w	r3, [r9, r3]
90021346:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002134a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002134c:	e709      	b.n	90021162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002134e:	f112 0901 	adds.w	r9, r2, #1
90021352:	f53f af7d 	bmi.w	90021250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021356:	454b      	cmp	r3, r9
90021358:	f6ff af7a 	blt.w	90021250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002135c:	f11c 0901 	adds.w	r9, ip, #1
90021360:	f53f af76 	bmi.w	90021250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021364:	45ce      	cmp	lr, r9
90021366:	f6ff af73 	blt.w	90021250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002136a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002136c:	b21b      	sxth	r3, r3
9002136e:	9202      	str	r2, [sp, #8]
90021370:	fa0f f28e 	sxth.w	r2, lr
90021374:	9300      	str	r3, [sp, #0]
90021376:	4633      	mov	r3, r6
90021378:	9201      	str	r2, [sp, #4]
9002137a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002137c:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021380:	e9cd c003 	strd	ip, r0, [sp, #12]
90021384:	4639      	mov	r1, r7
90021386:	9816      	ldr	r0, [sp, #88]	@ 0x58
90021388:	f7ff fd8e 	bl	90020ea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9002138c:	e760      	b.n	90021250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002138e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021390:	ea4f 422a 	mov.w	r2, sl, asr #16
90021394:	1429      	asrs	r1, r5, #16
90021396:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021398:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002139c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900213a0:	f3c5 3003 	ubfx	r0, r5, #12, #4
900213a4:	fb03 2101 	mla	r1, r3, r1, r2
900213a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900213aa:	440a      	add	r2, r1
900213ac:	5c61      	ldrb	r1, [r4, r1]
900213ae:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900213b2:	f1bc 0f00 	cmp.w	ip, #0
900213b6:	f000 808c 	beq.w	900214d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900213ba:	7857      	ldrb	r7, [r2, #1]
900213bc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900213c0:	9413      	str	r4, [sp, #76]	@ 0x4c
900213c2:	b140      	cbz	r0, 900213d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900213c4:	18d7      	adds	r7, r2, r3
900213c6:	5cd3      	ldrb	r3, [r2, r3]
900213c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900213cc:	9310      	str	r3, [sp, #64]	@ 0x40
900213ce:	787b      	ldrb	r3, [r7, #1]
900213d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900213d4:	9314      	str	r3, [sp, #80]	@ 0x50
900213d6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900213d8:	fb1c f200 	smulbb	r2, ip, r0
900213dc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900213de:	f10e 3eff 	add.w	lr, lr, #4294967295
900213e2:	041f      	lsls	r7, r3, #16
900213e4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900213e8:	10d2      	asrs	r2, r2, #3
900213ea:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900213ee:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
900213f2:	431f      	orrs	r7, r3
900213f4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900213f8:	9317      	str	r3, [sp, #92]	@ 0x5c
900213fa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900213fc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900213fe:	041b      	lsls	r3, r3, #16
90021400:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021404:	ea43 030b 	orr.w	r3, r3, fp
90021408:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002140c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021410:	4353      	muls	r3, r2
90021412:	fb04 3707 	mla	r7, r4, r7, r3
90021416:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002141a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002141c:	ea43 0b01 	orr.w	fp, r3, r1
90021420:	f1c0 0110 	rsb	r1, r0, #16
90021424:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021426:	eba1 0c0c 	sub.w	ip, r1, ip
9002142a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002142e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021432:	fb0c 770b 	mla	r7, ip, fp, r7
90021436:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002143a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002143e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021442:	ea4c 0c0b 	orr.w	ip, ip, fp
90021446:	fb02 770c 	mla	r7, r2, ip, r7
9002144a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002144c:	0d79      	lsrs	r1, r7, #21
9002144e:	8812      	ldrh	r2, [r2, #0]
90021450:	097f      	lsrs	r7, r7, #5
90021452:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021456:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002145a:	430f      	orrs	r7, r1
9002145c:	1211      	asrs	r1, r2, #8
9002145e:	b2bb      	uxth	r3, r7
90021460:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021464:	10d7      	asrs	r7, r2, #3
90021466:	fb11 f104 	smulbb	r1, r1, r4
9002146a:	1218      	asrs	r0, r3, #8
9002146c:	00d2      	lsls	r2, r2, #3
9002146e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021472:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021476:	fb17 f704 	smulbb	r7, r7, r4
9002147a:	b2d2      	uxtb	r2, r2
9002147c:	fb00 1009 	mla	r0, r0, r9, r1
90021480:	10d9      	asrs	r1, r3, #3
90021482:	fb12 f204 	smulbb	r2, r2, r4
90021486:	00db      	lsls	r3, r3, #3
90021488:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002148c:	b280      	uxth	r0, r0
9002148e:	b2db      	uxtb	r3, r3
90021490:	fb01 7109 	mla	r1, r1, r9, r7
90021494:	fb03 2309 	mla	r3, r3, r9, r2
90021498:	1c42      	adds	r2, r0, #1
9002149a:	b289      	uxth	r1, r1
9002149c:	b29b      	uxth	r3, r3
9002149e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900214a2:	1c4f      	adds	r7, r1, #1
900214a4:	1c5a      	adds	r2, r3, #1
900214a6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900214aa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900214ae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900214b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900214b4:	0949      	lsrs	r1, r1, #5
900214b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900214ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900214be:	4310      	orrs	r0, r2
900214c0:	4308      	orrs	r0, r1
900214c2:	f823 0b02 	strh.w	r0, [r3], #2
900214c6:	930e      	str	r3, [sp, #56]	@ 0x38
900214c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900214ca:	449a      	add	sl, r3
900214cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900214ce:	441d      	add	r5, r3
900214d0:	e6ed      	b.n	900212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900214d2:	2800      	cmp	r0, #0
900214d4:	f43f af7f 	beq.w	900213d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214d8:	5cd3      	ldrb	r3, [r2, r3]
900214da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900214de:	9310      	str	r3, [sp, #64]	@ 0x40
900214e0:	e779      	b.n	900213d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214e2:	b019      	add	sp, #100	@ 0x64
900214e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900214e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900214e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900214ec:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
900214f0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900214f4:	f1b8 0f00 	cmp.w	r8, #0
900214f8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
900214fc:	fb08 470e 	mla	r7, r8, lr, r4
90021500:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90021504:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90021508:	eb02 0907 	add.w	r9, r2, r7
9002150c:	8808      	ldrh	r0, [r1, #0]
9002150e:	db67      	blt.n	900215e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021510:	45c2      	cmp	sl, r8
90021512:	dd65      	ble.n	900215e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021514:	2c00      	cmp	r4, #0
90021516:	db61      	blt.n	900215dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021518:	45a6      	cmp	lr, r4
9002151a:	dd5f      	ble.n	900215dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002151c:	5dd2      	ldrb	r2, [r2, r7]
9002151e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021522:	1c62      	adds	r2, r4, #1
90021524:	d45f      	bmi.n	900215e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021526:	4596      	cmp	lr, r2
90021528:	dd5d      	ble.n	900215e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002152a:	2d00      	cmp	r5, #0
9002152c:	d05b      	beq.n	900215e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002152e:	f899 2001 	ldrb.w	r2, [r9, #1]
90021532:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021536:	f118 0801 	adds.w	r8, r8, #1
9002153a:	d458      	bmi.n	900215ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002153c:	45c2      	cmp	sl, r8
9002153e:	dd56      	ble.n	900215ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021540:	2e00      	cmp	r6, #0
90021542:	d054      	beq.n	900215ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021544:	2c00      	cmp	r4, #0
90021546:	db50      	blt.n	900215ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021548:	45a6      	cmp	lr, r4
9002154a:	dd4e      	ble.n	900215ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002154c:	f819 200e 	ldrb.w	r2, [r9, lr]
90021550:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021554:	3401      	adds	r4, #1
90021556:	d407      	bmi.n	90021568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021558:	45a6      	cmp	lr, r4
9002155a:	dd05      	ble.n	90021568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002155c:	b125      	cbz	r5, 90021568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002155e:	44ce      	add	lr, r9
90021560:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021564:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021568:	fb15 f406 	smulbb	r4, r5, r6
9002156c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021570:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021574:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021578:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002157c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90021580:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90021584:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90021588:	ea43 0c0c 	orr.w	ip, r3, ip
9002158c:	f1c6 0310 	rsb	r3, r6, #16
90021590:	ea4e 0707 	orr.w	r7, lr, r7
90021594:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90021598:	1b5b      	subs	r3, r3, r5
9002159a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002159e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900215a2:	437d      	muls	r5, r7
900215a4:	fb03 5c0c 	mla	ip, r3, ip, r5
900215a8:	0403      	lsls	r3, r0, #16
900215aa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900215ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900215b2:	4318      	orrs	r0, r3
900215b4:	0413      	lsls	r3, r2, #16
900215b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900215ba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900215be:	fb04 c000 	mla	r0, r4, r0, ip
900215c2:	4313      	orrs	r3, r2
900215c4:	fb06 0003 	mla	r0, r6, r3, r0
900215c8:	0d43      	lsrs	r3, r0, #21
900215ca:	0940      	lsrs	r0, r0, #5
900215cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900215d0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900215d4:	4318      	orrs	r0, r3
900215d6:	8008      	strh	r0, [r1, #0]
900215d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900215dc:	4684      	mov	ip, r0
900215de:	e7a0      	b.n	90021522 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900215e0:	4607      	mov	r7, r0
900215e2:	4684      	mov	ip, r0
900215e4:	e7a7      	b.n	90021536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900215e6:	4607      	mov	r7, r0
900215e8:	e7a5      	b.n	90021536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900215ea:	4602      	mov	r2, r0
900215ec:	e7b2      	b.n	90021554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900215ee:	4602      	mov	r2, r0
900215f0:	e7ba      	b.n	90021568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900215f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900215f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900215f6:	b093      	sub	sp, #76	@ 0x4c
900215f8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900215fc:	920f      	str	r2, [sp, #60]	@ 0x3c
900215fe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021600:	9010      	str	r0, [sp, #64]	@ 0x40
90021602:	9108      	str	r1, [sp, #32]
90021604:	6850      	ldr	r0, [r2, #4]
90021606:	9306      	str	r3, [sp, #24]
90021608:	6812      	ldr	r2, [r2, #0]
9002160a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002160e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90021612:	fb00 1303 	mla	r3, r0, r3, r1
90021616:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002161a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002161c:	681b      	ldr	r3, [r3, #0]
9002161e:	9307      	str	r3, [sp, #28]
90021620:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021622:	685f      	ldr	r7, [r3, #4]
90021624:	3704      	adds	r7, #4
90021626:	9b08      	ldr	r3, [sp, #32]
90021628:	2b00      	cmp	r3, #0
9002162a:	dc03      	bgt.n	90021634 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002162c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002162e:	2b00      	cmp	r3, #0
90021630:	f340 81b2 	ble.w	90021998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021634:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021636:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002163a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002163e:	1e48      	subs	r0, r1, #1
90021640:	f102 3cff 	add.w	ip, r2, #4294967295
90021644:	9b06      	ldr	r3, [sp, #24]
90021646:	2b00      	cmp	r3, #0
90021648:	f340 80a9 	ble.w	9002179e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002164c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021650:	ea4f 4326 	mov.w	r3, r6, asr #16
90021654:	d406      	bmi.n	90021664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021656:	4586      	cmp	lr, r0
90021658:	da04      	bge.n	90021664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002165a:	2b00      	cmp	r3, #0
9002165c:	db02      	blt.n	90021664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002165e:	4563      	cmp	r3, ip
90021660:	f2c0 809e 	blt.w	900217a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021664:	f11e 0e01 	adds.w	lr, lr, #1
90021668:	f100 808f 	bmi.w	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002166c:	4571      	cmp	r1, lr
9002166e:	f2c0 808c 	blt.w	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021672:	3301      	adds	r3, #1
90021674:	f100 8089 	bmi.w	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021678:	429a      	cmp	r2, r3
9002167a:	f2c0 8086 	blt.w	9002178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002167e:	f8dd b018 	ldr.w	fp, [sp, #24]
90021682:	46c8      	mov	r8, r9
90021684:	f1bb 0f00 	cmp.w	fp, #0
90021688:	f340 80a6 	ble.w	900217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9002168c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9002168e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90021692:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021694:	f3c4 3003 	ubfx	r0, r4, #12, #4
90021698:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002169c:	1422      	asrs	r2, r4, #16
9002169e:	f3c6 3103 	ubfx	r1, r6, #12, #4
900216a2:	689b      	ldr	r3, [r3, #8]
900216a4:	f100 80e3 	bmi.w	9002186e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900216a8:	f103 3aff 	add.w	sl, r3, #4294967295
900216ac:	4552      	cmp	r2, sl
900216ae:	f280 80de 	bge.w	9002186e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900216b2:	f1bc 0f00 	cmp.w	ip, #0
900216b6:	f2c0 80da 	blt.w	9002186e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900216ba:	f10e 3aff 	add.w	sl, lr, #4294967295
900216be:	45d4      	cmp	ip, sl
900216c0:	f280 80d5 	bge.w	9002186e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900216c4:	b21b      	sxth	r3, r3
900216c6:	9d07      	ldr	r5, [sp, #28]
900216c8:	fb0c 2203 	mla	r2, ip, r3, r2
900216cc:	eb05 0a02 	add.w	sl, r5, r2
900216d0:	5caa      	ldrb	r2, [r5, r2]
900216d2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900216d6:	2800      	cmp	r0, #0
900216d8:	f000 80c0 	beq.w	9002185c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900216dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
900216e0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900216e4:	920b      	str	r2, [sp, #44]	@ 0x2c
900216e6:	b151      	cbz	r1, 900216fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900216e8:	eb0a 0203 	add.w	r2, sl, r3
900216ec:	f81a 3003 	ldrb.w	r3, [sl, r3]
900216f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900216f4:	9309      	str	r3, [sp, #36]	@ 0x24
900216f6:	7853      	ldrb	r3, [r2, #1]
900216f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900216fc:	930c      	str	r3, [sp, #48]	@ 0x30
900216fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021700:	fb10 f201 	smulbb	r2, r0, r1
90021704:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90021706:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002170a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002170e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021712:	10d2      	asrs	r2, r2, #3
90021714:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021718:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002171c:	ea4c 0c03 	orr.w	ip, ip, r3
90021720:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021722:	041b      	lsls	r3, r3, #16
90021724:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021728:	432b      	orrs	r3, r5
9002172a:	4353      	muls	r3, r2
9002172c:	fb0a 330c 	mla	r3, sl, ip, r3
90021730:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021734:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021738:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002173c:	ea4c 0e0e 	orr.w	lr, ip, lr
90021740:	f1c1 0c10 	rsb	ip, r1, #16
90021744:	ebac 0c00 	sub.w	ip, ip, r0
90021748:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002174c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021750:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021754:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021756:	0418      	lsls	r0, r3, #16
90021758:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002175c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021760:	4318      	orrs	r0, r3
90021762:	fb02 c200 	mla	r2, r2, r0, ip
90021766:	0d53      	lsrs	r3, r2, #21
90021768:	0952      	lsrs	r2, r2, #5
9002176a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002176e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021772:	431a      	orrs	r2, r3
90021774:	f8a8 2000 	strh.w	r2, [r8]
90021778:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002177a:	f108 0802 	add.w	r8, r8, #2
9002177e:	f10b 3bff 	add.w	fp, fp, #4294967295
90021782:	441c      	add	r4, r3
90021784:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021786:	441e      	add	r6, r3
90021788:	e77c      	b.n	90021684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002178a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002178c:	f109 0902 	add.w	r9, r9, #2
90021790:	441c      	add	r4, r3
90021792:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021794:	441e      	add	r6, r3
90021796:	9b06      	ldr	r3, [sp, #24]
90021798:	3b01      	subs	r3, #1
9002179a:	9306      	str	r3, [sp, #24]
9002179c:	e752      	b.n	90021644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002179e:	d020      	beq.n	900217e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900217a0:	9b06      	ldr	r3, [sp, #24]
900217a2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900217a4:	3b01      	subs	r3, #1
900217a6:	fb00 4003 	mla	r0, r0, r3, r4
900217aa:	1400      	asrs	r0, r0, #16
900217ac:	f53f af67 	bmi.w	9002167e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900217b0:	3901      	subs	r1, #1
900217b2:	4288      	cmp	r0, r1
900217b4:	f6bf af63 	bge.w	9002167e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900217b8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900217ba:	fb01 6303 	mla	r3, r1, r3, r6
900217be:	141b      	asrs	r3, r3, #16
900217c0:	f53f af5d 	bmi.w	9002167e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900217c4:	3a01      	subs	r2, #1
900217c6:	4293      	cmp	r3, r2
900217c8:	f6bf af59 	bge.w	9002167e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900217cc:	f8dd 8018 	ldr.w	r8, [sp, #24]
900217d0:	46ca      	mov	sl, r9
900217d2:	f1b8 0f00 	cmp.w	r8, #0
900217d6:	dc67      	bgt.n	900218a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900217d8:	9b06      	ldr	r3, [sp, #24]
900217da:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900217de:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900217e2:	9b08      	ldr	r3, [sp, #32]
900217e4:	2b00      	cmp	r3, #0
900217e6:	f340 80d7 	ble.w	90021998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900217ea:	ee30 0a04 	vadd.f32	s0, s0, s8
900217ee:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900217f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900217f4:	eeb0 6a62 	vmov.f32	s12, s5
900217f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
900217fc:	ee31 1a05 	vadd.f32	s2, s2, s10
90021800:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021804:	ee16 4a10 	vmov	r4, s12
90021808:	eeb0 6a43 	vmov.f32	s12, s6
9002180c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021810:	ee16 6a10 	vmov	r6, s12
90021814:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021818:	ee61 7a27 	vmul.f32	s15, s2, s15
9002181c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021820:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021824:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021828:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002182c:	ee12 2a90 	vmov	r2, s5
90021830:	eef0 2a47 	vmov.f32	s5, s14
90021834:	fb92 f3f3 	sdiv	r3, r2, r3
90021838:	ee13 2a10 	vmov	r2, s6
9002183c:	931f      	str	r3, [sp, #124]	@ 0x7c
9002183e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021840:	eeb0 3a67 	vmov.f32	s6, s15
90021844:	fb92 f3f3 	sdiv	r3, r2, r3
90021848:	9320      	str	r3, [sp, #128]	@ 0x80
9002184a:	9b08      	ldr	r3, [sp, #32]
9002184c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002184e:	3b01      	subs	r3, #1
90021850:	9308      	str	r3, [sp, #32]
90021852:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021854:	bf08      	it	eq
90021856:	4613      	moveq	r3, r2
90021858:	9306      	str	r3, [sp, #24]
9002185a:	e6e4      	b.n	90021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002185c:	2900      	cmp	r1, #0
9002185e:	f43f af4e 	beq.w	900216fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021862:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021866:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002186a:	9309      	str	r3, [sp, #36]	@ 0x24
9002186c:	e747      	b.n	900216fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002186e:	f112 0a01 	adds.w	sl, r2, #1
90021872:	d481      	bmi.n	90021778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021874:	4553      	cmp	r3, sl
90021876:	f6ff af7f 	blt.w	90021778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002187a:	f11c 0a01 	adds.w	sl, ip, #1
9002187e:	f53f af7b 	bmi.w	90021778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021882:	45d6      	cmp	lr, sl
90021884:	f6ff af78 	blt.w	90021778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021888:	b21b      	sxth	r3, r3
9002188a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002188e:	fa0f f28e 	sxth.w	r2, lr
90021892:	9300      	str	r3, [sp, #0]
90021894:	463b      	mov	r3, r7
90021896:	9201      	str	r2, [sp, #4]
90021898:	9a07      	ldr	r2, [sp, #28]
9002189a:	e9cd 0104 	strd	r0, r1, [sp, #16]
9002189e:	4641      	mov	r1, r8
900218a0:	9810      	ldr	r0, [sp, #64]	@ 0x40
900218a2:	f7ff fe21 	bl	900214e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900218a6:	e767      	b.n	90021778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900218a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900218aa:	1422      	asrs	r2, r4, #16
900218ac:	1431      	asrs	r1, r6, #16
900218ae:	9d07      	ldr	r5, [sp, #28]
900218b0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900218b4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900218b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900218bc:	fb03 2101 	mla	r1, r3, r1, r2
900218c0:	9a07      	ldr	r2, [sp, #28]
900218c2:	440a      	add	r2, r1
900218c4:	5c69      	ldrb	r1, [r5, r1]
900218c6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900218ca:	f1be 0f00 	cmp.w	lr, #0
900218ce:	d05c      	beq.n	9002198a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900218d0:	f892 c001 	ldrb.w	ip, [r2, #1]
900218d4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900218d8:	950d      	str	r5, [sp, #52]	@ 0x34
900218da:	b150      	cbz	r0, 900218f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900218dc:	eb02 0c03 	add.w	ip, r2, r3
900218e0:	5cd3      	ldrb	r3, [r2, r3]
900218e2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900218e6:	930a      	str	r3, [sp, #40]	@ 0x28
900218e8:	f89c 3001 	ldrb.w	r3, [ip, #1]
900218ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900218f0:	930e      	str	r3, [sp, #56]	@ 0x38
900218f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900218f4:	fb1e f200 	smulbb	r2, lr, r0
900218f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900218fa:	f108 38ff 	add.w	r8, r8, #4294967295
900218fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021902:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021906:	10d2      	asrs	r2, r2, #3
90021908:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002190c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021910:	ea4c 0c03 	orr.w	ip, ip, r3
90021914:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90021918:	9311      	str	r3, [sp, #68]	@ 0x44
9002191a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002191c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002191e:	041b      	lsls	r3, r3, #16
90021920:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021924:	ea43 030b 	orr.w	r3, r3, fp
90021928:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002192c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021930:	4353      	muls	r3, r2
90021932:	fb05 3c0c 	mla	ip, r5, ip, r3
90021936:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002193a:	ea43 0b01 	orr.w	fp, r3, r1
9002193e:	f1c0 0110 	rsb	r1, r0, #16
90021942:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021944:	eba1 0e0e 	sub.w	lr, r1, lr
90021948:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9002194c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021950:	fb0e cc0b 	mla	ip, lr, fp, ip
90021954:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90021958:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9002195c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90021960:	ea4b 0e0e 	orr.w	lr, fp, lr
90021964:	fb02 cc0e 	mla	ip, r2, lr, ip
90021968:	ea4f 535c 	mov.w	r3, ip, lsr #21
9002196c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90021970:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021974:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021978:	ea43 0c0c 	orr.w	ip, r3, ip
9002197c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002197e:	441c      	add	r4, r3
90021980:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021982:	f82a cb02 	strh.w	ip, [sl], #2
90021986:	441e      	add	r6, r3
90021988:	e723      	b.n	900217d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002198a:	2800      	cmp	r0, #0
9002198c:	d0b1      	beq.n	900218f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002198e:	5cd3      	ldrb	r3, [r2, r3]
90021990:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021994:	930a      	str	r3, [sp, #40]	@ 0x28
90021996:	e7ac      	b.n	900218f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90021998:	b013      	add	sp, #76	@ 0x4c
9002199a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002199e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9002199e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900219a2:	880d      	ldrh	r5, [r1, #0]
900219a4:	b087      	sub	sp, #28
900219a6:	10ef      	asrs	r7, r5, #3
900219a8:	9103      	str	r1, [sp, #12]
900219aa:	ea4f 2a25 	mov.w	sl, r5, asr #8
900219ae:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
900219b2:	00ed      	lsls	r5, r5, #3
900219b4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900219b8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900219bc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
900219c0:	b2ed      	uxtb	r5, r5
900219c2:	9701      	str	r7, [sp, #4]
900219c4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
900219c8:	9502      	str	r5, [sp, #8]
900219ca:	9d01      	ldr	r5, [sp, #4]
900219cc:	9902      	ldr	r1, [sp, #8]
900219ce:	022d      	lsls	r5, r5, #8
900219d0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
900219d4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
900219d8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900219dc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
900219e0:	430d      	orrs	r5, r1
900219e2:	fb06 0709 	mla	r7, r6, r9, r0
900219e6:	2e00      	cmp	r6, #0
900219e8:	9505      	str	r5, [sp, #20]
900219ea:	eb02 0c07 	add.w	ip, r2, r7
900219ee:	f2c0 80b6 	blt.w	90021b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900219f2:	45b3      	cmp	fp, r6
900219f4:	f340 80b3 	ble.w	90021b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900219f8:	2800      	cmp	r0, #0
900219fa:	f2c0 80ae 	blt.w	90021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900219fe:	4581      	cmp	r9, r0
90021a00:	f340 80ab 	ble.w	90021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90021a04:	5dd7      	ldrb	r7, [r2, r7]
90021a06:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021a0a:	441f      	add	r7, r3
90021a0c:	1c42      	adds	r2, r0, #1
90021a0e:	f100 80a9 	bmi.w	90021b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021a12:	4591      	cmp	r9, r2
90021a14:	f340 80a6 	ble.w	90021b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021a18:	2c00      	cmp	r4, #0
90021a1a:	f000 80a3 	beq.w	90021b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021a1e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021a22:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021a26:	441d      	add	r5, r3
90021a28:	3601      	adds	r6, #1
90021a2a:	f100 809f 	bmi.w	90021b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021a2e:	45b3      	cmp	fp, r6
90021a30:	f340 809c 	ble.w	90021b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021a34:	f1be 0f00 	cmp.w	lr, #0
90021a38:	f000 8098 	beq.w	90021b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021a3c:	2800      	cmp	r0, #0
90021a3e:	f2c0 8093 	blt.w	90021b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021a42:	4581      	cmp	r9, r0
90021a44:	f340 8090 	ble.w	90021b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021a48:	f81c 6009 	ldrb.w	r6, [ip, r9]
90021a4c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021a50:	441e      	add	r6, r3
90021a52:	3001      	adds	r0, #1
90021a54:	f100 808d 	bmi.w	90021b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021a58:	4581      	cmp	r9, r0
90021a5a:	f340 808a 	ble.w	90021b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021a5e:	2c00      	cmp	r4, #0
90021a60:	f000 8087 	beq.w	90021b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021a64:	44e1      	add	r9, ip
90021a66:	f899 2001 	ldrb.w	r2, [r9, #1]
90021a6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021a6e:	4413      	add	r3, r2
90021a70:	b2a4      	uxth	r4, r4
90021a72:	f897 c002 	ldrb.w	ip, [r7, #2]
90021a76:	fa1f fe8e 	uxth.w	lr, lr
90021a7a:	9901      	ldr	r1, [sp, #4]
90021a7c:	fb04 fb0e 	mul.w	fp, r4, lr
90021a80:	0124      	lsls	r4, r4, #4
90021a82:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90021a86:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90021a8a:	eba4 040b 	sub.w	r4, r4, fp
90021a8e:	fa1f f08e 	uxth.w	r0, lr
90021a92:	b2a2      	uxth	r2, r4
90021a94:	78ac      	ldrb	r4, [r5, #2]
90021a96:	eba9 0900 	sub.w	r9, r9, r0
90021a9a:	fa1f fe88 	uxth.w	lr, r8
90021a9e:	4354      	muls	r4, r2
90021aa0:	ea6f 0808 	mvn.w	r8, r8
90021aa4:	fa1f f989 	uxth.w	r9, r9
90021aa8:	fa5f f888 	uxtb.w	r8, r8
90021aac:	fb09 440c 	mla	r4, r9, ip, r4
90021ab0:	f896 c002 	ldrb.w	ip, [r6, #2]
90021ab4:	fb1a fa08 	smulbb	sl, sl, r8
90021ab8:	fb00 440c 	mla	r4, r0, ip, r4
90021abc:	f893 c002 	ldrb.w	ip, [r3, #2]
90021ac0:	fb0b 4c0c 	mla	ip, fp, ip, r4
90021ac4:	787c      	ldrb	r4, [r7, #1]
90021ac6:	783f      	ldrb	r7, [r7, #0]
90021ac8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90021acc:	fb0c ac0e 	mla	ip, ip, lr, sl
90021ad0:	f895 a001 	ldrb.w	sl, [r5, #1]
90021ad4:	782d      	ldrb	r5, [r5, #0]
90021ad6:	fb02 fa0a 	mul.w	sl, r2, sl
90021ada:	fa1f fc8c 	uxth.w	ip, ip
90021ade:	436a      	muls	r2, r5
90021ae0:	7835      	ldrb	r5, [r6, #0]
90021ae2:	fb09 aa04 	mla	sl, r9, r4, sl
90021ae6:	7874      	ldrb	r4, [r6, #1]
90021ae8:	fb09 2207 	mla	r2, r9, r7, r2
90021aec:	fb00 aa04 	mla	sl, r0, r4, sl
90021af0:	785c      	ldrb	r4, [r3, #1]
90021af2:	fb00 2005 	mla	r0, r0, r5, r2
90021af6:	781b      	ldrb	r3, [r3, #0]
90021af8:	fb0b a404 	mla	r4, fp, r4, sl
90021afc:	fb11 fa08 	smulbb	sl, r1, r8
90021b00:	fb0b 0b03 	mla	fp, fp, r3, r0
90021b04:	9b02      	ldr	r3, [sp, #8]
90021b06:	f3c4 2407 	ubfx	r4, r4, #8, #8
90021b0a:	fb13 f808 	smulbb	r8, r3, r8
90021b0e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90021b12:	fb04 a40e 	mla	r4, r4, lr, sl
90021b16:	f10c 0301 	add.w	r3, ip, #1
90021b1a:	fb0b 8e0e 	mla	lr, fp, lr, r8
90021b1e:	b2a4      	uxth	r4, r4
90021b20:	fa1f fe8e 	uxth.w	lr, lr
90021b24:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021b28:	f104 0a01 	add.w	sl, r4, #1
90021b2c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90021b30:	f10e 0c01 	add.w	ip, lr, #1
90021b34:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90021b38:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021b3c:	0964      	lsrs	r4, r4, #5
90021b3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90021b42:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90021b46:	ea4c 0c03 	orr.w	ip, ip, r3
90021b4a:	9b03      	ldr	r3, [sp, #12]
90021b4c:	ea4c 0c04 	orr.w	ip, ip, r4
90021b50:	f8a3 c000 	strh.w	ip, [r3]
90021b54:	b007      	add	sp, #28
90021b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b5a:	af05      	add	r7, sp, #20
90021b5c:	e756      	b.n	90021a0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90021b5e:	ad05      	add	r5, sp, #20
90021b60:	462f      	mov	r7, r5
90021b62:	e761      	b.n	90021a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90021b64:	ad05      	add	r5, sp, #20
90021b66:	e75f      	b.n	90021a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90021b68:	ae05      	add	r6, sp, #20
90021b6a:	e772      	b.n	90021a52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90021b6c:	ab05      	add	r3, sp, #20
90021b6e:	461e      	mov	r6, r3
90021b70:	e77e      	b.n	90021a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90021b72:	ab05      	add	r3, sp, #20
90021b74:	e77c      	b.n	90021a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90021b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b7a:	b095      	sub	sp, #84	@ 0x54
90021b7c:	9212      	str	r2, [sp, #72]	@ 0x48
90021b7e:	9309      	str	r3, [sp, #36]	@ 0x24
90021b80:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90021b82:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90021b86:	9013      	str	r0, [sp, #76]	@ 0x4c
90021b88:	930f      	str	r3, [sp, #60]	@ 0x3c
90021b8a:	6850      	ldr	r0, [r2, #4]
90021b8c:	910e      	str	r1, [sp, #56]	@ 0x38
90021b8e:	6812      	ldr	r2, [r2, #0]
90021b90:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90021b94:	fb00 1303 	mla	r3, r0, r3, r1
90021b98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021b9c:	930a      	str	r3, [sp, #40]	@ 0x28
90021b9e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ba0:	681b      	ldr	r3, [r3, #0]
90021ba2:	930d      	str	r3, [sp, #52]	@ 0x34
90021ba4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ba6:	685c      	ldr	r4, [r3, #4]
90021ba8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021baa:	3404      	adds	r4, #4
90021bac:	43db      	mvns	r3, r3
90021bae:	b2db      	uxtb	r3, r3
90021bb0:	930b      	str	r3, [sp, #44]	@ 0x2c
90021bb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021bb4:	2b00      	cmp	r3, #0
90021bb6:	dc03      	bgt.n	90021bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021bb8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021bba:	2b00      	cmp	r3, #0
90021bbc:	f340 8255 	ble.w	9002206a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90021bc0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021bc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021bc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021bca:	1e48      	subs	r0, r1, #1
90021bcc:	1e55      	subs	r5, r2, #1
90021bce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021bd0:	2b00      	cmp	r3, #0
90021bd2:	f340 80f9 	ble.w	90021dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90021bd6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90021bd8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021bda:	1436      	asrs	r6, r6, #16
90021bdc:	ea4f 4323 	mov.w	r3, r3, asr #16
90021be0:	d406      	bmi.n	90021bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021be2:	4286      	cmp	r6, r0
90021be4:	da04      	bge.n	90021bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021be6:	2b00      	cmp	r3, #0
90021be8:	db02      	blt.n	90021bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021bea:	42ab      	cmp	r3, r5
90021bec:	f2c0 80ed 	blt.w	90021dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90021bf0:	3601      	adds	r6, #1
90021bf2:	f100 80da 	bmi.w	90021daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021bf6:	42b1      	cmp	r1, r6
90021bf8:	f2c0 80d7 	blt.w	90021daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021bfc:	3301      	adds	r3, #1
90021bfe:	f100 80d4 	bmi.w	90021daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021c02:	429a      	cmp	r2, r3
90021c04:	f2c0 80d1 	blt.w	90021daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021c08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021c0a:	9311      	str	r3, [sp, #68]	@ 0x44
90021c0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021c0e:	930c      	str	r3, [sp, #48]	@ 0x30
90021c10:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021c12:	2b00      	cmp	r3, #0
90021c14:	f340 80fa 	ble.w	90021e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90021c18:	9826      	ldr	r0, [sp, #152]	@ 0x98
90021c1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021c1c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90021c1e:	68c6      	ldr	r6, [r0, #12]
90021c20:	141d      	asrs	r5, r3, #16
90021c22:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90021c24:	f3c2 3103 	ubfx	r1, r2, #12, #4
90021c28:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021c2a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90021c2c:	1400      	asrs	r0, r0, #16
90021c2e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90021c32:	6892      	ldr	r2, [r2, #8]
90021c34:	f100 813e 	bmi.w	90021eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021c38:	1e57      	subs	r7, r2, #1
90021c3a:	42b8      	cmp	r0, r7
90021c3c:	f280 813a 	bge.w	90021eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021c40:	2d00      	cmp	r5, #0
90021c42:	f2c0 8137 	blt.w	90021eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021c46:	1e77      	subs	r7, r6, #1
90021c48:	42bd      	cmp	r5, r7
90021c4a:	f280 8133 	bge.w	90021eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021c4e:	b212      	sxth	r2, r2
90021c50:	fb05 0002 	mla	r0, r5, r2, r0
90021c54:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90021c56:	f815 a000 	ldrb.w	sl, [r5, r0]
90021c5a:	182e      	adds	r6, r5, r0
90021c5c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90021c60:	eb04 050a 	add.w	r5, r4, sl
90021c64:	2b00      	cmp	r3, #0
90021c66:	f000 8117 	beq.w	90021e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90021c6a:	f896 c001 	ldrb.w	ip, [r6, #1]
90021c6e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90021c72:	44a4      	add	ip, r4
90021c74:	2900      	cmp	r1, #0
90021c76:	f000 8117 	beq.w	90021ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90021c7a:	18b0      	adds	r0, r6, r2
90021c7c:	5cb2      	ldrb	r2, [r6, r2]
90021c7e:	7840      	ldrb	r0, [r0, #1]
90021c80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021c84:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021c88:	4422      	add	r2, r4
90021c8a:	4420      	add	r0, r4
90021c8c:	b29b      	uxth	r3, r3
90021c8e:	f89c 7002 	ldrb.w	r7, [ip, #2]
90021c92:	b289      	uxth	r1, r1
90021c94:	f895 b002 	ldrb.w	fp, [r5, #2]
90021c98:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021c9a:	fb03 f901 	mul.w	r9, r3, r1
90021c9e:	011b      	lsls	r3, r3, #4
90021ca0:	f8b6 e000 	ldrh.w	lr, [r6]
90021ca4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021ca8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90021cac:	eba3 0309 	sub.w	r3, r3, r9
90021cb0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90021cb4:	b289      	uxth	r1, r1
90021cb6:	f814 a00a 	ldrb.w	sl, [r4, sl]
90021cba:	b29b      	uxth	r3, r3
90021cbc:	eba8 0801 	sub.w	r8, r8, r1
90021cc0:	435f      	muls	r7, r3
90021cc2:	fa1f f888 	uxth.w	r8, r8
90021cc6:	9310      	str	r3, [sp, #64]	@ 0x40
90021cc8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021cca:	fb08 770b 	mla	r7, r8, fp, r7
90021cce:	f892 b002 	ldrb.w	fp, [r2, #2]
90021cd2:	fb01 770b 	mla	r7, r1, fp, r7
90021cd6:	f890 b002 	ldrb.w	fp, [r0, #2]
90021cda:	fb09 770b 	mla	r7, r9, fp, r7
90021cde:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90021ce2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90021ce6:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021cea:	fb1b fb03 	smulbb	fp, fp, r3
90021cee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021cf0:	fb07 b706 	mla	r7, r7, r6, fp
90021cf4:	f895 b001 	ldrb.w	fp, [r5, #1]
90021cf8:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021cfc:	f89c c000 	ldrb.w	ip, [ip]
90021d00:	b2bf      	uxth	r7, r7
90021d02:	435d      	muls	r5, r3
90021d04:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021d06:	fb08 550b 	mla	r5, r8, fp, r5
90021d0a:	f892 b001 	ldrb.w	fp, [r2, #1]
90021d0e:	fb01 550b 	mla	r5, r1, fp, r5
90021d12:	f890 b001 	ldrb.w	fp, [r0, #1]
90021d16:	fb09 550b 	mla	r5, r9, fp, r5
90021d1a:	ea4f 0bee 	mov.w	fp, lr, asr #3
90021d1e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90021d22:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90021d26:	f3c5 2507 	ubfx	r5, r5, #8, #8
90021d2a:	fa5f fe8e 	uxtb.w	lr, lr
90021d2e:	fb1b fb03 	smulbb	fp, fp, r3
90021d32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021d34:	fb03 f30c 	mul.w	r3, r3, ip
90021d38:	f892 c000 	ldrb.w	ip, [r2]
90021d3c:	fb05 b506 	mla	r5, r5, r6, fp
90021d40:	fb08 330a 	mla	r3, r8, sl, r3
90021d44:	b2ad      	uxth	r5, r5
90021d46:	fb01 330c 	mla	r3, r1, ip, r3
90021d4a:	f890 c000 	ldrb.w	ip, [r0]
90021d4e:	f105 0b01 	add.w	fp, r5, #1
90021d52:	fb09 3c0c 	mla	ip, r9, ip, r3
90021d56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021d58:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90021d5c:	fb1e fe03 	smulbb	lr, lr, r3
90021d60:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90021d64:	1c7b      	adds	r3, r7, #1
90021d66:	096d      	lsrs	r5, r5, #5
90021d68:	fb0c e606 	mla	r6, ip, r6, lr
90021d6c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90021d70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021d74:	b2b6      	uxth	r6, r6
90021d76:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90021d7a:	1c77      	adds	r7, r6, #1
90021d7c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90021d80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021d84:	431f      	orrs	r7, r3
90021d86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021d88:	433d      	orrs	r5, r7
90021d8a:	801d      	strh	r5, [r3, #0]
90021d8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021d8e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021d90:	3302      	adds	r3, #2
90021d92:	930c      	str	r3, [sp, #48]	@ 0x30
90021d94:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021d96:	4413      	add	r3, r2
90021d98:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90021d9a:	931f      	str	r3, [sp, #124]	@ 0x7c
90021d9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021d9e:	4413      	add	r3, r2
90021da0:	9320      	str	r3, [sp, #128]	@ 0x80
90021da2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021da4:	3b01      	subs	r3, #1
90021da6:	9311      	str	r3, [sp, #68]	@ 0x44
90021da8:	e732      	b.n	90021c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021daa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021dac:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90021dae:	4433      	add	r3, r6
90021db0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90021db2:	931f      	str	r3, [sp, #124]	@ 0x7c
90021db4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021db6:	4433      	add	r3, r6
90021db8:	9320      	str	r3, [sp, #128]	@ 0x80
90021dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021dbc:	3b01      	subs	r3, #1
90021dbe:	9309      	str	r3, [sp, #36]	@ 0x24
90021dc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021dc2:	3302      	adds	r3, #2
90021dc4:	930a      	str	r3, [sp, #40]	@ 0x28
90021dc6:	e702      	b.n	90021bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021dc8:	d027      	beq.n	90021e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90021dca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021dcc:	9821      	ldr	r0, [sp, #132]	@ 0x84
90021dce:	3b01      	subs	r3, #1
90021dd0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90021dd2:	fb00 5003 	mla	r0, r0, r3, r5
90021dd6:	1400      	asrs	r0, r0, #16
90021dd8:	f53f af16 	bmi.w	90021c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021ddc:	3901      	subs	r1, #1
90021dde:	4288      	cmp	r0, r1
90021de0:	f6bf af12 	bge.w	90021c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021de4:	9922      	ldr	r1, [sp, #136]	@ 0x88
90021de6:	9820      	ldr	r0, [sp, #128]	@ 0x80
90021de8:	fb01 0303 	mla	r3, r1, r3, r0
90021dec:	141b      	asrs	r3, r3, #16
90021dee:	f53f af0b 	bmi.w	90021c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021df2:	3a01      	subs	r2, #1
90021df4:	4293      	cmp	r3, r2
90021df6:	f6bf af07 	bge.w	90021c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021dfc:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90021e00:	9311      	str	r3, [sp, #68]	@ 0x44
90021e02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021e04:	930c      	str	r3, [sp, #48]	@ 0x30
90021e06:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021e08:	2b00      	cmp	r3, #0
90021e0a:	dc70      	bgt.n	90021eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90021e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021e0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021e10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90021e14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021e18:	930a      	str	r3, [sp, #40]	@ 0x28
90021e1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021e1c:	2b00      	cmp	r3, #0
90021e1e:	f340 8124 	ble.w	9002206a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90021e22:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021e26:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021e28:	ee30 0a04 	vadd.f32	s0, s0, s8
90021e2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021e30:	eef0 6a62 	vmov.f32	s13, s5
90021e34:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021e38:	ee31 1a05 	vadd.f32	s2, s2, s10
90021e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021e40:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90021e44:	eef0 6a43 	vmov.f32	s13, s6
90021e48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021e4c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90021e50:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021e54:	ee61 7a27 	vmul.f32	s15, s2, s15
90021e58:	ee77 2a62 	vsub.f32	s5, s14, s5
90021e5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021e60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021e64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021e68:	ee12 2a90 	vmov	r2, s5
90021e6c:	eef0 2a47 	vmov.f32	s5, s14
90021e70:	fb92 f3f3 	sdiv	r3, r2, r3
90021e74:	ee13 2a10 	vmov	r2, s6
90021e78:	9321      	str	r3, [sp, #132]	@ 0x84
90021e7a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021e7c:	eeb0 3a67 	vmov.f32	s6, s15
90021e80:	fb92 f3f3 	sdiv	r3, r2, r3
90021e84:	9322      	str	r3, [sp, #136]	@ 0x88
90021e86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021e88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90021e8a:	3b01      	subs	r3, #1
90021e8c:	930e      	str	r3, [sp, #56]	@ 0x38
90021e8e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021e90:	bf08      	it	eq
90021e92:	4613      	moveq	r3, r2
90021e94:	9309      	str	r3, [sp, #36]	@ 0x24
90021e96:	e68c      	b.n	90021bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021e98:	b149      	cbz	r1, 90021eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90021e9a:	5cb2      	ldrb	r2, [r6, r2]
90021e9c:	4628      	mov	r0, r5
90021e9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021ea2:	4422      	add	r2, r4
90021ea4:	46ac      	mov	ip, r5
90021ea6:	e6f1      	b.n	90021c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021ea8:	4628      	mov	r0, r5
90021eaa:	462a      	mov	r2, r5
90021eac:	e6ee      	b.n	90021c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021eae:	4628      	mov	r0, r5
90021eb0:	462a      	mov	r2, r5
90021eb2:	e7f7      	b.n	90021ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90021eb4:	1c47      	adds	r7, r0, #1
90021eb6:	f53f af69 	bmi.w	90021d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021eba:	42ba      	cmp	r2, r7
90021ebc:	f6ff af66 	blt.w	90021d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021ec0:	1c6f      	adds	r7, r5, #1
90021ec2:	f53f af63 	bmi.w	90021d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021ec6:	42be      	cmp	r6, r7
90021ec8:	f6ff af60 	blt.w	90021d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021ecc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021ece:	b236      	sxth	r6, r6
90021ed0:	b212      	sxth	r2, r2
90021ed2:	9002      	str	r0, [sp, #8]
90021ed4:	9601      	str	r6, [sp, #4]
90021ed6:	9200      	str	r2, [sp, #0]
90021ed8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90021eda:	e9cd 1705 	strd	r1, r7, [sp, #20]
90021ede:	e9cd 5303 	strd	r5, r3, [sp, #12]
90021ee2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90021ee6:	4623      	mov	r3, r4
90021ee8:	f7ff fd59 	bl	9002199e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90021eec:	e74e      	b.n	90021d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021eee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90021ef0:	9820      	ldr	r0, [sp, #128]	@ 0x80
90021ef2:	f3c2 3103 	ubfx	r1, r2, #12, #4
90021ef6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90021ef8:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90021efa:	1400      	asrs	r0, r0, #16
90021efc:	142d      	asrs	r5, r5, #16
90021efe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021f00:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90021f04:	f3c3 3303 	ubfx	r3, r3, #12, #4
90021f08:	fb02 5000 	mla	r0, r2, r0, r5
90021f0c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90021f0e:	f815 9000 	ldrb.w	r9, [r5, r0]
90021f12:	182e      	adds	r6, r5, r0
90021f14:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90021f18:	eb04 0509 	add.w	r5, r4, r9
90021f1c:	2b00      	cmp	r3, #0
90021f1e:	f000 8096 	beq.w	9002204e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90021f22:	7877      	ldrb	r7, [r6, #1]
90021f24:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021f28:	4427      	add	r7, r4
90021f2a:	2900      	cmp	r1, #0
90021f2c:	f000 8097 	beq.w	9002205e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90021f30:	18b0      	adds	r0, r6, r2
90021f32:	5cb2      	ldrb	r2, [r6, r2]
90021f34:	7840      	ldrb	r0, [r0, #1]
90021f36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021f3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021f3e:	4422      	add	r2, r4
90021f40:	4420      	add	r0, r4
90021f42:	b29b      	uxth	r3, r3
90021f44:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021f46:	b289      	uxth	r1, r1
90021f48:	f895 b002 	ldrb.w	fp, [r5, #2]
90021f4c:	f8b6 c000 	ldrh.w	ip, [r6]
90021f50:	fb03 f801 	mul.w	r8, r3, r1
90021f54:	011b      	lsls	r3, r3, #4
90021f56:	78be      	ldrb	r6, [r7, #2]
90021f58:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90021f5c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90021f60:	eba3 0308 	sub.w	r3, r3, r8
90021f64:	f814 9009 	ldrb.w	r9, [r4, r9]
90021f68:	b289      	uxth	r1, r1
90021f6a:	b29b      	uxth	r3, r3
90021f6c:	ebae 0e01 	sub.w	lr, lr, r1
90021f70:	435e      	muls	r6, r3
90021f72:	fa1f fe8e 	uxth.w	lr, lr
90021f76:	9310      	str	r3, [sp, #64]	@ 0x40
90021f78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021f7a:	fb0e 660b 	mla	r6, lr, fp, r6
90021f7e:	f892 b002 	ldrb.w	fp, [r2, #2]
90021f82:	fb01 660b 	mla	r6, r1, fp, r6
90021f86:	f890 b002 	ldrb.w	fp, [r0, #2]
90021f8a:	fb08 660b 	mla	r6, r8, fp, r6
90021f8e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90021f92:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90021f96:	f3c6 2607 	ubfx	r6, r6, #8, #8
90021f9a:	fb1b fb03 	smulbb	fp, fp, r3
90021f9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021fa0:	fb06 b60a 	mla	r6, r6, sl, fp
90021fa4:	f895 b001 	ldrb.w	fp, [r5, #1]
90021fa8:	787d      	ldrb	r5, [r7, #1]
90021faa:	783f      	ldrb	r7, [r7, #0]
90021fac:	b2b6      	uxth	r6, r6
90021fae:	435d      	muls	r5, r3
90021fb0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021fb2:	fb0e 550b 	mla	r5, lr, fp, r5
90021fb6:	f892 b001 	ldrb.w	fp, [r2, #1]
90021fba:	fb01 550b 	mla	r5, r1, fp, r5
90021fbe:	f890 b001 	ldrb.w	fp, [r0, #1]
90021fc2:	fb08 550b 	mla	r5, r8, fp, r5
90021fc6:	ea4f 0bec 	mov.w	fp, ip, asr #3
90021fca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021fce:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90021fd2:	f3c5 2507 	ubfx	r5, r5, #8, #8
90021fd6:	fa5f fc8c 	uxtb.w	ip, ip
90021fda:	fb1b fb03 	smulbb	fp, fp, r3
90021fde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021fe0:	437b      	muls	r3, r7
90021fe2:	7817      	ldrb	r7, [r2, #0]
90021fe4:	fb05 b50a 	mla	r5, r5, sl, fp
90021fe8:	fb0e 3309 	mla	r3, lr, r9, r3
90021fec:	b2ad      	uxth	r5, r5
90021fee:	fb01 3307 	mla	r3, r1, r7, r3
90021ff2:	7807      	ldrb	r7, [r0, #0]
90021ff4:	f105 0b01 	add.w	fp, r5, #1
90021ff8:	fb08 3707 	mla	r7, r8, r7, r3
90021ffc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021ffe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022002:	fb1c fc03 	smulbb	ip, ip, r3
90022006:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002200a:	1c73      	adds	r3, r6, #1
9002200c:	096d      	lsrs	r5, r5, #5
9002200e:	fb07 c70a 	mla	r7, r7, sl, ip
90022012:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90022016:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002201a:	b2bf      	uxth	r7, r7
9002201c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002201e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90022022:	1c7a      	adds	r2, r7, #1
90022024:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022028:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002202c:	4316      	orrs	r6, r2
9002202e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022030:	432e      	orrs	r6, r5
90022032:	f823 6b02 	strh.w	r6, [r3], #2
90022036:	930c      	str	r3, [sp, #48]	@ 0x30
90022038:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002203a:	4413      	add	r3, r2
9002203c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002203e:	931f      	str	r3, [sp, #124]	@ 0x7c
90022040:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022042:	4413      	add	r3, r2
90022044:	9320      	str	r3, [sp, #128]	@ 0x80
90022046:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022048:	3b01      	subs	r3, #1
9002204a:	9311      	str	r3, [sp, #68]	@ 0x44
9002204c:	e6db      	b.n	90021e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9002204e:	b149      	cbz	r1, 90022064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022050:	5cb2      	ldrb	r2, [r6, r2]
90022052:	4628      	mov	r0, r5
90022054:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022058:	4422      	add	r2, r4
9002205a:	462f      	mov	r7, r5
9002205c:	e771      	b.n	90021f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9002205e:	4628      	mov	r0, r5
90022060:	462a      	mov	r2, r5
90022062:	e76e      	b.n	90021f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022064:	4628      	mov	r0, r5
90022066:	462a      	mov	r2, r5
90022068:	e7f7      	b.n	9002205a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002206a:	b015      	add	sp, #84	@ 0x54
9002206c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022070:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022074:	880f      	ldrh	r7, [r1, #0]
90022076:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002207a:	023c      	lsls	r4, r7, #8
9002207c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90022080:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90022084:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90022088:	017c      	lsls	r4, r7, #5
9002208a:	00ff      	lsls	r7, r7, #3
9002208c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90022090:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90022094:	b2ff      	uxtb	r7, r7
90022096:	ea4b 0404 	orr.w	r4, fp, r4
9002209a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
9002209e:	4327      	orrs	r7, r4
900220a0:	fb05 ca0e 	mla	sl, r5, lr, ip
900220a4:	2d00      	cmp	r5, #0
900220a6:	9701      	str	r7, [sp, #4]
900220a8:	eb02 080a 	add.w	r8, r2, sl
900220ac:	db7e      	blt.n	900221ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900220ae:	45a9      	cmp	r9, r5
900220b0:	dd7c      	ble.n	900221ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900220b2:	f1bc 0f00 	cmp.w	ip, #0
900220b6:	db77      	blt.n	900221a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900220b8:	45e6      	cmp	lr, ip
900220ba:	dd75      	ble.n	900221a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900220bc:	f812 700a 	ldrb.w	r7, [r2, sl]
900220c0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900220c4:	441f      	add	r7, r3
900220c6:	f11c 0201 	adds.w	r2, ip, #1
900220ca:	d472      	bmi.n	900221b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900220cc:	4596      	cmp	lr, r2
900220ce:	dd70      	ble.n	900221b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900220d0:	2800      	cmp	r0, #0
900220d2:	d06e      	beq.n	900221b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900220d4:	f898 4001 	ldrb.w	r4, [r8, #1]
900220d8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900220dc:	441c      	add	r4, r3
900220de:	3501      	adds	r5, #1
900220e0:	d46b      	bmi.n	900221ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900220e2:	45a9      	cmp	r9, r5
900220e4:	dd69      	ble.n	900221ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900220e6:	2e00      	cmp	r6, #0
900220e8:	d067      	beq.n	900221ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900220ea:	f1bc 0f00 	cmp.w	ip, #0
900220ee:	db62      	blt.n	900221b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900220f0:	45e6      	cmp	lr, ip
900220f2:	dd60      	ble.n	900221b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900220f4:	f818 500e 	ldrb.w	r5, [r8, lr]
900220f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900220fc:	441d      	add	r5, r3
900220fe:	f11c 0201 	adds.w	r2, ip, #1
90022102:	d45d      	bmi.n	900221c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022104:	4596      	cmp	lr, r2
90022106:	dd5b      	ble.n	900221c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022108:	2800      	cmp	r0, #0
9002210a:	d059      	beq.n	900221c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002210c:	44c6      	add	lr, r8
9002210e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022112:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022116:	4413      	add	r3, r2
90022118:	b280      	uxth	r0, r0
9002211a:	f897 e002 	ldrb.w	lr, [r7, #2]
9002211e:	b2b2      	uxth	r2, r6
90022120:	f897 9000 	ldrb.w	r9, [r7]
90022124:	787f      	ldrb	r7, [r7, #1]
90022126:	fb00 f602 	mul.w	r6, r0, r2
9002212a:	0100      	lsls	r0, r0, #4
9002212c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022130:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022134:	1b80      	subs	r0, r0, r6
90022136:	fa1f fc82 	uxth.w	ip, r2
9002213a:	b282      	uxth	r2, r0
9002213c:	78a0      	ldrb	r0, [r4, #2]
9002213e:	eba8 080c 	sub.w	r8, r8, ip
90022142:	4350      	muls	r0, r2
90022144:	fa1f f888 	uxth.w	r8, r8
90022148:	fb08 0e0e 	mla	lr, r8, lr, r0
9002214c:	78a8      	ldrb	r0, [r5, #2]
9002214e:	fb0c e000 	mla	r0, ip, r0, lr
90022152:	f893 e002 	ldrb.w	lr, [r3, #2]
90022156:	fb06 0e0e 	mla	lr, r6, lr, r0
9002215a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9002215e:	f894 e000 	ldrb.w	lr, [r4]
90022162:	fb02 fe0e 	mul.w	lr, r2, lr
90022166:	fb08 e909 	mla	r9, r8, r9, lr
9002216a:	f895 e000 	ldrb.w	lr, [r5]
9002216e:	fb0c 990e 	mla	r9, ip, lr, r9
90022172:	f893 e000 	ldrb.w	lr, [r3]
90022176:	785b      	ldrb	r3, [r3, #1]
90022178:	fb06 9e0e 	mla	lr, r6, lr, r9
9002217c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022180:	ea4e 0e00 	orr.w	lr, lr, r0
90022184:	7860      	ldrb	r0, [r4, #1]
90022186:	4350      	muls	r0, r2
90022188:	786a      	ldrb	r2, [r5, #1]
9002218a:	fb08 0007 	mla	r0, r8, r7, r0
9002218e:	fb0c 0202 	mla	r2, ip, r2, r0
90022192:	fb06 2303 	mla	r3, r6, r3, r2
90022196:	095b      	lsrs	r3, r3, #5
90022198:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002219c:	ea4e 0303 	orr.w	r3, lr, r3
900221a0:	800b      	strh	r3, [r1, #0]
900221a2:	b003      	add	sp, #12
900221a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900221a8:	af01      	add	r7, sp, #4
900221aa:	e78c      	b.n	900220c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
900221ac:	ac01      	add	r4, sp, #4
900221ae:	4627      	mov	r7, r4
900221b0:	e795      	b.n	900220de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900221b2:	ac01      	add	r4, sp, #4
900221b4:	e793      	b.n	900220de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900221b6:	ad01      	add	r5, sp, #4
900221b8:	e7a1      	b.n	900220fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900221ba:	ab01      	add	r3, sp, #4
900221bc:	461d      	mov	r5, r3
900221be:	e7ab      	b.n	90022118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900221c0:	ab01      	add	r3, sp, #4
900221c2:	e7a9      	b.n	90022118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900221c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900221c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900221c8:	b08f      	sub	sp, #60	@ 0x3c
900221ca:	920c      	str	r2, [sp, #48]	@ 0x30
900221cc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900221ce:	900d      	str	r0, [sp, #52]	@ 0x34
900221d0:	910a      	str	r1, [sp, #40]	@ 0x28
900221d2:	6850      	ldr	r0, [r2, #4]
900221d4:	9306      	str	r3, [sp, #24]
900221d6:	6812      	ldr	r2, [r2, #0]
900221d8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900221dc:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900221e0:	fb00 1303 	mla	r3, r0, r3, r1
900221e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900221e8:	9307      	str	r3, [sp, #28]
900221ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900221ec:	681b      	ldr	r3, [r3, #0]
900221ee:	9308      	str	r3, [sp, #32]
900221f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900221f2:	685c      	ldr	r4, [r3, #4]
900221f4:	3404      	adds	r4, #4
900221f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900221f8:	2b00      	cmp	r3, #0
900221fa:	dc03      	bgt.n	90022204 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900221fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900221fe:	2b00      	cmp	r3, #0
90022200:	f340 81d5 	ble.w	900225ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022204:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022206:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002220a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002220e:	1e48      	subs	r0, r1, #1
90022210:	1e56      	subs	r6, r2, #1
90022212:	9b06      	ldr	r3, [sp, #24]
90022214:	2b00      	cmp	r3, #0
90022216:	f340 80b6 	ble.w	90022386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002221a:	ea5f 472b 	movs.w	r7, fp, asr #16
9002221e:	ea4f 4325 	mov.w	r3, r5, asr #16
90022222:	d406      	bmi.n	90022232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022224:	4287      	cmp	r7, r0
90022226:	da04      	bge.n	90022232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022228:	2b00      	cmp	r3, #0
9002222a:	db02      	blt.n	90022232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002222c:	42b3      	cmp	r3, r6
9002222e:	f2c0 80ab 	blt.w	90022388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022232:	3701      	adds	r7, #1
90022234:	f100 809c 	bmi.w	90022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022238:	42b9      	cmp	r1, r7
9002223a:	f2c0 8099 	blt.w	90022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002223e:	3301      	adds	r3, #1
90022240:	f100 8096 	bmi.w	90022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022244:	429a      	cmp	r2, r3
90022246:	f2c0 8093 	blt.w	90022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002224a:	9b06      	ldr	r3, [sp, #24]
9002224c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002224e:	9b07      	ldr	r3, [sp, #28]
90022250:	9309      	str	r3, [sp, #36]	@ 0x24
90022252:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022254:	2b00      	cmp	r3, #0
90022256:	f340 80b4 	ble.w	900223c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002225a:	9820      	ldr	r0, [sp, #128]	@ 0x80
9002225c:	142e      	asrs	r6, r5, #16
9002225e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022260:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022264:	68c7      	ldr	r7, [r0, #12]
90022266:	ea5f 402b 	movs.w	r0, fp, asr #16
9002226a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002226e:	6892      	ldr	r2, [r2, #8]
90022270:	f100 80fb 	bmi.w	9002246a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022274:	f102 3cff 	add.w	ip, r2, #4294967295
90022278:	4560      	cmp	r0, ip
9002227a:	f280 80f6 	bge.w	9002246a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002227e:	2e00      	cmp	r6, #0
90022280:	f2c0 80f3 	blt.w	9002246a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022284:	f107 3cff 	add.w	ip, r7, #4294967295
90022288:	4566      	cmp	r6, ip
9002228a:	f280 80ee 	bge.w	9002246a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002228e:	b212      	sxth	r2, r2
90022290:	fb06 0002 	mla	r0, r6, r2, r0
90022294:	9e08      	ldr	r6, [sp, #32]
90022296:	1837      	adds	r7, r6, r0
90022298:	5c30      	ldrb	r0, [r6, r0]
9002229a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9002229e:	eb04 0c08 	add.w	ip, r4, r8
900222a2:	2b00      	cmp	r3, #0
900222a4:	f000 80d3 	beq.w	9002244e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900222a8:	787e      	ldrb	r6, [r7, #1]
900222aa:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900222ae:	4426      	add	r6, r4
900222b0:	2900      	cmp	r1, #0
900222b2:	f000 80d4 	beq.w	9002245e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900222b6:	18b8      	adds	r0, r7, r2
900222b8:	5cba      	ldrb	r2, [r7, r2]
900222ba:	7840      	ldrb	r0, [r0, #1]
900222bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900222c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900222c4:	4422      	add	r2, r4
900222c6:	4420      	add	r0, r4
900222c8:	b29b      	uxth	r3, r3
900222ca:	78b7      	ldrb	r7, [r6, #2]
900222cc:	b289      	uxth	r1, r1
900222ce:	f89c a002 	ldrb.w	sl, [ip, #2]
900222d2:	f89c c001 	ldrb.w	ip, [ip, #1]
900222d6:	fb03 f901 	mul.w	r9, r3, r1
900222da:	011b      	lsls	r3, r3, #4
900222dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900222e0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900222e4:	eba3 0309 	sub.w	r3, r3, r9
900222e8:	b289      	uxth	r1, r1
900222ea:	b29b      	uxth	r3, r3
900222ec:	ebae 0e01 	sub.w	lr, lr, r1
900222f0:	435f      	muls	r7, r3
900222f2:	fa1f fe8e 	uxth.w	lr, lr
900222f6:	fb0e 770a 	mla	r7, lr, sl, r7
900222fa:	f892 a002 	ldrb.w	sl, [r2, #2]
900222fe:	fb01 770a 	mla	r7, r1, sl, r7
90022302:	f890 a002 	ldrb.w	sl, [r0, #2]
90022306:	fb09 7a0a 	mla	sl, r9, sl, r7
9002230a:	f814 7008 	ldrb.w	r7, [r4, r8]
9002230e:	f896 8000 	ldrb.w	r8, [r6]
90022312:	7876      	ldrb	r6, [r6, #1]
90022314:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022318:	fb03 f808 	mul.w	r8, r3, r8
9002231c:	4373      	muls	r3, r6
9002231e:	fb0e 8807 	mla	r8, lr, r7, r8
90022322:	7817      	ldrb	r7, [r2, #0]
90022324:	fb0e 330c 	mla	r3, lr, ip, r3
90022328:	fb01 8807 	mla	r8, r1, r7, r8
9002232c:	7807      	ldrb	r7, [r0, #0]
9002232e:	fb09 8707 	mla	r7, r9, r7, r8
90022332:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022336:	ea47 070a 	orr.w	r7, r7, sl
9002233a:	f892 a001 	ldrb.w	sl, [r2, #1]
9002233e:	fb01 310a 	mla	r1, r1, sl, r3
90022342:	f890 a001 	ldrb.w	sl, [r0, #1]
90022346:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022348:	fb09 1a0a 	mla	sl, r9, sl, r1
9002234c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022350:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022354:	ea47 070a 	orr.w	r7, r7, sl
90022358:	801f      	strh	r7, [r3, #0]
9002235a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002235c:	3302      	adds	r3, #2
9002235e:	9309      	str	r3, [sp, #36]	@ 0x24
90022360:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022362:	449b      	add	fp, r3
90022364:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022366:	441d      	add	r5, r3
90022368:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002236a:	3b01      	subs	r3, #1
9002236c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002236e:	e770      	b.n	90022252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022370:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022372:	449b      	add	fp, r3
90022374:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022376:	441d      	add	r5, r3
90022378:	9b06      	ldr	r3, [sp, #24]
9002237a:	3b01      	subs	r3, #1
9002237c:	9306      	str	r3, [sp, #24]
9002237e:	9b07      	ldr	r3, [sp, #28]
90022380:	3302      	adds	r3, #2
90022382:	9307      	str	r3, [sp, #28]
90022384:	e745      	b.n	90022212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022386:	d023      	beq.n	900223d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022388:	9b06      	ldr	r3, [sp, #24]
9002238a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002238c:	3b01      	subs	r3, #1
9002238e:	fb00 b003 	mla	r0, r0, r3, fp
90022392:	1400      	asrs	r0, r0, #16
90022394:	f53f af59 	bmi.w	9002224a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022398:	3901      	subs	r1, #1
9002239a:	4288      	cmp	r0, r1
9002239c:	f6bf af55 	bge.w	9002224a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900223a0:	991c      	ldr	r1, [sp, #112]	@ 0x70
900223a2:	fb01 5303 	mla	r3, r1, r3, r5
900223a6:	141b      	asrs	r3, r3, #16
900223a8:	f53f af4f 	bmi.w	9002224a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900223ac:	3a01      	subs	r2, #1
900223ae:	4293      	cmp	r3, r2
900223b0:	f6bf af4b 	bge.w	9002224a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900223b4:	9b06      	ldr	r3, [sp, #24]
900223b6:	9309      	str	r3, [sp, #36]	@ 0x24
900223b8:	9b07      	ldr	r3, [sp, #28]
900223ba:	930b      	str	r3, [sp, #44]	@ 0x2c
900223bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900223be:	2b00      	cmp	r3, #0
900223c0:	dc70      	bgt.n	900224a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900223c2:	9b06      	ldr	r3, [sp, #24]
900223c4:	9a07      	ldr	r2, [sp, #28]
900223c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900223ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900223ce:	9307      	str	r3, [sp, #28]
900223d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900223d2:	2b00      	cmp	r3, #0
900223d4:	f340 80eb 	ble.w	900225ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900223d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900223dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900223de:	ee30 0a04 	vadd.f32	s0, s0, s8
900223e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900223e6:	eef0 6a62 	vmov.f32	s13, s5
900223ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
900223ee:	ee31 1a05 	vadd.f32	s2, s2, s10
900223f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900223f6:	ee16 ba90 	vmov	fp, s13
900223fa:	eef0 6a43 	vmov.f32	s13, s6
900223fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022402:	ee16 5a90 	vmov	r5, s13
90022406:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002240a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002240e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022412:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022416:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002241a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002241e:	ee12 2a90 	vmov	r2, s5
90022422:	eef0 2a47 	vmov.f32	s5, s14
90022426:	fb92 f3f3 	sdiv	r3, r2, r3
9002242a:	ee13 2a10 	vmov	r2, s6
9002242e:	931b      	str	r3, [sp, #108]	@ 0x6c
90022430:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022432:	eeb0 3a67 	vmov.f32	s6, s15
90022436:	fb92 f3f3 	sdiv	r3, r2, r3
9002243a:	931c      	str	r3, [sp, #112]	@ 0x70
9002243c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002243e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022440:	3b01      	subs	r3, #1
90022442:	930a      	str	r3, [sp, #40]	@ 0x28
90022444:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022446:	bf08      	it	eq
90022448:	4613      	moveq	r3, r2
9002244a:	9306      	str	r3, [sp, #24]
9002244c:	e6d3      	b.n	900221f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002244e:	b149      	cbz	r1, 90022464 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022450:	5cba      	ldrb	r2, [r7, r2]
90022452:	4660      	mov	r0, ip
90022454:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022458:	4422      	add	r2, r4
9002245a:	4666      	mov	r6, ip
9002245c:	e734      	b.n	900222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002245e:	4660      	mov	r0, ip
90022460:	4662      	mov	r2, ip
90022462:	e731      	b.n	900222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022464:	4660      	mov	r0, ip
90022466:	4662      	mov	r2, ip
90022468:	e7f7      	b.n	9002245a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002246a:	f110 0c01 	adds.w	ip, r0, #1
9002246e:	f53f af74 	bmi.w	9002235a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022472:	4562      	cmp	r2, ip
90022474:	f6ff af71 	blt.w	9002235a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022478:	f116 0c01 	adds.w	ip, r6, #1
9002247c:	f53f af6d 	bmi.w	9002235a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022480:	4567      	cmp	r7, ip
90022482:	f6ff af6a 	blt.w	9002235a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022486:	b23f      	sxth	r7, r7
90022488:	b212      	sxth	r2, r2
9002248a:	9701      	str	r7, [sp, #4]
9002248c:	9200      	str	r2, [sp, #0]
9002248e:	e9cd 3104 	strd	r3, r1, [sp, #16]
90022492:	e9cd 0602 	strd	r0, r6, [sp, #8]
90022496:	4623      	mov	r3, r4
90022498:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002249a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9002249e:	f7ff fde7 	bl	90022070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900224a2:	e75a      	b.n	9002235a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900224a4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900224a6:	ea4f 462b 	mov.w	r6, fp, asr #16
900224aa:	1428      	asrs	r0, r5, #16
900224ac:	f3cb 3303 	ubfx	r3, fp, #12, #4
900224b0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900224b4:	f3c5 3103 	ubfx	r1, r5, #12, #4
900224b8:	fb02 6000 	mla	r0, r2, r0, r6
900224bc:	9e08      	ldr	r6, [sp, #32]
900224be:	f816 8000 	ldrb.w	r8, [r6, r0]
900224c2:	1837      	adds	r7, r6, r0
900224c4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900224c8:	eb04 0c08 	add.w	ip, r4, r8
900224cc:	2b00      	cmp	r3, #0
900224ce:	d060      	beq.n	90022592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900224d0:	787e      	ldrb	r6, [r7, #1]
900224d2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900224d6:	4426      	add	r6, r4
900224d8:	2900      	cmp	r1, #0
900224da:	d062      	beq.n	900225a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900224dc:	18b8      	adds	r0, r7, r2
900224de:	5cba      	ldrb	r2, [r7, r2]
900224e0:	7840      	ldrb	r0, [r0, #1]
900224e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900224e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900224ea:	4422      	add	r2, r4
900224ec:	4420      	add	r0, r4
900224ee:	b29b      	uxth	r3, r3
900224f0:	78b7      	ldrb	r7, [r6, #2]
900224f2:	b289      	uxth	r1, r1
900224f4:	f89c a002 	ldrb.w	sl, [ip, #2]
900224f8:	f89c c001 	ldrb.w	ip, [ip, #1]
900224fc:	fb03 f901 	mul.w	r9, r3, r1
90022500:	011b      	lsls	r3, r3, #4
90022502:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022506:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002250a:	eba3 0309 	sub.w	r3, r3, r9
9002250e:	b289      	uxth	r1, r1
90022510:	b29b      	uxth	r3, r3
90022512:	ebae 0e01 	sub.w	lr, lr, r1
90022516:	435f      	muls	r7, r3
90022518:	fa1f fe8e 	uxth.w	lr, lr
9002251c:	fb0e 770a 	mla	r7, lr, sl, r7
90022520:	f892 a002 	ldrb.w	sl, [r2, #2]
90022524:	fb01 770a 	mla	r7, r1, sl, r7
90022528:	f890 a002 	ldrb.w	sl, [r0, #2]
9002252c:	fb09 7a0a 	mla	sl, r9, sl, r7
90022530:	f814 7008 	ldrb.w	r7, [r4, r8]
90022534:	f896 8000 	ldrb.w	r8, [r6]
90022538:	7876      	ldrb	r6, [r6, #1]
9002253a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002253e:	fb03 f808 	mul.w	r8, r3, r8
90022542:	4373      	muls	r3, r6
90022544:	7856      	ldrb	r6, [r2, #1]
90022546:	fb0e 8807 	mla	r8, lr, r7, r8
9002254a:	7817      	ldrb	r7, [r2, #0]
9002254c:	fb0e 330c 	mla	r3, lr, ip, r3
90022550:	fb01 8807 	mla	r8, r1, r7, r8
90022554:	7807      	ldrb	r7, [r0, #0]
90022556:	fb01 3306 	mla	r3, r1, r6, r3
9002255a:	fb09 8707 	mla	r7, r9, r7, r8
9002255e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022562:	ea47 070a 	orr.w	r7, r7, sl
90022566:	f890 a001 	ldrb.w	sl, [r0, #1]
9002256a:	fb09 3a0a 	mla	sl, r9, sl, r3
9002256e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022570:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022574:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022578:	ea47 070a 	orr.w	r7, r7, sl
9002257c:	f823 7b02 	strh.w	r7, [r3], #2
90022580:	930b      	str	r3, [sp, #44]	@ 0x2c
90022582:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022584:	449b      	add	fp, r3
90022586:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022588:	441d      	add	r5, r3
9002258a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002258c:	3b01      	subs	r3, #1
9002258e:	9309      	str	r3, [sp, #36]	@ 0x24
90022590:	e714      	b.n	900223bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90022592:	b149      	cbz	r1, 900225a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90022594:	5cba      	ldrb	r2, [r7, r2]
90022596:	4660      	mov	r0, ip
90022598:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002259c:	4422      	add	r2, r4
9002259e:	4666      	mov	r6, ip
900225a0:	e7a5      	b.n	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900225a2:	4660      	mov	r0, ip
900225a4:	4662      	mov	r2, ip
900225a6:	e7a2      	b.n	900224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900225a8:	4660      	mov	r0, ip
900225aa:	4662      	mov	r2, ip
900225ac:	e7f7      	b.n	9002259e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900225ae:	b00f      	add	sp, #60	@ 0x3c
900225b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900225b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900225b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900225b8:	b085      	sub	sp, #20
900225ba:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900225be:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900225c2:	9102      	str	r1, [sp, #8]
900225c4:	2c00      	cmp	r4, #0
900225c6:	fb04 710c 	mla	r1, r4, ip, r7
900225ca:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900225ce:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900225d2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900225d6:	eb02 0e01 	add.w	lr, r2, r1
900225da:	f2c0 8122 	blt.w	90022822 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900225de:	45a0      	cmp	r8, r4
900225e0:	f340 811f 	ble.w	90022822 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900225e4:	2f00      	cmp	r7, #0
900225e6:	f2c0 811a 	blt.w	9002281e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900225ea:	45bc      	cmp	ip, r7
900225ec:	f340 8117 	ble.w	9002281e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900225f0:	5c52      	ldrb	r2, [r2, r1]
900225f2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900225f6:	1c7a      	adds	r2, r7, #1
900225f8:	f100 8116 	bmi.w	90022828 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900225fc:	4594      	cmp	ip, r2
900225fe:	f340 8113 	ble.w	90022828 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022602:	2e00      	cmp	r6, #0
90022604:	f000 8112 	beq.w	9002282c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022608:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002260c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022610:	3401      	adds	r4, #1
90022612:	f100 810f 	bmi.w	90022834 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022616:	45a0      	cmp	r8, r4
90022618:	f340 810c 	ble.w	90022834 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002261c:	2800      	cmp	r0, #0
9002261e:	f000 810c 	beq.w	9002283a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022622:	2f00      	cmp	r7, #0
90022624:	f2c0 8104 	blt.w	90022830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022628:	45bc      	cmp	ip, r7
9002262a:	f340 8101 	ble.w	90022830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002262e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022632:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022636:	3701      	adds	r7, #1
90022638:	f100 8102 	bmi.w	90022840 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002263c:	45bc      	cmp	ip, r7
9002263e:	f340 80ff 	ble.w	90022840 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022642:	2e00      	cmp	r6, #0
90022644:	f000 80fe 	beq.w	90022844 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022648:	44f4      	add	ip, lr
9002264a:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002264e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022652:	b2b6      	uxth	r6, r6
90022654:	b280      	uxth	r0, r0
90022656:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002265a:	fb00 fe06 	mul.w	lr, r0, r6
9002265e:	0136      	lsls	r6, r6, #4
90022660:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022664:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022668:	eba6 070e 	sub.w	r7, r6, lr
9002266c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90022670:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022674:	b280      	uxth	r0, r0
90022676:	b2bf      	uxth	r7, r7
90022678:	1a1b      	subs	r3, r3, r0
9002267a:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002267e:	fb0a f607 	mul.w	r6, sl, r7
90022682:	b29b      	uxth	r3, r3
90022684:	fb0b 6603 	mla	r6, fp, r3, r6
90022688:	fb00 6609 	mla	r6, r0, r9, r6
9002268c:	fb0e 6608 	mla	r6, lr, r8, r6
90022690:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022694:	9600      	str	r6, [sp, #0]
90022696:	2e00      	cmp	r6, #0
90022698:	f000 80be 	beq.w	90022818 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9002269c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900226a0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900226a4:	9e02      	ldr	r6, [sp, #8]
900226a6:	fb0b fc0c 	mul.w	ip, fp, ip
900226aa:	fb0b f505 	mul.w	r5, fp, r5
900226ae:	8836      	ldrh	r6, [r6, #0]
900226b0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900226b4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900226b8:	9501      	str	r5, [sp, #4]
900226ba:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900226be:	44dc      	add	ip, fp
900226c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900226c4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900226c8:	9503      	str	r5, [sp, #12]
900226ca:	9d01      	ldr	r5, [sp, #4]
900226cc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900226d0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900226d4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900226d8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900226dc:	fb0a fc0c 	mul.w	ip, sl, ip
900226e0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900226e4:	fb0a fa01 	mul.w	sl, sl, r1
900226e8:	ea4f 251c 	mov.w	r5, ip, lsr #8
900226ec:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900226f0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900226f4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900226f8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900226fc:	4465      	add	r5, ip
900226fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022702:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90022706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002270a:	fb09 fc0c 	mul.w	ip, r9, ip
9002270e:	0a2d      	lsrs	r5, r5, #8
90022710:	fb09 f904 	mul.w	r9, r9, r4
90022714:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022718:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002271c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022720:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90022724:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022728:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002272c:	437d      	muls	r5, r7
9002272e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022732:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90022736:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002273a:	4461      	add	r1, ip
9002273c:	fb08 f404 	mul.w	r4, r8, r4
90022740:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022744:	fb08 f802 	mul.w	r8, r8, r2
90022748:	0a09      	lsrs	r1, r1, #8
9002274a:	0a22      	lsrs	r2, r4, #8
9002274c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90022750:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022754:	fb07 f70a 	mul.w	r7, r7, sl
90022758:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002275c:	4414      	add	r4, r2
9002275e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90022762:	0a24      	lsrs	r4, r4, #8
90022764:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022768:	9a03      	ldr	r2, [sp, #12]
9002276a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002276e:	fb02 5503 	mla	r5, r2, r3, r5
90022772:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022776:	9a00      	ldr	r2, [sp, #0]
90022778:	fb04 540e 	mla	r4, r4, lr, r5
9002277c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90022780:	1235      	asrs	r5, r6, #8
90022782:	fb01 4100 	mla	r1, r1, r0, r4
90022786:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002278a:	0a09      	lsrs	r1, r1, #8
9002278c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90022790:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90022794:	fb03 7101 	mla	r1, r3, r1, r7
90022798:	fb0e 1e08 	mla	lr, lr, r8, r1
9002279c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900227a0:	fb00 e101 	mla	r1, r0, r1, lr
900227a4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900227a8:	b287      	uxth	r7, r0
900227aa:	0a09      	lsrs	r1, r1, #8
900227ac:	437a      	muls	r2, r7
900227ae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900227b2:	1c53      	adds	r3, r2, #1
900227b4:	4321      	orrs	r1, r4
900227b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900227ba:	0c0a      	lsrs	r2, r1, #16
900227bc:	f3c1 2407 	ubfx	r4, r1, #8, #8
900227c0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900227c4:	b2c8      	uxtb	r0, r1
900227c6:	fb12 f207 	smulbb	r2, r2, r7
900227ca:	fb14 f407 	smulbb	r4, r4, r7
900227ce:	b2db      	uxtb	r3, r3
900227d0:	fb10 f007 	smulbb	r0, r0, r7
900227d4:	fb05 2503 	mla	r5, r5, r3, r2
900227d8:	10f2      	asrs	r2, r6, #3
900227da:	00f6      	lsls	r6, r6, #3
900227dc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900227e0:	b2ad      	uxth	r5, r5
900227e2:	b2f6      	uxtb	r6, r6
900227e4:	fb02 4203 	mla	r2, r2, r3, r4
900227e8:	fb06 0303 	mla	r3, r6, r3, r0
900227ec:	b294      	uxth	r4, r2
900227ee:	b299      	uxth	r1, r3
900227f0:	1c6b      	adds	r3, r5, #1
900227f2:	1c62      	adds	r2, r4, #1
900227f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900227f8:	1c4b      	adds	r3, r1, #1
900227fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900227fe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022802:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022806:	0952      	lsrs	r2, r2, #5
90022808:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002280c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022810:	432b      	orrs	r3, r5
90022812:	4313      	orrs	r3, r2
90022814:	9a02      	ldr	r2, [sp, #8]
90022816:	8013      	strh	r3, [r2, #0]
90022818:	b005      	add	sp, #20
9002281a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002281e:	2500      	movs	r5, #0
90022820:	e6e9      	b.n	900225f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90022822:	2100      	movs	r1, #0
90022824:	460d      	mov	r5, r1
90022826:	e6f3      	b.n	90022610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022828:	2100      	movs	r1, #0
9002282a:	e6f1      	b.n	90022610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002282c:	4631      	mov	r1, r6
9002282e:	e6ef      	b.n	90022610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022830:	2400      	movs	r4, #0
90022832:	e700      	b.n	90022636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90022834:	2200      	movs	r2, #0
90022836:	4614      	mov	r4, r2
90022838:	e70b      	b.n	90022652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002283a:	4602      	mov	r2, r0
9002283c:	4604      	mov	r4, r0
9002283e:	e708      	b.n	90022652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022840:	2200      	movs	r2, #0
90022842:	e706      	b.n	90022652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022844:	4632      	mov	r2, r6
90022846:	e704      	b.n	90022652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90022848 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002284c:	b09f      	sub	sp, #124	@ 0x7c
9002284e:	921b      	str	r2, [sp, #108]	@ 0x6c
90022850:	9309      	str	r3, [sp, #36]	@ 0x24
90022852:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90022854:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90022858:	901d      	str	r0, [sp, #116]	@ 0x74
9002285a:	931c      	str	r3, [sp, #112]	@ 0x70
9002285c:	6850      	ldr	r0, [r2, #4]
9002285e:	9119      	str	r1, [sp, #100]	@ 0x64
90022860:	6812      	ldr	r2, [r2, #0]
90022862:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90022864:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90022868:	fb00 1303 	mla	r3, r0, r3, r1
9002286c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022870:	930c      	str	r3, [sp, #48]	@ 0x30
90022872:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022874:	681b      	ldr	r3, [r3, #0]
90022876:	9312      	str	r3, [sp, #72]	@ 0x48
90022878:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002287a:	685e      	ldr	r6, [r3, #4]
9002287c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90022880:	3604      	adds	r6, #4
90022882:	930d      	str	r3, [sp, #52]	@ 0x34
90022884:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022886:	2b00      	cmp	r3, #0
90022888:	dc03      	bgt.n	90022892 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002288a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002288c:	2b00      	cmp	r3, #0
9002288e:	f340 8387 	ble.w	90022fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90022892:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022894:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022898:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002289c:	1e48      	subs	r0, r1, #1
9002289e:	1e57      	subs	r7, r2, #1
900228a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900228a2:	2b00      	cmp	r3, #0
900228a4:	f340 8194 	ble.w	90022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900228a8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900228aa:	142b      	asrs	r3, r5, #16
900228ac:	ea5f 4c24 	movs.w	ip, r4, asr #16
900228b0:	d406      	bmi.n	900228c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900228b2:	4584      	cmp	ip, r0
900228b4:	da04      	bge.n	900228c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900228b6:	2b00      	cmp	r3, #0
900228b8:	db02      	blt.n	900228c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900228ba:	42bb      	cmp	r3, r7
900228bc:	f2c0 8189 	blt.w	90022bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900228c0:	f11c 0c01 	adds.w	ip, ip, #1
900228c4:	f100 8177 	bmi.w	90022bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900228c8:	4561      	cmp	r1, ip
900228ca:	f2c0 8174 	blt.w	90022bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900228ce:	3301      	adds	r3, #1
900228d0:	f100 8171 	bmi.w	90022bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900228d4:	429a      	cmp	r2, r3
900228d6:	f2c0 816e 	blt.w	90022bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900228da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900228dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900228de:	931a      	str	r3, [sp, #104]	@ 0x68
900228e0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900228e2:	2b00      	cmp	r3, #0
900228e4:	f340 8193 	ble.w	90022c0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900228e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900228ea:	ea4f 4c25 	mov.w	ip, r5, asr #16
900228ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
900228f2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900228f6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900228f8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900228fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900228fe:	141b      	asrs	r3, r3, #16
90022900:	f100 81d6 	bmi.w	90022cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022904:	f100 38ff 	add.w	r8, r0, #4294967295
90022908:	4543      	cmp	r3, r8
9002290a:	f280 81d1 	bge.w	90022cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002290e:	f1bc 0f00 	cmp.w	ip, #0
90022912:	f2c0 81cd 	blt.w	90022cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022916:	f10e 38ff 	add.w	r8, lr, #4294967295
9002291a:	45c4      	cmp	ip, r8
9002291c:	f280 81c8 	bge.w	90022cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022920:	b200      	sxth	r0, r0
90022922:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022924:	fb0c 3300 	mla	r3, ip, r0, r3
90022928:	eb04 0803 	add.w	r8, r4, r3
9002292c:	5ce3      	ldrb	r3, [r4, r3]
9002292e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022932:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90022936:	2a00      	cmp	r2, #0
90022938:	f000 81af 	beq.w	90022c9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002293c:	f898 c001 	ldrb.w	ip, [r8, #1]
90022940:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90022944:	940e      	str	r4, [sp, #56]	@ 0x38
90022946:	0e24      	lsrs	r4, r4, #24
90022948:	9415      	str	r4, [sp, #84]	@ 0x54
9002294a:	b179      	cbz	r1, 9002296c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002294c:	eb08 0c00 	add.w	ip, r8, r0
90022950:	f818 0000 	ldrb.w	r0, [r8, r0]
90022954:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022958:	900a      	str	r0, [sp, #40]	@ 0x28
9002295a:	0e00      	lsrs	r0, r0, #24
9002295c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002295e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90022962:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022966:	900f      	str	r0, [sp, #60]	@ 0x3c
90022968:	0e00      	lsrs	r0, r0, #24
9002296a:	9016      	str	r0, [sp, #88]	@ 0x58
9002296c:	b292      	uxth	r2, r2
9002296e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90022970:	b289      	uxth	r1, r1
90022972:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022974:	fb02 f901 	mul.w	r9, r2, r1
90022978:	0112      	lsls	r2, r2, #4
9002297a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002297e:	eba2 0809 	sub.w	r8, r2, r9
90022982:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90022986:	b289      	uxth	r1, r1
90022988:	fa1f f888 	uxth.w	r8, r8
9002298c:	1a52      	subs	r2, r2, r1
9002298e:	fb08 f000 	mul.w	r0, r8, r0
90022992:	b292      	uxth	r2, r2
90022994:	fb02 000e 	mla	r0, r2, lr, r0
90022998:	fb01 0004 	mla	r0, r1, r4, r0
9002299c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002299e:	fb09 0004 	mla	r0, r9, r4, r0
900229a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
900229a6:	2800      	cmp	r0, #0
900229a8:	f000 80fa 	beq.w	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900229ac:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900229b0:	d01b      	beq.n	900229ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900229b2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900229b6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900229ba:	fb0e fa0a 	mul.w	sl, lr, sl
900229be:	fb0e fe03 	mul.w	lr, lr, r3
900229c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900229c6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900229ca:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900229ce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900229d2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900229d6:	4453      	add	r3, sl
900229d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900229dc:	0a1b      	lsrs	r3, r3, #8
900229de:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900229e2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900229e6:	ea43 030c 	orr.w	r3, r3, ip
900229ea:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900229ec:	2cff      	cmp	r4, #255	@ 0xff
900229ee:	d021      	beq.n	90022a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900229f0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900229f2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900229f6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900229f8:	fb04 fb0b 	mul.w	fp, r4, fp
900229fc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900229fe:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022a02:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022a04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022a08:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022a0c:	fb04 fa0a 	mul.w	sl, r4, sl
90022a10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022a14:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022a18:	44de      	add	lr, fp
90022a1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022a1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022a22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022a26:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022a2a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022a2e:	ea4e 040a 	orr.w	r4, lr, sl
90022a32:	940e      	str	r4, [sp, #56]	@ 0x38
90022a34:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022a36:	2cff      	cmp	r4, #255	@ 0xff
90022a38:	d021      	beq.n	90022a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90022a3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022a3c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022a40:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022a42:	fb04 fb0b 	mul.w	fp, r4, fp
90022a46:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022a48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022a4c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022a4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022a52:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022a56:	fb04 fa0a 	mul.w	sl, r4, sl
90022a5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022a5e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022a62:	44de      	add	lr, fp
90022a64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022a68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022a6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022a70:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022a74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022a78:	ea4e 040a 	orr.w	r4, lr, sl
90022a7c:	940a      	str	r4, [sp, #40]	@ 0x28
90022a7e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022a80:	2cff      	cmp	r4, #255	@ 0xff
90022a82:	d021      	beq.n	90022ac8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90022a84:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022a86:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022a8a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022a8c:	fb04 fb0b 	mul.w	fp, r4, fp
90022a90:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022a92:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022a96:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022a98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022a9c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022aa0:	fb04 fa0a 	mul.w	sl, r4, sl
90022aa4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022aa8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022aac:	44de      	add	lr, fp
90022aae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022ab2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022ab6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022aba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022abe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022ac2:	ea4e 040a 	orr.w	r4, lr, sl
90022ac6:	940f      	str	r4, [sp, #60]	@ 0x3c
90022ac8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022aca:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90022ace:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022ad2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022ad6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022ad8:	fb08 fc0c 	mul.w	ip, r8, ip
90022adc:	fb02 cc0e 	mla	ip, r2, lr, ip
90022ae0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022ae4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022ae6:	fb01 cc0e 	mla	ip, r1, lr, ip
90022aea:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022aee:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022af0:	fb09 cc0e 	mla	ip, r9, lr, ip
90022af4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90022af8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022afa:	fb08 f80e 	mul.w	r8, r8, lr
90022afe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022b02:	fb02 8303 	mla	r3, r2, r3, r8
90022b06:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022b08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022b0c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90022b10:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90022b12:	fb01 330a 	mla	r3, r1, sl, r3
90022b16:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90022b1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90022b1c:	fb09 3901 	mla	r9, r9, r1, r3
90022b20:	883b      	ldrh	r3, [r7, #0]
90022b22:	4342      	muls	r2, r0
90022b24:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022b28:	1c50      	adds	r0, r2, #1
90022b2a:	1219      	asrs	r1, r3, #8
90022b2c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90022b30:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90022b34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022b38:	ea4c 0c09 	orr.w	ip, ip, r9
90022b3c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90022b40:	ea4f 421c 	mov.w	r2, ip, lsr #16
90022b44:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90022b48:	b2c0      	uxtb	r0, r0
90022b4a:	fb12 f204 	smulbb	r2, r2, r4
90022b4e:	fa5f fc8c 	uxtb.w	ip, ip
90022b52:	fb1e fe04 	smulbb	lr, lr, r4
90022b56:	fb01 2100 	mla	r1, r1, r0, r2
90022b5a:	10da      	asrs	r2, r3, #3
90022b5c:	fb1c fc04 	smulbb	ip, ip, r4
90022b60:	00db      	lsls	r3, r3, #3
90022b62:	b289      	uxth	r1, r1
90022b64:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022b68:	b2db      	uxtb	r3, r3
90022b6a:	fb02 e200 	mla	r2, r2, r0, lr
90022b6e:	fb03 c300 	mla	r3, r3, r0, ip
90022b72:	b292      	uxth	r2, r2
90022b74:	fa1f fc83 	uxth.w	ip, r3
90022b78:	1c4b      	adds	r3, r1, #1
90022b7a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90022b7e:	f10c 0301 	add.w	r3, ip, #1
90022b82:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90022b86:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90022b8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022b8e:	430b      	orrs	r3, r1
90022b90:	1c51      	adds	r1, r2, #1
90022b92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90022b96:	0952      	lsrs	r2, r2, #5
90022b98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022b9c:	4313      	orrs	r3, r2
90022b9e:	803b      	strh	r3, [r7, #0]
90022ba0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022ba2:	3702      	adds	r7, #2
90022ba4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022ba6:	441a      	add	r2, r3
90022ba8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022baa:	441d      	add	r5, r3
90022bac:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90022bae:	9229      	str	r2, [sp, #164]	@ 0xa4
90022bb0:	3b01      	subs	r3, #1
90022bb2:	931a      	str	r3, [sp, #104]	@ 0x68
90022bb4:	e694      	b.n	900228e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90022bb6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022bb8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022bba:	441c      	add	r4, r3
90022bbc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022bbe:	441d      	add	r5, r3
90022bc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022bc2:	9429      	str	r4, [sp, #164]	@ 0xa4
90022bc4:	3b01      	subs	r3, #1
90022bc6:	9309      	str	r3, [sp, #36]	@ 0x24
90022bc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022bca:	3302      	adds	r3, #2
90022bcc:	930c      	str	r3, [sp, #48]	@ 0x30
90022bce:	e667      	b.n	900228a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022bd0:	d024      	beq.n	90022c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90022bd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022bd4:	982b      	ldr	r0, [sp, #172]	@ 0xac
90022bd6:	3b01      	subs	r3, #1
90022bd8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022bda:	fb00 4003 	mla	r0, r0, r3, r4
90022bde:	1400      	asrs	r0, r0, #16
90022be0:	f53f ae7b 	bmi.w	900228da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022be4:	3901      	subs	r1, #1
90022be6:	4288      	cmp	r0, r1
90022be8:	f6bf ae77 	bge.w	900228da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022bec:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90022bee:	fb01 5303 	mla	r3, r1, r3, r5
90022bf2:	141b      	asrs	r3, r3, #16
90022bf4:	f53f ae71 	bmi.w	900228da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022bf8:	3a01      	subs	r2, #1
90022bfa:	4293      	cmp	r3, r2
90022bfc:	f6bf ae6d 	bge.w	900228da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022c00:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90022c04:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90022c08:	f1bb 0f00 	cmp.w	fp, #0
90022c0c:	dc70      	bgt.n	90022cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90022c0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022c10:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022c14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022c16:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022c1a:	930c      	str	r3, [sp, #48]	@ 0x30
90022c1c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022c1e:	2b00      	cmp	r3, #0
90022c20:	f340 81be 	ble.w	90022fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90022c24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022c28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022c2a:	ee30 0a04 	vadd.f32	s0, s0, s8
90022c2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022c32:	eef0 6a62 	vmov.f32	s13, s5
90022c36:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022c3a:	ee31 1a05 	vadd.f32	s2, s2, s10
90022c3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c42:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90022c46:	eef0 6a43 	vmov.f32	s13, s6
90022c4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c4e:	ee16 5a90 	vmov	r5, s13
90022c52:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022c56:	ee61 7a27 	vmul.f32	s15, s2, s15
90022c5a:	ee77 2a62 	vsub.f32	s5, s14, s5
90022c5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022c62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022c66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022c6a:	ee12 2a90 	vmov	r2, s5
90022c6e:	eef0 2a47 	vmov.f32	s5, s14
90022c72:	fb92 f3f3 	sdiv	r3, r2, r3
90022c76:	ee13 2a10 	vmov	r2, s6
90022c7a:	932b      	str	r3, [sp, #172]	@ 0xac
90022c7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022c7e:	eeb0 3a67 	vmov.f32	s6, s15
90022c82:	fb92 f3f3 	sdiv	r3, r2, r3
90022c86:	932c      	str	r3, [sp, #176]	@ 0xb0
90022c88:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022c8a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90022c8c:	3b01      	subs	r3, #1
90022c8e:	9319      	str	r3, [sp, #100]	@ 0x64
90022c90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022c92:	bf08      	it	eq
90022c94:	4613      	moveq	r3, r2
90022c96:	9309      	str	r3, [sp, #36]	@ 0x24
90022c98:	e5f4      	b.n	90022884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022c9a:	2900      	cmp	r1, #0
90022c9c:	f43f ae66 	beq.w	9002296c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022ca0:	f818 0000 	ldrb.w	r0, [r8, r0]
90022ca4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022ca8:	900a      	str	r0, [sp, #40]	@ 0x28
90022caa:	0e00      	lsrs	r0, r0, #24
90022cac:	9013      	str	r0, [sp, #76]	@ 0x4c
90022cae:	e65d      	b.n	9002296c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022cb0:	f113 0801 	adds.w	r8, r3, #1
90022cb4:	f53f af74 	bmi.w	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022cb8:	4540      	cmp	r0, r8
90022cba:	f6ff af71 	blt.w	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022cbe:	f11c 0801 	adds.w	r8, ip, #1
90022cc2:	f53f af6d 	bmi.w	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022cc6:	45c6      	cmp	lr, r8
90022cc8:	f6ff af6a 	blt.w	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022ccc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90022cce:	b200      	sxth	r0, r0
90022cd0:	9302      	str	r3, [sp, #8]
90022cd2:	fa0f f38e 	sxth.w	r3, lr
90022cd6:	9000      	str	r0, [sp, #0]
90022cd8:	9301      	str	r3, [sp, #4]
90022cda:	4633      	mov	r3, r6
90022cdc:	981d      	ldr	r0, [sp, #116]	@ 0x74
90022cde:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022ce2:	e9cd c203 	strd	ip, r2, [sp, #12]
90022ce6:	4639      	mov	r1, r7
90022ce8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90022cea:	f7ff fc63 	bl	900225b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90022cee:	e757      	b.n	90022ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022cf0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90022cf2:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022cf6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022cf8:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022cfc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022cfe:	1427      	asrs	r7, r4, #16
90022d00:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022d02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022d06:	142b      	asrs	r3, r5, #16
90022d08:	fb01 7303 	mla	r3, r1, r3, r7
90022d0c:	18e7      	adds	r7, r4, r3
90022d0e:	5ce3      	ldrb	r3, [r4, r3]
90022d10:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022d14:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022d18:	2a00      	cmp	r2, #0
90022d1a:	f000 8137 	beq.w	90022f8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90022d1e:	f897 e001 	ldrb.w	lr, [r7, #1]
90022d22:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90022d26:	9410      	str	r4, [sp, #64]	@ 0x40
90022d28:	0e24      	lsrs	r4, r4, #24
90022d2a:	9417      	str	r4, [sp, #92]	@ 0x5c
90022d2c:	b170      	cbz	r0, 90022d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022d2e:	eb07 0e01 	add.w	lr, r7, r1
90022d32:	5c79      	ldrb	r1, [r7, r1]
90022d34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022d38:	910b      	str	r1, [sp, #44]	@ 0x2c
90022d3a:	0e09      	lsrs	r1, r1, #24
90022d3c:	9114      	str	r1, [sp, #80]	@ 0x50
90022d3e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90022d42:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022d46:	9111      	str	r1, [sp, #68]	@ 0x44
90022d48:	0e09      	lsrs	r1, r1, #24
90022d4a:	9118      	str	r1, [sp, #96]	@ 0x60
90022d4c:	b292      	uxth	r2, r2
90022d4e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90022d50:	b280      	uxth	r0, r0
90022d52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022d54:	fb02 f800 	mul.w	r8, r2, r0
90022d58:	0112      	lsls	r2, r2, #4
90022d5a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022d5e:	eba2 0e08 	sub.w	lr, r2, r8
90022d62:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90022d66:	b280      	uxth	r0, r0
90022d68:	fa1f fe8e 	uxth.w	lr, lr
90022d6c:	1a12      	subs	r2, r2, r0
90022d6e:	fb0e f101 	mul.w	r1, lr, r1
90022d72:	b292      	uxth	r2, r2
90022d74:	fb02 110c 	mla	r1, r2, ip, r1
90022d78:	fb00 1104 	mla	r1, r0, r4, r1
90022d7c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022d7e:	fb08 1104 	mla	r1, r8, r4, r1
90022d82:	f3c1 2107 	ubfx	r1, r1, #8, #8
90022d86:	2900      	cmp	r1, #0
90022d88:	f000 80f5 	beq.w	90022f76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90022d8c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90022d90:	d019      	beq.n	90022dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90022d92:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90022d96:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022d9a:	fb0c fa0a 	mul.w	sl, ip, sl
90022d9e:	fb0c fc03 	mul.w	ip, ip, r3
90022da2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022da6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90022daa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90022dae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022db2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022db6:	4453      	add	r3, sl
90022db8:	0a3f      	lsrs	r7, r7, #8
90022dba:	0a1b      	lsrs	r3, r3, #8
90022dbc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90022dc0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022dc4:	433b      	orrs	r3, r7
90022dc6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022dc8:	2cff      	cmp	r4, #255	@ 0xff
90022dca:	d020      	beq.n	90022e0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90022dcc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022dce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022dd2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022dd4:	4367      	muls	r7, r4
90022dd6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022dd8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022ddc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022de0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022de2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022de6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022dea:	fb04 fa0a 	mul.w	sl, r4, sl
90022dee:	44bc      	add	ip, r7
90022df0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022df4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022df8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022dfc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022e00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022e04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022e08:	ea4c 040a 	orr.w	r4, ip, sl
90022e0c:	9410      	str	r4, [sp, #64]	@ 0x40
90022e0e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022e10:	2cff      	cmp	r4, #255	@ 0xff
90022e12:	d020      	beq.n	90022e56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90022e14:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022e16:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022e1a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022e1c:	4367      	muls	r7, r4
90022e1e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022e20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022e24:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022e28:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022e2a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022e2e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022e32:	fb04 fa0a 	mul.w	sl, r4, sl
90022e36:	44bc      	add	ip, r7
90022e38:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022e3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022e44:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022e48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022e4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022e50:	ea4c 040a 	orr.w	r4, ip, sl
90022e54:	940b      	str	r4, [sp, #44]	@ 0x2c
90022e56:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022e58:	2cff      	cmp	r4, #255	@ 0xff
90022e5a:	d020      	beq.n	90022e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90022e5c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022e5e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022e62:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022e64:	4367      	muls	r7, r4
90022e66:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022e68:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022e6c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022e70:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022e72:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022e76:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022e7a:	fb04 fa0a 	mul.w	sl, r4, sl
90022e7e:	44bc      	add	ip, r7
90022e80:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022e84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022e8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022e94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022e98:	ea4c 040a 	orr.w	r4, ip, sl
90022e9c:	9411      	str	r4, [sp, #68]	@ 0x44
90022e9e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022ea0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90022ea4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022ea8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022eac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022eae:	fb0e f707 	mul.w	r7, lr, r7
90022eb2:	fb02 770c 	mla	r7, r2, ip, r7
90022eb6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022eba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022ebc:	fb00 770c 	mla	r7, r0, ip, r7
90022ec0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022ec4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022ec6:	fb08 770c 	mla	r7, r8, ip, r7
90022eca:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90022ece:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022ed0:	fb0e fe0c 	mul.w	lr, lr, ip
90022ed4:	0a3f      	lsrs	r7, r7, #8
90022ed6:	fb02 e303 	mla	r3, r2, r3, lr
90022eda:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90022edc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90022ee0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90022ee4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90022ee6:	fb00 330a 	mla	r3, r0, sl, r3
90022eea:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90022eee:	f8b9 0000 	ldrh.w	r0, [r9]
90022ef2:	fb08 3c0c 	mla	ip, r8, ip, r3
90022ef6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022ef8:	1202      	asrs	r2, r0, #8
90022efa:	434b      	muls	r3, r1
90022efc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022f00:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90022f04:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022f08:	1c59      	adds	r1, r3, #1
90022f0a:	ea47 070c 	orr.w	r7, r7, ip
90022f0e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90022f12:	0c3b      	lsrs	r3, r7, #16
90022f14:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90022f18:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90022f1c:	b2ff      	uxtb	r7, r7
90022f1e:	fb13 f304 	smulbb	r3, r3, r4
90022f22:	b2c9      	uxtb	r1, r1
90022f24:	fb1c fc04 	smulbb	ip, ip, r4
90022f28:	fb02 3201 	mla	r2, r2, r1, r3
90022f2c:	10c3      	asrs	r3, r0, #3
90022f2e:	fb17 f704 	smulbb	r7, r7, r4
90022f32:	00c0      	lsls	r0, r0, #3
90022f34:	b292      	uxth	r2, r2
90022f36:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022f3a:	b2c0      	uxtb	r0, r0
90022f3c:	fb03 c301 	mla	r3, r3, r1, ip
90022f40:	f102 0c01 	add.w	ip, r2, #1
90022f44:	fb00 7001 	mla	r0, r0, r1, r7
90022f48:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90022f4c:	b280      	uxth	r0, r0
90022f4e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90022f52:	b29b      	uxth	r3, r3
90022f54:	1c42      	adds	r2, r0, #1
90022f56:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90022f5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022f5e:	ea42 020c 	orr.w	r2, r2, ip
90022f62:	f103 0c01 	add.w	ip, r3, #1
90022f66:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90022f6a:	095b      	lsrs	r3, r3, #5
90022f6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022f70:	431a      	orrs	r2, r3
90022f72:	f8a9 2000 	strh.w	r2, [r9]
90022f76:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022f78:	f109 0902 	add.w	r9, r9, #2
90022f7c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022f7e:	f10b 3bff 	add.w	fp, fp, #4294967295
90022f82:	441a      	add	r2, r3
90022f84:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022f86:	9229      	str	r2, [sp, #164]	@ 0xa4
90022f88:	441d      	add	r5, r3
90022f8a:	e63d      	b.n	90022c08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90022f8c:	2800      	cmp	r0, #0
90022f8e:	f43f aedd 	beq.w	90022d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022f92:	5c79      	ldrb	r1, [r7, r1]
90022f94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022f98:	910b      	str	r1, [sp, #44]	@ 0x2c
90022f9a:	0e09      	lsrs	r1, r1, #24
90022f9c:	9114      	str	r1, [sp, #80]	@ 0x50
90022f9e:	e6d5      	b.n	90022d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022fa0:	b01f      	add	sp, #124	@ 0x7c
90022fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022fa6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90022fa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022faa:	b089      	sub	sp, #36	@ 0x24
90022fac:	9101      	str	r1, [sp, #4]
90022fae:	9801      	ldr	r0, [sp, #4]
90022fb0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90022fb4:	8800      	ldrh	r0, [r0, #0]
90022fb6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90022fba:	1206      	asrs	r6, r0, #8
90022fbc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90022fc0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90022fc4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022fc8:	9602      	str	r6, [sp, #8]
90022fca:	10c6      	asrs	r6, r0, #3
90022fcc:	00c0      	lsls	r0, r0, #3
90022fce:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022fd2:	b2c0      	uxtb	r0, r0
90022fd4:	9603      	str	r6, [sp, #12]
90022fd6:	9004      	str	r0, [sp, #16]
90022fd8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90022fdc:	fb07 100c 	mla	r0, r7, ip, r1
90022fe0:	2f00      	cmp	r7, #0
90022fe2:	eb02 0e00 	add.w	lr, r2, r0
90022fe6:	f2c0 810a 	blt.w	900231fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022fea:	45b8      	cmp	r8, r7
90022fec:	f340 8107 	ble.w	900231fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022ff0:	2900      	cmp	r1, #0
90022ff2:	f2c0 8102 	blt.w	900231fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022ff6:	458c      	cmp	ip, r1
90022ff8:	f340 80ff 	ble.w	900231fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022ffc:	5c12      	ldrb	r2, [r2, r0]
90022ffe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90023002:	1c4a      	adds	r2, r1, #1
90023004:	f100 80fe 	bmi.w	90023204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023008:	4594      	cmp	ip, r2
9002300a:	f340 80fb 	ble.w	90023204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002300e:	2d00      	cmp	r5, #0
90023010:	f000 80fa 	beq.w	90023208 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90023014:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023018:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9002301c:	3701      	adds	r7, #1
9002301e:	f100 80f7 	bmi.w	90023210 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023022:	45b8      	cmp	r8, r7
90023024:	f340 80f4 	ble.w	90023210 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023028:	2c00      	cmp	r4, #0
9002302a:	f000 80f4 	beq.w	90023216 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002302e:	2900      	cmp	r1, #0
90023030:	eb0e 020c 	add.w	r2, lr, ip
90023034:	f2c0 80ea 	blt.w	9002320c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023038:	458c      	cmp	ip, r1
9002303a:	f340 80e7 	ble.w	9002320c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002303e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023042:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90023046:	3101      	adds	r1, #1
90023048:	f100 80e8 	bmi.w	9002321c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002304c:	458c      	cmp	ip, r1
9002304e:	f340 80e5 	ble.w	9002321c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023052:	2d00      	cmp	r5, #0
90023054:	f000 80e4 	beq.w	90023220 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90023058:	7852      	ldrb	r2, [r2, #1]
9002305a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002305e:	0e0b      	lsrs	r3, r1, #24
90023060:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90023064:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90023068:	9300      	str	r3, [sp, #0]
9002306a:	b2a4      	uxth	r4, r4
9002306c:	b2ab      	uxth	r3, r5
9002306e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90023072:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90023076:	fb03 f904 	mul.w	r9, r3, r4
9002307a:	011b      	lsls	r3, r3, #4
9002307c:	fb0a f505 	mul.w	r5, sl, r5
90023080:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023084:	eba3 0e09 	sub.w	lr, r3, r9
90023088:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
9002308c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90023090:	0a28      	lsrs	r0, r5, #8
90023092:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90023096:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002309a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002309e:	fb0a f303 	mul.w	r3, sl, r3
900230a2:	fb08 f707 	mul.w	r7, r8, r7
900230a6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900230aa:	4405      	add	r5, r0
900230ac:	fb08 fc0c 	mul.w	ip, r8, ip
900230b0:	b2a4      	uxth	r4, r4
900230b2:	0a2d      	lsrs	r5, r5, #8
900230b4:	fa1f fe8e 	uxth.w	lr, lr
900230b8:	1b12      	subs	r2, r2, r4
900230ba:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900230be:	b292      	uxth	r2, r2
900230c0:	9005      	str	r0, [sp, #20]
900230c2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900230c6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900230ca:	ea4f 201c 	mov.w	r0, ip, lsr #8
900230ce:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900230d2:	0a1b      	lsrs	r3, r3, #8
900230d4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900230d8:	9306      	str	r3, [sp, #24]
900230da:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900230de:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900230e2:	4460      	add	r0, ip
900230e4:	fb0b f303 	mul.w	r3, fp, r3
900230e8:	fb0b f606 	mul.w	r6, fp, r6
900230ec:	0a00      	lsrs	r0, r0, #8
900230ee:	0a1d      	lsrs	r5, r3, #8
900230f0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900230f4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900230f8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900230fc:	441d      	add	r5, r3
900230fe:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90023102:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023106:	f507 7380 	add.w	r3, r7, #256	@ 0x100
9002310a:	0a2d      	lsrs	r5, r5, #8
9002310c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023110:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90023114:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023118:	0a36      	lsrs	r6, r6, #8
9002311a:	0a1b      	lsrs	r3, r3, #8
9002311c:	fb05 f50e 	mul.w	r5, r5, lr
90023120:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023124:	9307      	str	r3, [sp, #28]
90023126:	0e0b      	lsrs	r3, r1, #24
90023128:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002312c:	fb0e f606 	mul.w	r6, lr, r6
90023130:	435f      	muls	r7, r3
90023132:	4359      	muls	r1, r3
90023134:	9b05      	ldr	r3, [sp, #20]
90023136:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002313a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002313e:	fb03 5502 	mla	r5, r3, r2, r5
90023142:	9b06      	ldr	r3, [sp, #24]
90023144:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023148:	fb0e fe0b 	mul.w	lr, lr, fp
9002314c:	44bc      	add	ip, r7
9002314e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023152:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023156:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002315a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002315e:	0a09      	lsrs	r1, r1, #8
90023160:	fb0c 5509 	mla	r5, ip, r9, r5
90023164:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023168:	fb00 5504 	mla	r5, r0, r4, r5
9002316c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023170:	9b07      	ldr	r3, [sp, #28]
90023172:	fb02 6000 	mla	r0, r2, r0, r6
90023176:	0a2d      	lsrs	r5, r5, #8
90023178:	fb02 e20a 	mla	r2, r2, sl, lr
9002317c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023180:	fb09 0001 	mla	r0, r9, r1, r0
90023184:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023188:	fb04 0003 	mla	r0, r4, r3, r0
9002318c:	9b00      	ldr	r3, [sp, #0]
9002318e:	fb04 2408 	mla	r4, r4, r8, r2
90023192:	9a04      	ldr	r2, [sp, #16]
90023194:	0a00      	lsrs	r0, r0, #8
90023196:	fb09 4903 	mla	r9, r9, r3, r4
9002319a:	9b02      	ldr	r3, [sp, #8]
9002319c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
900231a0:	ea6f 2929 	mvn.w	r9, r9, asr #8
900231a4:	4305      	orrs	r5, r0
900231a6:	fa5f f989 	uxtb.w	r9, r9
900231aa:	fb03 f109 	mul.w	r1, r3, r9
900231ae:	9b03      	ldr	r3, [sp, #12]
900231b0:	fb03 f309 	mul.w	r3, r3, r9
900231b4:	fb02 f909 	mul.w	r9, r2, r9
900231b8:	1c4a      	adds	r2, r1, #1
900231ba:	1c58      	adds	r0, r3, #1
900231bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900231c0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900231c4:	0c2a      	lsrs	r2, r5, #16
900231c6:	0a2b      	lsrs	r3, r5, #8
900231c8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900231cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900231d0:	0212      	lsls	r2, r2, #8
900231d2:	00db      	lsls	r3, r3, #3
900231d4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900231d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900231dc:	4313      	orrs	r3, r2
900231de:	f109 0201 	add.w	r2, r9, #1
900231e2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900231e6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900231ea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900231ee:	431d      	orrs	r5, r3
900231f0:	9b01      	ldr	r3, [sp, #4]
900231f2:	801d      	strh	r5, [r3, #0]
900231f4:	b009      	add	sp, #36	@ 0x24
900231f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900231fa:	2000      	movs	r0, #0
900231fc:	e701      	b.n	90023002 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900231fe:	2600      	movs	r6, #0
90023200:	4630      	mov	r0, r6
90023202:	e70b      	b.n	9002301c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023204:	2600      	movs	r6, #0
90023206:	e709      	b.n	9002301c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023208:	462e      	mov	r6, r5
9002320a:	e707      	b.n	9002301c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002320c:	2700      	movs	r7, #0
9002320e:	e71a      	b.n	90023046 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023210:	2100      	movs	r1, #0
90023212:	460f      	mov	r7, r1
90023214:	e723      	b.n	9002305e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023216:	4621      	mov	r1, r4
90023218:	4627      	mov	r7, r4
9002321a:	e720      	b.n	9002305e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002321c:	2100      	movs	r1, #0
9002321e:	e71e      	b.n	9002305e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023220:	4629      	mov	r1, r5
90023222:	e71c      	b.n	9002305e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023228:	b09b      	sub	sp, #108	@ 0x6c
9002322a:	9218      	str	r2, [sp, #96]	@ 0x60
9002322c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002322e:	9019      	str	r0, [sp, #100]	@ 0x64
90023230:	9116      	str	r1, [sp, #88]	@ 0x58
90023232:	6850      	ldr	r0, [r2, #4]
90023234:	9307      	str	r3, [sp, #28]
90023236:	6812      	ldr	r2, [r2, #0]
90023238:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002323a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002323e:	fb00 1303 	mla	r3, r0, r3, r1
90023242:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023246:	930a      	str	r3, [sp, #40]	@ 0x28
90023248:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002324a:	681b      	ldr	r3, [r3, #0]
9002324c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002324e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023250:	685e      	ldr	r6, [r3, #4]
90023252:	3604      	adds	r6, #4
90023254:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023256:	2b00      	cmp	r3, #0
90023258:	dc03      	bgt.n	90023262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002325a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002325c:	2b00      	cmp	r3, #0
9002325e:	f340 8373 	ble.w	90023948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023262:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023264:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023268:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002326c:	1e48      	subs	r0, r1, #1
9002326e:	1e57      	subs	r7, r2, #1
90023270:	9b07      	ldr	r3, [sp, #28]
90023272:	2b00      	cmp	r3, #0
90023274:	f340 818f 	ble.w	90023596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023278:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002327a:	142b      	asrs	r3, r5, #16
9002327c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023280:	d406      	bmi.n	90023290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023282:	4584      	cmp	ip, r0
90023284:	da04      	bge.n	90023290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023286:	2b00      	cmp	r3, #0
90023288:	db02      	blt.n	90023290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002328a:	42bb      	cmp	r3, r7
9002328c:	f2c0 8184 	blt.w	90023598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023290:	f11c 0c01 	adds.w	ip, ip, #1
90023294:	f100 8172 	bmi.w	9002357c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023298:	4561      	cmp	r1, ip
9002329a:	f2c0 816f 	blt.w	9002357c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002329e:	3301      	adds	r3, #1
900232a0:	f100 816c 	bmi.w	9002357c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900232a4:	429a      	cmp	r2, r3
900232a6:	f2c0 8169 	blt.w	9002357c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900232aa:	9b07      	ldr	r3, [sp, #28]
900232ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900232ae:	9317      	str	r3, [sp, #92]	@ 0x5c
900232b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900232b2:	2b00      	cmp	r3, #0
900232b4:	f340 818e 	ble.w	900235d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900232b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900232ba:	ea4f 4c25 	mov.w	ip, r5, asr #16
900232be:	f3c5 3003 	ubfx	r0, r5, #12, #4
900232c2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900232c6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900232c8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900232cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900232ce:	141b      	asrs	r3, r3, #16
900232d0:	f100 81d1 	bmi.w	90023676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232d4:	f101 38ff 	add.w	r8, r1, #4294967295
900232d8:	4543      	cmp	r3, r8
900232da:	f280 81cc 	bge.w	90023676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232de:	f1bc 0f00 	cmp.w	ip, #0
900232e2:	f2c0 81c8 	blt.w	90023676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232e6:	f10e 38ff 	add.w	r8, lr, #4294967295
900232ea:	45c4      	cmp	ip, r8
900232ec:	f280 81c3 	bge.w	90023676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232f0:	b209      	sxth	r1, r1
900232f2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900232f4:	fb0c 3301 	mla	r3, ip, r1, r3
900232f8:	eb04 0803 	add.w	r8, r4, r3
900232fc:	5ce3      	ldrb	r3, [r4, r3]
900232fe:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023302:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023306:	2a00      	cmp	r2, #0
90023308:	f000 81aa 	beq.w	90023660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
9002330c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023310:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023314:	940b      	str	r4, [sp, #44]	@ 0x2c
90023316:	0e24      	lsrs	r4, r4, #24
90023318:	9412      	str	r4, [sp, #72]	@ 0x48
9002331a:	b178      	cbz	r0, 9002333c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002331c:	eb08 0c01 	add.w	ip, r8, r1
90023320:	f818 1001 	ldrb.w	r1, [r8, r1]
90023324:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023328:	9108      	str	r1, [sp, #32]
9002332a:	0e09      	lsrs	r1, r1, #24
9002332c:	9110      	str	r1, [sp, #64]	@ 0x40
9002332e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023332:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023336:	910c      	str	r1, [sp, #48]	@ 0x30
90023338:	0e09      	lsrs	r1, r1, #24
9002333a:	9113      	str	r1, [sp, #76]	@ 0x4c
9002333c:	b292      	uxth	r2, r2
9002333e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023340:	b280      	uxth	r0, r0
90023342:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023344:	fb02 f900 	mul.w	r9, r2, r0
90023348:	0112      	lsls	r2, r2, #4
9002334a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002334e:	eba2 0809 	sub.w	r8, r2, r9
90023352:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023356:	b280      	uxth	r0, r0
90023358:	fa1f f888 	uxth.w	r8, r8
9002335c:	1a12      	subs	r2, r2, r0
9002335e:	fb08 f101 	mul.w	r1, r8, r1
90023362:	b292      	uxth	r2, r2
90023364:	fb02 110e 	mla	r1, r2, lr, r1
90023368:	fb00 1104 	mla	r1, r0, r4, r1
9002336c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002336e:	fb09 1104 	mla	r1, r9, r4, r1
90023372:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023376:	2900      	cmp	r1, #0
90023378:	f000 80f5 	beq.w	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002337c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023380:	d01b      	beq.n	900233ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023382:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023386:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002338a:	fb0e fa0a 	mul.w	sl, lr, sl
9002338e:	fb0e fe03 	mul.w	lr, lr, r3
90023392:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023396:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002339a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002339e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900233a2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900233a6:	4453      	add	r3, sl
900233a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900233ac:	0a1b      	lsrs	r3, r3, #8
900233ae:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900233b2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900233b6:	ea43 030c 	orr.w	r3, r3, ip
900233ba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900233bc:	2cff      	cmp	r4, #255	@ 0xff
900233be:	d021      	beq.n	90023404 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900233c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900233c2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900233c6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900233c8:	fb04 fb0b 	mul.w	fp, r4, fp
900233cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900233ce:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900233d2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900233d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900233d8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900233dc:	fb04 fa0a 	mul.w	sl, r4, sl
900233e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900233e4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900233e8:	44de      	add	lr, fp
900233ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900233fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900233fe:	ea4e 040a 	orr.w	r4, lr, sl
90023402:	940b      	str	r4, [sp, #44]	@ 0x2c
90023404:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023406:	2cff      	cmp	r4, #255	@ 0xff
90023408:	d021      	beq.n	9002344e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002340a:	9c08      	ldr	r4, [sp, #32]
9002340c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023410:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023412:	fb04 fb0b 	mul.w	fp, r4, fp
90023416:	9c08      	ldr	r4, [sp, #32]
90023418:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002341c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002341e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023422:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023426:	fb04 fa0a 	mul.w	sl, r4, sl
9002342a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002342e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023432:	44de      	add	lr, fp
90023434:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023438:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002343c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023440:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023444:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023448:	ea4e 040a 	orr.w	r4, lr, sl
9002344c:	9408      	str	r4, [sp, #32]
9002344e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023450:	2cff      	cmp	r4, #255	@ 0xff
90023452:	d021      	beq.n	90023498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023454:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023456:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002345a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002345c:	fb04 fb0b 	mul.w	fp, r4, fp
90023460:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023462:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023466:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023468:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002346c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023470:	fb04 fa0a 	mul.w	sl, r4, sl
90023474:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023478:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002347c:	44de      	add	lr, fp
9002347e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023482:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023486:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002348a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002348e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023492:	ea4e 040a 	orr.w	r4, lr, sl
90023496:	940c      	str	r4, [sp, #48]	@ 0x30
90023498:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002349a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002349e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900234a2:	43c9      	mvns	r1, r1
900234a4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900234a8:	9c08      	ldr	r4, [sp, #32]
900234aa:	fb08 fc0c 	mul.w	ip, r8, ip
900234ae:	fb02 cc0e 	mla	ip, r2, lr, ip
900234b2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900234b6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900234b8:	fb00 cc0e 	mla	ip, r0, lr, ip
900234bc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900234c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900234c2:	fb09 cc0e 	mla	ip, r9, lr, ip
900234c6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900234ca:	fb08 f80e 	mul.w	r8, r8, lr
900234ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900234d2:	fa5f fe81 	uxtb.w	lr, r1
900234d6:	fb02 8303 	mla	r3, r2, r3, r8
900234da:	9a08      	ldr	r2, [sp, #32]
900234dc:	f8b7 8000 	ldrh.w	r8, [r7]
900234e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900234e4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900234e8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900234ea:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900234ee:	fb00 330a 	mla	r3, r0, sl, r3
900234f2:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
900234f6:	ea4f 2228 	mov.w	r2, r8, asr #8
900234fa:	fb09 3900 	mla	r9, r9, r0, r3
900234fe:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023502:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023506:	b2c9      	uxtb	r1, r1
90023508:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002350c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90023510:	fb02 f20e 	mul.w	r2, r2, lr
90023514:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023518:	fb00 f00e 	mul.w	r0, r0, lr
9002351c:	1c53      	adds	r3, r2, #1
9002351e:	fb01 f10e 	mul.w	r1, r1, lr
90023522:	ea4c 0c09 	orr.w	ip, ip, r9
90023526:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002352a:	ea4f 431c 	mov.w	r3, ip, lsr #16
9002352e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023532:	4a60      	ldr	r2, [pc, #384]	@ (900236b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023534:	b2db      	uxtb	r3, r3
90023536:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002353a:	1c43      	adds	r3, r0, #1
9002353c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023540:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023544:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023548:	00db      	lsls	r3, r3, #3
9002354a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002354e:	4313      	orrs	r3, r2
90023550:	1c4a      	adds	r2, r1, #1
90023552:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023556:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002355a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002355e:	ea4c 0c03 	orr.w	ip, ip, r3
90023562:	f8a7 c000 	strh.w	ip, [r7]
90023566:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023568:	3702      	adds	r7, #2
9002356a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002356c:	441a      	add	r2, r3
9002356e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023570:	441d      	add	r5, r3
90023572:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023574:	9225      	str	r2, [sp, #148]	@ 0x94
90023576:	3b01      	subs	r3, #1
90023578:	9317      	str	r3, [sp, #92]	@ 0x5c
9002357a:	e699      	b.n	900232b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002357c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002357e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023580:	441c      	add	r4, r3
90023582:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023584:	441d      	add	r5, r3
90023586:	9b07      	ldr	r3, [sp, #28]
90023588:	9425      	str	r4, [sp, #148]	@ 0x94
9002358a:	3b01      	subs	r3, #1
9002358c:	9307      	str	r3, [sp, #28]
9002358e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023590:	3302      	adds	r3, #2
90023592:	930a      	str	r3, [sp, #40]	@ 0x28
90023594:	e66c      	b.n	90023270 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023596:	d024      	beq.n	900235e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90023598:	9b07      	ldr	r3, [sp, #28]
9002359a:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002359c:	3b01      	subs	r3, #1
9002359e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900235a0:	fb00 4003 	mla	r0, r0, r3, r4
900235a4:	1400      	asrs	r0, r0, #16
900235a6:	f53f ae80 	bmi.w	900232aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900235aa:	3901      	subs	r1, #1
900235ac:	4288      	cmp	r0, r1
900235ae:	f6bf ae7c 	bge.w	900232aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900235b2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900235b4:	fb01 5303 	mla	r3, r1, r3, r5
900235b8:	141b      	asrs	r3, r3, #16
900235ba:	f53f ae76 	bmi.w	900232aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900235be:	3a01      	subs	r2, #1
900235c0:	4293      	cmp	r3, r2
900235c2:	f6bf ae72 	bge.w	900232aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900235c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900235ca:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900235ce:	f1bb 0f00 	cmp.w	fp, #0
900235d2:	dc71      	bgt.n	900236b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900235d4:	9b07      	ldr	r3, [sp, #28]
900235d6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900235da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900235dc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900235e0:	930a      	str	r3, [sp, #40]	@ 0x28
900235e2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900235e4:	2b00      	cmp	r3, #0
900235e6:	f340 81af 	ble.w	90023948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900235ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900235ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900235f0:	ee30 0a04 	vadd.f32	s0, s0, s8
900235f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235f8:	eef0 6a62 	vmov.f32	s13, s5
900235fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023600:	ee31 1a05 	vadd.f32	s2, s2, s10
90023604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023608:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
9002360c:	eef0 6a43 	vmov.f32	s13, s6
90023610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023614:	ee16 5a90 	vmov	r5, s13
90023618:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002361c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023620:	ee77 2a62 	vsub.f32	s5, s14, s5
90023624:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023628:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002362c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023630:	ee12 2a90 	vmov	r2, s5
90023634:	eef0 2a47 	vmov.f32	s5, s14
90023638:	fb92 f3f3 	sdiv	r3, r2, r3
9002363c:	ee13 2a10 	vmov	r2, s6
90023640:	9327      	str	r3, [sp, #156]	@ 0x9c
90023642:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023644:	eeb0 3a67 	vmov.f32	s6, s15
90023648:	fb92 f3f3 	sdiv	r3, r2, r3
9002364c:	9328      	str	r3, [sp, #160]	@ 0xa0
9002364e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023650:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90023652:	3b01      	subs	r3, #1
90023654:	9316      	str	r3, [sp, #88]	@ 0x58
90023656:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023658:	bf08      	it	eq
9002365a:	4613      	moveq	r3, r2
9002365c:	9307      	str	r3, [sp, #28]
9002365e:	e5f9      	b.n	90023254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023660:	2800      	cmp	r0, #0
90023662:	f43f ae6b 	beq.w	9002333c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023666:	f818 1001 	ldrb.w	r1, [r8, r1]
9002366a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002366e:	9108      	str	r1, [sp, #32]
90023670:	0e09      	lsrs	r1, r1, #24
90023672:	9110      	str	r1, [sp, #64]	@ 0x40
90023674:	e662      	b.n	9002333c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023676:	f113 0801 	adds.w	r8, r3, #1
9002367a:	f53f af74 	bmi.w	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002367e:	4541      	cmp	r1, r8
90023680:	f6ff af71 	blt.w	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023684:	f11c 0801 	adds.w	r8, ip, #1
90023688:	f53f af6d 	bmi.w	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002368c:	45c6      	cmp	lr, r8
9002368e:	f6ff af6a 	blt.w	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023692:	b209      	sxth	r1, r1
90023694:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90023698:	fa0f f38e 	sxth.w	r3, lr
9002369c:	9100      	str	r1, [sp, #0]
9002369e:	4639      	mov	r1, r7
900236a0:	9301      	str	r3, [sp, #4]
900236a2:	4633      	mov	r3, r6
900236a4:	e9cd 2004 	strd	r2, r0, [sp, #16]
900236a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900236aa:	9819      	ldr	r0, [sp, #100]	@ 0x64
900236ac:	f7ff fc7b 	bl	90022fa6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900236b0:	e759      	b.n	90023566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900236b2:	bf00      	nop
900236b4:	fffff800 	.word	0xfffff800
900236b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900236ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
900236be:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900236c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900236c4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900236c6:	1427      	asrs	r7, r4, #16
900236c8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900236ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900236ce:	142b      	asrs	r3, r5, #16
900236d0:	fb01 7303 	mla	r3, r1, r3, r7
900236d4:	18e7      	adds	r7, r4, r3
900236d6:	5ce3      	ldrb	r3, [r4, r3]
900236d8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900236dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900236e0:	2a00      	cmp	r2, #0
900236e2:	f000 8127 	beq.w	90023934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900236e6:	f897 e001 	ldrb.w	lr, [r7, #1]
900236ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900236ee:	940d      	str	r4, [sp, #52]	@ 0x34
900236f0:	0e24      	lsrs	r4, r4, #24
900236f2:	9414      	str	r4, [sp, #80]	@ 0x50
900236f4:	b170      	cbz	r0, 90023714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900236f6:	eb07 0e01 	add.w	lr, r7, r1
900236fa:	5c79      	ldrb	r1, [r7, r1]
900236fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023700:	9109      	str	r1, [sp, #36]	@ 0x24
90023702:	0e09      	lsrs	r1, r1, #24
90023704:	9111      	str	r1, [sp, #68]	@ 0x44
90023706:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002370a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002370e:	910e      	str	r1, [sp, #56]	@ 0x38
90023710:	0e09      	lsrs	r1, r1, #24
90023712:	9115      	str	r1, [sp, #84]	@ 0x54
90023714:	b292      	uxth	r2, r2
90023716:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023718:	b280      	uxth	r0, r0
9002371a:	fb02 f800 	mul.w	r8, r2, r0
9002371e:	0112      	lsls	r2, r2, #4
90023720:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023724:	eba2 0e08 	sub.w	lr, r2, r8
90023728:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002372c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002372e:	b280      	uxth	r0, r0
90023730:	fa1f fe8e 	uxth.w	lr, lr
90023734:	1a09      	subs	r1, r1, r0
90023736:	fb0e f202 	mul.w	r2, lr, r2
9002373a:	b289      	uxth	r1, r1
9002373c:	fb01 220c 	mla	r2, r1, ip, r2
90023740:	fb00 2204 	mla	r2, r0, r4, r2
90023744:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023746:	fb08 2204 	mla	r2, r8, r4, r2
9002374a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002374e:	2a00      	cmp	r2, #0
90023750:	f000 80e5 	beq.w	9002391e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90023754:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023758:	d019      	beq.n	9002378e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002375a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002375e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023762:	fb0c fa0a 	mul.w	sl, ip, sl
90023766:	fb0c fc03 	mul.w	ip, ip, r3
9002376a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002376e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023772:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023776:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002377a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002377e:	4453      	add	r3, sl
90023780:	0a3f      	lsrs	r7, r7, #8
90023782:	0a1b      	lsrs	r3, r3, #8
90023784:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023788:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002378c:	433b      	orrs	r3, r7
9002378e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023790:	2cff      	cmp	r4, #255	@ 0xff
90023792:	d020      	beq.n	900237d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90023794:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023796:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002379a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002379c:	4367      	muls	r7, r4
9002379e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900237a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900237a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900237a8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900237aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900237ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900237b2:	fb04 fa0a 	mul.w	sl, r4, sl
900237b6:	44bc      	add	ip, r7
900237b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900237bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900237c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900237c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900237d0:	ea4c 040a 	orr.w	r4, ip, sl
900237d4:	940d      	str	r4, [sp, #52]	@ 0x34
900237d6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900237d8:	2cff      	cmp	r4, #255	@ 0xff
900237da:	d020      	beq.n	9002381e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900237dc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900237de:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900237e2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900237e4:	4367      	muls	r7, r4
900237e6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900237e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900237ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900237f0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900237f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900237f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900237fa:	fb04 fa0a 	mul.w	sl, r4, sl
900237fe:	44bc      	add	ip, r7
90023800:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023804:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023808:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002380c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023810:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023814:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023818:	ea4c 040a 	orr.w	r4, ip, sl
9002381c:	9409      	str	r4, [sp, #36]	@ 0x24
9002381e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023820:	2cff      	cmp	r4, #255	@ 0xff
90023822:	d020      	beq.n	90023866 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90023824:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023826:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002382a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002382c:	4367      	muls	r7, r4
9002382e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023830:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023834:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023838:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002383a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002383e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023842:	fb04 fa0a 	mul.w	sl, r4, sl
90023846:	44bc      	add	ip, r7
90023848:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002384c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023850:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023854:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023858:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002385c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023860:	ea4c 040a 	orr.w	r4, ip, sl
90023864:	940e      	str	r4, [sp, #56]	@ 0x38
90023866:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023868:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002386c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023870:	43d2      	mvns	r2, r2
90023872:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023876:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023878:	b2d2      	uxtb	r2, r2
9002387a:	fb0e f707 	mul.w	r7, lr, r7
9002387e:	fb01 770c 	mla	r7, r1, ip, r7
90023882:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023886:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023888:	fb00 770c 	mla	r7, r0, ip, r7
9002388c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023890:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023892:	fb08 770c 	mla	r7, r8, ip, r7
90023896:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002389a:	fb0e fe0c 	mul.w	lr, lr, ip
9002389e:	0a3f      	lsrs	r7, r7, #8
900238a0:	fb01 e303 	mla	r3, r1, r3, lr
900238a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900238a6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900238aa:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900238ae:	990e      	ldr	r1, [sp, #56]	@ 0x38
900238b0:	fb00 330a 	mla	r3, r0, sl, r3
900238b4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900238b8:	fb08 3c0c 	mla	ip, r8, ip, r3
900238bc:	f8b9 3000 	ldrh.w	r3, [r9]
900238c0:	1218      	asrs	r0, r3, #8
900238c2:	10d9      	asrs	r1, r3, #3
900238c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900238c8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900238cc:	00db      	lsls	r3, r3, #3
900238ce:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900238d2:	4350      	muls	r0, r2
900238d4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900238d8:	b2db      	uxtb	r3, r3
900238da:	4351      	muls	r1, r2
900238dc:	ea47 070c 	orr.w	r7, r7, ip
900238e0:	4353      	muls	r3, r2
900238e2:	1c42      	adds	r2, r0, #1
900238e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900238e8:	0c3a      	lsrs	r2, r7, #16
900238ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900238ee:	4a18      	ldr	r2, [pc, #96]	@ (90023950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900238f0:	b2c0      	uxtb	r0, r0
900238f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900238f6:	1c4a      	adds	r2, r1, #1
900238f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900238fc:	0a3a      	lsrs	r2, r7, #8
900238fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023902:	00c9      	lsls	r1, r1, #3
90023904:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023908:	4301      	orrs	r1, r0
9002390a:	1c58      	adds	r0, r3, #1
9002390c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023910:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90023914:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90023918:	4308      	orrs	r0, r1
9002391a:	f8a9 0000 	strh.w	r0, [r9]
9002391e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023920:	f109 0902 	add.w	r9, r9, #2
90023924:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023926:	f10b 3bff 	add.w	fp, fp, #4294967295
9002392a:	441a      	add	r2, r3
9002392c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002392e:	9225      	str	r2, [sp, #148]	@ 0x94
90023930:	441d      	add	r5, r3
90023932:	e64c      	b.n	900235ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023934:	2800      	cmp	r0, #0
90023936:	f43f aeed 	beq.w	90023714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002393a:	5c79      	ldrb	r1, [r7, r1]
9002393c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023940:	9109      	str	r1, [sp, #36]	@ 0x24
90023942:	0e09      	lsrs	r1, r1, #24
90023944:	9111      	str	r1, [sp, #68]	@ 0x44
90023946:	e6e5      	b.n	90023714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023948:	b01b      	add	sp, #108	@ 0x6c
9002394a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002394e:	bf00      	nop
90023950:	fffff800 	.word	0xfffff800

90023954 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90023954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023958:	b085      	sub	sp, #20
9002395a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002395e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90023962:	2800      	cmp	r0, #0
90023964:	9103      	str	r1, [sp, #12]
90023966:	fb00 7406 	mla	r4, r0, r6, r7
9002396a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002396e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90023972:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90023976:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002397a:	eb03 0904 	add.w	r9, r3, r4
9002397e:	9501      	str	r5, [sp, #4]
90023980:	f2c0 8150 	blt.w	90023c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90023984:	4583      	cmp	fp, r0
90023986:	f340 814d 	ble.w	90023c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002398a:	2f00      	cmp	r7, #0
9002398c:	f2c0 8146 	blt.w	90023c1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90023990:	42be      	cmp	r6, r7
90023992:	f340 8143 	ble.w	90023c1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90023996:	f813 c004 	ldrb.w	ip, [r3, r4]
9002399a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
9002399e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900239a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900239a6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900239aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900239ae:	4355      	muls	r5, r2
900239b0:	fb0c f203 	mul.w	r2, ip, r3
900239b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900239b8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900239bc:	441d      	add	r5, r3
900239be:	f102 0320 	add.w	r3, r2, #32
900239c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900239c6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900239ca:	0a1b      	lsrs	r3, r3, #8
900239cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900239d0:	431c      	orrs	r4, r3
900239d2:	1c7b      	adds	r3, r7, #1
900239d4:	f100 812b 	bmi.w	90023c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900239d8:	429e      	cmp	r6, r3
900239da:	f340 8128 	ble.w	90023c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900239de:	2900      	cmp	r1, #0
900239e0:	f000 8128 	beq.w	90023c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900239e4:	9a01      	ldr	r2, [sp, #4]
900239e6:	f899 3001 	ldrb.w	r3, [r9, #1]
900239ea:	8855      	ldrh	r5, [r2, #2]
900239ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
900239f0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900239f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900239f8:	fb08 f802 	mul.w	r8, r8, r2
900239fc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90023a00:	435d      	muls	r5, r3
90023a02:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90023a06:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023a0a:	44d0      	add	r8, sl
90023a0c:	f105 0a20 	add.w	sl, r5, #32
90023a10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90023a14:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023a18:	0a2d      	lsrs	r5, r5, #8
90023a1a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023a1e:	432a      	orrs	r2, r5
90023a20:	3001      	adds	r0, #1
90023a22:	f100 810d 	bmi.w	90023c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90023a26:	4583      	cmp	fp, r0
90023a28:	f340 810a 	ble.w	90023c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90023a2c:	f1be 0f00 	cmp.w	lr, #0
90023a30:	f000 810b 	beq.w	90023c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90023a34:	2f00      	cmp	r7, #0
90023a36:	f2c0 8100 	blt.w	90023c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90023a3a:	42be      	cmp	r6, r7
90023a3c:	f340 80fd 	ble.w	90023c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90023a40:	9801      	ldr	r0, [sp, #4]
90023a42:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90023a46:	f819 5006 	ldrb.w	r5, [r9, r6]
90023a4a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023a4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90023a52:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90023a56:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90023a5a:	fb0a fa00 	mul.w	sl, sl, r0
90023a5e:	fb05 f808 	mul.w	r8, r5, r8
90023a62:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90023a66:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90023a6a:	4482      	add	sl, r0
90023a6c:	f108 0020 	add.w	r0, r8, #32
90023a70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023a74:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023a78:	0a00      	lsrs	r0, r0, #8
90023a7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023a7e:	ea4b 0b00 	orr.w	fp, fp, r0
90023a82:	3701      	adds	r7, #1
90023a84:	f100 80e6 	bmi.w	90023c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90023a88:	42be      	cmp	r6, r7
90023a8a:	f340 80e3 	ble.w	90023c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90023a8e:	2900      	cmp	r1, #0
90023a90:	f000 80e3 	beq.w	90023c5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90023a94:	3601      	adds	r6, #1
90023a96:	9801      	ldr	r0, [sp, #4]
90023a98:	f819 7006 	ldrb.w	r7, [r9, r6]
90023a9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90023aa0:	ea4f 09e7 	mov.w	r9, r7, asr #3
90023aa4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90023aa8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023aac:	fb09 f906 	mul.w	r9, r9, r6
90023ab0:	fb07 f800 	mul.w	r8, r7, r0
90023ab4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90023ab8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023abc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90023ac0:	44d1      	add	r9, sl
90023ac2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90023ac6:	f108 0020 	add.w	r0, r8, #32
90023aca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023ace:	0a00      	lsrs	r0, r0, #8
90023ad0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023ad4:	4330      	orrs	r0, r6
90023ad6:	b28e      	uxth	r6, r1
90023ad8:	fa1f f98e 	uxth.w	r9, lr
90023adc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023ae0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023ae4:	fb06 f809 	mul.w	r8, r6, r9
90023ae8:	0136      	lsls	r6, r6, #4
90023aea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023aee:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90023af2:	9601      	str	r6, [sp, #4]
90023af4:	ea4a 0404 	orr.w	r4, sl, r4
90023af8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023afc:	fa1f f689 	uxth.w	r6, r9
90023b00:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b04:	fb11 f90e 	smulbb	r9, r1, lr
90023b08:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023b0c:	9602      	str	r6, [sp, #8]
90023b0e:	4626      	mov	r6, r4
90023b10:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90023b14:	f1ce 0410 	rsb	r4, lr, #16
90023b18:	ea4a 0202 	orr.w	r2, sl, r2
90023b1c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023b20:	1a64      	subs	r4, r4, r1
90023b22:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90023b26:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023b2a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023b2e:	434a      	muls	r2, r1
90023b30:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90023b34:	ea4a 0000 	orr.w	r0, sl, r0
90023b38:	9903      	ldr	r1, [sp, #12]
90023b3a:	fb04 2406 	mla	r4, r4, r6, r2
90023b3e:	9e02      	ldr	r6, [sp, #8]
90023b40:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023b44:	fb09 4200 	mla	r2, r9, r0, r4
90023b48:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023b4c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90023b50:	8808      	ldrh	r0, [r1, #0]
90023b52:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023b56:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90023b5a:	ea44 0b0b 	orr.w	fp, r4, fp
90023b5e:	9c01      	ldr	r4, [sp, #4]
90023b60:	b289      	uxth	r1, r1
90023b62:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90023b66:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023b6a:	1ba4      	subs	r4, r4, r6
90023b6c:	9e01      	ldr	r6, [sp, #4]
90023b6e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023b72:	eba6 0608 	sub.w	r6, r6, r8
90023b76:	b2a4      	uxth	r4, r4
90023b78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023b7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023b80:	b2b6      	uxth	r6, r6
90023b82:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023b86:	4373      	muls	r3, r6
90023b88:	ea42 0e0e 	orr.w	lr, r2, lr
90023b8c:	fb0c 3304 	mla	r3, ip, r4, r3
90023b90:	9c02      	ldr	r4, [sp, #8]
90023b92:	fa1f f28e 	uxth.w	r2, lr
90023b96:	fb04 3505 	mla	r5, r4, r5, r3
90023b9a:	10d4      	asrs	r4, r2, #3
90023b9c:	fb08 5707 	mla	r7, r8, r7, r5
90023ba0:	1215      	asrs	r5, r2, #8
90023ba2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90023ba6:	00d2      	lsls	r2, r2, #3
90023ba8:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023bac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023bb0:	b2d2      	uxtb	r2, r2
90023bb2:	434f      	muls	r7, r1
90023bb4:	1c7b      	adds	r3, r7, #1
90023bb6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90023bba:	1203      	asrs	r3, r0, #8
90023bbc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90023bc0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023bc4:	b2ff      	uxtb	r7, r7
90023bc6:	fb13 f307 	smulbb	r3, r3, r7
90023bca:	fb05 3501 	mla	r5, r5, r1, r3
90023bce:	10c3      	asrs	r3, r0, #3
90023bd0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023bd4:	b2ad      	uxth	r5, r5
90023bd6:	fb13 f307 	smulbb	r3, r3, r7
90023bda:	fb04 3401 	mla	r4, r4, r1, r3
90023bde:	00c3      	lsls	r3, r0, #3
90023be0:	b2db      	uxtb	r3, r3
90023be2:	b2a4      	uxth	r4, r4
90023be4:	fb13 f307 	smulbb	r3, r3, r7
90023be8:	fb02 3101 	mla	r1, r2, r1, r3
90023bec:	1c6b      	adds	r3, r5, #1
90023bee:	1c62      	adds	r2, r4, #1
90023bf0:	b289      	uxth	r1, r1
90023bf2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023bf6:	1c4b      	adds	r3, r1, #1
90023bf8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90023bfc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023c00:	9a03      	ldr	r2, [sp, #12]
90023c02:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023c06:	0964      	lsrs	r4, r4, #5
90023c08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023c0c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90023c10:	432b      	orrs	r3, r5
90023c12:	4323      	orrs	r3, r4
90023c14:	8013      	strh	r3, [r2, #0]
90023c16:	b005      	add	sp, #20
90023c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023c1c:	f04f 0c00 	mov.w	ip, #0
90023c20:	4664      	mov	r4, ip
90023c22:	e6d6      	b.n	900239d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90023c24:	2300      	movs	r3, #0
90023c26:	469c      	mov	ip, r3
90023c28:	461a      	mov	r2, r3
90023c2a:	461c      	mov	r4, r3
90023c2c:	e6f8      	b.n	90023a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023c2e:	2300      	movs	r3, #0
90023c30:	461a      	mov	r2, r3
90023c32:	e6f5      	b.n	90023a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023c34:	460b      	mov	r3, r1
90023c36:	460a      	mov	r2, r1
90023c38:	e6f2      	b.n	90023a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023c3a:	2500      	movs	r5, #0
90023c3c:	46ab      	mov	fp, r5
90023c3e:	e720      	b.n	90023a82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90023c40:	2700      	movs	r7, #0
90023c42:	463d      	mov	r5, r7
90023c44:	4638      	mov	r0, r7
90023c46:	46bb      	mov	fp, r7
90023c48:	e745      	b.n	90023ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023c4a:	4677      	mov	r7, lr
90023c4c:	4675      	mov	r5, lr
90023c4e:	4670      	mov	r0, lr
90023c50:	46f3      	mov	fp, lr
90023c52:	e740      	b.n	90023ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023c54:	2700      	movs	r7, #0
90023c56:	4638      	mov	r0, r7
90023c58:	e73d      	b.n	90023ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023c5a:	460f      	mov	r7, r1
90023c5c:	4608      	mov	r0, r1
90023c5e:	e73a      	b.n	90023ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90023c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023c64:	b097      	sub	sp, #92	@ 0x5c
90023c66:	9214      	str	r2, [sp, #80]	@ 0x50
90023c68:	9308      	str	r3, [sp, #32]
90023c6a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023c6c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90023c70:	9015      	str	r0, [sp, #84]	@ 0x54
90023c72:	9312      	str	r3, [sp, #72]	@ 0x48
90023c74:	6850      	ldr	r0, [r2, #4]
90023c76:	9111      	str	r1, [sp, #68]	@ 0x44
90023c78:	6812      	ldr	r2, [r2, #0]
90023c7a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90023c7e:	fb00 1303 	mla	r3, r0, r3, r1
90023c82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023c86:	9309      	str	r3, [sp, #36]	@ 0x24
90023c88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023c8a:	681b      	ldr	r3, [r3, #0]
90023c8c:	930b      	str	r3, [sp, #44]	@ 0x2c
90023c8e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023c90:	685b      	ldr	r3, [r3, #4]
90023c92:	930c      	str	r3, [sp, #48]	@ 0x30
90023c94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90023c98:	930a      	str	r3, [sp, #40]	@ 0x28
90023c9a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023c9c:	2b00      	cmp	r3, #0
90023c9e:	dc03      	bgt.n	90023ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023ca0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023ca2:	2b00      	cmp	r3, #0
90023ca4:	f340 83cd 	ble.w	90024442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90023ca8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023caa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023cae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023cb2:	1e48      	subs	r0, r1, #1
90023cb4:	1e55      	subs	r5, r2, #1
90023cb6:	9b08      	ldr	r3, [sp, #32]
90023cb8:	2b00      	cmp	r3, #0
90023cba:	f340 81a5 	ble.w	90024008 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90023cbe:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90023cc0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023cc2:	1436      	asrs	r6, r6, #16
90023cc4:	ea4f 4323 	mov.w	r3, r3, asr #16
90023cc8:	d406      	bmi.n	90023cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023cca:	4286      	cmp	r6, r0
90023ccc:	da04      	bge.n	90023cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023cce:	2b00      	cmp	r3, #0
90023cd0:	db02      	blt.n	90023cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023cd2:	42ab      	cmp	r3, r5
90023cd4:	f2c0 8199 	blt.w	9002400a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023cd8:	3601      	adds	r6, #1
90023cda:	f100 8186 	bmi.w	90023fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023cde:	42b1      	cmp	r1, r6
90023ce0:	f2c0 8183 	blt.w	90023fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023ce4:	3301      	adds	r3, #1
90023ce6:	f100 8180 	bmi.w	90023fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023cea:	429a      	cmp	r2, r3
90023cec:	f2c0 817d 	blt.w	90023fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023cf0:	9b08      	ldr	r3, [sp, #32]
90023cf2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023cf6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90023cf8:	9313      	str	r3, [sp, #76]	@ 0x4c
90023cfa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023cfc:	2b00      	cmp	r3, #0
90023cfe:	f340 81a6 	ble.w	9002404e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023d02:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023d04:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90023d06:	1418      	asrs	r0, r3, #16
90023d08:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023d0a:	142d      	asrs	r5, r5, #16
90023d0c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023d10:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023d12:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90023d16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d18:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90023d1c:	f100 81fa 	bmi.w	90024114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023d20:	f102 3eff 	add.w	lr, r2, #4294967295
90023d24:	4575      	cmp	r5, lr
90023d26:	f280 81f5 	bge.w	90024114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023d2a:	2800      	cmp	r0, #0
90023d2c:	f2c0 81f2 	blt.w	90024114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023d30:	f103 3eff 	add.w	lr, r3, #4294967295
90023d34:	4570      	cmp	r0, lr
90023d36:	f280 81ed 	bge.w	90024114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023d3a:	b212      	sxth	r2, r2
90023d3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023d3e:	fa1f fe81 	uxth.w	lr, r1
90023d42:	fb00 5002 	mla	r0, r0, r2, r5
90023d46:	ea4f 150e 	mov.w	r5, lr, lsl #4
90023d4a:	eb03 0a00 	add.w	sl, r3, r0
90023d4e:	f813 9000 	ldrb.w	r9, [r3, r0]
90023d52:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90023d56:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023d5a:	b29b      	uxth	r3, r3
90023d5c:	f1bc 0f00 	cmp.w	ip, #0
90023d60:	f000 81bb 	beq.w	900240da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90023d64:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023d68:	eb0a 0b02 	add.w	fp, sl, r2
90023d6c:	fa1f fa8c 	uxth.w	sl, ip
90023d70:	940d      	str	r4, [sp, #52]	@ 0x34
90023d72:	fb0a fe0e 	mul.w	lr, sl, lr
90023d76:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023d7a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90023d7e:	eba5 050e 	sub.w	r5, r5, lr
90023d82:	940e      	str	r4, [sp, #56]	@ 0x38
90023d84:	fa1f fa8a 	uxth.w	sl, sl
90023d88:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023d8a:	b2ad      	uxth	r5, r5
90023d8c:	eba3 030a 	sub.w	r3, r3, sl
90023d90:	fb08 f505 	mul.w	r5, r8, r5
90023d94:	b29b      	uxth	r3, r3
90023d96:	fb09 5303 	mla	r3, r9, r3, r5
90023d9a:	fb0a 3304 	mla	r3, sl, r4, r3
90023d9e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023da0:	fb0e 3304 	mla	r3, lr, r4, r3
90023da4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023da8:	2b00      	cmp	r3, #0
90023daa:	f000 8111 	beq.w	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023dae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023db0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90023db4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023db8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90023dbc:	f000 8192 	beq.w	900240e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90023dc0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90023dc4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023dc8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023dcc:	fb0a fe0e 	mul.w	lr, sl, lr
90023dd0:	fb09 f000 	mul.w	r0, r9, r0
90023dd4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023dd8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90023ddc:	f100 0b20 	add.w	fp, r0, #32
90023de0:	44ce      	add	lr, r9
90023de2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90023de6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023dea:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023dee:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023df2:	ea4e 0909 	orr.w	r9, lr, r9
90023df6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90023dfa:	8868      	ldrh	r0, [r5, #2]
90023dfc:	d019      	beq.n	90023e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90023dfe:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90023e02:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023e06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023e0a:	fb0a fe0e 	mul.w	lr, sl, lr
90023e0e:	fb08 f800 	mul.w	r8, r8, r0
90023e12:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90023e16:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90023e1a:	f108 0b20 	add.w	fp, r8, #32
90023e1e:	4486      	add	lr, r0
90023e20:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90023e24:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023e28:	0a00      	lsrs	r0, r0, #8
90023e2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023e2e:	ea4e 0000 	orr.w	r0, lr, r0
90023e32:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90023e36:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023e3a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023e3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023e42:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023e46:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023e4a:	ea4e 0909 	orr.w	r9, lr, r9
90023e4e:	ea4a 0000 	orr.w	r0, sl, r0
90023e52:	f1bc 0f00 	cmp.w	ip, #0
90023e56:	f000 8147 	beq.w	900240e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90023e5a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90023e5e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023e60:	3a01      	subs	r2, #1
90023e62:	2cff      	cmp	r4, #255	@ 0xff
90023e64:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023e68:	f102 0202 	add.w	r2, r2, #2
90023e6c:	eb05 0e02 	add.w	lr, r5, r2
90023e70:	5aaa      	ldrh	r2, [r5, r2]
90023e72:	d018      	beq.n	90023ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90023e74:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90023e78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023e7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023e80:	fb04 fa02 	mul.w	sl, r4, r2
90023e84:	fb08 f805 	mul.w	r8, r8, r5
90023e88:	f10a 0520 	add.w	r5, sl, #32
90023e8c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023e90:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023e94:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023e98:	4442      	add	r2, r8
90023e9a:	0a2d      	lsrs	r5, r5, #8
90023e9c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023ea0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023ea4:	432a      	orrs	r2, r5
90023ea6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023ea8:	f8be 5002 	ldrh.w	r5, [lr, #2]
90023eac:	2cff      	cmp	r4, #255	@ 0xff
90023eae:	d01a      	beq.n	90023ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90023eb0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90023eb4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023eb8:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023ebc:	fb04 fa05 	mul.w	sl, r4, r5
90023ec0:	fb08 f80e 	mul.w	r8, r8, lr
90023ec4:	f10a 0e20 	add.w	lr, sl, #32
90023ec8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90023ecc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023ed0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90023ed4:	4445      	add	r5, r8
90023ed6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023eda:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90023ede:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90023ee2:	ea45 050e 	orr.w	r5, r5, lr
90023ee6:	fb1c fe01 	smulbb	lr, ip, r1
90023eea:	f1cc 0810 	rsb	r8, ip, #16
90023eee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023ef2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023ef6:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023efa:	eba8 0801 	sub.w	r8, r8, r1
90023efe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023f02:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023f06:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023f0a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023f0e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023f12:	ea4a 0202 	orr.w	r2, sl, r2
90023f16:	4341      	muls	r1, r0
90023f18:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023f1c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023f20:	fb09 1108 	mla	r1, r9, r8, r1
90023f24:	ea4b 0505 	orr.w	r5, fp, r5
90023f28:	fb0c 1102 	mla	r1, ip, r2, r1
90023f2c:	fb0e 1e05 	mla	lr, lr, r5, r1
90023f30:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023f34:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023f38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023f3c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023f40:	ea42 0e0e 	orr.w	lr, r2, lr
90023f44:	fa1f f28e 	uxth.w	r2, lr
90023f48:	2bff      	cmp	r3, #255	@ 0xff
90023f4a:	d103      	bne.n	90023f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f4c:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023f4e:	29ff      	cmp	r1, #255	@ 0xff
90023f50:	f000 80de 	beq.w	90024110 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90023f54:	990a      	ldr	r1, [sp, #40]	@ 0x28
90023f56:	1215      	asrs	r5, r2, #8
90023f58:	8838      	ldrh	r0, [r7, #0]
90023f5a:	434b      	muls	r3, r1
90023f5c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023f60:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023f62:	f103 0c01 	add.w	ip, r3, #1
90023f66:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90023f6a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90023f6e:	fa5f fc83 	uxtb.w	ip, r3
90023f72:	1203      	asrs	r3, r0, #8
90023f74:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023f78:	fb13 f30c 	smulbb	r3, r3, ip
90023f7c:	fb05 3501 	mla	r5, r5, r1, r3
90023f80:	10c3      	asrs	r3, r0, #3
90023f82:	10d1      	asrs	r1, r2, #3
90023f84:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023f88:	00d2      	lsls	r2, r2, #3
90023f8a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023f8e:	b2ad      	uxth	r5, r5
90023f90:	fb13 f30c 	smulbb	r3, r3, ip
90023f94:	b2d2      	uxtb	r2, r2
90023f96:	fb01 3104 	mla	r1, r1, r4, r3
90023f9a:	00c3      	lsls	r3, r0, #3
90023f9c:	b2db      	uxtb	r3, r3
90023f9e:	b289      	uxth	r1, r1
90023fa0:	fb13 f30c 	smulbb	r3, r3, ip
90023fa4:	fb02 3304 	mla	r3, r2, r4, r3
90023fa8:	b29a      	uxth	r2, r3
90023faa:	1c6b      	adds	r3, r5, #1
90023fac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023fb0:	1c53      	adds	r3, r2, #1
90023fb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023fb6:	1c4a      	adds	r2, r1, #1
90023fb8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023fbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023fc0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023fc4:	0949      	lsrs	r1, r1, #5
90023fc6:	432b      	orrs	r3, r5
90023fc8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023fcc:	430b      	orrs	r3, r1
90023fce:	803b      	strh	r3, [r7, #0]
90023fd0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023fd2:	3702      	adds	r7, #2
90023fd4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90023fd6:	4413      	add	r3, r2
90023fd8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023fda:	9321      	str	r3, [sp, #132]	@ 0x84
90023fdc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023fde:	441a      	add	r2, r3
90023fe0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023fe2:	3b01      	subs	r3, #1
90023fe4:	9222      	str	r2, [sp, #136]	@ 0x88
90023fe6:	9313      	str	r3, [sp, #76]	@ 0x4c
90023fe8:	e687      	b.n	90023cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023fea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023fec:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90023fee:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90023ff0:	4433      	add	r3, r6
90023ff2:	9321      	str	r3, [sp, #132]	@ 0x84
90023ff4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023ff6:	441c      	add	r4, r3
90023ff8:	9b08      	ldr	r3, [sp, #32]
90023ffa:	3b01      	subs	r3, #1
90023ffc:	9422      	str	r4, [sp, #136]	@ 0x88
90023ffe:	9308      	str	r3, [sp, #32]
90024000:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024002:	3302      	adds	r3, #2
90024004:	9309      	str	r3, [sp, #36]	@ 0x24
90024006:	e656      	b.n	90023cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024008:	d028      	beq.n	9002405c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002400a:	9b08      	ldr	r3, [sp, #32]
9002400c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002400e:	3b01      	subs	r3, #1
90024010:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024012:	fb00 5003 	mla	r0, r0, r3, r5
90024016:	1400      	asrs	r0, r0, #16
90024018:	f53f ae6a 	bmi.w	90023cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002401c:	3901      	subs	r1, #1
9002401e:	4288      	cmp	r0, r1
90024020:	f6bf ae66 	bge.w	90023cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024024:	9924      	ldr	r1, [sp, #144]	@ 0x90
90024026:	9822      	ldr	r0, [sp, #136]	@ 0x88
90024028:	fb01 0303 	mla	r3, r1, r3, r0
9002402c:	141b      	asrs	r3, r3, #16
9002402e:	f53f ae5f 	bmi.w	90023cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024032:	3a01      	subs	r2, #1
90024034:	4293      	cmp	r3, r2
90024036:	f6bf ae5b 	bge.w	90023cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002403a:	9b08      	ldr	r3, [sp, #32]
9002403c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024040:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024044:	9313      	str	r3, [sp, #76]	@ 0x4c
90024046:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024048:	2b00      	cmp	r3, #0
9002404a:	f300 8082 	bgt.w	90024152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
9002404e:	9b08      	ldr	r3, [sp, #32]
90024050:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024054:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024056:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002405a:	9309      	str	r3, [sp, #36]	@ 0x24
9002405c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002405e:	2b00      	cmp	r3, #0
90024060:	f340 81ef 	ble.w	90024442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024064:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024068:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002406a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002406e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024072:	eef0 6a62 	vmov.f32	s13, s5
90024076:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002407a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002407e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024082:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90024086:	eef0 6a43 	vmov.f32	s13, s6
9002408a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002408e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90024092:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024096:	ee61 7a27 	vmul.f32	s15, s2, s15
9002409a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002409e:	ee37 3ac3 	vsub.f32	s6, s15, s6
900240a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900240a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900240aa:	ee12 2a90 	vmov	r2, s5
900240ae:	eef0 2a47 	vmov.f32	s5, s14
900240b2:	fb92 f3f3 	sdiv	r3, r2, r3
900240b6:	ee13 2a10 	vmov	r2, s6
900240ba:	9323      	str	r3, [sp, #140]	@ 0x8c
900240bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240be:	eeb0 3a67 	vmov.f32	s6, s15
900240c2:	fb92 f3f3 	sdiv	r3, r2, r3
900240c6:	9324      	str	r3, [sp, #144]	@ 0x90
900240c8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900240ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900240cc:	3b01      	subs	r3, #1
900240ce:	9311      	str	r3, [sp, #68]	@ 0x44
900240d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240d2:	bf08      	it	eq
900240d4:	4613      	moveq	r3, r2
900240d6:	9308      	str	r3, [sp, #32]
900240d8:	e5df      	b.n	90023c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900240da:	fb08 f505 	mul.w	r5, r8, r5
900240de:	fb09 5303 	mla	r3, r9, r3, r5
900240e2:	e65f      	b.n	90023da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900240e4:	4681      	mov	r9, r0
900240e6:	e686      	b.n	90023df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900240e8:	f1c1 0210 	rsb	r2, r1, #16
900240ec:	4341      	muls	r1, r0
900240ee:	fb09 1902 	mla	r9, r9, r2, r1
900240f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900240f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
900240fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
900240fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024102:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024106:	ea42 0909 	orr.w	r9, r2, r9
9002410a:	fa1f f289 	uxth.w	r2, r9
9002410e:	e71b      	b.n	90023f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024110:	803a      	strh	r2, [r7, #0]
90024112:	e75d      	b.n	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024114:	f115 0e01 	adds.w	lr, r5, #1
90024118:	f53f af5a 	bmi.w	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002411c:	4572      	cmp	r2, lr
9002411e:	f6ff af57 	blt.w	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024122:	f110 0e01 	adds.w	lr, r0, #1
90024126:	f53f af53 	bmi.w	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002412a:	4573      	cmp	r3, lr
9002412c:	f6ff af50 	blt.w	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024130:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024132:	b21b      	sxth	r3, r3
90024134:	b212      	sxth	r2, r2
90024136:	9502      	str	r5, [sp, #8]
90024138:	9301      	str	r3, [sp, #4]
9002413a:	9200      	str	r2, [sp, #0]
9002413c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024140:	e9cd c405 	strd	ip, r4, [sp, #20]
90024144:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90024148:	4639      	mov	r1, r7
9002414a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002414c:	f7ff fc02 	bl	90023954 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024150:	e73e      	b.n	90023fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024152:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024154:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024158:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002415a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002415e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024160:	fa1f fc82 	uxth.w	ip, r2
90024164:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024168:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002416a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002416e:	141f      	asrs	r7, r3, #16
90024170:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024172:	141b      	asrs	r3, r3, #16
90024174:	fb01 3707 	mla	r7, r1, r7, r3
90024178:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002417a:	eb03 0a07 	add.w	sl, r3, r7
9002417e:	f813 9007 	ldrb.w	r9, [r3, r7]
90024182:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024186:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002418a:	b29b      	uxth	r3, r3
9002418c:	2d00      	cmp	r5, #0
9002418e:	f000 813d 	beq.w	9002440c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024192:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024196:	eb0a 0b01 	add.w	fp, sl, r1
9002419a:	fa1f fa85 	uxth.w	sl, r5
9002419e:	940f      	str	r4, [sp, #60]	@ 0x3c
900241a0:	fb0a fc0c 	mul.w	ip, sl, ip
900241a4:	f89b 4001 	ldrb.w	r4, [fp, #1]
900241a8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900241ac:	eba0 000c 	sub.w	r0, r0, ip
900241b0:	9410      	str	r4, [sp, #64]	@ 0x40
900241b2:	fa1f fa8a 	uxth.w	sl, sl
900241b6:	b280      	uxth	r0, r0
900241b8:	eba3 030a 	sub.w	r3, r3, sl
900241bc:	fb08 f000 	mul.w	r0, r8, r0
900241c0:	b29b      	uxth	r3, r3
900241c2:	fb09 0303 	mla	r3, r9, r3, r0
900241c6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900241c8:	fb0a 3300 	mla	r3, sl, r0, r3
900241cc:	fb0c 3304 	mla	r3, ip, r4, r3
900241d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900241d4:	2b00      	cmp	r3, #0
900241d6:	f000 810b 	beq.w	900243f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900241da:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900241dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900241e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900241e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900241e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900241ea:	f000 8114 	beq.w	90024416 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900241ee:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900241f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900241f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900241fa:	fb0a fc0c 	mul.w	ip, sl, ip
900241fe:	fb09 f707 	mul.w	r7, r9, r7
90024202:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024206:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002420a:	f107 0b20 	add.w	fp, r7, #32
9002420e:	44cc      	add	ip, r9
90024210:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024214:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024218:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002421c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024220:	ea4c 0909 	orr.w	r9, ip, r9
90024224:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024228:	8847      	ldrh	r7, [r0, #2]
9002422a:	d019      	beq.n	90024260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
9002422c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024230:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024234:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024238:	fb0a fc0c 	mul.w	ip, sl, ip
9002423c:	fb08 f807 	mul.w	r8, r8, r7
90024240:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024244:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024248:	f108 0b20 	add.w	fp, r8, #32
9002424c:	44bc      	add	ip, r7
9002424e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024252:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024256:	0a3f      	lsrs	r7, r7, #8
90024258:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002425c:	ea4c 0707 	orr.w	r7, ip, r7
90024260:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024264:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024268:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002426c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024270:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024274:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024278:	ea4c 0909 	orr.w	r9, ip, r9
9002427c:	ea4a 0707 	orr.w	r7, sl, r7
90024280:	2d00      	cmp	r5, #0
90024282:	f000 80ca 	beq.w	9002441a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024286:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002428a:	3901      	subs	r1, #1
9002428c:	0049      	lsls	r1, r1, #1
9002428e:	3102      	adds	r1, #2
90024290:	eb00 0c01 	add.w	ip, r0, r1
90024294:	5a41      	ldrh	r1, [r0, r1]
90024296:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024298:	28ff      	cmp	r0, #255	@ 0xff
9002429a:	d019      	beq.n	900242d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
9002429c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900242a0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900242a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900242a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900242aa:	fb04 fa01 	mul.w	sl, r4, r1
900242ae:	fb08 f800 	mul.w	r8, r8, r0
900242b2:	f10a 0020 	add.w	r0, sl, #32
900242b6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900242ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900242be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900242c2:	4441      	add	r1, r8
900242c4:	0a00      	lsrs	r0, r0, #8
900242c6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900242ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900242ce:	4301      	orrs	r1, r0
900242d0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900242d2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900242d6:	2cff      	cmp	r4, #255	@ 0xff
900242d8:	d01a      	beq.n	90024310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900242da:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900242de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900242e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900242e6:	fb04 fa00 	mul.w	sl, r4, r0
900242ea:	fb08 f80c 	mul.w	r8, r8, ip
900242ee:	f10a 0c20 	add.w	ip, sl, #32
900242f2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900242f6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900242fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900242fe:	4440      	add	r0, r8
90024300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024304:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024308:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002430c:	ea40 000c 	orr.w	r0, r0, ip
90024310:	fb15 fc02 	smulbb	ip, r5, r2
90024314:	f1c5 0810 	rsb	r8, r5, #16
90024318:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002431c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024320:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024324:	eba8 0802 	sub.w	r8, r8, r2
90024328:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002432c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024330:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024334:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024338:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9002433c:	ea4a 0101 	orr.w	r1, sl, r1
90024340:	437a      	muls	r2, r7
90024342:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024346:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002434a:	fb09 2208 	mla	r2, r9, r8, r2
9002434e:	ea4b 0000 	orr.w	r0, fp, r0
90024352:	fb05 2201 	mla	r2, r5, r1, r2
90024356:	fb0c 2200 	mla	r2, ip, r0, r2
9002435a:	0d57      	lsrs	r7, r2, #21
9002435c:	0952      	lsrs	r2, r2, #5
9002435e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024362:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024366:	433a      	orrs	r2, r7
90024368:	2bff      	cmp	r3, #255	@ 0xff
9002436a:	b292      	uxth	r2, r2
9002436c:	d102      	bne.n	90024374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002436e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024370:	29ff      	cmp	r1, #255	@ 0xff
90024372:	d063      	beq.n	9002443c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024374:	980a      	ldr	r0, [sp, #40]	@ 0x28
90024376:	1215      	asrs	r5, r2, #8
90024378:	f8be 1000 	ldrh.w	r1, [lr]
9002437c:	4343      	muls	r3, r0
9002437e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024380:	10cf      	asrs	r7, r1, #3
90024382:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024386:	1c58      	adds	r0, r3, #1
90024388:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002438c:	eb00 2323 	add.w	r3, r0, r3, asr #8
90024390:	1208      	asrs	r0, r1, #8
90024392:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024396:	00c9      	lsls	r1, r1, #3
90024398:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002439c:	b2db      	uxtb	r3, r3
9002439e:	b2c9      	uxtb	r1, r1
900243a0:	fb10 f003 	smulbb	r0, r0, r3
900243a4:	fb11 f103 	smulbb	r1, r1, r3
900243a8:	fb05 0504 	mla	r5, r5, r4, r0
900243ac:	10d0      	asrs	r0, r2, #3
900243ae:	fb17 f703 	smulbb	r7, r7, r3
900243b2:	00d2      	lsls	r2, r2, #3
900243b4:	b2ad      	uxth	r5, r5
900243b6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900243ba:	b2d2      	uxtb	r2, r2
900243bc:	fb00 7004 	mla	r0, r0, r4, r7
900243c0:	1c6b      	adds	r3, r5, #1
900243c2:	fb02 1204 	mla	r2, r2, r4, r1
900243c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900243ca:	b292      	uxth	r2, r2
900243cc:	b280      	uxth	r0, r0
900243ce:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900243d2:	1c57      	adds	r7, r2, #1
900243d4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900243d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900243dc:	433d      	orrs	r5, r7
900243de:	1c47      	adds	r7, r0, #1
900243e0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900243e4:	097f      	lsrs	r7, r7, #5
900243e6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900243ea:	433d      	orrs	r5, r7
900243ec:	f8ae 5000 	strh.w	r5, [lr]
900243f0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900243f2:	f10e 0e02 	add.w	lr, lr, #2
900243f6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900243f8:	4413      	add	r3, r2
900243fa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900243fc:	9321      	str	r3, [sp, #132]	@ 0x84
900243fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024400:	441a      	add	r2, r3
90024402:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024404:	3b01      	subs	r3, #1
90024406:	9222      	str	r2, [sp, #136]	@ 0x88
90024408:	9313      	str	r3, [sp, #76]	@ 0x4c
9002440a:	e61c      	b.n	90024046 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002440c:	fb08 f000 	mul.w	r0, r8, r0
90024410:	fb09 0303 	mla	r3, r9, r3, r0
90024414:	e6dc      	b.n	900241d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024416:	46b9      	mov	r9, r7
90024418:	e704      	b.n	90024224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002441a:	f1c2 0110 	rsb	r1, r2, #16
9002441e:	437a      	muls	r2, r7
90024420:	fb09 2901 	mla	r9, r9, r1, r2
90024424:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024428:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002442c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024430:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024434:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024438:	4302      	orrs	r2, r0
9002443a:	e795      	b.n	90024368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
9002443c:	f8ae 2000 	strh.w	r2, [lr]
90024440:	e7d6      	b.n	900243f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024442:	b017      	add	sp, #92	@ 0x5c
90024444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002444c:	b085      	sub	sp, #20
9002444e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024452:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024456:	2800      	cmp	r0, #0
90024458:	9103      	str	r1, [sp, #12]
9002445a:	fb00 7406 	mla	r4, r0, r6, r7
9002445e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024462:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024466:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002446a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002446e:	eb02 0904 	add.w	r9, r2, r4
90024472:	9501      	str	r5, [sp, #4]
90024474:	f2c0 8141 	blt.w	900246fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024478:	4583      	cmp	fp, r0
9002447a:	f340 813e 	ble.w	900246fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002447e:	2f00      	cmp	r7, #0
90024480:	f2c0 8137 	blt.w	900246f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024484:	42be      	cmp	r6, r7
90024486:	f340 8134 	ble.w	900246f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002448a:	f812 c004 	ldrb.w	ip, [r2, r4]
9002448e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90024492:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024496:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002449a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002449e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900244a2:	4355      	muls	r5, r2
900244a4:	fb0c f203 	mul.w	r2, ip, r3
900244a8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900244ac:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900244b0:	441d      	add	r5, r3
900244b2:	f102 0320 	add.w	r3, r2, #32
900244b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900244ba:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900244be:	0a1b      	lsrs	r3, r3, #8
900244c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900244c4:	431c      	orrs	r4, r3
900244c6:	1c7b      	adds	r3, r7, #1
900244c8:	f100 811c 	bmi.w	90024704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900244cc:	429e      	cmp	r6, r3
900244ce:	f340 8119 	ble.w	90024704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900244d2:	2900      	cmp	r1, #0
900244d4:	f000 8119 	beq.w	9002470a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900244d8:	9a01      	ldr	r2, [sp, #4]
900244da:	f899 3001 	ldrb.w	r3, [r9, #1]
900244de:	8855      	ldrh	r5, [r2, #2]
900244e0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900244e4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900244e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900244ec:	fb08 f802 	mul.w	r8, r8, r2
900244f0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900244f4:	435d      	muls	r5, r3
900244f6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900244fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900244fe:	44d0      	add	r8, sl
90024500:	f105 0a20 	add.w	sl, r5, #32
90024504:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024508:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002450c:	0a2d      	lsrs	r5, r5, #8
9002450e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024512:	432a      	orrs	r2, r5
90024514:	3001      	adds	r0, #1
90024516:	f100 80fe 	bmi.w	90024716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002451a:	4583      	cmp	fp, r0
9002451c:	f340 80fb 	ble.w	90024716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024520:	f1be 0f00 	cmp.w	lr, #0
90024524:	f000 80fc 	beq.w	90024720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024528:	2f00      	cmp	r7, #0
9002452a:	f2c0 80f1 	blt.w	90024710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002452e:	42be      	cmp	r6, r7
90024530:	f340 80ee 	ble.w	90024710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024534:	9801      	ldr	r0, [sp, #4]
90024536:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002453a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002453e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024542:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024546:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002454a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002454e:	fb0a fa00 	mul.w	sl, sl, r0
90024552:	fb05 f808 	mul.w	r8, r5, r8
90024556:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002455a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002455e:	4482      	add	sl, r0
90024560:	f108 0020 	add.w	r0, r8, #32
90024564:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024568:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002456c:	0a00      	lsrs	r0, r0, #8
9002456e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024572:	ea4b 0b00 	orr.w	fp, fp, r0
90024576:	3701      	adds	r7, #1
90024578:	f100 80d7 	bmi.w	9002472a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002457c:	42be      	cmp	r6, r7
9002457e:	f340 80d4 	ble.w	9002472a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024582:	2900      	cmp	r1, #0
90024584:	f000 80d4 	beq.w	90024730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90024588:	3601      	adds	r6, #1
9002458a:	9801      	ldr	r0, [sp, #4]
9002458c:	f819 7006 	ldrb.w	r7, [r9, r6]
90024590:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024594:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024598:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
9002459c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900245a0:	fb09 f906 	mul.w	r9, r9, r6
900245a4:	fb07 f800 	mul.w	r8, r7, r0
900245a8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900245ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900245b0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900245b4:	44d1      	add	r9, sl
900245b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900245ba:	f108 0020 	add.w	r0, r8, #32
900245be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900245c2:	0a00      	lsrs	r0, r0, #8
900245c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900245c8:	4330      	orrs	r0, r6
900245ca:	b28e      	uxth	r6, r1
900245cc:	fa1f f98e 	uxth.w	r9, lr
900245d0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900245d4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900245d8:	fb06 f809 	mul.w	r8, r6, r9
900245dc:	0136      	lsls	r6, r6, #4
900245de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900245e2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900245e6:	9601      	str	r6, [sp, #4]
900245e8:	ea4a 0404 	orr.w	r4, sl, r4
900245ec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900245f0:	fa1f f689 	uxth.w	r6, r9
900245f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900245f8:	fb11 f90e 	smulbb	r9, r1, lr
900245fc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024600:	9602      	str	r6, [sp, #8]
90024602:	4626      	mov	r6, r4
90024604:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024608:	f1ce 0410 	rsb	r4, lr, #16
9002460c:	ea4a 0202 	orr.w	r2, sl, r2
90024610:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024614:	1a64      	subs	r4, r4, r1
90024616:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002461a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002461e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024622:	434a      	muls	r2, r1
90024624:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024628:	ea4a 0000 	orr.w	r0, sl, r0
9002462c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024630:	fb04 2406 	mla	r4, r4, r6, r2
90024634:	9903      	ldr	r1, [sp, #12]
90024636:	fb09 4200 	mla	r2, r9, r0, r4
9002463a:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002463e:	9801      	ldr	r0, [sp, #4]
90024640:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024644:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024648:	8809      	ldrh	r1, [r1, #0]
9002464a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002464e:	ea44 0b0b 	orr.w	fp, r4, fp
90024652:	9c02      	ldr	r4, [sp, #8]
90024654:	1b00      	subs	r0, r0, r4
90024656:	9c01      	ldr	r4, [sp, #4]
90024658:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002465c:	eba4 0608 	sub.w	r6, r4, r8
90024660:	b280      	uxth	r0, r0
90024662:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024666:	b2b6      	uxth	r6, r6
90024668:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002466c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024670:	4373      	muls	r3, r6
90024672:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024676:	fb0c 3300 	mla	r3, ip, r0, r3
9002467a:	9802      	ldr	r0, [sp, #8]
9002467c:	ea42 0e0e 	orr.w	lr, r2, lr
90024680:	fb00 3505 	mla	r5, r0, r5, r3
90024684:	120b      	asrs	r3, r1, #8
90024686:	10c8      	asrs	r0, r1, #3
90024688:	fb08 5707 	mla	r7, r8, r7, r5
9002468c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024690:	00c9      	lsls	r1, r1, #3
90024692:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024696:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002469a:	fa1f f28e 	uxth.w	r2, lr
9002469e:	b2c9      	uxtb	r1, r1
900246a0:	b2ff      	uxtb	r7, r7
900246a2:	437b      	muls	r3, r7
900246a4:	4378      	muls	r0, r7
900246a6:	434f      	muls	r7, r1
900246a8:	1c59      	adds	r1, r3, #1
900246aa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900246ae:	1213      	asrs	r3, r2, #8
900246b0:	f023 0307 	bic.w	r3, r3, #7
900246b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900246b8:	1c41      	adds	r1, r0, #1
900246ba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900246be:	10d1      	asrs	r1, r2, #3
900246c0:	021b      	lsls	r3, r3, #8
900246c2:	f021 0103 	bic.w	r1, r1, #3
900246c6:	00d2      	lsls	r2, r2, #3
900246c8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900246cc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900246d0:	00c9      	lsls	r1, r1, #3
900246d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900246d6:	430b      	orrs	r3, r1
900246d8:	1c79      	adds	r1, r7, #1
900246da:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900246de:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900246e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900246e6:	431a      	orrs	r2, r3
900246e8:	9b03      	ldr	r3, [sp, #12]
900246ea:	801a      	strh	r2, [r3, #0]
900246ec:	b005      	add	sp, #20
900246ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900246f2:	f04f 0c00 	mov.w	ip, #0
900246f6:	4664      	mov	r4, ip
900246f8:	e6e5      	b.n	900244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900246fa:	2300      	movs	r3, #0
900246fc:	469c      	mov	ip, r3
900246fe:	461a      	mov	r2, r3
90024700:	461c      	mov	r4, r3
90024702:	e707      	b.n	90024514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024704:	2300      	movs	r3, #0
90024706:	461a      	mov	r2, r3
90024708:	e704      	b.n	90024514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002470a:	460b      	mov	r3, r1
9002470c:	460a      	mov	r2, r1
9002470e:	e701      	b.n	90024514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024710:	2500      	movs	r5, #0
90024712:	46ab      	mov	fp, r5
90024714:	e72f      	b.n	90024576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90024716:	2700      	movs	r7, #0
90024718:	463d      	mov	r5, r7
9002471a:	4638      	mov	r0, r7
9002471c:	46bb      	mov	fp, r7
9002471e:	e754      	b.n	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024720:	4677      	mov	r7, lr
90024722:	4675      	mov	r5, lr
90024724:	4670      	mov	r0, lr
90024726:	46f3      	mov	fp, lr
90024728:	e74f      	b.n	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002472a:	2700      	movs	r7, #0
9002472c:	4638      	mov	r0, r7
9002472e:	e74c      	b.n	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024730:	460f      	mov	r7, r1
90024732:	4608      	mov	r0, r1
90024734:	e749      	b.n	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90024738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002473c:	b093      	sub	sp, #76	@ 0x4c
9002473e:	9210      	str	r2, [sp, #64]	@ 0x40
90024740:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024742:	9011      	str	r0, [sp, #68]	@ 0x44
90024744:	910e      	str	r1, [sp, #56]	@ 0x38
90024746:	6850      	ldr	r0, [r2, #4]
90024748:	9306      	str	r3, [sp, #24]
9002474a:	6812      	ldr	r2, [r2, #0]
9002474c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90024750:	fb00 1303 	mla	r3, r0, r3, r1
90024754:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024758:	9307      	str	r3, [sp, #28]
9002475a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002475c:	681b      	ldr	r3, [r3, #0]
9002475e:	9308      	str	r3, [sp, #32]
90024760:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024762:	685b      	ldr	r3, [r3, #4]
90024764:	9309      	str	r3, [sp, #36]	@ 0x24
90024766:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024768:	2b00      	cmp	r3, #0
9002476a:	dc03      	bgt.n	90024774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002476c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002476e:	2b00      	cmp	r3, #0
90024770:	f340 83b6 	ble.w	90024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024774:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024776:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002477a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002477e:	1e48      	subs	r0, r1, #1
90024780:	1e55      	subs	r5, r2, #1
90024782:	9b06      	ldr	r3, [sp, #24]
90024784:	2b00      	cmp	r3, #0
90024786:	f340 8165 	ble.w	90024a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002478a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
9002478c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002478e:	1436      	asrs	r6, r6, #16
90024790:	ea4f 4323 	mov.w	r3, r3, asr #16
90024794:	d406      	bmi.n	900247a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024796:	4286      	cmp	r6, r0
90024798:	da04      	bge.n	900247a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002479a:	2b00      	cmp	r3, #0
9002479c:	db02      	blt.n	900247a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002479e:	42ab      	cmp	r3, r5
900247a0:	f2c0 8159 	blt.w	90024a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900247a4:	3601      	adds	r6, #1
900247a6:	f100 8146 	bmi.w	90024a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900247aa:	42b1      	cmp	r1, r6
900247ac:	f2c0 8143 	blt.w	90024a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900247b0:	3301      	adds	r3, #1
900247b2:	f100 8140 	bmi.w	90024a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900247b6:	429a      	cmp	r2, r3
900247b8:	f2c0 813d 	blt.w	90024a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900247bc:	9b06      	ldr	r3, [sp, #24]
900247be:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900247c2:	9f07      	ldr	r7, [sp, #28]
900247c4:	930f      	str	r3, [sp, #60]	@ 0x3c
900247c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900247c8:	2b00      	cmp	r3, #0
900247ca:	f340 8166 	ble.w	90024a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900247ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900247d0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900247d2:	1418      	asrs	r0, r3, #16
900247d4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900247d6:	142d      	asrs	r5, r5, #16
900247d8:	f3c3 3103 	ubfx	r1, r3, #12, #4
900247dc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900247de:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900247e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900247e4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900247e8:	f100 81f0 	bmi.w	90024bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900247ec:	f102 3eff 	add.w	lr, r2, #4294967295
900247f0:	4575      	cmp	r5, lr
900247f2:	f280 81eb 	bge.w	90024bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900247f6:	2800      	cmp	r0, #0
900247f8:	f2c0 81e8 	blt.w	90024bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900247fc:	f103 3eff 	add.w	lr, r3, #4294967295
90024800:	4570      	cmp	r0, lr
90024802:	f280 81e3 	bge.w	90024bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024806:	b212      	sxth	r2, r2
90024808:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002480a:	fa1f fe81 	uxth.w	lr, r1
9002480e:	fb00 5002 	mla	r0, r0, r2, r5
90024812:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024816:	eb03 0a00 	add.w	sl, r3, r0
9002481a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002481e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024822:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024826:	b29b      	uxth	r3, r3
90024828:	f1bc 0f00 	cmp.w	ip, #0
9002482c:	f000 817b 	beq.w	90024b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024830:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024834:	eb0a 0b02 	add.w	fp, sl, r2
90024838:	fa1f fa8c 	uxth.w	sl, ip
9002483c:	940a      	str	r4, [sp, #40]	@ 0x28
9002483e:	fb0a fe0e 	mul.w	lr, sl, lr
90024842:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024846:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002484a:	eba5 050e 	sub.w	r5, r5, lr
9002484e:	940b      	str	r4, [sp, #44]	@ 0x2c
90024850:	fa1f fa8a 	uxth.w	sl, sl
90024854:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024856:	b2ad      	uxth	r5, r5
90024858:	eba3 030a 	sub.w	r3, r3, sl
9002485c:	fb08 f505 	mul.w	r5, r8, r5
90024860:	b29b      	uxth	r3, r3
90024862:	fb09 5303 	mla	r3, r9, r3, r5
90024866:	fb0a 3304 	mla	r3, sl, r4, r3
9002486a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002486c:	fb0e 3304 	mla	r3, lr, r4, r3
90024870:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024874:	2b00      	cmp	r3, #0
90024876:	f000 80d1 	beq.w	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002487a:	9c08      	ldr	r4, [sp, #32]
9002487c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024880:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024884:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024888:	f000 8152 	beq.w	90024b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002488c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024890:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024894:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024898:	fb0a fe0e 	mul.w	lr, sl, lr
9002489c:	fb09 f000 	mul.w	r0, r9, r0
900248a0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900248a4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900248a8:	f100 0b20 	add.w	fp, r0, #32
900248ac:	44ce      	add	lr, r9
900248ae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900248b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900248b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900248ba:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900248be:	ea4e 0909 	orr.w	r9, lr, r9
900248c2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900248c6:	8868      	ldrh	r0, [r5, #2]
900248c8:	d019      	beq.n	900248fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900248ca:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900248ce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900248d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900248d6:	fb0a fe0e 	mul.w	lr, sl, lr
900248da:	fb08 f800 	mul.w	r8, r8, r0
900248de:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900248e2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900248e6:	f108 0b20 	add.w	fp, r8, #32
900248ea:	4486      	add	lr, r0
900248ec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900248f0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900248f4:	0a00      	lsrs	r0, r0, #8
900248f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900248fa:	ea4e 0000 	orr.w	r0, lr, r0
900248fe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024902:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024906:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002490a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002490e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024912:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024916:	ea4e 0909 	orr.w	r9, lr, r9
9002491a:	ea4a 0000 	orr.w	r0, sl, r0
9002491e:	f1bc 0f00 	cmp.w	ip, #0
90024922:	f000 8107 	beq.w	90024b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024926:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002492a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002492c:	3a01      	subs	r2, #1
9002492e:	2cff      	cmp	r4, #255	@ 0xff
90024930:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024934:	f102 0202 	add.w	r2, r2, #2
90024938:	eb05 0e02 	add.w	lr, r5, r2
9002493c:	5aaa      	ldrh	r2, [r5, r2]
9002493e:	d018      	beq.n	90024972 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90024940:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024944:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024948:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002494c:	fb04 fa02 	mul.w	sl, r4, r2
90024950:	fb08 f805 	mul.w	r8, r8, r5
90024954:	f10a 0520 	add.w	r5, sl, #32
90024958:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002495c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024960:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024964:	4442      	add	r2, r8
90024966:	0a2d      	lsrs	r5, r5, #8
90024968:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9002496c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024970:	432a      	orrs	r2, r5
90024972:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024974:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024978:	2cff      	cmp	r4, #255	@ 0xff
9002497a:	d01a      	beq.n	900249b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9002497c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024980:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024984:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024988:	fb04 fa05 	mul.w	sl, r4, r5
9002498c:	fb08 f80e 	mul.w	r8, r8, lr
90024990:	f10a 0e20 	add.w	lr, sl, #32
90024994:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024998:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002499c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900249a0:	4445      	add	r5, r8
900249a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900249a6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900249aa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900249ae:	ea45 050e 	orr.w	r5, r5, lr
900249b2:	fb1c fe01 	smulbb	lr, ip, r1
900249b6:	f1cc 0810 	rsb	r8, ip, #16
900249ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900249be:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900249c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
900249c6:	eba8 0801 	sub.w	r8, r8, r1
900249ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900249ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900249d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900249d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900249da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900249de:	ea4a 0202 	orr.w	r2, sl, r2
900249e2:	4341      	muls	r1, r0
900249e4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900249e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900249ec:	fb09 1108 	mla	r1, r9, r8, r1
900249f0:	ea4b 0505 	orr.w	r5, fp, r5
900249f4:	fb0c 1102 	mla	r1, ip, r2, r1
900249f8:	fb0e 1e05 	mla	lr, lr, r5, r1
900249fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024a00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024a04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024a08:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024a0c:	ea42 0e0e 	orr.w	lr, r2, lr
90024a10:	fa1f f28e 	uxth.w	r2, lr
90024a14:	2bff      	cmp	r3, #255	@ 0xff
90024a16:	f040 80a1 	bne.w	90024b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90024a1a:	803a      	strh	r2, [r7, #0]
90024a1c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024a1e:	3702      	adds	r7, #2
90024a20:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90024a22:	4413      	add	r3, r2
90024a24:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90024a26:	931d      	str	r3, [sp, #116]	@ 0x74
90024a28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024a2a:	441a      	add	r2, r3
90024a2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024a2e:	3b01      	subs	r3, #1
90024a30:	921e      	str	r2, [sp, #120]	@ 0x78
90024a32:	930f      	str	r3, [sp, #60]	@ 0x3c
90024a34:	e6c7      	b.n	900247c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024a36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024a38:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90024a3a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90024a3c:	4433      	add	r3, r6
90024a3e:	931d      	str	r3, [sp, #116]	@ 0x74
90024a40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024a42:	441c      	add	r4, r3
90024a44:	9b06      	ldr	r3, [sp, #24]
90024a46:	3b01      	subs	r3, #1
90024a48:	941e      	str	r4, [sp, #120]	@ 0x78
90024a4a:	9306      	str	r3, [sp, #24]
90024a4c:	9b07      	ldr	r3, [sp, #28]
90024a4e:	3302      	adds	r3, #2
90024a50:	9307      	str	r3, [sp, #28]
90024a52:	e696      	b.n	90024782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024a54:	d028      	beq.n	90024aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024a56:	9b06      	ldr	r3, [sp, #24]
90024a58:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024a5a:	3b01      	subs	r3, #1
90024a5c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90024a5e:	fb00 5003 	mla	r0, r0, r3, r5
90024a62:	1400      	asrs	r0, r0, #16
90024a64:	f53f aeaa 	bmi.w	900247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024a68:	3901      	subs	r1, #1
90024a6a:	4288      	cmp	r0, r1
90024a6c:	f6bf aea6 	bge.w	900247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024a70:	9920      	ldr	r1, [sp, #128]	@ 0x80
90024a72:	981e      	ldr	r0, [sp, #120]	@ 0x78
90024a74:	fb01 0303 	mla	r3, r1, r3, r0
90024a78:	141b      	asrs	r3, r3, #16
90024a7a:	f53f ae9f 	bmi.w	900247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024a7e:	3a01      	subs	r2, #1
90024a80:	4293      	cmp	r3, r2
90024a82:	f6bf ae9b 	bge.w	900247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024a86:	9b06      	ldr	r3, [sp, #24]
90024a88:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024a8c:	f8dd e01c 	ldr.w	lr, [sp, #28]
90024a90:	930f      	str	r3, [sp, #60]	@ 0x3c
90024a92:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024a94:	2b00      	cmp	r3, #0
90024a96:	f300 80b6 	bgt.w	90024c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90024a9a:	9b06      	ldr	r3, [sp, #24]
90024a9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024aa0:	9b07      	ldr	r3, [sp, #28]
90024aa2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024aa6:	9307      	str	r3, [sp, #28]
90024aa8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024aaa:	2b00      	cmp	r3, #0
90024aac:	f340 8218 	ble.w	90024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024ab0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024ab4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024ab6:	ee30 0a04 	vadd.f32	s0, s0, s8
90024aba:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024abe:	eef0 6a62 	vmov.f32	s13, s5
90024ac2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024ac6:	ee31 1a05 	vadd.f32	s2, s2, s10
90024aca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024ace:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90024ad2:	eef0 6a43 	vmov.f32	s13, s6
90024ad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024ada:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90024ade:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
90024ae6:	ee77 2a62 	vsub.f32	s5, s14, s5
90024aea:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024aee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024af2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024af6:	ee12 2a90 	vmov	r2, s5
90024afa:	eef0 2a47 	vmov.f32	s5, s14
90024afe:	fb92 f3f3 	sdiv	r3, r2, r3
90024b02:	ee13 2a10 	vmov	r2, s6
90024b06:	931f      	str	r3, [sp, #124]	@ 0x7c
90024b08:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024b0a:	eeb0 3a67 	vmov.f32	s6, s15
90024b0e:	fb92 f3f3 	sdiv	r3, r2, r3
90024b12:	9320      	str	r3, [sp, #128]	@ 0x80
90024b14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024b16:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90024b18:	3b01      	subs	r3, #1
90024b1a:	930e      	str	r3, [sp, #56]	@ 0x38
90024b1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024b1e:	bf08      	it	eq
90024b20:	4613      	moveq	r3, r2
90024b22:	9306      	str	r3, [sp, #24]
90024b24:	e61f      	b.n	90024766 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90024b26:	fb08 f505 	mul.w	r5, r8, r5
90024b2a:	fb09 5303 	mla	r3, r9, r3, r5
90024b2e:	e69f      	b.n	90024870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90024b30:	4681      	mov	r9, r0
90024b32:	e6c6      	b.n	900248c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90024b34:	f1c1 0210 	rsb	r2, r1, #16
90024b38:	4341      	muls	r1, r0
90024b3a:	fb09 1902 	mla	r9, r9, r2, r1
90024b3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024b42:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024b46:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024b4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024b4e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024b52:	ea42 0909 	orr.w	r9, r2, r9
90024b56:	fa1f f289 	uxth.w	r2, r9
90024b5a:	e75b      	b.n	90024a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90024b5c:	f8b7 c000 	ldrh.w	ip, [r7]
90024b60:	43db      	mvns	r3, r3
90024b62:	ea4f 202c 	mov.w	r0, ip, asr #8
90024b66:	fa5f fe83 	uxtb.w	lr, r3
90024b6a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024b6e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90024b72:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90024b76:	fb00 f00e 	mul.w	r0, r0, lr
90024b7a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90024b7e:	b2db      	uxtb	r3, r3
90024b80:	1c41      	adds	r1, r0, #1
90024b82:	fb05 f50e 	mul.w	r5, r5, lr
90024b86:	fb03 f30e 	mul.w	r3, r3, lr
90024b8a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024b8e:	1211      	asrs	r1, r2, #8
90024b90:	f021 0107 	bic.w	r1, r1, #7
90024b94:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90024b98:	48d3      	ldr	r0, [pc, #844]	@ (90024ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90024b9a:	b2c9      	uxtb	r1, r1
90024b9c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90024ba0:	1c69      	adds	r1, r5, #1
90024ba2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90024ba6:	10d1      	asrs	r1, r2, #3
90024ba8:	00d2      	lsls	r2, r2, #3
90024baa:	f021 0103 	bic.w	r1, r1, #3
90024bae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90024bb2:	00c9      	lsls	r1, r1, #3
90024bb4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024bb8:	4301      	orrs	r1, r0
90024bba:	1c58      	adds	r0, r3, #1
90024bbc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90024bc0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024bc4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024bc8:	430a      	orrs	r2, r1
90024bca:	e726      	b.n	90024a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90024bcc:	f115 0e01 	adds.w	lr, r5, #1
90024bd0:	f53f af24 	bmi.w	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024bd4:	4572      	cmp	r2, lr
90024bd6:	f6ff af21 	blt.w	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024bda:	f110 0e01 	adds.w	lr, r0, #1
90024bde:	f53f af1d 	bmi.w	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024be2:	4573      	cmp	r3, lr
90024be4:	f6ff af1a 	blt.w	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024be8:	b21b      	sxth	r3, r3
90024bea:	b212      	sxth	r2, r2
90024bec:	9301      	str	r3, [sp, #4]
90024bee:	9200      	str	r2, [sp, #0]
90024bf0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90024bf4:	e9cd 5002 	strd	r5, r0, [sp, #8]
90024bf8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90024bfc:	4639      	mov	r1, r7
90024bfe:	9811      	ldr	r0, [sp, #68]	@ 0x44
90024c00:	f7ff fc22 	bl	90024448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90024c04:	e70a      	b.n	90024a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024c06:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024c08:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024c0c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024c0e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024c12:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c14:	fa1f fc82 	uxth.w	ip, r2
90024c18:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c1c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024c1e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024c22:	141f      	asrs	r7, r3, #16
90024c24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024c26:	141b      	asrs	r3, r3, #16
90024c28:	fb01 3707 	mla	r7, r1, r7, r3
90024c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c2e:	eb03 0a07 	add.w	sl, r3, r7
90024c32:	f813 9007 	ldrb.w	r9, [r3, r7]
90024c36:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024c3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024c3e:	b29b      	uxth	r3, r3
90024c40:	2d00      	cmp	r5, #0
90024c42:	f000 80fe 	beq.w	90024e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90024c46:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024c4a:	eb0a 0b01 	add.w	fp, sl, r1
90024c4e:	fa1f fa85 	uxth.w	sl, r5
90024c52:	940c      	str	r4, [sp, #48]	@ 0x30
90024c54:	fb0a fc0c 	mul.w	ip, sl, ip
90024c58:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024c5c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024c60:	eba0 000c 	sub.w	r0, r0, ip
90024c64:	940d      	str	r4, [sp, #52]	@ 0x34
90024c66:	fa1f fa8a 	uxth.w	sl, sl
90024c6a:	b280      	uxth	r0, r0
90024c6c:	eba3 030a 	sub.w	r3, r3, sl
90024c70:	fb08 f000 	mul.w	r0, r8, r0
90024c74:	b29b      	uxth	r3, r3
90024c76:	fb09 0303 	mla	r3, r9, r3, r0
90024c7a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90024c7c:	fb0a 3300 	mla	r3, sl, r0, r3
90024c80:	fb0c 3304 	mla	r3, ip, r4, r3
90024c84:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024c88:	2b00      	cmp	r3, #0
90024c8a:	f000 80cc 	beq.w	90024e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90024c8e:	9808      	ldr	r0, [sp, #32]
90024c90:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024c94:	9c08      	ldr	r4, [sp, #32]
90024c96:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024c9a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024c9e:	f000 80d5 	beq.w	90024e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024ca2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024ca6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024caa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024cae:	fb0a fc0c 	mul.w	ip, sl, ip
90024cb2:	fb09 f707 	mul.w	r7, r9, r7
90024cb6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024cba:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024cbe:	f107 0b20 	add.w	fp, r7, #32
90024cc2:	44cc      	add	ip, r9
90024cc4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024cc8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024ccc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024cd0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024cd4:	ea4c 0909 	orr.w	r9, ip, r9
90024cd8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024cdc:	8847      	ldrh	r7, [r0, #2]
90024cde:	d019      	beq.n	90024d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90024ce0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024ce4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024ce8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024cec:	fb0a fc0c 	mul.w	ip, sl, ip
90024cf0:	fb08 f807 	mul.w	r8, r8, r7
90024cf4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024cf8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024cfc:	f108 0b20 	add.w	fp, r8, #32
90024d00:	44bc      	add	ip, r7
90024d02:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024d06:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024d0a:	0a3f      	lsrs	r7, r7, #8
90024d0c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024d10:	ea4c 0707 	orr.w	r7, ip, r7
90024d14:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024d18:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024d1c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024d20:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024d24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024d28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024d2c:	ea4c 0909 	orr.w	r9, ip, r9
90024d30:	ea4a 0707 	orr.w	r7, sl, r7
90024d34:	2d00      	cmp	r5, #0
90024d36:	f000 808b 	beq.w	90024e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90024d3a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90024d3e:	3901      	subs	r1, #1
90024d40:	0049      	lsls	r1, r1, #1
90024d42:	3102      	adds	r1, #2
90024d44:	eb00 0c01 	add.w	ip, r0, r1
90024d48:	5a41      	ldrh	r1, [r0, r1]
90024d4a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90024d4c:	28ff      	cmp	r0, #255	@ 0xff
90024d4e:	d019      	beq.n	90024d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90024d50:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90024d54:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024d56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024d5a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024d5e:	fb04 fa01 	mul.w	sl, r4, r1
90024d62:	fb08 f800 	mul.w	r8, r8, r0
90024d66:	f10a 0020 	add.w	r0, sl, #32
90024d6a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024d6e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024d72:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024d76:	4441      	add	r1, r8
90024d78:	0a00      	lsrs	r0, r0, #8
90024d7a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024d7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d82:	4301      	orrs	r1, r0
90024d84:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024d86:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024d8a:	2cff      	cmp	r4, #255	@ 0xff
90024d8c:	d01a      	beq.n	90024dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90024d8e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90024d92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d96:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024d9a:	fb04 fa00 	mul.w	sl, r4, r0
90024d9e:	fb08 f80c 	mul.w	r8, r8, ip
90024da2:	f10a 0c20 	add.w	ip, sl, #32
90024da6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024daa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024dae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024db2:	4440      	add	r0, r8
90024db4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024db8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024dbc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024dc0:	ea40 000c 	orr.w	r0, r0, ip
90024dc4:	fb15 fc02 	smulbb	ip, r5, r2
90024dc8:	f1c5 0810 	rsb	r8, r5, #16
90024dcc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024dd0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024dd4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024dd8:	eba8 0802 	sub.w	r8, r8, r2
90024ddc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024de0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024de4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024de8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024dec:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024df0:	ea4a 0101 	orr.w	r1, sl, r1
90024df4:	437a      	muls	r2, r7
90024df6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024dfa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024dfe:	fb09 2208 	mla	r2, r9, r8, r2
90024e02:	ea4b 0000 	orr.w	r0, fp, r0
90024e06:	fb05 2201 	mla	r2, r5, r1, r2
90024e0a:	fb0c 2200 	mla	r2, ip, r0, r2
90024e0e:	0d57      	lsrs	r7, r2, #21
90024e10:	0952      	lsrs	r2, r2, #5
90024e12:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024e16:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024e1a:	433a      	orrs	r2, r7
90024e1c:	2bff      	cmp	r3, #255	@ 0xff
90024e1e:	b292      	uxth	r2, r2
90024e20:	d127      	bne.n	90024e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90024e22:	f8ae 2000 	strh.w	r2, [lr]
90024e26:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024e28:	f10e 0e02 	add.w	lr, lr, #2
90024e2c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90024e2e:	4413      	add	r3, r2
90024e30:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90024e32:	931d      	str	r3, [sp, #116]	@ 0x74
90024e34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024e36:	441a      	add	r2, r3
90024e38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024e3a:	3b01      	subs	r3, #1
90024e3c:	921e      	str	r2, [sp, #120]	@ 0x78
90024e3e:	930f      	str	r3, [sp, #60]	@ 0x3c
90024e40:	e627      	b.n	90024a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90024e42:	fb08 f000 	mul.w	r0, r8, r0
90024e46:	fb09 0303 	mla	r3, r9, r3, r0
90024e4a:	e71b      	b.n	90024c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90024e4c:	46b9      	mov	r9, r7
90024e4e:	e743      	b.n	90024cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90024e50:	f1c2 0110 	rsb	r1, r2, #16
90024e54:	437a      	muls	r2, r7
90024e56:	fb09 2901 	mla	r9, r9, r1, r2
90024e5a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024e5e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024e62:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024e66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024e6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024e6e:	4302      	orrs	r2, r0
90024e70:	e7d4      	b.n	90024e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90024e72:	f8be 7000 	ldrh.w	r7, [lr]
90024e76:	43db      	mvns	r3, r3
90024e78:	4c1b      	ldr	r4, [pc, #108]	@ (90024ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90024e7a:	1238      	asrs	r0, r7, #8
90024e7c:	fa5f fc83 	uxtb.w	ip, r3
90024e80:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024e84:	10fd      	asrs	r5, r7, #3
90024e86:	00fb      	lsls	r3, r7, #3
90024e88:	fb00 f00c 	mul.w	r0, r0, ip
90024e8c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90024e90:	b2db      	uxtb	r3, r3
90024e92:	fb05 f10c 	mul.w	r1, r5, ip
90024e96:	1c45      	adds	r5, r0, #1
90024e98:	fb03 f30c 	mul.w	r3, r3, ip
90024e9c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90024ea0:	1215      	asrs	r5, r2, #8
90024ea2:	f025 0507 	bic.w	r5, r5, #7
90024ea6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90024eaa:	1c4d      	adds	r5, r1, #1
90024eac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90024eb0:	10d1      	asrs	r1, r2, #3
90024eb2:	b2c0      	uxtb	r0, r0
90024eb4:	f021 0103 	bic.w	r1, r1, #3
90024eb8:	00d2      	lsls	r2, r2, #3
90024eba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90024ebe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90024ec2:	00c9      	lsls	r1, r1, #3
90024ec4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024ec8:	4308      	orrs	r0, r1
90024eca:	1c59      	adds	r1, r3, #1
90024ecc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024ed0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024ed4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90024ed8:	4318      	orrs	r0, r3
90024eda:	f8ae 0000 	strh.w	r0, [lr]
90024ede:	e7a2      	b.n	90024e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90024ee0:	b013      	add	sp, #76	@ 0x4c
90024ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ee6:	bf00      	nop
90024ee8:	fffff800 	.word	0xfffff800

90024eec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90024eec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024ef0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90024ef4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90024ef8:	fb05 4c03 	mla	ip, r5, r3, r4
90024efc:	2d00      	cmp	r5, #0
90024efe:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90024f02:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90024f06:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90024f0a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90024f0e:	8808      	ldrh	r0, [r1, #0]
90024f10:	f2c0 80a7 	blt.w	90025062 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90024f14:	45aa      	cmp	sl, r5
90024f16:	f340 80a4 	ble.w	90025062 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90024f1a:	2c00      	cmp	r4, #0
90024f1c:	f2c0 809f 	blt.w	9002505e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90024f20:	42a3      	cmp	r3, r4
90024f22:	f340 809c 	ble.w	9002505e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90024f26:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90024f2a:	1c62      	adds	r2, r4, #1
90024f2c:	f100 809c 	bmi.w	90025068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024f30:	4293      	cmp	r3, r2
90024f32:	f340 8099 	ble.w	90025068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024f36:	f1b9 0f00 	cmp.w	r9, #0
90024f3a:	f000 8095 	beq.w	90025068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024f3e:	f8be c002 	ldrh.w	ip, [lr, #2]
90024f42:	3501      	adds	r5, #1
90024f44:	f100 8094 	bmi.w	90025070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024f48:	45aa      	cmp	sl, r5
90024f4a:	f340 8091 	ble.w	90025070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024f4e:	2f00      	cmp	r7, #0
90024f50:	f000 808e 	beq.w	90025070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024f54:	2c00      	cmp	r4, #0
90024f56:	f2c0 8089 	blt.w	9002506c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90024f5a:	42a3      	cmp	r3, r4
90024f5c:	f340 8086 	ble.w	9002506c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90024f60:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90024f64:	3401      	adds	r4, #1
90024f66:	f100 8086 	bmi.w	90025076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024f6a:	42a3      	cmp	r3, r4
90024f6c:	f340 8083 	ble.w	90025076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024f70:	f1b9 0f00 	cmp.w	r9, #0
90024f74:	d07f      	beq.n	90025076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024f76:	3301      	adds	r3, #1
90024f78:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90024f7c:	ea4f 4408 	mov.w	r4, r8, lsl #16
90024f80:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90024f84:	fb19 fe07 	smulbb	lr, r9, r7
90024f88:	f1c7 0210 	rsb	r2, r7, #16
90024f8c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024f90:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90024f94:	eba2 0209 	sub.w	r2, r2, r9
90024f98:	ea44 0808 	orr.w	r8, r4, r8
90024f9c:	ea4f 440c 	mov.w	r4, ip, lsl #16
90024fa0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024fa4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90024fa8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024fac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90024fb0:	ea44 0c0c 	orr.w	ip, r4, ip
90024fb4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90024fb8:	fb04 f40c 	mul.w	r4, r4, ip
90024fbc:	fb02 4808 	mla	r8, r2, r8, r4
90024fc0:	041a      	lsls	r2, r3, #16
90024fc2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024fc6:	b2b4      	uxth	r4, r6
90024fc8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024fcc:	43f6      	mvns	r6, r6
90024fce:	4313      	orrs	r3, r2
90024fd0:	042a      	lsls	r2, r5, #16
90024fd2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024fd6:	b2f6      	uxtb	r6, r6
90024fd8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024fdc:	fb0e 8303 	mla	r3, lr, r3, r8
90024fe0:	432a      	orrs	r2, r5
90024fe2:	fb07 3202 	mla	r2, r7, r2, r3
90024fe6:	10c7      	asrs	r7, r0, #3
90024fe8:	0d53      	lsrs	r3, r2, #21
90024fea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90024fee:	0952      	lsrs	r2, r2, #5
90024ff0:	fb17 f706 	smulbb	r7, r7, r6
90024ff4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024ff8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024ffc:	431a      	orrs	r2, r3
90024ffe:	b293      	uxth	r3, r2
90025000:	1202      	asrs	r2, r0, #8
90025002:	121d      	asrs	r5, r3, #8
90025004:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025008:	00c0      	lsls	r0, r0, #3
9002500a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002500e:	fb12 f206 	smulbb	r2, r2, r6
90025012:	b2c0      	uxtb	r0, r0
90025014:	fb05 2504 	mla	r5, r5, r4, r2
90025018:	10da      	asrs	r2, r3, #3
9002501a:	fb10 f006 	smulbb	r0, r0, r6
9002501e:	00db      	lsls	r3, r3, #3
90025020:	b2ad      	uxth	r5, r5
90025022:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025026:	b2db      	uxtb	r3, r3
90025028:	fb02 7204 	mla	r2, r2, r4, r7
9002502c:	fb03 0004 	mla	r0, r3, r4, r0
90025030:	1c6b      	adds	r3, r5, #1
90025032:	b292      	uxth	r2, r2
90025034:	b280      	uxth	r0, r0
90025036:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002503a:	1c43      	adds	r3, r0, #1
9002503c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025040:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025044:	1c50      	adds	r0, r2, #1
90025046:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002504a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002504e:	0952      	lsrs	r2, r2, #5
90025050:	432b      	orrs	r3, r5
90025052:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025056:	4313      	orrs	r3, r2
90025058:	800b      	strh	r3, [r1, #0]
9002505a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002505e:	4680      	mov	r8, r0
90025060:	e763      	b.n	90024f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025062:	4684      	mov	ip, r0
90025064:	4680      	mov	r8, r0
90025066:	e76c      	b.n	90024f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025068:	4684      	mov	ip, r0
9002506a:	e76a      	b.n	90024f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002506c:	4605      	mov	r5, r0
9002506e:	e779      	b.n	90024f64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025070:	4603      	mov	r3, r0
90025072:	4605      	mov	r5, r0
90025074:	e782      	b.n	90024f7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90025076:	4603      	mov	r3, r0
90025078:	e780      	b.n	90024f7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002507a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002507a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002507e:	b093      	sub	sp, #76	@ 0x4c
90025080:	461d      	mov	r5, r3
90025082:	9210      	str	r2, [sp, #64]	@ 0x40
90025084:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025086:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002508a:	910a      	str	r1, [sp, #40]	@ 0x28
9002508c:	920b      	str	r2, [sp, #44]	@ 0x2c
9002508e:	6859      	ldr	r1, [r3, #4]
90025090:	681b      	ldr	r3, [r3, #0]
90025092:	9011      	str	r0, [sp, #68]	@ 0x44
90025094:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90025098:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9002509c:	fb01 2707 	mla	r7, r1, r7, r2
900250a0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900250a4:	9307      	str	r3, [sp, #28]
900250a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900250a8:	681b      	ldr	r3, [r3, #0]
900250aa:	9309      	str	r3, [sp, #36]	@ 0x24
900250ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900250ae:	43db      	mvns	r3, r3
900250b0:	b2db      	uxtb	r3, r3
900250b2:	9308      	str	r3, [sp, #32]
900250b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900250b6:	2b00      	cmp	r3, #0
900250b8:	dc03      	bgt.n	900250c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900250ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900250bc:	2b00      	cmp	r3, #0
900250be:	f340 8205 	ble.w	900254cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900250c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900250c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900250c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900250cc:	1e48      	subs	r0, r1, #1
900250ce:	f102 3cff 	add.w	ip, r2, #4294967295
900250d2:	2d00      	cmp	r5, #0
900250d4:	f340 80da 	ble.w	9002528c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900250d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900250dc:	ea4f 4326 	mov.w	r3, r6, asr #16
900250e0:	d406      	bmi.n	900250f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900250e2:	4586      	cmp	lr, r0
900250e4:	da04      	bge.n	900250f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900250e6:	2b00      	cmp	r3, #0
900250e8:	db02      	blt.n	900250f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900250ea:	4563      	cmp	r3, ip
900250ec:	f2c0 80cf 	blt.w	9002528e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900250f0:	f11e 0e01 	adds.w	lr, lr, #1
900250f4:	f100 80c1 	bmi.w	9002527a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900250f8:	4571      	cmp	r1, lr
900250fa:	f2c0 80be 	blt.w	9002527a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900250fe:	3301      	adds	r3, #1
90025100:	f100 80bb 	bmi.w	9002527a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025104:	429a      	cmp	r2, r3
90025106:	f2c0 80b8 	blt.w	9002527a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002510a:	46a9      	mov	r9, r5
9002510c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025110:	f1b9 0f00 	cmp.w	r9, #0
90025114:	f340 80d8 	ble.w	900252c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025118:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002511a:	1421      	asrs	r1, r4, #16
9002511c:	ea4f 4026 	mov.w	r0, r6, asr #16
90025120:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025124:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025128:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002512c:	f100 8112 	bmi.w	90025354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025130:	f10e 3aff 	add.w	sl, lr, #4294967295
90025134:	4551      	cmp	r1, sl
90025136:	f280 810d 	bge.w	90025354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002513a:	2800      	cmp	r0, #0
9002513c:	f2c0 810a 	blt.w	90025354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025140:	f103 3aff 	add.w	sl, r3, #4294967295
90025144:	4550      	cmp	r0, sl
90025146:	f280 8105 	bge.w	90025354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002514a:	fa0f f38e 	sxth.w	r3, lr
9002514e:	fb00 1103 	mla	r1, r0, r3, r1
90025152:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025154:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025158:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
9002515c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025160:	f1bc 0f00 	cmp.w	ip, #0
90025164:	d007      	beq.n	90025176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025166:	005b      	lsls	r3, r3, #1
90025168:	eb0a 0003 	add.w	r0, sl, r3
9002516c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025170:	930c      	str	r3, [sp, #48]	@ 0x30
90025172:	8843      	ldrh	r3, [r0, #2]
90025174:	930d      	str	r3, [sp, #52]	@ 0x34
90025176:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002517a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002517e:	fb12 f30c 	smulbb	r3, r2, ip
90025182:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025186:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002518a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002518e:	10db      	asrs	r3, r3, #3
90025190:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025194:	ea40 000e 	orr.w	r0, r0, lr
90025198:	f1cc 0e10 	rsb	lr, ip, #16
9002519c:	ea4a 0101 	orr.w	r1, sl, r1
900251a0:	9f08      	ldr	r7, [sp, #32]
900251a2:	ebae 0e02 	sub.w	lr, lr, r2
900251a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900251aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900251ae:	4351      	muls	r1, r2
900251b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900251b2:	fb0e 1e00 	mla	lr, lr, r0, r1
900251b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900251b8:	0410      	lsls	r0, r2, #16
900251ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900251be:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900251c2:	4310      	orrs	r0, r2
900251c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900251c6:	0412      	lsls	r2, r2, #16
900251c8:	fb03 e000 	mla	r0, r3, r0, lr
900251cc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900251d0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900251d4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900251d8:	ea42 020e 	orr.w	r2, r2, lr
900251dc:	fb03 0302 	mla	r3, r3, r2, r0
900251e0:	f8b8 0000 	ldrh.w	r0, [r8]
900251e4:	0d5a      	lsrs	r2, r3, #21
900251e6:	095b      	lsrs	r3, r3, #5
900251e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900251ec:	1201      	asrs	r1, r0, #8
900251ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900251f2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900251f6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900251fa:	00c0      	lsls	r0, r0, #3
900251fc:	4313      	orrs	r3, r2
900251fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90025202:	fb11 f107 	smulbb	r1, r1, r7
90025206:	b2c0      	uxtb	r0, r0
90025208:	b29b      	uxth	r3, r3
9002520a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9002520e:	fb10 f007 	smulbb	r0, r0, r7
90025212:	fb1e fe07 	smulbb	lr, lr, r7
90025216:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002521a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002521e:	fb0c 1c02 	mla	ip, ip, r2, r1
90025222:	10d9      	asrs	r1, r3, #3
90025224:	00db      	lsls	r3, r3, #3
90025226:	fa1f fc8c 	uxth.w	ip, ip
9002522a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002522e:	b2db      	uxtb	r3, r3
90025230:	fb01 e102 	mla	r1, r1, r2, lr
90025234:	fb03 0302 	mla	r3, r3, r2, r0
90025238:	b289      	uxth	r1, r1
9002523a:	b29a      	uxth	r2, r3
9002523c:	f10c 0301 	add.w	r3, ip, #1
90025240:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025244:	1c53      	adds	r3, r2, #1
90025246:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002524a:	1c4a      	adds	r2, r1, #1
9002524c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025250:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025254:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025258:	0949      	lsrs	r1, r1, #5
9002525a:	ea43 030c 	orr.w	r3, r3, ip
9002525e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025262:	430b      	orrs	r3, r1
90025264:	f8a8 3000 	strh.w	r3, [r8]
90025268:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002526a:	f108 0802 	add.w	r8, r8, #2
9002526e:	f109 39ff 	add.w	r9, r9, #4294967295
90025272:	441c      	add	r4, r3
90025274:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025276:	441e      	add	r6, r3
90025278:	e74a      	b.n	90025110 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002527a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002527c:	3d01      	subs	r5, #1
9002527e:	441c      	add	r4, r3
90025280:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025282:	441e      	add	r6, r3
90025284:	9b07      	ldr	r3, [sp, #28]
90025286:	3302      	adds	r3, #2
90025288:	9307      	str	r3, [sp, #28]
9002528a:	e722      	b.n	900250d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002528c:	d022      	beq.n	900252d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
9002528e:	1e6b      	subs	r3, r5, #1
90025290:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025292:	fb00 4003 	mla	r0, r0, r3, r4
90025296:	1400      	asrs	r0, r0, #16
90025298:	f53f af37 	bmi.w	9002510a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002529c:	3901      	subs	r1, #1
9002529e:	4288      	cmp	r0, r1
900252a0:	f6bf af33 	bge.w	9002510a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900252a4:	9920      	ldr	r1, [sp, #128]	@ 0x80
900252a6:	fb01 6303 	mla	r3, r1, r3, r6
900252aa:	141b      	asrs	r3, r3, #16
900252ac:	f53f af2d 	bmi.w	9002510a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900252b0:	3a01      	subs	r2, #1
900252b2:	4293      	cmp	r3, r2
900252b4:	f6bf af29 	bge.w	9002510a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900252b8:	46a8      	mov	r8, r5
900252ba:	f8dd 901c 	ldr.w	r9, [sp, #28]
900252be:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900252c2:	f1b8 0f00 	cmp.w	r8, #0
900252c6:	dc60      	bgt.n	9002538a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900252c8:	9b07      	ldr	r3, [sp, #28]
900252ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900252ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900252d2:	9307      	str	r3, [sp, #28]
900252d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900252d6:	2b00      	cmp	r3, #0
900252d8:	f340 80f8 	ble.w	900254cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900252dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900252e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900252e2:	ee30 0a04 	vadd.f32	s0, s0, s8
900252e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900252ea:	eef0 6a62 	vmov.f32	s13, s5
900252ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
900252f2:	ee31 1a05 	vadd.f32	s2, s2, s10
900252f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252fa:	ee16 4a90 	vmov	r4, s13
900252fe:	eef0 6a43 	vmov.f32	s13, s6
90025302:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025306:	ee16 6a90 	vmov	r6, s13
9002530a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002530e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025312:	ee77 2a62 	vsub.f32	s5, s14, s5
90025316:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002531a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002531e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025322:	ee12 2a90 	vmov	r2, s5
90025326:	eef0 2a47 	vmov.f32	s5, s14
9002532a:	fb92 f3f3 	sdiv	r3, r2, r3
9002532e:	ee13 2a10 	vmov	r2, s6
90025332:	931f      	str	r3, [sp, #124]	@ 0x7c
90025334:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025336:	eeb0 3a67 	vmov.f32	s6, s15
9002533a:	fb92 f3f3 	sdiv	r3, r2, r3
9002533e:	9320      	str	r3, [sp, #128]	@ 0x80
90025340:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025342:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025344:	3b01      	subs	r3, #1
90025346:	930a      	str	r3, [sp, #40]	@ 0x28
90025348:	bf08      	it	eq
9002534a:	4615      	moveq	r5, r2
9002534c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002534e:	bf18      	it	ne
90025350:	461d      	movne	r5, r3
90025352:	e6af      	b.n	900250b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025354:	f111 0a01 	adds.w	sl, r1, #1
90025358:	d486      	bmi.n	90025268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002535a:	45d6      	cmp	lr, sl
9002535c:	db84      	blt.n	90025268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002535e:	f110 0a01 	adds.w	sl, r0, #1
90025362:	d481      	bmi.n	90025268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025364:	4553      	cmp	r3, sl
90025366:	f6ff af7f 	blt.w	90025268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002536a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002536c:	b21b      	sxth	r3, r3
9002536e:	9101      	str	r1, [sp, #4]
90025370:	4641      	mov	r1, r8
90025372:	9300      	str	r3, [sp, #0]
90025374:	fa0f f38e 	sxth.w	r3, lr
90025378:	e9cd 0202 	strd	r0, r2, [sp, #8]
9002537c:	e9cd c704 	strd	ip, r7, [sp, #16]
90025380:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025382:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025384:	f7ff fdb2 	bl	90024eec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025388:	e76e      	b.n	90025268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002538a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002538c:	1430      	asrs	r0, r6, #16
9002538e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90025390:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025394:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025398:	1423      	asrs	r3, r4, #16
9002539a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002539e:	fb01 3000 	mla	r0, r1, r0, r3
900253a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900253a4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900253a8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900253ac:	8858      	ldrh	r0, [r3, #2]
900253ae:	f1be 0f00 	cmp.w	lr, #0
900253b2:	d00b      	beq.n	900253cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900253b4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900253b8:	3901      	subs	r1, #1
900253ba:	0049      	lsls	r1, r1, #1
900253bc:	3102      	adds	r1, #2
900253be:	eb03 0b01 	add.w	fp, r3, r1
900253c2:	5a5b      	ldrh	r3, [r3, r1]
900253c4:	930e      	str	r3, [sp, #56]	@ 0x38
900253c6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900253ca:	930f      	str	r3, [sp, #60]	@ 0x3c
900253cc:	ea4f 410c 	mov.w	r1, ip, lsl #16
900253d0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900253d4:	fb12 f30e 	smulbb	r3, r2, lr
900253d8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900253dc:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900253e0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900253e4:	10db      	asrs	r3, r3, #3
900253e6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900253ea:	ea41 010c 	orr.w	r1, r1, ip
900253ee:	f1ce 0c10 	rsb	ip, lr, #16
900253f2:	ea4b 0000 	orr.w	r0, fp, r0
900253f6:	9f08      	ldr	r7, [sp, #32]
900253f8:	ebac 0c02 	sub.w	ip, ip, r2
900253fc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025400:	f108 38ff 	add.w	r8, r8, #4294967295
90025404:	4350      	muls	r0, r2
90025406:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002540a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002540c:	fb0c 0c01 	mla	ip, ip, r1, r0
90025410:	980e      	ldr	r0, [sp, #56]	@ 0x38
90025412:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025416:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002541a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002541c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025420:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025424:	0412      	lsls	r2, r2, #16
90025426:	ea4b 0101 	orr.w	r1, fp, r1
9002542a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002542e:	fb03 c101 	mla	r1, r3, r1, ip
90025432:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025436:	4302      	orrs	r2, r0
90025438:	fb03 1202 	mla	r2, r3, r2, r1
9002543c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025440:	0952      	lsrs	r2, r2, #5
90025442:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90025446:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002544a:	f8b9 2000 	ldrh.w	r2, [r9]
9002544e:	ea4b 0303 	orr.w	r3, fp, r3
90025452:	1211      	asrs	r1, r2, #8
90025454:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025458:	b29b      	uxth	r3, r3
9002545a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002545e:	00d2      	lsls	r2, r2, #3
90025460:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90025464:	fb11 f107 	smulbb	r1, r1, r7
90025468:	1218      	asrs	r0, r3, #8
9002546a:	fb1c fc07 	smulbb	ip, ip, r7
9002546e:	b2d2      	uxtb	r2, r2
90025470:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025474:	fb12 f207 	smulbb	r2, r2, r7
90025478:	fb00 100a 	mla	r0, r0, sl, r1
9002547c:	10d9      	asrs	r1, r3, #3
9002547e:	00db      	lsls	r3, r3, #3
90025480:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025484:	b280      	uxth	r0, r0
90025486:	b2db      	uxtb	r3, r3
90025488:	fb01 c10a 	mla	r1, r1, sl, ip
9002548c:	fb03 230a 	mla	r3, r3, sl, r2
90025490:	1c42      	adds	r2, r0, #1
90025492:	b289      	uxth	r1, r1
90025494:	b29b      	uxth	r3, r3
90025496:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002549a:	f101 0c01 	add.w	ip, r1, #1
9002549e:	1c5a      	adds	r2, r3, #1
900254a0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900254a4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900254a8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900254ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900254ae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900254b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900254b6:	441c      	add	r4, r3
900254b8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900254bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900254be:	4310      	orrs	r0, r2
900254c0:	441e      	add	r6, r3
900254c2:	ea40 000c 	orr.w	r0, r0, ip
900254c6:	f829 0b02 	strh.w	r0, [r9], #2
900254ca:	e6fa      	b.n	900252c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900254cc:	b013      	add	sp, #76	@ 0x4c
900254ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900254d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900254d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900254d6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900254da:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900254de:	fb0e 4703 	mla	r7, lr, r3, r4
900254e2:	f1be 0f00 	cmp.w	lr, #0
900254e6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900254ea:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900254ee:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900254f2:	8808      	ldrh	r0, [r1, #0]
900254f4:	db60      	blt.n	900255b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900254f6:	45f1      	cmp	r9, lr
900254f8:	dd5e      	ble.n	900255b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900254fa:	2c00      	cmp	r4, #0
900254fc:	db5a      	blt.n	900255b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900254fe:	42a3      	cmp	r3, r4
90025500:	dd58      	ble.n	900255b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025502:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025506:	1c62      	adds	r2, r4, #1
90025508:	d459      	bmi.n	900255be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002550a:	4293      	cmp	r3, r2
9002550c:	dd57      	ble.n	900255be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002550e:	2d00      	cmp	r5, #0
90025510:	d055      	beq.n	900255be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025512:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025516:	f11e 0e01 	adds.w	lr, lr, #1
9002551a:	d454      	bmi.n	900255c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002551c:	45f1      	cmp	r9, lr
9002551e:	dd52      	ble.n	900255c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025520:	2e00      	cmp	r6, #0
90025522:	d050      	beq.n	900255c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025524:	2c00      	cmp	r4, #0
90025526:	db4c      	blt.n	900255c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025528:	42a3      	cmp	r3, r4
9002552a:	dd4a      	ble.n	900255c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002552c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025530:	3401      	adds	r4, #1
90025532:	d405      	bmi.n	90025540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025534:	42a3      	cmp	r3, r4
90025536:	dd03      	ble.n	90025540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025538:	b115      	cbz	r5, 90025540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002553a:	3301      	adds	r3, #1
9002553c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025540:	fb15 f406 	smulbb	r4, r5, r6
90025544:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025548:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002554c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025550:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025554:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025558:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002555c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025560:	ea43 0c0c 	orr.w	ip, r3, ip
90025564:	f1c6 0310 	rsb	r3, r6, #16
90025568:	ea4e 0707 	orr.w	r7, lr, r7
9002556c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025570:	1b5b      	subs	r3, r3, r5
90025572:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025576:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002557a:	437d      	muls	r5, r7
9002557c:	fb03 5c0c 	mla	ip, r3, ip, r5
90025580:	0403      	lsls	r3, r0, #16
90025582:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025586:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002558a:	4318      	orrs	r0, r3
9002558c:	0413      	lsls	r3, r2, #16
9002558e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025592:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025596:	fb04 c000 	mla	r0, r4, r0, ip
9002559a:	4313      	orrs	r3, r2
9002559c:	fb06 0003 	mla	r0, r6, r3, r0
900255a0:	0d43      	lsrs	r3, r0, #21
900255a2:	0940      	lsrs	r0, r0, #5
900255a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900255a8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900255ac:	4318      	orrs	r0, r3
900255ae:	8008      	strh	r0, [r1, #0]
900255b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900255b4:	4684      	mov	ip, r0
900255b6:	e7a6      	b.n	90025506 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900255b8:	4607      	mov	r7, r0
900255ba:	4684      	mov	ip, r0
900255bc:	e7ab      	b.n	90025516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900255be:	4607      	mov	r7, r0
900255c0:	e7a9      	b.n	90025516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900255c2:	4602      	mov	r2, r0
900255c4:	e7b4      	b.n	90025530 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900255c6:	4602      	mov	r2, r0
900255c8:	e7ba      	b.n	90025540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900255ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900255ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900255ce:	b08f      	sub	sp, #60	@ 0x3c
900255d0:	461d      	mov	r5, r3
900255d2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900255d4:	9107      	str	r1, [sp, #28]
900255d6:	920c      	str	r2, [sp, #48]	@ 0x30
900255d8:	6859      	ldr	r1, [r3, #4]
900255da:	681b      	ldr	r3, [r3, #0]
900255dc:	900d      	str	r0, [sp, #52]	@ 0x34
900255de:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900255e2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900255e6:	fb01 2707 	mla	r7, r1, r7, r2
900255ea:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900255ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900255f0:	f8d3 8000 	ldr.w	r8, [r3]
900255f4:	9b07      	ldr	r3, [sp, #28]
900255f6:	2b00      	cmp	r3, #0
900255f8:	dc03      	bgt.n	90025602 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900255fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900255fc:	2b00      	cmp	r3, #0
900255fe:	f340 8182 	ble.w	90025906 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025602:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025604:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025608:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002560c:	1e48      	subs	r0, r1, #1
9002560e:	f102 3cff 	add.w	ip, r2, #4294967295
90025612:	2d00      	cmp	r5, #0
90025614:	f340 809b 	ble.w	9002574e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025618:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002561c:	ea4f 4326 	mov.w	r3, r6, asr #16
90025620:	d406      	bmi.n	90025630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025622:	4586      	cmp	lr, r0
90025624:	da04      	bge.n	90025630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025626:	2b00      	cmp	r3, #0
90025628:	db02      	blt.n	90025630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002562a:	4563      	cmp	r3, ip
9002562c:	f2c0 8090 	blt.w	90025750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025630:	f11e 0e01 	adds.w	lr, lr, #1
90025634:	f100 8084 	bmi.w	90025740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025638:	4571      	cmp	r1, lr
9002563a:	f2c0 8081 	blt.w	90025740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002563e:	3301      	adds	r3, #1
90025640:	d47e      	bmi.n	90025740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025642:	429a      	cmp	r2, r3
90025644:	db7c      	blt.n	90025740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025646:	46aa      	mov	sl, r5
90025648:	46b9      	mov	r9, r7
9002564a:	f1ba 0f00 	cmp.w	sl, #0
9002564e:	f340 8099 	ble.w	90025784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025652:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025654:	1421      	asrs	r1, r4, #16
90025656:	ea4f 4026 	mov.w	r0, r6, asr #16
9002565a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002565e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025662:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025666:	f100 80d1 	bmi.w	9002580c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002566a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002566e:	4559      	cmp	r1, fp
90025670:	f280 80cc 	bge.w	9002580c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025674:	2800      	cmp	r0, #0
90025676:	f2c0 80c9 	blt.w	9002580c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002567a:	f103 3bff 	add.w	fp, r3, #4294967295
9002567e:	4558      	cmp	r0, fp
90025680:	f280 80c4 	bge.w	9002580c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025684:	fa0f fe8e 	sxth.w	lr, lr
90025688:	fb00 110e 	mla	r1, r0, lr, r1
9002568c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025690:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90025694:	8841      	ldrh	r1, [r0, #2]
90025696:	f1bc 0f00 	cmp.w	ip, #0
9002569a:	d00b      	beq.n	900256b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
9002569c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900256a0:	3b01      	subs	r3, #1
900256a2:	005b      	lsls	r3, r3, #1
900256a4:	3302      	adds	r3, #2
900256a6:	eb00 0e03 	add.w	lr, r0, r3
900256aa:	5ac3      	ldrh	r3, [r0, r3]
900256ac:	9308      	str	r3, [sp, #32]
900256ae:	f8be 3002 	ldrh.w	r3, [lr, #2]
900256b2:	9309      	str	r3, [sp, #36]	@ 0x24
900256b4:	ea4f 400b 	mov.w	r0, fp, lsl #16
900256b8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900256bc:	fb12 f30c 	smulbb	r3, r2, ip
900256c0:	f1cc 0e10 	rsb	lr, ip, #16
900256c4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900256c8:	10db      	asrs	r3, r3, #3
900256ca:	ebae 0e02 	sub.w	lr, lr, r2
900256ce:	ea40 000b 	orr.w	r0, r0, fp
900256d2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900256d6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900256da:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900256de:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900256e2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900256e6:	ea4b 0101 	orr.w	r1, fp, r1
900256ea:	4351      	muls	r1, r2
900256ec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900256ee:	fb0e 1e00 	mla	lr, lr, r0, r1
900256f2:	0410      	lsls	r0, r2, #16
900256f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900256f8:	9908      	ldr	r1, [sp, #32]
900256fa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900256fe:	4310      	orrs	r0, r2
90025700:	9a08      	ldr	r2, [sp, #32]
90025702:	0412      	lsls	r2, r2, #16
90025704:	fb03 e000 	mla	r0, r3, r0, lr
90025708:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002570c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025710:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025714:	ea42 020e 	orr.w	r2, r2, lr
90025718:	fb03 0302 	mla	r3, r3, r2, r0
9002571c:	0d5a      	lsrs	r2, r3, #21
9002571e:	095b      	lsrs	r3, r3, #5
90025720:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025724:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025728:	4313      	orrs	r3, r2
9002572a:	f8a9 3000 	strh.w	r3, [r9]
9002572e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025730:	f109 0902 	add.w	r9, r9, #2
90025734:	f10a 3aff 	add.w	sl, sl, #4294967295
90025738:	441c      	add	r4, r3
9002573a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002573c:	441e      	add	r6, r3
9002573e:	e784      	b.n	9002564a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90025740:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025742:	3d01      	subs	r5, #1
90025744:	3702      	adds	r7, #2
90025746:	441c      	add	r4, r3
90025748:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002574a:	441e      	add	r6, r3
9002574c:	e761      	b.n	90025612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002574e:	d01d      	beq.n	9002578c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025750:	1e6b      	subs	r3, r5, #1
90025752:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025754:	fb00 4003 	mla	r0, r0, r3, r4
90025758:	1400      	asrs	r0, r0, #16
9002575a:	f53f af74 	bmi.w	90025646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002575e:	3901      	subs	r1, #1
90025760:	4288      	cmp	r0, r1
90025762:	f6bf af70 	bge.w	90025646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025766:	991c      	ldr	r1, [sp, #112]	@ 0x70
90025768:	fb01 6303 	mla	r3, r1, r3, r6
9002576c:	141b      	asrs	r3, r3, #16
9002576e:	f53f af6a 	bmi.w	90025646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025772:	3a01      	subs	r2, #1
90025774:	4293      	cmp	r3, r2
90025776:	f6bf af66 	bge.w	90025646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002577a:	46a9      	mov	r9, r5
9002577c:	46ba      	mov	sl, r7
9002577e:	f1b9 0f00 	cmp.w	r9, #0
90025782:	dc5b      	bgt.n	9002583c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90025784:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025788:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002578c:	9b07      	ldr	r3, [sp, #28]
9002578e:	2b00      	cmp	r3, #0
90025790:	f340 80b9 	ble.w	90025906 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025794:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025798:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002579a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002579e:	ee70 0aa4 	vadd.f32	s1, s1, s9
900257a2:	eef0 6a62 	vmov.f32	s13, s5
900257a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900257aa:	ee31 1a05 	vadd.f32	s2, s2, s10
900257ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900257b2:	ee16 4a90 	vmov	r4, s13
900257b6:	eef0 6a43 	vmov.f32	s13, s6
900257ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900257be:	ee16 6a90 	vmov	r6, s13
900257c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900257c6:	ee61 7a27 	vmul.f32	s15, s2, s15
900257ca:	ee77 2a62 	vsub.f32	s5, s14, s5
900257ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
900257d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900257d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900257da:	ee12 2a90 	vmov	r2, s5
900257de:	eef0 2a47 	vmov.f32	s5, s14
900257e2:	fb92 f3f3 	sdiv	r3, r2, r3
900257e6:	ee13 2a10 	vmov	r2, s6
900257ea:	931b      	str	r3, [sp, #108]	@ 0x6c
900257ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900257ee:	eeb0 3a67 	vmov.f32	s6, s15
900257f2:	fb92 f3f3 	sdiv	r3, r2, r3
900257f6:	931c      	str	r3, [sp, #112]	@ 0x70
900257f8:	9b07      	ldr	r3, [sp, #28]
900257fa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900257fc:	3b01      	subs	r3, #1
900257fe:	9307      	str	r3, [sp, #28]
90025800:	bf08      	it	eq
90025802:	4615      	moveq	r5, r2
90025804:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025806:	bf18      	it	ne
90025808:	461d      	movne	r5, r3
9002580a:	e6f3      	b.n	900255f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002580c:	f111 0b01 	adds.w	fp, r1, #1
90025810:	d48d      	bmi.n	9002572e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025812:	45de      	cmp	lr, fp
90025814:	db8b      	blt.n	9002572e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025816:	f110 0b01 	adds.w	fp, r0, #1
9002581a:	d488      	bmi.n	9002572e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002581c:	455b      	cmp	r3, fp
9002581e:	db86      	blt.n	9002572e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025820:	b21b      	sxth	r3, r3
90025822:	e9cd 1001 	strd	r1, r0, [sp, #4]
90025826:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002582a:	9300      	str	r3, [sp, #0]
9002582c:	4642      	mov	r2, r8
9002582e:	fa0f f38e 	sxth.w	r3, lr
90025832:	4649      	mov	r1, r9
90025834:	980d      	ldr	r0, [sp, #52]	@ 0x34
90025836:	f7ff fe4c 	bl	900254d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002583a:	e778      	b.n	9002572e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002583c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002583e:	1420      	asrs	r0, r4, #16
90025840:	1431      	asrs	r1, r6, #16
90025842:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025846:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002584a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002584e:	fb03 0101 	mla	r1, r3, r1, r0
90025852:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025856:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002585a:	8841      	ldrh	r1, [r0, #2]
9002585c:	f1be 0f00 	cmp.w	lr, #0
90025860:	d00b      	beq.n	9002587a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90025862:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90025866:	3b01      	subs	r3, #1
90025868:	005b      	lsls	r3, r3, #1
9002586a:	3302      	adds	r3, #2
9002586c:	eb00 0b03 	add.w	fp, r0, r3
90025870:	5ac3      	ldrh	r3, [r0, r3]
90025872:	930a      	str	r3, [sp, #40]	@ 0x28
90025874:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025878:	930b      	str	r3, [sp, #44]	@ 0x2c
9002587a:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002587e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025882:	fb12 f30e 	smulbb	r3, r2, lr
90025886:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002588a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002588e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025892:	10db      	asrs	r3, r3, #3
90025894:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025898:	ea40 000c 	orr.w	r0, r0, ip
9002589c:	f1ce 0c10 	rsb	ip, lr, #16
900258a0:	ea4b 0101 	orr.w	r1, fp, r1
900258a4:	f109 39ff 	add.w	r9, r9, #4294967295
900258a8:	ebac 0c02 	sub.w	ip, ip, r2
900258ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900258b0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900258b4:	4351      	muls	r1, r2
900258b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900258b8:	fb0c 1c00 	mla	ip, ip, r0, r1
900258bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900258be:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900258c2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900258c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900258c8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900258cc:	0412      	lsls	r2, r2, #16
900258ce:	ea4b 0000 	orr.w	r0, fp, r0
900258d2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900258d6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900258da:	fb03 c000 	mla	r0, r3, r0, ip
900258de:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900258e2:	ea42 0b0b 	orr.w	fp, r2, fp
900258e6:	fb03 000b 	mla	r0, r3, fp, r0
900258ea:	0d43      	lsrs	r3, r0, #21
900258ec:	0940      	lsrs	r0, r0, #5
900258ee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900258f2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900258f6:	4318      	orrs	r0, r3
900258f8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900258fa:	441c      	add	r4, r3
900258fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900258fe:	f82a 0b02 	strh.w	r0, [sl], #2
90025902:	441e      	add	r6, r3
90025904:	e73b      	b.n	9002577e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90025906:	b00f      	add	sp, #60	@ 0x3c
90025908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002590c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002590c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025910:	b085      	sub	sp, #20
90025912:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90025916:	9102      	str	r1, [sp, #8]
90025918:	2c00      	cmp	r4, #0
9002591a:	fb04 7103 	mla	r1, r4, r3, r7
9002591e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90025922:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90025926:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002592a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002592e:	f2c0 811b 	blt.w	90025b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025932:	45a6      	cmp	lr, r4
90025934:	f340 8118 	ble.w	90025b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025938:	2f00      	cmp	r7, #0
9002593a:	f2c0 8113 	blt.w	90025b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002593e:	42bb      	cmp	r3, r7
90025940:	f340 8110 	ble.w	90025b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90025944:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90025948:	1c7a      	adds	r2, r7, #1
9002594a:	f100 8110 	bmi.w	90025b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002594e:	4293      	cmp	r3, r2
90025950:	f340 810d 	ble.w	90025b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90025954:	2e00      	cmp	r6, #0
90025956:	f000 810c 	beq.w	90025b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002595a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002595e:	3401      	adds	r4, #1
90025960:	f100 810b 	bmi.w	90025b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90025964:	45a6      	cmp	lr, r4
90025966:	f340 8108 	ble.w	90025b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002596a:	2800      	cmp	r0, #0
9002596c:	f000 8108 	beq.w	90025b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90025970:	2f00      	cmp	r7, #0
90025972:	f2c0 8100 	blt.w	90025b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90025976:	42bb      	cmp	r3, r7
90025978:	f340 80fd 	ble.w	90025b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002597c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025980:	3701      	adds	r7, #1
90025982:	f100 8100 	bmi.w	90025b86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90025986:	42bb      	cmp	r3, r7
90025988:	f340 80fd 	ble.w	90025b86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002598c:	2e00      	cmp	r6, #0
9002598e:	f000 80fc 	beq.w	90025b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90025992:	3301      	adds	r3, #1
90025994:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90025998:	b2b6      	uxth	r6, r6
9002599a:	b280      	uxth	r0, r0
9002599c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900259a0:	fb00 fe06 	mul.w	lr, r0, r6
900259a4:	0136      	lsls	r6, r6, #4
900259a6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900259aa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900259ae:	eba6 070e 	sub.w	r7, r6, lr
900259b2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900259b6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900259ba:	b280      	uxth	r0, r0
900259bc:	b2bf      	uxth	r7, r7
900259be:	1a1b      	subs	r3, r3, r0
900259c0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900259c4:	fb0a f607 	mul.w	r6, sl, r7
900259c8:	b29b      	uxth	r3, r3
900259ca:	fb0b 6603 	mla	r6, fp, r3, r6
900259ce:	fb00 6609 	mla	r6, r0, r9, r6
900259d2:	fb0e 6608 	mla	r6, lr, r8, r6
900259d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900259da:	9600      	str	r6, [sp, #0]
900259dc:	2e00      	cmp	r6, #0
900259de:	f000 80be 	beq.w	90025b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900259e2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900259e6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900259ea:	9e02      	ldr	r6, [sp, #8]
900259ec:	fb0b fc0c 	mul.w	ip, fp, ip
900259f0:	fb0b f505 	mul.w	r5, fp, r5
900259f4:	8836      	ldrh	r6, [r6, #0]
900259f6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900259fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900259fe:	9501      	str	r5, [sp, #4]
90025a00:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90025a04:	44dc      	add	ip, fp
90025a06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025a0a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90025a0e:	9503      	str	r5, [sp, #12]
90025a10:	9d01      	ldr	r5, [sp, #4]
90025a12:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90025a16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90025a1a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90025a1e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025a22:	fb0a fc0c 	mul.w	ip, sl, ip
90025a26:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90025a2a:	fb0a fa01 	mul.w	sl, sl, r1
90025a2e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90025a32:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025a36:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90025a3a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a3e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90025a42:	4465      	add	r5, ip
90025a44:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025a48:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90025a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025a50:	fb09 fc0c 	mul.w	ip, r9, ip
90025a54:	0a2d      	lsrs	r5, r5, #8
90025a56:	fb09 f904 	mul.w	r9, r9, r4
90025a5a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025a5e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90025a62:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a66:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90025a6a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025a6e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025a72:	437d      	muls	r5, r7
90025a74:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025a78:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025a7c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025a80:	4461      	add	r1, ip
90025a82:	fb08 f404 	mul.w	r4, r8, r4
90025a86:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025a8a:	fb08 f802 	mul.w	r8, r8, r2
90025a8e:	0a09      	lsrs	r1, r1, #8
90025a90:	0a22      	lsrs	r2, r4, #8
90025a92:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90025a96:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025a9a:	fb07 f70a 	mul.w	r7, r7, sl
90025a9e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025aa2:	4414      	add	r4, r2
90025aa4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90025aa8:	0a24      	lsrs	r4, r4, #8
90025aaa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025aae:	9a03      	ldr	r2, [sp, #12]
90025ab0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90025ab4:	fb02 5503 	mla	r5, r2, r3, r5
90025ab8:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025abc:	9a00      	ldr	r2, [sp, #0]
90025abe:	fb04 540e 	mla	r4, r4, lr, r5
90025ac2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90025ac6:	1235      	asrs	r5, r6, #8
90025ac8:	fb01 4100 	mla	r1, r1, r0, r4
90025acc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025ad0:	0a09      	lsrs	r1, r1, #8
90025ad2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90025ad6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90025ada:	fb03 7101 	mla	r1, r3, r1, r7
90025ade:	fb0e 1e08 	mla	lr, lr, r8, r1
90025ae2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90025ae6:	fb00 e101 	mla	r1, r0, r1, lr
90025aea:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90025aee:	b287      	uxth	r7, r0
90025af0:	0a09      	lsrs	r1, r1, #8
90025af2:	437a      	muls	r2, r7
90025af4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025af8:	1c53      	adds	r3, r2, #1
90025afa:	4321      	orrs	r1, r4
90025afc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025b00:	0c0a      	lsrs	r2, r1, #16
90025b02:	f3c1 2407 	ubfx	r4, r1, #8, #8
90025b06:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90025b0a:	b2c8      	uxtb	r0, r1
90025b0c:	fb12 f207 	smulbb	r2, r2, r7
90025b10:	fb14 f407 	smulbb	r4, r4, r7
90025b14:	b2db      	uxtb	r3, r3
90025b16:	fb10 f007 	smulbb	r0, r0, r7
90025b1a:	fb05 2503 	mla	r5, r5, r3, r2
90025b1e:	10f2      	asrs	r2, r6, #3
90025b20:	00f6      	lsls	r6, r6, #3
90025b22:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025b26:	b2ad      	uxth	r5, r5
90025b28:	b2f6      	uxtb	r6, r6
90025b2a:	fb02 4203 	mla	r2, r2, r3, r4
90025b2e:	fb06 0303 	mla	r3, r6, r3, r0
90025b32:	b294      	uxth	r4, r2
90025b34:	b299      	uxth	r1, r3
90025b36:	1c6b      	adds	r3, r5, #1
90025b38:	1c62      	adds	r2, r4, #1
90025b3a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025b3e:	1c4b      	adds	r3, r1, #1
90025b40:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90025b44:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025b48:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025b4c:	0952      	lsrs	r2, r2, #5
90025b4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025b52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025b56:	432b      	orrs	r3, r5
90025b58:	4313      	orrs	r3, r2
90025b5a:	9a02      	ldr	r2, [sp, #8]
90025b5c:	8013      	strh	r3, [r2, #0]
90025b5e:	b005      	add	sp, #20
90025b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b64:	2500      	movs	r5, #0
90025b66:	e6ef      	b.n	90025948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90025b68:	2100      	movs	r1, #0
90025b6a:	460d      	mov	r5, r1
90025b6c:	e6f7      	b.n	9002595e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025b6e:	2100      	movs	r1, #0
90025b70:	e6f5      	b.n	9002595e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025b72:	4631      	mov	r1, r6
90025b74:	e6f3      	b.n	9002595e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025b76:	2400      	movs	r4, #0
90025b78:	e702      	b.n	90025980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90025b7a:	2200      	movs	r2, #0
90025b7c:	4614      	mov	r4, r2
90025b7e:	e70b      	b.n	90025998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025b80:	4602      	mov	r2, r0
90025b82:	4604      	mov	r4, r0
90025b84:	e708      	b.n	90025998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025b86:	2200      	movs	r2, #0
90025b88:	e706      	b.n	90025998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025b8a:	4632      	mov	r2, r6
90025b8c:	e704      	b.n	90025998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90025b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b92:	b09d      	sub	sp, #116	@ 0x74
90025b94:	9219      	str	r2, [sp, #100]	@ 0x64
90025b96:	9307      	str	r3, [sp, #28]
90025b98:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90025b9a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90025b9e:	901b      	str	r0, [sp, #108]	@ 0x6c
90025ba0:	931a      	str	r3, [sp, #104]	@ 0x68
90025ba2:	6850      	ldr	r0, [r2, #4]
90025ba4:	9117      	str	r1, [sp, #92]	@ 0x5c
90025ba6:	6812      	ldr	r2, [r2, #0]
90025ba8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90025bac:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90025bb0:	fb00 1303 	mla	r3, r0, r3, r1
90025bb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025bb8:	930a      	str	r3, [sp, #40]	@ 0x28
90025bba:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025bbc:	681b      	ldr	r3, [r3, #0]
90025bbe:	9310      	str	r3, [sp, #64]	@ 0x40
90025bc0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90025bc4:	930b      	str	r3, [sp, #44]	@ 0x2c
90025bc6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025bc8:	2b00      	cmp	r3, #0
90025bca:	dc03      	bgt.n	90025bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90025bcc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90025bce:	2b00      	cmp	r3, #0
90025bd0:	f340 8375 	ble.w	900262be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90025bd4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025bd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025bda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025bde:	1e48      	subs	r0, r1, #1
90025be0:	1e57      	subs	r7, r2, #1
90025be2:	9b07      	ldr	r3, [sp, #28]
90025be4:	2b00      	cmp	r3, #0
90025be6:	f340 818e 	ble.w	90025f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90025bea:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025bee:	ea4f 4326 	mov.w	r3, r6, asr #16
90025bf2:	d406      	bmi.n	90025c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025bf4:	4584      	cmp	ip, r0
90025bf6:	da04      	bge.n	90025c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025bf8:	2b00      	cmp	r3, #0
90025bfa:	db02      	blt.n	90025c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025bfc:	42bb      	cmp	r3, r7
90025bfe:	f2c0 8183 	blt.w	90025f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90025c02:	f11c 0c01 	adds.w	ip, ip, #1
90025c06:	f100 8173 	bmi.w	90025ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025c0a:	4561      	cmp	r1, ip
90025c0c:	f2c0 8170 	blt.w	90025ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025c10:	3301      	adds	r3, #1
90025c12:	f100 816d 	bmi.w	90025ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025c16:	429a      	cmp	r2, r3
90025c18:	f2c0 816a 	blt.w	90025ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025c1c:	9b07      	ldr	r3, [sp, #28]
90025c1e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025c20:	9318      	str	r3, [sp, #96]	@ 0x60
90025c22:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025c24:	2b00      	cmp	r3, #0
90025c26:	f340 818c 	ble.w	90025f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90025c2a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90025c2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025c30:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025c32:	f3c4 3003 	ubfx	r0, r4, #12, #4
90025c36:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90025c3a:	1422      	asrs	r2, r4, #16
90025c3c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025c40:	689b      	ldr	r3, [r3, #8]
90025c42:	f100 81cd 	bmi.w	90025fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c46:	f103 38ff 	add.w	r8, r3, #4294967295
90025c4a:	4542      	cmp	r2, r8
90025c4c:	f280 81c8 	bge.w	90025fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c50:	f1bc 0f00 	cmp.w	ip, #0
90025c54:	f2c0 81c4 	blt.w	90025fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c58:	f10e 38ff 	add.w	r8, lr, #4294967295
90025c5c:	45c4      	cmp	ip, r8
90025c5e:	f280 81bf 	bge.w	90025fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c62:	b21b      	sxth	r3, r3
90025c64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025c66:	fb0c 2203 	mla	r2, ip, r3, r2
90025c6a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025c6e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90025c72:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025c76:	2800      	cmp	r0, #0
90025c78:	f000 81a9 	beq.w	90025fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90025c7c:	f8d8 5004 	ldr.w	r5, [r8, #4]
90025c80:	950c      	str	r5, [sp, #48]	@ 0x30
90025c82:	0e2d      	lsrs	r5, r5, #24
90025c84:	9513      	str	r5, [sp, #76]	@ 0x4c
90025c86:	b181      	cbz	r1, 90025caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025c88:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90025c8c:	3b01      	subs	r3, #1
90025c8e:	009b      	lsls	r3, r3, #2
90025c90:	3304      	adds	r3, #4
90025c92:	eb08 0c03 	add.w	ip, r8, r3
90025c96:	f858 3003 	ldr.w	r3, [r8, r3]
90025c9a:	9308      	str	r3, [sp, #32]
90025c9c:	0e1b      	lsrs	r3, r3, #24
90025c9e:	9311      	str	r3, [sp, #68]	@ 0x44
90025ca0:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025ca4:	930d      	str	r3, [sp, #52]	@ 0x34
90025ca6:	0e1b      	lsrs	r3, r3, #24
90025ca8:	9314      	str	r3, [sp, #80]	@ 0x50
90025caa:	b280      	uxth	r0, r0
90025cac:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025cae:	b289      	uxth	r1, r1
90025cb0:	fb00 f901 	mul.w	r9, r0, r1
90025cb4:	0100      	lsls	r0, r0, #4
90025cb6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90025cba:	eba0 0809 	sub.w	r8, r0, r9
90025cbe:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90025cc2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90025cc4:	b289      	uxth	r1, r1
90025cc6:	fa1f f888 	uxth.w	r8, r8
90025cca:	1a5b      	subs	r3, r3, r1
90025ccc:	fb08 f000 	mul.w	r0, r8, r0
90025cd0:	b29b      	uxth	r3, r3
90025cd2:	fb03 000e 	mla	r0, r3, lr, r0
90025cd6:	fb01 0005 	mla	r0, r1, r5, r0
90025cda:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025cdc:	fb09 0005 	mla	r0, r9, r5, r0
90025ce0:	f3c0 2007 	ubfx	r0, r0, #8, #8
90025ce4:	2800      	cmp	r0, #0
90025ce6:	f000 80fa 	beq.w	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025cea:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025cee:	d01b      	beq.n	90025d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90025cf0:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90025cf4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025cf8:	fb0e fa0a 	mul.w	sl, lr, sl
90025cfc:	fb0e fe02 	mul.w	lr, lr, r2
90025d00:	ea4f 221a 	mov.w	r2, sl, lsr #8
90025d04:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025d08:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90025d0c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025d10:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025d14:	4452      	add	r2, sl
90025d16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d1a:	0a12      	lsrs	r2, r2, #8
90025d1c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025d20:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025d24:	ea42 020c 	orr.w	r2, r2, ip
90025d28:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025d2a:	2dff      	cmp	r5, #255	@ 0xff
90025d2c:	d021      	beq.n	90025d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90025d2e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025d30:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025d34:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025d36:	fb05 fb0b 	mul.w	fp, r5, fp
90025d3a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025d3c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025d40:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025d42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d46:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d4a:	fb05 fa0a 	mul.w	sl, r5, sl
90025d4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d52:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025d56:	44de      	add	lr, fp
90025d58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025d5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025d60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d6c:	ea4e 050a 	orr.w	r5, lr, sl
90025d70:	950c      	str	r5, [sp, #48]	@ 0x30
90025d72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025d74:	2dff      	cmp	r5, #255	@ 0xff
90025d76:	d021      	beq.n	90025dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90025d78:	9d08      	ldr	r5, [sp, #32]
90025d7a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025d7e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025d80:	fb05 fb0b 	mul.w	fp, r5, fp
90025d84:	9d08      	ldr	r5, [sp, #32]
90025d86:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025d8a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025d8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d90:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d94:	fb05 fa0a 	mul.w	sl, r5, sl
90025d98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d9c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025da0:	44de      	add	lr, fp
90025da2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025da6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025dae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025db2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025db6:	ea4e 050a 	orr.w	r5, lr, sl
90025dba:	9508      	str	r5, [sp, #32]
90025dbc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025dbe:	2dff      	cmp	r5, #255	@ 0xff
90025dc0:	d021      	beq.n	90025e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90025dc2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025dc4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025dc8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025dca:	fb05 fb0b 	mul.w	fp, r5, fp
90025dce:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025dd0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025dd4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025dd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025dda:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025dde:	fb05 fa0a 	mul.w	sl, r5, sl
90025de2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025de6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025dea:	44de      	add	lr, fp
90025dec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025df0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025df4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025df8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025dfc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025e00:	ea4e 050a 	orr.w	r5, lr, sl
90025e04:	950d      	str	r5, [sp, #52]	@ 0x34
90025e06:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025e08:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90025e0c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025e10:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025e14:	9d08      	ldr	r5, [sp, #32]
90025e16:	fb08 fc0c 	mul.w	ip, r8, ip
90025e1a:	fb03 cc0e 	mla	ip, r3, lr, ip
90025e1e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025e22:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025e24:	fb01 cc0e 	mla	ip, r1, lr, ip
90025e28:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025e2c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025e2e:	fb09 cc0e 	mla	ip, r9, lr, ip
90025e32:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90025e36:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90025e38:	fb08 f80e 	mul.w	r8, r8, lr
90025e3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025e40:	fb03 8202 	mla	r2, r3, r2, r8
90025e44:	9b08      	ldr	r3, [sp, #32]
90025e46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025e4a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90025e4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025e50:	fb01 220a 	mla	r2, r1, sl, r2
90025e54:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90025e58:	883b      	ldrh	r3, [r7, #0]
90025e5a:	fb09 2901 	mla	r9, r9, r1, r2
90025e5e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90025e60:	1219      	asrs	r1, r3, #8
90025e62:	4342      	muls	r2, r0
90025e64:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025e68:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025e6c:	1c50      	adds	r0, r2, #1
90025e6e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90025e72:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90025e76:	ea4c 0c09 	orr.w	ip, ip, r9
90025e7a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90025e7e:	ea4f 421c 	mov.w	r2, ip, lsr #16
90025e82:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90025e86:	fa5f fc8c 	uxtb.w	ip, ip
90025e8a:	fb12 f205 	smulbb	r2, r2, r5
90025e8e:	b2c0      	uxtb	r0, r0
90025e90:	fb1c fc05 	smulbb	ip, ip, r5
90025e94:	fb01 2100 	mla	r1, r1, r0, r2
90025e98:	10da      	asrs	r2, r3, #3
90025e9a:	fb1e fe05 	smulbb	lr, lr, r5
90025e9e:	00db      	lsls	r3, r3, #3
90025ea0:	b289      	uxth	r1, r1
90025ea2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025ea6:	b2db      	uxtb	r3, r3
90025ea8:	fb02 e200 	mla	r2, r2, r0, lr
90025eac:	fb03 c300 	mla	r3, r3, r0, ip
90025eb0:	b292      	uxth	r2, r2
90025eb2:	fa1f fc83 	uxth.w	ip, r3
90025eb6:	1c4b      	adds	r3, r1, #1
90025eb8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90025ebc:	f10c 0301 	add.w	r3, ip, #1
90025ec0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90025ec4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90025ec8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025ecc:	430b      	orrs	r3, r1
90025ece:	1c51      	adds	r1, r2, #1
90025ed0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025ed4:	0952      	lsrs	r2, r2, #5
90025ed6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025eda:	4313      	orrs	r3, r2
90025edc:	803b      	strh	r3, [r7, #0]
90025ede:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025ee0:	3702      	adds	r7, #2
90025ee2:	441c      	add	r4, r3
90025ee4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90025ee6:	441e      	add	r6, r3
90025ee8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025eea:	3b01      	subs	r3, #1
90025eec:	9318      	str	r3, [sp, #96]	@ 0x60
90025eee:	e698      	b.n	90025c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90025ef0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025ef2:	441c      	add	r4, r3
90025ef4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90025ef6:	441e      	add	r6, r3
90025ef8:	9b07      	ldr	r3, [sp, #28]
90025efa:	3b01      	subs	r3, #1
90025efc:	9307      	str	r3, [sp, #28]
90025efe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f00:	3302      	adds	r3, #2
90025f02:	930a      	str	r3, [sp, #40]	@ 0x28
90025f04:	e66d      	b.n	90025be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90025f06:	d023      	beq.n	90025f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90025f08:	9b07      	ldr	r3, [sp, #28]
90025f0a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90025f0c:	3b01      	subs	r3, #1
90025f0e:	fb00 4003 	mla	r0, r0, r3, r4
90025f12:	1400      	asrs	r0, r0, #16
90025f14:	f53f ae82 	bmi.w	90025c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025f18:	3901      	subs	r1, #1
90025f1a:	4288      	cmp	r0, r1
90025f1c:	f6bf ae7e 	bge.w	90025c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025f20:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90025f22:	fb01 6303 	mla	r3, r1, r3, r6
90025f26:	141b      	asrs	r3, r3, #16
90025f28:	f53f ae78 	bmi.w	90025c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025f2c:	3a01      	subs	r2, #1
90025f2e:	4293      	cmp	r3, r2
90025f30:	f6bf ae74 	bge.w	90025c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025f34:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025f38:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025f3c:	f1bb 0f00 	cmp.w	fp, #0
90025f40:	dc6c      	bgt.n	9002601c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025f42:	9b07      	ldr	r3, [sp, #28]
90025f44:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025f48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f4a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025f4e:	930a      	str	r3, [sp, #40]	@ 0x28
90025f50:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025f52:	2b00      	cmp	r3, #0
90025f54:	f340 81b3 	ble.w	900262be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90025f58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025f5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025f5e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025f66:	eef0 6a62 	vmov.f32	s13, s5
90025f6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025f6e:	ee31 1a05 	vadd.f32	s2, s2, s10
90025f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f76:	ee16 4a90 	vmov	r4, s13
90025f7a:	eef0 6a43 	vmov.f32	s13, s6
90025f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f82:	ee16 6a90 	vmov	r6, s13
90025f86:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025f8a:	ee61 7a27 	vmul.f32	s15, s2, s15
90025f8e:	ee77 2a62 	vsub.f32	s5, s14, s5
90025f92:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025f96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025f9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025f9e:	ee12 2a90 	vmov	r2, s5
90025fa2:	eef0 2a47 	vmov.f32	s5, s14
90025fa6:	fb92 f3f3 	sdiv	r3, r2, r3
90025faa:	ee13 2a10 	vmov	r2, s6
90025fae:	9329      	str	r3, [sp, #164]	@ 0xa4
90025fb0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025fb2:	eeb0 3a67 	vmov.f32	s6, s15
90025fb6:	fb92 f3f3 	sdiv	r3, r2, r3
90025fba:	932a      	str	r3, [sp, #168]	@ 0xa8
90025fbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025fbe:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90025fc0:	3b01      	subs	r3, #1
90025fc2:	9317      	str	r3, [sp, #92]	@ 0x5c
90025fc4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025fc6:	bf08      	it	eq
90025fc8:	4613      	moveq	r3, r2
90025fca:	9307      	str	r3, [sp, #28]
90025fcc:	e5fb      	b.n	90025bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025fce:	2900      	cmp	r1, #0
90025fd0:	f43f ae6b 	beq.w	90025caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025fd4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90025fd8:	9308      	str	r3, [sp, #32]
90025fda:	0e1b      	lsrs	r3, r3, #24
90025fdc:	9311      	str	r3, [sp, #68]	@ 0x44
90025fde:	e664      	b.n	90025caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025fe0:	f112 0801 	adds.w	r8, r2, #1
90025fe4:	f53f af7b 	bmi.w	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025fe8:	4543      	cmp	r3, r8
90025fea:	f6ff af78 	blt.w	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025fee:	f11c 0801 	adds.w	r8, ip, #1
90025ff2:	f53f af74 	bmi.w	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025ff6:	45c6      	cmp	lr, r8
90025ff8:	f6ff af71 	blt.w	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025ffc:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90025ffe:	b21b      	sxth	r3, r3
90026000:	9201      	str	r2, [sp, #4]
90026002:	fa0f f28e 	sxth.w	r2, lr
90026006:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002600a:	e9cd c002 	strd	ip, r0, [sp, #8]
9002600e:	9200      	str	r2, [sp, #0]
90026010:	4639      	mov	r1, r7
90026012:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026014:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026016:	f7ff fc79 	bl	9002590c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002601a:	e760      	b.n	90025ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002601c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002601e:	1427      	asrs	r7, r4, #16
90026020:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026022:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026026:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002602a:	1433      	asrs	r3, r6, #16
9002602c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026030:	fb01 7303 	mla	r3, r1, r3, r7
90026034:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90026038:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002603c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026040:	2a00      	cmp	r2, #0
90026042:	f000 8133 	beq.w	900262ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90026046:	687d      	ldr	r5, [r7, #4]
90026048:	950e      	str	r5, [sp, #56]	@ 0x38
9002604a:	0e2d      	lsrs	r5, r5, #24
9002604c:	9515      	str	r5, [sp, #84]	@ 0x54
9002604e:	b178      	cbz	r0, 90026070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026050:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90026054:	3901      	subs	r1, #1
90026056:	0089      	lsls	r1, r1, #2
90026058:	3104      	adds	r1, #4
9002605a:	eb07 0e01 	add.w	lr, r7, r1
9002605e:	5879      	ldr	r1, [r7, r1]
90026060:	9109      	str	r1, [sp, #36]	@ 0x24
90026062:	0e09      	lsrs	r1, r1, #24
90026064:	9112      	str	r1, [sp, #72]	@ 0x48
90026066:	f8de 1004 	ldr.w	r1, [lr, #4]
9002606a:	910f      	str	r1, [sp, #60]	@ 0x3c
9002606c:	0e09      	lsrs	r1, r1, #24
9002606e:	9116      	str	r1, [sp, #88]	@ 0x58
90026070:	b292      	uxth	r2, r2
90026072:	9915      	ldr	r1, [sp, #84]	@ 0x54
90026074:	b280      	uxth	r0, r0
90026076:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026078:	fb02 f800 	mul.w	r8, r2, r0
9002607c:	0112      	lsls	r2, r2, #4
9002607e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026082:	eba2 0e08 	sub.w	lr, r2, r8
90026086:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002608a:	b280      	uxth	r0, r0
9002608c:	fa1f fe8e 	uxth.w	lr, lr
90026090:	1a12      	subs	r2, r2, r0
90026092:	fb0e f101 	mul.w	r1, lr, r1
90026096:	b292      	uxth	r2, r2
90026098:	fb02 110c 	mla	r1, r2, ip, r1
9002609c:	fb00 1105 	mla	r1, r0, r5, r1
900260a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900260a2:	fb08 1105 	mla	r1, r8, r5, r1
900260a6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900260aa:	2900      	cmp	r1, #0
900260ac:	f000 80f5 	beq.w	9002629a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900260b0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900260b4:	d019      	beq.n	900260ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900260b6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900260ba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900260be:	fb0c fa0a 	mul.w	sl, ip, sl
900260c2:	fb0c fc03 	mul.w	ip, ip, r3
900260c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900260ca:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900260ce:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900260d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260d6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900260da:	4453      	add	r3, sl
900260dc:	0a3f      	lsrs	r7, r7, #8
900260de:	0a1b      	lsrs	r3, r3, #8
900260e0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900260e4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260e8:	433b      	orrs	r3, r7
900260ea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900260ec:	2dff      	cmp	r5, #255	@ 0xff
900260ee:	d020      	beq.n	90026132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900260f0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900260f2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900260f6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900260f8:	436f      	muls	r7, r5
900260fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900260fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026100:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026104:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026106:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002610a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002610e:	fb05 fa0a 	mul.w	sl, r5, sl
90026112:	44bc      	add	ip, r7
90026114:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026118:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002611c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026120:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026124:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026128:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002612c:	ea4c 050a 	orr.w	r5, ip, sl
90026130:	950e      	str	r5, [sp, #56]	@ 0x38
90026132:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026134:	2dff      	cmp	r5, #255	@ 0xff
90026136:	d020      	beq.n	9002617a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026138:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002613a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002613e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026140:	436f      	muls	r7, r5
90026142:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026144:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026148:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002614c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002614e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026152:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026156:	fb05 fa0a 	mul.w	sl, r5, sl
9002615a:	44bc      	add	ip, r7
9002615c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026164:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026168:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002616c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026170:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026174:	ea4c 050a 	orr.w	r5, ip, sl
90026178:	9509      	str	r5, [sp, #36]	@ 0x24
9002617a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002617c:	2dff      	cmp	r5, #255	@ 0xff
9002617e:	d020      	beq.n	900261c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026180:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026182:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026186:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026188:	436f      	muls	r7, r5
9002618a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002618c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026190:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026194:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026196:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002619a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002619e:	fb05 fa0a 	mul.w	sl, r5, sl
900261a2:	44bc      	add	ip, r7
900261a4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900261a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900261ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900261b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900261b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900261b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900261bc:	ea4c 050a 	orr.w	r5, ip, sl
900261c0:	950f      	str	r5, [sp, #60]	@ 0x3c
900261c2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900261c4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900261c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900261cc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900261d0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900261d2:	fb0e f707 	mul.w	r7, lr, r7
900261d6:	fb02 770c 	mla	r7, r2, ip, r7
900261da:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900261de:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900261e0:	fb00 770c 	mla	r7, r0, ip, r7
900261e4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900261e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900261ea:	fb08 770c 	mla	r7, r8, ip, r7
900261ee:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900261f2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900261f4:	fb0e fe0c 	mul.w	lr, lr, ip
900261f8:	0a3f      	lsrs	r7, r7, #8
900261fa:	fb02 e303 	mla	r3, r2, r3, lr
900261fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026200:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026204:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90026208:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002620a:	fb00 330a 	mla	r3, r0, sl, r3
9002620e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90026212:	f8b9 0000 	ldrh.w	r0, [r9]
90026216:	fb08 3c0c 	mla	ip, r8, ip, r3
9002621a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002621c:	1202      	asrs	r2, r0, #8
9002621e:	4359      	muls	r1, r3
90026220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026224:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026228:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002622c:	1c4b      	adds	r3, r1, #1
9002622e:	ea47 070c 	orr.w	r7, r7, ip
90026232:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026236:	0c3b      	lsrs	r3, r7, #16
90026238:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002623c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026240:	b2ff      	uxtb	r7, r7
90026242:	fb13 f305 	smulbb	r3, r3, r5
90026246:	b2c9      	uxtb	r1, r1
90026248:	fb17 f705 	smulbb	r7, r7, r5
9002624c:	fb02 3201 	mla	r2, r2, r1, r3
90026250:	10c3      	asrs	r3, r0, #3
90026252:	fb1c fc05 	smulbb	ip, ip, r5
90026256:	00c0      	lsls	r0, r0, #3
90026258:	b292      	uxth	r2, r2
9002625a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002625e:	b2c0      	uxtb	r0, r0
90026260:	fb03 c301 	mla	r3, r3, r1, ip
90026264:	fb00 7001 	mla	r0, r0, r1, r7
90026268:	1c51      	adds	r1, r2, #1
9002626a:	b29b      	uxth	r3, r3
9002626c:	b280      	uxth	r0, r0
9002626e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026272:	f100 0c01 	add.w	ip, r0, #1
90026276:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002627a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9002627e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026282:	ea4c 0202 	orr.w	r2, ip, r2
90026286:	f103 0c01 	add.w	ip, r3, #1
9002628a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002628e:	095b      	lsrs	r3, r3, #5
90026290:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026294:	431a      	orrs	r2, r3
90026296:	f8a9 2000 	strh.w	r2, [r9]
9002629a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002629c:	f109 0902 	add.w	r9, r9, #2
900262a0:	f10b 3bff 	add.w	fp, fp, #4294967295
900262a4:	441c      	add	r4, r3
900262a6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900262a8:	441e      	add	r6, r3
900262aa:	e647      	b.n	90025f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900262ac:	2800      	cmp	r0, #0
900262ae:	f43f aedf 	beq.w	90026070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900262b2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900262b6:	9109      	str	r1, [sp, #36]	@ 0x24
900262b8:	0e09      	lsrs	r1, r1, #24
900262ba:	9112      	str	r1, [sp, #72]	@ 0x48
900262bc:	e6d8      	b.n	90026070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900262be:	b01d      	add	sp, #116	@ 0x74
900262c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900262c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900262c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900262c8:	b085      	sub	sp, #20
900262ca:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900262ce:	9102      	str	r1, [sp, #8]
900262d0:	2c00      	cmp	r4, #0
900262d2:	fb04 7103 	mla	r1, r4, r3, r7
900262d6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900262da:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900262de:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900262e2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900262e6:	f2c0 810c 	blt.w	90026502 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900262ea:	45a6      	cmp	lr, r4
900262ec:	f340 8109 	ble.w	90026502 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900262f0:	2f00      	cmp	r7, #0
900262f2:	f2c0 8104 	blt.w	900264fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900262f6:	42bb      	cmp	r3, r7
900262f8:	f340 8101 	ble.w	900264fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900262fc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026300:	1c7a      	adds	r2, r7, #1
90026302:	f100 8101 	bmi.w	90026508 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026306:	4293      	cmp	r3, r2
90026308:	f340 80fe 	ble.w	90026508 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002630c:	2e00      	cmp	r6, #0
9002630e:	f000 80fd 	beq.w	9002650c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026312:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026316:	3401      	adds	r4, #1
90026318:	f100 80fc 	bmi.w	90026514 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002631c:	45a6      	cmp	lr, r4
9002631e:	f340 80f9 	ble.w	90026514 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026322:	2800      	cmp	r0, #0
90026324:	f000 80f9 	beq.w	9002651a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026328:	2f00      	cmp	r7, #0
9002632a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002632e:	f2c0 80ef 	blt.w	90026510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026332:	42bb      	cmp	r3, r7
90026334:	f340 80ec 	ble.w	90026510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026338:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002633c:	3701      	adds	r7, #1
9002633e:	f100 80ef 	bmi.w	90026520 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026342:	42bb      	cmp	r3, r7
90026344:	f340 80ec 	ble.w	90026520 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026348:	2e00      	cmp	r6, #0
9002634a:	f000 80eb 	beq.w	90026524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002634e:	6852      	ldr	r2, [r2, #4]
90026350:	b2b6      	uxth	r6, r6
90026352:	b280      	uxth	r0, r0
90026354:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026358:	fb00 fe06 	mul.w	lr, r0, r6
9002635c:	0136      	lsls	r6, r6, #4
9002635e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026362:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026366:	eba6 070e 	sub.w	r7, r6, lr
9002636a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002636e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026372:	b280      	uxth	r0, r0
90026374:	b2bf      	uxth	r7, r7
90026376:	1a1b      	subs	r3, r3, r0
90026378:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002637c:	fb07 f60a 	mul.w	r6, r7, sl
90026380:	b29b      	uxth	r3, r3
90026382:	fb0b 6603 	mla	r6, fp, r3, r6
90026386:	fb00 6609 	mla	r6, r0, r9, r6
9002638a:	fb0e 6608 	mla	r6, lr, r8, r6
9002638e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026392:	9600      	str	r6, [sp, #0]
90026394:	2e00      	cmp	r6, #0
90026396:	f000 80af 	beq.w	900264f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
9002639a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002639e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900263a2:	9e02      	ldr	r6, [sp, #8]
900263a4:	fb0b fc0c 	mul.w	ip, fp, ip
900263a8:	fb0b f505 	mul.w	r5, fp, r5
900263ac:	8836      	ldrh	r6, [r6, #0]
900263ae:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900263b2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900263b6:	9501      	str	r5, [sp, #4]
900263b8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900263bc:	44dc      	add	ip, fp
900263be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900263c2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900263c6:	9503      	str	r5, [sp, #12]
900263c8:	9d01      	ldr	r5, [sp, #4]
900263ca:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900263ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900263d2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900263d6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900263da:	fb0a fc0c 	mul.w	ip, sl, ip
900263de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900263e2:	fb0a fa01 	mul.w	sl, sl, r1
900263e6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900263ea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900263ee:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900263f2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900263f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900263fa:	4465      	add	r5, ip
900263fc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026400:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026404:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026408:	fb09 fc0c 	mul.w	ip, r9, ip
9002640c:	0a2d      	lsrs	r5, r5, #8
9002640e:	fb09 f904 	mul.w	r9, r9, r4
90026412:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026416:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002641a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002641e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026422:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026426:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002642a:	437d      	muls	r5, r7
9002642c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026430:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026434:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026438:	4461      	add	r1, ip
9002643a:	fb08 f404 	mul.w	r4, r8, r4
9002643e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026442:	fb08 f802 	mul.w	r8, r8, r2
90026446:	0a09      	lsrs	r1, r1, #8
90026448:	0a22      	lsrs	r2, r4, #8
9002644a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002644e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026452:	fb07 f70a 	mul.w	r7, r7, sl
90026456:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002645a:	4414      	add	r4, r2
9002645c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026460:	0a24      	lsrs	r4, r4, #8
90026462:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026466:	9a03      	ldr	r2, [sp, #12]
90026468:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002646c:	fb02 5503 	mla	r5, r2, r3, r5
90026470:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026474:	fb04 540e 	mla	r4, r4, lr, r5
90026478:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002647c:	fb01 4100 	mla	r1, r1, r0, r4
90026480:	0a09      	lsrs	r1, r1, #8
90026482:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026486:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002648a:	fb03 7101 	mla	r1, r3, r1, r7
9002648e:	9b00      	ldr	r3, [sp, #0]
90026490:	fb0e 1e08 	mla	lr, lr, r8, r1
90026494:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90026498:	43da      	mvns	r2, r3
9002649a:	1233      	asrs	r3, r6, #8
9002649c:	fb00 e101 	mla	r1, r0, r1, lr
900264a0:	10f0      	asrs	r0, r6, #3
900264a2:	b2d2      	uxtb	r2, r2
900264a4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900264a8:	0a09      	lsrs	r1, r1, #8
900264aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900264ae:	00f6      	lsls	r6, r6, #3
900264b0:	4353      	muls	r3, r2
900264b2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900264b6:	4350      	muls	r0, r2
900264b8:	b2f6      	uxtb	r6, r6
900264ba:	4321      	orrs	r1, r4
900264bc:	4356      	muls	r6, r2
900264be:	1c5a      	adds	r2, r3, #1
900264c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900264c4:	0c0b      	lsrs	r3, r1, #16
900264c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900264ca:	1c42      	adds	r2, r0, #1
900264cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900264d0:	0a0a      	lsrs	r2, r1, #8
900264d2:	021b      	lsls	r3, r3, #8
900264d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900264d8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900264dc:	00d2      	lsls	r2, r2, #3
900264de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900264e2:	4313      	orrs	r3, r2
900264e4:	1c72      	adds	r2, r6, #1
900264e6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900264ea:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900264ee:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900264f2:	4319      	orrs	r1, r3
900264f4:	9b02      	ldr	r3, [sp, #8]
900264f6:	8019      	strh	r1, [r3, #0]
900264f8:	b005      	add	sp, #20
900264fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900264fe:	2500      	movs	r5, #0
90026500:	e6fe      	b.n	90026300 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026502:	2100      	movs	r1, #0
90026504:	460d      	mov	r5, r1
90026506:	e706      	b.n	90026316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026508:	2100      	movs	r1, #0
9002650a:	e704      	b.n	90026316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002650c:	4631      	mov	r1, r6
9002650e:	e702      	b.n	90026316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026510:	2400      	movs	r4, #0
90026512:	e713      	b.n	9002633c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026514:	2200      	movs	r2, #0
90026516:	4614      	mov	r4, r2
90026518:	e71a      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002651a:	4602      	mov	r2, r0
9002651c:	4604      	mov	r4, r0
9002651e:	e717      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026520:	2200      	movs	r2, #0
90026522:	e715      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026524:	4632      	mov	r2, r6
90026526:	e713      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026528 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002652c:	b09b      	sub	sp, #108	@ 0x6c
9002652e:	9218      	str	r2, [sp, #96]	@ 0x60
90026530:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90026532:	9019      	str	r0, [sp, #100]	@ 0x64
90026534:	9116      	str	r1, [sp, #88]	@ 0x58
90026536:	6850      	ldr	r0, [r2, #4]
90026538:	9307      	str	r3, [sp, #28]
9002653a:	6812      	ldr	r2, [r2, #0]
9002653c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90026540:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90026544:	fb00 1303 	mla	r3, r0, r3, r1
90026548:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002654c:	930a      	str	r3, [sp, #40]	@ 0x28
9002654e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026550:	681b      	ldr	r3, [r3, #0]
90026552:	930f      	str	r3, [sp, #60]	@ 0x3c
90026554:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026556:	2b00      	cmp	r3, #0
90026558:	dc03      	bgt.n	90026562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002655a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002655c:	2b00      	cmp	r3, #0
9002655e:	f340 8387 	ble.w	90026c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026562:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026564:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026568:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002656c:	1e48      	subs	r0, r1, #1
9002656e:	1e57      	subs	r7, r2, #1
90026570:	9b07      	ldr	r3, [sp, #28]
90026572:	2b00      	cmp	r3, #0
90026574:	f340 8166 	ble.w	90026844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026578:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002657c:	ea4f 4326 	mov.w	r3, r6, asr #16
90026580:	d406      	bmi.n	90026590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026582:	4584      	cmp	ip, r0
90026584:	da04      	bge.n	90026590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026586:	2b00      	cmp	r3, #0
90026588:	db02      	blt.n	90026590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002658a:	42bb      	cmp	r3, r7
9002658c:	f2c0 815b 	blt.w	90026846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026590:	f11c 0c01 	adds.w	ip, ip, #1
90026594:	f100 814b 	bmi.w	9002682e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026598:	4561      	cmp	r1, ip
9002659a:	f2c0 8148 	blt.w	9002682e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002659e:	3301      	adds	r3, #1
900265a0:	f100 8145 	bmi.w	9002682e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900265a4:	429a      	cmp	r2, r3
900265a6:	f2c0 8142 	blt.w	9002682e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900265aa:	9b07      	ldr	r3, [sp, #28]
900265ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900265ae:	9317      	str	r3, [sp, #92]	@ 0x5c
900265b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900265b2:	2b00      	cmp	r3, #0
900265b4:	f340 8165 	ble.w	90026882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900265b8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900265ba:	ea4f 4c26 	mov.w	ip, r6, asr #16
900265be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900265c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900265c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900265c8:	1422      	asrs	r2, r4, #16
900265ca:	f3c6 3003 	ubfx	r0, r6, #12, #4
900265ce:	689b      	ldr	r3, [r3, #8]
900265d0:	f100 81d5 	bmi.w	9002697e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900265d4:	f103 38ff 	add.w	r8, r3, #4294967295
900265d8:	4542      	cmp	r2, r8
900265da:	f280 81d0 	bge.w	9002697e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900265de:	f1bc 0f00 	cmp.w	ip, #0
900265e2:	f2c0 81cc 	blt.w	9002697e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900265e6:	f10e 38ff 	add.w	r8, lr, #4294967295
900265ea:	45c4      	cmp	ip, r8
900265ec:	f280 81c7 	bge.w	9002697e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900265f0:	b21b      	sxth	r3, r3
900265f2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900265f4:	fb0c 2203 	mla	r2, ip, r3, r2
900265f8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900265fc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026600:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026604:	2900      	cmp	r1, #0
90026606:	f000 8182 	beq.w	9002690e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002660a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002660e:	950b      	str	r5, [sp, #44]	@ 0x2c
90026610:	0e2d      	lsrs	r5, r5, #24
90026612:	9512      	str	r5, [sp, #72]	@ 0x48
90026614:	b180      	cbz	r0, 90026638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026616:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002661a:	3b01      	subs	r3, #1
9002661c:	009b      	lsls	r3, r3, #2
9002661e:	3304      	adds	r3, #4
90026620:	eb08 0c03 	add.w	ip, r8, r3
90026624:	f858 3003 	ldr.w	r3, [r8, r3]
90026628:	9308      	str	r3, [sp, #32]
9002662a:	0e1b      	lsrs	r3, r3, #24
9002662c:	9310      	str	r3, [sp, #64]	@ 0x40
9002662e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026632:	930c      	str	r3, [sp, #48]	@ 0x30
90026634:	0e1b      	lsrs	r3, r3, #24
90026636:	9313      	str	r3, [sp, #76]	@ 0x4c
90026638:	b289      	uxth	r1, r1
9002663a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002663c:	b280      	uxth	r0, r0
9002663e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026640:	fb01 f900 	mul.w	r9, r1, r0
90026644:	0109      	lsls	r1, r1, #4
90026646:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002664a:	eba1 0809 	sub.w	r8, r1, r9
9002664e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90026652:	b280      	uxth	r0, r0
90026654:	fa1f f888 	uxth.w	r8, r8
90026658:	1a09      	subs	r1, r1, r0
9002665a:	fb08 f303 	mul.w	r3, r8, r3
9002665e:	b289      	uxth	r1, r1
90026660:	fb01 330e 	mla	r3, r1, lr, r3
90026664:	fb00 3305 	mla	r3, r0, r5, r3
90026668:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002666a:	fb09 3305 	mla	r3, r9, r5, r3
9002666e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026672:	2b00      	cmp	r3, #0
90026674:	f000 80d2 	beq.w	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026678:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002667c:	d01b      	beq.n	900266b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002667e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026682:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026686:	fb0e fa0a 	mul.w	sl, lr, sl
9002668a:	fb0e fe02 	mul.w	lr, lr, r2
9002668e:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026692:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026696:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002669a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002669e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900266a2:	4452      	add	r2, sl
900266a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266a8:	0a12      	lsrs	r2, r2, #8
900266aa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900266ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900266b2:	ea42 020c 	orr.w	r2, r2, ip
900266b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900266b8:	2dff      	cmp	r5, #255	@ 0xff
900266ba:	d021      	beq.n	90026700 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900266bc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900266be:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900266c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900266c4:	fb05 fb0b 	mul.w	fp, r5, fp
900266c8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900266ca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900266ce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900266d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900266d4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900266d8:	fb05 fa0a 	mul.w	sl, r5, sl
900266dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900266e0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900266e4:	44de      	add	lr, fp
900266e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900266ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900266ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900266f6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900266fa:	ea4e 050a 	orr.w	r5, lr, sl
900266fe:	950b      	str	r5, [sp, #44]	@ 0x2c
90026700:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026702:	2dff      	cmp	r5, #255	@ 0xff
90026704:	d021      	beq.n	9002674a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90026706:	9d08      	ldr	r5, [sp, #32]
90026708:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002670c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002670e:	fb05 fb0b 	mul.w	fp, r5, fp
90026712:	9d08      	ldr	r5, [sp, #32]
90026714:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026718:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002671a:	fb05 fa0e 	mul.w	sl, r5, lr
9002671e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026722:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026726:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002672a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002672e:	44de      	add	lr, fp
90026730:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026738:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002673c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026740:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026744:	ea4e 050a 	orr.w	r5, lr, sl
90026748:	9508      	str	r5, [sp, #32]
9002674a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002674c:	2dff      	cmp	r5, #255	@ 0xff
9002674e:	d021      	beq.n	90026794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90026750:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026752:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026756:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026758:	fb05 fb0b 	mul.w	fp, r5, fp
9002675c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002675e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026762:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026764:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026768:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002676c:	fb05 fa0a 	mul.w	sl, r5, sl
90026770:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026774:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026778:	44de      	add	lr, fp
9002677a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002677e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026782:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026786:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002678a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002678e:	ea4e 050a 	orr.w	r5, lr, sl
90026792:	950c      	str	r5, [sp, #48]	@ 0x30
90026794:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026796:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002679a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002679e:	2bff      	cmp	r3, #255	@ 0xff
900267a0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900267a4:	9d08      	ldr	r5, [sp, #32]
900267a6:	fb08 fc0c 	mul.w	ip, r8, ip
900267aa:	fb01 cc0e 	mla	ip, r1, lr, ip
900267ae:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900267b2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900267b4:	fb00 cc0e 	mla	ip, r0, lr, ip
900267b8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900267bc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900267be:	fb09 cc0e 	mla	ip, r9, lr, ip
900267c2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900267c6:	fb08 f80e 	mul.w	r8, r8, lr
900267ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900267ce:	fb01 8202 	mla	r2, r1, r2, r8
900267d2:	9908      	ldr	r1, [sp, #32]
900267d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900267d8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900267dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
900267de:	fb00 220a 	mla	r2, r0, sl, r2
900267e2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900267e6:	fb09 2900 	mla	r9, r9, r0, r2
900267ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
900267ee:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900267f2:	ea4c 0c09 	orr.w	ip, ip, r9
900267f6:	ea4f 221c 	mov.w	r2, ip, lsr #8
900267fa:	f040 8091 	bne.w	90026920 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900267fe:	ea4f 135c 	mov.w	r3, ip, lsr #5
90026802:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90026806:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002680a:	f022 0207 	bic.w	r2, r2, #7
9002680e:	431a      	orrs	r2, r3
90026810:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90026814:	ea4c 0c02 	orr.w	ip, ip, r2
90026818:	f8a7 c000 	strh.w	ip, [r7]
9002681c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002681e:	3702      	adds	r7, #2
90026820:	441c      	add	r4, r3
90026822:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026824:	441e      	add	r6, r3
90026826:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026828:	3b01      	subs	r3, #1
9002682a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002682c:	e6c0      	b.n	900265b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002682e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026830:	441c      	add	r4, r3
90026832:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026834:	441e      	add	r6, r3
90026836:	9b07      	ldr	r3, [sp, #28]
90026838:	3b01      	subs	r3, #1
9002683a:	9307      	str	r3, [sp, #28]
9002683c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002683e:	3302      	adds	r3, #2
90026840:	930a      	str	r3, [sp, #40]	@ 0x28
90026842:	e695      	b.n	90026570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026844:	d024      	beq.n	90026890 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90026846:	9b07      	ldr	r3, [sp, #28]
90026848:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002684a:	3b01      	subs	r3, #1
9002684c:	fb00 4003 	mla	r0, r0, r3, r4
90026850:	1400      	asrs	r0, r0, #16
90026852:	f53f aeaa 	bmi.w	900265aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026856:	3901      	subs	r1, #1
90026858:	4288      	cmp	r0, r1
9002685a:	f6bf aea6 	bge.w	900265aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002685e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90026860:	fb01 6303 	mla	r3, r1, r3, r6
90026864:	141b      	asrs	r3, r3, #16
90026866:	f53f aea0 	bmi.w	900265aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002686a:	3a01      	subs	r2, #1
9002686c:	4293      	cmp	r3, r2
9002686e:	f6bf ae9c 	bge.w	900265aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026872:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026876:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002687a:	f1bb 0f00 	cmp.w	fp, #0
9002687e:	f300 809a 	bgt.w	900269b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026882:	9b07      	ldr	r3, [sp, #28]
90026884:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026888:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002688a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002688e:	930a      	str	r3, [sp, #40]	@ 0x28
90026890:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026892:	2b00      	cmp	r3, #0
90026894:	f340 81ec 	ble.w	90026c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026898:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002689c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002689e:	ee30 0a04 	vadd.f32	s0, s0, s8
900268a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900268a6:	eef0 6a62 	vmov.f32	s13, s5
900268aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900268ae:	ee31 1a05 	vadd.f32	s2, s2, s10
900268b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900268b6:	ee16 4a90 	vmov	r4, s13
900268ba:	eef0 6a43 	vmov.f32	s13, s6
900268be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900268c2:	ee16 6a90 	vmov	r6, s13
900268c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900268ca:	ee61 7a27 	vmul.f32	s15, s2, s15
900268ce:	ee77 2a62 	vsub.f32	s5, s14, s5
900268d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900268d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900268da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900268de:	ee12 2a90 	vmov	r2, s5
900268e2:	eef0 2a47 	vmov.f32	s5, s14
900268e6:	fb92 f3f3 	sdiv	r3, r2, r3
900268ea:	ee13 2a10 	vmov	r2, s6
900268ee:	9327      	str	r3, [sp, #156]	@ 0x9c
900268f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900268f2:	eeb0 3a67 	vmov.f32	s6, s15
900268f6:	fb92 f3f3 	sdiv	r3, r2, r3
900268fa:	9328      	str	r3, [sp, #160]	@ 0xa0
900268fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900268fe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90026900:	3b01      	subs	r3, #1
90026902:	9316      	str	r3, [sp, #88]	@ 0x58
90026904:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026906:	bf08      	it	eq
90026908:	4613      	moveq	r3, r2
9002690a:	9307      	str	r3, [sp, #28]
9002690c:	e622      	b.n	90026554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002690e:	2800      	cmp	r0, #0
90026910:	f43f ae92 	beq.w	90026638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026914:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026918:	9308      	str	r3, [sp, #32]
9002691a:	0e1b      	lsrs	r3, r3, #24
9002691c:	9310      	str	r3, [sp, #64]	@ 0x40
9002691e:	e68b      	b.n	90026638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026920:	8839      	ldrh	r1, [r7, #0]
90026922:	43db      	mvns	r3, r3
90026924:	4dd4      	ldr	r5, [pc, #848]	@ (90026c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026926:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002692a:	fa5f f883 	uxtb.w	r8, r3
9002692e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90026932:	10c8      	asrs	r0, r1, #3
90026934:	00cb      	lsls	r3, r1, #3
90026936:	fb0e fe08 	mul.w	lr, lr, r8
9002693a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002693e:	b2db      	uxtb	r3, r3
90026940:	f10e 0101 	add.w	r1, lr, #1
90026944:	fb00 f008 	mul.w	r0, r0, r8
90026948:	fb03 f308 	mul.w	r3, r3, r8
9002694c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90026950:	ea4f 411c 	mov.w	r1, ip, lsr #16
90026954:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90026958:	f100 0e01 	add.w	lr, r0, #1
9002695c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90026960:	b2c9      	uxtb	r1, r1
90026962:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026966:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002696a:	00d2      	lsls	r2, r2, #3
9002696c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026970:	430a      	orrs	r2, r1
90026972:	1c59      	adds	r1, r3, #1
90026974:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90026978:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002697c:	e748      	b.n	90026810 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002697e:	f112 0801 	adds.w	r8, r2, #1
90026982:	f53f af4b 	bmi.w	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026986:	4543      	cmp	r3, r8
90026988:	f6ff af48 	blt.w	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002698c:	f11c 0801 	adds.w	r8, ip, #1
90026990:	f53f af44 	bmi.w	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026994:	45c6      	cmp	lr, r8
90026996:	f6ff af41 	blt.w	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002699a:	b21b      	sxth	r3, r3
9002699c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900269a0:	fa0f f28e 	sxth.w	r2, lr
900269a4:	e9cd 1003 	strd	r1, r0, [sp, #12]
900269a8:	9200      	str	r2, [sp, #0]
900269aa:	4639      	mov	r1, r7
900269ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900269ae:	9819      	ldr	r0, [sp, #100]	@ 0x64
900269b0:	f7ff fc88 	bl	900262c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900269b4:	e732      	b.n	9002681c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900269b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900269b8:	1421      	asrs	r1, r4, #16
900269ba:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900269bc:	f3c4 3203 	ubfx	r2, r4, #12, #4
900269c0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900269c4:	1433      	asrs	r3, r6, #16
900269c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
900269ca:	fb07 1303 	mla	r3, r7, r3, r1
900269ce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900269d0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900269d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900269d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900269dc:	2a00      	cmp	r2, #0
900269de:	f000 8108 	beq.w	90026bf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900269e2:	684d      	ldr	r5, [r1, #4]
900269e4:	950d      	str	r5, [sp, #52]	@ 0x34
900269e6:	0e2d      	lsrs	r5, r5, #24
900269e8:	9514      	str	r5, [sp, #80]	@ 0x50
900269ea:	b178      	cbz	r0, 90026a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900269ec:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
900269f0:	3f01      	subs	r7, #1
900269f2:	00bf      	lsls	r7, r7, #2
900269f4:	3704      	adds	r7, #4
900269f6:	eb01 0e07 	add.w	lr, r1, r7
900269fa:	59c9      	ldr	r1, [r1, r7]
900269fc:	9109      	str	r1, [sp, #36]	@ 0x24
900269fe:	0e09      	lsrs	r1, r1, #24
90026a00:	9111      	str	r1, [sp, #68]	@ 0x44
90026a02:	f8de 1004 	ldr.w	r1, [lr, #4]
90026a06:	910e      	str	r1, [sp, #56]	@ 0x38
90026a08:	0e09      	lsrs	r1, r1, #24
90026a0a:	9115      	str	r1, [sp, #84]	@ 0x54
90026a0c:	b292      	uxth	r2, r2
90026a0e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a10:	b280      	uxth	r0, r0
90026a12:	fb02 f900 	mul.w	r9, r2, r0
90026a16:	0112      	lsls	r2, r2, #4
90026a18:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026a1c:	eba2 0e09 	sub.w	lr, r2, r9
90026a20:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90026a24:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026a26:	b280      	uxth	r0, r0
90026a28:	fa1f fe8e 	uxth.w	lr, lr
90026a2c:	1a09      	subs	r1, r1, r0
90026a2e:	fb0e f202 	mul.w	r2, lr, r2
90026a32:	b289      	uxth	r1, r1
90026a34:	fb01 220c 	mla	r2, r1, ip, r2
90026a38:	fb00 2205 	mla	r2, r0, r5, r2
90026a3c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026a3e:	fb09 2205 	mla	r2, r9, r5, r2
90026a42:	f3c2 2207 	ubfx	r2, r2, #8, #8
90026a46:	2a00      	cmp	r2, #0
90026a48:	f000 80ca 	beq.w	90026be0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90026a4c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026a50:	d019      	beq.n	90026a86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90026a52:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026a56:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026a5a:	fb0c fa0a 	mul.w	sl, ip, sl
90026a5e:	fb0c fc03 	mul.w	ip, ip, r3
90026a62:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026a66:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026a6a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90026a6e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026a72:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026a76:	4453      	add	r3, sl
90026a78:	0a3f      	lsrs	r7, r7, #8
90026a7a:	0a1b      	lsrs	r3, r3, #8
90026a7c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026a80:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026a84:	433b      	orrs	r3, r7
90026a86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026a88:	2dff      	cmp	r5, #255	@ 0xff
90026a8a:	d020      	beq.n	90026ace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90026a8c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026a8e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026a92:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026a94:	436f      	muls	r7, r5
90026a96:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026a98:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026a9c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026aa0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026aa2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026aa6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026aaa:	fb05 fa0a 	mul.w	sl, r5, sl
90026aae:	44bc      	add	ip, r7
90026ab0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026ab4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026ab8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026abc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026ac0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026ac4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ac8:	ea4c 050a 	orr.w	r5, ip, sl
90026acc:	950d      	str	r5, [sp, #52]	@ 0x34
90026ace:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026ad0:	2dff      	cmp	r5, #255	@ 0xff
90026ad2:	d020      	beq.n	90026b16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90026ad4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026ad6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026ada:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026adc:	436f      	muls	r7, r5
90026ade:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026ae0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026ae4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026ae6:	fb05 fa0c 	mul.w	sl, r5, ip
90026aea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026aee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026af2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026af6:	44bc      	add	ip, r7
90026af8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026afc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026b00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026b04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026b08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026b0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026b10:	ea4c 050a 	orr.w	r5, ip, sl
90026b14:	9509      	str	r5, [sp, #36]	@ 0x24
90026b16:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026b18:	2dff      	cmp	r5, #255	@ 0xff
90026b1a:	d020      	beq.n	90026b5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90026b1c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026b1e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026b22:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026b24:	436f      	muls	r7, r5
90026b26:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026b28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026b2c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026b30:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026b32:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026b36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026b3a:	fb05 fa0a 	mul.w	sl, r5, sl
90026b3e:	44bc      	add	ip, r7
90026b40:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026b44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026b48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026b4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026b54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026b58:	ea4c 050a 	orr.w	r5, ip, sl
90026b5c:	950e      	str	r5, [sp, #56]	@ 0x38
90026b5e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026b60:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90026b64:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026b68:	2aff      	cmp	r2, #255	@ 0xff
90026b6a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026b6e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026b70:	fb0e f707 	mul.w	r7, lr, r7
90026b74:	fb01 770c 	mla	r7, r1, ip, r7
90026b78:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026b7c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026b7e:	fb00 770c 	mla	r7, r0, ip, r7
90026b82:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026b86:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026b88:	fb09 770c 	mla	r7, r9, ip, r7
90026b8c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026b90:	fb0e fe0c 	mul.w	lr, lr, ip
90026b94:	ea4f 2717 	mov.w	r7, r7, lsr #8
90026b98:	fb01 e303 	mla	r3, r1, r3, lr
90026b9c:	9909      	ldr	r1, [sp, #36]	@ 0x24
90026b9e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026ba2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90026ba6:	990e      	ldr	r1, [sp, #56]	@ 0x38
90026ba8:	fb00 330a 	mla	r3, r0, sl, r3
90026bac:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90026bb0:	fb09 3c0c 	mla	ip, r9, ip, r3
90026bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026bb8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026bbc:	ea47 070c 	orr.w	r7, r7, ip
90026bc0:	ea4f 2317 	mov.w	r3, r7, lsr #8
90026bc4:	d11e      	bne.n	90026c04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90026bc6:	097a      	lsrs	r2, r7, #5
90026bc8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90026bcc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90026bd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026bd4:	f023 0307 	bic.w	r3, r3, #7
90026bd8:	4313      	orrs	r3, r2
90026bda:	431f      	orrs	r7, r3
90026bdc:	f8a8 7000 	strh.w	r7, [r8]
90026be0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026be2:	f108 0802 	add.w	r8, r8, #2
90026be6:	f10b 3bff 	add.w	fp, fp, #4294967295
90026bea:	441c      	add	r4, r3
90026bec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026bee:	441e      	add	r6, r3
90026bf0:	e643      	b.n	9002687a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90026bf2:	2800      	cmp	r0, #0
90026bf4:	f43f af0a 	beq.w	90026a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026bf8:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90026bfc:	9109      	str	r1, [sp, #36]	@ 0x24
90026bfe:	0e09      	lsrs	r1, r1, #24
90026c00:	9111      	str	r1, [sp, #68]	@ 0x44
90026c02:	e703      	b.n	90026a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026c04:	f8b8 1000 	ldrh.w	r1, [r8]
90026c08:	43d2      	mvns	r2, r2
90026c0a:	ea4f 2c21 	mov.w	ip, r1, asr #8
90026c0e:	fa5f fe82 	uxtb.w	lr, r2
90026c12:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90026c16:	10c8      	asrs	r0, r1, #3
90026c18:	00ca      	lsls	r2, r1, #3
90026c1a:	fb0c fc0e 	mul.w	ip, ip, lr
90026c1e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026c22:	b2d2      	uxtb	r2, r2
90026c24:	f10c 0101 	add.w	r1, ip, #1
90026c28:	fb00 f00e 	mul.w	r0, r0, lr
90026c2c:	fb02 f20e 	mul.w	r2, r2, lr
90026c30:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026c34:	0c39      	lsrs	r1, r7, #16
90026c36:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026c3a:	490f      	ldr	r1, [pc, #60]	@ (90026c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026c3c:	fa5f fc8c 	uxtb.w	ip, ip
90026c40:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90026c44:	1c41      	adds	r1, r0, #1
90026c46:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026c4a:	1c51      	adds	r1, r2, #1
90026c4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90026c50:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026c54:	00c0      	lsls	r0, r0, #3
90026c56:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90026c5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c5e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90026c62:	ea4c 0c00 	orr.w	ip, ip, r0
90026c66:	ea47 0c0c 	orr.w	ip, r7, ip
90026c6a:	f8a8 c000 	strh.w	ip, [r8]
90026c6e:	e7b7      	b.n	90026be0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90026c70:	b01b      	add	sp, #108	@ 0x6c
90026c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026c76:	bf00      	nop
90026c78:	fffff800 	.word	0xfffff800

90026c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90026c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026c80:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90026c84:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90026c88:	2d00      	cmp	r5, #0
90026c8a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90026c8e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90026c92:	fb05 0e03 	mla	lr, r5, r3, r0
90026c96:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90026c9a:	f2c0 808c 	blt.w	90026db6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90026c9e:	45a9      	cmp	r9, r5
90026ca0:	f340 8089 	ble.w	90026db6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90026ca4:	2800      	cmp	r0, #0
90026ca6:	f2c0 8084 	blt.w	90026db2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026caa:	4580      	cmp	r8, r0
90026cac:	f340 8081 	ble.w	90026db2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026cb0:	ea4f 045e 	mov.w	r4, lr, lsr #1
90026cb4:	f01e 0f01 	tst.w	lr, #1
90026cb8:	5d16      	ldrb	r6, [r2, r4]
90026cba:	bf0c      	ite	eq
90026cbc:	f006 060f 	andeq.w	r6, r6, #15
90026cc0:	1136      	asrne	r6, r6, #4
90026cc2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90026cc6:	b2f6      	uxtb	r6, r6
90026cc8:	1c44      	adds	r4, r0, #1
90026cca:	d477      	bmi.n	90026dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026ccc:	45a0      	cmp	r8, r4
90026cce:	dd75      	ble.n	90026dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026cd0:	2f00      	cmp	r7, #0
90026cd2:	d075      	beq.n	90026dc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90026cd4:	f10e 0a01 	add.w	sl, lr, #1
90026cd8:	ea4f 045a 	mov.w	r4, sl, lsr #1
90026cdc:	f01a 0f01 	tst.w	sl, #1
90026ce0:	5d14      	ldrb	r4, [r2, r4]
90026ce2:	bf0c      	ite	eq
90026ce4:	f004 040f 	andeq.w	r4, r4, #15
90026ce8:	1124      	asrne	r4, r4, #4
90026cea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90026cee:	b2e4      	uxtb	r4, r4
90026cf0:	3501      	adds	r5, #1
90026cf2:	d469      	bmi.n	90026dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90026cf4:	45a9      	cmp	r9, r5
90026cf6:	dd67      	ble.n	90026dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90026cf8:	f1bc 0f00 	cmp.w	ip, #0
90026cfc:	d067      	beq.n	90026dce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90026cfe:	2800      	cmp	r0, #0
90026d00:	db60      	blt.n	90026dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90026d02:	4580      	cmp	r8, r0
90026d04:	dd5e      	ble.n	90026dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90026d06:	eb03 090e 	add.w	r9, r3, lr
90026d0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90026d0e:	f019 0f01 	tst.w	r9, #1
90026d12:	5d55      	ldrb	r5, [r2, r5]
90026d14:	bf0c      	ite	eq
90026d16:	f005 050f 	andeq.w	r5, r5, #15
90026d1a:	112d      	asrne	r5, r5, #4
90026d1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026d20:	b2ed      	uxtb	r5, r5
90026d22:	3001      	adds	r0, #1
90026d24:	d456      	bmi.n	90026dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90026d26:	4580      	cmp	r8, r0
90026d28:	dd54      	ble.n	90026dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90026d2a:	2f00      	cmp	r7, #0
90026d2c:	d054      	beq.n	90026dd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90026d2e:	3301      	adds	r3, #1
90026d30:	449e      	add	lr, r3
90026d32:	ea4f 035e 	mov.w	r3, lr, lsr #1
90026d36:	f01e 0f01 	tst.w	lr, #1
90026d3a:	5cd0      	ldrb	r0, [r2, r3]
90026d3c:	bf0c      	ite	eq
90026d3e:	f000 000f 	andeq.w	r0, r0, #15
90026d42:	1100      	asrne	r0, r0, #4
90026d44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026d48:	b2c3      	uxtb	r3, r0
90026d4a:	b2ba      	uxth	r2, r7
90026d4c:	fa1f fc8c 	uxth.w	ip, ip
90026d50:	fb02 f00c 	mul.w	r0, r2, ip
90026d54:	0112      	lsls	r2, r2, #4
90026d56:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90026d5a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90026d5e:	1a12      	subs	r2, r2, r0
90026d60:	fa1f fc8c 	uxth.w	ip, ip
90026d64:	b292      	uxth	r2, r2
90026d66:	eba7 070c 	sub.w	r7, r7, ip
90026d6a:	4362      	muls	r2, r4
90026d6c:	b2bf      	uxth	r7, r7
90026d6e:	fb06 2207 	mla	r2, r6, r7, r2
90026d72:	fb0c 2505 	mla	r5, ip, r5, r2
90026d76:	fb00 5303 	mla	r3, r0, r3, r5
90026d7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026d7e:	b1b3      	cbz	r3, 90026dae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90026d80:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90026d84:	435a      	muls	r2, r3
90026d86:	1c53      	adds	r3, r2, #1
90026d88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026d8c:	4a2d      	ldr	r2, [pc, #180]	@ (90026e44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90026d8e:	121b      	asrs	r3, r3, #8
90026d90:	6812      	ldr	r2, [r2, #0]
90026d92:	2bff      	cmp	r3, #255	@ 0xff
90026d94:	ea4f 2612 	mov.w	r6, r2, lsr #8
90026d98:	d120      	bne.n	90026ddc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90026d9a:	0950      	lsrs	r0, r2, #5
90026d9c:	4b2a      	ldr	r3, [pc, #168]	@ (90026e48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90026d9e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026da2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026da6:	4033      	ands	r3, r6
90026da8:	4318      	orrs	r0, r3
90026daa:	4302      	orrs	r2, r0
90026dac:	800a      	strh	r2, [r1, #0]
90026dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026db2:	2600      	movs	r6, #0
90026db4:	e788      	b.n	90026cc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90026db6:	2400      	movs	r4, #0
90026db8:	4626      	mov	r6, r4
90026dba:	e799      	b.n	90026cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026dbc:	2400      	movs	r4, #0
90026dbe:	e797      	b.n	90026cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026dc0:	463c      	mov	r4, r7
90026dc2:	e795      	b.n	90026cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026dc4:	2500      	movs	r5, #0
90026dc6:	e7ac      	b.n	90026d22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90026dc8:	2300      	movs	r3, #0
90026dca:	461d      	mov	r5, r3
90026dcc:	e7bd      	b.n	90026d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026dce:	4663      	mov	r3, ip
90026dd0:	4665      	mov	r5, ip
90026dd2:	e7ba      	b.n	90026d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026dd4:	2300      	movs	r3, #0
90026dd6:	e7b8      	b.n	90026d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026dd8:	463b      	mov	r3, r7
90026dda:	e7b6      	b.n	90026d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026ddc:	880d      	ldrh	r5, [r1, #0]
90026dde:	b29f      	uxth	r7, r3
90026de0:	f3c2 4007 	ubfx	r0, r2, #16, #8
90026de4:	43db      	mvns	r3, r3
90026de6:	122c      	asrs	r4, r5, #8
90026de8:	fb10 f007 	smulbb	r0, r0, r7
90026dec:	b2db      	uxtb	r3, r3
90026dee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026df2:	b2f6      	uxtb	r6, r6
90026df4:	b2d2      	uxtb	r2, r2
90026df6:	fb04 0403 	mla	r4, r4, r3, r0
90026dfa:	10e8      	asrs	r0, r5, #3
90026dfc:	fb12 f207 	smulbb	r2, r2, r7
90026e00:	00ed      	lsls	r5, r5, #3
90026e02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026e06:	b2a4      	uxth	r4, r4
90026e08:	fb16 f607 	smulbb	r6, r6, r7
90026e0c:	b2ed      	uxtb	r5, r5
90026e0e:	fb00 6603 	mla	r6, r0, r3, r6
90026e12:	fb05 2303 	mla	r3, r5, r3, r2
90026e16:	b2b0      	uxth	r0, r6
90026e18:	b29a      	uxth	r2, r3
90026e1a:	1c63      	adds	r3, r4, #1
90026e1c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90026e20:	1c53      	adds	r3, r2, #1
90026e22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026e26:	1c42      	adds	r2, r0, #1
90026e28:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90026e2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026e30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026e34:	0940      	lsrs	r0, r0, #5
90026e36:	4323      	orrs	r3, r4
90026e38:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026e3c:	4303      	orrs	r3, r0
90026e3e:	800b      	strh	r3, [r1, #0]
90026e40:	e7b5      	b.n	90026dae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90026e42:	bf00      	nop
90026e44:	2402199c 	.word	0x2402199c
90026e48:	00fff800 	.word	0x00fff800

90026e4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026e50:	b097      	sub	sp, #92	@ 0x5c
90026e52:	9214      	str	r2, [sp, #80]	@ 0x50
90026e54:	9309      	str	r3, [sp, #36]	@ 0x24
90026e56:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026e58:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90026e5c:	9015      	str	r0, [sp, #84]	@ 0x54
90026e5e:	910d      	str	r1, [sp, #52]	@ 0x34
90026e60:	6850      	ldr	r0, [r2, #4]
90026e62:	930f      	str	r3, [sp, #60]	@ 0x3c
90026e64:	6812      	ldr	r2, [r2, #0]
90026e66:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90026e6a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90026e6e:	fb00 1303 	mla	r3, r0, r3, r1
90026e72:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90026e76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026e78:	689b      	ldr	r3, [r3, #8]
90026e7a:	3301      	adds	r3, #1
90026e7c:	f023 0301 	bic.w	r3, r3, #1
90026e80:	930a      	str	r3, [sp, #40]	@ 0x28
90026e82:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026e84:	681f      	ldr	r7, [r3, #0]
90026e86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026e88:	2b00      	cmp	r3, #0
90026e8a:	dc03      	bgt.n	90026e94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026e8c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90026e8e:	2b00      	cmp	r3, #0
90026e90:	f340 8289 	ble.w	900273a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90026e94:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026e96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026e9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026e9e:	1e48      	subs	r0, r1, #1
90026ea0:	f102 3cff 	add.w	ip, r2, #4294967295
90026ea4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026ea6:	2b00      	cmp	r3, #0
90026ea8:	f340 80c5 	ble.w	90027036 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90026eac:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026eb0:	ea4f 4326 	mov.w	r3, r6, asr #16
90026eb4:	d406      	bmi.n	90026ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026eb6:	4586      	cmp	lr, r0
90026eb8:	da04      	bge.n	90026ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026eba:	2b00      	cmp	r3, #0
90026ebc:	db02      	blt.n	90026ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026ebe:	4563      	cmp	r3, ip
90026ec0:	f2c0 80ba 	blt.w	90027038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90026ec4:	f11e 0e01 	adds.w	lr, lr, #1
90026ec8:	f100 80ab 	bmi.w	90027022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026ecc:	4571      	cmp	r1, lr
90026ece:	f2c0 80a8 	blt.w	90027022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026ed2:	3301      	adds	r3, #1
90026ed4:	f100 80a5 	bmi.w	90027022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026ed8:	429a      	cmp	r2, r3
90026eda:	f2c0 80a2 	blt.w	90027022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026ede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026ee0:	46c8      	mov	r8, r9
90026ee2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90026ee6:	930e      	str	r3, [sp, #56]	@ 0x38
90026ee8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026eea:	2b00      	cmp	r3, #0
90026eec:	f340 80c4 	ble.w	90027078 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90026ef0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026ef2:	1430      	asrs	r0, r6, #16
90026ef4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026ef8:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026efc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026f00:	1423      	asrs	r3, r4, #16
90026f02:	f100 814f 	bmi.w	900271a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026f06:	f10c 3bff 	add.w	fp, ip, #4294967295
90026f0a:	455b      	cmp	r3, fp
90026f0c:	f280 814a 	bge.w	900271a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026f10:	2800      	cmp	r0, #0
90026f12:	f2c0 8147 	blt.w	900271a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026f16:	f10e 3bff 	add.w	fp, lr, #4294967295
90026f1a:	4558      	cmp	r0, fp
90026f1c:	f280 8142 	bge.w	900271a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026f20:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90026f22:	fb00 3305 	mla	r3, r0, r5, r3
90026f26:	0858      	lsrs	r0, r3, #1
90026f28:	07dd      	lsls	r5, r3, #31
90026f2a:	f817 c000 	ldrb.w	ip, [r7, r0]
90026f2e:	bf54      	ite	pl
90026f30:	f00c 0c0f 	andpl.w	ip, ip, #15
90026f34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026f38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026f3c:	fa5f fc8c 	uxtb.w	ip, ip
90026f40:	2a00      	cmp	r2, #0
90026f42:	f000 80dd 	beq.w	90027100 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90026f46:	1c58      	adds	r0, r3, #1
90026f48:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026f4c:	07c0      	lsls	r0, r0, #31
90026f4e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90026f52:	bf54      	ite	pl
90026f54:	f00e 0e0f 	andpl.w	lr, lr, #15
90026f58:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026f5c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90026f60:	fa5f f08e 	uxtb.w	r0, lr
90026f64:	9010      	str	r0, [sp, #64]	@ 0x40
90026f66:	b1d9      	cbz	r1, 90026fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90026f68:	4453      	add	r3, sl
90026f6a:	0858      	lsrs	r0, r3, #1
90026f6c:	07dd      	lsls	r5, r3, #31
90026f6e:	f103 0301 	add.w	r3, r3, #1
90026f72:	5c38      	ldrb	r0, [r7, r0]
90026f74:	bf54      	ite	pl
90026f76:	f000 000f 	andpl.w	r0, r0, #15
90026f7a:	1100      	asrmi	r0, r0, #4
90026f7c:	07dd      	lsls	r5, r3, #31
90026f7e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026f82:	b2c0      	uxtb	r0, r0
90026f84:	900b      	str	r0, [sp, #44]	@ 0x2c
90026f86:	ea4f 0053 	mov.w	r0, r3, lsr #1
90026f8a:	f817 e000 	ldrb.w	lr, [r7, r0]
90026f8e:	bf54      	ite	pl
90026f90:	f00e 030f 	andpl.w	r3, lr, #15
90026f94:	ea4f 132e 	movmi.w	r3, lr, asr #4
90026f98:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026f9c:	b2db      	uxtb	r3, r3
90026f9e:	9311      	str	r3, [sp, #68]	@ 0x44
90026fa0:	b292      	uxth	r2, r2
90026fa2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026fa4:	b289      	uxth	r1, r1
90026fa6:	fb02 f301 	mul.w	r3, r2, r1
90026faa:	0112      	lsls	r2, r2, #4
90026fac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026fb0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90026fb4:	1ad2      	subs	r2, r2, r3
90026fb6:	b289      	uxth	r1, r1
90026fb8:	b292      	uxth	r2, r2
90026fba:	1a40      	subs	r0, r0, r1
90026fbc:	436a      	muls	r2, r5
90026fbe:	b280      	uxth	r0, r0
90026fc0:	fb0c 2c00 	mla	ip, ip, r0, r2
90026fc4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026fc6:	fb01 c102 	mla	r1, r1, r2, ip
90026fca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90026fcc:	fb03 1302 	mla	r3, r3, r2, r1
90026fd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026fd4:	b1db      	cbz	r3, 9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026fd6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026fd8:	4353      	muls	r3, r2
90026fda:	1c5a      	adds	r2, r3, #1
90026fdc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026fe0:	4ac6      	ldr	r2, [pc, #792]	@ (900272fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026fe2:	121b      	asrs	r3, r3, #8
90026fe4:	6812      	ldr	r2, [r2, #0]
90026fe6:	2bff      	cmp	r3, #255	@ 0xff
90026fe8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90026fec:	f040 8099 	bne.w	90027122 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90026ff0:	0953      	lsrs	r3, r2, #5
90026ff2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90026ff6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026ffa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026ffe:	f02c 0c07 	bic.w	ip, ip, #7
90027002:	ea43 0c0c 	orr.w	ip, r3, ip
90027006:	ea4c 0202 	orr.w	r2, ip, r2
9002700a:	f8a8 2000 	strh.w	r2, [r8]
9002700e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027010:	f108 0802 	add.w	r8, r8, #2
90027014:	441c      	add	r4, r3
90027016:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027018:	441e      	add	r6, r3
9002701a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002701c:	3b01      	subs	r3, #1
9002701e:	930e      	str	r3, [sp, #56]	@ 0x38
90027020:	e762      	b.n	90026ee8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90027022:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027024:	f109 0902 	add.w	r9, r9, #2
90027028:	441c      	add	r4, r3
9002702a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002702c:	441e      	add	r6, r3
9002702e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027030:	3b01      	subs	r3, #1
90027032:	9309      	str	r3, [sp, #36]	@ 0x24
90027034:	e736      	b.n	90026ea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027036:	d024      	beq.n	90027082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90027038:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002703a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002703c:	3b01      	subs	r3, #1
9002703e:	fb00 4003 	mla	r0, r0, r3, r4
90027042:	1400      	asrs	r0, r0, #16
90027044:	f53f af4b 	bmi.w	90026ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027048:	3901      	subs	r1, #1
9002704a:	4288      	cmp	r0, r1
9002704c:	f6bf af47 	bge.w	90026ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027050:	9924      	ldr	r1, [sp, #144]	@ 0x90
90027052:	fb01 6303 	mla	r3, r1, r3, r6
90027056:	141b      	asrs	r3, r3, #16
90027058:	f53f af41 	bmi.w	90026ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002705c:	3a01      	subs	r2, #1
9002705e:	4293      	cmp	r3, r2
90027060:	f6bf af3d 	bge.w	90026ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027064:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90027068:	46c8      	mov	r8, r9
9002706a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9002706e:	930e      	str	r3, [sp, #56]	@ 0x38
90027070:	f1bb 0f00 	cmp.w	fp, #0
90027074:	f300 80b7 	bgt.w	900271e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027078:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002707a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002707e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027082:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027084:	2b00      	cmp	r3, #0
90027086:	f340 818e 	ble.w	900273a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002708a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002708e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027090:	ee30 0a04 	vadd.f32	s0, s0, s8
90027094:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027098:	eef0 6a62 	vmov.f32	s13, s5
9002709c:	eec7 7a00 	vdiv.f32	s15, s14, s0
900270a0:	ee31 1a05 	vadd.f32	s2, s2, s10
900270a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900270a8:	ee16 4a90 	vmov	r4, s13
900270ac:	eef0 6a43 	vmov.f32	s13, s6
900270b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900270b4:	ee16 6a90 	vmov	r6, s13
900270b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900270bc:	ee61 7a27 	vmul.f32	s15, s2, s15
900270c0:	ee77 2a62 	vsub.f32	s5, s14, s5
900270c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900270c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900270cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900270d0:	ee12 2a90 	vmov	r2, s5
900270d4:	eef0 2a47 	vmov.f32	s5, s14
900270d8:	fb92 f3f3 	sdiv	r3, r2, r3
900270dc:	ee13 2a10 	vmov	r2, s6
900270e0:	9323      	str	r3, [sp, #140]	@ 0x8c
900270e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900270e4:	eeb0 3a67 	vmov.f32	s6, s15
900270e8:	fb92 f3f3 	sdiv	r3, r2, r3
900270ec:	9324      	str	r3, [sp, #144]	@ 0x90
900270ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900270f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900270f2:	3b01      	subs	r3, #1
900270f4:	930d      	str	r3, [sp, #52]	@ 0x34
900270f6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900270f8:	bf08      	it	eq
900270fa:	4613      	moveq	r3, r2
900270fc:	9309      	str	r3, [sp, #36]	@ 0x24
900270fe:	e6c2      	b.n	90026e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027100:	2900      	cmp	r1, #0
90027102:	f43f af4d 	beq.w	90026fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027106:	eb0a 0003 	add.w	r0, sl, r3
9002710a:	0843      	lsrs	r3, r0, #1
9002710c:	07c0      	lsls	r0, r0, #31
9002710e:	5cfb      	ldrb	r3, [r7, r3]
90027110:	bf54      	ite	pl
90027112:	f003 030f 	andpl.w	r3, r3, #15
90027116:	111b      	asrmi	r3, r3, #4
90027118:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002711c:	b2db      	uxtb	r3, r3
9002711e:	930b      	str	r3, [sp, #44]	@ 0x2c
90027120:	e73e      	b.n	90026fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027122:	f8b8 e000 	ldrh.w	lr, [r8]
90027126:	fa1f fb83 	uxth.w	fp, r3
9002712a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002712e:	43db      	mvns	r3, r3
90027130:	ea4f 202e 	mov.w	r0, lr, asr #8
90027134:	fb11 f10b 	smulbb	r1, r1, fp
90027138:	b2db      	uxtb	r3, r3
9002713a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002713e:	fa5f fc8c 	uxtb.w	ip, ip
90027142:	b2d2      	uxtb	r2, r2
90027144:	fb00 1003 	mla	r0, r0, r3, r1
90027148:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002714c:	fb1c fc0b 	smulbb	ip, ip, fp
90027150:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027154:	b280      	uxth	r0, r0
90027156:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002715a:	fb12 fb0b 	smulbb	fp, r2, fp
9002715e:	fa5f fe8e 	uxtb.w	lr, lr
90027162:	fb01 cc03 	mla	ip, r1, r3, ip
90027166:	fb0e bb03 	mla	fp, lr, r3, fp
9002716a:	1c43      	adds	r3, r0, #1
9002716c:	fa1f fc8c 	uxth.w	ip, ip
90027170:	fa1f fb8b 	uxth.w	fp, fp
90027174:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027178:	f10c 0101 	add.w	r1, ip, #1
9002717c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90027180:	f10b 0001 	add.w	r0, fp, #1
90027184:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027188:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9002718c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027190:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027194:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027198:	4318      	orrs	r0, r3
9002719a:	ea40 000c 	orr.w	r0, r0, ip
9002719e:	f8a8 0000 	strh.w	r0, [r8]
900271a2:	e734      	b.n	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271a4:	f113 0b01 	adds.w	fp, r3, #1
900271a8:	f53f af31 	bmi.w	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271ac:	45dc      	cmp	ip, fp
900271ae:	f6ff af2e 	blt.w	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271b2:	f110 0b01 	adds.w	fp, r0, #1
900271b6:	f53f af2a 	bmi.w	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271ba:	45de      	cmp	lr, fp
900271bc:	f6ff af27 	blt.w	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271c0:	9302      	str	r3, [sp, #8]
900271c2:	fa0f f38e 	sxth.w	r3, lr
900271c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900271c8:	9301      	str	r3, [sp, #4]
900271ca:	fa0f f38c 	sxth.w	r3, ip
900271ce:	e9cd 0203 	strd	r0, r2, [sp, #12]
900271d2:	e9cd 1505 	strd	r1, r5, [sp, #20]
900271d6:	9300      	str	r3, [sp, #0]
900271d8:	463a      	mov	r2, r7
900271da:	4653      	mov	r3, sl
900271dc:	4641      	mov	r1, r8
900271de:	9815      	ldr	r0, [sp, #84]	@ 0x54
900271e0:	f7ff fd4c 	bl	90026c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900271e4:	e713      	b.n	9002700e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900271e6:	1422      	asrs	r2, r4, #16
900271e8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900271ea:	1433      	asrs	r3, r6, #16
900271ec:	f3c4 3103 	ubfx	r1, r4, #12, #4
900271f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
900271f4:	fb05 2303 	mla	r3, r5, r3, r2
900271f8:	085a      	lsrs	r2, r3, #1
900271fa:	07dd      	lsls	r5, r3, #31
900271fc:	5cba      	ldrb	r2, [r7, r2]
900271fe:	bf54      	ite	pl
90027200:	f002 020f 	andpl.w	r2, r2, #15
90027204:	1112      	asrmi	r2, r2, #4
90027206:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002720a:	b2d2      	uxtb	r2, r2
9002720c:	2900      	cmp	r1, #0
9002720e:	d077      	beq.n	90027300 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027210:	f103 0e01 	add.w	lr, r3, #1
90027214:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027218:	f01e 0f01 	tst.w	lr, #1
9002721c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027220:	bf0c      	ite	eq
90027222:	f00c 0c0f 	andeq.w	ip, ip, #15
90027226:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002722a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002722e:	fa5f f58c 	uxtb.w	r5, ip
90027232:	9512      	str	r5, [sp, #72]	@ 0x48
90027234:	b308      	cbz	r0, 9002727a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027236:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027238:	442b      	add	r3, r5
9002723a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002723e:	07dd      	lsls	r5, r3, #31
90027240:	f103 0301 	add.w	r3, r3, #1
90027244:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027248:	bf54      	ite	pl
9002724a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002724e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027252:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027256:	fa5f f58c 	uxtb.w	r5, ip
9002725a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002725e:	950c      	str	r5, [sp, #48]	@ 0x30
90027260:	07dd      	lsls	r5, r3, #31
90027262:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027266:	bf54      	ite	pl
90027268:	f00c 0c0f 	andpl.w	ip, ip, #15
9002726c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027270:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027274:	fa5f f38c 	uxtb.w	r3, ip
90027278:	9313      	str	r3, [sp, #76]	@ 0x4c
9002727a:	b289      	uxth	r1, r1
9002727c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002727e:	b280      	uxth	r0, r0
90027280:	fb01 f300 	mul.w	r3, r1, r0
90027284:	0109      	lsls	r1, r1, #4
90027286:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002728a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
9002728e:	1ac9      	subs	r1, r1, r3
90027290:	b280      	uxth	r0, r0
90027292:	b289      	uxth	r1, r1
90027294:	ebac 0c00 	sub.w	ip, ip, r0
90027298:	4369      	muls	r1, r5
9002729a:	fa1f fc8c 	uxth.w	ip, ip
9002729e:	fb02 120c 	mla	r2, r2, ip, r1
900272a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900272a4:	fb00 2001 	mla	r0, r0, r1, r2
900272a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900272aa:	fb03 0302 	mla	r3, r3, r2, r0
900272ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
900272b2:	b1d3      	cbz	r3, 900272ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900272b4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900272b6:	4353      	muls	r3, r2
900272b8:	1c5a      	adds	r2, r3, #1
900272ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900272be:	4a0f      	ldr	r2, [pc, #60]	@ (900272fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900272c0:	121b      	asrs	r3, r3, #8
900272c2:	6812      	ldr	r2, [r2, #0]
900272c4:	2bff      	cmp	r3, #255	@ 0xff
900272c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900272ca:	d12d      	bne.n	90027328 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900272cc:	0953      	lsrs	r3, r2, #5
900272ce:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900272d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900272d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900272da:	f02c 0c07 	bic.w	ip, ip, #7
900272de:	ea43 0c0c 	orr.w	ip, r3, ip
900272e2:	ea4c 0202 	orr.w	r2, ip, r2
900272e6:	f8a8 2000 	strh.w	r2, [r8]
900272ea:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900272ec:	f108 0802 	add.w	r8, r8, #2
900272f0:	f10b 3bff 	add.w	fp, fp, #4294967295
900272f4:	441c      	add	r4, r3
900272f6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900272f8:	441e      	add	r6, r3
900272fa:	e6b9      	b.n	90027070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900272fc:	2402199c 	.word	0x2402199c
90027300:	2800      	cmp	r0, #0
90027302:	d0ba      	beq.n	9002727a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027304:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027306:	442b      	add	r3, r5
90027308:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002730c:	07db      	lsls	r3, r3, #31
9002730e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027312:	bf54      	ite	pl
90027314:	f00c 0c0f 	andpl.w	ip, ip, #15
90027318:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002731c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027320:	fa5f f38c 	uxtb.w	r3, ip
90027324:	930c      	str	r3, [sp, #48]	@ 0x30
90027326:	e7a8      	b.n	9002727a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027328:	f8b8 e000 	ldrh.w	lr, [r8]
9002732c:	fa1f fa83 	uxth.w	sl, r3
90027330:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027334:	43db      	mvns	r3, r3
90027336:	ea4f 202e 	mov.w	r0, lr, asr #8
9002733a:	fb11 f10a 	smulbb	r1, r1, sl
9002733e:	b2db      	uxtb	r3, r3
90027340:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027344:	b2d2      	uxtb	r2, r2
90027346:	fa5f fc8c 	uxtb.w	ip, ip
9002734a:	fb00 1003 	mla	r0, r0, r3, r1
9002734e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027352:	fb12 f20a 	smulbb	r2, r2, sl
90027356:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002735a:	b280      	uxth	r0, r0
9002735c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027360:	fb1c fc0a 	smulbb	ip, ip, sl
90027364:	fa5f fe8e 	uxtb.w	lr, lr
90027368:	fb0e 2203 	mla	r2, lr, r3, r2
9002736c:	fb01 cc03 	mla	ip, r1, r3, ip
90027370:	1c43      	adds	r3, r0, #1
90027372:	b292      	uxth	r2, r2
90027374:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027378:	1c51      	adds	r1, r2, #1
9002737a:	fa1f fc8c 	uxth.w	ip, ip
9002737e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90027382:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027386:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002738a:	4308      	orrs	r0, r1
9002738c:	f10c 0101 	add.w	r1, ip, #1
90027390:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027394:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027398:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002739c:	ea40 000c 	orr.w	r0, r0, ip
900273a0:	f8a8 0000 	strh.w	r0, [r8]
900273a4:	e7a1      	b.n	900272ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900273a6:	b017      	add	sp, #92	@ 0x5c
900273a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900273ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900273ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900273b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900273b4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900273b8:	2d00      	cmp	r5, #0
900273ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900273be:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900273c2:	fb05 0e03 	mla	lr, r5, r3, r0
900273c6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900273ca:	f2c0 80b0 	blt.w	9002752e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900273ce:	45a9      	cmp	r9, r5
900273d0:	f340 80ad 	ble.w	9002752e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900273d4:	2800      	cmp	r0, #0
900273d6:	f2c0 80a8 	blt.w	9002752a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900273da:	4580      	cmp	r8, r0
900273dc:	f340 80a5 	ble.w	9002752a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900273e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900273e4:	f01e 0f01 	tst.w	lr, #1
900273e8:	5d16      	ldrb	r6, [r2, r4]
900273ea:	bf0c      	ite	eq
900273ec:	f006 060f 	andeq.w	r6, r6, #15
900273f0:	1136      	asrne	r6, r6, #4
900273f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900273f6:	b2f6      	uxtb	r6, r6
900273f8:	1c44      	adds	r4, r0, #1
900273fa:	f100 809b 	bmi.w	90027534 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900273fe:	45a0      	cmp	r8, r4
90027400:	f340 8098 	ble.w	90027534 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027404:	2f00      	cmp	r7, #0
90027406:	f000 8097 	beq.w	90027538 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002740a:	f10e 0a01 	add.w	sl, lr, #1
9002740e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027412:	f01a 0f01 	tst.w	sl, #1
90027416:	5d14      	ldrb	r4, [r2, r4]
90027418:	bf0c      	ite	eq
9002741a:	f004 040f 	andeq.w	r4, r4, #15
9002741e:	1124      	asrne	r4, r4, #4
90027420:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027424:	b2e4      	uxtb	r4, r4
90027426:	3501      	adds	r5, #1
90027428:	f100 808a 	bmi.w	90027540 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002742c:	45a9      	cmp	r9, r5
9002742e:	f340 8087 	ble.w	90027540 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027432:	f1bc 0f00 	cmp.w	ip, #0
90027436:	f000 8086 	beq.w	90027546 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002743a:	2800      	cmp	r0, #0
9002743c:	db7e      	blt.n	9002753c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002743e:	4580      	cmp	r8, r0
90027440:	dd7c      	ble.n	9002753c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027442:	eb03 090e 	add.w	r9, r3, lr
90027446:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002744a:	f019 0f01 	tst.w	r9, #1
9002744e:	5d55      	ldrb	r5, [r2, r5]
90027450:	bf0c      	ite	eq
90027452:	f005 050f 	andeq.w	r5, r5, #15
90027456:	112d      	asrne	r5, r5, #4
90027458:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002745c:	b2ed      	uxtb	r5, r5
9002745e:	3001      	adds	r0, #1
90027460:	d474      	bmi.n	9002754c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027462:	4580      	cmp	r8, r0
90027464:	dd72      	ble.n	9002754c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027466:	2f00      	cmp	r7, #0
90027468:	d072      	beq.n	90027550 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002746a:	3301      	adds	r3, #1
9002746c:	449e      	add	lr, r3
9002746e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027472:	f01e 0f01 	tst.w	lr, #1
90027476:	5cd0      	ldrb	r0, [r2, r3]
90027478:	bf0c      	ite	eq
9002747a:	f000 000f 	andeq.w	r0, r0, #15
9002747e:	1100      	asrne	r0, r0, #4
90027480:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027484:	b2c3      	uxtb	r3, r0
90027486:	b2ba      	uxth	r2, r7
90027488:	fa1f fc8c 	uxth.w	ip, ip
9002748c:	fb02 f00c 	mul.w	r0, r2, ip
90027490:	0112      	lsls	r2, r2, #4
90027492:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027496:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002749a:	1a12      	subs	r2, r2, r0
9002749c:	fa1f fc8c 	uxth.w	ip, ip
900274a0:	b292      	uxth	r2, r2
900274a2:	eba7 070c 	sub.w	r7, r7, ip
900274a6:	4362      	muls	r2, r4
900274a8:	b2bf      	uxth	r7, r7
900274aa:	fb06 2207 	mla	r2, r6, r7, r2
900274ae:	fb0c 2505 	mla	r5, ip, r5, r2
900274b2:	fb00 5303 	mla	r3, r0, r3, r5
900274b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900274ba:	b3a3      	cbz	r3, 90027526 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900274bc:	4a25      	ldr	r2, [pc, #148]	@ (90027554 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900274be:	880e      	ldrh	r6, [r1, #0]
900274c0:	6815      	ldr	r5, [r2, #0]
900274c2:	b29a      	uxth	r2, r3
900274c4:	1234      	asrs	r4, r6, #8
900274c6:	43db      	mvns	r3, r3
900274c8:	f3c5 4007 	ubfx	r0, r5, #16, #8
900274cc:	f3c5 2707 	ubfx	r7, r5, #8, #8
900274d0:	b2db      	uxtb	r3, r3
900274d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900274d6:	fb10 f002 	smulbb	r0, r0, r2
900274da:	b2ed      	uxtb	r5, r5
900274dc:	fb17 f702 	smulbb	r7, r7, r2
900274e0:	fb04 0403 	mla	r4, r4, r3, r0
900274e4:	10f0      	asrs	r0, r6, #3
900274e6:	fb15 f202 	smulbb	r2, r5, r2
900274ea:	00f6      	lsls	r6, r6, #3
900274ec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900274f0:	b2a4      	uxth	r4, r4
900274f2:	b2f6      	uxtb	r6, r6
900274f4:	fb00 7003 	mla	r0, r0, r3, r7
900274f8:	fb06 2303 	mla	r3, r6, r3, r2
900274fc:	b280      	uxth	r0, r0
900274fe:	b29a      	uxth	r2, r3
90027500:	1c63      	adds	r3, r4, #1
90027502:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027506:	1c53      	adds	r3, r2, #1
90027508:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002750c:	1c42      	adds	r2, r0, #1
9002750e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027512:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027516:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002751a:	0940      	lsrs	r0, r0, #5
9002751c:	4323      	orrs	r3, r4
9002751e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027522:	4303      	orrs	r3, r0
90027524:	800b      	strh	r3, [r1, #0]
90027526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002752a:	2600      	movs	r6, #0
9002752c:	e764      	b.n	900273f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002752e:	2400      	movs	r4, #0
90027530:	4626      	mov	r6, r4
90027532:	e778      	b.n	90027426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027534:	2400      	movs	r4, #0
90027536:	e776      	b.n	90027426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027538:	463c      	mov	r4, r7
9002753a:	e774      	b.n	90027426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002753c:	2500      	movs	r5, #0
9002753e:	e78e      	b.n	9002745e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027540:	2300      	movs	r3, #0
90027542:	461d      	mov	r5, r3
90027544:	e79f      	b.n	90027486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027546:	4663      	mov	r3, ip
90027548:	4665      	mov	r5, ip
9002754a:	e79c      	b.n	90027486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002754c:	2300      	movs	r3, #0
9002754e:	e79a      	b.n	90027486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027550:	463b      	mov	r3, r7
90027552:	e798      	b.n	90027486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027554:	2402199c 	.word	0x2402199c

90027558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002755c:	b093      	sub	sp, #76	@ 0x4c
9002755e:	461d      	mov	r5, r3
90027560:	920c      	str	r2, [sp, #48]	@ 0x30
90027562:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90027564:	9011      	str	r0, [sp, #68]	@ 0x44
90027566:	9107      	str	r1, [sp, #28]
90027568:	6850      	ldr	r0, [r2, #4]
9002756a:	6812      	ldr	r2, [r2, #0]
9002756c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90027570:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027574:	fb00 1303 	mla	r3, r0, r3, r1
90027578:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002757c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002757e:	689b      	ldr	r3, [r3, #8]
90027580:	3301      	adds	r3, #1
90027582:	f023 0301 	bic.w	r3, r3, #1
90027586:	9306      	str	r3, [sp, #24]
90027588:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002758a:	681f      	ldr	r7, [r3, #0]
9002758c:	9b07      	ldr	r3, [sp, #28]
9002758e:	2b00      	cmp	r3, #0
90027590:	dc03      	bgt.n	9002759a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90027592:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027594:	2b00      	cmp	r3, #0
90027596:	f340 8267 	ble.w	90027a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002759a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002759c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900275a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900275a4:	1e48      	subs	r0, r1, #1
900275a6:	f102 3cff 	add.w	ip, r2, #4294967295
900275aa:	2d00      	cmp	r5, #0
900275ac:	f340 80b7 	ble.w	9002771e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900275b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900275b4:	ea4f 4326 	mov.w	r3, r6, asr #16
900275b8:	d406      	bmi.n	900275c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900275ba:	4586      	cmp	lr, r0
900275bc:	da04      	bge.n	900275c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900275be:	2b00      	cmp	r3, #0
900275c0:	db02      	blt.n	900275c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900275c2:	4563      	cmp	r3, ip
900275c4:	f2c0 80ac 	blt.w	90027720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900275c8:	f11e 0e01 	adds.w	lr, lr, #1
900275cc:	f100 809f 	bmi.w	9002770e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900275d0:	4571      	cmp	r1, lr
900275d2:	f2c0 809c 	blt.w	9002770e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900275d6:	3301      	adds	r3, #1
900275d8:	f100 8099 	bmi.w	9002770e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900275dc:	429a      	cmp	r2, r3
900275de:	f2c0 8096 	blt.w	9002770e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900275e2:	46c8      	mov	r8, r9
900275e4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900275e8:	9509      	str	r5, [sp, #36]	@ 0x24
900275ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900275ec:	2b00      	cmp	r3, #0
900275ee:	f340 80b5 	ble.w	9002775c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900275f2:	f3c4 3303 	ubfx	r3, r4, #12, #4
900275f6:	1430      	asrs	r0, r6, #16
900275f8:	f3c6 3103 	ubfx	r1, r6, #12, #4
900275fc:	9308      	str	r3, [sp, #32]
900275fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027600:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027604:	1423      	asrs	r3, r4, #16
90027606:	f100 813f 	bmi.w	90027888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002760a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002760e:	455b      	cmp	r3, fp
90027610:	f280 813a 	bge.w	90027888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027614:	2800      	cmp	r0, #0
90027616:	f2c0 8137 	blt.w	90027888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002761a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002761e:	4558      	cmp	r0, fp
90027620:	f280 8132 	bge.w	90027888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027624:	9a06      	ldr	r2, [sp, #24]
90027626:	fb00 3302 	mla	r3, r0, r2, r3
9002762a:	0858      	lsrs	r0, r3, #1
9002762c:	07da      	lsls	r2, r3, #31
9002762e:	9a08      	ldr	r2, [sp, #32]
90027630:	f817 c000 	ldrb.w	ip, [r7, r0]
90027634:	bf54      	ite	pl
90027636:	f00c 0c0f 	andpl.w	ip, ip, #15
9002763a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002763e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027642:	fa5f fc8c 	uxtb.w	ip, ip
90027646:	2a00      	cmp	r2, #0
90027648:	f000 80cc 	beq.w	900277e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9002764c:	1c58      	adds	r0, r3, #1
9002764e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027652:	07c0      	lsls	r0, r0, #31
90027654:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027658:	bf54      	ite	pl
9002765a:	f00e 0e0f 	andpl.w	lr, lr, #15
9002765e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027662:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027666:	fa5f fe8e 	uxtb.w	lr, lr
9002766a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002766e:	b1b9      	cbz	r1, 900276a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027670:	4453      	add	r3, sl
90027672:	0858      	lsrs	r0, r3, #1
90027674:	07da      	lsls	r2, r3, #31
90027676:	5c38      	ldrb	r0, [r7, r0]
90027678:	bf54      	ite	pl
9002767a:	f000 000f 	andpl.w	r0, r0, #15
9002767e:	1100      	asrmi	r0, r0, #4
90027680:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027684:	b2c0      	uxtb	r0, r0
90027686:	900a      	str	r0, [sp, #40]	@ 0x28
90027688:	1c58      	adds	r0, r3, #1
9002768a:	0843      	lsrs	r3, r0, #1
9002768c:	07c2      	lsls	r2, r0, #31
9002768e:	5cfb      	ldrb	r3, [r7, r3]
90027690:	bf54      	ite	pl
90027692:	f003 030f 	andpl.w	r3, r3, #15
90027696:	111b      	asrmi	r3, r3, #4
90027698:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002769c:	b2db      	uxtb	r3, r3
9002769e:	930e      	str	r3, [sp, #56]	@ 0x38
900276a0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900276a4:	b289      	uxth	r1, r1
900276a6:	fb02 f301 	mul.w	r3, r2, r1
900276aa:	0112      	lsls	r2, r2, #4
900276ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900276b0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900276b4:	1ad2      	subs	r2, r2, r3
900276b6:	b289      	uxth	r1, r1
900276b8:	b292      	uxth	r2, r2
900276ba:	1a40      	subs	r0, r0, r1
900276bc:	fa1f fe80 	uxth.w	lr, r0
900276c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
900276c2:	4342      	muls	r2, r0
900276c4:	fb0c 2c0e 	mla	ip, ip, lr, r2
900276c8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900276ca:	fb01 c102 	mla	r1, r1, r2, ip
900276ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900276d0:	fb03 1302 	mla	r3, r3, r2, r1
900276d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900276d8:	2bff      	cmp	r3, #255	@ 0xff
900276da:	f040 8094 	bne.w	90027806 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900276de:	4bbf      	ldr	r3, [pc, #764]	@ (900279dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900276e0:	681a      	ldr	r2, [r3, #0]
900276e2:	4bbf      	ldr	r3, [pc, #764]	@ (900279e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900276e4:	0951      	lsrs	r1, r2, #5
900276e6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900276ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900276ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900276f2:	430b      	orrs	r3, r1
900276f4:	4313      	orrs	r3, r2
900276f6:	f8a8 3000 	strh.w	r3, [r8]
900276fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900276fc:	f108 0802 	add.w	r8, r8, #2
90027700:	441c      	add	r4, r3
90027702:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027704:	441e      	add	r6, r3
90027706:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027708:	3b01      	subs	r3, #1
9002770a:	9309      	str	r3, [sp, #36]	@ 0x24
9002770c:	e76d      	b.n	900275ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002770e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027710:	3d01      	subs	r5, #1
90027712:	f109 0902 	add.w	r9, r9, #2
90027716:	441c      	add	r4, r3
90027718:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002771a:	441e      	add	r6, r3
9002771c:	e745      	b.n	900275aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002771e:	d021      	beq.n	90027764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90027720:	1e6b      	subs	r3, r5, #1
90027722:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027724:	fb00 4003 	mla	r0, r0, r3, r4
90027728:	1400      	asrs	r0, r0, #16
9002772a:	f53f af5a 	bmi.w	900275e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002772e:	3901      	subs	r1, #1
90027730:	4288      	cmp	r0, r1
90027732:	f6bf af56 	bge.w	900275e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027736:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027738:	fb01 6303 	mla	r3, r1, r3, r6
9002773c:	141b      	asrs	r3, r3, #16
9002773e:	f53f af50 	bmi.w	900275e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027742:	3a01      	subs	r2, #1
90027744:	4293      	cmp	r3, r2
90027746:	f6bf af4c 	bge.w	900275e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002774a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002774e:	46a8      	mov	r8, r5
90027750:	46ce      	mov	lr, r9
90027752:	9308      	str	r3, [sp, #32]
90027754:	f1b8 0f00 	cmp.w	r8, #0
90027758:	f300 80b6 	bgt.w	900278c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002775c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027760:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027764:	9b07      	ldr	r3, [sp, #28]
90027766:	2b00      	cmp	r3, #0
90027768:	f340 817e 	ble.w	90027a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002776c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027770:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027772:	ee30 0a04 	vadd.f32	s0, s0, s8
90027776:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002777a:	eef0 6a62 	vmov.f32	s13, s5
9002777e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027782:	ee31 1a05 	vadd.f32	s2, s2, s10
90027786:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002778a:	ee16 4a90 	vmov	r4, s13
9002778e:	eef0 6a43 	vmov.f32	s13, s6
90027792:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027796:	ee16 6a90 	vmov	r6, s13
9002779a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002779e:	ee61 7a27 	vmul.f32	s15, s2, s15
900277a2:	ee77 2a62 	vsub.f32	s5, s14, s5
900277a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900277aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900277ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900277b2:	ee12 2a90 	vmov	r2, s5
900277b6:	eef0 2a47 	vmov.f32	s5, s14
900277ba:	fb92 f3f3 	sdiv	r3, r2, r3
900277be:	ee13 2a10 	vmov	r2, s6
900277c2:	931f      	str	r3, [sp, #124]	@ 0x7c
900277c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900277c6:	eeb0 3a67 	vmov.f32	s6, s15
900277ca:	fb92 f3f3 	sdiv	r3, r2, r3
900277ce:	9320      	str	r3, [sp, #128]	@ 0x80
900277d0:	9b07      	ldr	r3, [sp, #28]
900277d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900277d4:	3b01      	subs	r3, #1
900277d6:	9307      	str	r3, [sp, #28]
900277d8:	bf08      	it	eq
900277da:	4615      	moveq	r5, r2
900277dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900277de:	bf18      	it	ne
900277e0:	461d      	movne	r5, r3
900277e2:	e6d3      	b.n	9002758c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900277e4:	2900      	cmp	r1, #0
900277e6:	f43f af5b 	beq.w	900276a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900277ea:	eb0a 0003 	add.w	r0, sl, r3
900277ee:	0843      	lsrs	r3, r0, #1
900277f0:	07c0      	lsls	r0, r0, #31
900277f2:	5cfb      	ldrb	r3, [r7, r3]
900277f4:	bf54      	ite	pl
900277f6:	f003 030f 	andpl.w	r3, r3, #15
900277fa:	111b      	asrmi	r3, r3, #4
900277fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027800:	b2db      	uxtb	r3, r3
90027802:	930a      	str	r3, [sp, #40]	@ 0x28
90027804:	e74c      	b.n	900276a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027806:	2b00      	cmp	r3, #0
90027808:	f43f af77 	beq.w	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002780c:	4a73      	ldr	r2, [pc, #460]	@ (900279dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002780e:	fa1f fe83 	uxth.w	lr, r3
90027812:	f8b8 c000 	ldrh.w	ip, [r8]
90027816:	43db      	mvns	r3, r3
90027818:	6810      	ldr	r0, [r2, #0]
9002781a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002781e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90027822:	b2db      	uxtb	r3, r3
90027824:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027828:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002782c:	fb12 f20e 	smulbb	r2, r2, lr
90027830:	b2c0      	uxtb	r0, r0
90027832:	fb1b fb0e 	smulbb	fp, fp, lr
90027836:	fb01 2103 	mla	r1, r1, r3, r2
9002783a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002783e:	fb10 fe0e 	smulbb	lr, r0, lr
90027842:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027846:	b289      	uxth	r1, r1
90027848:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002784c:	fa5f fc8c 	uxtb.w	ip, ip
90027850:	fb02 b203 	mla	r2, r2, r3, fp
90027854:	1c48      	adds	r0, r1, #1
90027856:	fb0c e303 	mla	r3, ip, r3, lr
9002785a:	b292      	uxth	r2, r2
9002785c:	b29b      	uxth	r3, r3
9002785e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90027862:	f102 0b01 	add.w	fp, r2, #1
90027866:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002786a:	1c59      	adds	r1, r3, #1
9002786c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90027870:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90027874:	0952      	lsrs	r2, r2, #5
90027876:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002787a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002787e:	4301      	orrs	r1, r0
90027880:	4311      	orrs	r1, r2
90027882:	f8a8 1000 	strh.w	r1, [r8]
90027886:	e738      	b.n	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027888:	f113 0b01 	adds.w	fp, r3, #1
9002788c:	f53f af35 	bmi.w	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027890:	45dc      	cmp	ip, fp
90027892:	f6ff af32 	blt.w	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027896:	f110 0b01 	adds.w	fp, r0, #1
9002789a:	f53f af2e 	bmi.w	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002789e:	45de      	cmp	lr, fp
900278a0:	f6ff af2b 	blt.w	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900278a4:	9302      	str	r3, [sp, #8]
900278a6:	fa0f f38e 	sxth.w	r3, lr
900278aa:	9a08      	ldr	r2, [sp, #32]
900278ac:	9301      	str	r3, [sp, #4]
900278ae:	fa0f f38c 	sxth.w	r3, ip
900278b2:	9105      	str	r1, [sp, #20]
900278b4:	4641      	mov	r1, r8
900278b6:	9300      	str	r3, [sp, #0]
900278b8:	4653      	mov	r3, sl
900278ba:	e9cd 0203 	strd	r0, r2, [sp, #12]
900278be:	463a      	mov	r2, r7
900278c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
900278c2:	f7ff fd73 	bl	900273ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900278c6:	e718      	b.n	900276fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900278c8:	1422      	asrs	r2, r4, #16
900278ca:	9906      	ldr	r1, [sp, #24]
900278cc:	1433      	asrs	r3, r6, #16
900278ce:	f3c4 3003 	ubfx	r0, r4, #12, #4
900278d2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900278d6:	fb01 2303 	mla	r3, r1, r3, r2
900278da:	085a      	lsrs	r2, r3, #1
900278dc:	07d9      	lsls	r1, r3, #31
900278de:	5cba      	ldrb	r2, [r7, r2]
900278e0:	bf54      	ite	pl
900278e2:	f002 020f 	andpl.w	r2, r2, #15
900278e6:	1112      	asrmi	r2, r2, #4
900278e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900278ec:	b2d2      	uxtb	r2, r2
900278ee:	2800      	cmp	r0, #0
900278f0:	d063      	beq.n	900279ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900278f2:	f103 0a01 	add.w	sl, r3, #1
900278f6:	ea4f 015a 	mov.w	r1, sl, lsr #1
900278fa:	f01a 0f01 	tst.w	sl, #1
900278fe:	5c79      	ldrb	r1, [r7, r1]
90027900:	bf0c      	ite	eq
90027902:	f001 010f 	andeq.w	r1, r1, #15
90027906:	1109      	asrne	r1, r1, #4
90027908:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002790c:	b2c9      	uxtb	r1, r1
9002790e:	910f      	str	r1, [sp, #60]	@ 0x3c
90027910:	f1bc 0f00 	cmp.w	ip, #0
90027914:	d01a      	beq.n	9002794c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90027916:	9908      	ldr	r1, [sp, #32]
90027918:	440b      	add	r3, r1
9002791a:	0859      	lsrs	r1, r3, #1
9002791c:	f013 0f01 	tst.w	r3, #1
90027920:	f103 0301 	add.w	r3, r3, #1
90027924:	5c79      	ldrb	r1, [r7, r1]
90027926:	bf0c      	ite	eq
90027928:	f001 010f 	andeq.w	r1, r1, #15
9002792c:	1109      	asrne	r1, r1, #4
9002792e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027932:	b2c9      	uxtb	r1, r1
90027934:	910b      	str	r1, [sp, #44]	@ 0x2c
90027936:	0859      	lsrs	r1, r3, #1
90027938:	07db      	lsls	r3, r3, #31
9002793a:	5c79      	ldrb	r1, [r7, r1]
9002793c:	bf54      	ite	pl
9002793e:	f001 010f 	andpl.w	r1, r1, #15
90027942:	1109      	asrmi	r1, r1, #4
90027944:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027948:	b2c9      	uxtb	r1, r1
9002794a:	9110      	str	r1, [sp, #64]	@ 0x40
9002794c:	b280      	uxth	r0, r0
9002794e:	fa1f fc8c 	uxth.w	ip, ip
90027952:	fb00 f30c 	mul.w	r3, r0, ip
90027956:	0100      	lsls	r0, r0, #4
90027958:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002795c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90027960:	1ac0      	subs	r0, r0, r3
90027962:	fa1f fc8c 	uxth.w	ip, ip
90027966:	b280      	uxth	r0, r0
90027968:	eba1 010c 	sub.w	r1, r1, ip
9002796c:	fa1f fa81 	uxth.w	sl, r1
90027970:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027972:	4348      	muls	r0, r1
90027974:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90027976:	fb02 020a 	mla	r2, r2, sl, r0
9002797a:	fb0c 2c01 	mla	ip, ip, r1, r2
9002797e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027980:	fb03 c302 	mla	r3, r3, r2, ip
90027984:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027988:	2bff      	cmp	r3, #255	@ 0xff
9002798a:	d12b      	bne.n	900279e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002798c:	4b13      	ldr	r3, [pc, #76]	@ (900279dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002798e:	681a      	ldr	r2, [r3, #0]
90027990:	4b13      	ldr	r3, [pc, #76]	@ (900279e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027992:	0951      	lsrs	r1, r2, #5
90027994:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90027998:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002799c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900279a0:	430b      	orrs	r3, r1
900279a2:	4313      	orrs	r3, r2
900279a4:	f8ae 3000 	strh.w	r3, [lr]
900279a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900279aa:	f10e 0e02 	add.w	lr, lr, #2
900279ae:	f108 38ff 	add.w	r8, r8, #4294967295
900279b2:	441c      	add	r4, r3
900279b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900279b6:	441e      	add	r6, r3
900279b8:	e6cc      	b.n	90027754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900279ba:	f1bc 0f00 	cmp.w	ip, #0
900279be:	d0c5      	beq.n	9002794c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900279c0:	9908      	ldr	r1, [sp, #32]
900279c2:	440b      	add	r3, r1
900279c4:	0859      	lsrs	r1, r3, #1
900279c6:	07db      	lsls	r3, r3, #31
900279c8:	5c79      	ldrb	r1, [r7, r1]
900279ca:	bf54      	ite	pl
900279cc:	f001 010f 	andpl.w	r1, r1, #15
900279d0:	1109      	asrmi	r1, r1, #4
900279d2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900279d6:	b2c9      	uxtb	r1, r1
900279d8:	910b      	str	r1, [sp, #44]	@ 0x2c
900279da:	e7b7      	b.n	9002794c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900279dc:	2402199c 	.word	0x2402199c
900279e0:	fffff800 	.word	0xfffff800
900279e4:	2b00      	cmp	r3, #0
900279e6:	d0df      	beq.n	900279a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900279e8:	4a21      	ldr	r2, [pc, #132]	@ (90027a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900279ea:	fa1f fa83 	uxth.w	sl, r3
900279ee:	f8be c000 	ldrh.w	ip, [lr]
900279f2:	43db      	mvns	r3, r3
900279f4:	6810      	ldr	r0, [r2, #0]
900279f6:	ea4f 212c 	mov.w	r1, ip, asr #8
900279fa:	f3c0 4207 	ubfx	r2, r0, #16, #8
900279fe:	b2db      	uxtb	r3, r3
90027a00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027a04:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90027a08:	fb12 f20a 	smulbb	r2, r2, sl
90027a0c:	b2c0      	uxtb	r0, r0
90027a0e:	fb1b fb0a 	smulbb	fp, fp, sl
90027a12:	fb01 2103 	mla	r1, r1, r3, r2
90027a16:	ea4f 02ec 	mov.w	r2, ip, asr #3
90027a1a:	fb10 f00a 	smulbb	r0, r0, sl
90027a1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027a22:	b289      	uxth	r1, r1
90027a24:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027a28:	fa5f fc8c 	uxtb.w	ip, ip
90027a2c:	fb02 b203 	mla	r2, r2, r3, fp
90027a30:	fb0c 0003 	mla	r0, ip, r3, r0
90027a34:	1c4b      	adds	r3, r1, #1
90027a36:	b292      	uxth	r2, r2
90027a38:	b280      	uxth	r0, r0
90027a3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90027a3e:	f100 0b01 	add.w	fp, r0, #1
90027a42:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90027a46:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90027a4a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90027a4e:	ea4b 0101 	orr.w	r1, fp, r1
90027a52:	f102 0b01 	add.w	fp, r2, #1
90027a56:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90027a5a:	0952      	lsrs	r2, r2, #5
90027a5c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027a60:	4311      	orrs	r1, r2
90027a62:	f8ae 1000 	strh.w	r1, [lr]
90027a66:	e79f      	b.n	900279a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90027a68:	b013      	add	sp, #76	@ 0x4c
90027a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027a6e:	bf00      	nop
90027a70:	2402199c 	.word	0x2402199c

90027a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90027a74:	b570      	push	{r4, r5, r6, lr}
90027a76:	1208      	asrs	r0, r1, #8
90027a78:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90027a7c:	b29e      	uxth	r6, r3
90027a7e:	1213      	asrs	r3, r2, #8
90027a80:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027a84:	10cc      	asrs	r4, r1, #3
90027a86:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027a8a:	00c9      	lsls	r1, r1, #3
90027a8c:	fb10 f006 	smulbb	r0, r0, r6
90027a90:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90027a94:	fb13 f305 	smulbb	r3, r3, r5
90027a98:	fb14 f406 	smulbb	r4, r4, r6
90027a9c:	4418      	add	r0, r3
90027a9e:	10d3      	asrs	r3, r2, #3
90027aa0:	00d2      	lsls	r2, r2, #3
90027aa2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90027aa6:	b280      	uxth	r0, r0
90027aa8:	b2d2      	uxtb	r2, r2
90027aaa:	fb13 f305 	smulbb	r3, r3, r5
90027aae:	fb12 f205 	smulbb	r2, r2, r5
90027ab2:	441c      	add	r4, r3
90027ab4:	b2cb      	uxtb	r3, r1
90027ab6:	fb13 f306 	smulbb	r3, r3, r6
90027aba:	b2a4      	uxth	r4, r4
90027abc:	4413      	add	r3, r2
90027abe:	1c42      	adds	r2, r0, #1
90027ac0:	b29b      	uxth	r3, r3
90027ac2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027ac6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90027aca:	1c58      	adds	r0, r3, #1
90027acc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027ad0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027ad4:	4310      	orrs	r0, r2
90027ad6:	1c62      	adds	r2, r4, #1
90027ad8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027adc:	0964      	lsrs	r4, r4, #5
90027ade:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90027ae2:	4320      	orrs	r0, r4
90027ae4:	bd70      	pop	{r4, r5, r6, pc}
	...

90027ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90027ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027aec:	b08f      	sub	sp, #60	@ 0x3c
90027aee:	461c      	mov	r4, r3
90027af0:	460d      	mov	r5, r1
90027af2:	4616      	mov	r6, r2
90027af4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90027af8:	9004      	str	r0, [sp, #16]
90027afa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027afc:	2f00      	cmp	r7, #0
90027afe:	f000 80f6 	beq.w	90027cee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90027b02:	6820      	ldr	r0, [r4, #0]
90027b04:	aa0a      	add	r2, sp, #40	@ 0x28
90027b06:	6861      	ldr	r1, [r4, #4]
90027b08:	f04f 0802 	mov.w	r8, #2
90027b0c:	3604      	adds	r6, #4
90027b0e:	c203      	stmia	r2!, {r0, r1}
90027b10:	6818      	ldr	r0, [r3, #0]
90027b12:	aa0c      	add	r2, sp, #48	@ 0x30
90027b14:	6859      	ldr	r1, [r3, #4]
90027b16:	c203      	stmia	r2!, {r0, r1}
90027b18:	a80a      	add	r0, sp, #40	@ 0x28
90027b1a:	f7ee fa15 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027b1e:	4621      	mov	r1, r4
90027b20:	a80c      	add	r0, sp, #48	@ 0x30
90027b22:	f7ee fa39 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027b26:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90027b2a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90027b2e:	f002 0301 	and.w	r3, r2, #1
90027b32:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90027b36:	9306      	str	r3, [sp, #24]
90027b38:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027b3c:	f003 0101 	and.w	r1, r3, #1
90027b40:	9105      	str	r1, [sp, #20]
90027b42:	9805      	ldr	r0, [sp, #20]
90027b44:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90027b48:	4403      	add	r3, r0
90027b4a:	fb01 2303 	mla	r3, r1, r3, r2
90027b4e:	fb93 f3f8 	sdiv	r3, r3, r8
90027b52:	441d      	add	r5, r3
90027b54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90027b58:	441a      	add	r2, r3
90027b5a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90027b5e:	4419      	add	r1, r3
90027b60:	4b64      	ldr	r3, [pc, #400]	@ (90027cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90027b62:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90027b66:	6818      	ldr	r0, [r3, #0]
90027b68:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90027b6c:	6803      	ldr	r3, [r0, #0]
90027b6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027b70:	4798      	blx	r3
90027b72:	4a61      	ldr	r2, [pc, #388]	@ (90027cf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90027b74:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90027b78:	2fff      	cmp	r7, #255	@ 0xff
90027b7a:	8813      	ldrh	r3, [r2, #0]
90027b7c:	4611      	mov	r1, r2
90027b7e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90027b82:	fb03 fb0b 	mul.w	fp, r3, fp
90027b86:	fb03 a404 	mla	r4, r3, r4, sl
90027b8a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027b8e:	d06b      	beq.n	90027c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90027b90:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90027b94:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90027b98:	9303      	str	r3, [sp, #12]
90027b9a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90027b9e:	e9cd 3207 	strd	r3, r2, [sp, #28]
90027ba2:	9b07      	ldr	r3, [sp, #28]
90027ba4:	42a3      	cmp	r3, r4
90027ba6:	f240 809d 	bls.w	90027ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90027baa:	9b06      	ldr	r3, [sp, #24]
90027bac:	2b00      	cmp	r3, #0
90027bae:	d039      	beq.n	90027c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90027bb0:	782b      	ldrb	r3, [r5, #0]
90027bb2:	f105 0801 	add.w	r8, r5, #1
90027bb6:	f109 3bff 	add.w	fp, r9, #4294967295
90027bba:	8822      	ldrh	r2, [r4, #0]
90027bbc:	f003 030f 	and.w	r3, r3, #15
90027bc0:	9804      	ldr	r0, [sp, #16]
90027bc2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027bc6:	9b03      	ldr	r3, [sp, #12]
90027bc8:	9300      	str	r3, [sp, #0]
90027bca:	463b      	mov	r3, r7
90027bcc:	f7ff ff52 	bl	90027a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027bd0:	f824 0b02 	strh.w	r0, [r4], #2
90027bd4:	f1bb 0f01 	cmp.w	fp, #1
90027bd8:	46a2      	mov	sl, r4
90027bda:	f104 0404 	add.w	r4, r4, #4
90027bde:	dd24      	ble.n	90027c2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90027be0:	f898 3000 	ldrb.w	r3, [r8]
90027be4:	f1ab 0b02 	sub.w	fp, fp, #2
90027be8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90027bec:	091b      	lsrs	r3, r3, #4
90027bee:	9804      	ldr	r0, [sp, #16]
90027bf0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027bf4:	9b03      	ldr	r3, [sp, #12]
90027bf6:	9300      	str	r3, [sp, #0]
90027bf8:	463b      	mov	r3, r7
90027bfa:	f7ff ff3b 	bl	90027a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027bfe:	f824 0c04 	strh.w	r0, [r4, #-4]
90027c02:	f818 3b01 	ldrb.w	r3, [r8], #1
90027c06:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027c0a:	f003 030f 	and.w	r3, r3, #15
90027c0e:	9804      	ldr	r0, [sp, #16]
90027c10:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027c14:	9b03      	ldr	r3, [sp, #12]
90027c16:	9300      	str	r3, [sp, #0]
90027c18:	463b      	mov	r3, r7
90027c1a:	f7ff ff2b 	bl	90027a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027c1e:	f824 0c02 	strh.w	r0, [r4, #-2]
90027c22:	e7d7      	b.n	90027bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90027c24:	46a8      	mov	r8, r5
90027c26:	46cb      	mov	fp, r9
90027c28:	e7d4      	b.n	90027bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90027c2a:	d10e      	bne.n	90027c4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90027c2c:	f898 3000 	ldrb.w	r3, [r8]
90027c30:	f8ba 2000 	ldrh.w	r2, [sl]
90027c34:	091b      	lsrs	r3, r3, #4
90027c36:	9804      	ldr	r0, [sp, #16]
90027c38:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027c3c:	9b03      	ldr	r3, [sp, #12]
90027c3e:	9300      	str	r3, [sp, #0]
90027c40:	463b      	mov	r3, r7
90027c42:	f7ff ff17 	bl	90027a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027c46:	f82a 0b02 	strh.w	r0, [sl], #2
90027c4a:	9b08      	ldr	r3, [sp, #32]
90027c4c:	9a05      	ldr	r2, [sp, #20]
90027c4e:	881c      	ldrh	r4, [r3, #0]
90027c50:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027c54:	eba4 0409 	sub.w	r4, r4, r9
90027c58:	4413      	add	r3, r2
90027c5a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027c5c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90027c60:	fb93 f3f2 	sdiv	r3, r3, r2
90027c64:	441d      	add	r5, r3
90027c66:	e79c      	b.n	90027ba2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90027c68:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90027c6c:	45a3      	cmp	fp, r4
90027c6e:	d939      	bls.n	90027ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90027c70:	9b06      	ldr	r3, [sp, #24]
90027c72:	b1fb      	cbz	r3, 90027cb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90027c74:	782b      	ldrb	r3, [r5, #0]
90027c76:	1c6a      	adds	r2, r5, #1
90027c78:	f109 30ff 	add.w	r0, r9, #4294967295
90027c7c:	3402      	adds	r4, #2
90027c7e:	f003 030f 	and.w	r3, r3, #15
90027c82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027c86:	f824 3c02 	strh.w	r3, [r4, #-2]
90027c8a:	2801      	cmp	r0, #1
90027c8c:	4623      	mov	r3, r4
90027c8e:	f104 0404 	add.w	r4, r4, #4
90027c92:	dd12      	ble.n	90027cba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90027c94:	7813      	ldrb	r3, [r2, #0]
90027c96:	3802      	subs	r0, #2
90027c98:	091b      	lsrs	r3, r3, #4
90027c9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027c9e:	f824 3c04 	strh.w	r3, [r4, #-4]
90027ca2:	f812 3b01 	ldrb.w	r3, [r2], #1
90027ca6:	f003 030f 	and.w	r3, r3, #15
90027caa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027cae:	f824 3c02 	strh.w	r3, [r4, #-2]
90027cb2:	e7ea      	b.n	90027c8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90027cb4:	462a      	mov	r2, r5
90027cb6:	4648      	mov	r0, r9
90027cb8:	e7e7      	b.n	90027c8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90027cba:	d106      	bne.n	90027cca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90027cbc:	7812      	ldrb	r2, [r2, #0]
90027cbe:	3302      	adds	r3, #2
90027cc0:	0912      	lsrs	r2, r2, #4
90027cc2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90027cc6:	f823 2c02 	strh.w	r2, [r3, #-2]
90027cca:	880c      	ldrh	r4, [r1, #0]
90027ccc:	9a05      	ldr	r2, [sp, #20]
90027cce:	eba4 0409 	sub.w	r4, r4, r9
90027cd2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90027cd6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027cda:	4413      	add	r3, r2
90027cdc:	fb93 f3f8 	sdiv	r3, r3, r8
90027ce0:	441d      	add	r5, r3
90027ce2:	e7c3      	b.n	90027c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90027ce4:	4b03      	ldr	r3, [pc, #12]	@ (90027cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90027ce6:	6818      	ldr	r0, [r3, #0]
90027ce8:	6803      	ldr	r3, [r0, #0]
90027cea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90027cec:	4798      	blx	r3
90027cee:	b00f      	add	sp, #60	@ 0x3c
90027cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027cf4:	2402198c 	.word	0x2402198c
90027cf8:	24021986 	.word	0x24021986

90027cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90027cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
90027cfe:	f89d 5014 	ldrb.w	r5, [sp, #20]
90027d02:	0a0f      	lsrs	r7, r1, #8
90027d04:	2dff      	cmp	r5, #255	@ 0xff
90027d06:	d10c      	bne.n	90027d22 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027d08:	2bff      	cmp	r3, #255	@ 0xff
90027d0a:	d10a      	bne.n	90027d22 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027d0c:	0948      	lsrs	r0, r1, #5
90027d0e:	4b25      	ldr	r3, [pc, #148]	@ (90027da4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90027d10:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027d14:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027d18:	403b      	ands	r3, r7
90027d1a:	4318      	orrs	r0, r3
90027d1c:	4308      	orrs	r0, r1
90027d1e:	b280      	uxth	r0, r0
90027d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027d22:	fb15 f503 	smulbb	r5, r5, r3
90027d26:	1214      	asrs	r4, r2, #8
90027d28:	10d6      	asrs	r6, r2, #3
90027d2a:	b2ab      	uxth	r3, r5
90027d2c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027d30:	00d0      	lsls	r0, r2, #3
90027d32:	f3c1 4207 	ubfx	r2, r1, #16, #8
90027d36:	1c5d      	adds	r5, r3, #1
90027d38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027d3c:	b2c0      	uxtb	r0, r0
90027d3e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90027d42:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90027d46:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90027d4a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90027d4e:	fa1f fc85 	uxth.w	ip, r5
90027d52:	43ed      	mvns	r5, r5
90027d54:	fb12 f20c 	smulbb	r2, r2, ip
90027d58:	b2eb      	uxtb	r3, r5
90027d5a:	b2fd      	uxtb	r5, r7
90027d5c:	fb04 2403 	mla	r4, r4, r3, r2
90027d60:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90027d64:	fb15 f50c 	smulbb	r5, r5, ip
90027d68:	b2c8      	uxtb	r0, r1
90027d6a:	b2a4      	uxth	r4, r4
90027d6c:	fb10 f00c 	smulbb	r0, r0, ip
90027d70:	fb06 5503 	mla	r5, r6, r3, r5
90027d74:	fb02 0003 	mla	r0, r2, r3, r0
90027d78:	b2ad      	uxth	r5, r5
90027d7a:	b283      	uxth	r3, r0
90027d7c:	1c60      	adds	r0, r4, #1
90027d7e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90027d82:	1c58      	adds	r0, r3, #1
90027d84:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027d88:	1c6b      	adds	r3, r5, #1
90027d8a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027d8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027d92:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027d96:	096d      	lsrs	r5, r5, #5
90027d98:	4320      	orrs	r0, r4
90027d9a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90027d9e:	4328      	orrs	r0, r5
90027da0:	e7be      	b.n	90027d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90027da2:	bf00      	nop
90027da4:	00fff800 	.word	0x00fff800

90027da8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90027da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027dac:	461c      	mov	r4, r3
90027dae:	b08d      	sub	sp, #52	@ 0x34
90027db0:	460d      	mov	r5, r1
90027db2:	4616      	mov	r6, r2
90027db4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027db6:	4680      	mov	r8, r0
90027db8:	6861      	ldr	r1, [r4, #4]
90027dba:	aa08      	add	r2, sp, #32
90027dbc:	6820      	ldr	r0, [r4, #0]
90027dbe:	f04f 0a02 	mov.w	sl, #2
90027dc2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90027dc6:	3604      	adds	r6, #4
90027dc8:	c203      	stmia	r2!, {r0, r1}
90027dca:	6818      	ldr	r0, [r3, #0]
90027dcc:	aa0a      	add	r2, sp, #40	@ 0x28
90027dce:	6859      	ldr	r1, [r3, #4]
90027dd0:	c203      	stmia	r2!, {r0, r1}
90027dd2:	a808      	add	r0, sp, #32
90027dd4:	f7ee f8b8 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027dd8:	4621      	mov	r1, r4
90027dda:	a80a      	add	r0, sp, #40	@ 0x28
90027ddc:	f7ee f8dc 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027de0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90027de4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90027de8:	f002 0301 	and.w	r3, r2, #1
90027dec:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90027df0:	9303      	str	r3, [sp, #12]
90027df2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90027df6:	f003 0101 	and.w	r1, r3, #1
90027dfa:	9102      	str	r1, [sp, #8]
90027dfc:	9802      	ldr	r0, [sp, #8]
90027dfe:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90027e02:	4403      	add	r3, r0
90027e04:	fb01 2303 	mla	r3, r1, r3, r2
90027e08:	fb93 f3fa 	sdiv	r3, r3, sl
90027e0c:	441d      	add	r5, r3
90027e0e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90027e12:	441a      	add	r2, r3
90027e14:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90027e18:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90027e1c:	4419      	add	r1, r3
90027e1e:	4a3e      	ldr	r2, [pc, #248]	@ (90027f18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90027e20:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90027e24:	6810      	ldr	r0, [r2, #0]
90027e26:	9205      	str	r2, [sp, #20]
90027e28:	6803      	ldr	r3, [r0, #0]
90027e2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027e2c:	4798      	blx	r3
90027e2e:	4b3b      	ldr	r3, [pc, #236]	@ (90027f1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90027e30:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90027e34:	8819      	ldrh	r1, [r3, #0]
90027e36:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90027e3a:	434f      	muls	r7, r1
90027e3c:	fb01 c404 	mla	r4, r1, r4, ip
90027e40:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027e44:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90027e48:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90027e4c:	9204      	str	r2, [sp, #16]
90027e4e:	9b04      	ldr	r3, [sp, #16]
90027e50:	429c      	cmp	r4, r3
90027e52:	d258      	bcs.n	90027f06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90027e54:	9b03      	ldr	r3, [sp, #12]
90027e56:	2b00      	cmp	r3, #0
90027e58:	d034      	beq.n	90027ec4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90027e5a:	782b      	ldrb	r3, [r5, #0]
90027e5c:	1c6f      	adds	r7, r5, #1
90027e5e:	f003 030f 	and.w	r3, r3, #15
90027e62:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027e66:	0e0b      	lsrs	r3, r1, #24
90027e68:	d006      	beq.n	90027e78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90027e6a:	8822      	ldrh	r2, [r4, #0]
90027e6c:	4640      	mov	r0, r8
90027e6e:	9300      	str	r3, [sp, #0]
90027e70:	464b      	mov	r3, r9
90027e72:	f7ff ff43 	bl	90027cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027e76:	8020      	strh	r0, [r4, #0]
90027e78:	3402      	adds	r4, #2
90027e7a:	f10b 3aff 	add.w	sl, fp, #4294967295
90027e7e:	f1ba 0f01 	cmp.w	sl, #1
90027e82:	dd22      	ble.n	90027eca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90027e84:	783b      	ldrb	r3, [r7, #0]
90027e86:	091b      	lsrs	r3, r3, #4
90027e88:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027e8c:	0e0b      	lsrs	r3, r1, #24
90027e8e:	d006      	beq.n	90027e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90027e90:	8822      	ldrh	r2, [r4, #0]
90027e92:	4640      	mov	r0, r8
90027e94:	9300      	str	r3, [sp, #0]
90027e96:	464b      	mov	r3, r9
90027e98:	f7ff ff30 	bl	90027cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027e9c:	8020      	strh	r0, [r4, #0]
90027e9e:	f817 3b01 	ldrb.w	r3, [r7], #1
90027ea2:	f003 030f 	and.w	r3, r3, #15
90027ea6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027eaa:	0e0b      	lsrs	r3, r1, #24
90027eac:	d006      	beq.n	90027ebc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90027eae:	8862      	ldrh	r2, [r4, #2]
90027eb0:	4640      	mov	r0, r8
90027eb2:	9300      	str	r3, [sp, #0]
90027eb4:	464b      	mov	r3, r9
90027eb6:	f7ff ff21 	bl	90027cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027eba:	8060      	strh	r0, [r4, #2]
90027ebc:	3404      	adds	r4, #4
90027ebe:	f1aa 0a02 	sub.w	sl, sl, #2
90027ec2:	e7dc      	b.n	90027e7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90027ec4:	462f      	mov	r7, r5
90027ec6:	46da      	mov	sl, fp
90027ec8:	e7d9      	b.n	90027e7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90027eca:	d10d      	bne.n	90027ee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90027ecc:	783b      	ldrb	r3, [r7, #0]
90027ece:	091b      	lsrs	r3, r3, #4
90027ed0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027ed4:	0e0b      	lsrs	r3, r1, #24
90027ed6:	d006      	beq.n	90027ee6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90027ed8:	8822      	ldrh	r2, [r4, #0]
90027eda:	4640      	mov	r0, r8
90027edc:	9300      	str	r3, [sp, #0]
90027ede:	464b      	mov	r3, r9
90027ee0:	f7ff ff0c 	bl	90027cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027ee4:	8020      	strh	r0, [r4, #0]
90027ee6:	3402      	adds	r4, #2
90027ee8:	9b06      	ldr	r3, [sp, #24]
90027eea:	9a02      	ldr	r2, [sp, #8]
90027eec:	881b      	ldrh	r3, [r3, #0]
90027eee:	eba3 030b 	sub.w	r3, r3, fp
90027ef2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90027ef6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90027efa:	4413      	add	r3, r2
90027efc:	9a07      	ldr	r2, [sp, #28]
90027efe:	fb93 f3f2 	sdiv	r3, r3, r2
90027f02:	441d      	add	r5, r3
90027f04:	e7a3      	b.n	90027e4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90027f06:	9b05      	ldr	r3, [sp, #20]
90027f08:	6818      	ldr	r0, [r3, #0]
90027f0a:	6803      	ldr	r3, [r0, #0]
90027f0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90027f0e:	4798      	blx	r3
90027f10:	b00d      	add	sp, #52	@ 0x34
90027f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027f16:	bf00      	nop
90027f18:	2402198c 	.word	0x2402198c
90027f1c:	24021986 	.word	0x24021986

90027f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90027f20:	b570      	push	{r4, r5, r6, lr}
90027f22:	1214      	asrs	r4, r2, #8
90027f24:	788d      	ldrb	r5, [r1, #2]
90027f26:	f89d 6010 	ldrb.w	r6, [sp, #16]
90027f2a:	10d0      	asrs	r0, r2, #3
90027f2c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027f30:	00d2      	lsls	r2, r2, #3
90027f32:	fb15 f503 	smulbb	r5, r5, r3
90027f36:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027f3a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027f3e:	b2d2      	uxtb	r2, r2
90027f40:	fb04 5506 	mla	r5, r4, r6, r5
90027f44:	784c      	ldrb	r4, [r1, #1]
90027f46:	7809      	ldrb	r1, [r1, #0]
90027f48:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90027f4c:	fb14 f403 	smulbb	r4, r4, r3
90027f50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90027f54:	fb11 f303 	smulbb	r3, r1, r3
90027f58:	b2ad      	uxth	r5, r5
90027f5a:	fb00 4406 	mla	r4, r0, r6, r4
90027f5e:	fb02 3306 	mla	r3, r2, r6, r3
90027f62:	1c68      	adds	r0, r5, #1
90027f64:	b2a4      	uxth	r4, r4
90027f66:	b29b      	uxth	r3, r3
90027f68:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90027f6c:	1c62      	adds	r2, r4, #1
90027f6e:	1c58      	adds	r0, r3, #1
90027f70:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027f74:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027f78:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027f7c:	0964      	lsrs	r4, r4, #5
90027f7e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027f82:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90027f86:	4328      	orrs	r0, r5
90027f88:	4320      	orrs	r0, r4
90027f8a:	bd70      	pop	{r4, r5, r6, pc}

90027f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90027f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027f90:	b08f      	sub	sp, #60	@ 0x3c
90027f92:	461c      	mov	r4, r3
90027f94:	4682      	mov	sl, r0
90027f96:	460e      	mov	r6, r1
90027f98:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90027f9c:	4615      	mov	r5, r2
90027f9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027fa0:	2f00      	cmp	r7, #0
90027fa2:	f000 8141 	beq.w	90028228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90027fa6:	6820      	ldr	r0, [r4, #0]
90027fa8:	aa0a      	add	r2, sp, #40	@ 0x28
90027faa:	6861      	ldr	r1, [r4, #4]
90027fac:	f04f 0802 	mov.w	r8, #2
90027fb0:	3504      	adds	r5, #4
90027fb2:	c203      	stmia	r2!, {r0, r1}
90027fb4:	6818      	ldr	r0, [r3, #0]
90027fb6:	aa0c      	add	r2, sp, #48	@ 0x30
90027fb8:	6859      	ldr	r1, [r3, #4]
90027fba:	c203      	stmia	r2!, {r0, r1}
90027fbc:	a80a      	add	r0, sp, #40	@ 0x28
90027fbe:	f7ed ffc3 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027fc2:	4621      	mov	r1, r4
90027fc4:	a80c      	add	r0, sp, #48	@ 0x30
90027fc6:	f7ed ffe7 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027fca:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90027fce:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90027fd2:	f002 0301 	and.w	r3, r2, #1
90027fd6:	9306      	str	r3, [sp, #24]
90027fd8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027fdc:	f003 0101 	and.w	r1, r3, #1
90027fe0:	9105      	str	r1, [sp, #20]
90027fe2:	9805      	ldr	r0, [sp, #20]
90027fe4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90027fe8:	4403      	add	r3, r0
90027fea:	fb01 2303 	mla	r3, r1, r3, r2
90027fee:	fb93 f3f8 	sdiv	r3, r3, r8
90027ff2:	441e      	add	r6, r3
90027ff4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90027ff8:	441a      	add	r2, r3
90027ffa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90027ffe:	4419      	add	r1, r3
90028000:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90028004:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028008:	9303      	str	r3, [sp, #12]
9002800a:	4b89      	ldr	r3, [pc, #548]	@ (90028230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002800c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028010:	6818      	ldr	r0, [r3, #0]
90028012:	6803      	ldr	r3, [r0, #0]
90028014:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028016:	4798      	blx	r3
90028018:	4a86      	ldr	r2, [pc, #536]	@ (90028234 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002801a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002801e:	2fff      	cmp	r7, #255	@ 0xff
90028020:	8813      	ldrh	r3, [r2, #0]
90028022:	4694      	mov	ip, r2
90028024:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90028028:	fb03 9404 	mla	r4, r3, r4, r9
9002802c:	fb03 f30b 	mul.w	r3, r3, fp
90028030:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028034:	d071      	beq.n	9002811a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90028036:	43f9      	mvns	r1, r7
90028038:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002803c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028040:	b2c9      	uxtb	r1, r1
90028042:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028046:	9104      	str	r1, [sp, #16]
90028048:	9b07      	ldr	r3, [sp, #28]
9002804a:	42a3      	cmp	r3, r4
9002804c:	f240 80e7 	bls.w	9002821e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028050:	9b06      	ldr	r3, [sp, #24]
90028052:	2b00      	cmp	r3, #0
90028054:	d03d      	beq.n	900280d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90028056:	7831      	ldrb	r1, [r6, #0]
90028058:	4650      	mov	r0, sl
9002805a:	9b04      	ldr	r3, [sp, #16]
9002805c:	f106 0801 	add.w	r8, r6, #1
90028060:	f001 010f 	and.w	r1, r1, #15
90028064:	8822      	ldrh	r2, [r4, #0]
90028066:	9300      	str	r3, [sp, #0]
90028068:	463b      	mov	r3, r7
9002806a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002806e:	4429      	add	r1, r5
90028070:	f7ff ff56 	bl	90027f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028074:	9b03      	ldr	r3, [sp, #12]
90028076:	f824 0b02 	strh.w	r0, [r4], #2
9002807a:	f103 3bff 	add.w	fp, r3, #4294967295
9002807e:	f1bb 0f01 	cmp.w	fp, #1
90028082:	46a1      	mov	r9, r4
90028084:	f104 0404 	add.w	r4, r4, #4
90028088:	dd27      	ble.n	900280da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002808a:	f898 1000 	ldrb.w	r1, [r8]
9002808e:	4650      	mov	r0, sl
90028090:	9b04      	ldr	r3, [sp, #16]
90028092:	f1ab 0b02 	sub.w	fp, fp, #2
90028096:	0909      	lsrs	r1, r1, #4
90028098:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002809c:	9300      	str	r3, [sp, #0]
9002809e:	463b      	mov	r3, r7
900280a0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900280a4:	4429      	add	r1, r5
900280a6:	f7ff ff3b 	bl	90027f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900280aa:	f824 0c04 	strh.w	r0, [r4, #-4]
900280ae:	f818 1b01 	ldrb.w	r1, [r8], #1
900280b2:	4650      	mov	r0, sl
900280b4:	9b04      	ldr	r3, [sp, #16]
900280b6:	f001 010f 	and.w	r1, r1, #15
900280ba:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900280be:	9300      	str	r3, [sp, #0]
900280c0:	463b      	mov	r3, r7
900280c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900280c6:	4429      	add	r1, r5
900280c8:	f7ff ff2a 	bl	90027f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900280cc:	f824 0c02 	strh.w	r0, [r4, #-2]
900280d0:	e7d5      	b.n	9002807e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900280d2:	46b0      	mov	r8, r6
900280d4:	f8dd b00c 	ldr.w	fp, [sp, #12]
900280d8:	e7d1      	b.n	9002807e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900280da:	d10f      	bne.n	900280fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900280dc:	f898 1000 	ldrb.w	r1, [r8]
900280e0:	4650      	mov	r0, sl
900280e2:	9b04      	ldr	r3, [sp, #16]
900280e4:	0909      	lsrs	r1, r1, #4
900280e6:	f8b9 2000 	ldrh.w	r2, [r9]
900280ea:	9300      	str	r3, [sp, #0]
900280ec:	463b      	mov	r3, r7
900280ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900280f2:	4429      	add	r1, r5
900280f4:	f7ff ff14 	bl	90027f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900280f8:	f829 0b02 	strh.w	r0, [r9], #2
900280fc:	9b08      	ldr	r3, [sp, #32]
900280fe:	9a05      	ldr	r2, [sp, #20]
90028100:	881c      	ldrh	r4, [r3, #0]
90028102:	9b03      	ldr	r3, [sp, #12]
90028104:	1ae4      	subs	r4, r4, r3
90028106:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002810a:	4413      	add	r3, r2
9002810c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002810e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028112:	fb93 f3f2 	sdiv	r3, r3, r2
90028116:	441e      	add	r6, r3
90028118:	e796      	b.n	90028048 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002811a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002811e:	4f46      	ldr	r7, [pc, #280]	@ (90028238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028120:	42a3      	cmp	r3, r4
90028122:	d97c      	bls.n	9002821e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028124:	9a06      	ldr	r2, [sp, #24]
90028126:	2a00      	cmp	r2, #0
90028128:	d054      	beq.n	900281d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002812a:	7830      	ldrb	r0, [r6, #0]
9002812c:	1c71      	adds	r1, r6, #1
9002812e:	f000 000f 	and.w	r0, r0, #15
90028132:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028136:	eb05 0e00 	add.w	lr, r5, r0
9002813a:	5c28      	ldrb	r0, [r5, r0]
9002813c:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028140:	f89e e001 	ldrb.w	lr, [lr, #1]
90028144:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028148:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002814c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028150:	ea42 020e 	orr.w	r2, r2, lr
90028154:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028158:	f824 2b02 	strh.w	r2, [r4], #2
9002815c:	9a03      	ldr	r2, [sp, #12]
9002815e:	f102 3eff 	add.w	lr, r2, #4294967295
90028162:	f1be 0f01 	cmp.w	lr, #1
90028166:	4620      	mov	r0, r4
90028168:	f104 0404 	add.w	r4, r4, #4
9002816c:	dd36      	ble.n	900281dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002816e:	7808      	ldrb	r0, [r1, #0]
90028170:	f1ae 0e02 	sub.w	lr, lr, #2
90028174:	0900      	lsrs	r0, r0, #4
90028176:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002817a:	eb05 0a00 	add.w	sl, r5, r0
9002817e:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028182:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028186:	00d2      	lsls	r2, r2, #3
90028188:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002818c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028190:	ea49 0202 	orr.w	r2, r9, r2
90028194:	f815 9000 	ldrb.w	r9, [r5, r0]
90028198:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002819c:	f824 2c04 	strh.w	r2, [r4, #-4]
900281a0:	f811 0b01 	ldrb.w	r0, [r1], #1
900281a4:	f000 000f 	and.w	r0, r0, #15
900281a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900281ac:	eb05 0a00 	add.w	sl, r5, r0
900281b0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900281b4:	f89a 9002 	ldrb.w	r9, [sl, #2]
900281b8:	00d2      	lsls	r2, r2, #3
900281ba:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900281be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900281c2:	ea49 0202 	orr.w	r2, r9, r2
900281c6:	f815 9000 	ldrb.w	r9, [r5, r0]
900281ca:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900281ce:	f824 2c02 	strh.w	r2, [r4, #-2]
900281d2:	e7c6      	b.n	90028162 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900281d4:	4631      	mov	r1, r6
900281d6:	f8dd e00c 	ldr.w	lr, [sp, #12]
900281da:	e7c2      	b.n	90028162 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900281dc:	d111      	bne.n	90028202 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900281de:	7809      	ldrb	r1, [r1, #0]
900281e0:	0909      	lsrs	r1, r1, #4
900281e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900281e6:	186c      	adds	r4, r5, r1
900281e8:	5c69      	ldrb	r1, [r5, r1]
900281ea:	78a2      	ldrb	r2, [r4, #2]
900281ec:	7864      	ldrb	r4, [r4, #1]
900281ee:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900281f2:	00e4      	lsls	r4, r4, #3
900281f4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900281f8:	4322      	orrs	r2, r4
900281fa:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900281fe:	f820 2b02 	strh.w	r2, [r0], #2
90028202:	9a03      	ldr	r2, [sp, #12]
90028204:	f8bc 4000 	ldrh.w	r4, [ip]
90028208:	9905      	ldr	r1, [sp, #20]
9002820a:	1aa4      	subs	r4, r4, r2
9002820c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90028210:	440a      	add	r2, r1
90028212:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028216:	fb92 f2f8 	sdiv	r2, r2, r8
9002821a:	4416      	add	r6, r2
9002821c:	e780      	b.n	90028120 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002821e:	4b04      	ldr	r3, [pc, #16]	@ (90028230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028220:	6818      	ldr	r0, [r3, #0]
90028222:	6803      	ldr	r3, [r0, #0]
90028224:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028226:	4798      	blx	r3
90028228:	b00f      	add	sp, #60	@ 0x3c
9002822a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002822e:	bf00      	nop
90028230:	2402198c 	.word	0x2402198c
90028234:	24021986 	.word	0x24021986
90028238:	fffff800 	.word	0xfffff800

9002823c <CRC_Lock>:
9002823c:	4a2d      	ldr	r2, [pc, #180]	@ (900282f4 <CRC_Lock+0xb8>)
9002823e:	b530      	push	{r4, r5, lr}
90028240:	6813      	ldr	r3, [r2, #0]
90028242:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028246:	f023 0301 	bic.w	r3, r3, #1
9002824a:	6013      	str	r3, [r2, #0]
9002824c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028250:	4b29      	ldr	r3, [pc, #164]	@ (900282f8 <CRC_Lock+0xbc>)
90028252:	681c      	ldr	r4, [r3, #0]
90028254:	4014      	ands	r4, r2
90028256:	42ac      	cmp	r4, r5
90028258:	d005      	beq.n	90028266 <CRC_Lock+0x2a>
9002825a:	681c      	ldr	r4, [r3, #0]
9002825c:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028260:	4014      	ands	r4, r2
90028262:	42ac      	cmp	r4, r5
90028264:	d125      	bne.n	900282b2 <CRC_Lock+0x76>
90028266:	4b25      	ldr	r3, [pc, #148]	@ (900282fc <CRC_Lock+0xc0>)
90028268:	681b      	ldr	r3, [r3, #0]
9002826a:	2b00      	cmp	r3, #0
9002826c:	d139      	bne.n	900282e2 <CRC_Lock+0xa6>
9002826e:	4b24      	ldr	r3, [pc, #144]	@ (90028300 <CRC_Lock+0xc4>)
90028270:	681a      	ldr	r2, [r3, #0]
90028272:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028276:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002827a:	d00d      	beq.n	90028298 <CRC_Lock+0x5c>
9002827c:	681a      	ldr	r2, [r3, #0]
9002827e:	f240 4483 	movw	r4, #1155	@ 0x483
90028282:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028286:	42a2      	cmp	r2, r4
90028288:	d006      	beq.n	90028298 <CRC_Lock+0x5c>
9002828a:	681b      	ldr	r3, [r3, #0]
9002828c:	f240 4285 	movw	r2, #1157	@ 0x485
90028290:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028294:	4293      	cmp	r3, r2
90028296:	d124      	bne.n	900282e2 <CRC_Lock+0xa6>
90028298:	4b1a      	ldr	r3, [pc, #104]	@ (90028304 <CRC_Lock+0xc8>)
9002829a:	2201      	movs	r2, #1
9002829c:	601a      	str	r2, [r3, #0]
9002829e:	681a      	ldr	r2, [r3, #0]
900282a0:	2a00      	cmp	r2, #0
900282a2:	d1fc      	bne.n	9002829e <CRC_Lock+0x62>
900282a4:	4b18      	ldr	r3, [pc, #96]	@ (90028308 <CRC_Lock+0xcc>)
900282a6:	6018      	str	r0, [r3, #0]
900282a8:	6818      	ldr	r0, [r3, #0]
900282aa:	1a43      	subs	r3, r0, r1
900282ac:	4258      	negs	r0, r3
900282ae:	4158      	adcs	r0, r3
900282b0:	e00e      	b.n	900282d0 <CRC_Lock+0x94>
900282b2:	681b      	ldr	r3, [r3, #0]
900282b4:	4013      	ands	r3, r2
900282b6:	f24d 2220 	movw	r2, #53792	@ 0xd220
900282ba:	4293      	cmp	r3, r2
900282bc:	d111      	bne.n	900282e2 <CRC_Lock+0xa6>
900282be:	4b13      	ldr	r3, [pc, #76]	@ (9002830c <CRC_Lock+0xd0>)
900282c0:	f240 4286 	movw	r2, #1158	@ 0x486
900282c4:	681b      	ldr	r3, [r3, #0]
900282c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
900282ca:	4293      	cmp	r3, r2
900282cc:	d001      	beq.n	900282d2 <CRC_Lock+0x96>
900282ce:	2000      	movs	r0, #0
900282d0:	bd30      	pop	{r4, r5, pc}
900282d2:	4b0f      	ldr	r3, [pc, #60]	@ (90028310 <CRC_Lock+0xd4>)
900282d4:	2201      	movs	r2, #1
900282d6:	601a      	str	r2, [r3, #0]
900282d8:	681a      	ldr	r2, [r3, #0]
900282da:	2a00      	cmp	r2, #0
900282dc:	d1fc      	bne.n	900282d8 <CRC_Lock+0x9c>
900282de:	4b0d      	ldr	r3, [pc, #52]	@ (90028314 <CRC_Lock+0xd8>)
900282e0:	e7e1      	b.n	900282a6 <CRC_Lock+0x6a>
900282e2:	4b0d      	ldr	r3, [pc, #52]	@ (90028318 <CRC_Lock+0xdc>)
900282e4:	2201      	movs	r2, #1
900282e6:	601a      	str	r2, [r3, #0]
900282e8:	681a      	ldr	r2, [r3, #0]
900282ea:	2a00      	cmp	r2, #0
900282ec:	d1fc      	bne.n	900282e8 <CRC_Lock+0xac>
900282ee:	4b0b      	ldr	r3, [pc, #44]	@ (9002831c <CRC_Lock+0xe0>)
900282f0:	e7d9      	b.n	900282a6 <CRC_Lock+0x6a>
900282f2:	bf00      	nop
900282f4:	e0002000 	.word	0xe0002000
900282f8:	e000ed00 	.word	0xe000ed00
900282fc:	e0042000 	.word	0xe0042000
90028300:	5c001000 	.word	0x5c001000
90028304:	58024c08 	.word	0x58024c08
90028308:	58024c00 	.word	0x58024c00
9002830c:	46008ff0 	.word	0x46008ff0
90028310:	46024c08 	.word	0x46024c08
90028314:	46024c00 	.word	0x46024c00
90028318:	40023008 	.word	0x40023008
9002831c:	40023000 	.word	0x40023000

90028320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028320:	6101      	str	r1, [r0, #16]
90028322:	4770      	bx	lr

90028324 <_ZN8touchgfx8Gestures4tickEv>:
90028324:	7b83      	ldrb	r3, [r0, #14]
90028326:	b14b      	cbz	r3, 9002833c <_ZN8touchgfx8Gestures4tickEv+0x18>
90028328:	8903      	ldrh	r3, [r0, #8]
9002832a:	3301      	adds	r3, #1
9002832c:	b29b      	uxth	r3, r3
9002832e:	2b07      	cmp	r3, #7
90028330:	8103      	strh	r3, [r0, #8]
90028332:	bf81      	itttt	hi
90028334:	2300      	movhi	r3, #0
90028336:	8143      	strhhi	r3, [r0, #10]
90028338:	8183      	strhhi	r3, [r0, #12]
9002833a:	7383      	strbhi	r3, [r0, #14]
9002833c:	4770      	bx	lr
	...

90028340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028340:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028344:	4698      	mov	r8, r3
90028346:	8883      	ldrh	r3, [r0, #4]
90028348:	4604      	mov	r4, r0
9002834a:	4617      	mov	r7, r2
9002834c:	f8ad 3006 	strh.w	r3, [sp, #6]
90028350:	eba8 0303 	sub.w	r3, r8, r3
90028354:	4a19      	ldr	r2, [pc, #100]	@ (900283bc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028356:	460e      	mov	r6, r1
90028358:	b21b      	sxth	r3, r3
9002835a:	88c1      	ldrh	r1, [r0, #6]
9002835c:	9200      	str	r2, [sp, #0]
9002835e:	2000      	movs	r0, #0
90028360:	2b00      	cmp	r3, #0
90028362:	8aa2      	ldrh	r2, [r4, #20]
90028364:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90028368:	bfb8      	it	lt
9002836a:	425b      	neglt	r3, r3
9002836c:	f88d 0004 	strb.w	r0, [sp, #4]
90028370:	f8ad 1008 	strh.w	r1, [sp, #8]
90028374:	b21b      	sxth	r3, r3
90028376:	f8ad 800a 	strh.w	r8, [sp, #10]
9002837a:	f8ad 500c 	strh.w	r5, [sp, #12]
9002837e:	4293      	cmp	r3, r2
90028380:	dc07      	bgt.n	90028392 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028382:	1a69      	subs	r1, r5, r1
90028384:	b209      	sxth	r1, r1
90028386:	2900      	cmp	r1, #0
90028388:	bfb8      	it	lt
9002838a:	4249      	neglt	r1, r1
9002838c:	b209      	sxth	r1, r1
9002838e:	428a      	cmp	r2, r1
90028390:	da10      	bge.n	900283b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90028392:	6920      	ldr	r0, [r4, #16]
90028394:	4669      	mov	r1, sp
90028396:	eba8 0606 	sub.w	r6, r8, r6
9002839a:	1bef      	subs	r7, r5, r7
9002839c:	6803      	ldr	r3, [r0, #0]
9002839e:	685b      	ldr	r3, [r3, #4]
900283a0:	4798      	blx	r3
900283a2:	2300      	movs	r3, #0
900283a4:	2001      	movs	r0, #1
900283a6:	8166      	strh	r6, [r4, #10]
900283a8:	8123      	strh	r3, [r4, #8]
900283aa:	81a7      	strh	r7, [r4, #12]
900283ac:	f8a4 8004 	strh.w	r8, [r4, #4]
900283b0:	80e5      	strh	r5, [r4, #6]
900283b2:	73a0      	strb	r0, [r4, #14]
900283b4:	b004      	add	sp, #16
900283b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900283ba:	bf00      	nop
900283bc:	9002d754 	.word	0x9002d754

900283c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900283c0:	b5f0      	push	{r4, r5, r6, r7, lr}
900283c2:	461e      	mov	r6, r3
900283c4:	1e4b      	subs	r3, r1, #1
900283c6:	b085      	sub	sp, #20
900283c8:	4604      	mov	r4, r0
900283ca:	2b01      	cmp	r3, #1
900283cc:	460d      	mov	r5, r1
900283ce:	4617      	mov	r7, r2
900283d0:	d84b      	bhi.n	9002846a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900283d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900283d6:	1cd3      	adds	r3, r2, #3
900283d8:	b29b      	uxth	r3, r3
900283da:	2b06      	cmp	r3, #6
900283dc:	d916      	bls.n	9002840c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900283de:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90028480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900283e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900283e6:	f8cd c004 	str.w	ip, [sp, #4]
900283ea:	f04f 0c00 	mov.w	ip, #0
900283ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900283f2:	6900      	ldr	r0, [r0, #16]
900283f4:	f8ad 100c 	strh.w	r1, [sp, #12]
900283f8:	a901      	add	r1, sp, #4
900283fa:	f88d c008 	strb.w	ip, [sp, #8]
900283fe:	f8ad 200a 	strh.w	r2, [sp, #10]
90028402:	f8ad 300e 	strh.w	r3, [sp, #14]
90028406:	6803      	ldr	r3, [r0, #0]
90028408:	689b      	ldr	r3, [r3, #8]
9002840a:	4798      	blx	r3
9002840c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028410:	1cd3      	adds	r3, r2, #3
90028412:	b29b      	uxth	r3, r3
90028414:	2b06      	cmp	r3, #6
90028416:	d916      	bls.n	90028446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028418:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90028480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002841c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028420:	f8cd c004 	str.w	ip, [sp, #4]
90028424:	f04f 0c01 	mov.w	ip, #1
90028428:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002842c:	6920      	ldr	r0, [r4, #16]
9002842e:	f8ad 100c 	strh.w	r1, [sp, #12]
90028432:	a901      	add	r1, sp, #4
90028434:	f88d c008 	strb.w	ip, [sp, #8]
90028438:	f8ad 200a 	strh.w	r2, [sp, #10]
9002843c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028440:	6803      	ldr	r3, [r0, #0]
90028442:	689b      	ldr	r3, [r3, #8]
90028444:	4798      	blx	r3
90028446:	4b0d      	ldr	r3, [pc, #52]	@ (9002847c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028448:	a901      	add	r1, sp, #4
9002844a:	6920      	ldr	r0, [r4, #16]
9002844c:	9301      	str	r3, [sp, #4]
9002844e:	2300      	movs	r3, #0
90028450:	f88d 5008 	strb.w	r5, [sp, #8]
90028454:	f8ad 700a 	strh.w	r7, [sp, #10]
90028458:	f8ad 600c 	strh.w	r6, [sp, #12]
9002845c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028460:	6803      	ldr	r3, [r0, #0]
90028462:	681b      	ldr	r3, [r3, #0]
90028464:	4798      	blx	r3
90028466:	b005      	add	sp, #20
90028468:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002846a:	2900      	cmp	r1, #0
9002846c:	d1eb      	bne.n	90028446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002846e:	80a2      	strh	r2, [r4, #4]
90028470:	80c6      	strh	r6, [r0, #6]
90028472:	60a1      	str	r1, [r4, #8]
90028474:	81a1      	strh	r1, [r4, #12]
90028476:	73a1      	strb	r1, [r4, #14]
90028478:	e7e5      	b.n	90028446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002847a:	bf00      	nop
9002847c:	9002d740 	.word	0x9002d740
90028480:	9002d768 	.word	0x9002d768

90028484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90028484:	10c9      	asrs	r1, r1, #3
90028486:	2900      	cmp	r1, #0
90028488:	bfb8      	it	lt
9002848a:	4249      	neglt	r1, r1
9002848c:	2801      	cmp	r0, #1
9002848e:	d108      	bne.n	900284a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90028490:	f3c1 0008 	ubfx	r0, r1, #0, #9
90028494:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90028498:	4601      	mov	r1, r0
9002849a:	dd02      	ble.n	900284a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002849c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
900284a0:	4770      	bx	lr
900284a2:	29ff      	cmp	r1, #255	@ 0xff
900284a4:	bfa8      	it	ge
900284a6:	21ff      	movge	r1, #255	@ 0xff
900284a8:	4608      	mov	r0, r1
900284aa:	4770      	bx	lr

900284ac <_ZN8touchgfx10Rasterizer6lineToEii>:
900284ac:	b410      	push	{r4}
900284ae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900284b2:	429c      	cmp	r4, r3
900284b4:	d803      	bhi.n	900284be <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900284b6:	f85d 4b04 	ldr.w	r4, [sp], #4
900284ba:	f7ec b84f 	b.w	9001455c <_ZN8touchgfx7Outline6lineToEii>
900284be:	f85d 4b04 	ldr.w	r4, [sp], #4
900284c2:	4770      	bx	lr

900284c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900284c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900284c8:	b08b      	sub	sp, #44	@ 0x2c
900284ca:	4606      	mov	r6, r0
900284cc:	468a      	mov	sl, r1
900284ce:	e9cd 2306 	strd	r2, r3, [sp, #24]
900284d2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900284d6:	9308      	str	r3, [sp, #32]
900284d8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900284dc:	9309      	str	r3, [sp, #36]	@ 0x24
900284de:	f7ec f9a8 	bl	90014832 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900284e2:	68b5      	ldr	r5, [r6, #8]
900284e4:	4604      	mov	r4, r0
900284e6:	2d00      	cmp	r5, #0
900284e8:	d044      	beq.n	90028574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900284ea:	6873      	ldr	r3, [r6, #4]
900284ec:	42ab      	cmp	r3, r5
900284ee:	d33d      	bcc.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900284f0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900284f4:	f04f 0800 	mov.w	r8, #0
900284f8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
900284fc:	eb02 0b03 	add.w	fp, r2, r3
90028500:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028504:	fb02 1203 	mla	r2, r2, r3, r1
90028508:	9205      	str	r2, [sp, #20]
9002850a:	1e6a      	subs	r2, r5, #1
9002850c:	9204      	str	r2, [sp, #16]
9002850e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028512:	f9b4 7000 	ldrsh.w	r7, [r4]
90028516:	454b      	cmp	r3, r9
90028518:	463a      	mov	r2, r7
9002851a:	d008      	beq.n	9002852e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002851c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90028520:	eb03 0b09 	add.w	fp, r3, r9
90028524:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028528:	fb03 1309 	mla	r3, r3, r9, r1
9002852c:	9305      	str	r3, [sp, #20]
9002852e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028532:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028536:	4498      	add	r8, r3
90028538:	9b04      	ldr	r3, [sp, #16]
9002853a:	3b01      	subs	r3, #1
9002853c:	9304      	str	r3, [sp, #16]
9002853e:	9b04      	ldr	r3, [sp, #16]
90028540:	3301      	adds	r3, #1
90028542:	d015      	beq.n	90028570 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028544:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028548:	42bb      	cmp	r3, r7
9002854a:	d117      	bne.n	9002857c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002854c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028550:	9b04      	ldr	r3, [sp, #16]
90028552:	4548      	cmp	r0, r9
90028554:	f103 33ff 	add.w	r3, r3, #4294967295
90028558:	d17d      	bne.n	90028656 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002855a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002855e:	4401      	add	r1, r0
90028560:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028564:	4480      	add	r8, r0
90028566:	e7e9      	b.n	9002853c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028568:	461f      	mov	r7, r3
9002856a:	e042      	b.n	900285f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002856c:	2000      	movs	r0, #0
9002856e:	e002      	b.n	90028576 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028570:	2900      	cmp	r1, #0
90028572:	d16d      	bne.n	90028650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028574:	2001      	movs	r0, #1
90028576:	b00b      	add	sp, #44	@ 0x2c
90028578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002857c:	b379      	cbz	r1, 900285de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002857e:	2f00      	cmp	r7, #0
90028580:	db29      	blt.n	900285d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028582:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028586:	42bb      	cmp	r3, r7
90028588:	dd25      	ble.n	900285d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002858a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002858e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90028592:	f7ff ff77 	bl	90028484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90028596:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028598:	fb10 f003 	smulbb	r0, r0, r3
9002859c:	b280      	uxth	r0, r0
9002859e:	1c41      	adds	r1, r0, #1
900285a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900285a4:	1209      	asrs	r1, r1, #8
900285a6:	f011 0fff 	tst.w	r1, #255	@ 0xff
900285aa:	d014      	beq.n	900285d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900285ac:	b2c9      	uxtb	r1, r1
900285ae:	9808      	ldr	r0, [sp, #32]
900285b0:	b2ba      	uxth	r2, r7
900285b2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900285b4:	9102      	str	r1, [sp, #8]
900285b6:	2101      	movs	r1, #1
900285b8:	4413      	add	r3, r2
900285ba:	4402      	add	r2, r0
900285bc:	9101      	str	r1, [sp, #4]
900285be:	fa0f f18b 	sxth.w	r1, fp
900285c2:	f8da 0000 	ldr.w	r0, [sl]
900285c6:	b21b      	sxth	r3, r3
900285c8:	9100      	str	r1, [sp, #0]
900285ca:	b212      	sxth	r2, r2
900285cc:	6941      	ldr	r1, [r0, #20]
900285ce:	4650      	mov	r0, sl
900285d0:	460d      	mov	r5, r1
900285d2:	9905      	ldr	r1, [sp, #20]
900285d4:	47a8      	blx	r5
900285d6:	9b04      	ldr	r3, [sp, #16]
900285d8:	1c7a      	adds	r2, r7, #1
900285da:	3301      	adds	r3, #1
900285dc:	d0ca      	beq.n	90028574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900285de:	f9b4 7000 	ldrsh.w	r7, [r4]
900285e2:	1abb      	subs	r3, r7, r2
900285e4:	2b00      	cmp	r3, #0
900285e6:	dd31      	ble.n	9002864c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900285e8:	2a00      	cmp	r2, #0
900285ea:	dabd      	bge.n	90028568 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900285ec:	2f00      	cmp	r7, #0
900285ee:	dd2d      	ble.n	9002864c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900285f0:	2200      	movs	r2, #0
900285f2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900285f6:	19d1      	adds	r1, r2, r7
900285f8:	4299      	cmp	r1, r3
900285fa:	db02      	blt.n	90028602 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900285fc:	1a9f      	subs	r7, r3, r2
900285fe:	2f00      	cmp	r7, #0
90028600:	dd24      	ble.n	9002864c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028602:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028606:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002860a:	f7ff ff3b 	bl	90028484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002860e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028610:	fb10 f003 	smulbb	r0, r0, r3
90028614:	b280      	uxth	r0, r0
90028616:	1c41      	adds	r1, r0, #1
90028618:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002861c:	1209      	asrs	r1, r1, #8
9002861e:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028622:	d013      	beq.n	9002864c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028624:	b292      	uxth	r2, r2
90028626:	9808      	ldr	r0, [sp, #32]
90028628:	b2c9      	uxtb	r1, r1
9002862a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002862c:	b23f      	sxth	r7, r7
9002862e:	4413      	add	r3, r2
90028630:	9102      	str	r1, [sp, #8]
90028632:	4402      	add	r2, r0
90028634:	fa0f f18b 	sxth.w	r1, fp
90028638:	f8da 0000 	ldr.w	r0, [sl]
9002863c:	b21b      	sxth	r3, r3
9002863e:	9100      	str	r1, [sp, #0]
90028640:	b212      	sxth	r2, r2
90028642:	9701      	str	r7, [sp, #4]
90028644:	9905      	ldr	r1, [sp, #20]
90028646:	6947      	ldr	r7, [r0, #20]
90028648:	4650      	mov	r0, sl
9002864a:	47b8      	blx	r7
9002864c:	464b      	mov	r3, r9
9002864e:	e75e      	b.n	9002850e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028650:	2f00      	cmp	r7, #0
90028652:	da96      	bge.n	90028582 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028654:	e78e      	b.n	90028574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028656:	2900      	cmp	r1, #0
90028658:	d0f8      	beq.n	9002864c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002865a:	e790      	b.n	9002857e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002865c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002865c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028660:	461e      	mov	r6, r3
90028662:	4b36      	ldr	r3, [pc, #216]	@ (9002873c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90028664:	2500      	movs	r5, #0
90028666:	f100 0814 	add.w	r8, r0, #20
9002866a:	4604      	mov	r4, r0
9002866c:	4617      	mov	r7, r2
9002866e:	e9c0 3100 	strd	r3, r1, [r0]
90028672:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90028676:	8185      	strh	r5, [r0, #12]
90028678:	8103      	strh	r3, [r0, #8]
9002867a:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002867e:	81c5      	strh	r5, [r0, #14]
90028680:	7283      	strb	r3, [r0, #10]
90028682:	8205      	strh	r5, [r0, #16]
90028684:	8245      	strh	r5, [r0, #18]
90028686:	4640      	mov	r0, r8
90028688:	f7eb faae 	bl	90013be8 <_ZN8touchgfx7OutlineC1Ev>
9002868c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90028690:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90028694:	466b      	mov	r3, sp
90028696:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002869a:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002869e:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
900286a2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
900286a6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
900286aa:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
900286ae:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
900286b2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
900286b6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
900286ba:	6830      	ldr	r0, [r6, #0]
900286bc:	6871      	ldr	r1, [r6, #4]
900286be:	8872      	ldrh	r2, [r6, #2]
900286c0:	8835      	ldrh	r5, [r6, #0]
900286c2:	c303      	stmia	r3!, {r0, r1}
900286c4:	887b      	ldrh	r3, [r7, #2]
900286c6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900286ca:	4413      	add	r3, r2
900286cc:	883a      	ldrh	r2, [r7, #0]
900286ce:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900286d2:	442a      	add	r2, r5
900286d4:	81e3      	strh	r3, [r4, #14]
900286d6:	8220      	strh	r0, [r4, #16]
900286d8:	4668      	mov	r0, sp
900286da:	81a2      	strh	r2, [r4, #12]
900286dc:	8261      	strh	r1, [r4, #18]
900286de:	4639      	mov	r1, r7
900286e0:	f7ed fc5a 	bl	90015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900286e4:	f104 000c 	add.w	r0, r4, #12
900286e8:	f7ed fc2e 	bl	90015f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900286ec:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900286f0:	f8bd 2000 	ldrh.w	r2, [sp]
900286f4:	4640      	mov	r0, r8
900286f6:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
900286fa:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
900286fe:	f7eb fa57 	bl	90013bb0 <_ZN8touchgfx7Outline5resetEv>
90028702:	f9bd 3000 	ldrsh.w	r3, [sp]
90028706:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002870a:	4620      	mov	r0, r4
9002870c:	015b      	lsls	r3, r3, #5
9002870e:	64e3      	str	r3, [r4, #76]	@ 0x4c
90028710:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028714:	015b      	lsls	r3, r3, #5
90028716:	6523      	str	r3, [r4, #80]	@ 0x50
90028718:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002871c:	015b      	lsls	r3, r3, #5
9002871e:	6563      	str	r3, [r4, #84]	@ 0x54
90028720:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90028724:	015b      	lsls	r3, r3, #5
90028726:	65a3      	str	r3, [r4, #88]	@ 0x58
90028728:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002872c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90028730:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90028734:	b002      	add	sp, #8
90028736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002873a:	bf00      	nop
9002873c:	9002daa4 	.word	0x9002daa4

90028740 <_ZN8touchgfx6Canvas5closeEv>:
90028740:	b538      	push	{r3, r4, r5, lr}
90028742:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90028746:	4604      	mov	r4, r0
90028748:	b193      	cbz	r3, 90028770 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002874a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002874e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90028752:	4213      	tst	r3, r2
90028754:	d10c      	bne.n	90028770 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028756:	f100 0514 	add.w	r5, r0, #20
9002875a:	b123      	cbz	r3, 90028766 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002875c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90028760:	4628      	mov	r0, r5
90028762:	f7ff fea3 	bl	900284ac <_ZN8touchgfx10Rasterizer6lineToEii>
90028766:	4628      	mov	r0, r5
90028768:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002876c:	f7ff fe9e 	bl	900284ac <_ZN8touchgfx10Rasterizer6lineToEii>
90028770:	2300      	movs	r3, #0
90028772:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028776:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002877a:	4298      	cmp	r0, r3
9002877c:	bf34      	ite	cc
9002877e:	2000      	movcc	r0, #0
90028780:	2001      	movcs	r0, #1
90028782:	bd38      	pop	{r3, r4, r5, pc}

90028784 <_ZN8touchgfx6Canvas6renderEh>:
90028784:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028788:	7a85      	ldrb	r5, [r0, #10]
9002878a:	4604      	mov	r4, r0
9002878c:	4369      	muls	r1, r5
9002878e:	1c4d      	adds	r5, r1, #1
90028790:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90028794:	122d      	asrs	r5, r5, #8
90028796:	f000 8098 	beq.w	900288ca <_ZN8touchgfx6Canvas6renderEh+0x146>
9002879a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002879e:	2b00      	cmp	r3, #0
900287a0:	f000 8093 	beq.w	900288ca <_ZN8touchgfx6Canvas6renderEh+0x146>
900287a4:	f7ff ffcc 	bl	90028740 <_ZN8touchgfx6Canvas5closeEv>
900287a8:	4607      	mov	r7, r0
900287aa:	2800      	cmp	r0, #0
900287ac:	d045      	beq.n	9002883a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900287ae:	6860      	ldr	r0, [r4, #4]
900287b0:	4e47      	ldr	r6, [pc, #284]	@ (900288d0 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
900287b2:	6803      	ldr	r3, [r0, #0]
900287b4:	6837      	ldr	r7, [r6, #0]
900287b6:	689b      	ldr	r3, [r3, #8]
900287b8:	4798      	blx	r3
900287ba:	4601      	mov	r1, r0
900287bc:	4638      	mov	r0, r7
900287be:	f7e8 fcb7 	bl	90011130 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900287c2:	4607      	mov	r7, r0
900287c4:	f7e8 f84a 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
900287c8:	6803      	ldr	r3, [r0, #0]
900287ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900287cc:	4798      	blx	r3
900287ce:	4680      	mov	r8, r0
900287d0:	f7e8 f844 	bl	9001085c <_ZN8touchgfx3HAL3lcdEv>
900287d4:	6803      	ldr	r3, [r0, #0]
900287d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900287d8:	4798      	blx	r3
900287da:	280b      	cmp	r0, #11
900287dc:	d85a      	bhi.n	90028894 <_ZN8touchgfx6Canvas6renderEh+0x110>
900287de:	e8df f000 	tbb	[pc, r0]
900287e2:	5b50      	.short	0x5b50
900287e4:	3059066b 	.word	0x3059066b
900287e8:	64646440 	.word	0x64646440
900287ec:	6464      	.short	0x6464
900287ee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900287f2:	2208      	movs	r2, #8
900287f4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900287f8:	fb91 f2f2 	sdiv	r2, r1, r2
900287fc:	fb08 2303 	mla	r3, r8, r3, r2
90028800:	441f      	add	r7, r3
90028802:	424b      	negs	r3, r1
90028804:	f001 0107 	and.w	r1, r1, #7
90028808:	f003 0307 	and.w	r3, r3, #7
9002880c:	bf58      	it	pl
9002880e:	4259      	negpl	r1, r3
90028810:	b2c9      	uxtb	r1, r1
90028812:	b2ed      	uxtb	r5, r5
90028814:	463a      	mov	r2, r7
90028816:	fa0f f388 	sxth.w	r3, r8
9002881a:	f104 0014 	add.w	r0, r4, #20
9002881e:	e9cd 1500 	strd	r1, r5, [sp]
90028822:	6861      	ldr	r1, [r4, #4]
90028824:	f7ff fe4e 	bl	900284c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90028828:	4607      	mov	r7, r0
9002882a:	6860      	ldr	r0, [r4, #4]
9002882c:	6803      	ldr	r3, [r0, #0]
9002882e:	691b      	ldr	r3, [r3, #16]
90028830:	4798      	blx	r3
90028832:	6830      	ldr	r0, [r6, #0]
90028834:	6803      	ldr	r3, [r0, #0]
90028836:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028838:	4798      	blx	r3
9002883a:	4638      	mov	r0, r7
9002883c:	b002      	add	sp, #8
9002883e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028842:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028846:	2204      	movs	r2, #4
90028848:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002884c:	fb91 f2f2 	sdiv	r2, r1, r2
90028850:	fb08 2303 	mla	r3, r8, r3, r2
90028854:	441f      	add	r7, r3
90028856:	424b      	negs	r3, r1
90028858:	f001 0103 	and.w	r1, r1, #3
9002885c:	f003 0303 	and.w	r3, r3, #3
90028860:	e7d4      	b.n	9002880c <_ZN8touchgfx6Canvas6renderEh+0x88>
90028862:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028866:	2202      	movs	r2, #2
90028868:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002886c:	2900      	cmp	r1, #0
9002886e:	fb91 f2f2 	sdiv	r2, r1, r2
90028872:	f001 0101 	and.w	r1, r1, #1
90028876:	fb08 2303 	mla	r3, r8, r3, r2
9002887a:	bfb8      	it	lt
9002887c:	4249      	neglt	r1, r1
9002887e:	441f      	add	r7, r3
90028880:	e7c6      	b.n	90028810 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90028882:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028886:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002888a:	fb08 f303 	mul.w	r3, r8, r3
9002888e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90028892:	441f      	add	r7, r3
90028894:	2100      	movs	r1, #0
90028896:	e7bc      	b.n	90028812 <_ZN8touchgfx6Canvas6renderEh+0x8e>
90028898:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002889c:	2103      	movs	r1, #3
9002889e:	fb08 f203 	mul.w	r2, r8, r3
900288a2:	89a3      	ldrh	r3, [r4, #12]
900288a4:	fb13 2301 	smlabb	r3, r3, r1, r2
900288a8:	e7f3      	b.n	90028892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900288aa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900288ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900288b2:	fb08 2303 	mla	r3, r8, r3, r2
900288b6:	e7ec      	b.n	90028892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900288b8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900288bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900288c0:	fb08 f303 	mul.w	r3, r8, r3
900288c4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900288c8:	e7e3      	b.n	90028892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900288ca:	2701      	movs	r7, #1
900288cc:	e7b5      	b.n	9002883a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900288ce:	bf00      	nop
900288d0:	2402198c 	.word	0x2402198c

900288d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900288d4:	4b06      	ldr	r3, [pc, #24]	@ (900288f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900288d6:	b510      	push	{r4, lr}
900288d8:	781b      	ldrb	r3, [r3, #0]
900288da:	2b01      	cmp	r3, #1
900288dc:	d107      	bne.n	900288ee <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900288de:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900288e2:	680b      	ldr	r3, [r1, #0]
900288e4:	6814      	ldr	r4, [r2, #0]
900288e6:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900288ea:	6013      	str	r3, [r2, #0]
900288ec:	600c      	str	r4, [r1, #0]
900288ee:	bd10      	pop	{r4, pc}
900288f0:	24021984 	.word	0x24021984

900288f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900288f4:	b513      	push	{r0, r1, r4, lr}
900288f6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900288fa:	4604      	mov	r4, r0
900288fc:	e9cd 2100 	strd	r2, r1, [sp]
90028900:	b9a3      	cbnz	r3, 9002892c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90028902:	466a      	mov	r2, sp
90028904:	a901      	add	r1, sp, #4
90028906:	4620      	mov	r0, r4
90028908:	f7ff ffe4 	bl	900288d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002890c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002890e:	9901      	ldr	r1, [sp, #4]
90028910:	9a00      	ldr	r2, [sp, #0]
90028912:	1ac9      	subs	r1, r1, r3
90028914:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90028916:	1ad2      	subs	r2, r2, r3
90028918:	9101      	str	r1, [sp, #4]
9002891a:	2a00      	cmp	r2, #0
9002891c:	9200      	str	r2, [sp, #0]
9002891e:	da0b      	bge.n	90028938 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90028920:	2301      	movs	r3, #1
90028922:	2900      	cmp	r1, #0
90028924:	da0e      	bge.n	90028944 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90028926:	f043 0304 	orr.w	r3, r3, #4
9002892a:	e013      	b.n	90028954 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002892c:	f7ff ff08 	bl	90028740 <_ZN8touchgfx6Canvas5closeEv>
90028930:	2800      	cmp	r0, #0
90028932:	d1e6      	bne.n	90028902 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90028934:	b002      	add	sp, #8
90028936:	bd10      	pop	{r4, pc}
90028938:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002893a:	429a      	cmp	r2, r3
9002893c:	bfac      	ite	ge
9002893e:	2302      	movge	r3, #2
90028940:	2300      	movlt	r3, #0
90028942:	e7ee      	b.n	90028922 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90028944:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90028946:	4281      	cmp	r1, r0
90028948:	bfac      	ite	ge
9002894a:	2008      	movge	r0, #8
9002894c:	2000      	movlt	r0, #0
9002894e:	4318      	orrs	r0, r3
90028950:	b2c3      	uxtb	r3, r0
90028952:	b158      	cbz	r0, 9002896c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90028954:	2200      	movs	r2, #0
90028956:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002895a:	9901      	ldr	r1, [sp, #4]
9002895c:	9a00      	ldr	r2, [sp, #0]
9002895e:	66e1      	str	r1, [r4, #108]	@ 0x6c
90028960:	6722      	str	r2, [r4, #112]	@ 0x70
90028962:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90028966:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002896a:	e7e3      	b.n	90028934 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002896c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028970:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028974:	4298      	cmp	r0, r3
90028976:	d803      	bhi.n	90028980 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90028978:	f104 0014 	add.w	r0, r4, #20
9002897c:	f7eb fe08 	bl	90014590 <_ZN8touchgfx7Outline6moveToEii>
90028980:	2301      	movs	r3, #1
90028982:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028986:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002898a:	2300      	movs	r3, #0
9002898c:	e7e5      	b.n	9002895a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002898e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002898e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90028990:	ab02      	add	r3, sp, #8
90028992:	4604      	mov	r4, r0
90028994:	9101      	str	r1, [sp, #4]
90028996:	a901      	add	r1, sp, #4
90028998:	f843 2d08 	str.w	r2, [r3, #-8]!
9002899c:	461a      	mov	r2, r3
9002899e:	f7ff ff99 	bl	900288d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900289a2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900289a4:	9901      	ldr	r1, [sp, #4]
900289a6:	9a00      	ldr	r2, [sp, #0]
900289a8:	1ac9      	subs	r1, r1, r3
900289aa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900289ac:	1ad2      	subs	r2, r2, r3
900289ae:	9101      	str	r1, [sp, #4]
900289b0:	2a00      	cmp	r2, #0
900289b2:	9200      	str	r2, [sp, #0]
900289b4:	db1c      	blt.n	900289f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900289b6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900289b8:	429a      	cmp	r2, r3
900289ba:	bfac      	ite	ge
900289bc:	2002      	movge	r0, #2
900289be:	2000      	movlt	r0, #0
900289c0:	2900      	cmp	r1, #0
900289c2:	db17      	blt.n	900289f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900289c4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900289c6:	4299      	cmp	r1, r3
900289c8:	bfac      	ite	ge
900289ca:	2308      	movge	r3, #8
900289cc:	2300      	movlt	r3, #0
900289ce:	4303      	orrs	r3, r0
900289d0:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
900289d4:	b2dd      	uxtb	r5, r3
900289d6:	b978      	cbnz	r0, 900289f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900289d8:	f104 0014 	add.w	r0, r4, #20
900289dc:	f7ff fd66 	bl	900284ac <_ZN8touchgfx10Rasterizer6lineToEii>
900289e0:	9b01      	ldr	r3, [sp, #4]
900289e2:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
900289e6:	6623      	str	r3, [r4, #96]	@ 0x60
900289e8:	9b00      	ldr	r3, [sp, #0]
900289ea:	6663      	str	r3, [r4, #100]	@ 0x64
900289ec:	b002      	add	sp, #8
900289ee:	bd70      	pop	{r4, r5, r6, pc}
900289f0:	2001      	movs	r0, #1
900289f2:	e7e5      	b.n	900289c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900289f4:	2304      	movs	r3, #4
900289f6:	e7ea      	b.n	900289ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900289f8:	b113      	cbz	r3, 90028a00 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900289fa:	ea10 0305 	ands.w	r3, r0, r5
900289fe:	d11c      	bne.n	90028a3a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90028a00:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90028a04:	f104 0614 	add.w	r6, r4, #20
90028a08:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90028a0c:	b98b      	cbnz	r3, 90028a32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90028a0e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028a12:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028a16:	4298      	cmp	r0, r3
90028a18:	d802      	bhi.n	90028a20 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90028a1a:	4630      	mov	r0, r6
90028a1c:	f7eb fdb8 	bl	90014590 <_ZN8touchgfx7Outline6moveToEii>
90028a20:	2301      	movs	r3, #1
90028a22:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028a26:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90028a2a:	4630      	mov	r0, r6
90028a2c:	e9dd 2100 	ldrd	r2, r1, [sp]
90028a30:	e7d4      	b.n	900289dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90028a32:	4630      	mov	r0, r6
90028a34:	f7ff fd3a 	bl	900284ac <_ZN8touchgfx10Rasterizer6lineToEii>
90028a38:	e7f7      	b.n	90028a2a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90028a3a:	461d      	mov	r5, r3
90028a3c:	e7d0      	b.n	900289e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90028a40 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90028a40:	b538      	push	{r3, r4, r5, lr}
90028a42:	ed2d 8b10 	vpush	{d8-d15}
90028a46:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90028a4a:	4605      	mov	r5, r0
90028a4c:	eeb0 ca40 	vmov.f32	s24, s0
90028a50:	460c      	mov	r4, r1
90028a52:	eef0 ca60 	vmov.f32	s25, s1
90028a56:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90028bb4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90028a5a:	eeb0 da41 	vmov.f32	s26, s2
90028a5e:	eef0 da61 	vmov.f32	s27, s3
90028a62:	eeb0 ea42 	vmov.f32	s28, s4
90028a66:	eef0 ea62 	vmov.f32	s29, s5
90028a6a:	eef0 aa6b 	vmov.f32	s21, s23
90028a6e:	2c08      	cmp	r4, #8
90028a70:	d86e      	bhi.n	90028b50 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90028a72:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90028a76:	ee7d 7aee 	vsub.f32	s15, s27, s29
90028a7a:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90028a7e:	ee3e 7aec 	vsub.f32	s14, s29, s25
90028a82:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90028a86:	ee3c fa0d 	vadd.f32	s30, s24, s26
90028a8a:	ee7c faad 	vadd.f32	s31, s25, s27
90028a8e:	eee6 7a07 	vfma.f32	s15, s12, s14
90028a92:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90028a96:	ee3d aaae 	vadd.f32	s20, s27, s29
90028a9a:	ee2f fa2b 	vmul.f32	s30, s30, s23
90028a9e:	ee6f faab 	vmul.f32	s31, s31, s23
90028aa2:	ee69 9aab 	vmul.f32	s19, s19, s23
90028aa6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90028aaa:	ee2a aa2b 	vmul.f32	s20, s20, s23
90028aae:	ee7f 8a29 	vadd.f32	s17, s30, s19
90028ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ab6:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90028aba:	ee68 8aab 	vmul.f32	s17, s17, s23
90028abe:	bf48      	it	mi
90028ac0:	eef1 7a67 	vnegmi.f32	s15, s15
90028ac4:	ee29 9a2b 	vmul.f32	s18, s18, s23
90028ac8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90028acc:	eef4 7acb 	vcmpe.f32	s15, s22
90028ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ad4:	dd3f      	ble.n	90028b56 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90028ad6:	ee27 7a07 	vmul.f32	s14, s14, s14
90028ada:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028ade:	eea6 7aa6 	vfma.f32	s14, s13, s13
90028ae2:	ee27 7a06 	vmul.f32	s14, s14, s12
90028ae6:	eef4 7ac7 	vcmpe.f32	s15, s14
90028aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028aee:	d847      	bhi.n	90028b80 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90028af0:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90028af4:	ee3e 0aed 	vsub.f32	s0, s29, s27
90028af8:	f000 fa57 	bl	90028faa <atan2f>
90028afc:	eeb0 8a40 	vmov.f32	s16, s0
90028b00:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90028b04:	ee3d 0aec 	vsub.f32	s0, s27, s25
90028b08:	f000 fa4f 	bl	90028faa <atan2f>
90028b0c:	ee38 0a40 	vsub.f32	s0, s16, s0
90028b10:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90028bb8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90028b14:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028b1c:	bf48      	it	mi
90028b1e:	eeb1 0a40 	vnegmi.f32	s0, s0
90028b22:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028b2a:	bfa4      	itt	ge
90028b2c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90028bbc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90028b30:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90028b34:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90028bc0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90028b38:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028b40:	d51e      	bpl.n	90028b80 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90028b42:	eef0 0a49 	vmov.f32	s1, s18
90028b46:	4628      	mov	r0, r5
90028b48:	eeb0 0a68 	vmov.f32	s0, s17
90028b4c:	f7e9 fce8 	bl	90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028b50:	ecbd 8b10 	vpop	{d8-d15}
90028b54:	bd38      	pop	{r3, r4, r5, pc}
90028b56:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90028b5a:	eeb0 7a68 	vmov.f32	s14, s17
90028b5e:	eef0 6a49 	vmov.f32	s13, s18
90028b62:	eea7 7aea 	vfms.f32	s14, s15, s21
90028b66:	ee7c 7aae 	vadd.f32	s15, s25, s29
90028b6a:	eee7 6aea 	vfms.f32	s13, s15, s21
90028b6e:	ee66 7aa6 	vmul.f32	s15, s13, s13
90028b72:	eee7 7a07 	vfma.f32	s15, s14, s14
90028b76:	eef4 7ac6 	vcmpe.f32	s15, s12
90028b7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028b7e:	d9e0      	bls.n	90028b42 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90028b80:	3401      	adds	r4, #1
90028b82:	eef0 0a6c 	vmov.f32	s1, s25
90028b86:	eeb0 0a4c 	vmov.f32	s0, s24
90028b8a:	4628      	mov	r0, r5
90028b8c:	4621      	mov	r1, r4
90028b8e:	eef0 2a49 	vmov.f32	s5, s18
90028b92:	eeb0 2a68 	vmov.f32	s4, s17
90028b96:	eef0 1a6f 	vmov.f32	s3, s31
90028b9a:	eeb0 1a4f 	vmov.f32	s2, s30
90028b9e:	f7ff ff4f 	bl	90028a40 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90028ba2:	eef0 da4a 	vmov.f32	s27, s20
90028ba6:	eeb0 da69 	vmov.f32	s26, s19
90028baa:	eef0 ca49 	vmov.f32	s25, s18
90028bae:	eeb0 ca68 	vmov.f32	s24, s17
90028bb2:	e75c      	b.n	90028a6e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90028bb4:	2edbe6ff 	.word	0x2edbe6ff
90028bb8:	40490fdb 	.word	0x40490fdb
90028bbc:	40c90fdb 	.word	0x40c90fdb
90028bc0:	3dcccccd 	.word	0x3dcccccd

90028bc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90028bc4:	b530      	push	{r4, r5, lr}
90028bc6:	ed2d 8b10 	vpush	{d8-d15}
90028bca:	eef0 8a40 	vmov.f32	s17, s0
90028bce:	b085      	sub	sp, #20
90028bd0:	eef0 9a60 	vmov.f32	s19, s1
90028bd4:	4604      	mov	r4, r0
90028bd6:	eef0 fa41 	vmov.f32	s31, s2
90028bda:	460d      	mov	r5, r1
90028bdc:	eeb0 fa61 	vmov.f32	s30, s3
90028be0:	eef0 ba42 	vmov.f32	s23, s4
90028be4:	eeb0 ca62 	vmov.f32	s24, s5
90028be8:	eef0 aa43 	vmov.f32	s21, s6
90028bec:	eeb0 ba63 	vmov.f32	s22, s7
90028bf0:	2d08      	cmp	r5, #8
90028bf2:	f200 8113 	bhi.w	90028e1c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90028bf6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90028bfa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
90028bfe:	ee7f 6aab 	vadd.f32	s13, s31, s23
90028c02:	ee38 daaf 	vadd.f32	s26, s17, s31
90028c06:	ee26 6a27 	vmul.f32	s12, s12, s15
90028c0a:	ee7c ca0b 	vadd.f32	s25, s24, s22
90028c0e:	ee2d da27 	vmul.f32	s26, s26, s15
90028c12:	ed8d 6a01 	vstr	s12, [sp, #4]
90028c16:	eea6 6aa7 	vfma.f32	s12, s13, s15
90028c1a:	ee6c caa7 	vmul.f32	s25, s25, s15
90028c1e:	eeb0 ea4d 	vmov.f32	s28, s26
90028c22:	ee79 da8f 	vadd.f32	s27, s19, s30
90028c26:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90028c2a:	eea6 eaa7 	vfma.f32	s28, s13, s15
90028c2e:	ee66 6a27 	vmul.f32	s13, s12, s15
90028c32:	ee6d daa7 	vmul.f32	s27, s27, s15
90028c36:	edcd 6a03 	vstr	s13, [sp, #12]
90028c3a:	eef0 6a6c 	vmov.f32	s13, s25
90028c3e:	eef0 ea6d 	vmov.f32	s29, s27
90028c42:	ee2e ea27 	vmul.f32	s28, s28, s15
90028c46:	eee7 6a27 	vfma.f32	s13, s14, s15
90028c4a:	eee7 ea27 	vfma.f32	s29, s14, s15
90028c4e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90028c52:	ee6e eaa7 	vmul.f32	s29, s29, s15
90028c56:	eef0 6a67 	vmov.f32	s13, s15
90028c5a:	ed8d 7a02 	vstr	s14, [sp, #8]
90028c5e:	ed9d 7a03 	vldr	s14, [sp, #12]
90028c62:	ee3e 9a07 	vadd.f32	s18, s28, s14
90028c66:	ed9d 7a02 	vldr	s14, [sp, #8]
90028c6a:	ee3e aa87 	vadd.f32	s20, s29, s14
90028c6e:	ee29 9a27 	vmul.f32	s18, s18, s15
90028c72:	ee2a aa27 	vmul.f32	s20, s20, s15
90028c76:	2d00      	cmp	r5, #0
90028c78:	f000 810b 	beq.w	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028c7c:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90028c80:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90028ed8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90028c84:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90028c88:	ee7b 7a69 	vsub.f32	s15, s22, s19
90028c8c:	ee3f 6aea 	vsub.f32	s12, s31, s21
90028c90:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90028c94:	ee3b 5aea 	vsub.f32	s10, s23, s21
90028c98:	eea6 7a27 	vfma.f32	s14, s12, s15
90028c9c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90028ca0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90028ca4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90028ca8:	eea5 6a27 	vfma.f32	s12, s10, s15
90028cac:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90028cb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cb4:	bf48      	it	mi
90028cb6:	eeb1 7a47 	vnegmi.f32	s14, s14
90028cba:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90028cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cc2:	eeb4 7ae4 	vcmpe.f32	s14, s9
90028cc6:	bf48      	it	mi
90028cc8:	eeb1 6a46 	vnegmi.f32	s12, s12
90028ccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cd0:	f340 80a8 	ble.w	90028e24 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90028cd4:	eeb4 6ae4 	vcmpe.f32	s12, s9
90028cd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cdc:	dd5a      	ble.n	90028d94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90028cde:	ee65 5aa5 	vmul.f32	s11, s11, s11
90028ce2:	ee37 7a06 	vadd.f32	s14, s14, s12
90028ce6:	eee7 5aa7 	vfma.f32	s11, s15, s15
90028cea:	ee27 7a07 	vmul.f32	s14, s14, s14
90028cee:	ee65 7a85 	vmul.f32	s15, s11, s10
90028cf2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cfa:	f200 80ca 	bhi.w	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028cfe:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028d02:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028d06:	f000 f950 	bl	90028faa <atan2f>
90028d0a:	eeb0 8a40 	vmov.f32	s16, s0
90028d0e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90028d12:	ee3f 0a69 	vsub.f32	s0, s30, s19
90028d16:	f000 f948 	bl	90028faa <atan2f>
90028d1a:	ee38 fa40 	vsub.f32	s30, s16, s0
90028d1e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90028d22:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90028d26:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90028d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d2e:	bf48      	it	mi
90028d30:	eeb1 fa4f 	vnegmi.f32	s30, s30
90028d34:	f000 f939 	bl	90028faa <atan2f>
90028d38:	ee30 0a48 	vsub.f32	s0, s0, s16
90028d3c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90028edc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028d40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d48:	eeb4 fae7 	vcmpe.f32	s30, s15
90028d4c:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90028edc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028d50:	bf48      	it	mi
90028d52:	eeb1 0a40 	vnegmi.f32	s0, s0
90028d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d5a:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028d5e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90028ee0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90028d62:	bfa4      	itt	ge
90028d64:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90028ee4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028d68:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90028d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d70:	bfa4      	itt	ge
90028d72:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90028ee4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028d76:	ee37 0a40 	vsubge.f32	s0, s14, s0
90028d7a:	ee3f 0a00 	vadd.f32	s0, s30, s0
90028d7e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d86:	f140 8084 	bpl.w	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028d8a:	eef0 0a4a 	vmov.f32	s1, s20
90028d8e:	eeb0 0a49 	vmov.f32	s0, s18
90028d92:	e040      	b.n	90028e16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90028d94:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028d98:	ee27 7a07 	vmul.f32	s14, s14, s14
90028d9c:	eee5 7aa5 	vfma.f32	s15, s11, s11
90028da0:	ee67 7a85 	vmul.f32	s15, s15, s10
90028da4:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028da8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028dac:	d871      	bhi.n	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028dae:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028db2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028db6:	f000 f8f8 	bl	90028faa <atan2f>
90028dba:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90028dbe:	eeb0 8a40 	vmov.f32	s16, s0
90028dc2:	ee3f 0a69 	vsub.f32	s0, s30, s19
90028dc6:	f000 f8f0 	bl	90028faa <atan2f>
90028dca:	ee38 0a40 	vsub.f32	s0, s16, s0
90028dce:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90028edc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028dd2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028dd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028dda:	bf48      	it	mi
90028ddc:	eeb1 0a40 	vnegmi.f32	s0, s0
90028de0:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028de4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028de8:	bfa4      	itt	ge
90028dea:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90028ee4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028dee:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90028df2:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90028ee0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90028df6:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028dfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028dfe:	d548      	bpl.n	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028e00:	eef0 0a4f 	vmov.f32	s1, s30
90028e04:	4620      	mov	r0, r4
90028e06:	eeb0 0a6f 	vmov.f32	s0, s31
90028e0a:	f7e9 fb89 	bl	90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028e0e:	eef0 0a4c 	vmov.f32	s1, s24
90028e12:	eeb0 0a6b 	vmov.f32	s0, s23
90028e16:	4620      	mov	r0, r4
90028e18:	f7e9 fb82 	bl	90012520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028e1c:	b005      	add	sp, #20
90028e1e:	ecbd 8b10 	vpop	{d8-d15}
90028e22:	bd30      	pop	{r4, r5, pc}
90028e24:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90028ed8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90028e28:	eeb4 6ac7 	vcmpe.f32	s12, s14
90028e2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028e30:	dd19      	ble.n	90028e66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90028e32:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028e36:	ee26 7a06 	vmul.f32	s14, s12, s12
90028e3a:	eee5 7aa5 	vfma.f32	s15, s11, s11
90028e3e:	ee67 7a85 	vmul.f32	s15, s15, s10
90028e42:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028e46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028e4a:	d822      	bhi.n	90028e92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028e4c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90028e50:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90028e54:	f000 f8a9 	bl	90028faa <atan2f>
90028e58:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028e5c:	eeb0 8a40 	vmov.f32	s16, s0
90028e60:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028e64:	e7af      	b.n	90028dc6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90028e66:	ee78 7aaa 	vadd.f32	s15, s17, s21
90028e6a:	eeb0 7a49 	vmov.f32	s14, s18
90028e6e:	eeb0 6a4a 	vmov.f32	s12, s20
90028e72:	eea7 7ae6 	vfms.f32	s14, s15, s13
90028e76:	ee79 7a8b 	vadd.f32	s15, s19, s22
90028e7a:	eea7 6ae6 	vfms.f32	s12, s15, s13
90028e7e:	ee66 7a06 	vmul.f32	s15, s12, s12
90028e82:	eee7 7a07 	vfma.f32	s15, s14, s14
90028e86:	eef4 7ac5 	vcmpe.f32	s15, s10
90028e8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028e8e:	f67f af7c 	bls.w	90028d8a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90028e92:	3501      	adds	r5, #1
90028e94:	eef0 0a69 	vmov.f32	s1, s19
90028e98:	eeb0 0a68 	vmov.f32	s0, s17
90028e9c:	4620      	mov	r0, r4
90028e9e:	4629      	mov	r1, r5
90028ea0:	eef0 3a4a 	vmov.f32	s7, s20
90028ea4:	eeb0 3a49 	vmov.f32	s6, s18
90028ea8:	eef0 2a6e 	vmov.f32	s5, s29
90028eac:	eeb0 2a4e 	vmov.f32	s4, s28
90028eb0:	eef0 1a6d 	vmov.f32	s3, s27
90028eb4:	eeb0 1a4d 	vmov.f32	s2, s26
90028eb8:	f7ff fe84 	bl	90028bc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90028ebc:	eeb0 ca6c 	vmov.f32	s24, s25
90028ec0:	eddd ba01 	vldr	s23, [sp, #4]
90028ec4:	eef0 9a4a 	vmov.f32	s19, s20
90028ec8:	ed9d fa02 	vldr	s30, [sp, #8]
90028ecc:	eef0 8a49 	vmov.f32	s17, s18
90028ed0:	eddd fa03 	vldr	s31, [sp, #12]
90028ed4:	e68c      	b.n	90028bf0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90028ed6:	bf00      	nop
90028ed8:	2edbe6ff 	.word	0x2edbe6ff
90028edc:	40490fdb 	.word	0x40490fdb
90028ee0:	3dcccccd 	.word	0x3dcccccd
90028ee4:	40c90fdb 	.word	0x40c90fdb

90028ee8 <_ZN8touchgfx6CanvasD1Ev>:
90028ee8:	4b04      	ldr	r3, [pc, #16]	@ (90028efc <_ZN8touchgfx6CanvasD1Ev+0x14>)
90028eea:	b510      	push	{r4, lr}
90028eec:	4604      	mov	r4, r0
90028eee:	f840 3b14 	str.w	r3, [r0], #20
90028ef2:	f7ea fe55 	bl	90013ba0 <_ZN8touchgfx7OutlineD1Ev>
90028ef6:	4620      	mov	r0, r4
90028ef8:	bd10      	pop	{r4, pc}
90028efa:	bf00      	nop
90028efc:	9002daa4 	.word	0x9002daa4

90028f00 <_ZN8touchgfx6CanvasD0Ev>:
90028f00:	b510      	push	{r4, lr}
90028f02:	4604      	mov	r4, r0
90028f04:	f7ff fff0 	bl	90028ee8 <_ZN8touchgfx6CanvasD1Ev>
90028f08:	2174      	movs	r1, #116	@ 0x74
90028f0a:	4620      	mov	r0, r4
90028f0c:	f000 f826 	bl	90028f5c <_ZdlPvj>
90028f10:	4620      	mov	r0, r4
90028f12:	bd10      	pop	{r4, pc}

90028f14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90028f14:	790b      	ldrb	r3, [r1, #4]
90028f16:	2b00      	cmp	r3, #0
90028f18:	bf0c      	ite	eq
90028f1a:	2301      	moveq	r3, #1
90028f1c:	2300      	movne	r3, #0
90028f1e:	b570      	push	{r4, r5, r6, lr}
90028f20:	4604      	mov	r4, r0
90028f22:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90028f26:	460e      	mov	r6, r1
90028f28:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90028f2c:	d109      	bne.n	90028f42 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90028f2e:	b14d      	cbz	r5, 90028f44 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90028f30:	7933      	ldrb	r3, [r6, #4]
90028f32:	2b01      	cmp	r3, #1
90028f34:	d10c      	bne.n	90028f50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90028f36:	6823      	ldr	r3, [r4, #0]
90028f38:	4620      	mov	r0, r4
90028f3a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90028f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90028f40:	4718      	bx	r3
90028f42:	b12d      	cbz	r5, 90028f50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90028f44:	6823      	ldr	r3, [r4, #0]
90028f46:	4620      	mov	r0, r4
90028f48:	695b      	ldr	r3, [r3, #20]
90028f4a:	4798      	blx	r3
90028f4c:	2d00      	cmp	r5, #0
90028f4e:	d1ef      	bne.n	90028f30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90028f50:	bd70      	pop	{r4, r5, r6, pc}

90028f52 <__aeabi_atexit>:
90028f52:	460b      	mov	r3, r1
90028f54:	4601      	mov	r1, r0
90028f56:	4618      	mov	r0, r3
90028f58:	f000 bc58 	b.w	9002980c <__cxa_atexit>

90028f5c <_ZdlPvj>:
90028f5c:	f000 b812 	b.w	90028f84 <_ZdlPv>

90028f60 <__cxa_guard_acquire>:
90028f60:	6802      	ldr	r2, [r0, #0]
90028f62:	07d2      	lsls	r2, r2, #31
90028f64:	4603      	mov	r3, r0
90028f66:	d405      	bmi.n	90028f74 <__cxa_guard_acquire+0x14>
90028f68:	7842      	ldrb	r2, [r0, #1]
90028f6a:	b102      	cbz	r2, 90028f6e <__cxa_guard_acquire+0xe>
90028f6c:	deff      	udf	#255	@ 0xff
90028f6e:	2001      	movs	r0, #1
90028f70:	7058      	strb	r0, [r3, #1]
90028f72:	4770      	bx	lr
90028f74:	2000      	movs	r0, #0
90028f76:	4770      	bx	lr

90028f78 <__cxa_guard_release>:
90028f78:	2301      	movs	r3, #1
90028f7a:	6003      	str	r3, [r0, #0]
90028f7c:	4770      	bx	lr

90028f7e <__cxa_pure_virtual>:
90028f7e:	b508      	push	{r3, lr}
90028f80:	f000 f80e 	bl	90028fa0 <_ZSt9terminatev>

90028f84 <_ZdlPv>:
90028f84:	f000 bb8c 	b.w	900296a0 <free>

90028f88 <_ZN10__cxxabiv111__terminateEPFvvE>:
90028f88:	b508      	push	{r3, lr}
90028f8a:	4780      	blx	r0
90028f8c:	f000 fb55 	bl	9002963a <abort>

90028f90 <_ZSt13get_terminatev>:
90028f90:	4b02      	ldr	r3, [pc, #8]	@ (90028f9c <_ZSt13get_terminatev+0xc>)
90028f92:	6818      	ldr	r0, [r3, #0]
90028f94:	f3bf 8f5b 	dmb	ish
90028f98:	4770      	bx	lr
90028f9a:	bf00      	nop
90028f9c:	24000104 	.word	0x24000104

90028fa0 <_ZSt9terminatev>:
90028fa0:	b508      	push	{r3, lr}
90028fa2:	f7ff fff5 	bl	90028f90 <_ZSt13get_terminatev>
90028fa6:	f7ff ffef 	bl	90028f88 <_ZN10__cxxabiv111__terminateEPFvvE>

90028faa <atan2f>:
90028faa:	f000 b9cd 	b.w	90029348 <__ieee754_atan2f>
	...

90028fb0 <sqrtf>:
90028fb0:	b508      	push	{r3, lr}
90028fb2:	ed2d 8b02 	vpush	{d8}
90028fb6:	eeb0 8a40 	vmov.f32	s16, s0
90028fba:	f000 f9c2 	bl	90029342 <__ieee754_sqrtf>
90028fbe:	eeb4 8a48 	vcmp.f32	s16, s16
90028fc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028fc6:	d60c      	bvs.n	90028fe2 <sqrtf+0x32>
90028fc8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90028fe8 <sqrtf+0x38>
90028fcc:	eeb4 8ae8 	vcmpe.f32	s16, s17
90028fd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028fd4:	d505      	bpl.n	90028fe2 <sqrtf+0x32>
90028fd6:	f000 fe87 	bl	90029ce8 <__errno>
90028fda:	ee88 0aa8 	vdiv.f32	s0, s17, s17
90028fde:	2321      	movs	r3, #33	@ 0x21
90028fe0:	6003      	str	r3, [r0, #0]
90028fe2:	ecbd 8b02 	vpop	{d8}
90028fe6:	bd08      	pop	{r3, pc}
90028fe8:	00000000 	.word	0x00000000

90028fec <sinf_poly>:
90028fec:	07cb      	lsls	r3, r1, #31
90028fee:	d412      	bmi.n	90029016 <sinf_poly+0x2a>
90028ff0:	ee21 5b00 	vmul.f64	d5, d1, d0
90028ff4:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90028ff8:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90028ffc:	eea6 7b01 	vfma.f64	d7, d6, d1
90029000:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029004:	ee21 1b05 	vmul.f64	d1, d1, d5
90029008:	eea6 0b05 	vfma.f64	d0, d6, d5
9002900c:	eea7 0b01 	vfma.f64	d0, d7, d1
90029010:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029014:	4770      	bx	lr
90029016:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002901a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002901e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029022:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029026:	eea1 7b06 	vfma.f64	d7, d1, d6
9002902a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002902e:	eea1 0b06 	vfma.f64	d0, d1, d6
90029032:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029036:	ee21 1b05 	vmul.f64	d1, d1, d5
9002903a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002903e:	e7e5      	b.n	9002900c <sinf_poly+0x20>

90029040 <sinf>:
90029040:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029042:	ee10 4a10 	vmov	r4, s0
90029046:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002904a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002904e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90029052:	eef0 7a40 	vmov.f32	s15, s0
90029056:	d218      	bcs.n	9002908a <sinf+0x4a>
90029058:	ee26 1b06 	vmul.f64	d1, d6, d6
9002905c:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029060:	d20a      	bcs.n	90029078 <sinf+0x38>
90029062:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
90029066:	d103      	bne.n	90029070 <sinf+0x30>
90029068:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002906c:	ed8d 1a01 	vstr	s2, [sp, #4]
90029070:	eeb0 0a67 	vmov.f32	s0, s15
90029074:	b003      	add	sp, #12
90029076:	bd30      	pop	{r4, r5, pc}
90029078:	483b      	ldr	r0, [pc, #236]	@ (90029168 <sinf+0x128>)
9002907a:	eeb0 0b46 	vmov.f64	d0, d6
9002907e:	2100      	movs	r1, #0
90029080:	b003      	add	sp, #12
90029082:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029086:	f7ff bfb1 	b.w	90028fec <sinf_poly>
9002908a:	f240 422e 	movw	r2, #1070	@ 0x42e
9002908e:	4293      	cmp	r3, r2
90029090:	d824      	bhi.n	900290dc <sinf+0x9c>
90029092:	4b35      	ldr	r3, [pc, #212]	@ (90029168 <sinf+0x128>)
90029094:	ed93 7b08 	vldr	d7, [r3, #32]
90029098:	ee26 7b07 	vmul.f64	d7, d6, d7
9002909c:	eefd 7bc7 	vcvt.s32.f64	s15, d7
900290a0:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900290a4:	ee17 1a90 	vmov	r1, s15
900290a8:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
900290ac:	1609      	asrs	r1, r1, #24
900290ae:	ee07 1a90 	vmov	s15, r1
900290b2:	f001 0203 	and.w	r2, r1, #3
900290b6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900290ba:	eeb8 5be7 	vcvt.f64.s32	d5, s15
900290be:	ed92 0b00 	vldr	d0, [r2]
900290c2:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
900290c6:	f011 0f02 	tst.w	r1, #2
900290ca:	eea5 6b47 	vfms.f64	d6, d5, d7
900290ce:	bf08      	it	eq
900290d0:	4618      	moveq	r0, r3
900290d2:	ee26 1b06 	vmul.f64	d1, d6, d6
900290d6:	ee20 0b06 	vmul.f64	d0, d0, d6
900290da:	e7d1      	b.n	90029080 <sinf+0x40>
900290dc:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
900290e0:	d237      	bcs.n	90029152 <sinf+0x112>
900290e2:	4922      	ldr	r1, [pc, #136]	@ (9002916c <sinf+0x12c>)
900290e4:	f3c4 6083 	ubfx	r0, r4, #26, #4
900290e8:	eb01 0280 	add.w	r2, r1, r0, lsl #2
900290ec:	f3c4 0316 	ubfx	r3, r4, #0, #23
900290f0:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900290f4:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900290f8:	6a10      	ldr	r0, [r2, #32]
900290fa:	6912      	ldr	r2, [r2, #16]
900290fc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029100:	40ab      	lsls	r3, r5
90029102:	fba0 5003 	umull	r5, r0, r0, r3
90029106:	4359      	muls	r1, r3
90029108:	fbe3 0102 	umlal	r0, r1, r3, r2
9002910c:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029110:	0f9d      	lsrs	r5, r3, #30
90029112:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029116:	1ac9      	subs	r1, r1, r3
90029118:	f7d7 fac0 	bl	9000069c <__aeabi_l2d>
9002911c:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029120:	4b11      	ldr	r3, [pc, #68]	@ (90029168 <sinf+0x128>)
90029122:	f004 0203 	and.w	r2, r4, #3
90029126:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002912a:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 90029160 <sinf+0x120>
9002912e:	ed92 0b00 	vldr	d0, [r2]
90029132:	ec41 0b17 	vmov	d7, r0, r1
90029136:	f014 0f02 	tst.w	r4, #2
9002913a:	ee27 7b06 	vmul.f64	d7, d7, d6
9002913e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029142:	4629      	mov	r1, r5
90029144:	bf08      	it	eq
90029146:	4618      	moveq	r0, r3
90029148:	ee27 1b07 	vmul.f64	d1, d7, d7
9002914c:	ee20 0b07 	vmul.f64	d0, d0, d7
90029150:	e796      	b.n	90029080 <sinf+0x40>
90029152:	b003      	add	sp, #12
90029154:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029158:	f000 b8e4 	b.w	90029324 <__math_invalidf>
9002915c:	f3af 8000 	nop.w
90029160:	54442d18 	.word	0x54442d18
90029164:	3c1921fb 	.word	0x3c1921fb
90029168:	9002db10 	.word	0x9002db10
9002916c:	9002dab0 	.word	0x9002dab0

90029170 <sinf_poly>:
90029170:	07cb      	lsls	r3, r1, #31
90029172:	d412      	bmi.n	9002919a <sinf_poly+0x2a>
90029174:	ee21 5b00 	vmul.f64	d5, d1, d0
90029178:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002917c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029180:	eea6 7b01 	vfma.f64	d7, d6, d1
90029184:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029188:	ee21 1b05 	vmul.f64	d1, d1, d5
9002918c:	eea6 0b05 	vfma.f64	d0, d6, d5
90029190:	eea7 0b01 	vfma.f64	d0, d7, d1
90029194:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029198:	4770      	bx	lr
9002919a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002919e:	ee21 5b01 	vmul.f64	d5, d1, d1
900291a2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900291a6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900291aa:	eea1 7b06 	vfma.f64	d7, d1, d6
900291ae:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
900291b2:	eea1 0b06 	vfma.f64	d0, d1, d6
900291b6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
900291ba:	ee21 1b05 	vmul.f64	d1, d1, d5
900291be:	eea5 0b06 	vfma.f64	d0, d5, d6
900291c2:	e7e5      	b.n	90029190 <sinf_poly+0x20>
900291c4:	0000      	movs	r0, r0
	...

900291c8 <cosf>:
900291c8:	b538      	push	{r3, r4, r5, lr}
900291ca:	ee10 4a10 	vmov	r4, s0
900291ce:	f3c4 530a 	ubfx	r3, r4, #20, #11
900291d2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900291d6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
900291da:	d21f      	bcs.n	9002921c <cosf+0x54>
900291dc:	ee27 7b07 	vmul.f64	d7, d7, d7
900291e0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
900291e4:	f0c0 8082 	bcc.w	900292ec <cosf+0x124>
900291e8:	ee27 4b07 	vmul.f64	d4, d7, d7
900291ec:	4b44      	ldr	r3, [pc, #272]	@ (90029300 <cosf+0x138>)
900291ee:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
900291f2:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
900291f6:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
900291fa:	eea7 6b05 	vfma.f64	d6, d7, d5
900291fe:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90029202:	eea7 0b05 	vfma.f64	d0, d7, d5
90029206:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002920a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002920e:	eea4 0b05 	vfma.f64	d0, d4, d5
90029212:	eea6 0b07 	vfma.f64	d0, d6, d7
90029216:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002921a:	bd38      	pop	{r3, r4, r5, pc}
9002921c:	f240 422e 	movw	r2, #1070	@ 0x42e
90029220:	4293      	cmp	r3, r2
90029222:	d829      	bhi.n	90029278 <cosf+0xb0>
90029224:	4b36      	ldr	r3, [pc, #216]	@ (90029300 <cosf+0x138>)
90029226:	ed93 6b08 	vldr	d6, [r3, #32]
9002922a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002922e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029232:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029236:	ee16 1a90 	vmov	r1, s13
9002923a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002923e:	1609      	asrs	r1, r1, #24
90029240:	ee06 1a90 	vmov	s13, r1
90029244:	f001 0203 	and.w	r2, r1, #3
90029248:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002924c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029250:	ed92 0b00 	vldr	d0, [r2]
90029254:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029258:	f011 0f02 	tst.w	r1, #2
9002925c:	f081 0101 	eor.w	r1, r1, #1
90029260:	eea5 7b46 	vfms.f64	d7, d5, d6
90029264:	bf08      	it	eq
90029266:	4618      	moveq	r0, r3
90029268:	ee27 1b07 	vmul.f64	d1, d7, d7
9002926c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029270:	ee20 0b07 	vmul.f64	d0, d0, d7
90029274:	f7ff bf7c 	b.w	90029170 <sinf_poly>
90029278:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002927c:	d232      	bcs.n	900292e4 <cosf+0x11c>
9002927e:	4921      	ldr	r1, [pc, #132]	@ (90029304 <cosf+0x13c>)
90029280:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029284:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029288:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002928c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029290:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029294:	6a10      	ldr	r0, [r2, #32]
90029296:	6912      	ldr	r2, [r2, #16]
90029298:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002929c:	40ab      	lsls	r3, r5
9002929e:	fba0 5003 	umull	r5, r0, r0, r3
900292a2:	4359      	muls	r1, r3
900292a4:	fbe3 0102 	umlal	r0, r1, r3, r2
900292a8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900292ac:	0f9d      	lsrs	r5, r3, #30
900292ae:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900292b2:	1ac9      	subs	r1, r1, r3
900292b4:	f7d7 f9f2 	bl	9000069c <__aeabi_l2d>
900292b8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900292bc:	4b10      	ldr	r3, [pc, #64]	@ (90029300 <cosf+0x138>)
900292be:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 900292f8 <cosf+0x130>
900292c2:	ec41 0b17 	vmov	d7, r0, r1
900292c6:	f004 0203 	and.w	r2, r4, #3
900292ca:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900292ce:	ed92 0b00 	vldr	d0, [r2]
900292d2:	ee27 7b06 	vmul.f64	d7, d7, d6
900292d6:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900292da:	f014 0f02 	tst.w	r4, #2
900292de:	f085 0101 	eor.w	r1, r5, #1
900292e2:	e7bf      	b.n	90029264 <cosf+0x9c>
900292e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900292e8:	f000 b81c 	b.w	90029324 <__math_invalidf>
900292ec:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
900292f0:	e793      	b.n	9002921a <cosf+0x52>
900292f2:	bf00      	nop
900292f4:	f3af 8000 	nop.w
900292f8:	54442d18 	.word	0x54442d18
900292fc:	3c1921fb 	.word	0x3c1921fb
90029300:	9002db10 	.word	0x9002db10
90029304:	9002dab0 	.word	0x9002dab0

90029308 <with_errnof>:
90029308:	b510      	push	{r4, lr}
9002930a:	ed2d 8b02 	vpush	{d8}
9002930e:	eeb0 8a40 	vmov.f32	s16, s0
90029312:	4604      	mov	r4, r0
90029314:	f000 fce8 	bl	90029ce8 <__errno>
90029318:	eeb0 0a48 	vmov.f32	s0, s16
9002931c:	ecbd 8b02 	vpop	{d8}
90029320:	6004      	str	r4, [r0, #0]
90029322:	bd10      	pop	{r4, pc}

90029324 <__math_invalidf>:
90029324:	eef0 7a40 	vmov.f32	s15, s0
90029328:	ee30 7a40 	vsub.f32	s14, s0, s0
9002932c:	eef4 7a67 	vcmp.f32	s15, s15
90029330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029334:	ee87 0a07 	vdiv.f32	s0, s14, s14
90029338:	d602      	bvs.n	90029340 <__math_invalidf+0x1c>
9002933a:	2021      	movs	r0, #33	@ 0x21
9002933c:	f7ff bfe4 	b.w	90029308 <with_errnof>
90029340:	4770      	bx	lr

90029342 <__ieee754_sqrtf>:
90029342:	eeb1 0ac0 	vsqrt.f32	s0, s0
90029346:	4770      	bx	lr

90029348 <__ieee754_atan2f>:
90029348:	ee10 2a90 	vmov	r2, s1
9002934c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90029350:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029354:	b510      	push	{r4, lr}
90029356:	eef0 7a40 	vmov.f32	s15, s0
9002935a:	d806      	bhi.n	9002936a <__ieee754_atan2f+0x22>
9002935c:	ee10 0a10 	vmov	r0, s0
90029360:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90029364:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029368:	d904      	bls.n	90029374 <__ieee754_atan2f+0x2c>
9002936a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002936e:	eeb0 0a67 	vmov.f32	s0, s15
90029372:	bd10      	pop	{r4, pc}
90029374:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90029378:	d103      	bne.n	90029382 <__ieee754_atan2f+0x3a>
9002937a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002937e:	f000 b881 	b.w	90029484 <atanf>
90029382:	1794      	asrs	r4, r2, #30
90029384:	f004 0402 	and.w	r4, r4, #2
90029388:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002938c:	b93b      	cbnz	r3, 9002939e <__ieee754_atan2f+0x56>
9002938e:	2c02      	cmp	r4, #2
90029390:	d05c      	beq.n	9002944c <__ieee754_atan2f+0x104>
90029392:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029460 <__ieee754_atan2f+0x118>
90029396:	2c03      	cmp	r4, #3
90029398:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002939c:	e7e7      	b.n	9002936e <__ieee754_atan2f+0x26>
9002939e:	b939      	cbnz	r1, 900293b0 <__ieee754_atan2f+0x68>
900293a0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90029464 <__ieee754_atan2f+0x11c>
900293a4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029468 <__ieee754_atan2f+0x120>
900293a8:	2800      	cmp	r0, #0
900293aa:	fe67 7a27 	vselge.f32	s15, s14, s15
900293ae:	e7de      	b.n	9002936e <__ieee754_atan2f+0x26>
900293b0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
900293b4:	d110      	bne.n	900293d8 <__ieee754_atan2f+0x90>
900293b6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900293ba:	f104 34ff 	add.w	r4, r4, #4294967295
900293be:	d107      	bne.n	900293d0 <__ieee754_atan2f+0x88>
900293c0:	2c02      	cmp	r4, #2
900293c2:	d846      	bhi.n	90029452 <__ieee754_atan2f+0x10a>
900293c4:	4b29      	ldr	r3, [pc, #164]	@ (9002946c <__ieee754_atan2f+0x124>)
900293c6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
900293ca:	edd3 7a00 	vldr	s15, [r3]
900293ce:	e7ce      	b.n	9002936e <__ieee754_atan2f+0x26>
900293d0:	2c02      	cmp	r4, #2
900293d2:	d841      	bhi.n	90029458 <__ieee754_atan2f+0x110>
900293d4:	4b26      	ldr	r3, [pc, #152]	@ (90029470 <__ieee754_atan2f+0x128>)
900293d6:	e7f6      	b.n	900293c6 <__ieee754_atan2f+0x7e>
900293d8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900293dc:	d0e0      	beq.n	900293a0 <__ieee754_atan2f+0x58>
900293de:	1a5b      	subs	r3, r3, r1
900293e0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
900293e4:	ea4f 51e3 	mov.w	r1, r3, asr #23
900293e8:	da1a      	bge.n	90029420 <__ieee754_atan2f+0xd8>
900293ea:	2a00      	cmp	r2, #0
900293ec:	da01      	bge.n	900293f2 <__ieee754_atan2f+0xaa>
900293ee:	313c      	adds	r1, #60	@ 0x3c
900293f0:	db19      	blt.n	90029426 <__ieee754_atan2f+0xde>
900293f2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
900293f6:	f000 f919 	bl	9002962c <fabsf>
900293fa:	f000 f843 	bl	90029484 <atanf>
900293fe:	eef0 7a40 	vmov.f32	s15, s0
90029402:	2c01      	cmp	r4, #1
90029404:	d012      	beq.n	9002942c <__ieee754_atan2f+0xe4>
90029406:	2c02      	cmp	r4, #2
90029408:	d017      	beq.n	9002943a <__ieee754_atan2f+0xf2>
9002940a:	2c00      	cmp	r4, #0
9002940c:	d0af      	beq.n	9002936e <__ieee754_atan2f+0x26>
9002940e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90029474 <__ieee754_atan2f+0x12c>
90029412:	ee77 7a87 	vadd.f32	s15, s15, s14
90029416:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90029478 <__ieee754_atan2f+0x130>
9002941a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002941e:	e7a6      	b.n	9002936e <__ieee754_atan2f+0x26>
90029420:	eddf 7a11 	vldr	s15, [pc, #68]	@ 90029468 <__ieee754_atan2f+0x120>
90029424:	e7ed      	b.n	90029402 <__ieee754_atan2f+0xba>
90029426:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002947c <__ieee754_atan2f+0x134>
9002942a:	e7ea      	b.n	90029402 <__ieee754_atan2f+0xba>
9002942c:	ee17 3a90 	vmov	r3, s15
90029430:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90029434:	ee07 3a90 	vmov	s15, r3
90029438:	e799      	b.n	9002936e <__ieee754_atan2f+0x26>
9002943a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 90029474 <__ieee754_atan2f+0x12c>
9002943e:	ee77 7a87 	vadd.f32	s15, s15, s14
90029442:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90029478 <__ieee754_atan2f+0x130>
90029446:	ee77 7a67 	vsub.f32	s15, s14, s15
9002944a:	e790      	b.n	9002936e <__ieee754_atan2f+0x26>
9002944c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90029478 <__ieee754_atan2f+0x130>
90029450:	e78d      	b.n	9002936e <__ieee754_atan2f+0x26>
90029452:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90029480 <__ieee754_atan2f+0x138>
90029456:	e78a      	b.n	9002936e <__ieee754_atan2f+0x26>
90029458:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002947c <__ieee754_atan2f+0x134>
9002945c:	e787      	b.n	9002936e <__ieee754_atan2f+0x26>
9002945e:	bf00      	nop
90029460:	c0490fdb 	.word	0xc0490fdb
90029464:	bfc90fdb 	.word	0xbfc90fdb
90029468:	3fc90fdb 	.word	0x3fc90fdb
9002946c:	9002dbfc 	.word	0x9002dbfc
90029470:	9002dbf0 	.word	0x9002dbf0
90029474:	33bbbd2e 	.word	0x33bbbd2e
90029478:	40490fdb 	.word	0x40490fdb
9002947c:	00000000 	.word	0x00000000
90029480:	3f490fdb 	.word	0x3f490fdb

90029484 <atanf>:
90029484:	b538      	push	{r3, r4, r5, lr}
90029486:	ee10 5a10 	vmov	r5, s0
9002948a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002948e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
90029492:	eef0 7a40 	vmov.f32	s15, s0
90029496:	d30f      	bcc.n	900294b8 <atanf+0x34>
90029498:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002949c:	d904      	bls.n	900294a8 <atanf+0x24>
9002949e:	ee70 7a00 	vadd.f32	s15, s0, s0
900294a2:	eeb0 0a67 	vmov.f32	s0, s15
900294a6:	bd38      	pop	{r3, r4, r5, pc}
900294a8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 900295e0 <atanf+0x15c>
900294ac:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 900295e4 <atanf+0x160>
900294b0:	2d00      	cmp	r5, #0
900294b2:	fe77 7a27 	vselgt.f32	s15, s14, s15
900294b6:	e7f4      	b.n	900294a2 <atanf+0x1e>
900294b8:	4b4b      	ldr	r3, [pc, #300]	@ (900295e8 <atanf+0x164>)
900294ba:	429c      	cmp	r4, r3
900294bc:	d810      	bhi.n	900294e0 <atanf+0x5c>
900294be:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
900294c2:	d20a      	bcs.n	900294da <atanf+0x56>
900294c4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 900295ec <atanf+0x168>
900294c8:	ee30 7a07 	vadd.f32	s14, s0, s14
900294cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900294d0:	eeb4 7ae6 	vcmpe.f32	s14, s13
900294d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294d8:	dce3      	bgt.n	900294a2 <atanf+0x1e>
900294da:	f04f 33ff 	mov.w	r3, #4294967295
900294de:	e013      	b.n	90029508 <atanf+0x84>
900294e0:	f000 f8a4 	bl	9002962c <fabsf>
900294e4:	4b42      	ldr	r3, [pc, #264]	@ (900295f0 <atanf+0x16c>)
900294e6:	429c      	cmp	r4, r3
900294e8:	d84f      	bhi.n	9002958a <atanf+0x106>
900294ea:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
900294ee:	429c      	cmp	r4, r3
900294f0:	d841      	bhi.n	90029576 <atanf+0xf2>
900294f2:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
900294f6:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
900294fa:	eea0 7a27 	vfma.f32	s14, s0, s15
900294fe:	2300      	movs	r3, #0
90029500:	ee30 0a27 	vadd.f32	s0, s0, s15
90029504:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029508:	1c5a      	adds	r2, r3, #1
9002950a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002950e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 900295f4 <atanf+0x170>
90029512:	eddf 5a39 	vldr	s11, [pc, #228]	@ 900295f8 <atanf+0x174>
90029516:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 900295fc <atanf+0x178>
9002951a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002951e:	eee6 5a87 	vfma.f32	s11, s13, s14
90029522:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90029600 <atanf+0x17c>
90029526:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002952a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90029604 <atanf+0x180>
9002952e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029532:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90029608 <atanf+0x184>
90029536:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002953a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002960c <atanf+0x188>
9002953e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029542:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029610 <atanf+0x18c>
90029546:	eea6 5a87 	vfma.f32	s10, s13, s14
9002954a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90029614 <atanf+0x190>
9002954e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029552:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90029618 <atanf+0x194>
90029556:	eea7 5a26 	vfma.f32	s10, s14, s13
9002955a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002961c <atanf+0x198>
9002955e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029562:	ee27 7a26 	vmul.f32	s14, s14, s13
90029566:	eea5 7a86 	vfma.f32	s14, s11, s12
9002956a:	ee27 7a87 	vmul.f32	s14, s15, s14
9002956e:	d121      	bne.n	900295b4 <atanf+0x130>
90029570:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029574:	e795      	b.n	900294a2 <atanf+0x1e>
90029576:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002957a:	ee30 7a67 	vsub.f32	s14, s0, s15
9002957e:	ee30 0a27 	vadd.f32	s0, s0, s15
90029582:	2301      	movs	r3, #1
90029584:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029588:	e7be      	b.n	90029508 <atanf+0x84>
9002958a:	4b25      	ldr	r3, [pc, #148]	@ (90029620 <atanf+0x19c>)
9002958c:	429c      	cmp	r4, r3
9002958e:	d80b      	bhi.n	900295a8 <atanf+0x124>
90029590:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
90029594:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029598:	eea0 7a27 	vfma.f32	s14, s0, s15
9002959c:	2302      	movs	r3, #2
9002959e:	ee70 6a67 	vsub.f32	s13, s0, s15
900295a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
900295a6:	e7af      	b.n	90029508 <atanf+0x84>
900295a8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
900295ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
900295b0:	2303      	movs	r3, #3
900295b2:	e7a9      	b.n	90029508 <atanf+0x84>
900295b4:	4a1b      	ldr	r2, [pc, #108]	@ (90029624 <atanf+0x1a0>)
900295b6:	491c      	ldr	r1, [pc, #112]	@ (90029628 <atanf+0x1a4>)
900295b8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
900295bc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900295c0:	edd3 6a00 	vldr	s13, [r3]
900295c4:	ee37 7a66 	vsub.f32	s14, s14, s13
900295c8:	2d00      	cmp	r5, #0
900295ca:	ee37 7a67 	vsub.f32	s14, s14, s15
900295ce:	edd2 7a00 	vldr	s15, [r2]
900295d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
900295d6:	bfb8      	it	lt
900295d8:	eef1 7a67 	vneglt.f32	s15, s15
900295dc:	e761      	b.n	900294a2 <atanf+0x1e>
900295de:	bf00      	nop
900295e0:	bfc90fdb 	.word	0xbfc90fdb
900295e4:	3fc90fdb 	.word	0x3fc90fdb
900295e8:	3edfffff 	.word	0x3edfffff
900295ec:	7149f2ca 	.word	0x7149f2ca
900295f0:	3f97ffff 	.word	0x3f97ffff
900295f4:	3c8569d7 	.word	0x3c8569d7
900295f8:	3d4bda59 	.word	0x3d4bda59
900295fc:	bd6ef16b 	.word	0xbd6ef16b
90029600:	3d886b35 	.word	0x3d886b35
90029604:	3dba2e6e 	.word	0x3dba2e6e
90029608:	3e124925 	.word	0x3e124925
9002960c:	3eaaaaab 	.word	0x3eaaaaab
90029610:	bd15a221 	.word	0xbd15a221
90029614:	bd9d8795 	.word	0xbd9d8795
90029618:	bde38e38 	.word	0xbde38e38
9002961c:	be4ccccd 	.word	0xbe4ccccd
90029620:	401bffff 	.word	0x401bffff
90029624:	9002dc18 	.word	0x9002dc18
90029628:	9002dc08 	.word	0x9002dc08

9002962c <fabsf>:
9002962c:	ee10 3a10 	vmov	r3, s0
90029630:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90029634:	ee00 3a10 	vmov	s0, r3
90029638:	4770      	bx	lr

9002963a <abort>:
9002963a:	b508      	push	{r3, lr}
9002963c:	2006      	movs	r0, #6
9002963e:	f000 fae1 	bl	90029c04 <raise>
90029642:	2001      	movs	r0, #1
90029644:	f7da ff76 	bl	90004534 <_exit>

90029648 <__assert_func>:
90029648:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002964a:	4614      	mov	r4, r2
9002964c:	461a      	mov	r2, r3
9002964e:	4b09      	ldr	r3, [pc, #36]	@ (90029674 <__assert_func+0x2c>)
90029650:	681b      	ldr	r3, [r3, #0]
90029652:	4605      	mov	r5, r0
90029654:	68d8      	ldr	r0, [r3, #12]
90029656:	b14c      	cbz	r4, 9002966c <__assert_func+0x24>
90029658:	4b07      	ldr	r3, [pc, #28]	@ (90029678 <__assert_func+0x30>)
9002965a:	9100      	str	r1, [sp, #0]
9002965c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029660:	4906      	ldr	r1, [pc, #24]	@ (9002967c <__assert_func+0x34>)
90029662:	462b      	mov	r3, r5
90029664:	f000 f984 	bl	90029970 <fiprintf>
90029668:	f7ff ffe7 	bl	9002963a <abort>
9002966c:	4b04      	ldr	r3, [pc, #16]	@ (90029680 <__assert_func+0x38>)
9002966e:	461c      	mov	r4, r3
90029670:	e7f3      	b.n	9002965a <__assert_func+0x12>
90029672:	bf00      	nop
90029674:	24000114 	.word	0x24000114
90029678:	9002dc28 	.word	0x9002dc28
9002967c:	9002dc35 	.word	0x9002dc35
90029680:	9002dc63 	.word	0x9002dc63

90029684 <atexit>:
90029684:	2300      	movs	r3, #0
90029686:	4601      	mov	r1, r0
90029688:	461a      	mov	r2, r3
9002968a:	4618      	mov	r0, r3
9002968c:	f000 bb68 	b.w	90029d60 <__register_exitproc>

90029690 <malloc>:
90029690:	4b02      	ldr	r3, [pc, #8]	@ (9002969c <malloc+0xc>)
90029692:	4601      	mov	r1, r0
90029694:	6818      	ldr	r0, [r3, #0]
90029696:	f000 b82d 	b.w	900296f4 <_malloc_r>
9002969a:	bf00      	nop
9002969c:	24000114 	.word	0x24000114

900296a0 <free>:
900296a0:	4b02      	ldr	r3, [pc, #8]	@ (900296ac <free+0xc>)
900296a2:	4601      	mov	r1, r0
900296a4:	6818      	ldr	r0, [r3, #0]
900296a6:	f000 bbb7 	b.w	90029e18 <_free_r>
900296aa:	bf00      	nop
900296ac:	24000114 	.word	0x24000114

900296b0 <sbrk_aligned>:
900296b0:	b570      	push	{r4, r5, r6, lr}
900296b2:	4e0f      	ldr	r6, [pc, #60]	@ (900296f0 <sbrk_aligned+0x40>)
900296b4:	460c      	mov	r4, r1
900296b6:	6831      	ldr	r1, [r6, #0]
900296b8:	4605      	mov	r5, r0
900296ba:	b911      	cbnz	r1, 900296c2 <sbrk_aligned+0x12>
900296bc:	f000 faf2 	bl	90029ca4 <_sbrk_r>
900296c0:	6030      	str	r0, [r6, #0]
900296c2:	4621      	mov	r1, r4
900296c4:	4628      	mov	r0, r5
900296c6:	f000 faed 	bl	90029ca4 <_sbrk_r>
900296ca:	1c43      	adds	r3, r0, #1
900296cc:	d103      	bne.n	900296d6 <sbrk_aligned+0x26>
900296ce:	f04f 34ff 	mov.w	r4, #4294967295
900296d2:	4620      	mov	r0, r4
900296d4:	bd70      	pop	{r4, r5, r6, pc}
900296d6:	1cc4      	adds	r4, r0, #3
900296d8:	f024 0403 	bic.w	r4, r4, #3
900296dc:	42a0      	cmp	r0, r4
900296de:	d0f8      	beq.n	900296d2 <sbrk_aligned+0x22>
900296e0:	1a21      	subs	r1, r4, r0
900296e2:	4628      	mov	r0, r5
900296e4:	f000 fade 	bl	90029ca4 <_sbrk_r>
900296e8:	3001      	adds	r0, #1
900296ea:	d1f2      	bne.n	900296d2 <sbrk_aligned+0x22>
900296ec:	e7ef      	b.n	900296ce <sbrk_aligned+0x1e>
900296ee:	bf00      	nop
900296f0:	240223e8 	.word	0x240223e8

900296f4 <_malloc_r>:
900296f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900296f8:	1ccd      	adds	r5, r1, #3
900296fa:	f025 0503 	bic.w	r5, r5, #3
900296fe:	3508      	adds	r5, #8
90029700:	2d0c      	cmp	r5, #12
90029702:	bf38      	it	cc
90029704:	250c      	movcc	r5, #12
90029706:	2d00      	cmp	r5, #0
90029708:	4606      	mov	r6, r0
9002970a:	db01      	blt.n	90029710 <_malloc_r+0x1c>
9002970c:	42a9      	cmp	r1, r5
9002970e:	d904      	bls.n	9002971a <_malloc_r+0x26>
90029710:	230c      	movs	r3, #12
90029712:	6033      	str	r3, [r6, #0]
90029714:	2000      	movs	r0, #0
90029716:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002971a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 900297f0 <_malloc_r+0xfc>
9002971e:	f000 f869 	bl	900297f4 <__malloc_lock>
90029722:	f8d8 3000 	ldr.w	r3, [r8]
90029726:	461c      	mov	r4, r3
90029728:	bb44      	cbnz	r4, 9002977c <_malloc_r+0x88>
9002972a:	4629      	mov	r1, r5
9002972c:	4630      	mov	r0, r6
9002972e:	f7ff ffbf 	bl	900296b0 <sbrk_aligned>
90029732:	1c43      	adds	r3, r0, #1
90029734:	4604      	mov	r4, r0
90029736:	d158      	bne.n	900297ea <_malloc_r+0xf6>
90029738:	f8d8 4000 	ldr.w	r4, [r8]
9002973c:	4627      	mov	r7, r4
9002973e:	2f00      	cmp	r7, #0
90029740:	d143      	bne.n	900297ca <_malloc_r+0xd6>
90029742:	2c00      	cmp	r4, #0
90029744:	d04b      	beq.n	900297de <_malloc_r+0xea>
90029746:	6823      	ldr	r3, [r4, #0]
90029748:	4639      	mov	r1, r7
9002974a:	4630      	mov	r0, r6
9002974c:	eb04 0903 	add.w	r9, r4, r3
90029750:	f000 faa8 	bl	90029ca4 <_sbrk_r>
90029754:	4581      	cmp	r9, r0
90029756:	d142      	bne.n	900297de <_malloc_r+0xea>
90029758:	6821      	ldr	r1, [r4, #0]
9002975a:	1a6d      	subs	r5, r5, r1
9002975c:	4629      	mov	r1, r5
9002975e:	4630      	mov	r0, r6
90029760:	f7ff ffa6 	bl	900296b0 <sbrk_aligned>
90029764:	3001      	adds	r0, #1
90029766:	d03a      	beq.n	900297de <_malloc_r+0xea>
90029768:	6823      	ldr	r3, [r4, #0]
9002976a:	442b      	add	r3, r5
9002976c:	6023      	str	r3, [r4, #0]
9002976e:	f8d8 3000 	ldr.w	r3, [r8]
90029772:	685a      	ldr	r2, [r3, #4]
90029774:	bb62      	cbnz	r2, 900297d0 <_malloc_r+0xdc>
90029776:	f8c8 7000 	str.w	r7, [r8]
9002977a:	e00f      	b.n	9002979c <_malloc_r+0xa8>
9002977c:	6822      	ldr	r2, [r4, #0]
9002977e:	1b52      	subs	r2, r2, r5
90029780:	d420      	bmi.n	900297c4 <_malloc_r+0xd0>
90029782:	2a0b      	cmp	r2, #11
90029784:	d917      	bls.n	900297b6 <_malloc_r+0xc2>
90029786:	1961      	adds	r1, r4, r5
90029788:	42a3      	cmp	r3, r4
9002978a:	6025      	str	r5, [r4, #0]
9002978c:	bf18      	it	ne
9002978e:	6059      	strne	r1, [r3, #4]
90029790:	6863      	ldr	r3, [r4, #4]
90029792:	bf08      	it	eq
90029794:	f8c8 1000 	streq.w	r1, [r8]
90029798:	5162      	str	r2, [r4, r5]
9002979a:	604b      	str	r3, [r1, #4]
9002979c:	4630      	mov	r0, r6
9002979e:	f000 f82f 	bl	90029800 <__malloc_unlock>
900297a2:	f104 000b 	add.w	r0, r4, #11
900297a6:	1d23      	adds	r3, r4, #4
900297a8:	f020 0007 	bic.w	r0, r0, #7
900297ac:	1ac2      	subs	r2, r0, r3
900297ae:	bf1c      	itt	ne
900297b0:	1a1b      	subne	r3, r3, r0
900297b2:	50a3      	strne	r3, [r4, r2]
900297b4:	e7af      	b.n	90029716 <_malloc_r+0x22>
900297b6:	6862      	ldr	r2, [r4, #4]
900297b8:	42a3      	cmp	r3, r4
900297ba:	bf0c      	ite	eq
900297bc:	f8c8 2000 	streq.w	r2, [r8]
900297c0:	605a      	strne	r2, [r3, #4]
900297c2:	e7eb      	b.n	9002979c <_malloc_r+0xa8>
900297c4:	4623      	mov	r3, r4
900297c6:	6864      	ldr	r4, [r4, #4]
900297c8:	e7ae      	b.n	90029728 <_malloc_r+0x34>
900297ca:	463c      	mov	r4, r7
900297cc:	687f      	ldr	r7, [r7, #4]
900297ce:	e7b6      	b.n	9002973e <_malloc_r+0x4a>
900297d0:	461a      	mov	r2, r3
900297d2:	685b      	ldr	r3, [r3, #4]
900297d4:	42a3      	cmp	r3, r4
900297d6:	d1fb      	bne.n	900297d0 <_malloc_r+0xdc>
900297d8:	2300      	movs	r3, #0
900297da:	6053      	str	r3, [r2, #4]
900297dc:	e7de      	b.n	9002979c <_malloc_r+0xa8>
900297de:	230c      	movs	r3, #12
900297e0:	6033      	str	r3, [r6, #0]
900297e2:	4630      	mov	r0, r6
900297e4:	f000 f80c 	bl	90029800 <__malloc_unlock>
900297e8:	e794      	b.n	90029714 <_malloc_r+0x20>
900297ea:	6005      	str	r5, [r0, #0]
900297ec:	e7d6      	b.n	9002979c <_malloc_r+0xa8>
900297ee:	bf00      	nop
900297f0:	240223ec 	.word	0x240223ec

900297f4 <__malloc_lock>:
900297f4:	4801      	ldr	r0, [pc, #4]	@ (900297fc <__malloc_lock+0x8>)
900297f6:	f000 baa2 	b.w	90029d3e <__retarget_lock_acquire_recursive>
900297fa:	bf00      	nop
900297fc:	24022530 	.word	0x24022530

90029800 <__malloc_unlock>:
90029800:	4801      	ldr	r0, [pc, #4]	@ (90029808 <__malloc_unlock+0x8>)
90029802:	f000 ba9d 	b.w	90029d40 <__retarget_lock_release_recursive>
90029806:	bf00      	nop
90029808:	24022530 	.word	0x24022530

9002980c <__cxa_atexit>:
9002980c:	b510      	push	{r4, lr}
9002980e:	4604      	mov	r4, r0
90029810:	4804      	ldr	r0, [pc, #16]	@ (90029824 <__cxa_atexit+0x18>)
90029812:	4613      	mov	r3, r2
90029814:	b120      	cbz	r0, 90029820 <__cxa_atexit+0x14>
90029816:	460a      	mov	r2, r1
90029818:	2002      	movs	r0, #2
9002981a:	4621      	mov	r1, r4
9002981c:	f000 faa0 	bl	90029d60 <__register_exitproc>
90029820:	bd10      	pop	{r4, pc}
90029822:	bf00      	nop
90029824:	90029d61 	.word	0x90029d61

90029828 <std>:
90029828:	2300      	movs	r3, #0
9002982a:	b510      	push	{r4, lr}
9002982c:	4604      	mov	r4, r0
9002982e:	e9c0 3300 	strd	r3, r3, [r0]
90029832:	e9c0 3304 	strd	r3, r3, [r0, #16]
90029836:	6083      	str	r3, [r0, #8]
90029838:	8181      	strh	r1, [r0, #12]
9002983a:	6643      	str	r3, [r0, #100]	@ 0x64
9002983c:	81c2      	strh	r2, [r0, #14]
9002983e:	6183      	str	r3, [r0, #24]
90029840:	4619      	mov	r1, r3
90029842:	2208      	movs	r2, #8
90029844:	305c      	adds	r0, #92	@ 0x5c
90029846:	f000 f99b 	bl	90029b80 <memset>
9002984a:	4b0d      	ldr	r3, [pc, #52]	@ (90029880 <std+0x58>)
9002984c:	6263      	str	r3, [r4, #36]	@ 0x24
9002984e:	4b0d      	ldr	r3, [pc, #52]	@ (90029884 <std+0x5c>)
90029850:	62a3      	str	r3, [r4, #40]	@ 0x28
90029852:	4b0d      	ldr	r3, [pc, #52]	@ (90029888 <std+0x60>)
90029854:	62e3      	str	r3, [r4, #44]	@ 0x2c
90029856:	4b0d      	ldr	r3, [pc, #52]	@ (9002988c <std+0x64>)
90029858:	6323      	str	r3, [r4, #48]	@ 0x30
9002985a:	4b0d      	ldr	r3, [pc, #52]	@ (90029890 <std+0x68>)
9002985c:	6224      	str	r4, [r4, #32]
9002985e:	429c      	cmp	r4, r3
90029860:	d006      	beq.n	90029870 <std+0x48>
90029862:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90029866:	4294      	cmp	r4, r2
90029868:	d002      	beq.n	90029870 <std+0x48>
9002986a:	33d0      	adds	r3, #208	@ 0xd0
9002986c:	429c      	cmp	r4, r3
9002986e:	d105      	bne.n	9002987c <std+0x54>
90029870:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90029874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029878:	f000 ba60 	b.w	90029d3c <__retarget_lock_init_recursive>
9002987c:	bd10      	pop	{r4, pc}
9002987e:	bf00      	nop
90029880:	900299d1 	.word	0x900299d1
90029884:	900299f3 	.word	0x900299f3
90029888:	90029a2b 	.word	0x90029a2b
9002988c:	90029a4f 	.word	0x90029a4f
90029890:	240223f0 	.word	0x240223f0

90029894 <stdio_exit_handler>:
90029894:	4a02      	ldr	r2, [pc, #8]	@ (900298a0 <stdio_exit_handler+0xc>)
90029896:	4903      	ldr	r1, [pc, #12]	@ (900298a4 <stdio_exit_handler+0x10>)
90029898:	4803      	ldr	r0, [pc, #12]	@ (900298a8 <stdio_exit_handler+0x14>)
9002989a:	f000 b87b 	b.w	90029994 <_fwalk_sglue>
9002989e:	bf00      	nop
900298a0:	24000108 	.word	0x24000108
900298a4:	9002a551 	.word	0x9002a551
900298a8:	24000118 	.word	0x24000118

900298ac <cleanup_stdio>:
900298ac:	6841      	ldr	r1, [r0, #4]
900298ae:	4b0c      	ldr	r3, [pc, #48]	@ (900298e0 <cleanup_stdio+0x34>)
900298b0:	4299      	cmp	r1, r3
900298b2:	b510      	push	{r4, lr}
900298b4:	4604      	mov	r4, r0
900298b6:	d001      	beq.n	900298bc <cleanup_stdio+0x10>
900298b8:	f000 fe4a 	bl	9002a550 <_fflush_r>
900298bc:	68a1      	ldr	r1, [r4, #8]
900298be:	4b09      	ldr	r3, [pc, #36]	@ (900298e4 <cleanup_stdio+0x38>)
900298c0:	4299      	cmp	r1, r3
900298c2:	d002      	beq.n	900298ca <cleanup_stdio+0x1e>
900298c4:	4620      	mov	r0, r4
900298c6:	f000 fe43 	bl	9002a550 <_fflush_r>
900298ca:	68e1      	ldr	r1, [r4, #12]
900298cc:	4b06      	ldr	r3, [pc, #24]	@ (900298e8 <cleanup_stdio+0x3c>)
900298ce:	4299      	cmp	r1, r3
900298d0:	d004      	beq.n	900298dc <cleanup_stdio+0x30>
900298d2:	4620      	mov	r0, r4
900298d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900298d8:	f000 be3a 	b.w	9002a550 <_fflush_r>
900298dc:	bd10      	pop	{r4, pc}
900298de:	bf00      	nop
900298e0:	240223f0 	.word	0x240223f0
900298e4:	24022458 	.word	0x24022458
900298e8:	240224c0 	.word	0x240224c0

900298ec <global_stdio_init.part.0>:
900298ec:	b510      	push	{r4, lr}
900298ee:	4b0b      	ldr	r3, [pc, #44]	@ (9002991c <global_stdio_init.part.0+0x30>)
900298f0:	4c0b      	ldr	r4, [pc, #44]	@ (90029920 <global_stdio_init.part.0+0x34>)
900298f2:	4a0c      	ldr	r2, [pc, #48]	@ (90029924 <global_stdio_init.part.0+0x38>)
900298f4:	601a      	str	r2, [r3, #0]
900298f6:	4620      	mov	r0, r4
900298f8:	2200      	movs	r2, #0
900298fa:	2104      	movs	r1, #4
900298fc:	f7ff ff94 	bl	90029828 <std>
90029900:	f104 0068 	add.w	r0, r4, #104	@ 0x68
90029904:	2201      	movs	r2, #1
90029906:	2109      	movs	r1, #9
90029908:	f7ff ff8e 	bl	90029828 <std>
9002990c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
90029910:	2202      	movs	r2, #2
90029912:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029916:	2112      	movs	r1, #18
90029918:	f7ff bf86 	b.w	90029828 <std>
9002991c:	24022528 	.word	0x24022528
90029920:	240223f0 	.word	0x240223f0
90029924:	90029895 	.word	0x90029895

90029928 <__sfp_lock_acquire>:
90029928:	4801      	ldr	r0, [pc, #4]	@ (90029930 <__sfp_lock_acquire+0x8>)
9002992a:	f000 ba08 	b.w	90029d3e <__retarget_lock_acquire_recursive>
9002992e:	bf00      	nop
90029930:	24022532 	.word	0x24022532

90029934 <__sfp_lock_release>:
90029934:	4801      	ldr	r0, [pc, #4]	@ (9002993c <__sfp_lock_release+0x8>)
90029936:	f000 ba03 	b.w	90029d40 <__retarget_lock_release_recursive>
9002993a:	bf00      	nop
9002993c:	24022532 	.word	0x24022532

90029940 <__sinit>:
90029940:	b510      	push	{r4, lr}
90029942:	4604      	mov	r4, r0
90029944:	f7ff fff0 	bl	90029928 <__sfp_lock_acquire>
90029948:	6a23      	ldr	r3, [r4, #32]
9002994a:	b11b      	cbz	r3, 90029954 <__sinit+0x14>
9002994c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029950:	f7ff bff0 	b.w	90029934 <__sfp_lock_release>
90029954:	4b04      	ldr	r3, [pc, #16]	@ (90029968 <__sinit+0x28>)
90029956:	6223      	str	r3, [r4, #32]
90029958:	4b04      	ldr	r3, [pc, #16]	@ (9002996c <__sinit+0x2c>)
9002995a:	681b      	ldr	r3, [r3, #0]
9002995c:	2b00      	cmp	r3, #0
9002995e:	d1f5      	bne.n	9002994c <__sinit+0xc>
90029960:	f7ff ffc4 	bl	900298ec <global_stdio_init.part.0>
90029964:	e7f2      	b.n	9002994c <__sinit+0xc>
90029966:	bf00      	nop
90029968:	900298ad 	.word	0x900298ad
9002996c:	24022528 	.word	0x24022528

90029970 <fiprintf>:
90029970:	b40e      	push	{r1, r2, r3}
90029972:	b503      	push	{r0, r1, lr}
90029974:	4601      	mov	r1, r0
90029976:	ab03      	add	r3, sp, #12
90029978:	4805      	ldr	r0, [pc, #20]	@ (90029990 <fiprintf+0x20>)
9002997a:	f853 2b04 	ldr.w	r2, [r3], #4
9002997e:	6800      	ldr	r0, [r0, #0]
90029980:	9301      	str	r3, [sp, #4]
90029982:	f000 fabd 	bl	90029f00 <_vfiprintf_r>
90029986:	b002      	add	sp, #8
90029988:	f85d eb04 	ldr.w	lr, [sp], #4
9002998c:	b003      	add	sp, #12
9002998e:	4770      	bx	lr
90029990:	24000114 	.word	0x24000114

90029994 <_fwalk_sglue>:
90029994:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029998:	4607      	mov	r7, r0
9002999a:	4688      	mov	r8, r1
9002999c:	4614      	mov	r4, r2
9002999e:	2600      	movs	r6, #0
900299a0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900299a4:	f1b9 0901 	subs.w	r9, r9, #1
900299a8:	d505      	bpl.n	900299b6 <_fwalk_sglue+0x22>
900299aa:	6824      	ldr	r4, [r4, #0]
900299ac:	2c00      	cmp	r4, #0
900299ae:	d1f7      	bne.n	900299a0 <_fwalk_sglue+0xc>
900299b0:	4630      	mov	r0, r6
900299b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900299b6:	89ab      	ldrh	r3, [r5, #12]
900299b8:	2b01      	cmp	r3, #1
900299ba:	d907      	bls.n	900299cc <_fwalk_sglue+0x38>
900299bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900299c0:	3301      	adds	r3, #1
900299c2:	d003      	beq.n	900299cc <_fwalk_sglue+0x38>
900299c4:	4629      	mov	r1, r5
900299c6:	4638      	mov	r0, r7
900299c8:	47c0      	blx	r8
900299ca:	4306      	orrs	r6, r0
900299cc:	3568      	adds	r5, #104	@ 0x68
900299ce:	e7e9      	b.n	900299a4 <_fwalk_sglue+0x10>

900299d0 <__sread>:
900299d0:	b510      	push	{r4, lr}
900299d2:	460c      	mov	r4, r1
900299d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900299d8:	f000 f93e 	bl	90029c58 <_read_r>
900299dc:	2800      	cmp	r0, #0
900299de:	bfab      	itete	ge
900299e0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
900299e2:	89a3      	ldrhlt	r3, [r4, #12]
900299e4:	181b      	addge	r3, r3, r0
900299e6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
900299ea:	bfac      	ite	ge
900299ec:	6563      	strge	r3, [r4, #84]	@ 0x54
900299ee:	81a3      	strhlt	r3, [r4, #12]
900299f0:	bd10      	pop	{r4, pc}

900299f2 <__swrite>:
900299f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900299f6:	461f      	mov	r7, r3
900299f8:	898b      	ldrh	r3, [r1, #12]
900299fa:	05db      	lsls	r3, r3, #23
900299fc:	4605      	mov	r5, r0
900299fe:	460c      	mov	r4, r1
90029a00:	4616      	mov	r6, r2
90029a02:	d505      	bpl.n	90029a10 <__swrite+0x1e>
90029a04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029a08:	2302      	movs	r3, #2
90029a0a:	2200      	movs	r2, #0
90029a0c:	f000 f912 	bl	90029c34 <_lseek_r>
90029a10:	89a3      	ldrh	r3, [r4, #12]
90029a12:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029a16:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90029a1a:	81a3      	strh	r3, [r4, #12]
90029a1c:	4632      	mov	r2, r6
90029a1e:	463b      	mov	r3, r7
90029a20:	4628      	mov	r0, r5
90029a22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90029a26:	f000 b94d 	b.w	90029cc4 <_write_r>

90029a2a <__sseek>:
90029a2a:	b510      	push	{r4, lr}
90029a2c:	460c      	mov	r4, r1
90029a2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029a32:	f000 f8ff 	bl	90029c34 <_lseek_r>
90029a36:	1c43      	adds	r3, r0, #1
90029a38:	89a3      	ldrh	r3, [r4, #12]
90029a3a:	bf15      	itete	ne
90029a3c:	6560      	strne	r0, [r4, #84]	@ 0x54
90029a3e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90029a42:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90029a46:	81a3      	strheq	r3, [r4, #12]
90029a48:	bf18      	it	ne
90029a4a:	81a3      	strhne	r3, [r4, #12]
90029a4c:	bd10      	pop	{r4, pc}

90029a4e <__sclose>:
90029a4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029a52:	f000 b8df 	b.w	90029c14 <_close_r>

90029a56 <__swbuf_r>:
90029a56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029a58:	460e      	mov	r6, r1
90029a5a:	4614      	mov	r4, r2
90029a5c:	4605      	mov	r5, r0
90029a5e:	b118      	cbz	r0, 90029a68 <__swbuf_r+0x12>
90029a60:	6a03      	ldr	r3, [r0, #32]
90029a62:	b90b      	cbnz	r3, 90029a68 <__swbuf_r+0x12>
90029a64:	f7ff ff6c 	bl	90029940 <__sinit>
90029a68:	69a3      	ldr	r3, [r4, #24]
90029a6a:	60a3      	str	r3, [r4, #8]
90029a6c:	89a3      	ldrh	r3, [r4, #12]
90029a6e:	071a      	lsls	r2, r3, #28
90029a70:	d501      	bpl.n	90029a76 <__swbuf_r+0x20>
90029a72:	6923      	ldr	r3, [r4, #16]
90029a74:	b943      	cbnz	r3, 90029a88 <__swbuf_r+0x32>
90029a76:	4621      	mov	r1, r4
90029a78:	4628      	mov	r0, r5
90029a7a:	f000 f82b 	bl	90029ad4 <__swsetup_r>
90029a7e:	b118      	cbz	r0, 90029a88 <__swbuf_r+0x32>
90029a80:	f04f 37ff 	mov.w	r7, #4294967295
90029a84:	4638      	mov	r0, r7
90029a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90029a88:	6823      	ldr	r3, [r4, #0]
90029a8a:	6922      	ldr	r2, [r4, #16]
90029a8c:	1a98      	subs	r0, r3, r2
90029a8e:	6963      	ldr	r3, [r4, #20]
90029a90:	b2f6      	uxtb	r6, r6
90029a92:	4283      	cmp	r3, r0
90029a94:	4637      	mov	r7, r6
90029a96:	dc05      	bgt.n	90029aa4 <__swbuf_r+0x4e>
90029a98:	4621      	mov	r1, r4
90029a9a:	4628      	mov	r0, r5
90029a9c:	f000 fd58 	bl	9002a550 <_fflush_r>
90029aa0:	2800      	cmp	r0, #0
90029aa2:	d1ed      	bne.n	90029a80 <__swbuf_r+0x2a>
90029aa4:	68a3      	ldr	r3, [r4, #8]
90029aa6:	3b01      	subs	r3, #1
90029aa8:	60a3      	str	r3, [r4, #8]
90029aaa:	6823      	ldr	r3, [r4, #0]
90029aac:	1c5a      	adds	r2, r3, #1
90029aae:	6022      	str	r2, [r4, #0]
90029ab0:	701e      	strb	r6, [r3, #0]
90029ab2:	6962      	ldr	r2, [r4, #20]
90029ab4:	1c43      	adds	r3, r0, #1
90029ab6:	429a      	cmp	r2, r3
90029ab8:	d004      	beq.n	90029ac4 <__swbuf_r+0x6e>
90029aba:	89a3      	ldrh	r3, [r4, #12]
90029abc:	07db      	lsls	r3, r3, #31
90029abe:	d5e1      	bpl.n	90029a84 <__swbuf_r+0x2e>
90029ac0:	2e0a      	cmp	r6, #10
90029ac2:	d1df      	bne.n	90029a84 <__swbuf_r+0x2e>
90029ac4:	4621      	mov	r1, r4
90029ac6:	4628      	mov	r0, r5
90029ac8:	f000 fd42 	bl	9002a550 <_fflush_r>
90029acc:	2800      	cmp	r0, #0
90029ace:	d0d9      	beq.n	90029a84 <__swbuf_r+0x2e>
90029ad0:	e7d6      	b.n	90029a80 <__swbuf_r+0x2a>
	...

90029ad4 <__swsetup_r>:
90029ad4:	b538      	push	{r3, r4, r5, lr}
90029ad6:	4b29      	ldr	r3, [pc, #164]	@ (90029b7c <__swsetup_r+0xa8>)
90029ad8:	4605      	mov	r5, r0
90029ada:	6818      	ldr	r0, [r3, #0]
90029adc:	460c      	mov	r4, r1
90029ade:	b118      	cbz	r0, 90029ae8 <__swsetup_r+0x14>
90029ae0:	6a03      	ldr	r3, [r0, #32]
90029ae2:	b90b      	cbnz	r3, 90029ae8 <__swsetup_r+0x14>
90029ae4:	f7ff ff2c 	bl	90029940 <__sinit>
90029ae8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029aec:	0719      	lsls	r1, r3, #28
90029aee:	d422      	bmi.n	90029b36 <__swsetup_r+0x62>
90029af0:	06da      	lsls	r2, r3, #27
90029af2:	d407      	bmi.n	90029b04 <__swsetup_r+0x30>
90029af4:	2209      	movs	r2, #9
90029af6:	602a      	str	r2, [r5, #0]
90029af8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90029afc:	81a3      	strh	r3, [r4, #12]
90029afe:	f04f 30ff 	mov.w	r0, #4294967295
90029b02:	e033      	b.n	90029b6c <__swsetup_r+0x98>
90029b04:	0758      	lsls	r0, r3, #29
90029b06:	d512      	bpl.n	90029b2e <__swsetup_r+0x5a>
90029b08:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90029b0a:	b141      	cbz	r1, 90029b1e <__swsetup_r+0x4a>
90029b0c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90029b10:	4299      	cmp	r1, r3
90029b12:	d002      	beq.n	90029b1a <__swsetup_r+0x46>
90029b14:	4628      	mov	r0, r5
90029b16:	f000 f97f 	bl	90029e18 <_free_r>
90029b1a:	2300      	movs	r3, #0
90029b1c:	6363      	str	r3, [r4, #52]	@ 0x34
90029b1e:	89a3      	ldrh	r3, [r4, #12]
90029b20:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
90029b24:	81a3      	strh	r3, [r4, #12]
90029b26:	2300      	movs	r3, #0
90029b28:	6063      	str	r3, [r4, #4]
90029b2a:	6923      	ldr	r3, [r4, #16]
90029b2c:	6023      	str	r3, [r4, #0]
90029b2e:	89a3      	ldrh	r3, [r4, #12]
90029b30:	f043 0308 	orr.w	r3, r3, #8
90029b34:	81a3      	strh	r3, [r4, #12]
90029b36:	6923      	ldr	r3, [r4, #16]
90029b38:	b94b      	cbnz	r3, 90029b4e <__swsetup_r+0x7a>
90029b3a:	89a3      	ldrh	r3, [r4, #12]
90029b3c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
90029b40:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90029b44:	d003      	beq.n	90029b4e <__swsetup_r+0x7a>
90029b46:	4621      	mov	r1, r4
90029b48:	4628      	mov	r0, r5
90029b4a:	f000 fd4f 	bl	9002a5ec <__smakebuf_r>
90029b4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029b52:	f013 0201 	ands.w	r2, r3, #1
90029b56:	d00a      	beq.n	90029b6e <__swsetup_r+0x9a>
90029b58:	2200      	movs	r2, #0
90029b5a:	60a2      	str	r2, [r4, #8]
90029b5c:	6962      	ldr	r2, [r4, #20]
90029b5e:	4252      	negs	r2, r2
90029b60:	61a2      	str	r2, [r4, #24]
90029b62:	6922      	ldr	r2, [r4, #16]
90029b64:	b942      	cbnz	r2, 90029b78 <__swsetup_r+0xa4>
90029b66:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
90029b6a:	d1c5      	bne.n	90029af8 <__swsetup_r+0x24>
90029b6c:	bd38      	pop	{r3, r4, r5, pc}
90029b6e:	0799      	lsls	r1, r3, #30
90029b70:	bf58      	it	pl
90029b72:	6962      	ldrpl	r2, [r4, #20]
90029b74:	60a2      	str	r2, [r4, #8]
90029b76:	e7f4      	b.n	90029b62 <__swsetup_r+0x8e>
90029b78:	2000      	movs	r0, #0
90029b7a:	e7f7      	b.n	90029b6c <__swsetup_r+0x98>
90029b7c:	24000114 	.word	0x24000114

90029b80 <memset>:
90029b80:	4402      	add	r2, r0
90029b82:	4603      	mov	r3, r0
90029b84:	4293      	cmp	r3, r2
90029b86:	d100      	bne.n	90029b8a <memset+0xa>
90029b88:	4770      	bx	lr
90029b8a:	f803 1b01 	strb.w	r1, [r3], #1
90029b8e:	e7f9      	b.n	90029b84 <memset+0x4>

90029b90 <strncmp>:
90029b90:	b510      	push	{r4, lr}
90029b92:	b16a      	cbz	r2, 90029bb0 <strncmp+0x20>
90029b94:	3901      	subs	r1, #1
90029b96:	1884      	adds	r4, r0, r2
90029b98:	f810 2b01 	ldrb.w	r2, [r0], #1
90029b9c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90029ba0:	429a      	cmp	r2, r3
90029ba2:	d103      	bne.n	90029bac <strncmp+0x1c>
90029ba4:	42a0      	cmp	r0, r4
90029ba6:	d001      	beq.n	90029bac <strncmp+0x1c>
90029ba8:	2a00      	cmp	r2, #0
90029baa:	d1f5      	bne.n	90029b98 <strncmp+0x8>
90029bac:	1ad0      	subs	r0, r2, r3
90029bae:	bd10      	pop	{r4, pc}
90029bb0:	4610      	mov	r0, r2
90029bb2:	e7fc      	b.n	90029bae <strncmp+0x1e>

90029bb4 <_raise_r>:
90029bb4:	291f      	cmp	r1, #31
90029bb6:	b538      	push	{r3, r4, r5, lr}
90029bb8:	4605      	mov	r5, r0
90029bba:	460c      	mov	r4, r1
90029bbc:	d904      	bls.n	90029bc8 <_raise_r+0x14>
90029bbe:	2316      	movs	r3, #22
90029bc0:	6003      	str	r3, [r0, #0]
90029bc2:	f04f 30ff 	mov.w	r0, #4294967295
90029bc6:	bd38      	pop	{r3, r4, r5, pc}
90029bc8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
90029bca:	b112      	cbz	r2, 90029bd2 <_raise_r+0x1e>
90029bcc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90029bd0:	b94b      	cbnz	r3, 90029be6 <_raise_r+0x32>
90029bd2:	4628      	mov	r0, r5
90029bd4:	f000 f864 	bl	90029ca0 <_getpid_r>
90029bd8:	4622      	mov	r2, r4
90029bda:	4601      	mov	r1, r0
90029bdc:	4628      	mov	r0, r5
90029bde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029be2:	f000 b84b 	b.w	90029c7c <_kill_r>
90029be6:	2b01      	cmp	r3, #1
90029be8:	d00a      	beq.n	90029c00 <_raise_r+0x4c>
90029bea:	1c59      	adds	r1, r3, #1
90029bec:	d103      	bne.n	90029bf6 <_raise_r+0x42>
90029bee:	2316      	movs	r3, #22
90029bf0:	6003      	str	r3, [r0, #0]
90029bf2:	2001      	movs	r0, #1
90029bf4:	e7e7      	b.n	90029bc6 <_raise_r+0x12>
90029bf6:	2100      	movs	r1, #0
90029bf8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
90029bfc:	4620      	mov	r0, r4
90029bfe:	4798      	blx	r3
90029c00:	2000      	movs	r0, #0
90029c02:	e7e0      	b.n	90029bc6 <_raise_r+0x12>

90029c04 <raise>:
90029c04:	4b02      	ldr	r3, [pc, #8]	@ (90029c10 <raise+0xc>)
90029c06:	4601      	mov	r1, r0
90029c08:	6818      	ldr	r0, [r3, #0]
90029c0a:	f7ff bfd3 	b.w	90029bb4 <_raise_r>
90029c0e:	bf00      	nop
90029c10:	24000114 	.word	0x24000114

90029c14 <_close_r>:
90029c14:	b538      	push	{r3, r4, r5, lr}
90029c16:	4d06      	ldr	r5, [pc, #24]	@ (90029c30 <_close_r+0x1c>)
90029c18:	2300      	movs	r3, #0
90029c1a:	4604      	mov	r4, r0
90029c1c:	4608      	mov	r0, r1
90029c1e:	602b      	str	r3, [r5, #0]
90029c20:	f7da fcaa 	bl	90004578 <_close>
90029c24:	1c43      	adds	r3, r0, #1
90029c26:	d102      	bne.n	90029c2e <_close_r+0x1a>
90029c28:	682b      	ldr	r3, [r5, #0]
90029c2a:	b103      	cbz	r3, 90029c2e <_close_r+0x1a>
90029c2c:	6023      	str	r3, [r4, #0]
90029c2e:	bd38      	pop	{r3, r4, r5, pc}
90029c30:	2402252c 	.word	0x2402252c

90029c34 <_lseek_r>:
90029c34:	b538      	push	{r3, r4, r5, lr}
90029c36:	4d07      	ldr	r5, [pc, #28]	@ (90029c54 <_lseek_r+0x20>)
90029c38:	4604      	mov	r4, r0
90029c3a:	4608      	mov	r0, r1
90029c3c:	4611      	mov	r1, r2
90029c3e:	2200      	movs	r2, #0
90029c40:	602a      	str	r2, [r5, #0]
90029c42:	461a      	mov	r2, r3
90029c44:	f7da fca4 	bl	90004590 <_lseek>
90029c48:	1c43      	adds	r3, r0, #1
90029c4a:	d102      	bne.n	90029c52 <_lseek_r+0x1e>
90029c4c:	682b      	ldr	r3, [r5, #0]
90029c4e:	b103      	cbz	r3, 90029c52 <_lseek_r+0x1e>
90029c50:	6023      	str	r3, [r4, #0]
90029c52:	bd38      	pop	{r3, r4, r5, pc}
90029c54:	2402252c 	.word	0x2402252c

90029c58 <_read_r>:
90029c58:	b538      	push	{r3, r4, r5, lr}
90029c5a:	4d07      	ldr	r5, [pc, #28]	@ (90029c78 <_read_r+0x20>)
90029c5c:	4604      	mov	r4, r0
90029c5e:	4608      	mov	r0, r1
90029c60:	4611      	mov	r1, r2
90029c62:	2200      	movs	r2, #0
90029c64:	602a      	str	r2, [r5, #0]
90029c66:	461a      	mov	r2, r3
90029c68:	f7da fc6a 	bl	90004540 <_read>
90029c6c:	1c43      	adds	r3, r0, #1
90029c6e:	d102      	bne.n	90029c76 <_read_r+0x1e>
90029c70:	682b      	ldr	r3, [r5, #0]
90029c72:	b103      	cbz	r3, 90029c76 <_read_r+0x1e>
90029c74:	6023      	str	r3, [r4, #0]
90029c76:	bd38      	pop	{r3, r4, r5, pc}
90029c78:	2402252c 	.word	0x2402252c

90029c7c <_kill_r>:
90029c7c:	b538      	push	{r3, r4, r5, lr}
90029c7e:	4d07      	ldr	r5, [pc, #28]	@ (90029c9c <_kill_r+0x20>)
90029c80:	2300      	movs	r3, #0
90029c82:	4604      	mov	r4, r0
90029c84:	4608      	mov	r0, r1
90029c86:	4611      	mov	r1, r2
90029c88:	602b      	str	r3, [r5, #0]
90029c8a:	f7da fc49 	bl	90004520 <_kill>
90029c8e:	1c43      	adds	r3, r0, #1
90029c90:	d102      	bne.n	90029c98 <_kill_r+0x1c>
90029c92:	682b      	ldr	r3, [r5, #0]
90029c94:	b103      	cbz	r3, 90029c98 <_kill_r+0x1c>
90029c96:	6023      	str	r3, [r4, #0]
90029c98:	bd38      	pop	{r3, r4, r5, pc}
90029c9a:	bf00      	nop
90029c9c:	2402252c 	.word	0x2402252c

90029ca0 <_getpid_r>:
90029ca0:	f7da bc3c 	b.w	9000451c <_getpid>

90029ca4 <_sbrk_r>:
90029ca4:	b538      	push	{r3, r4, r5, lr}
90029ca6:	4d06      	ldr	r5, [pc, #24]	@ (90029cc0 <_sbrk_r+0x1c>)
90029ca8:	2300      	movs	r3, #0
90029caa:	4604      	mov	r4, r0
90029cac:	4608      	mov	r0, r1
90029cae:	602b      	str	r3, [r5, #0]
90029cb0:	f7da fc70 	bl	90004594 <_sbrk>
90029cb4:	1c43      	adds	r3, r0, #1
90029cb6:	d102      	bne.n	90029cbe <_sbrk_r+0x1a>
90029cb8:	682b      	ldr	r3, [r5, #0]
90029cba:	b103      	cbz	r3, 90029cbe <_sbrk_r+0x1a>
90029cbc:	6023      	str	r3, [r4, #0]
90029cbe:	bd38      	pop	{r3, r4, r5, pc}
90029cc0:	2402252c 	.word	0x2402252c

90029cc4 <_write_r>:
90029cc4:	b538      	push	{r3, r4, r5, lr}
90029cc6:	4d07      	ldr	r5, [pc, #28]	@ (90029ce4 <_write_r+0x20>)
90029cc8:	4604      	mov	r4, r0
90029cca:	4608      	mov	r0, r1
90029ccc:	4611      	mov	r1, r2
90029cce:	2200      	movs	r2, #0
90029cd0:	602a      	str	r2, [r5, #0]
90029cd2:	461a      	mov	r2, r3
90029cd4:	f7da fc42 	bl	9000455c <_write>
90029cd8:	1c43      	adds	r3, r0, #1
90029cda:	d102      	bne.n	90029ce2 <_write_r+0x1e>
90029cdc:	682b      	ldr	r3, [r5, #0]
90029cde:	b103      	cbz	r3, 90029ce2 <_write_r+0x1e>
90029ce0:	6023      	str	r3, [r4, #0]
90029ce2:	bd38      	pop	{r3, r4, r5, pc}
90029ce4:	2402252c 	.word	0x2402252c

90029ce8 <__errno>:
90029ce8:	4b01      	ldr	r3, [pc, #4]	@ (90029cf0 <__errno+0x8>)
90029cea:	6818      	ldr	r0, [r3, #0]
90029cec:	4770      	bx	lr
90029cee:	bf00      	nop
90029cf0:	24000114 	.word	0x24000114

90029cf4 <__libc_init_array>:
90029cf4:	b570      	push	{r4, r5, r6, lr}
90029cf6:	4d0d      	ldr	r5, [pc, #52]	@ (90029d2c <__libc_init_array+0x38>)
90029cf8:	4c0d      	ldr	r4, [pc, #52]	@ (90029d30 <__libc_init_array+0x3c>)
90029cfa:	1b64      	subs	r4, r4, r5
90029cfc:	10a4      	asrs	r4, r4, #2
90029cfe:	2600      	movs	r6, #0
90029d00:	42a6      	cmp	r6, r4
90029d02:	d109      	bne.n	90029d18 <__libc_init_array+0x24>
90029d04:	4d0b      	ldr	r5, [pc, #44]	@ (90029d34 <__libc_init_array+0x40>)
90029d06:	4c0c      	ldr	r4, [pc, #48]	@ (90029d38 <__libc_init_array+0x44>)
90029d08:	f000 fcce 	bl	9002a6a8 <_init>
90029d0c:	1b64      	subs	r4, r4, r5
90029d0e:	10a4      	asrs	r4, r4, #2
90029d10:	2600      	movs	r6, #0
90029d12:	42a6      	cmp	r6, r4
90029d14:	d105      	bne.n	90029d22 <__libc_init_array+0x2e>
90029d16:	bd70      	pop	{r4, r5, r6, pc}
90029d18:	f855 3b04 	ldr.w	r3, [r5], #4
90029d1c:	4798      	blx	r3
90029d1e:	3601      	adds	r6, #1
90029d20:	e7ee      	b.n	90029d00 <__libc_init_array+0xc>
90029d22:	f855 3b04 	ldr.w	r3, [r5], #4
90029d26:	4798      	blx	r3
90029d28:	3601      	adds	r6, #1
90029d2a:	e7f2      	b.n	90029d12 <__libc_init_array+0x1e>
90029d2c:	9002dccc 	.word	0x9002dccc
90029d30:	9002dccc 	.word	0x9002dccc
90029d34:	9002dccc 	.word	0x9002dccc
90029d38:	9002dce4 	.word	0x9002dce4

90029d3c <__retarget_lock_init_recursive>:
90029d3c:	4770      	bx	lr

90029d3e <__retarget_lock_acquire_recursive>:
90029d3e:	4770      	bx	lr

90029d40 <__retarget_lock_release_recursive>:
90029d40:	4770      	bx	lr

90029d42 <memcpy>:
90029d42:	440a      	add	r2, r1
90029d44:	4291      	cmp	r1, r2
90029d46:	f100 33ff 	add.w	r3, r0, #4294967295
90029d4a:	d100      	bne.n	90029d4e <memcpy+0xc>
90029d4c:	4770      	bx	lr
90029d4e:	b510      	push	{r4, lr}
90029d50:	f811 4b01 	ldrb.w	r4, [r1], #1
90029d54:	f803 4f01 	strb.w	r4, [r3, #1]!
90029d58:	4291      	cmp	r1, r2
90029d5a:	d1f9      	bne.n	90029d50 <memcpy+0xe>
90029d5c:	bd10      	pop	{r4, pc}
	...

90029d60 <__register_exitproc>:
90029d60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029d64:	4d27      	ldr	r5, [pc, #156]	@ (90029e04 <__register_exitproc+0xa4>)
90029d66:	4607      	mov	r7, r0
90029d68:	6828      	ldr	r0, [r5, #0]
90029d6a:	4691      	mov	r9, r2
90029d6c:	460e      	mov	r6, r1
90029d6e:	4698      	mov	r8, r3
90029d70:	f7ff ffe5 	bl	90029d3e <__retarget_lock_acquire_recursive>
90029d74:	4a24      	ldr	r2, [pc, #144]	@ (90029e08 <__register_exitproc+0xa8>)
90029d76:	6814      	ldr	r4, [r2, #0]
90029d78:	b93c      	cbnz	r4, 90029d8a <__register_exitproc+0x2a>
90029d7a:	4b24      	ldr	r3, [pc, #144]	@ (90029e0c <__register_exitproc+0xac>)
90029d7c:	6013      	str	r3, [r2, #0]
90029d7e:	4a24      	ldr	r2, [pc, #144]	@ (90029e10 <__register_exitproc+0xb0>)
90029d80:	b112      	cbz	r2, 90029d88 <__register_exitproc+0x28>
90029d82:	6812      	ldr	r2, [r2, #0]
90029d84:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90029d88:	4c20      	ldr	r4, [pc, #128]	@ (90029e0c <__register_exitproc+0xac>)
90029d8a:	6863      	ldr	r3, [r4, #4]
90029d8c:	2b1f      	cmp	r3, #31
90029d8e:	dd06      	ble.n	90029d9e <__register_exitproc+0x3e>
90029d90:	6828      	ldr	r0, [r5, #0]
90029d92:	f7ff ffd5 	bl	90029d40 <__retarget_lock_release_recursive>
90029d96:	f04f 30ff 	mov.w	r0, #4294967295
90029d9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029d9e:	b32f      	cbz	r7, 90029dec <__register_exitproc+0x8c>
90029da0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90029da4:	b968      	cbnz	r0, 90029dc2 <__register_exitproc+0x62>
90029da6:	4b1b      	ldr	r3, [pc, #108]	@ (90029e14 <__register_exitproc+0xb4>)
90029da8:	2b00      	cmp	r3, #0
90029daa:	d0f1      	beq.n	90029d90 <__register_exitproc+0x30>
90029dac:	f44f 7084 	mov.w	r0, #264	@ 0x108
90029db0:	f7ff fc6e 	bl	90029690 <malloc>
90029db4:	2800      	cmp	r0, #0
90029db6:	d0eb      	beq.n	90029d90 <__register_exitproc+0x30>
90029db8:	2300      	movs	r3, #0
90029dba:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
90029dbe:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90029dc2:	6863      	ldr	r3, [r4, #4]
90029dc4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90029dc8:	2201      	movs	r2, #1
90029dca:	409a      	lsls	r2, r3
90029dcc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90029dd0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90029dd4:	4313      	orrs	r3, r2
90029dd6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
90029dda:	2f02      	cmp	r7, #2
90029ddc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90029de0:	bf02      	ittt	eq
90029de2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90029de6:	4313      	orreq	r3, r2
90029de8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
90029dec:	6863      	ldr	r3, [r4, #4]
90029dee:	6828      	ldr	r0, [r5, #0]
90029df0:	1c5a      	adds	r2, r3, #1
90029df2:	3302      	adds	r3, #2
90029df4:	6062      	str	r2, [r4, #4]
90029df6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
90029dfa:	f7ff ffa1 	bl	90029d40 <__retarget_lock_release_recursive>
90029dfe:	2000      	movs	r0, #0
90029e00:	e7cb      	b.n	90029d9a <__register_exitproc+0x3a>
90029e02:	bf00      	nop
90029e04:	24000164 	.word	0x24000164
90029e08:	240225c0 	.word	0x240225c0
90029e0c:	24022534 	.word	0x24022534
90029e10:	9002dc98 	.word	0x9002dc98
90029e14:	90029691 	.word	0x90029691

90029e18 <_free_r>:
90029e18:	b538      	push	{r3, r4, r5, lr}
90029e1a:	4605      	mov	r5, r0
90029e1c:	2900      	cmp	r1, #0
90029e1e:	d041      	beq.n	90029ea4 <_free_r+0x8c>
90029e20:	f851 3c04 	ldr.w	r3, [r1, #-4]
90029e24:	1f0c      	subs	r4, r1, #4
90029e26:	2b00      	cmp	r3, #0
90029e28:	bfb8      	it	lt
90029e2a:	18e4      	addlt	r4, r4, r3
90029e2c:	f7ff fce2 	bl	900297f4 <__malloc_lock>
90029e30:	4a1d      	ldr	r2, [pc, #116]	@ (90029ea8 <_free_r+0x90>)
90029e32:	6813      	ldr	r3, [r2, #0]
90029e34:	b933      	cbnz	r3, 90029e44 <_free_r+0x2c>
90029e36:	6063      	str	r3, [r4, #4]
90029e38:	6014      	str	r4, [r2, #0]
90029e3a:	4628      	mov	r0, r5
90029e3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029e40:	f7ff bcde 	b.w	90029800 <__malloc_unlock>
90029e44:	42a3      	cmp	r3, r4
90029e46:	d908      	bls.n	90029e5a <_free_r+0x42>
90029e48:	6820      	ldr	r0, [r4, #0]
90029e4a:	1821      	adds	r1, r4, r0
90029e4c:	428b      	cmp	r3, r1
90029e4e:	bf01      	itttt	eq
90029e50:	6819      	ldreq	r1, [r3, #0]
90029e52:	685b      	ldreq	r3, [r3, #4]
90029e54:	1809      	addeq	r1, r1, r0
90029e56:	6021      	streq	r1, [r4, #0]
90029e58:	e7ed      	b.n	90029e36 <_free_r+0x1e>
90029e5a:	461a      	mov	r2, r3
90029e5c:	685b      	ldr	r3, [r3, #4]
90029e5e:	b10b      	cbz	r3, 90029e64 <_free_r+0x4c>
90029e60:	42a3      	cmp	r3, r4
90029e62:	d9fa      	bls.n	90029e5a <_free_r+0x42>
90029e64:	6811      	ldr	r1, [r2, #0]
90029e66:	1850      	adds	r0, r2, r1
90029e68:	42a0      	cmp	r0, r4
90029e6a:	d10b      	bne.n	90029e84 <_free_r+0x6c>
90029e6c:	6820      	ldr	r0, [r4, #0]
90029e6e:	4401      	add	r1, r0
90029e70:	1850      	adds	r0, r2, r1
90029e72:	4283      	cmp	r3, r0
90029e74:	6011      	str	r1, [r2, #0]
90029e76:	d1e0      	bne.n	90029e3a <_free_r+0x22>
90029e78:	6818      	ldr	r0, [r3, #0]
90029e7a:	685b      	ldr	r3, [r3, #4]
90029e7c:	6053      	str	r3, [r2, #4]
90029e7e:	4408      	add	r0, r1
90029e80:	6010      	str	r0, [r2, #0]
90029e82:	e7da      	b.n	90029e3a <_free_r+0x22>
90029e84:	d902      	bls.n	90029e8c <_free_r+0x74>
90029e86:	230c      	movs	r3, #12
90029e88:	602b      	str	r3, [r5, #0]
90029e8a:	e7d6      	b.n	90029e3a <_free_r+0x22>
90029e8c:	6820      	ldr	r0, [r4, #0]
90029e8e:	1821      	adds	r1, r4, r0
90029e90:	428b      	cmp	r3, r1
90029e92:	bf04      	itt	eq
90029e94:	6819      	ldreq	r1, [r3, #0]
90029e96:	685b      	ldreq	r3, [r3, #4]
90029e98:	6063      	str	r3, [r4, #4]
90029e9a:	bf04      	itt	eq
90029e9c:	1809      	addeq	r1, r1, r0
90029e9e:	6021      	streq	r1, [r4, #0]
90029ea0:	6054      	str	r4, [r2, #4]
90029ea2:	e7ca      	b.n	90029e3a <_free_r+0x22>
90029ea4:	bd38      	pop	{r3, r4, r5, pc}
90029ea6:	bf00      	nop
90029ea8:	240223ec 	.word	0x240223ec

90029eac <__sfputc_r>:
90029eac:	6893      	ldr	r3, [r2, #8]
90029eae:	3b01      	subs	r3, #1
90029eb0:	2b00      	cmp	r3, #0
90029eb2:	b410      	push	{r4}
90029eb4:	6093      	str	r3, [r2, #8]
90029eb6:	da08      	bge.n	90029eca <__sfputc_r+0x1e>
90029eb8:	6994      	ldr	r4, [r2, #24]
90029eba:	42a3      	cmp	r3, r4
90029ebc:	db01      	blt.n	90029ec2 <__sfputc_r+0x16>
90029ebe:	290a      	cmp	r1, #10
90029ec0:	d103      	bne.n	90029eca <__sfputc_r+0x1e>
90029ec2:	f85d 4b04 	ldr.w	r4, [sp], #4
90029ec6:	f7ff bdc6 	b.w	90029a56 <__swbuf_r>
90029eca:	6813      	ldr	r3, [r2, #0]
90029ecc:	1c58      	adds	r0, r3, #1
90029ece:	6010      	str	r0, [r2, #0]
90029ed0:	7019      	strb	r1, [r3, #0]
90029ed2:	4608      	mov	r0, r1
90029ed4:	f85d 4b04 	ldr.w	r4, [sp], #4
90029ed8:	4770      	bx	lr

90029eda <__sfputs_r>:
90029eda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029edc:	4606      	mov	r6, r0
90029ede:	460f      	mov	r7, r1
90029ee0:	4614      	mov	r4, r2
90029ee2:	18d5      	adds	r5, r2, r3
90029ee4:	42ac      	cmp	r4, r5
90029ee6:	d101      	bne.n	90029eec <__sfputs_r+0x12>
90029ee8:	2000      	movs	r0, #0
90029eea:	e007      	b.n	90029efc <__sfputs_r+0x22>
90029eec:	f814 1b01 	ldrb.w	r1, [r4], #1
90029ef0:	463a      	mov	r2, r7
90029ef2:	4630      	mov	r0, r6
90029ef4:	f7ff ffda 	bl	90029eac <__sfputc_r>
90029ef8:	1c43      	adds	r3, r0, #1
90029efa:	d1f3      	bne.n	90029ee4 <__sfputs_r+0xa>
90029efc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90029f00 <_vfiprintf_r>:
90029f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029f04:	460d      	mov	r5, r1
90029f06:	b09d      	sub	sp, #116	@ 0x74
90029f08:	4614      	mov	r4, r2
90029f0a:	4698      	mov	r8, r3
90029f0c:	4606      	mov	r6, r0
90029f0e:	b118      	cbz	r0, 90029f18 <_vfiprintf_r+0x18>
90029f10:	6a03      	ldr	r3, [r0, #32]
90029f12:	b90b      	cbnz	r3, 90029f18 <_vfiprintf_r+0x18>
90029f14:	f7ff fd14 	bl	90029940 <__sinit>
90029f18:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90029f1a:	07d9      	lsls	r1, r3, #31
90029f1c:	d405      	bmi.n	90029f2a <_vfiprintf_r+0x2a>
90029f1e:	89ab      	ldrh	r3, [r5, #12]
90029f20:	059a      	lsls	r2, r3, #22
90029f22:	d402      	bmi.n	90029f2a <_vfiprintf_r+0x2a>
90029f24:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90029f26:	f7ff ff0a 	bl	90029d3e <__retarget_lock_acquire_recursive>
90029f2a:	89ab      	ldrh	r3, [r5, #12]
90029f2c:	071b      	lsls	r3, r3, #28
90029f2e:	d501      	bpl.n	90029f34 <_vfiprintf_r+0x34>
90029f30:	692b      	ldr	r3, [r5, #16]
90029f32:	b99b      	cbnz	r3, 90029f5c <_vfiprintf_r+0x5c>
90029f34:	4629      	mov	r1, r5
90029f36:	4630      	mov	r0, r6
90029f38:	f7ff fdcc 	bl	90029ad4 <__swsetup_r>
90029f3c:	b170      	cbz	r0, 90029f5c <_vfiprintf_r+0x5c>
90029f3e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90029f40:	07dc      	lsls	r4, r3, #31
90029f42:	d504      	bpl.n	90029f4e <_vfiprintf_r+0x4e>
90029f44:	f04f 30ff 	mov.w	r0, #4294967295
90029f48:	b01d      	add	sp, #116	@ 0x74
90029f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029f4e:	89ab      	ldrh	r3, [r5, #12]
90029f50:	0598      	lsls	r0, r3, #22
90029f52:	d4f7      	bmi.n	90029f44 <_vfiprintf_r+0x44>
90029f54:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90029f56:	f7ff fef3 	bl	90029d40 <__retarget_lock_release_recursive>
90029f5a:	e7f3      	b.n	90029f44 <_vfiprintf_r+0x44>
90029f5c:	2300      	movs	r3, #0
90029f5e:	9309      	str	r3, [sp, #36]	@ 0x24
90029f60:	2320      	movs	r3, #32
90029f62:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90029f66:	f8cd 800c 	str.w	r8, [sp, #12]
90029f6a:	2330      	movs	r3, #48	@ 0x30
90029f6c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002a11c <_vfiprintf_r+0x21c>
90029f70:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
90029f74:	f04f 0901 	mov.w	r9, #1
90029f78:	4623      	mov	r3, r4
90029f7a:	469a      	mov	sl, r3
90029f7c:	f813 2b01 	ldrb.w	r2, [r3], #1
90029f80:	b10a      	cbz	r2, 90029f86 <_vfiprintf_r+0x86>
90029f82:	2a25      	cmp	r2, #37	@ 0x25
90029f84:	d1f9      	bne.n	90029f7a <_vfiprintf_r+0x7a>
90029f86:	ebba 0b04 	subs.w	fp, sl, r4
90029f8a:	d00b      	beq.n	90029fa4 <_vfiprintf_r+0xa4>
90029f8c:	465b      	mov	r3, fp
90029f8e:	4622      	mov	r2, r4
90029f90:	4629      	mov	r1, r5
90029f92:	4630      	mov	r0, r6
90029f94:	f7ff ffa1 	bl	90029eda <__sfputs_r>
90029f98:	3001      	adds	r0, #1
90029f9a:	f000 80a7 	beq.w	9002a0ec <_vfiprintf_r+0x1ec>
90029f9e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90029fa0:	445a      	add	r2, fp
90029fa2:	9209      	str	r2, [sp, #36]	@ 0x24
90029fa4:	f89a 3000 	ldrb.w	r3, [sl]
90029fa8:	2b00      	cmp	r3, #0
90029faa:	f000 809f 	beq.w	9002a0ec <_vfiprintf_r+0x1ec>
90029fae:	2300      	movs	r3, #0
90029fb0:	f04f 32ff 	mov.w	r2, #4294967295
90029fb4:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029fb8:	f10a 0a01 	add.w	sl, sl, #1
90029fbc:	9304      	str	r3, [sp, #16]
90029fbe:	9307      	str	r3, [sp, #28]
90029fc0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
90029fc4:	931a      	str	r3, [sp, #104]	@ 0x68
90029fc6:	4654      	mov	r4, sl
90029fc8:	2205      	movs	r2, #5
90029fca:	f814 1b01 	ldrb.w	r1, [r4], #1
90029fce:	4853      	ldr	r0, [pc, #332]	@ (9002a11c <_vfiprintf_r+0x21c>)
90029fd0:	f7d6 f986 	bl	900002e0 <memchr>
90029fd4:	9a04      	ldr	r2, [sp, #16]
90029fd6:	b9d8      	cbnz	r0, 9002a010 <_vfiprintf_r+0x110>
90029fd8:	06d1      	lsls	r1, r2, #27
90029fda:	bf44      	itt	mi
90029fdc:	2320      	movmi	r3, #32
90029fde:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90029fe2:	0713      	lsls	r3, r2, #28
90029fe4:	bf44      	itt	mi
90029fe6:	232b      	movmi	r3, #43	@ 0x2b
90029fe8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90029fec:	f89a 3000 	ldrb.w	r3, [sl]
90029ff0:	2b2a      	cmp	r3, #42	@ 0x2a
90029ff2:	d015      	beq.n	9002a020 <_vfiprintf_r+0x120>
90029ff4:	9a07      	ldr	r2, [sp, #28]
90029ff6:	4654      	mov	r4, sl
90029ff8:	2000      	movs	r0, #0
90029ffa:	f04f 0c0a 	mov.w	ip, #10
90029ffe:	4621      	mov	r1, r4
9002a000:	f811 3b01 	ldrb.w	r3, [r1], #1
9002a004:	3b30      	subs	r3, #48	@ 0x30
9002a006:	2b09      	cmp	r3, #9
9002a008:	d94b      	bls.n	9002a0a2 <_vfiprintf_r+0x1a2>
9002a00a:	b1b0      	cbz	r0, 9002a03a <_vfiprintf_r+0x13a>
9002a00c:	9207      	str	r2, [sp, #28]
9002a00e:	e014      	b.n	9002a03a <_vfiprintf_r+0x13a>
9002a010:	eba0 0308 	sub.w	r3, r0, r8
9002a014:	fa09 f303 	lsl.w	r3, r9, r3
9002a018:	4313      	orrs	r3, r2
9002a01a:	9304      	str	r3, [sp, #16]
9002a01c:	46a2      	mov	sl, r4
9002a01e:	e7d2      	b.n	90029fc6 <_vfiprintf_r+0xc6>
9002a020:	9b03      	ldr	r3, [sp, #12]
9002a022:	1d19      	adds	r1, r3, #4
9002a024:	681b      	ldr	r3, [r3, #0]
9002a026:	9103      	str	r1, [sp, #12]
9002a028:	2b00      	cmp	r3, #0
9002a02a:	bfbb      	ittet	lt
9002a02c:	425b      	neglt	r3, r3
9002a02e:	f042 0202 	orrlt.w	r2, r2, #2
9002a032:	9307      	strge	r3, [sp, #28]
9002a034:	9307      	strlt	r3, [sp, #28]
9002a036:	bfb8      	it	lt
9002a038:	9204      	strlt	r2, [sp, #16]
9002a03a:	7823      	ldrb	r3, [r4, #0]
9002a03c:	2b2e      	cmp	r3, #46	@ 0x2e
9002a03e:	d10a      	bne.n	9002a056 <_vfiprintf_r+0x156>
9002a040:	7863      	ldrb	r3, [r4, #1]
9002a042:	2b2a      	cmp	r3, #42	@ 0x2a
9002a044:	d132      	bne.n	9002a0ac <_vfiprintf_r+0x1ac>
9002a046:	9b03      	ldr	r3, [sp, #12]
9002a048:	1d1a      	adds	r2, r3, #4
9002a04a:	681b      	ldr	r3, [r3, #0]
9002a04c:	9203      	str	r2, [sp, #12]
9002a04e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002a052:	3402      	adds	r4, #2
9002a054:	9305      	str	r3, [sp, #20]
9002a056:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002a12c <_vfiprintf_r+0x22c>
9002a05a:	7821      	ldrb	r1, [r4, #0]
9002a05c:	2203      	movs	r2, #3
9002a05e:	4650      	mov	r0, sl
9002a060:	f7d6 f93e 	bl	900002e0 <memchr>
9002a064:	b138      	cbz	r0, 9002a076 <_vfiprintf_r+0x176>
9002a066:	9b04      	ldr	r3, [sp, #16]
9002a068:	eba0 000a 	sub.w	r0, r0, sl
9002a06c:	2240      	movs	r2, #64	@ 0x40
9002a06e:	4082      	lsls	r2, r0
9002a070:	4313      	orrs	r3, r2
9002a072:	3401      	adds	r4, #1
9002a074:	9304      	str	r3, [sp, #16]
9002a076:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a07a:	4829      	ldr	r0, [pc, #164]	@ (9002a120 <_vfiprintf_r+0x220>)
9002a07c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002a080:	2206      	movs	r2, #6
9002a082:	f7d6 f92d 	bl	900002e0 <memchr>
9002a086:	2800      	cmp	r0, #0
9002a088:	d03f      	beq.n	9002a10a <_vfiprintf_r+0x20a>
9002a08a:	4b26      	ldr	r3, [pc, #152]	@ (9002a124 <_vfiprintf_r+0x224>)
9002a08c:	bb1b      	cbnz	r3, 9002a0d6 <_vfiprintf_r+0x1d6>
9002a08e:	9b03      	ldr	r3, [sp, #12]
9002a090:	3307      	adds	r3, #7
9002a092:	f023 0307 	bic.w	r3, r3, #7
9002a096:	3308      	adds	r3, #8
9002a098:	9303      	str	r3, [sp, #12]
9002a09a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a09c:	443b      	add	r3, r7
9002a09e:	9309      	str	r3, [sp, #36]	@ 0x24
9002a0a0:	e76a      	b.n	90029f78 <_vfiprintf_r+0x78>
9002a0a2:	fb0c 3202 	mla	r2, ip, r2, r3
9002a0a6:	460c      	mov	r4, r1
9002a0a8:	2001      	movs	r0, #1
9002a0aa:	e7a8      	b.n	90029ffe <_vfiprintf_r+0xfe>
9002a0ac:	2300      	movs	r3, #0
9002a0ae:	3401      	adds	r4, #1
9002a0b0:	9305      	str	r3, [sp, #20]
9002a0b2:	4619      	mov	r1, r3
9002a0b4:	f04f 0c0a 	mov.w	ip, #10
9002a0b8:	4620      	mov	r0, r4
9002a0ba:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a0be:	3a30      	subs	r2, #48	@ 0x30
9002a0c0:	2a09      	cmp	r2, #9
9002a0c2:	d903      	bls.n	9002a0cc <_vfiprintf_r+0x1cc>
9002a0c4:	2b00      	cmp	r3, #0
9002a0c6:	d0c6      	beq.n	9002a056 <_vfiprintf_r+0x156>
9002a0c8:	9105      	str	r1, [sp, #20]
9002a0ca:	e7c4      	b.n	9002a056 <_vfiprintf_r+0x156>
9002a0cc:	fb0c 2101 	mla	r1, ip, r1, r2
9002a0d0:	4604      	mov	r4, r0
9002a0d2:	2301      	movs	r3, #1
9002a0d4:	e7f0      	b.n	9002a0b8 <_vfiprintf_r+0x1b8>
9002a0d6:	ab03      	add	r3, sp, #12
9002a0d8:	9300      	str	r3, [sp, #0]
9002a0da:	462a      	mov	r2, r5
9002a0dc:	4b12      	ldr	r3, [pc, #72]	@ (9002a128 <_vfiprintf_r+0x228>)
9002a0de:	a904      	add	r1, sp, #16
9002a0e0:	4630      	mov	r0, r6
9002a0e2:	f3af 8000 	nop.w
9002a0e6:	4607      	mov	r7, r0
9002a0e8:	1c78      	adds	r0, r7, #1
9002a0ea:	d1d6      	bne.n	9002a09a <_vfiprintf_r+0x19a>
9002a0ec:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a0ee:	07d9      	lsls	r1, r3, #31
9002a0f0:	d405      	bmi.n	9002a0fe <_vfiprintf_r+0x1fe>
9002a0f2:	89ab      	ldrh	r3, [r5, #12]
9002a0f4:	059a      	lsls	r2, r3, #22
9002a0f6:	d402      	bmi.n	9002a0fe <_vfiprintf_r+0x1fe>
9002a0f8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a0fa:	f7ff fe21 	bl	90029d40 <__retarget_lock_release_recursive>
9002a0fe:	89ab      	ldrh	r3, [r5, #12]
9002a100:	065b      	lsls	r3, r3, #25
9002a102:	f53f af1f 	bmi.w	90029f44 <_vfiprintf_r+0x44>
9002a106:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002a108:	e71e      	b.n	90029f48 <_vfiprintf_r+0x48>
9002a10a:	ab03      	add	r3, sp, #12
9002a10c:	9300      	str	r3, [sp, #0]
9002a10e:	462a      	mov	r2, r5
9002a110:	4b05      	ldr	r3, [pc, #20]	@ (9002a128 <_vfiprintf_r+0x228>)
9002a112:	a904      	add	r1, sp, #16
9002a114:	4630      	mov	r0, r6
9002a116:	f000 f879 	bl	9002a20c <_printf_i>
9002a11a:	e7e4      	b.n	9002a0e6 <_vfiprintf_r+0x1e6>
9002a11c:	9002dc64 	.word	0x9002dc64
9002a120:	9002dc6e 	.word	0x9002dc6e
9002a124:	00000000 	.word	0x00000000
9002a128:	90029edb 	.word	0x90029edb
9002a12c:	9002dc6a 	.word	0x9002dc6a

9002a130 <_printf_common>:
9002a130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a134:	4616      	mov	r6, r2
9002a136:	4698      	mov	r8, r3
9002a138:	688a      	ldr	r2, [r1, #8]
9002a13a:	690b      	ldr	r3, [r1, #16]
9002a13c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002a140:	4293      	cmp	r3, r2
9002a142:	bfb8      	it	lt
9002a144:	4613      	movlt	r3, r2
9002a146:	6033      	str	r3, [r6, #0]
9002a148:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002a14c:	4607      	mov	r7, r0
9002a14e:	460c      	mov	r4, r1
9002a150:	b10a      	cbz	r2, 9002a156 <_printf_common+0x26>
9002a152:	3301      	adds	r3, #1
9002a154:	6033      	str	r3, [r6, #0]
9002a156:	6823      	ldr	r3, [r4, #0]
9002a158:	0699      	lsls	r1, r3, #26
9002a15a:	bf42      	ittt	mi
9002a15c:	6833      	ldrmi	r3, [r6, #0]
9002a15e:	3302      	addmi	r3, #2
9002a160:	6033      	strmi	r3, [r6, #0]
9002a162:	6825      	ldr	r5, [r4, #0]
9002a164:	f015 0506 	ands.w	r5, r5, #6
9002a168:	d106      	bne.n	9002a178 <_printf_common+0x48>
9002a16a:	f104 0a19 	add.w	sl, r4, #25
9002a16e:	68e3      	ldr	r3, [r4, #12]
9002a170:	6832      	ldr	r2, [r6, #0]
9002a172:	1a9b      	subs	r3, r3, r2
9002a174:	42ab      	cmp	r3, r5
9002a176:	dc26      	bgt.n	9002a1c6 <_printf_common+0x96>
9002a178:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002a17c:	6822      	ldr	r2, [r4, #0]
9002a17e:	3b00      	subs	r3, #0
9002a180:	bf18      	it	ne
9002a182:	2301      	movne	r3, #1
9002a184:	0692      	lsls	r2, r2, #26
9002a186:	d42b      	bmi.n	9002a1e0 <_printf_common+0xb0>
9002a188:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002a18c:	4641      	mov	r1, r8
9002a18e:	4638      	mov	r0, r7
9002a190:	47c8      	blx	r9
9002a192:	3001      	adds	r0, #1
9002a194:	d01e      	beq.n	9002a1d4 <_printf_common+0xa4>
9002a196:	6823      	ldr	r3, [r4, #0]
9002a198:	6922      	ldr	r2, [r4, #16]
9002a19a:	f003 0306 	and.w	r3, r3, #6
9002a19e:	2b04      	cmp	r3, #4
9002a1a0:	bf02      	ittt	eq
9002a1a2:	68e5      	ldreq	r5, [r4, #12]
9002a1a4:	6833      	ldreq	r3, [r6, #0]
9002a1a6:	1aed      	subeq	r5, r5, r3
9002a1a8:	68a3      	ldr	r3, [r4, #8]
9002a1aa:	bf0c      	ite	eq
9002a1ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002a1b0:	2500      	movne	r5, #0
9002a1b2:	4293      	cmp	r3, r2
9002a1b4:	bfc4      	itt	gt
9002a1b6:	1a9b      	subgt	r3, r3, r2
9002a1b8:	18ed      	addgt	r5, r5, r3
9002a1ba:	2600      	movs	r6, #0
9002a1bc:	341a      	adds	r4, #26
9002a1be:	42b5      	cmp	r5, r6
9002a1c0:	d11a      	bne.n	9002a1f8 <_printf_common+0xc8>
9002a1c2:	2000      	movs	r0, #0
9002a1c4:	e008      	b.n	9002a1d8 <_printf_common+0xa8>
9002a1c6:	2301      	movs	r3, #1
9002a1c8:	4652      	mov	r2, sl
9002a1ca:	4641      	mov	r1, r8
9002a1cc:	4638      	mov	r0, r7
9002a1ce:	47c8      	blx	r9
9002a1d0:	3001      	adds	r0, #1
9002a1d2:	d103      	bne.n	9002a1dc <_printf_common+0xac>
9002a1d4:	f04f 30ff 	mov.w	r0, #4294967295
9002a1d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a1dc:	3501      	adds	r5, #1
9002a1de:	e7c6      	b.n	9002a16e <_printf_common+0x3e>
9002a1e0:	18e1      	adds	r1, r4, r3
9002a1e2:	1c5a      	adds	r2, r3, #1
9002a1e4:	2030      	movs	r0, #48	@ 0x30
9002a1e6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002a1ea:	4422      	add	r2, r4
9002a1ec:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002a1f0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002a1f4:	3302      	adds	r3, #2
9002a1f6:	e7c7      	b.n	9002a188 <_printf_common+0x58>
9002a1f8:	2301      	movs	r3, #1
9002a1fa:	4622      	mov	r2, r4
9002a1fc:	4641      	mov	r1, r8
9002a1fe:	4638      	mov	r0, r7
9002a200:	47c8      	blx	r9
9002a202:	3001      	adds	r0, #1
9002a204:	d0e6      	beq.n	9002a1d4 <_printf_common+0xa4>
9002a206:	3601      	adds	r6, #1
9002a208:	e7d9      	b.n	9002a1be <_printf_common+0x8e>
	...

9002a20c <_printf_i>:
9002a20c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002a210:	7e0f      	ldrb	r7, [r1, #24]
9002a212:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002a214:	2f78      	cmp	r7, #120	@ 0x78
9002a216:	4691      	mov	r9, r2
9002a218:	4680      	mov	r8, r0
9002a21a:	460c      	mov	r4, r1
9002a21c:	469a      	mov	sl, r3
9002a21e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002a222:	d807      	bhi.n	9002a234 <_printf_i+0x28>
9002a224:	2f62      	cmp	r7, #98	@ 0x62
9002a226:	d80a      	bhi.n	9002a23e <_printf_i+0x32>
9002a228:	2f00      	cmp	r7, #0
9002a22a:	f000 80d1 	beq.w	9002a3d0 <_printf_i+0x1c4>
9002a22e:	2f58      	cmp	r7, #88	@ 0x58
9002a230:	f000 80b8 	beq.w	9002a3a4 <_printf_i+0x198>
9002a234:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a238:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002a23c:	e03a      	b.n	9002a2b4 <_printf_i+0xa8>
9002a23e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002a242:	2b15      	cmp	r3, #21
9002a244:	d8f6      	bhi.n	9002a234 <_printf_i+0x28>
9002a246:	a101      	add	r1, pc, #4	@ (adr r1, 9002a24c <_printf_i+0x40>)
9002a248:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002a24c:	9002a2a5 	.word	0x9002a2a5
9002a250:	9002a2b9 	.word	0x9002a2b9
9002a254:	9002a235 	.word	0x9002a235
9002a258:	9002a235 	.word	0x9002a235
9002a25c:	9002a235 	.word	0x9002a235
9002a260:	9002a235 	.word	0x9002a235
9002a264:	9002a2b9 	.word	0x9002a2b9
9002a268:	9002a235 	.word	0x9002a235
9002a26c:	9002a235 	.word	0x9002a235
9002a270:	9002a235 	.word	0x9002a235
9002a274:	9002a235 	.word	0x9002a235
9002a278:	9002a3b7 	.word	0x9002a3b7
9002a27c:	9002a2e3 	.word	0x9002a2e3
9002a280:	9002a371 	.word	0x9002a371
9002a284:	9002a235 	.word	0x9002a235
9002a288:	9002a235 	.word	0x9002a235
9002a28c:	9002a3d9 	.word	0x9002a3d9
9002a290:	9002a235 	.word	0x9002a235
9002a294:	9002a2e3 	.word	0x9002a2e3
9002a298:	9002a235 	.word	0x9002a235
9002a29c:	9002a235 	.word	0x9002a235
9002a2a0:	9002a379 	.word	0x9002a379
9002a2a4:	6833      	ldr	r3, [r6, #0]
9002a2a6:	1d1a      	adds	r2, r3, #4
9002a2a8:	681b      	ldr	r3, [r3, #0]
9002a2aa:	6032      	str	r2, [r6, #0]
9002a2ac:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a2b0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002a2b4:	2301      	movs	r3, #1
9002a2b6:	e09c      	b.n	9002a3f2 <_printf_i+0x1e6>
9002a2b8:	6833      	ldr	r3, [r6, #0]
9002a2ba:	6820      	ldr	r0, [r4, #0]
9002a2bc:	1d19      	adds	r1, r3, #4
9002a2be:	6031      	str	r1, [r6, #0]
9002a2c0:	0606      	lsls	r6, r0, #24
9002a2c2:	d501      	bpl.n	9002a2c8 <_printf_i+0xbc>
9002a2c4:	681d      	ldr	r5, [r3, #0]
9002a2c6:	e003      	b.n	9002a2d0 <_printf_i+0xc4>
9002a2c8:	0645      	lsls	r5, r0, #25
9002a2ca:	d5fb      	bpl.n	9002a2c4 <_printf_i+0xb8>
9002a2cc:	f9b3 5000 	ldrsh.w	r5, [r3]
9002a2d0:	2d00      	cmp	r5, #0
9002a2d2:	da03      	bge.n	9002a2dc <_printf_i+0xd0>
9002a2d4:	232d      	movs	r3, #45	@ 0x2d
9002a2d6:	426d      	negs	r5, r5
9002a2d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a2dc:	4858      	ldr	r0, [pc, #352]	@ (9002a440 <_printf_i+0x234>)
9002a2de:	230a      	movs	r3, #10
9002a2e0:	e011      	b.n	9002a306 <_printf_i+0xfa>
9002a2e2:	6821      	ldr	r1, [r4, #0]
9002a2e4:	6833      	ldr	r3, [r6, #0]
9002a2e6:	0608      	lsls	r0, r1, #24
9002a2e8:	f853 5b04 	ldr.w	r5, [r3], #4
9002a2ec:	d402      	bmi.n	9002a2f4 <_printf_i+0xe8>
9002a2ee:	0649      	lsls	r1, r1, #25
9002a2f0:	bf48      	it	mi
9002a2f2:	b2ad      	uxthmi	r5, r5
9002a2f4:	2f6f      	cmp	r7, #111	@ 0x6f
9002a2f6:	4852      	ldr	r0, [pc, #328]	@ (9002a440 <_printf_i+0x234>)
9002a2f8:	6033      	str	r3, [r6, #0]
9002a2fa:	bf14      	ite	ne
9002a2fc:	230a      	movne	r3, #10
9002a2fe:	2308      	moveq	r3, #8
9002a300:	2100      	movs	r1, #0
9002a302:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002a306:	6866      	ldr	r6, [r4, #4]
9002a308:	60a6      	str	r6, [r4, #8]
9002a30a:	2e00      	cmp	r6, #0
9002a30c:	db05      	blt.n	9002a31a <_printf_i+0x10e>
9002a30e:	6821      	ldr	r1, [r4, #0]
9002a310:	432e      	orrs	r6, r5
9002a312:	f021 0104 	bic.w	r1, r1, #4
9002a316:	6021      	str	r1, [r4, #0]
9002a318:	d04b      	beq.n	9002a3b2 <_printf_i+0x1a6>
9002a31a:	4616      	mov	r6, r2
9002a31c:	fbb5 f1f3 	udiv	r1, r5, r3
9002a320:	fb03 5711 	mls	r7, r3, r1, r5
9002a324:	5dc7      	ldrb	r7, [r0, r7]
9002a326:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002a32a:	462f      	mov	r7, r5
9002a32c:	42bb      	cmp	r3, r7
9002a32e:	460d      	mov	r5, r1
9002a330:	d9f4      	bls.n	9002a31c <_printf_i+0x110>
9002a332:	2b08      	cmp	r3, #8
9002a334:	d10b      	bne.n	9002a34e <_printf_i+0x142>
9002a336:	6823      	ldr	r3, [r4, #0]
9002a338:	07df      	lsls	r7, r3, #31
9002a33a:	d508      	bpl.n	9002a34e <_printf_i+0x142>
9002a33c:	6923      	ldr	r3, [r4, #16]
9002a33e:	6861      	ldr	r1, [r4, #4]
9002a340:	4299      	cmp	r1, r3
9002a342:	bfde      	ittt	le
9002a344:	2330      	movle	r3, #48	@ 0x30
9002a346:	f806 3c01 	strble.w	r3, [r6, #-1]
9002a34a:	f106 36ff 	addle.w	r6, r6, #4294967295
9002a34e:	1b92      	subs	r2, r2, r6
9002a350:	6122      	str	r2, [r4, #16]
9002a352:	f8cd a000 	str.w	sl, [sp]
9002a356:	464b      	mov	r3, r9
9002a358:	aa03      	add	r2, sp, #12
9002a35a:	4621      	mov	r1, r4
9002a35c:	4640      	mov	r0, r8
9002a35e:	f7ff fee7 	bl	9002a130 <_printf_common>
9002a362:	3001      	adds	r0, #1
9002a364:	d14a      	bne.n	9002a3fc <_printf_i+0x1f0>
9002a366:	f04f 30ff 	mov.w	r0, #4294967295
9002a36a:	b004      	add	sp, #16
9002a36c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a370:	6823      	ldr	r3, [r4, #0]
9002a372:	f043 0320 	orr.w	r3, r3, #32
9002a376:	6023      	str	r3, [r4, #0]
9002a378:	4832      	ldr	r0, [pc, #200]	@ (9002a444 <_printf_i+0x238>)
9002a37a:	2778      	movs	r7, #120	@ 0x78
9002a37c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002a380:	6823      	ldr	r3, [r4, #0]
9002a382:	6831      	ldr	r1, [r6, #0]
9002a384:	061f      	lsls	r7, r3, #24
9002a386:	f851 5b04 	ldr.w	r5, [r1], #4
9002a38a:	d402      	bmi.n	9002a392 <_printf_i+0x186>
9002a38c:	065f      	lsls	r7, r3, #25
9002a38e:	bf48      	it	mi
9002a390:	b2ad      	uxthmi	r5, r5
9002a392:	6031      	str	r1, [r6, #0]
9002a394:	07d9      	lsls	r1, r3, #31
9002a396:	bf44      	itt	mi
9002a398:	f043 0320 	orrmi.w	r3, r3, #32
9002a39c:	6023      	strmi	r3, [r4, #0]
9002a39e:	b11d      	cbz	r5, 9002a3a8 <_printf_i+0x19c>
9002a3a0:	2310      	movs	r3, #16
9002a3a2:	e7ad      	b.n	9002a300 <_printf_i+0xf4>
9002a3a4:	4826      	ldr	r0, [pc, #152]	@ (9002a440 <_printf_i+0x234>)
9002a3a6:	e7e9      	b.n	9002a37c <_printf_i+0x170>
9002a3a8:	6823      	ldr	r3, [r4, #0]
9002a3aa:	f023 0320 	bic.w	r3, r3, #32
9002a3ae:	6023      	str	r3, [r4, #0]
9002a3b0:	e7f6      	b.n	9002a3a0 <_printf_i+0x194>
9002a3b2:	4616      	mov	r6, r2
9002a3b4:	e7bd      	b.n	9002a332 <_printf_i+0x126>
9002a3b6:	6833      	ldr	r3, [r6, #0]
9002a3b8:	6825      	ldr	r5, [r4, #0]
9002a3ba:	6961      	ldr	r1, [r4, #20]
9002a3bc:	1d18      	adds	r0, r3, #4
9002a3be:	6030      	str	r0, [r6, #0]
9002a3c0:	062e      	lsls	r6, r5, #24
9002a3c2:	681b      	ldr	r3, [r3, #0]
9002a3c4:	d501      	bpl.n	9002a3ca <_printf_i+0x1be>
9002a3c6:	6019      	str	r1, [r3, #0]
9002a3c8:	e002      	b.n	9002a3d0 <_printf_i+0x1c4>
9002a3ca:	0668      	lsls	r0, r5, #25
9002a3cc:	d5fb      	bpl.n	9002a3c6 <_printf_i+0x1ba>
9002a3ce:	8019      	strh	r1, [r3, #0]
9002a3d0:	2300      	movs	r3, #0
9002a3d2:	6123      	str	r3, [r4, #16]
9002a3d4:	4616      	mov	r6, r2
9002a3d6:	e7bc      	b.n	9002a352 <_printf_i+0x146>
9002a3d8:	6833      	ldr	r3, [r6, #0]
9002a3da:	1d1a      	adds	r2, r3, #4
9002a3dc:	6032      	str	r2, [r6, #0]
9002a3de:	681e      	ldr	r6, [r3, #0]
9002a3e0:	6862      	ldr	r2, [r4, #4]
9002a3e2:	2100      	movs	r1, #0
9002a3e4:	4630      	mov	r0, r6
9002a3e6:	f7d5 ff7b 	bl	900002e0 <memchr>
9002a3ea:	b108      	cbz	r0, 9002a3f0 <_printf_i+0x1e4>
9002a3ec:	1b80      	subs	r0, r0, r6
9002a3ee:	6060      	str	r0, [r4, #4]
9002a3f0:	6863      	ldr	r3, [r4, #4]
9002a3f2:	6123      	str	r3, [r4, #16]
9002a3f4:	2300      	movs	r3, #0
9002a3f6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a3fa:	e7aa      	b.n	9002a352 <_printf_i+0x146>
9002a3fc:	6923      	ldr	r3, [r4, #16]
9002a3fe:	4632      	mov	r2, r6
9002a400:	4649      	mov	r1, r9
9002a402:	4640      	mov	r0, r8
9002a404:	47d0      	blx	sl
9002a406:	3001      	adds	r0, #1
9002a408:	d0ad      	beq.n	9002a366 <_printf_i+0x15a>
9002a40a:	6823      	ldr	r3, [r4, #0]
9002a40c:	079b      	lsls	r3, r3, #30
9002a40e:	d413      	bmi.n	9002a438 <_printf_i+0x22c>
9002a410:	68e0      	ldr	r0, [r4, #12]
9002a412:	9b03      	ldr	r3, [sp, #12]
9002a414:	4298      	cmp	r0, r3
9002a416:	bfb8      	it	lt
9002a418:	4618      	movlt	r0, r3
9002a41a:	e7a6      	b.n	9002a36a <_printf_i+0x15e>
9002a41c:	2301      	movs	r3, #1
9002a41e:	4632      	mov	r2, r6
9002a420:	4649      	mov	r1, r9
9002a422:	4640      	mov	r0, r8
9002a424:	47d0      	blx	sl
9002a426:	3001      	adds	r0, #1
9002a428:	d09d      	beq.n	9002a366 <_printf_i+0x15a>
9002a42a:	3501      	adds	r5, #1
9002a42c:	68e3      	ldr	r3, [r4, #12]
9002a42e:	9903      	ldr	r1, [sp, #12]
9002a430:	1a5b      	subs	r3, r3, r1
9002a432:	42ab      	cmp	r3, r5
9002a434:	dcf2      	bgt.n	9002a41c <_printf_i+0x210>
9002a436:	e7eb      	b.n	9002a410 <_printf_i+0x204>
9002a438:	2500      	movs	r5, #0
9002a43a:	f104 0619 	add.w	r6, r4, #25
9002a43e:	e7f5      	b.n	9002a42c <_printf_i+0x220>
9002a440:	9002dc75 	.word	0x9002dc75
9002a444:	9002dc86 	.word	0x9002dc86

9002a448 <__sflush_r>:
9002a448:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002a44c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a450:	0716      	lsls	r6, r2, #28
9002a452:	4605      	mov	r5, r0
9002a454:	460c      	mov	r4, r1
9002a456:	d454      	bmi.n	9002a502 <__sflush_r+0xba>
9002a458:	684b      	ldr	r3, [r1, #4]
9002a45a:	2b00      	cmp	r3, #0
9002a45c:	dc02      	bgt.n	9002a464 <__sflush_r+0x1c>
9002a45e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002a460:	2b00      	cmp	r3, #0
9002a462:	dd48      	ble.n	9002a4f6 <__sflush_r+0xae>
9002a464:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a466:	2e00      	cmp	r6, #0
9002a468:	d045      	beq.n	9002a4f6 <__sflush_r+0xae>
9002a46a:	2300      	movs	r3, #0
9002a46c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002a470:	682f      	ldr	r7, [r5, #0]
9002a472:	6a21      	ldr	r1, [r4, #32]
9002a474:	602b      	str	r3, [r5, #0]
9002a476:	d030      	beq.n	9002a4da <__sflush_r+0x92>
9002a478:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002a47a:	89a3      	ldrh	r3, [r4, #12]
9002a47c:	0759      	lsls	r1, r3, #29
9002a47e:	d505      	bpl.n	9002a48c <__sflush_r+0x44>
9002a480:	6863      	ldr	r3, [r4, #4]
9002a482:	1ad2      	subs	r2, r2, r3
9002a484:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002a486:	b10b      	cbz	r3, 9002a48c <__sflush_r+0x44>
9002a488:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002a48a:	1ad2      	subs	r2, r2, r3
9002a48c:	2300      	movs	r3, #0
9002a48e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a490:	6a21      	ldr	r1, [r4, #32]
9002a492:	4628      	mov	r0, r5
9002a494:	47b0      	blx	r6
9002a496:	1c43      	adds	r3, r0, #1
9002a498:	89a3      	ldrh	r3, [r4, #12]
9002a49a:	d106      	bne.n	9002a4aa <__sflush_r+0x62>
9002a49c:	6829      	ldr	r1, [r5, #0]
9002a49e:	291d      	cmp	r1, #29
9002a4a0:	d82b      	bhi.n	9002a4fa <__sflush_r+0xb2>
9002a4a2:	4a2a      	ldr	r2, [pc, #168]	@ (9002a54c <__sflush_r+0x104>)
9002a4a4:	40ca      	lsrs	r2, r1
9002a4a6:	07d6      	lsls	r6, r2, #31
9002a4a8:	d527      	bpl.n	9002a4fa <__sflush_r+0xb2>
9002a4aa:	2200      	movs	r2, #0
9002a4ac:	6062      	str	r2, [r4, #4]
9002a4ae:	04d9      	lsls	r1, r3, #19
9002a4b0:	6922      	ldr	r2, [r4, #16]
9002a4b2:	6022      	str	r2, [r4, #0]
9002a4b4:	d504      	bpl.n	9002a4c0 <__sflush_r+0x78>
9002a4b6:	1c42      	adds	r2, r0, #1
9002a4b8:	d101      	bne.n	9002a4be <__sflush_r+0x76>
9002a4ba:	682b      	ldr	r3, [r5, #0]
9002a4bc:	b903      	cbnz	r3, 9002a4c0 <__sflush_r+0x78>
9002a4be:	6560      	str	r0, [r4, #84]	@ 0x54
9002a4c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a4c2:	602f      	str	r7, [r5, #0]
9002a4c4:	b1b9      	cbz	r1, 9002a4f6 <__sflush_r+0xae>
9002a4c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a4ca:	4299      	cmp	r1, r3
9002a4cc:	d002      	beq.n	9002a4d4 <__sflush_r+0x8c>
9002a4ce:	4628      	mov	r0, r5
9002a4d0:	f7ff fca2 	bl	90029e18 <_free_r>
9002a4d4:	2300      	movs	r3, #0
9002a4d6:	6363      	str	r3, [r4, #52]	@ 0x34
9002a4d8:	e00d      	b.n	9002a4f6 <__sflush_r+0xae>
9002a4da:	2301      	movs	r3, #1
9002a4dc:	4628      	mov	r0, r5
9002a4de:	47b0      	blx	r6
9002a4e0:	4602      	mov	r2, r0
9002a4e2:	1c50      	adds	r0, r2, #1
9002a4e4:	d1c9      	bne.n	9002a47a <__sflush_r+0x32>
9002a4e6:	682b      	ldr	r3, [r5, #0]
9002a4e8:	2b00      	cmp	r3, #0
9002a4ea:	d0c6      	beq.n	9002a47a <__sflush_r+0x32>
9002a4ec:	2b1d      	cmp	r3, #29
9002a4ee:	d001      	beq.n	9002a4f4 <__sflush_r+0xac>
9002a4f0:	2b16      	cmp	r3, #22
9002a4f2:	d11e      	bne.n	9002a532 <__sflush_r+0xea>
9002a4f4:	602f      	str	r7, [r5, #0]
9002a4f6:	2000      	movs	r0, #0
9002a4f8:	e022      	b.n	9002a540 <__sflush_r+0xf8>
9002a4fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a4fe:	b21b      	sxth	r3, r3
9002a500:	e01b      	b.n	9002a53a <__sflush_r+0xf2>
9002a502:	690f      	ldr	r7, [r1, #16]
9002a504:	2f00      	cmp	r7, #0
9002a506:	d0f6      	beq.n	9002a4f6 <__sflush_r+0xae>
9002a508:	0793      	lsls	r3, r2, #30
9002a50a:	680e      	ldr	r6, [r1, #0]
9002a50c:	bf08      	it	eq
9002a50e:	694b      	ldreq	r3, [r1, #20]
9002a510:	600f      	str	r7, [r1, #0]
9002a512:	bf18      	it	ne
9002a514:	2300      	movne	r3, #0
9002a516:	eba6 0807 	sub.w	r8, r6, r7
9002a51a:	608b      	str	r3, [r1, #8]
9002a51c:	f1b8 0f00 	cmp.w	r8, #0
9002a520:	dde9      	ble.n	9002a4f6 <__sflush_r+0xae>
9002a522:	6a21      	ldr	r1, [r4, #32]
9002a524:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002a526:	4643      	mov	r3, r8
9002a528:	463a      	mov	r2, r7
9002a52a:	4628      	mov	r0, r5
9002a52c:	47b0      	blx	r6
9002a52e:	2800      	cmp	r0, #0
9002a530:	dc08      	bgt.n	9002a544 <__sflush_r+0xfc>
9002a532:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a536:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a53a:	81a3      	strh	r3, [r4, #12]
9002a53c:	f04f 30ff 	mov.w	r0, #4294967295
9002a540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a544:	4407      	add	r7, r0
9002a546:	eba8 0800 	sub.w	r8, r8, r0
9002a54a:	e7e7      	b.n	9002a51c <__sflush_r+0xd4>
9002a54c:	20400001 	.word	0x20400001

9002a550 <_fflush_r>:
9002a550:	b538      	push	{r3, r4, r5, lr}
9002a552:	690b      	ldr	r3, [r1, #16]
9002a554:	4605      	mov	r5, r0
9002a556:	460c      	mov	r4, r1
9002a558:	b913      	cbnz	r3, 9002a560 <_fflush_r+0x10>
9002a55a:	2500      	movs	r5, #0
9002a55c:	4628      	mov	r0, r5
9002a55e:	bd38      	pop	{r3, r4, r5, pc}
9002a560:	b118      	cbz	r0, 9002a56a <_fflush_r+0x1a>
9002a562:	6a03      	ldr	r3, [r0, #32]
9002a564:	b90b      	cbnz	r3, 9002a56a <_fflush_r+0x1a>
9002a566:	f7ff f9eb 	bl	90029940 <__sinit>
9002a56a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a56e:	2b00      	cmp	r3, #0
9002a570:	d0f3      	beq.n	9002a55a <_fflush_r+0xa>
9002a572:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002a574:	07d0      	lsls	r0, r2, #31
9002a576:	d404      	bmi.n	9002a582 <_fflush_r+0x32>
9002a578:	0599      	lsls	r1, r3, #22
9002a57a:	d402      	bmi.n	9002a582 <_fflush_r+0x32>
9002a57c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002a57e:	f7ff fbde 	bl	90029d3e <__retarget_lock_acquire_recursive>
9002a582:	4628      	mov	r0, r5
9002a584:	4621      	mov	r1, r4
9002a586:	f7ff ff5f 	bl	9002a448 <__sflush_r>
9002a58a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002a58c:	07da      	lsls	r2, r3, #31
9002a58e:	4605      	mov	r5, r0
9002a590:	d4e4      	bmi.n	9002a55c <_fflush_r+0xc>
9002a592:	89a3      	ldrh	r3, [r4, #12]
9002a594:	059b      	lsls	r3, r3, #22
9002a596:	d4e1      	bmi.n	9002a55c <_fflush_r+0xc>
9002a598:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002a59a:	f7ff fbd1 	bl	90029d40 <__retarget_lock_release_recursive>
9002a59e:	e7dd      	b.n	9002a55c <_fflush_r+0xc>

9002a5a0 <__swhatbuf_r>:
9002a5a0:	b570      	push	{r4, r5, r6, lr}
9002a5a2:	460c      	mov	r4, r1
9002a5a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a5a8:	2900      	cmp	r1, #0
9002a5aa:	b096      	sub	sp, #88	@ 0x58
9002a5ac:	4615      	mov	r5, r2
9002a5ae:	461e      	mov	r6, r3
9002a5b0:	da0d      	bge.n	9002a5ce <__swhatbuf_r+0x2e>
9002a5b2:	89a3      	ldrh	r3, [r4, #12]
9002a5b4:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002a5b8:	f04f 0100 	mov.w	r1, #0
9002a5bc:	bf14      	ite	ne
9002a5be:	2340      	movne	r3, #64	@ 0x40
9002a5c0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002a5c4:	2000      	movs	r0, #0
9002a5c6:	6031      	str	r1, [r6, #0]
9002a5c8:	602b      	str	r3, [r5, #0]
9002a5ca:	b016      	add	sp, #88	@ 0x58
9002a5cc:	bd70      	pop	{r4, r5, r6, pc}
9002a5ce:	466a      	mov	r2, sp
9002a5d0:	f000 f848 	bl	9002a664 <_fstat_r>
9002a5d4:	2800      	cmp	r0, #0
9002a5d6:	dbec      	blt.n	9002a5b2 <__swhatbuf_r+0x12>
9002a5d8:	9901      	ldr	r1, [sp, #4]
9002a5da:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002a5de:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002a5e2:	4259      	negs	r1, r3
9002a5e4:	4159      	adcs	r1, r3
9002a5e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002a5ea:	e7eb      	b.n	9002a5c4 <__swhatbuf_r+0x24>

9002a5ec <__smakebuf_r>:
9002a5ec:	898b      	ldrh	r3, [r1, #12]
9002a5ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002a5f0:	079d      	lsls	r5, r3, #30
9002a5f2:	4606      	mov	r6, r0
9002a5f4:	460c      	mov	r4, r1
9002a5f6:	d507      	bpl.n	9002a608 <__smakebuf_r+0x1c>
9002a5f8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002a5fc:	6023      	str	r3, [r4, #0]
9002a5fe:	6123      	str	r3, [r4, #16]
9002a600:	2301      	movs	r3, #1
9002a602:	6163      	str	r3, [r4, #20]
9002a604:	b003      	add	sp, #12
9002a606:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002a608:	ab01      	add	r3, sp, #4
9002a60a:	466a      	mov	r2, sp
9002a60c:	f7ff ffc8 	bl	9002a5a0 <__swhatbuf_r>
9002a610:	9f00      	ldr	r7, [sp, #0]
9002a612:	4605      	mov	r5, r0
9002a614:	4639      	mov	r1, r7
9002a616:	4630      	mov	r0, r6
9002a618:	f7ff f86c 	bl	900296f4 <_malloc_r>
9002a61c:	b948      	cbnz	r0, 9002a632 <__smakebuf_r+0x46>
9002a61e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a622:	059a      	lsls	r2, r3, #22
9002a624:	d4ee      	bmi.n	9002a604 <__smakebuf_r+0x18>
9002a626:	f023 0303 	bic.w	r3, r3, #3
9002a62a:	f043 0302 	orr.w	r3, r3, #2
9002a62e:	81a3      	strh	r3, [r4, #12]
9002a630:	e7e2      	b.n	9002a5f8 <__smakebuf_r+0xc>
9002a632:	89a3      	ldrh	r3, [r4, #12]
9002a634:	6020      	str	r0, [r4, #0]
9002a636:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002a63a:	81a3      	strh	r3, [r4, #12]
9002a63c:	9b01      	ldr	r3, [sp, #4]
9002a63e:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002a642:	b15b      	cbz	r3, 9002a65c <__smakebuf_r+0x70>
9002a644:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a648:	4630      	mov	r0, r6
9002a64a:	f000 f81d 	bl	9002a688 <_isatty_r>
9002a64e:	b128      	cbz	r0, 9002a65c <__smakebuf_r+0x70>
9002a650:	89a3      	ldrh	r3, [r4, #12]
9002a652:	f023 0303 	bic.w	r3, r3, #3
9002a656:	f043 0301 	orr.w	r3, r3, #1
9002a65a:	81a3      	strh	r3, [r4, #12]
9002a65c:	89a3      	ldrh	r3, [r4, #12]
9002a65e:	431d      	orrs	r5, r3
9002a660:	81a5      	strh	r5, [r4, #12]
9002a662:	e7cf      	b.n	9002a604 <__smakebuf_r+0x18>

9002a664 <_fstat_r>:
9002a664:	b538      	push	{r3, r4, r5, lr}
9002a666:	4d07      	ldr	r5, [pc, #28]	@ (9002a684 <_fstat_r+0x20>)
9002a668:	2300      	movs	r3, #0
9002a66a:	4604      	mov	r4, r0
9002a66c:	4608      	mov	r0, r1
9002a66e:	4611      	mov	r1, r2
9002a670:	602b      	str	r3, [r5, #0]
9002a672:	f7d9 ff85 	bl	90004580 <_fstat>
9002a676:	1c43      	adds	r3, r0, #1
9002a678:	d102      	bne.n	9002a680 <_fstat_r+0x1c>
9002a67a:	682b      	ldr	r3, [r5, #0]
9002a67c:	b103      	cbz	r3, 9002a680 <_fstat_r+0x1c>
9002a67e:	6023      	str	r3, [r4, #0]
9002a680:	bd38      	pop	{r3, r4, r5, pc}
9002a682:	bf00      	nop
9002a684:	2402252c 	.word	0x2402252c

9002a688 <_isatty_r>:
9002a688:	b538      	push	{r3, r4, r5, lr}
9002a68a:	4d06      	ldr	r5, [pc, #24]	@ (9002a6a4 <_isatty_r+0x1c>)
9002a68c:	2300      	movs	r3, #0
9002a68e:	4604      	mov	r4, r0
9002a690:	4608      	mov	r0, r1
9002a692:	602b      	str	r3, [r5, #0]
9002a694:	f7d9 ff7a 	bl	9000458c <_isatty>
9002a698:	1c43      	adds	r3, r0, #1
9002a69a:	d102      	bne.n	9002a6a2 <_isatty_r+0x1a>
9002a69c:	682b      	ldr	r3, [r5, #0]
9002a69e:	b103      	cbz	r3, 9002a6a2 <_isatty_r+0x1a>
9002a6a0:	6023      	str	r3, [r4, #0]
9002a6a2:	bd38      	pop	{r3, r4, r5, pc}
9002a6a4:	2402252c 	.word	0x2402252c

9002a6a8 <_init>:
9002a6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a6aa:	bf00      	nop
9002a6ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a6ae:	bc08      	pop	{r3}
9002a6b0:	469e      	mov	lr, r3
9002a6b2:	4770      	bx	lr

9002a6b4 <_fini>:
9002a6b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a6b6:	bf00      	nop
9002a6b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a6ba:	bc08      	pop	{r3}
9002a6bc:	469e      	mov	lr, r3
9002a6be:	4770      	bx	lr
